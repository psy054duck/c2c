; ModuleID = 'tsc.c'
source_filename = "tsc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@a = common dso_local global [32000 x float] zeroinitializer, align 16
@b = common dso_local global [32000 x float] zeroinitializer, align 16
@c = common dso_local global [32000 x float] zeroinitializer, align 16
@d = common dso_local global [32000 x float] zeroinitializer, align 16
@e = common dso_local global [32000 x float] zeroinitializer, align 16
@aa = common dso_local global [256 x [256 x float]] zeroinitializer, align 16
@bb = common dso_local global [256 x [256 x float]] zeroinitializer, align 16
@cc = common dso_local global [256 x [256 x float]] zeroinitializer, align 16
@array = common dso_local global [65536 x float] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%f \0A\00", align 1
@temp = common dso_local local_unnamed_addr global float 0.000000e+00, align 4
@.str.1 = private unnamed_addr constant [6 x i8] c"s000 \00", align 1
@X = common dso_local global [32000 x float] zeroinitializer, align 16
@Y = common dso_local global [32000 x float] zeroinitializer, align 16
@Z = common dso_local global [32000 x float] zeroinitializer, align 16
@U = common dso_local global [32000 x float] zeroinitializer, align 16
@V = common dso_local global [32000 x float] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [6 x i8] c"s111 \00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"s112 \00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"s113 \00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"s114 \00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"s115 \00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"s116 \00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"s118 \00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"s119 \00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"s121 \00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"s122 \00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"s123 \00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"s124 \00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"s125 \00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"s126 \00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"s127 \00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"s128 \00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"s131 \00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"s132 \00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"s141 \00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"s151 \00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"s152 \00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"s161 \00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"s162 \00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"s171 \00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"s172 \00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"s173 \00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"s174 \00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"s175 \00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"s176 \00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"s211 \00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"s212 \00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"s221 \00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"s222 \00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"s231 \00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"s232 \00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"s233 \00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"s234 \00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"s235 \00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"s241 \00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"s242 \00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"s243 \00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"s244 \00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"s251 \00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"s252 \00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"s253 \00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"s254 \00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"s255 \00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"s256 \00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"s257 \00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"s258 \00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"s261 \00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"s271 \00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"s272 \00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"s273 \00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"s274 \00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"s275 \00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"s276 \00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"s277 \00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"s278 \00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"s279 \00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"s2710\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"s2711\00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c"s2712\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"s281 \00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"s291 \00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"s292 \00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"s293 \00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"s2101\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"s2102\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"s2111\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"s311 \00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"s312 \00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"s313 \00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"s314 \00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"s315 \00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"s316 \00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"s317 \00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"s318 \00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"s319 \00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"s3110\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"s3111\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"s3112\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"s3113\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"s321 \00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"s322 \00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c"s323 \00", align 1
@.str.88 = private unnamed_addr constant [6 x i8] c"s331 \00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"s332 \00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"s341 \00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"s342 \00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"s343 \00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"s351 \00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"s352 \00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c"s353 \00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"s411 \00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"s412 \00", align 1
@.str.98 = private unnamed_addr constant [6 x i8] c"s413 \00", align 1
@.str.99 = private unnamed_addr constant [6 x i8] c"s414 \00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"s415 \00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"s421 \00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c"s422 \00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"s423 \00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"s424 \00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"s431 \00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c"s432 \00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"s441 \00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"s442 \00", align 1
@.str.109 = private unnamed_addr constant [6 x i8] c"s443 \00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"s451 \00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"s452 \00", align 1
@.str.112 = private unnamed_addr constant [6 x i8] c"s453 \00", align 1
@.str.113 = private unnamed_addr constant [6 x i8] c"s471 \00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"s481 \00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"s482 \00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"s491 \00", align 1
@.str.117 = private unnamed_addr constant [6 x i8] c"s4112\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"s4113\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"s4114\00", align 1
@.str.120 = private unnamed_addr constant [6 x i8] c"s4115\00", align 1
@.str.121 = private unnamed_addr constant [6 x i8] c"s4116\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"s4117\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"s4121\00", align 1
@.str.124 = private unnamed_addr constant [4 x i8] c"va\09\00", align 1
@.str.125 = private unnamed_addr constant [6 x i8] c"vag  \00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"vas  \00", align 1
@.str.127 = private unnamed_addr constant [6 x i8] c"vif  \00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"vpv  \00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"vtv  \00", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c"vpvtv\00", align 1
@.str.131 = private unnamed_addr constant [6 x i8] c"vpvts\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"vpvpv\00", align 1
@.str.133 = private unnamed_addr constant [6 x i8] c"vtvtv\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"vsumr\00", align 1
@.str.135 = private unnamed_addr constant [6 x i8] c"vdotr\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"vbor \00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"S000\09 %.2f \09\09\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"S111\09 %.2f \09\09\00", align 1
@.str.139 = private unnamed_addr constant [16 x i8] c"S1111\09 %.2f \09\09 \00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"S112\09 %.2f \09\09\00", align 1
@.str.141 = private unnamed_addr constant [15 x i8] c"S112p\09 %.2f \09\09\00", align 1
@.str.142 = private unnamed_addr constant [16 x i8] c"S1112\09 %.2f \09\09 \00", align 1
@.str.143 = private unnamed_addr constant [17 x i8] c"S1112p\09 %.2f \09\09 \00", align 1
@.str.144 = private unnamed_addr constant [14 x i8] c"S113\09 %.2f \09\09\00", align 1
@.str.145 = private unnamed_addr constant [15 x i8] c"S1113\09 %.2f \09\09\00", align 1
@.str.146 = private unnamed_addr constant [14 x i8] c"S114\09 %.2f \09\09\00", align 1
@.str.147 = private unnamed_addr constant [14 x i8] c"S115\09 %.2f \09\09\00", align 1
@.str.148 = private unnamed_addr constant [15 x i8] c"S1115\09 %.2f \09\09\00", align 1
@.str.149 = private unnamed_addr constant [14 x i8] c"S116\09 %.2f \09\09\00", align 1
@.str.150 = private unnamed_addr constant [14 x i8] c"S118\09 %.2f \09\09\00", align 1
@.str.151 = private unnamed_addr constant [15 x i8] c"S119\09 %.2f \09\09 \00", align 1
@.str.152 = private unnamed_addr constant [16 x i8] c"S119p\09 %.2f \09\09 \00", align 1
@.str.153 = private unnamed_addr constant [16 x i8] c"S1119\09 %.2f \09\09 \00", align 1
@.str.154 = private unnamed_addr constant [17 x i8] c"S1119p\09 %.2f \09\09 \00", align 1
@.str.155 = private unnamed_addr constant [14 x i8] c"S121\09 %.2f \09\09\00", align 1
@.str.156 = private unnamed_addr constant [15 x i8] c"S121p\09 %.2f \09\09\00", align 1
@.str.157 = private unnamed_addr constant [14 x i8] c"S122\09 %.2f \09\09\00", align 1
@.str.158 = private unnamed_addr constant [15 x i8] c"S122p\09 %.2f \09\09\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"S123\09 %.2f \09\09\00", align 1
@.str.160 = private unnamed_addr constant [14 x i8] c"S124\09 %.2f \09\09\00", align 1
@.str.161 = private unnamed_addr constant [14 x i8] c"S125\09 %.2f \09\09\00", align 1
@.str.162 = private unnamed_addr constant [15 x i8] c"S125p\09 %.2f \09\09\00", align 1
@.str.163 = private unnamed_addr constant [14 x i8] c"S126\09 %.2f \09\09\00", align 1
@.str.164 = private unnamed_addr constant [15 x i8] c"S126p\09 %.2f \09\09\00", align 1
@.str.165 = private unnamed_addr constant [16 x i8] c"S126pp\09 %.2f \09\09\00", align 1
@.str.166 = private unnamed_addr constant [14 x i8] c"S127\09 %.2f \09\09\00", align 1
@.str.167 = private unnamed_addr constant [15 x i8] c"S127p\09 %.2f \09\09\00", align 1
@.str.168 = private unnamed_addr constant [14 x i8] c"S128\09 %.2f \09\09\00", align 1
@.str.169 = private unnamed_addr constant [15 x i8] c"S128p\09 %.2f \09\09\00", align 1
@.str.170 = private unnamed_addr constant [14 x i8] c"S131\09 %.2f \09\09\00", align 1
@.str.171 = private unnamed_addr constant [15 x i8] c"S131p\09 %.2f \09\09\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"S132\09 %.2f \09\09\00", align 1
@.str.173 = private unnamed_addr constant [15 x i8] c"S132p\09 %.2f \09\09\00", align 1
@.str.174 = private unnamed_addr constant [14 x i8] c"S141\09 %.2f \09\09\00", align 1
@.str.175 = private unnamed_addr constant [15 x i8] c"S141p\09 %.2f \09\09\00", align 1
@.str.176 = private unnamed_addr constant [14 x i8] c"S151\09 %.2f \09\09\00", align 1
@.str.177 = private unnamed_addr constant [14 x i8] c"S152\09 %.2f \09\09\00", align 1
@.str.178 = private unnamed_addr constant [14 x i8] c"S161\09 %.2f \09\09\00", align 1
@.str.179 = private unnamed_addr constant [15 x i8] c"S1161\09 %.2f \09\09\00", align 1
@.str.180 = private unnamed_addr constant [14 x i8] c"S162\09 %.2f \09\09\00", align 1
@.str.181 = private unnamed_addr constant [14 x i8] c"S171\09 %.2f \09\09\00", align 1
@.str.182 = private unnamed_addr constant [14 x i8] c"S172\09 %.2f \09\09\00", align 1
@.str.183 = private unnamed_addr constant [15 x i8] c"S172p\09 %.2f \09\09\00", align 1
@.str.184 = private unnamed_addr constant [14 x i8] c"S173\09 %.2f \09\09\00", align 1
@.str.185 = private unnamed_addr constant [14 x i8] c"S174\09 %.2f \09\09\00", align 1
@.str.186 = private unnamed_addr constant [14 x i8] c"S175\09 %.2f \09\09\00", align 1
@.str.187 = private unnamed_addr constant [14 x i8] c"S176\09 %.2f \09\09\00", align 1
@.str.188 = private unnamed_addr constant [14 x i8] c"S211\09 %.2f \09\09\00", align 1
@.str.189 = private unnamed_addr constant [15 x i8] c"S211p\09 %.2f \09\09\00", align 1
@.str.190 = private unnamed_addr constant [14 x i8] c"S212\09 %.2f \09\09\00", align 1
@.str.191 = private unnamed_addr constant [15 x i8] c"S1213\09 %.2f \09\09\00", align 1
@.str.192 = private unnamed_addr constant [14 x i8] c"S221\09 %.2f \09\09\00", align 1
@.str.193 = private unnamed_addr constant [15 x i8] c"S221p\09 %.2f \09\09\00", align 1
@.str.194 = private unnamed_addr constant [15 x i8] c"S1221\09 %.2f \09\09\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"S222\09 %.2f \09\09\00", align 1
@.str.196 = private unnamed_addr constant [15 x i8] c"S222p\09 %.2f \09\09\00", align 1
@.str.197 = private unnamed_addr constant [14 x i8] c"S231\09 %.2f \09\09\00", align 1
@.str.198 = private unnamed_addr constant [15 x i8] c"S231p\09 %.2f \09\09\00", align 1
@.str.199 = private unnamed_addr constant [16 x i8] c"S231pp\09 %.2f \09\09\00", align 1
@.str.200 = private unnamed_addr constant [17 x i8] c"S231ppp\09 %.2f \09\09\00", align 1
@.str.201 = private unnamed_addr constant [14 x i8] c"S232\09 %.2f \09\09\00", align 1
@.str.202 = private unnamed_addr constant [15 x i8] c"S1232\09 %.2f \09\09\00", align 1
@.str.203 = private unnamed_addr constant [14 x i8] c"S233\09 %.2f \09\09\00", align 1
@.str.204 = private unnamed_addr constant [15 x i8] c"S233p\09 %.2f \09\09\00", align 1
@.str.205 = private unnamed_addr constant [15 x i8] c"S2233\09 %.2f \09\09\00", align 1
@.str.206 = private unnamed_addr constant [14 x i8] c"S235\09 %.2f \09\09\00", align 1
@.str.207 = private unnamed_addr constant [14 x i8] c"S241\09 %.2f \09\09\00", align 1
@.str.208 = private unnamed_addr constant [14 x i8] c"S242\09 %.2f \09\09\00", align 1
@.str.209 = private unnamed_addr constant [14 x i8] c"S243\09 %.2f \09\09\00", align 1
@.str.210 = private unnamed_addr constant [14 x i8] c"S244\09 %.2f \09\09\00", align 1
@.str.211 = private unnamed_addr constant [15 x i8] c"S1244\09 %.2f \09\09\00", align 1
@.str.212 = private unnamed_addr constant [15 x i8] c"S2244\09 %.2f \09\09\00", align 1
@.str.213 = private unnamed_addr constant [14 x i8] c"S251\09 %.2f \09\09\00", align 1
@.str.214 = private unnamed_addr constant [15 x i8] c"S1251\09 %.2f \09\09\00", align 1
@.str.215 = private unnamed_addr constant [15 x i8] c"S2251\09 %.2f \09\09\00", align 1
@.str.216 = private unnamed_addr constant [15 x i8] c"S3251\09 %.2f \09\09\00", align 1
@.str.217 = private unnamed_addr constant [14 x i8] c"S252\09 %.2f \09\09\00", align 1
@.str.218 = private unnamed_addr constant [14 x i8] c"S253\09 %.2f \09\09\00", align 1
@.str.219 = private unnamed_addr constant [14 x i8] c"S254\09 %.2f \09\09\00", align 1
@.str.220 = private unnamed_addr constant [14 x i8] c"S255\09 %.2f \09\09\00", align 1
@.str.221 = private unnamed_addr constant [14 x i8] c"S256\09 %.2f \09\09\00", align 1
@.str.222 = private unnamed_addr constant [15 x i8] c"S256p\09 %.2f \09\09\00", align 1
@.str.223 = private unnamed_addr constant [16 x i8] c"S256pp\09 %.2f \09\09\00", align 1
@.str.224 = private unnamed_addr constant [14 x i8] c"S257\09 %.2f \09\09\00", align 1
@.str.225 = private unnamed_addr constant [14 x i8] c"S258\09 %.2f \09\09\00", align 1
@.str.226 = private unnamed_addr constant [14 x i8] c"S261\09 %.2f \09\09\00", align 1
@.str.227 = private unnamed_addr constant [14 x i8] c"S271\09 %.2f \09\09\00", align 1
@.str.228 = private unnamed_addr constant [14 x i8] c"S272\09 %.2f \09\09\00", align 1
@.str.229 = private unnamed_addr constant [14 x i8] c"S273\09 %.2f \09\09\00", align 1
@.str.230 = private unnamed_addr constant [14 x i8] c"S274\09 %.2f \09\09\00", align 1
@.str.231 = private unnamed_addr constant [14 x i8] c"S275\09 %.2f \09\09\00", align 1
@.str.232 = private unnamed_addr constant [15 x i8] c"S275p\09 %.2f \09\09\00", align 1
@.str.233 = private unnamed_addr constant [15 x i8] c"S2275\09 %.2f \09\09\00", align 1
@.str.234 = private unnamed_addr constant [16 x i8] c"S2275p\09 %.2f \09\09\00", align 1
@.str.235 = private unnamed_addr constant [14 x i8] c"S276\09 %.2f \09\09\00", align 1
@.str.236 = private unnamed_addr constant [15 x i8] c"S276p\09 %.2f \09\09\00", align 1
@.str.237 = private unnamed_addr constant [14 x i8] c"S277\09 %.2f \09\09\00", align 1
@.str.238 = private unnamed_addr constant [14 x i8] c"S278\09 %.2f \09\09\00", align 1
@.str.239 = private unnamed_addr constant [14 x i8] c"S279\09 %.2f \09\09\00", align 1
@.str.240 = private unnamed_addr constant [15 x i8] c"S1279\09 %.2f \09\09\00", align 1
@.str.241 = private unnamed_addr constant [15 x i8] c"S2710\09 %.2f \09\09\00", align 1
@.str.242 = private unnamed_addr constant [16 x i8] c"S2710p\09 %.2f \09\09\00", align 1
@.str.243 = private unnamed_addr constant [15 x i8] c"S2711\09 %.2f \09\09\00", align 1
@.str.244 = private unnamed_addr constant [15 x i8] c"S2712\09 %.2f \09\09\00", align 1
@.str.245 = private unnamed_addr constant [14 x i8] c"S281\09 %.2f \09\09\00", align 1
@.str.246 = private unnamed_addr constant [15 x i8] c"S1281\09 %.2f \09\09\00", align 1
@.str.247 = private unnamed_addr constant [14 x i8] c"S291\09 %.2f \09\09\00", align 1
@.str.248 = private unnamed_addr constant [14 x i8] c"S292\09 %.2f \09\09\00", align 1
@.str.249 = private unnamed_addr constant [14 x i8] c"S293\09 %.2f \09\09\00", align 1
@.str.250 = private unnamed_addr constant [15 x i8] c"S2101\09 %.2f \09\09\00", align 1
@.str.251 = private unnamed_addr constant [15 x i8] c"S2102\09 %.2f \09\09\00", align 1
@.str.252 = private unnamed_addr constant [16 x i8] c"S2102p\09 %.2f \09\09\00", align 1
@.str.253 = private unnamed_addr constant [15 x i8] c"S2111\09 %.2f \09\09\00", align 1
@.str.254 = private unnamed_addr constant [14 x i8] c"S311\09 %.2f \09\09\00", align 1
@.str.255 = private unnamed_addr constant [16 x i8] c"S31111\09 %.2f \09\09\00", align 1
@.str.256 = private unnamed_addr constant [14 x i8] c"S312\09 %.2f \09\09\00", align 1
@.str.257 = private unnamed_addr constant [14 x i8] c"S313\09 %.2f \09\09\00", align 1
@.str.258 = private unnamed_addr constant [14 x i8] c"S314\09 %.2f \09\09\00", align 1
@.str.259 = private unnamed_addr constant [14 x i8] c"S315\09 %.2f \09\09\00", align 1
@.str.260 = private unnamed_addr constant [14 x i8] c"S316\09 %.2f \09\09\00", align 1
@.str.261 = private unnamed_addr constant [14 x i8] c"S317\09 %.2f \09\09\00", align 1
@.str.262 = private unnamed_addr constant [14 x i8] c"S318\09 %.2f \09\09\00", align 1
@.str.263 = private unnamed_addr constant [14 x i8] c"S319\09 %.2f \09\09\00", align 1
@.str.264 = private unnamed_addr constant [15 x i8] c"S319p\09 %.2f \09\09\00", align 1
@.str.265 = private unnamed_addr constant [16 x i8] c"S319pp\09 %.2f \09\09\00", align 1
@.str.266 = private unnamed_addr constant [17 x i8] c"S319ppp\09 %.2f \09\09\00", align 1
@.str.267 = private unnamed_addr constant [15 x i8] c"S3110\09 %.2f \09\09\00", align 1
@.str.268 = private unnamed_addr constant [16 x i8] c"S13110\09 %.2f \09\09\00", align 1
@.str.269 = private unnamed_addr constant [15 x i8] c"S3111\09 %.2f \09\09\00", align 1
@.str.270 = private unnamed_addr constant [15 x i8] c"S3112\09 %.2f \09\09\00", align 1
@.str.271 = private unnamed_addr constant [15 x i8] c"S3113\09 %.2f \09\09\00", align 1
@.str.272 = private unnamed_addr constant [14 x i8] c"S321\09 %.2f \09\09\00", align 1
@.str.273 = private unnamed_addr constant [14 x i8] c"S322\09 %.2f \09\09\00", align 1
@.str.274 = private unnamed_addr constant [14 x i8] c"S323\09 %.2f \09\09\00", align 1
@.str.275 = private unnamed_addr constant [14 x i8] c"S331\09 %.2f \09\09\00", align 1
@.str.276 = private unnamed_addr constant [14 x i8] c"S332\09 %.2f \09\09\00", align 1
@.str.277 = private unnamed_addr constant [14 x i8] c"S341\09 %.2f \09\09\00", align 1
@.str.278 = private unnamed_addr constant [14 x i8] c"S342\09 %.2f \09\09\00", align 1
@.str.279 = private unnamed_addr constant [14 x i8] c"S343\09 %.2f \09\09\00", align 1
@.str.280 = private unnamed_addr constant [14 x i8] c"S351\09 %.2f \09\09\00", align 1
@.str.281 = private unnamed_addr constant [15 x i8] c"S351p\09 %.2f \09\09\00", align 1
@.str.282 = private unnamed_addr constant [15 x i8] c"S1351\09 %.2f \09\09\00", align 1
@.str.283 = private unnamed_addr constant [14 x i8] c"S352\09 %.2f \09\09\00", align 1
@.str.284 = private unnamed_addr constant [15 x i8] c"S352p\09 %.2f \09\09\00", align 1
@.str.285 = private unnamed_addr constant [14 x i8] c"S353\09 %.2f \09\09\00", align 1
@xx = common dso_local local_unnamed_addr global float* null, align 8
@yy = common dso_local local_unnamed_addr global float* null, align 8
@.str.286 = private unnamed_addr constant [14 x i8] c"S421\09 %.2f \09\09\00", align 1
@.str.287 = private unnamed_addr constant [15 x i8] c"S1421\09 %.2f \09\09\00", align 1
@.str.288 = private unnamed_addr constant [14 x i8] c"S422\09 %.2f \09\09\00", align 1
@.str.289 = private unnamed_addr constant [14 x i8] c"S423\09 %.2f \09\09\00", align 1
@.str.290 = private unnamed_addr constant [14 x i8] c"S424\09 %.2f \09\09\00", align 1
@.str.291 = private unnamed_addr constant [14 x i8] c"S431\09 %.2f \09\09\00", align 1
@.str.292 = private unnamed_addr constant [14 x i8] c"S441\09 %.2f \09\09\00", align 1
@indx = common dso_local local_unnamed_addr global [32000 x i32] zeroinitializer, align 16
@.str.293 = private unnamed_addr constant [14 x i8] c"S442\09 %.2f \09\09\00", align 1
@.str.294 = private unnamed_addr constant [14 x i8] c"S443\09 %.2f \09\09\00", align 1
@.str.295 = private unnamed_addr constant [14 x i8] c"S451\09 %.2f \09\09\00", align 1
@.str.296 = private unnamed_addr constant [14 x i8] c"S452\09 %.2f \09\09\00", align 1
@.str.297 = private unnamed_addr constant [14 x i8] c"S453\09 %.2f \09\09\00", align 1
@.str.298 = private unnamed_addr constant [15 x i8] c"S453p\09 %.2f \09\09\00", align 1
@x = common dso_local local_unnamed_addr global [32000 x float] zeroinitializer, align 16
@.str.299 = private unnamed_addr constant [14 x i8] c"S471\09 %.2f \09\09\00", align 1
@.str.300 = private unnamed_addr constant [14 x i8] c"S481\09 %.2f \09\09\00", align 1
@.str.301 = private unnamed_addr constant [14 x i8] c"S482\09 %.2f \09\09\00", align 1
@.str.302 = private unnamed_addr constant [14 x i8] c"S491\09 %.2f \09\09\00", align 1
@.str.303 = private unnamed_addr constant [15 x i8] c"S4112\09 %.2f \09\09\00", align 1
@.str.304 = private unnamed_addr constant [15 x i8] c"S4113\09 %.2f \09\09\00", align 1
@.str.305 = private unnamed_addr constant [15 x i8] c"S4114\09 %.2f \09\09\00", align 1
@.str.306 = private unnamed_addr constant [15 x i8] c"S4115\09 %.2f \09\09\00", align 1
@.str.307 = private unnamed_addr constant [15 x i8] c"S4116\09 %.2f \09\09\00", align 1
@.str.308 = private unnamed_addr constant [15 x i8] c"S4117\09 %.2f \09\09\00", align 1
@.str.309 = private unnamed_addr constant [15 x i8] c"S4121\09 %.2f \09\09\00", align 1
@.str.310 = private unnamed_addr constant [12 x i8] c"va\09 %.2f \09\09\00", align 1
@.str.311 = private unnamed_addr constant [13 x i8] c"vag\09 %.2f \09\09\00", align 1
@.str.312 = private unnamed_addr constant [13 x i8] c"vas\09 %.2f \09\09\00", align 1
@.str.313 = private unnamed_addr constant [13 x i8] c"vif\09 %.2f \09\09\00", align 1
@.str.314 = private unnamed_addr constant [13 x i8] c"vpv\09 %.2f \09\09\00", align 1
@.str.315 = private unnamed_addr constant [13 x i8] c"vtv\09 %.2f \09\09\00", align 1
@.str.316 = private unnamed_addr constant [15 x i8] c"vpvtv\09 %.2f \09\09\00", align 1
@.str.317 = private unnamed_addr constant [15 x i8] c"vpvts\09 %.2f \09\09\00", align 1
@.str.318 = private unnamed_addr constant [15 x i8] c"vpvpv\09 %.2f \09\09\00", align 1
@.str.319 = private unnamed_addr constant [15 x i8] c"vtvtv\09 %.2f \09\09\00", align 1
@.str.320 = private unnamed_addr constant [15 x i8] c"vsumr\09 %.2f \09\09\00", align 1
@.str.321 = private unnamed_addr constant [15 x i8] c"vdotr\09 %.2f \09\09\00", align 1
@.str.322 = private unnamed_addr constant [14 x i8] c"vbor\09 %.2f \09\09\00", align 1
@temp_int = common dso_local local_unnamed_addr global i32 0, align 4
@tt = common dso_local local_unnamed_addr global [256 x [256 x float]] zeroinitializer, align 16
@str = private unnamed_addr constant [29 x i8] c"Loop \09 Time(Sec) \09 Checksum \00", align 1

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define dso_local i32 @set1d(float* nocapture %0, float %1, i32 %2) local_unnamed_addr #0 {
  switch i32 %2, label %44 [
    i32 -1, label %25
    i32 -2, label %4
  ]

4:                                                ; preds = %3, %4
  %5 = phi i64 [ %22, %4 ], [ 0, %3 ]
  %6 = phi <4 x i64> [ %23, %4 ], [ <i64 0, i64 1, i64 2, i64 3>, %3 ]
  %7 = add nuw nsw <4 x i64> %6, <i64 1, i64 1, i64 1, i64 1>
  %8 = mul nuw nsw <4 x i64> %7, %7
  %9 = trunc <4 x i64> %8 to <4 x i32>
  %10 = sitofp <4 x i32> %9 to <4 x float>
  %11 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10
  %12 = getelementptr inbounds float, float* %0, i64 %5
  %13 = bitcast float* %12 to <4 x float>*
  store <4 x float> %11, <4 x float>* %13, align 4, !tbaa !2
  %14 = or i64 %5, 4
  %15 = add <4 x i64> %6, <i64 5, i64 5, i64 5, i64 5>
  %16 = mul nuw nsw <4 x i64> %15, %15
  %17 = trunc <4 x i64> %16 to <4 x i32>
  %18 = sitofp <4 x i32> %17 to <4 x float>
  %19 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %18
  %20 = getelementptr inbounds float, float* %0, i64 %14
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 4, !tbaa !2
  %22 = add nuw nsw i64 %5, 8
  %23 = add <4 x i64> %6, <i64 8, i64 8, i64 8, i64 8>
  %24 = icmp eq i64 %22, 32000
  br i1 %24, label %115, label %4, !llvm.loop !6

25:                                               ; preds = %3, %25
  %26 = phi i64 [ %41, %25 ], [ 0, %3 ]
  %27 = phi <4 x i64> [ %42, %25 ], [ <i64 0, i64 1, i64 2, i64 3>, %3 ]
  %28 = trunc <4 x i64> %27 to <4 x i32>
  %29 = add <4 x i32> %28, <i32 1, i32 1, i32 1, i32 1>
  %30 = sitofp <4 x i32> %29 to <4 x float>
  %31 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %30
  %32 = getelementptr inbounds float, float* %0, i64 %26
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> %31, <4 x float>* %33, align 4, !tbaa !2
  %34 = or i64 %26, 4
  %35 = trunc <4 x i64> %27 to <4 x i32>
  %36 = add <4 x i32> %35, <i32 5, i32 5, i32 5, i32 5>
  %37 = sitofp <4 x i32> %36 to <4 x float>
  %38 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %37
  %39 = getelementptr inbounds float, float* %0, i64 %34
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> %38, <4 x float>* %40, align 4, !tbaa !2
  %41 = add nuw nsw i64 %26, 8
  %42 = add <4 x i64> %27, <i64 8, i64 8, i64 8, i64 8>
  %43 = icmp eq i64 %41, 32000
  br i1 %43, label %115, label %25, !llvm.loop !8

44:                                               ; preds = %3
  %45 = sext i32 %2 to i64
  %46 = udiv i64 31999, %45
  %47 = add nuw nsw i64 %46, 1
  %48 = icmp eq i32 %2, 1
  br i1 %48, label %49, label %108

49:                                               ; preds = %44
  %50 = and i64 %47, 65528
  %51 = mul nsw i64 %50, %45
  %52 = insertelement <4 x float> undef, float %1, i32 0
  %53 = shufflevector <4 x float> %52, <4 x float> undef, <4 x i32> zeroinitializer
  %54 = insertelement <4 x float> undef, float %1, i32 0
  %55 = shufflevector <4 x float> %54, <4 x float> undef, <4 x i32> zeroinitializer
  %56 = add nsw i64 %50, -8
  %57 = lshr exact i64 %56, 3
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 24
  br i1 %60, label %92, label %61

61:                                               ; preds = %49
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %89, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %90, %63 ]
  %66 = mul i64 %64, %45
  %67 = getelementptr inbounds float, float* %0, i64 %66
  %68 = bitcast float* %67 to <4 x float>*
  store <4 x float> %53, <4 x float>* %68, align 4, !tbaa !2
  %69 = getelementptr inbounds float, float* %67, i64 4
  %70 = bitcast float* %69 to <4 x float>*
  store <4 x float> %55, <4 x float>* %70, align 4, !tbaa !2
  %71 = or i64 %64, 8
  %72 = mul i64 %71, %45
  %73 = getelementptr inbounds float, float* %0, i64 %72
  %74 = bitcast float* %73 to <4 x float>*
  store <4 x float> %53, <4 x float>* %74, align 4, !tbaa !2
  %75 = getelementptr inbounds float, float* %73, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  store <4 x float> %55, <4 x float>* %76, align 4, !tbaa !2
  %77 = or i64 %64, 16
  %78 = mul i64 %77, %45
  %79 = getelementptr inbounds float, float* %0, i64 %78
  %80 = bitcast float* %79 to <4 x float>*
  store <4 x float> %53, <4 x float>* %80, align 4, !tbaa !2
  %81 = getelementptr inbounds float, float* %79, i64 4
  %82 = bitcast float* %81 to <4 x float>*
  store <4 x float> %55, <4 x float>* %82, align 4, !tbaa !2
  %83 = or i64 %64, 24
  %84 = mul i64 %83, %45
  %85 = getelementptr inbounds float, float* %0, i64 %84
  %86 = bitcast float* %85 to <4 x float>*
  store <4 x float> %53, <4 x float>* %86, align 4, !tbaa !2
  %87 = getelementptr inbounds float, float* %85, i64 4
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> %55, <4 x float>* %88, align 4, !tbaa !2
  %89 = add i64 %64, 32
  %90 = add i64 %65, -4
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %63, !llvm.loop !9

92:                                               ; preds = %63, %49
  %93 = phi i64 [ 0, %49 ], [ %89, %63 ]
  %94 = icmp eq i64 %59, 0
  br i1 %94, label %106, label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %103, %95 ], [ %93, %92 ]
  %97 = phi i64 [ %104, %95 ], [ %59, %92 ]
  %98 = mul i64 %96, %45
  %99 = getelementptr inbounds float, float* %0, i64 %98
  %100 = bitcast float* %99 to <4 x float>*
  store <4 x float> %53, <4 x float>* %100, align 4, !tbaa !2
  %101 = getelementptr inbounds float, float* %99, i64 4
  %102 = bitcast float* %101 to <4 x float>*
  store <4 x float> %55, <4 x float>* %102, align 4, !tbaa !2
  %103 = add i64 %96, 8
  %104 = add i64 %97, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %95, !llvm.loop !10

106:                                              ; preds = %95, %92
  %107 = icmp eq i64 %47, %50
  br i1 %107, label %115, label %108

108:                                              ; preds = %44, %106
  %109 = phi i64 [ 0, %44 ], [ %51, %106 ]
  br label %110

110:                                              ; preds = %108, %110
  %111 = phi i64 [ %113, %110 ], [ %109, %108 ]
  %112 = getelementptr inbounds float, float* %0, i64 %111
  store float %1, float* %112, align 4, !tbaa !2
  %113 = add nsw i64 %111, %45
  %114 = icmp slt i64 %113, 32000
  br i1 %114, label %110, label %115, !llvm.loop !12

115:                                              ; preds = %4, %25, %110, %106
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define dso_local i32 @set1ds(i32 %0, float* nocapture %1, float %2, i32 %3) local_unnamed_addr #0 {
  switch i32 %3, label %45 [
    i32 -1, label %26
    i32 -2, label %5
  ]

5:                                                ; preds = %4, %5
  %6 = phi i64 [ %23, %5 ], [ 0, %4 ]
  %7 = phi <4 x i64> [ %24, %5 ], [ <i64 0, i64 1, i64 2, i64 3>, %4 ]
  %8 = add nuw nsw <4 x i64> %7, <i64 1, i64 1, i64 1, i64 1>
  %9 = mul nuw nsw <4 x i64> %8, %8
  %10 = trunc <4 x i64> %9 to <4 x i32>
  %11 = sitofp <4 x i32> %10 to <4 x float>
  %12 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11
  %13 = getelementptr inbounds float, float* %1, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  store <4 x float> %12, <4 x float>* %14, align 4, !tbaa !2
  %15 = or i64 %6, 4
  %16 = add <4 x i64> %7, <i64 5, i64 5, i64 5, i64 5>
  %17 = mul nuw nsw <4 x i64> %16, %16
  %18 = trunc <4 x i64> %17 to <4 x i32>
  %19 = sitofp <4 x i32> %18 to <4 x float>
  %20 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %19
  %21 = getelementptr inbounds float, float* %1, i64 %15
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 4, !tbaa !2
  %23 = add nuw nsw i64 %6, 8
  %24 = add <4 x i64> %7, <i64 8, i64 8, i64 8, i64 8>
  %25 = icmp eq i64 %23, 32000
  br i1 %25, label %116, label %5, !llvm.loop !13

26:                                               ; preds = %4, %26
  %27 = phi i64 [ %42, %26 ], [ 0, %4 ]
  %28 = phi <4 x i64> [ %43, %26 ], [ <i64 0, i64 1, i64 2, i64 3>, %4 ]
  %29 = trunc <4 x i64> %28 to <4 x i32>
  %30 = add <4 x i32> %29, <i32 1, i32 1, i32 1, i32 1>
  %31 = sitofp <4 x i32> %30 to <4 x float>
  %32 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %31
  %33 = getelementptr inbounds float, float* %1, i64 %27
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !2
  %35 = or i64 %27, 4
  %36 = trunc <4 x i64> %28 to <4 x i32>
  %37 = add <4 x i32> %36, <i32 5, i32 5, i32 5, i32 5>
  %38 = sitofp <4 x i32> %37 to <4 x float>
  %39 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %38
  %40 = getelementptr inbounds float, float* %1, i64 %35
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %39, <4 x float>* %41, align 4, !tbaa !2
  %42 = add nuw nsw i64 %27, 8
  %43 = add <4 x i64> %28, <i64 8, i64 8, i64 8, i64 8>
  %44 = icmp eq i64 %42, 32000
  br i1 %44, label %116, label %26, !llvm.loop !14

45:                                               ; preds = %4
  %46 = sext i32 %3 to i64
  %47 = udiv i64 31999, %46
  %48 = add nuw nsw i64 %47, 1
  %49 = icmp eq i32 %3, 1
  br i1 %49, label %50, label %109

50:                                               ; preds = %45
  %51 = and i64 %48, 65528
  %52 = mul nsw i64 %51, %46
  %53 = insertelement <4 x float> undef, float %2, i32 0
  %54 = shufflevector <4 x float> %53, <4 x float> undef, <4 x i32> zeroinitializer
  %55 = insertelement <4 x float> undef, float %2, i32 0
  %56 = shufflevector <4 x float> %55, <4 x float> undef, <4 x i32> zeroinitializer
  %57 = add nsw i64 %51, -8
  %58 = lshr exact i64 %57, 3
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 24
  br i1 %61, label %93, label %62

62:                                               ; preds = %50
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %90, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %91, %64 ]
  %67 = mul i64 %65, %46
  %68 = getelementptr inbounds float, float* %1, i64 %67
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> %54, <4 x float>* %69, align 4, !tbaa !2
  %70 = getelementptr inbounds float, float* %68, i64 4
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> %56, <4 x float>* %71, align 4, !tbaa !2
  %72 = or i64 %65, 8
  %73 = mul i64 %72, %46
  %74 = getelementptr inbounds float, float* %1, i64 %73
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> %54, <4 x float>* %75, align 4, !tbaa !2
  %76 = getelementptr inbounds float, float* %74, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  store <4 x float> %56, <4 x float>* %77, align 4, !tbaa !2
  %78 = or i64 %65, 16
  %79 = mul i64 %78, %46
  %80 = getelementptr inbounds float, float* %1, i64 %79
  %81 = bitcast float* %80 to <4 x float>*
  store <4 x float> %54, <4 x float>* %81, align 4, !tbaa !2
  %82 = getelementptr inbounds float, float* %80, i64 4
  %83 = bitcast float* %82 to <4 x float>*
  store <4 x float> %56, <4 x float>* %83, align 4, !tbaa !2
  %84 = or i64 %65, 24
  %85 = mul i64 %84, %46
  %86 = getelementptr inbounds float, float* %1, i64 %85
  %87 = bitcast float* %86 to <4 x float>*
  store <4 x float> %54, <4 x float>* %87, align 4, !tbaa !2
  %88 = getelementptr inbounds float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> %56, <4 x float>* %89, align 4, !tbaa !2
  %90 = add i64 %65, 32
  %91 = add i64 %66, -4
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %64, !llvm.loop !15

93:                                               ; preds = %64, %50
  %94 = phi i64 [ 0, %50 ], [ %90, %64 ]
  %95 = icmp eq i64 %60, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %93, %96
  %97 = phi i64 [ %104, %96 ], [ %94, %93 ]
  %98 = phi i64 [ %105, %96 ], [ %60, %93 ]
  %99 = mul i64 %97, %46
  %100 = getelementptr inbounds float, float* %1, i64 %99
  %101 = bitcast float* %100 to <4 x float>*
  store <4 x float> %54, <4 x float>* %101, align 4, !tbaa !2
  %102 = getelementptr inbounds float, float* %100, i64 4
  %103 = bitcast float* %102 to <4 x float>*
  store <4 x float> %56, <4 x float>* %103, align 4, !tbaa !2
  %104 = add i64 %97, 8
  %105 = add i64 %98, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %96, !llvm.loop !16

107:                                              ; preds = %96, %93
  %108 = icmp eq i64 %48, %51
  br i1 %108, label %116, label %109

109:                                              ; preds = %45, %107
  %110 = phi i64 [ 0, %45 ], [ %52, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %114, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds float, float* %1, i64 %112
  store float %2, float* %113, align 4, !tbaa !2
  %114 = add nsw i64 %112, %46
  %115 = icmp slt i64 %114, 32000
  br i1 %115, label %111, label %116, !llvm.loop !17

116:                                              ; preds = %5, %26, %111, %107
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define dso_local i32 @set2d([256 x float]* nocapture %0, float %1, i32 %2) local_unnamed_addr #0 {
  switch i32 %2, label %4 [
    i32 -1, label %23
    i32 -2, label %162
  ]

4:                                                ; preds = %3
  %5 = sext i32 %2 to i64
  %6 = udiv i64 255, %5
  %7 = add nuw nsw i64 %6, 1
  %8 = icmp eq i32 %2, 1
  %9 = and i64 %7, 504
  %10 = mul nsw i64 %9, %5
  %11 = insertelement <4 x float> undef, float %1, i32 0
  %12 = shufflevector <4 x float> %11, <4 x float> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x float> undef, float %1, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = add nsw i64 %9, -8
  %16 = lshr exact i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %18 = and i64 %17, 3
  %19 = icmp ult i64 %15, 24
  %20 = sub nsw i64 %17, %18
  %21 = icmp eq i64 %18, 0
  %22 = icmp eq i64 %7, %9
  br label %302

23:                                               ; preds = %3, %23
  %24 = phi i64 [ %25, %23 ], [ 0, %3 ]
  %25 = add nuw nsw i64 %24, 1
  %26 = trunc i64 %25 to i32
  %27 = sitofp i32 %26 to float
  %28 = fdiv float 1.000000e+00, %27
  %29 = insertelement <4 x float> undef, float %28, i32 0
  %30 = shufflevector <4 x float> %29, <4 x float> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x float> undef, float %28, i32 0
  %32 = shufflevector <4 x float> %31, <4 x float> undef, <4 x i32> zeroinitializer
  %33 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 0
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %30, <4 x float>* %34, align 4, !tbaa !2
  %35 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %32, <4 x float>* %36, align 4, !tbaa !2
  %37 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 8
  %38 = bitcast float* %37 to <4 x float>*
  store <4 x float> %30, <4 x float>* %38, align 4, !tbaa !2
  %39 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 12
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> %32, <4 x float>* %40, align 4, !tbaa !2
  %41 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 16
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> %30, <4 x float>* %42, align 4, !tbaa !2
  %43 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 20
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> %32, <4 x float>* %44, align 4, !tbaa !2
  %45 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 24
  %46 = bitcast float* %45 to <4 x float>*
  store <4 x float> %30, <4 x float>* %46, align 4, !tbaa !2
  %47 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 28
  %48 = bitcast float* %47 to <4 x float>*
  store <4 x float> %32, <4 x float>* %48, align 4, !tbaa !2
  %49 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 32
  %50 = bitcast float* %49 to <4 x float>*
  store <4 x float> %30, <4 x float>* %50, align 4, !tbaa !2
  %51 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 36
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> %32, <4 x float>* %52, align 4, !tbaa !2
  %53 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 40
  %54 = bitcast float* %53 to <4 x float>*
  store <4 x float> %30, <4 x float>* %54, align 4, !tbaa !2
  %55 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 44
  %56 = bitcast float* %55 to <4 x float>*
  store <4 x float> %32, <4 x float>* %56, align 4, !tbaa !2
  %57 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 48
  %58 = bitcast float* %57 to <4 x float>*
  store <4 x float> %30, <4 x float>* %58, align 4, !tbaa !2
  %59 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 52
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> %32, <4 x float>* %60, align 4, !tbaa !2
  %61 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 56
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> %30, <4 x float>* %62, align 4, !tbaa !2
  %63 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 60
  %64 = bitcast float* %63 to <4 x float>*
  store <4 x float> %32, <4 x float>* %64, align 4, !tbaa !2
  %65 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 64
  %66 = bitcast float* %65 to <4 x float>*
  store <4 x float> %30, <4 x float>* %66, align 4, !tbaa !2
  %67 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 68
  %68 = bitcast float* %67 to <4 x float>*
  store <4 x float> %32, <4 x float>* %68, align 4, !tbaa !2
  %69 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 72
  %70 = bitcast float* %69 to <4 x float>*
  store <4 x float> %30, <4 x float>* %70, align 4, !tbaa !2
  %71 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 76
  %72 = bitcast float* %71 to <4 x float>*
  store <4 x float> %32, <4 x float>* %72, align 4, !tbaa !2
  %73 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 80
  %74 = bitcast float* %73 to <4 x float>*
  store <4 x float> %30, <4 x float>* %74, align 4, !tbaa !2
  %75 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 84
  %76 = bitcast float* %75 to <4 x float>*
  store <4 x float> %32, <4 x float>* %76, align 4, !tbaa !2
  %77 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 88
  %78 = bitcast float* %77 to <4 x float>*
  store <4 x float> %30, <4 x float>* %78, align 4, !tbaa !2
  %79 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 92
  %80 = bitcast float* %79 to <4 x float>*
  store <4 x float> %32, <4 x float>* %80, align 4, !tbaa !2
  %81 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 96
  %82 = bitcast float* %81 to <4 x float>*
  store <4 x float> %30, <4 x float>* %82, align 4, !tbaa !2
  %83 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 100
  %84 = bitcast float* %83 to <4 x float>*
  store <4 x float> %32, <4 x float>* %84, align 4, !tbaa !2
  %85 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 104
  %86 = bitcast float* %85 to <4 x float>*
  store <4 x float> %30, <4 x float>* %86, align 4, !tbaa !2
  %87 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 108
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> %32, <4 x float>* %88, align 4, !tbaa !2
  %89 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 112
  %90 = bitcast float* %89 to <4 x float>*
  store <4 x float> %30, <4 x float>* %90, align 4, !tbaa !2
  %91 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 116
  %92 = bitcast float* %91 to <4 x float>*
  store <4 x float> %32, <4 x float>* %92, align 4, !tbaa !2
  %93 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 120
  %94 = bitcast float* %93 to <4 x float>*
  store <4 x float> %30, <4 x float>* %94, align 4, !tbaa !2
  %95 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 124
  %96 = bitcast float* %95 to <4 x float>*
  store <4 x float> %32, <4 x float>* %96, align 4, !tbaa !2
  %97 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 128
  %98 = bitcast float* %97 to <4 x float>*
  store <4 x float> %30, <4 x float>* %98, align 4, !tbaa !2
  %99 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 132
  %100 = bitcast float* %99 to <4 x float>*
  store <4 x float> %32, <4 x float>* %100, align 4, !tbaa !2
  %101 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 136
  %102 = bitcast float* %101 to <4 x float>*
  store <4 x float> %30, <4 x float>* %102, align 4, !tbaa !2
  %103 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 140
  %104 = bitcast float* %103 to <4 x float>*
  store <4 x float> %32, <4 x float>* %104, align 4, !tbaa !2
  %105 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 144
  %106 = bitcast float* %105 to <4 x float>*
  store <4 x float> %30, <4 x float>* %106, align 4, !tbaa !2
  %107 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 148
  %108 = bitcast float* %107 to <4 x float>*
  store <4 x float> %32, <4 x float>* %108, align 4, !tbaa !2
  %109 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 152
  %110 = bitcast float* %109 to <4 x float>*
  store <4 x float> %30, <4 x float>* %110, align 4, !tbaa !2
  %111 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 156
  %112 = bitcast float* %111 to <4 x float>*
  store <4 x float> %32, <4 x float>* %112, align 4, !tbaa !2
  %113 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 160
  %114 = bitcast float* %113 to <4 x float>*
  store <4 x float> %30, <4 x float>* %114, align 4, !tbaa !2
  %115 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 164
  %116 = bitcast float* %115 to <4 x float>*
  store <4 x float> %32, <4 x float>* %116, align 4, !tbaa !2
  %117 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 168
  %118 = bitcast float* %117 to <4 x float>*
  store <4 x float> %30, <4 x float>* %118, align 4, !tbaa !2
  %119 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 172
  %120 = bitcast float* %119 to <4 x float>*
  store <4 x float> %32, <4 x float>* %120, align 4, !tbaa !2
  %121 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 176
  %122 = bitcast float* %121 to <4 x float>*
  store <4 x float> %30, <4 x float>* %122, align 4, !tbaa !2
  %123 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 180
  %124 = bitcast float* %123 to <4 x float>*
  store <4 x float> %32, <4 x float>* %124, align 4, !tbaa !2
  %125 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 184
  %126 = bitcast float* %125 to <4 x float>*
  store <4 x float> %30, <4 x float>* %126, align 4, !tbaa !2
  %127 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 188
  %128 = bitcast float* %127 to <4 x float>*
  store <4 x float> %32, <4 x float>* %128, align 4, !tbaa !2
  %129 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 192
  %130 = bitcast float* %129 to <4 x float>*
  store <4 x float> %30, <4 x float>* %130, align 4, !tbaa !2
  %131 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 196
  %132 = bitcast float* %131 to <4 x float>*
  store <4 x float> %32, <4 x float>* %132, align 4, !tbaa !2
  %133 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 200
  %134 = bitcast float* %133 to <4 x float>*
  store <4 x float> %30, <4 x float>* %134, align 4, !tbaa !2
  %135 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 204
  %136 = bitcast float* %135 to <4 x float>*
  store <4 x float> %32, <4 x float>* %136, align 4, !tbaa !2
  %137 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 208
  %138 = bitcast float* %137 to <4 x float>*
  store <4 x float> %30, <4 x float>* %138, align 4, !tbaa !2
  %139 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 212
  %140 = bitcast float* %139 to <4 x float>*
  store <4 x float> %32, <4 x float>* %140, align 4, !tbaa !2
  %141 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 216
  %142 = bitcast float* %141 to <4 x float>*
  store <4 x float> %30, <4 x float>* %142, align 4, !tbaa !2
  %143 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 220
  %144 = bitcast float* %143 to <4 x float>*
  store <4 x float> %32, <4 x float>* %144, align 4, !tbaa !2
  %145 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 224
  %146 = bitcast float* %145 to <4 x float>*
  store <4 x float> %30, <4 x float>* %146, align 4, !tbaa !2
  %147 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 228
  %148 = bitcast float* %147 to <4 x float>*
  store <4 x float> %32, <4 x float>* %148, align 4, !tbaa !2
  %149 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 232
  %150 = bitcast float* %149 to <4 x float>*
  store <4 x float> %30, <4 x float>* %150, align 4, !tbaa !2
  %151 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 236
  %152 = bitcast float* %151 to <4 x float>*
  store <4 x float> %32, <4 x float>* %152, align 4, !tbaa !2
  %153 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 240
  %154 = bitcast float* %153 to <4 x float>*
  store <4 x float> %30, <4 x float>* %154, align 4, !tbaa !2
  %155 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 244
  %156 = bitcast float* %155 to <4 x float>*
  store <4 x float> %32, <4 x float>* %156, align 4, !tbaa !2
  %157 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 248
  %158 = bitcast float* %157 to <4 x float>*
  store <4 x float> %30, <4 x float>* %158, align 4, !tbaa !2
  %159 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %24, i64 252
  %160 = bitcast float* %159 to <4 x float>*
  store <4 x float> %32, <4 x float>* %160, align 4, !tbaa !2
  %161 = icmp eq i64 %25, 256
  br i1 %161, label %358, label %23

162:                                              ; preds = %3, %162
  %163 = phi i64 [ %164, %162 ], [ 0, %3 ]
  %164 = add nuw nsw i64 %163, 1
  %165 = trunc i64 %164 to i32
  %166 = mul nsw i32 %165, %165
  %167 = sitofp i32 %166 to float
  %168 = fdiv float 1.000000e+00, %167
  %169 = insertelement <4 x float> undef, float %168, i32 0
  %170 = shufflevector <4 x float> %169, <4 x float> undef, <4 x i32> zeroinitializer
  %171 = insertelement <4 x float> undef, float %168, i32 0
  %172 = shufflevector <4 x float> %171, <4 x float> undef, <4 x i32> zeroinitializer
  %173 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 0
  %174 = bitcast float* %173 to <4 x float>*
  store <4 x float> %170, <4 x float>* %174, align 4, !tbaa !2
  %175 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 4
  %176 = bitcast float* %175 to <4 x float>*
  store <4 x float> %172, <4 x float>* %176, align 4, !tbaa !2
  %177 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 8
  %178 = bitcast float* %177 to <4 x float>*
  store <4 x float> %170, <4 x float>* %178, align 4, !tbaa !2
  %179 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 12
  %180 = bitcast float* %179 to <4 x float>*
  store <4 x float> %172, <4 x float>* %180, align 4, !tbaa !2
  %181 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 16
  %182 = bitcast float* %181 to <4 x float>*
  store <4 x float> %170, <4 x float>* %182, align 4, !tbaa !2
  %183 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 20
  %184 = bitcast float* %183 to <4 x float>*
  store <4 x float> %172, <4 x float>* %184, align 4, !tbaa !2
  %185 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 24
  %186 = bitcast float* %185 to <4 x float>*
  store <4 x float> %170, <4 x float>* %186, align 4, !tbaa !2
  %187 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 28
  %188 = bitcast float* %187 to <4 x float>*
  store <4 x float> %172, <4 x float>* %188, align 4, !tbaa !2
  %189 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 32
  %190 = bitcast float* %189 to <4 x float>*
  store <4 x float> %170, <4 x float>* %190, align 4, !tbaa !2
  %191 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 36
  %192 = bitcast float* %191 to <4 x float>*
  store <4 x float> %172, <4 x float>* %192, align 4, !tbaa !2
  %193 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 40
  %194 = bitcast float* %193 to <4 x float>*
  store <4 x float> %170, <4 x float>* %194, align 4, !tbaa !2
  %195 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 44
  %196 = bitcast float* %195 to <4 x float>*
  store <4 x float> %172, <4 x float>* %196, align 4, !tbaa !2
  %197 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 48
  %198 = bitcast float* %197 to <4 x float>*
  store <4 x float> %170, <4 x float>* %198, align 4, !tbaa !2
  %199 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 52
  %200 = bitcast float* %199 to <4 x float>*
  store <4 x float> %172, <4 x float>* %200, align 4, !tbaa !2
  %201 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 56
  %202 = bitcast float* %201 to <4 x float>*
  store <4 x float> %170, <4 x float>* %202, align 4, !tbaa !2
  %203 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 60
  %204 = bitcast float* %203 to <4 x float>*
  store <4 x float> %172, <4 x float>* %204, align 4, !tbaa !2
  %205 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 64
  %206 = bitcast float* %205 to <4 x float>*
  store <4 x float> %170, <4 x float>* %206, align 4, !tbaa !2
  %207 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 68
  %208 = bitcast float* %207 to <4 x float>*
  store <4 x float> %172, <4 x float>* %208, align 4, !tbaa !2
  %209 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 72
  %210 = bitcast float* %209 to <4 x float>*
  store <4 x float> %170, <4 x float>* %210, align 4, !tbaa !2
  %211 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 76
  %212 = bitcast float* %211 to <4 x float>*
  store <4 x float> %172, <4 x float>* %212, align 4, !tbaa !2
  %213 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 80
  %214 = bitcast float* %213 to <4 x float>*
  store <4 x float> %170, <4 x float>* %214, align 4, !tbaa !2
  %215 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 84
  %216 = bitcast float* %215 to <4 x float>*
  store <4 x float> %172, <4 x float>* %216, align 4, !tbaa !2
  %217 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 88
  %218 = bitcast float* %217 to <4 x float>*
  store <4 x float> %170, <4 x float>* %218, align 4, !tbaa !2
  %219 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 92
  %220 = bitcast float* %219 to <4 x float>*
  store <4 x float> %172, <4 x float>* %220, align 4, !tbaa !2
  %221 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 96
  %222 = bitcast float* %221 to <4 x float>*
  store <4 x float> %170, <4 x float>* %222, align 4, !tbaa !2
  %223 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 100
  %224 = bitcast float* %223 to <4 x float>*
  store <4 x float> %172, <4 x float>* %224, align 4, !tbaa !2
  %225 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 104
  %226 = bitcast float* %225 to <4 x float>*
  store <4 x float> %170, <4 x float>* %226, align 4, !tbaa !2
  %227 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 108
  %228 = bitcast float* %227 to <4 x float>*
  store <4 x float> %172, <4 x float>* %228, align 4, !tbaa !2
  %229 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 112
  %230 = bitcast float* %229 to <4 x float>*
  store <4 x float> %170, <4 x float>* %230, align 4, !tbaa !2
  %231 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 116
  %232 = bitcast float* %231 to <4 x float>*
  store <4 x float> %172, <4 x float>* %232, align 4, !tbaa !2
  %233 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 120
  %234 = bitcast float* %233 to <4 x float>*
  store <4 x float> %170, <4 x float>* %234, align 4, !tbaa !2
  %235 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 124
  %236 = bitcast float* %235 to <4 x float>*
  store <4 x float> %172, <4 x float>* %236, align 4, !tbaa !2
  %237 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 128
  %238 = bitcast float* %237 to <4 x float>*
  store <4 x float> %170, <4 x float>* %238, align 4, !tbaa !2
  %239 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 132
  %240 = bitcast float* %239 to <4 x float>*
  store <4 x float> %172, <4 x float>* %240, align 4, !tbaa !2
  %241 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 136
  %242 = bitcast float* %241 to <4 x float>*
  store <4 x float> %170, <4 x float>* %242, align 4, !tbaa !2
  %243 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 140
  %244 = bitcast float* %243 to <4 x float>*
  store <4 x float> %172, <4 x float>* %244, align 4, !tbaa !2
  %245 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 144
  %246 = bitcast float* %245 to <4 x float>*
  store <4 x float> %170, <4 x float>* %246, align 4, !tbaa !2
  %247 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 148
  %248 = bitcast float* %247 to <4 x float>*
  store <4 x float> %172, <4 x float>* %248, align 4, !tbaa !2
  %249 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 152
  %250 = bitcast float* %249 to <4 x float>*
  store <4 x float> %170, <4 x float>* %250, align 4, !tbaa !2
  %251 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 156
  %252 = bitcast float* %251 to <4 x float>*
  store <4 x float> %172, <4 x float>* %252, align 4, !tbaa !2
  %253 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 160
  %254 = bitcast float* %253 to <4 x float>*
  store <4 x float> %170, <4 x float>* %254, align 4, !tbaa !2
  %255 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 164
  %256 = bitcast float* %255 to <4 x float>*
  store <4 x float> %172, <4 x float>* %256, align 4, !tbaa !2
  %257 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 168
  %258 = bitcast float* %257 to <4 x float>*
  store <4 x float> %170, <4 x float>* %258, align 4, !tbaa !2
  %259 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 172
  %260 = bitcast float* %259 to <4 x float>*
  store <4 x float> %172, <4 x float>* %260, align 4, !tbaa !2
  %261 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 176
  %262 = bitcast float* %261 to <4 x float>*
  store <4 x float> %170, <4 x float>* %262, align 4, !tbaa !2
  %263 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 180
  %264 = bitcast float* %263 to <4 x float>*
  store <4 x float> %172, <4 x float>* %264, align 4, !tbaa !2
  %265 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 184
  %266 = bitcast float* %265 to <4 x float>*
  store <4 x float> %170, <4 x float>* %266, align 4, !tbaa !2
  %267 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 188
  %268 = bitcast float* %267 to <4 x float>*
  store <4 x float> %172, <4 x float>* %268, align 4, !tbaa !2
  %269 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 192
  %270 = bitcast float* %269 to <4 x float>*
  store <4 x float> %170, <4 x float>* %270, align 4, !tbaa !2
  %271 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 196
  %272 = bitcast float* %271 to <4 x float>*
  store <4 x float> %172, <4 x float>* %272, align 4, !tbaa !2
  %273 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 200
  %274 = bitcast float* %273 to <4 x float>*
  store <4 x float> %170, <4 x float>* %274, align 4, !tbaa !2
  %275 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 204
  %276 = bitcast float* %275 to <4 x float>*
  store <4 x float> %172, <4 x float>* %276, align 4, !tbaa !2
  %277 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 208
  %278 = bitcast float* %277 to <4 x float>*
  store <4 x float> %170, <4 x float>* %278, align 4, !tbaa !2
  %279 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 212
  %280 = bitcast float* %279 to <4 x float>*
  store <4 x float> %172, <4 x float>* %280, align 4, !tbaa !2
  %281 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 216
  %282 = bitcast float* %281 to <4 x float>*
  store <4 x float> %170, <4 x float>* %282, align 4, !tbaa !2
  %283 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 220
  %284 = bitcast float* %283 to <4 x float>*
  store <4 x float> %172, <4 x float>* %284, align 4, !tbaa !2
  %285 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 224
  %286 = bitcast float* %285 to <4 x float>*
  store <4 x float> %170, <4 x float>* %286, align 4, !tbaa !2
  %287 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 228
  %288 = bitcast float* %287 to <4 x float>*
  store <4 x float> %172, <4 x float>* %288, align 4, !tbaa !2
  %289 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 232
  %290 = bitcast float* %289 to <4 x float>*
  store <4 x float> %170, <4 x float>* %290, align 4, !tbaa !2
  %291 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 236
  %292 = bitcast float* %291 to <4 x float>*
  store <4 x float> %172, <4 x float>* %292, align 4, !tbaa !2
  %293 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 240
  %294 = bitcast float* %293 to <4 x float>*
  store <4 x float> %170, <4 x float>* %294, align 4, !tbaa !2
  %295 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 244
  %296 = bitcast float* %295 to <4 x float>*
  store <4 x float> %172, <4 x float>* %296, align 4, !tbaa !2
  %297 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 248
  %298 = bitcast float* %297 to <4 x float>*
  store <4 x float> %170, <4 x float>* %298, align 4, !tbaa !2
  %299 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %163, i64 252
  %300 = bitcast float* %299 to <4 x float>*
  store <4 x float> %172, <4 x float>* %300, align 4, !tbaa !2
  %301 = icmp eq i64 %164, 256
  br i1 %301, label %358, label %162

302:                                              ; preds = %350, %4
  %303 = phi i64 [ 0, %4 ], [ %351, %350 ]
  br i1 %8, label %304, label %348

304:                                              ; preds = %302
  br i1 %19, label %334, label %305

305:                                              ; preds = %304, %305
  %306 = phi i64 [ %331, %305 ], [ 0, %304 ]
  %307 = phi i64 [ %332, %305 ], [ %20, %304 ]
  %308 = mul i64 %306, %5
  %309 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %303, i64 %308
  %310 = bitcast float* %309 to <4 x float>*
  store <4 x float> %12, <4 x float>* %310, align 4, !tbaa !2
  %311 = getelementptr inbounds float, float* %309, i64 4
  %312 = bitcast float* %311 to <4 x float>*
  store <4 x float> %14, <4 x float>* %312, align 4, !tbaa !2
  %313 = or i64 %306, 8
  %314 = mul i64 %313, %5
  %315 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %303, i64 %314
  %316 = bitcast float* %315 to <4 x float>*
  store <4 x float> %12, <4 x float>* %316, align 4, !tbaa !2
  %317 = getelementptr inbounds float, float* %315, i64 4
  %318 = bitcast float* %317 to <4 x float>*
  store <4 x float> %14, <4 x float>* %318, align 4, !tbaa !2
  %319 = or i64 %306, 16
  %320 = mul i64 %319, %5
  %321 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %303, i64 %320
  %322 = bitcast float* %321 to <4 x float>*
  store <4 x float> %12, <4 x float>* %322, align 4, !tbaa !2
  %323 = getelementptr inbounds float, float* %321, i64 4
  %324 = bitcast float* %323 to <4 x float>*
  store <4 x float> %14, <4 x float>* %324, align 4, !tbaa !2
  %325 = or i64 %306, 24
  %326 = mul i64 %325, %5
  %327 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %303, i64 %326
  %328 = bitcast float* %327 to <4 x float>*
  store <4 x float> %12, <4 x float>* %328, align 4, !tbaa !2
  %329 = getelementptr inbounds float, float* %327, i64 4
  %330 = bitcast float* %329 to <4 x float>*
  store <4 x float> %14, <4 x float>* %330, align 4, !tbaa !2
  %331 = add i64 %306, 32
  %332 = add i64 %307, -4
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %305, !llvm.loop !18

334:                                              ; preds = %305, %304
  %335 = phi i64 [ 0, %304 ], [ %331, %305 ]
  br i1 %21, label %347, label %336

336:                                              ; preds = %334, %336
  %337 = phi i64 [ %344, %336 ], [ %335, %334 ]
  %338 = phi i64 [ %345, %336 ], [ %18, %334 ]
  %339 = mul i64 %337, %5
  %340 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %303, i64 %339
  %341 = bitcast float* %340 to <4 x float>*
  store <4 x float> %12, <4 x float>* %341, align 4, !tbaa !2
  %342 = getelementptr inbounds float, float* %340, i64 4
  %343 = bitcast float* %342 to <4 x float>*
  store <4 x float> %14, <4 x float>* %343, align 4, !tbaa !2
  %344 = add i64 %337, 8
  %345 = add i64 %338, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %336, !llvm.loop !19

347:                                              ; preds = %336, %334
  br i1 %22, label %350, label %348

348:                                              ; preds = %302, %347
  %349 = phi i64 [ 0, %302 ], [ %10, %347 ]
  br label %353

350:                                              ; preds = %353, %347
  %351 = add nuw nsw i64 %303, 1
  %352 = icmp eq i64 %351, 256
  br i1 %352, label %358, label %302

353:                                              ; preds = %348, %353
  %354 = phi i64 [ %356, %353 ], [ %349, %348 ]
  %355 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %303, i64 %354
  store float %1, float* %355, align 4, !tbaa !2
  %356 = add nsw i64 %354, %5
  %357 = icmp slt i64 %356, 256
  br i1 %357, label %353, label %350, !llvm.loop !20

358:                                              ; preds = %162, %23, %350
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local float @sum1d(float* nocapture readonly %0) local_unnamed_addr #2 {
  br label %3

2:                                                ; preds = %3
  ret float %36

3:                                                ; preds = %3, %1
  %4 = phi i64 [ 0, %1 ], [ %37, %3 ]
  %5 = phi float [ 0.000000e+00, %1 ], [ %36, %3 ]
  %6 = getelementptr inbounds float, float* %0, i64 %4
  %7 = load float, float* %6, align 4, !tbaa !2
  %8 = fadd float %5, %7
  %9 = or i64 %4, 1
  %10 = getelementptr inbounds float, float* %0, i64 %9
  %11 = load float, float* %10, align 4, !tbaa !2
  %12 = fadd float %8, %11
  %13 = or i64 %4, 2
  %14 = getelementptr inbounds float, float* %0, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !2
  %16 = fadd float %12, %15
  %17 = or i64 %4, 3
  %18 = getelementptr inbounds float, float* %0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %4, 4
  %22 = getelementptr inbounds float, float* %0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %4, 5
  %26 = getelementptr inbounds float, float* %0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %4, 6
  %30 = getelementptr inbounds float, float* %0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %4, 7
  %34 = getelementptr inbounds float, float* %0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = add nuw nsw i64 %4, 8
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %2, label %3
}

; Function Attrs: alwaysinline norecurse nounwind readnone uwtable
define dso_local i32 @s471s() local_unnamed_addr #3 {
  ret i32 0
}

; Function Attrs: alwaysinline norecurse nounwind readnone uwtable
define dso_local float @f(float %0, float %1) local_unnamed_addr #3 {
  %3 = fmul float %0, %1
  ret float %3
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @check(i32 %0) local_unnamed_addr #4 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i64 [ 0, %1 ], [ %40, %2 ]
  %4 = phi float [ 0.000000e+00, %1 ], [ %39, %2 ]
  %5 = phi float [ 0.000000e+00, %1 ], [ %36, %2 ]
  %6 = phi float [ 0.000000e+00, %1 ], [ %33, %2 ]
  %7 = phi float [ 0.000000e+00, %1 ], [ %30, %2 ]
  %8 = phi float [ 0.000000e+00, %1 ], [ %27, %2 ]
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3
  %10 = load float, float* %9, align 8, !tbaa !2
  %11 = fadd float %8, %10
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3
  %13 = load float, float* %12, align 8, !tbaa !2
  %14 = fadd float %7, %13
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3
  %16 = load float, float* %15, align 8, !tbaa !2
  %17 = fadd float %6, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3
  %19 = load float, float* %18, align 8, !tbaa !2
  %20 = fadd float %5, %19
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3
  %22 = load float, float* %21, align 8, !tbaa !2
  %23 = fadd float %4, %22
  %24 = or i64 %3, 1
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %11, %26
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %29 = load float, float* %28, align 4, !tbaa !2
  %30 = fadd float %14, %29
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %24
  %32 = load float, float* %31, align 4, !tbaa !2
  %33 = fadd float %17, %32
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %24
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %20, %35
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %24
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %23, %38
  %40 = add nuw nsw i64 %3, 2
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %42, label %2

42:                                               ; preds = %2, %47
  %43 = phi i64 [ %48, %47 ], [ 0, %2 ]
  %44 = phi float [ %73, %47 ], [ 0.000000e+00, %2 ]
  %45 = phi float [ %70, %47 ], [ 0.000000e+00, %2 ]
  %46 = phi float [ %67, %47 ], [ 0.000000e+00, %2 ]
  br label %50

47:                                               ; preds = %50
  %48 = add nuw nsw i64 %43, 1
  %49 = icmp eq i64 %48, 256
  br i1 %49, label %77, label %42

50:                                               ; preds = %50, %42
  %51 = phi i64 [ 0, %42 ], [ %74, %50 ]
  %52 = phi float [ %44, %42 ], [ %73, %50 ]
  %53 = phi float [ %45, %42 ], [ %70, %50 ]
  %54 = phi float [ %46, %42 ], [ %67, %50 ]
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 %51
  %56 = load float, float* %55, align 8, !tbaa !2
  %57 = fadd float %54, %56
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %43, i64 %51
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = fadd float %53, %59
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %43, i64 %51
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fadd float %52, %62
  %64 = or i64 %51, 1
  %65 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %57, %66
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %43, i64 %64
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %60, %69
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %43, i64 %64
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %63, %72
  %74 = add nuw nsw i64 %51, 2
  %75 = icmp eq i64 %74, 256
  br i1 %75, label %47, label %50

76:                                               ; preds = %77
  switch i32 %0, label %146 [
    i32 1, label %142
    i32 2, label %113
    i32 3, label %114
    i32 4, label %115
    i32 5, label %116
    i32 11, label %117
    i32 22, label %118
    i32 33, label %119
    i32 0, label %120
    i32 12, label %121
    i32 25, label %123
    i32 13, label %125
    i32 123, label %127
    i32 1122, label %130
    i32 112233, label %132
    i32 111, label %135
    i32 -1, label %137
    i32 -12, label %139
  ]

77:                                               ; preds = %47, %77
  %78 = phi i64 [ %111, %77 ], [ 0, %47 ]
  %79 = phi float [ %110, %77 ], [ 0.000000e+00, %47 ]
  %80 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %78
  %81 = load float, float* %80, align 16, !tbaa !2
  %82 = fadd float %79, %81
  %83 = or i64 %78, 1
  %84 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %83
  %85 = load float, float* %84, align 4, !tbaa !2
  %86 = fadd float %82, %85
  %87 = or i64 %78, 2
  %88 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %87
  %89 = load float, float* %88, align 8, !tbaa !2
  %90 = fadd float %86, %89
  %91 = or i64 %78, 3
  %92 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %91
  %93 = load float, float* %92, align 4, !tbaa !2
  %94 = fadd float %90, %93
  %95 = or i64 %78, 4
  %96 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %95
  %97 = load float, float* %96, align 16, !tbaa !2
  %98 = fadd float %94, %97
  %99 = or i64 %78, 5
  %100 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %99
  %101 = load float, float* %100, align 4, !tbaa !2
  %102 = fadd float %98, %101
  %103 = or i64 %78, 6
  %104 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %103
  %105 = load float, float* %104, align 8, !tbaa !2
  %106 = fadd float %102, %105
  %107 = or i64 %78, 7
  %108 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %107
  %109 = load float, float* %108, align 4, !tbaa !2
  %110 = fadd float %106, %109
  %111 = add nuw nsw i64 %78, 8
  %112 = icmp eq i64 %111, 65536
  br i1 %112, label %76, label %77

113:                                              ; preds = %76
  br label %142

114:                                              ; preds = %76
  br label %142

115:                                              ; preds = %76
  br label %142

116:                                              ; preds = %76
  br label %142

117:                                              ; preds = %76
  br label %142

118:                                              ; preds = %76
  br label %142

119:                                              ; preds = %76
  br label %142

120:                                              ; preds = %76
  br label %142

121:                                              ; preds = %76
  %122 = fadd float %27, %30
  br label %142

123:                                              ; preds = %76
  %124 = fadd float %30, %39
  br label %142

125:                                              ; preds = %76
  %126 = fadd float %27, %33
  br label %142

127:                                              ; preds = %76
  %128 = fadd float %27, %30
  %129 = fadd float %128, %33
  br label %142

130:                                              ; preds = %76
  %131 = fadd float %67, %70
  br label %142

132:                                              ; preds = %76
  %133 = fadd float %67, %70
  %134 = fadd float %133, %73
  br label %142

135:                                              ; preds = %76
  %136 = fadd float %27, %67
  br label %142

137:                                              ; preds = %76
  %138 = load float, float* @temp, align 4, !tbaa !2
  br label %142

139:                                              ; preds = %76
  %140 = load float, float* @temp, align 4, !tbaa !2
  %141 = fadd float %30, %140
  br label %142

142:                                              ; preds = %76, %139, %113, %114, %115, %116, %117, %118, %119, %120, %121, %123, %125, %127, %130, %132, %135, %137
  %143 = phi float [ %138, %137 ], [ %136, %135 ], [ %134, %132 ], [ %131, %130 ], [ %129, %127 ], [ %126, %125 ], [ %124, %123 ], [ %122, %121 ], [ %110, %120 ], [ %73, %119 ], [ %70, %118 ], [ %67, %117 ], [ %39, %116 ], [ %36, %115 ], [ %33, %114 ], [ %30, %113 ], [ %141, %139 ], [ %27, %76 ]
  %144 = fpext float %143 to double
  %145 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %144)
  br label %146

146:                                              ; preds = %142, %76
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @init(i8* readonly %0) local_unnamed_addr #4 {
  %2 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #15
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %39

4:                                                ; preds = %1, %4
  %5 = phi i64 [ %32, %4 ], [ 0, %1 ]
  %6 = phi <4 x i64> [ %33, %4 ], [ <i64 0, i64 1, i64 2, i64 3>, %1 ]
  %7 = phi <4 x i32> [ %34, %4 ], [ <i32 0, i32 1, i32 2, i32 3>, %1 ]
  %8 = phi <4 x i32> [ %35, %4 ], [ <i32 0, i32 1, i32 2, i32 3>, %1 ]
  %9 = phi <4 x i32> [ %36, %4 ], [ <i32 0, i32 1, i32 2, i32 3>, %1 ]
  %10 = phi <4 x i32> [ %37, %4 ], [ <i32 0, i32 1, i32 2, i32 3>, %1 ]
  %11 = trunc <4 x i64> %6 to <4 x i32>
  %12 = add <4 x i32> %11, <i32 1, i32 1, i32 1, i32 1>
  %13 = sitofp <4 x i32> %12 to <4 x float>
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @X, i64 0, i64 %5
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> %13, <4 x float>* %15, align 16, !tbaa !2
  %16 = add <4 x i32> %7, <i32 2, i32 2, i32 2, i32 2>
  %17 = sitofp <4 x i32> %16 to <4 x float>
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @Y, i64 0, i64 %5
  %19 = bitcast float* %18 to <4 x float>*
  store <4 x float> %17, <4 x float>* %19, align 16, !tbaa !2
  %20 = add <4 x i32> %8, <i32 3, i32 3, i32 3, i32 3>
  %21 = sitofp <4 x i32> %20 to <4 x float>
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @Z, i64 0, i64 %5
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 16, !tbaa !2
  %24 = add <4 x i32> %9, <i32 4, i32 4, i32 4, i32 4>
  %25 = sitofp <4 x i32> %24 to <4 x float>
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @U, i64 0, i64 %5
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 16, !tbaa !2
  %28 = add <4 x i32> %10, <i32 5, i32 5, i32 5, i32 5>
  %29 = sitofp <4 x i32> %28 to <4 x float>
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @V, i64 0, i64 %5
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %29, <4 x float>* %31, align 16, !tbaa !2
  %32 = add i64 %5, 4
  %33 = add <4 x i64> %6, <i64 4, i64 4, i64 4, i64 4>
  %34 = add <4 x i32> %7, <i32 4, i32 4, i32 4, i32 4>
  %35 = add <4 x i32> %8, <i32 4, i32 4, i32 4, i32 4>
  %36 = add <4 x i32> %9, <i32 4, i32 4, i32 4, i32 4>
  %37 = add <4 x i32> %10, <i32 4, i32 4, i32 4, i32 4>
  %38 = icmp eq i64 %32, 32000
  br i1 %38, label %15603, label %4, !llvm.loop !21

39:                                               ; preds = %1
  %40 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %169

42:                                               ; preds = %39, %42
  %43 = phi i64 [ %83, %42 ], [ 0, %39 ]
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %45, align 16, !tbaa !2
  %46 = getelementptr inbounds float, float* %44, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %47, align 16, !tbaa !2
  %48 = or i64 %43, 8
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = bitcast float* %49 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %50, align 16, !tbaa !2
  %51 = getelementptr inbounds float, float* %49, i64 4
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %52, align 16, !tbaa !2
  %53 = or i64 %43, 16
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %55, align 16, !tbaa !2
  %56 = getelementptr inbounds float, float* %54, i64 4
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %57, align 16, !tbaa !2
  %58 = or i64 %43, 24
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %60, align 16, !tbaa !2
  %61 = getelementptr inbounds float, float* %59, i64 4
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %62, align 16, !tbaa !2
  %63 = or i64 %43, 32
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = bitcast float* %64 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %65, align 16, !tbaa !2
  %66 = getelementptr inbounds float, float* %64, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %67, align 16, !tbaa !2
  %68 = or i64 %43, 40
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  %70 = bitcast float* %69 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %70, align 16, !tbaa !2
  %71 = getelementptr inbounds float, float* %69, i64 4
  %72 = bitcast float* %71 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %72, align 16, !tbaa !2
  %73 = or i64 %43, 48
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %75, align 16, !tbaa !2
  %76 = getelementptr inbounds float, float* %74, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %77, align 16, !tbaa !2
  %78 = or i64 %43, 56
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = bitcast float* %79 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %80, align 16, !tbaa !2
  %81 = getelementptr inbounds float, float* %79, i64 4
  %82 = bitcast float* %81 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %82, align 16, !tbaa !2
  %83 = add nuw nsw i64 %43, 64
  %84 = icmp eq i64 %83, 32000
  br i1 %84, label %85, label %42, !llvm.loop !22

85:                                               ; preds = %42, %85
  %86 = phi i64 [ %103, %85 ], [ 0, %42 ]
  %87 = phi <4 x i64> [ %104, %85 ], [ <i64 0, i64 1, i64 2, i64 3>, %42 ]
  %88 = add nuw nsw <4 x i64> %87, <i64 1, i64 1, i64 1, i64 1>
  %89 = mul nuw nsw <4 x i64> %88, %88
  %90 = trunc <4 x i64> %89 to <4 x i32>
  %91 = sitofp <4 x i32> %90 to <4 x float>
  %92 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %91
  %93 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %86
  %94 = bitcast float* %93 to <4 x float>*
  store <4 x float> %92, <4 x float>* %94, align 16, !tbaa !2
  %95 = or i64 %86, 4
  %96 = add <4 x i64> %87, <i64 5, i64 5, i64 5, i64 5>
  %97 = mul nuw nsw <4 x i64> %96, %96
  %98 = trunc <4 x i64> %97 to <4 x i32>
  %99 = sitofp <4 x i32> %98 to <4 x float>
  %100 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %99
  %101 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %95
  %102 = bitcast float* %101 to <4 x float>*
  store <4 x float> %100, <4 x float>* %102, align 16, !tbaa !2
  %103 = add nuw nsw i64 %86, 8
  %104 = add <4 x i64> %87, <i64 8, i64 8, i64 8, i64 8>
  %105 = icmp eq i64 %103, 32000
  br i1 %105, label %106, label %85, !llvm.loop !23

106:                                              ; preds = %85, %106
  %107 = phi i64 [ %124, %106 ], [ 0, %85 ]
  %108 = phi <4 x i64> [ %125, %106 ], [ <i64 0, i64 1, i64 2, i64 3>, %85 ]
  %109 = add nuw nsw <4 x i64> %108, <i64 1, i64 1, i64 1, i64 1>
  %110 = mul nuw nsw <4 x i64> %109, %109
  %111 = trunc <4 x i64> %110 to <4 x i32>
  %112 = sitofp <4 x i32> %111 to <4 x float>
  %113 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %112
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %107
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %113, <4 x float>* %115, align 16, !tbaa !2
  %116 = or i64 %107, 4
  %117 = add <4 x i64> %108, <i64 5, i64 5, i64 5, i64 5>
  %118 = mul nuw nsw <4 x i64> %117, %117
  %119 = trunc <4 x i64> %118 to <4 x i32>
  %120 = sitofp <4 x i32> %119 to <4 x float>
  %121 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %120
  %122 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %116
  %123 = bitcast float* %122 to <4 x float>*
  store <4 x float> %121, <4 x float>* %123, align 16, !tbaa !2
  %124 = add nuw nsw i64 %107, 8
  %125 = add <4 x i64> %108, <i64 8, i64 8, i64 8, i64 8>
  %126 = icmp eq i64 %124, 32000
  br i1 %126, label %127, label %106, !llvm.loop !24

127:                                              ; preds = %106, %127
  %128 = phi i64 [ %145, %127 ], [ 0, %106 ]
  %129 = phi <4 x i64> [ %146, %127 ], [ <i64 0, i64 1, i64 2, i64 3>, %106 ]
  %130 = add nuw nsw <4 x i64> %129, <i64 1, i64 1, i64 1, i64 1>
  %131 = mul nuw nsw <4 x i64> %130, %130
  %132 = trunc <4 x i64> %131 to <4 x i32>
  %133 = sitofp <4 x i32> %132 to <4 x float>
  %134 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %133
  %135 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %128
  %136 = bitcast float* %135 to <4 x float>*
  store <4 x float> %134, <4 x float>* %136, align 16, !tbaa !2
  %137 = or i64 %128, 4
  %138 = add <4 x i64> %129, <i64 5, i64 5, i64 5, i64 5>
  %139 = mul nuw nsw <4 x i64> %138, %138
  %140 = trunc <4 x i64> %139 to <4 x i32>
  %141 = sitofp <4 x i32> %140 to <4 x float>
  %142 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %141
  %143 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %137
  %144 = bitcast float* %143 to <4 x float>*
  store <4 x float> %142, <4 x float>* %144, align 16, !tbaa !2
  %145 = add nuw nsw i64 %128, 8
  %146 = add <4 x i64> %129, <i64 8, i64 8, i64 8, i64 8>
  %147 = icmp eq i64 %145, 32000
  br i1 %147, label %148, label %127, !llvm.loop !25

148:                                              ; preds = %127, %148
  %149 = phi i64 [ %166, %148 ], [ 0, %127 ]
  %150 = phi <4 x i64> [ %167, %148 ], [ <i64 0, i64 1, i64 2, i64 3>, %127 ]
  %151 = add nuw nsw <4 x i64> %150, <i64 1, i64 1, i64 1, i64 1>
  %152 = mul nuw nsw <4 x i64> %151, %151
  %153 = trunc <4 x i64> %152 to <4 x i32>
  %154 = sitofp <4 x i32> %153 to <4 x float>
  %155 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %154
  %156 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %149
  %157 = bitcast float* %156 to <4 x float>*
  store <4 x float> %155, <4 x float>* %157, align 16, !tbaa !2
  %158 = or i64 %149, 4
  %159 = add <4 x i64> %150, <i64 5, i64 5, i64 5, i64 5>
  %160 = mul nuw nsw <4 x i64> %159, %159
  %161 = trunc <4 x i64> %160 to <4 x i32>
  %162 = sitofp <4 x i32> %161 to <4 x float>
  %163 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %162
  %164 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %158
  %165 = bitcast float* %164 to <4 x float>*
  store <4 x float> %163, <4 x float>* %165, align 16, !tbaa !2
  %166 = add nuw nsw i64 %149, 8
  %167 = add <4 x i64> %150, <i64 8, i64 8, i64 8, i64 8>
  %168 = icmp eq i64 %166, 32000
  br i1 %168, label %15603, label %148, !llvm.loop !26

169:                                              ; preds = %39
  %170 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #15
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %236

172:                                              ; preds = %169, %172
  %173 = phi i64 [ %213, %172 ], [ 0, %169 ]
  %174 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %173
  %175 = bitcast float* %174 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %175, align 16, !tbaa !2
  %176 = getelementptr inbounds float, float* %174, i64 4
  %177 = bitcast float* %176 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %177, align 16, !tbaa !2
  %178 = or i64 %173, 8
  %179 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %178
  %180 = bitcast float* %179 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %180, align 16, !tbaa !2
  %181 = getelementptr inbounds float, float* %179, i64 4
  %182 = bitcast float* %181 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %182, align 16, !tbaa !2
  %183 = or i64 %173, 16
  %184 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %183
  %185 = bitcast float* %184 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %185, align 16, !tbaa !2
  %186 = getelementptr inbounds float, float* %184, i64 4
  %187 = bitcast float* %186 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %187, align 16, !tbaa !2
  %188 = or i64 %173, 24
  %189 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %188
  %190 = bitcast float* %189 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %190, align 16, !tbaa !2
  %191 = getelementptr inbounds float, float* %189, i64 4
  %192 = bitcast float* %191 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %192, align 16, !tbaa !2
  %193 = or i64 %173, 32
  %194 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %193
  %195 = bitcast float* %194 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %195, align 16, !tbaa !2
  %196 = getelementptr inbounds float, float* %194, i64 4
  %197 = bitcast float* %196 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %197, align 16, !tbaa !2
  %198 = or i64 %173, 40
  %199 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %198
  %200 = bitcast float* %199 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %200, align 16, !tbaa !2
  %201 = getelementptr inbounds float, float* %199, i64 4
  %202 = bitcast float* %201 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %202, align 16, !tbaa !2
  %203 = or i64 %173, 48
  %204 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %203
  %205 = bitcast float* %204 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %205, align 16, !tbaa !2
  %206 = getelementptr inbounds float, float* %204, i64 4
  %207 = bitcast float* %206 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %207, align 16, !tbaa !2
  %208 = or i64 %173, 56
  %209 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %208
  %210 = bitcast float* %209 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %210, align 16, !tbaa !2
  %211 = getelementptr inbounds float, float* %209, i64 4
  %212 = bitcast float* %211 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %212, align 16, !tbaa !2
  %213 = add nuw nsw i64 %173, 64
  %214 = icmp eq i64 %213, 32000
  br i1 %214, label %215, label %172, !llvm.loop !27

215:                                              ; preds = %172, %215
  %216 = phi i64 [ %233, %215 ], [ 0, %172 ]
  %217 = phi <4 x i64> [ %234, %215 ], [ <i64 0, i64 1, i64 2, i64 3>, %172 ]
  %218 = add nuw nsw <4 x i64> %217, <i64 1, i64 1, i64 1, i64 1>
  %219 = mul nuw nsw <4 x i64> %218, %218
  %220 = trunc <4 x i64> %219 to <4 x i32>
  %221 = sitofp <4 x i32> %220 to <4 x float>
  %222 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %221
  %223 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %216
  %224 = bitcast float* %223 to <4 x float>*
  store <4 x float> %222, <4 x float>* %224, align 16, !tbaa !2
  %225 = or i64 %216, 4
  %226 = add <4 x i64> %217, <i64 5, i64 5, i64 5, i64 5>
  %227 = mul nuw nsw <4 x i64> %226, %226
  %228 = trunc <4 x i64> %227 to <4 x i32>
  %229 = sitofp <4 x i32> %228 to <4 x float>
  %230 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %229
  %231 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %225
  %232 = bitcast float* %231 to <4 x float>*
  store <4 x float> %230, <4 x float>* %232, align 16, !tbaa !2
  %233 = add nuw nsw i64 %216, 8
  %234 = add <4 x i64> %217, <i64 8, i64 8, i64 8, i64 8>
  %235 = icmp eq i64 %233, 32000
  br i1 %235, label %15603, label %215, !llvm.loop !28

236:                                              ; preds = %169
  %237 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #15
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %303

239:                                              ; preds = %236, %239
  %240 = phi i64 [ %280, %239 ], [ 0, %236 ]
  %241 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %240
  %242 = bitcast float* %241 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %242, align 16, !tbaa !2
  %243 = getelementptr inbounds float, float* %241, i64 4
  %244 = bitcast float* %243 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %244, align 16, !tbaa !2
  %245 = or i64 %240, 8
  %246 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %245
  %247 = bitcast float* %246 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %247, align 16, !tbaa !2
  %248 = getelementptr inbounds float, float* %246, i64 4
  %249 = bitcast float* %248 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %249, align 16, !tbaa !2
  %250 = or i64 %240, 16
  %251 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %250
  %252 = bitcast float* %251 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %252, align 16, !tbaa !2
  %253 = getelementptr inbounds float, float* %251, i64 4
  %254 = bitcast float* %253 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %254, align 16, !tbaa !2
  %255 = or i64 %240, 24
  %256 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %255
  %257 = bitcast float* %256 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %257, align 16, !tbaa !2
  %258 = getelementptr inbounds float, float* %256, i64 4
  %259 = bitcast float* %258 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %259, align 16, !tbaa !2
  %260 = or i64 %240, 32
  %261 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %260
  %262 = bitcast float* %261 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %262, align 16, !tbaa !2
  %263 = getelementptr inbounds float, float* %261, i64 4
  %264 = bitcast float* %263 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %264, align 16, !tbaa !2
  %265 = or i64 %240, 40
  %266 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %265
  %267 = bitcast float* %266 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %267, align 16, !tbaa !2
  %268 = getelementptr inbounds float, float* %266, i64 4
  %269 = bitcast float* %268 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %269, align 16, !tbaa !2
  %270 = or i64 %240, 48
  %271 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %270
  %272 = bitcast float* %271 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %272, align 16, !tbaa !2
  %273 = getelementptr inbounds float, float* %271, i64 4
  %274 = bitcast float* %273 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %274, align 16, !tbaa !2
  %275 = or i64 %240, 56
  %276 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %275
  %277 = bitcast float* %276 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %277, align 16, !tbaa !2
  %278 = getelementptr inbounds float, float* %276, i64 4
  %279 = bitcast float* %278 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %279, align 16, !tbaa !2
  %280 = add nuw nsw i64 %240, 64
  %281 = icmp eq i64 %280, 32000
  br i1 %281, label %282, label %239, !llvm.loop !29

282:                                              ; preds = %239, %282
  %283 = phi i64 [ %300, %282 ], [ 0, %239 ]
  %284 = phi <4 x i64> [ %301, %282 ], [ <i64 0, i64 1, i64 2, i64 3>, %239 ]
  %285 = add nuw nsw <4 x i64> %284, <i64 1, i64 1, i64 1, i64 1>
  %286 = mul nuw nsw <4 x i64> %285, %285
  %287 = trunc <4 x i64> %286 to <4 x i32>
  %288 = sitofp <4 x i32> %287 to <4 x float>
  %289 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %288
  %290 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %283
  %291 = bitcast float* %290 to <4 x float>*
  store <4 x float> %289, <4 x float>* %291, align 16, !tbaa !2
  %292 = or i64 %283, 4
  %293 = add <4 x i64> %284, <i64 5, i64 5, i64 5, i64 5>
  %294 = mul nuw nsw <4 x i64> %293, %293
  %295 = trunc <4 x i64> %294 to <4 x i32>
  %296 = sitofp <4 x i32> %295 to <4 x float>
  %297 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %296
  %298 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %292
  %299 = bitcast float* %298 to <4 x float>*
  store <4 x float> %297, <4 x float>* %299, align 16, !tbaa !2
  %300 = add nuw nsw i64 %283, 8
  %301 = add <4 x i64> %284, <i64 8, i64 8, i64 8, i64 8>
  %302 = icmp eq i64 %300, 32000
  br i1 %302, label %15603, label %282, !llvm.loop !30

303:                                              ; preds = %236
  %304 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #15
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %585

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %308, %306 ], [ 0, %303 ]
  %308 = add nuw nsw i64 %307, 1
  %309 = trunc i64 %308 to i32
  %310 = sitofp i32 %309 to float
  %311 = fdiv float 1.000000e+00, %310
  %312 = insertelement <4 x float> undef, float %311, i32 0
  %313 = shufflevector <4 x float> %312, <4 x float> undef, <4 x i32> zeroinitializer
  %314 = insertelement <4 x float> undef, float %311, i32 0
  %315 = shufflevector <4 x float> %314, <4 x float> undef, <4 x i32> zeroinitializer
  %316 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 0
  %317 = bitcast float* %316 to <4 x float>*
  store <4 x float> %313, <4 x float>* %317, align 16, !tbaa !2
  %318 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 4
  %319 = bitcast float* %318 to <4 x float>*
  store <4 x float> %315, <4 x float>* %319, align 16, !tbaa !2
  %320 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 8
  %321 = bitcast float* %320 to <4 x float>*
  store <4 x float> %313, <4 x float>* %321, align 16, !tbaa !2
  %322 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 12
  %323 = bitcast float* %322 to <4 x float>*
  store <4 x float> %315, <4 x float>* %323, align 16, !tbaa !2
  %324 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 16
  %325 = bitcast float* %324 to <4 x float>*
  store <4 x float> %313, <4 x float>* %325, align 16, !tbaa !2
  %326 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 20
  %327 = bitcast float* %326 to <4 x float>*
  store <4 x float> %315, <4 x float>* %327, align 16, !tbaa !2
  %328 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 24
  %329 = bitcast float* %328 to <4 x float>*
  store <4 x float> %313, <4 x float>* %329, align 16, !tbaa !2
  %330 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 28
  %331 = bitcast float* %330 to <4 x float>*
  store <4 x float> %315, <4 x float>* %331, align 16, !tbaa !2
  %332 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 32
  %333 = bitcast float* %332 to <4 x float>*
  store <4 x float> %313, <4 x float>* %333, align 16, !tbaa !2
  %334 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 36
  %335 = bitcast float* %334 to <4 x float>*
  store <4 x float> %315, <4 x float>* %335, align 16, !tbaa !2
  %336 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 40
  %337 = bitcast float* %336 to <4 x float>*
  store <4 x float> %313, <4 x float>* %337, align 16, !tbaa !2
  %338 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 44
  %339 = bitcast float* %338 to <4 x float>*
  store <4 x float> %315, <4 x float>* %339, align 16, !tbaa !2
  %340 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 48
  %341 = bitcast float* %340 to <4 x float>*
  store <4 x float> %313, <4 x float>* %341, align 16, !tbaa !2
  %342 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 52
  %343 = bitcast float* %342 to <4 x float>*
  store <4 x float> %315, <4 x float>* %343, align 16, !tbaa !2
  %344 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 56
  %345 = bitcast float* %344 to <4 x float>*
  store <4 x float> %313, <4 x float>* %345, align 16, !tbaa !2
  %346 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 60
  %347 = bitcast float* %346 to <4 x float>*
  store <4 x float> %315, <4 x float>* %347, align 16, !tbaa !2
  %348 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 64
  %349 = bitcast float* %348 to <4 x float>*
  store <4 x float> %313, <4 x float>* %349, align 16, !tbaa !2
  %350 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 68
  %351 = bitcast float* %350 to <4 x float>*
  store <4 x float> %315, <4 x float>* %351, align 16, !tbaa !2
  %352 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 72
  %353 = bitcast float* %352 to <4 x float>*
  store <4 x float> %313, <4 x float>* %353, align 16, !tbaa !2
  %354 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 76
  %355 = bitcast float* %354 to <4 x float>*
  store <4 x float> %315, <4 x float>* %355, align 16, !tbaa !2
  %356 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 80
  %357 = bitcast float* %356 to <4 x float>*
  store <4 x float> %313, <4 x float>* %357, align 16, !tbaa !2
  %358 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 84
  %359 = bitcast float* %358 to <4 x float>*
  store <4 x float> %315, <4 x float>* %359, align 16, !tbaa !2
  %360 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 88
  %361 = bitcast float* %360 to <4 x float>*
  store <4 x float> %313, <4 x float>* %361, align 16, !tbaa !2
  %362 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 92
  %363 = bitcast float* %362 to <4 x float>*
  store <4 x float> %315, <4 x float>* %363, align 16, !tbaa !2
  %364 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 96
  %365 = bitcast float* %364 to <4 x float>*
  store <4 x float> %313, <4 x float>* %365, align 16, !tbaa !2
  %366 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 100
  %367 = bitcast float* %366 to <4 x float>*
  store <4 x float> %315, <4 x float>* %367, align 16, !tbaa !2
  %368 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 104
  %369 = bitcast float* %368 to <4 x float>*
  store <4 x float> %313, <4 x float>* %369, align 16, !tbaa !2
  %370 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 108
  %371 = bitcast float* %370 to <4 x float>*
  store <4 x float> %315, <4 x float>* %371, align 16, !tbaa !2
  %372 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 112
  %373 = bitcast float* %372 to <4 x float>*
  store <4 x float> %313, <4 x float>* %373, align 16, !tbaa !2
  %374 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 116
  %375 = bitcast float* %374 to <4 x float>*
  store <4 x float> %315, <4 x float>* %375, align 16, !tbaa !2
  %376 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 120
  %377 = bitcast float* %376 to <4 x float>*
  store <4 x float> %313, <4 x float>* %377, align 16, !tbaa !2
  %378 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 124
  %379 = bitcast float* %378 to <4 x float>*
  store <4 x float> %315, <4 x float>* %379, align 16, !tbaa !2
  %380 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 128
  %381 = bitcast float* %380 to <4 x float>*
  store <4 x float> %313, <4 x float>* %381, align 16, !tbaa !2
  %382 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 132
  %383 = bitcast float* %382 to <4 x float>*
  store <4 x float> %315, <4 x float>* %383, align 16, !tbaa !2
  %384 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 136
  %385 = bitcast float* %384 to <4 x float>*
  store <4 x float> %313, <4 x float>* %385, align 16, !tbaa !2
  %386 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 140
  %387 = bitcast float* %386 to <4 x float>*
  store <4 x float> %315, <4 x float>* %387, align 16, !tbaa !2
  %388 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 144
  %389 = bitcast float* %388 to <4 x float>*
  store <4 x float> %313, <4 x float>* %389, align 16, !tbaa !2
  %390 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 148
  %391 = bitcast float* %390 to <4 x float>*
  store <4 x float> %315, <4 x float>* %391, align 16, !tbaa !2
  %392 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 152
  %393 = bitcast float* %392 to <4 x float>*
  store <4 x float> %313, <4 x float>* %393, align 16, !tbaa !2
  %394 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 156
  %395 = bitcast float* %394 to <4 x float>*
  store <4 x float> %315, <4 x float>* %395, align 16, !tbaa !2
  %396 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 160
  %397 = bitcast float* %396 to <4 x float>*
  store <4 x float> %313, <4 x float>* %397, align 16, !tbaa !2
  %398 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 164
  %399 = bitcast float* %398 to <4 x float>*
  store <4 x float> %315, <4 x float>* %399, align 16, !tbaa !2
  %400 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 168
  %401 = bitcast float* %400 to <4 x float>*
  store <4 x float> %313, <4 x float>* %401, align 16, !tbaa !2
  %402 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 172
  %403 = bitcast float* %402 to <4 x float>*
  store <4 x float> %315, <4 x float>* %403, align 16, !tbaa !2
  %404 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 176
  %405 = bitcast float* %404 to <4 x float>*
  store <4 x float> %313, <4 x float>* %405, align 16, !tbaa !2
  %406 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 180
  %407 = bitcast float* %406 to <4 x float>*
  store <4 x float> %315, <4 x float>* %407, align 16, !tbaa !2
  %408 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 184
  %409 = bitcast float* %408 to <4 x float>*
  store <4 x float> %313, <4 x float>* %409, align 16, !tbaa !2
  %410 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 188
  %411 = bitcast float* %410 to <4 x float>*
  store <4 x float> %315, <4 x float>* %411, align 16, !tbaa !2
  %412 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 192
  %413 = bitcast float* %412 to <4 x float>*
  store <4 x float> %313, <4 x float>* %413, align 16, !tbaa !2
  %414 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 196
  %415 = bitcast float* %414 to <4 x float>*
  store <4 x float> %315, <4 x float>* %415, align 16, !tbaa !2
  %416 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 200
  %417 = bitcast float* %416 to <4 x float>*
  store <4 x float> %313, <4 x float>* %417, align 16, !tbaa !2
  %418 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 204
  %419 = bitcast float* %418 to <4 x float>*
  store <4 x float> %315, <4 x float>* %419, align 16, !tbaa !2
  %420 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 208
  %421 = bitcast float* %420 to <4 x float>*
  store <4 x float> %313, <4 x float>* %421, align 16, !tbaa !2
  %422 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 212
  %423 = bitcast float* %422 to <4 x float>*
  store <4 x float> %315, <4 x float>* %423, align 16, !tbaa !2
  %424 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 216
  %425 = bitcast float* %424 to <4 x float>*
  store <4 x float> %313, <4 x float>* %425, align 16, !tbaa !2
  %426 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 220
  %427 = bitcast float* %426 to <4 x float>*
  store <4 x float> %315, <4 x float>* %427, align 16, !tbaa !2
  %428 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 224
  %429 = bitcast float* %428 to <4 x float>*
  store <4 x float> %313, <4 x float>* %429, align 16, !tbaa !2
  %430 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 228
  %431 = bitcast float* %430 to <4 x float>*
  store <4 x float> %315, <4 x float>* %431, align 16, !tbaa !2
  %432 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 232
  %433 = bitcast float* %432 to <4 x float>*
  store <4 x float> %313, <4 x float>* %433, align 16, !tbaa !2
  %434 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 236
  %435 = bitcast float* %434 to <4 x float>*
  store <4 x float> %315, <4 x float>* %435, align 16, !tbaa !2
  %436 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 240
  %437 = bitcast float* %436 to <4 x float>*
  store <4 x float> %313, <4 x float>* %437, align 16, !tbaa !2
  %438 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 244
  %439 = bitcast float* %438 to <4 x float>*
  store <4 x float> %315, <4 x float>* %439, align 16, !tbaa !2
  %440 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 248
  %441 = bitcast float* %440 to <4 x float>*
  store <4 x float> %313, <4 x float>* %441, align 16, !tbaa !2
  %442 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %307, i64 252
  %443 = bitcast float* %442 to <4 x float>*
  store <4 x float> %315, <4 x float>* %443, align 16, !tbaa !2
  %444 = icmp eq i64 %308, 256
  br i1 %444, label %445, label %306

445:                                              ; preds = %306, %445
  %446 = phi i64 [ %447, %445 ], [ 0, %306 ]
  %447 = add nuw nsw i64 %446, 1
  %448 = trunc i64 %447 to i32
  %449 = mul nsw i32 %448, %448
  %450 = sitofp i32 %449 to float
  %451 = fdiv float 1.000000e+00, %450
  %452 = insertelement <4 x float> undef, float %451, i32 0
  %453 = shufflevector <4 x float> %452, <4 x float> undef, <4 x i32> zeroinitializer
  %454 = insertelement <4 x float> undef, float %451, i32 0
  %455 = shufflevector <4 x float> %454, <4 x float> undef, <4 x i32> zeroinitializer
  %456 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 0
  %457 = bitcast float* %456 to <4 x float>*
  store <4 x float> %453, <4 x float>* %457, align 16, !tbaa !2
  %458 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 4
  %459 = bitcast float* %458 to <4 x float>*
  store <4 x float> %455, <4 x float>* %459, align 16, !tbaa !2
  %460 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 8
  %461 = bitcast float* %460 to <4 x float>*
  store <4 x float> %453, <4 x float>* %461, align 16, !tbaa !2
  %462 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 12
  %463 = bitcast float* %462 to <4 x float>*
  store <4 x float> %455, <4 x float>* %463, align 16, !tbaa !2
  %464 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 16
  %465 = bitcast float* %464 to <4 x float>*
  store <4 x float> %453, <4 x float>* %465, align 16, !tbaa !2
  %466 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 20
  %467 = bitcast float* %466 to <4 x float>*
  store <4 x float> %455, <4 x float>* %467, align 16, !tbaa !2
  %468 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 24
  %469 = bitcast float* %468 to <4 x float>*
  store <4 x float> %453, <4 x float>* %469, align 16, !tbaa !2
  %470 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 28
  %471 = bitcast float* %470 to <4 x float>*
  store <4 x float> %455, <4 x float>* %471, align 16, !tbaa !2
  %472 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 32
  %473 = bitcast float* %472 to <4 x float>*
  store <4 x float> %453, <4 x float>* %473, align 16, !tbaa !2
  %474 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 36
  %475 = bitcast float* %474 to <4 x float>*
  store <4 x float> %455, <4 x float>* %475, align 16, !tbaa !2
  %476 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 40
  %477 = bitcast float* %476 to <4 x float>*
  store <4 x float> %453, <4 x float>* %477, align 16, !tbaa !2
  %478 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 44
  %479 = bitcast float* %478 to <4 x float>*
  store <4 x float> %455, <4 x float>* %479, align 16, !tbaa !2
  %480 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 48
  %481 = bitcast float* %480 to <4 x float>*
  store <4 x float> %453, <4 x float>* %481, align 16, !tbaa !2
  %482 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 52
  %483 = bitcast float* %482 to <4 x float>*
  store <4 x float> %455, <4 x float>* %483, align 16, !tbaa !2
  %484 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 56
  %485 = bitcast float* %484 to <4 x float>*
  store <4 x float> %453, <4 x float>* %485, align 16, !tbaa !2
  %486 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 60
  %487 = bitcast float* %486 to <4 x float>*
  store <4 x float> %455, <4 x float>* %487, align 16, !tbaa !2
  %488 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 64
  %489 = bitcast float* %488 to <4 x float>*
  store <4 x float> %453, <4 x float>* %489, align 16, !tbaa !2
  %490 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 68
  %491 = bitcast float* %490 to <4 x float>*
  store <4 x float> %455, <4 x float>* %491, align 16, !tbaa !2
  %492 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 72
  %493 = bitcast float* %492 to <4 x float>*
  store <4 x float> %453, <4 x float>* %493, align 16, !tbaa !2
  %494 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 76
  %495 = bitcast float* %494 to <4 x float>*
  store <4 x float> %455, <4 x float>* %495, align 16, !tbaa !2
  %496 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 80
  %497 = bitcast float* %496 to <4 x float>*
  store <4 x float> %453, <4 x float>* %497, align 16, !tbaa !2
  %498 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 84
  %499 = bitcast float* %498 to <4 x float>*
  store <4 x float> %455, <4 x float>* %499, align 16, !tbaa !2
  %500 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 88
  %501 = bitcast float* %500 to <4 x float>*
  store <4 x float> %453, <4 x float>* %501, align 16, !tbaa !2
  %502 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 92
  %503 = bitcast float* %502 to <4 x float>*
  store <4 x float> %455, <4 x float>* %503, align 16, !tbaa !2
  %504 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 96
  %505 = bitcast float* %504 to <4 x float>*
  store <4 x float> %453, <4 x float>* %505, align 16, !tbaa !2
  %506 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 100
  %507 = bitcast float* %506 to <4 x float>*
  store <4 x float> %455, <4 x float>* %507, align 16, !tbaa !2
  %508 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 104
  %509 = bitcast float* %508 to <4 x float>*
  store <4 x float> %453, <4 x float>* %509, align 16, !tbaa !2
  %510 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 108
  %511 = bitcast float* %510 to <4 x float>*
  store <4 x float> %455, <4 x float>* %511, align 16, !tbaa !2
  %512 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 112
  %513 = bitcast float* %512 to <4 x float>*
  store <4 x float> %453, <4 x float>* %513, align 16, !tbaa !2
  %514 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 116
  %515 = bitcast float* %514 to <4 x float>*
  store <4 x float> %455, <4 x float>* %515, align 16, !tbaa !2
  %516 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 120
  %517 = bitcast float* %516 to <4 x float>*
  store <4 x float> %453, <4 x float>* %517, align 16, !tbaa !2
  %518 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 124
  %519 = bitcast float* %518 to <4 x float>*
  store <4 x float> %455, <4 x float>* %519, align 16, !tbaa !2
  %520 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 128
  %521 = bitcast float* %520 to <4 x float>*
  store <4 x float> %453, <4 x float>* %521, align 16, !tbaa !2
  %522 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 132
  %523 = bitcast float* %522 to <4 x float>*
  store <4 x float> %455, <4 x float>* %523, align 16, !tbaa !2
  %524 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 136
  %525 = bitcast float* %524 to <4 x float>*
  store <4 x float> %453, <4 x float>* %525, align 16, !tbaa !2
  %526 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 140
  %527 = bitcast float* %526 to <4 x float>*
  store <4 x float> %455, <4 x float>* %527, align 16, !tbaa !2
  %528 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 144
  %529 = bitcast float* %528 to <4 x float>*
  store <4 x float> %453, <4 x float>* %529, align 16, !tbaa !2
  %530 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 148
  %531 = bitcast float* %530 to <4 x float>*
  store <4 x float> %455, <4 x float>* %531, align 16, !tbaa !2
  %532 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 152
  %533 = bitcast float* %532 to <4 x float>*
  store <4 x float> %453, <4 x float>* %533, align 16, !tbaa !2
  %534 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 156
  %535 = bitcast float* %534 to <4 x float>*
  store <4 x float> %455, <4 x float>* %535, align 16, !tbaa !2
  %536 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 160
  %537 = bitcast float* %536 to <4 x float>*
  store <4 x float> %453, <4 x float>* %537, align 16, !tbaa !2
  %538 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 164
  %539 = bitcast float* %538 to <4 x float>*
  store <4 x float> %455, <4 x float>* %539, align 16, !tbaa !2
  %540 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 168
  %541 = bitcast float* %540 to <4 x float>*
  store <4 x float> %453, <4 x float>* %541, align 16, !tbaa !2
  %542 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 172
  %543 = bitcast float* %542 to <4 x float>*
  store <4 x float> %455, <4 x float>* %543, align 16, !tbaa !2
  %544 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 176
  %545 = bitcast float* %544 to <4 x float>*
  store <4 x float> %453, <4 x float>* %545, align 16, !tbaa !2
  %546 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 180
  %547 = bitcast float* %546 to <4 x float>*
  store <4 x float> %455, <4 x float>* %547, align 16, !tbaa !2
  %548 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 184
  %549 = bitcast float* %548 to <4 x float>*
  store <4 x float> %453, <4 x float>* %549, align 16, !tbaa !2
  %550 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 188
  %551 = bitcast float* %550 to <4 x float>*
  store <4 x float> %455, <4 x float>* %551, align 16, !tbaa !2
  %552 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 192
  %553 = bitcast float* %552 to <4 x float>*
  store <4 x float> %453, <4 x float>* %553, align 16, !tbaa !2
  %554 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 196
  %555 = bitcast float* %554 to <4 x float>*
  store <4 x float> %455, <4 x float>* %555, align 16, !tbaa !2
  %556 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 200
  %557 = bitcast float* %556 to <4 x float>*
  store <4 x float> %453, <4 x float>* %557, align 16, !tbaa !2
  %558 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 204
  %559 = bitcast float* %558 to <4 x float>*
  store <4 x float> %455, <4 x float>* %559, align 16, !tbaa !2
  %560 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 208
  %561 = bitcast float* %560 to <4 x float>*
  store <4 x float> %453, <4 x float>* %561, align 16, !tbaa !2
  %562 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 212
  %563 = bitcast float* %562 to <4 x float>*
  store <4 x float> %455, <4 x float>* %563, align 16, !tbaa !2
  %564 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 216
  %565 = bitcast float* %564 to <4 x float>*
  store <4 x float> %453, <4 x float>* %565, align 16, !tbaa !2
  %566 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 220
  %567 = bitcast float* %566 to <4 x float>*
  store <4 x float> %455, <4 x float>* %567, align 16, !tbaa !2
  %568 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 224
  %569 = bitcast float* %568 to <4 x float>*
  store <4 x float> %453, <4 x float>* %569, align 16, !tbaa !2
  %570 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 228
  %571 = bitcast float* %570 to <4 x float>*
  store <4 x float> %455, <4 x float>* %571, align 16, !tbaa !2
  %572 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 232
  %573 = bitcast float* %572 to <4 x float>*
  store <4 x float> %453, <4 x float>* %573, align 16, !tbaa !2
  %574 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 236
  %575 = bitcast float* %574 to <4 x float>*
  store <4 x float> %455, <4 x float>* %575, align 16, !tbaa !2
  %576 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 240
  %577 = bitcast float* %576 to <4 x float>*
  store <4 x float> %453, <4 x float>* %577, align 16, !tbaa !2
  %578 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 244
  %579 = bitcast float* %578 to <4 x float>*
  store <4 x float> %455, <4 x float>* %579, align 16, !tbaa !2
  %580 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 248
  %581 = bitcast float* %580 to <4 x float>*
  store <4 x float> %453, <4 x float>* %581, align 16, !tbaa !2
  %582 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %446, i64 252
  %583 = bitcast float* %582 to <4 x float>*
  store <4 x float> %455, <4 x float>* %583, align 16, !tbaa !2
  %584 = icmp eq i64 %447, 256
  br i1 %584, label %15603, label %445

585:                                              ; preds = %303
  %586 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #15
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %1027

588:                                              ; preds = %585, %588
  %589 = phi i64 [ %629, %588 ], [ 0, %585 ]
  %590 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %589
  %591 = bitcast float* %590 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %591, align 16, !tbaa !2
  %592 = getelementptr inbounds float, float* %590, i64 4
  %593 = bitcast float* %592 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %593, align 16, !tbaa !2
  %594 = or i64 %589, 8
  %595 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %594
  %596 = bitcast float* %595 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %596, align 16, !tbaa !2
  %597 = getelementptr inbounds float, float* %595, i64 4
  %598 = bitcast float* %597 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %598, align 16, !tbaa !2
  %599 = or i64 %589, 16
  %600 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %599
  %601 = bitcast float* %600 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %601, align 16, !tbaa !2
  %602 = getelementptr inbounds float, float* %600, i64 4
  %603 = bitcast float* %602 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %603, align 16, !tbaa !2
  %604 = or i64 %589, 24
  %605 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %604
  %606 = bitcast float* %605 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %606, align 16, !tbaa !2
  %607 = getelementptr inbounds float, float* %605, i64 4
  %608 = bitcast float* %607 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %608, align 16, !tbaa !2
  %609 = or i64 %589, 32
  %610 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %609
  %611 = bitcast float* %610 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %611, align 16, !tbaa !2
  %612 = getelementptr inbounds float, float* %610, i64 4
  %613 = bitcast float* %612 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %613, align 16, !tbaa !2
  %614 = or i64 %589, 40
  %615 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %614
  %616 = bitcast float* %615 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %616, align 16, !tbaa !2
  %617 = getelementptr inbounds float, float* %615, i64 4
  %618 = bitcast float* %617 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %618, align 16, !tbaa !2
  %619 = or i64 %589, 48
  %620 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %619
  %621 = bitcast float* %620 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %621, align 16, !tbaa !2
  %622 = getelementptr inbounds float, float* %620, i64 4
  %623 = bitcast float* %622 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %623, align 16, !tbaa !2
  %624 = or i64 %589, 56
  %625 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %624
  %626 = bitcast float* %625 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %626, align 16, !tbaa !2
  %627 = getelementptr inbounds float, float* %625, i64 4
  %628 = bitcast float* %627 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %628, align 16, !tbaa !2
  %629 = add nuw nsw i64 %589, 64
  %630 = icmp eq i64 %629, 32000
  br i1 %630, label %631, label %588, !llvm.loop !31

631:                                              ; preds = %588, %631
  %632 = phi i64 [ %761, %631 ], [ 0, %588 ]
  %633 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 0
  %634 = bitcast float* %633 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %634, align 16, !tbaa !2
  %635 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 4
  %636 = bitcast float* %635 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %636, align 16, !tbaa !2
  %637 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 8
  %638 = bitcast float* %637 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %638, align 16, !tbaa !2
  %639 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 12
  %640 = bitcast float* %639 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %640, align 16, !tbaa !2
  %641 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 16
  %642 = bitcast float* %641 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %642, align 16, !tbaa !2
  %643 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 20
  %644 = bitcast float* %643 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %644, align 16, !tbaa !2
  %645 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 24
  %646 = bitcast float* %645 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %646, align 16, !tbaa !2
  %647 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 28
  %648 = bitcast float* %647 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %648, align 16, !tbaa !2
  %649 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 32
  %650 = bitcast float* %649 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %650, align 16, !tbaa !2
  %651 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 36
  %652 = bitcast float* %651 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %652, align 16, !tbaa !2
  %653 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 40
  %654 = bitcast float* %653 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %654, align 16, !tbaa !2
  %655 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 44
  %656 = bitcast float* %655 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %656, align 16, !tbaa !2
  %657 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 48
  %658 = bitcast float* %657 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %658, align 16, !tbaa !2
  %659 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 52
  %660 = bitcast float* %659 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %660, align 16, !tbaa !2
  %661 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 56
  %662 = bitcast float* %661 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %662, align 16, !tbaa !2
  %663 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 60
  %664 = bitcast float* %663 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %664, align 16, !tbaa !2
  %665 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 64
  %666 = bitcast float* %665 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %666, align 16, !tbaa !2
  %667 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 68
  %668 = bitcast float* %667 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %668, align 16, !tbaa !2
  %669 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 72
  %670 = bitcast float* %669 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %670, align 16, !tbaa !2
  %671 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 76
  %672 = bitcast float* %671 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %672, align 16, !tbaa !2
  %673 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 80
  %674 = bitcast float* %673 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %674, align 16, !tbaa !2
  %675 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 84
  %676 = bitcast float* %675 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %676, align 16, !tbaa !2
  %677 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 88
  %678 = bitcast float* %677 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %678, align 16, !tbaa !2
  %679 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 92
  %680 = bitcast float* %679 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %680, align 16, !tbaa !2
  %681 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 96
  %682 = bitcast float* %681 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %682, align 16, !tbaa !2
  %683 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 100
  %684 = bitcast float* %683 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %684, align 16, !tbaa !2
  %685 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 104
  %686 = bitcast float* %685 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %686, align 16, !tbaa !2
  %687 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 108
  %688 = bitcast float* %687 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %688, align 16, !tbaa !2
  %689 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 112
  %690 = bitcast float* %689 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %690, align 16, !tbaa !2
  %691 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 116
  %692 = bitcast float* %691 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %692, align 16, !tbaa !2
  %693 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 120
  %694 = bitcast float* %693 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %694, align 16, !tbaa !2
  %695 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 124
  %696 = bitcast float* %695 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %696, align 16, !tbaa !2
  %697 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 128
  %698 = bitcast float* %697 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %698, align 16, !tbaa !2
  %699 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 132
  %700 = bitcast float* %699 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %700, align 16, !tbaa !2
  %701 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 136
  %702 = bitcast float* %701 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %702, align 16, !tbaa !2
  %703 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 140
  %704 = bitcast float* %703 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %704, align 16, !tbaa !2
  %705 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 144
  %706 = bitcast float* %705 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %706, align 16, !tbaa !2
  %707 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 148
  %708 = bitcast float* %707 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %708, align 16, !tbaa !2
  %709 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 152
  %710 = bitcast float* %709 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %710, align 16, !tbaa !2
  %711 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 156
  %712 = bitcast float* %711 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %712, align 16, !tbaa !2
  %713 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 160
  %714 = bitcast float* %713 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %714, align 16, !tbaa !2
  %715 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 164
  %716 = bitcast float* %715 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %716, align 16, !tbaa !2
  %717 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 168
  %718 = bitcast float* %717 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %718, align 16, !tbaa !2
  %719 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 172
  %720 = bitcast float* %719 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %720, align 16, !tbaa !2
  %721 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 176
  %722 = bitcast float* %721 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %722, align 16, !tbaa !2
  %723 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 180
  %724 = bitcast float* %723 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %724, align 16, !tbaa !2
  %725 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 184
  %726 = bitcast float* %725 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %726, align 16, !tbaa !2
  %727 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 188
  %728 = bitcast float* %727 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %728, align 16, !tbaa !2
  %729 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 192
  %730 = bitcast float* %729 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %730, align 16, !tbaa !2
  %731 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 196
  %732 = bitcast float* %731 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %732, align 16, !tbaa !2
  %733 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 200
  %734 = bitcast float* %733 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %734, align 16, !tbaa !2
  %735 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 204
  %736 = bitcast float* %735 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %736, align 16, !tbaa !2
  %737 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 208
  %738 = bitcast float* %737 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %738, align 16, !tbaa !2
  %739 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 212
  %740 = bitcast float* %739 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %740, align 16, !tbaa !2
  %741 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 216
  %742 = bitcast float* %741 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %742, align 16, !tbaa !2
  %743 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 220
  %744 = bitcast float* %743 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %744, align 16, !tbaa !2
  %745 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 224
  %746 = bitcast float* %745 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %746, align 16, !tbaa !2
  %747 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 228
  %748 = bitcast float* %747 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %748, align 16, !tbaa !2
  %749 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 232
  %750 = bitcast float* %749 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %750, align 16, !tbaa !2
  %751 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 236
  %752 = bitcast float* %751 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %752, align 16, !tbaa !2
  %753 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 240
  %754 = bitcast float* %753 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %754, align 16, !tbaa !2
  %755 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 244
  %756 = bitcast float* %755 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %756, align 16, !tbaa !2
  %757 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 248
  %758 = bitcast float* %757 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %758, align 16, !tbaa !2
  %759 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %632, i64 252
  %760 = bitcast float* %759 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %760, align 16, !tbaa !2
  %761 = add nuw nsw i64 %632, 1
  %762 = icmp eq i64 %761, 256
  br i1 %762, label %763, label %631

763:                                              ; preds = %631, %763
  %764 = phi i64 [ %893, %763 ], [ 0, %631 ]
  %765 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 0
  %766 = bitcast float* %765 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %766, align 16, !tbaa !2
  %767 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 4
  %768 = bitcast float* %767 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %768, align 16, !tbaa !2
  %769 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 8
  %770 = bitcast float* %769 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %770, align 16, !tbaa !2
  %771 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 12
  %772 = bitcast float* %771 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %772, align 16, !tbaa !2
  %773 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 16
  %774 = bitcast float* %773 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %774, align 16, !tbaa !2
  %775 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 20
  %776 = bitcast float* %775 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %776, align 16, !tbaa !2
  %777 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 24
  %778 = bitcast float* %777 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %778, align 16, !tbaa !2
  %779 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 28
  %780 = bitcast float* %779 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %780, align 16, !tbaa !2
  %781 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 32
  %782 = bitcast float* %781 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %782, align 16, !tbaa !2
  %783 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 36
  %784 = bitcast float* %783 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %784, align 16, !tbaa !2
  %785 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 40
  %786 = bitcast float* %785 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %786, align 16, !tbaa !2
  %787 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 44
  %788 = bitcast float* %787 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %788, align 16, !tbaa !2
  %789 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 48
  %790 = bitcast float* %789 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %790, align 16, !tbaa !2
  %791 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 52
  %792 = bitcast float* %791 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %792, align 16, !tbaa !2
  %793 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 56
  %794 = bitcast float* %793 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %794, align 16, !tbaa !2
  %795 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 60
  %796 = bitcast float* %795 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %796, align 16, !tbaa !2
  %797 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 64
  %798 = bitcast float* %797 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %798, align 16, !tbaa !2
  %799 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 68
  %800 = bitcast float* %799 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %800, align 16, !tbaa !2
  %801 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 72
  %802 = bitcast float* %801 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %802, align 16, !tbaa !2
  %803 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 76
  %804 = bitcast float* %803 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %804, align 16, !tbaa !2
  %805 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 80
  %806 = bitcast float* %805 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %806, align 16, !tbaa !2
  %807 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 84
  %808 = bitcast float* %807 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %808, align 16, !tbaa !2
  %809 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 88
  %810 = bitcast float* %809 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %810, align 16, !tbaa !2
  %811 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 92
  %812 = bitcast float* %811 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %812, align 16, !tbaa !2
  %813 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 96
  %814 = bitcast float* %813 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %814, align 16, !tbaa !2
  %815 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 100
  %816 = bitcast float* %815 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %816, align 16, !tbaa !2
  %817 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 104
  %818 = bitcast float* %817 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %818, align 16, !tbaa !2
  %819 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 108
  %820 = bitcast float* %819 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %820, align 16, !tbaa !2
  %821 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 112
  %822 = bitcast float* %821 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %822, align 16, !tbaa !2
  %823 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 116
  %824 = bitcast float* %823 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %824, align 16, !tbaa !2
  %825 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 120
  %826 = bitcast float* %825 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %826, align 16, !tbaa !2
  %827 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 124
  %828 = bitcast float* %827 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %828, align 16, !tbaa !2
  %829 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 128
  %830 = bitcast float* %829 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %830, align 16, !tbaa !2
  %831 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 132
  %832 = bitcast float* %831 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %832, align 16, !tbaa !2
  %833 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 136
  %834 = bitcast float* %833 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %834, align 16, !tbaa !2
  %835 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 140
  %836 = bitcast float* %835 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %836, align 16, !tbaa !2
  %837 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 144
  %838 = bitcast float* %837 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %838, align 16, !tbaa !2
  %839 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 148
  %840 = bitcast float* %839 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %840, align 16, !tbaa !2
  %841 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 152
  %842 = bitcast float* %841 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %842, align 16, !tbaa !2
  %843 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 156
  %844 = bitcast float* %843 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %844, align 16, !tbaa !2
  %845 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 160
  %846 = bitcast float* %845 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %846, align 16, !tbaa !2
  %847 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 164
  %848 = bitcast float* %847 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %848, align 16, !tbaa !2
  %849 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 168
  %850 = bitcast float* %849 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %850, align 16, !tbaa !2
  %851 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 172
  %852 = bitcast float* %851 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %852, align 16, !tbaa !2
  %853 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 176
  %854 = bitcast float* %853 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %854, align 16, !tbaa !2
  %855 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 180
  %856 = bitcast float* %855 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %856, align 16, !tbaa !2
  %857 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 184
  %858 = bitcast float* %857 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %858, align 16, !tbaa !2
  %859 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 188
  %860 = bitcast float* %859 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %860, align 16, !tbaa !2
  %861 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 192
  %862 = bitcast float* %861 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %862, align 16, !tbaa !2
  %863 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 196
  %864 = bitcast float* %863 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %864, align 16, !tbaa !2
  %865 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 200
  %866 = bitcast float* %865 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %866, align 16, !tbaa !2
  %867 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 204
  %868 = bitcast float* %867 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %868, align 16, !tbaa !2
  %869 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 208
  %870 = bitcast float* %869 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %870, align 16, !tbaa !2
  %871 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 212
  %872 = bitcast float* %871 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %872, align 16, !tbaa !2
  %873 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 216
  %874 = bitcast float* %873 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %874, align 16, !tbaa !2
  %875 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 220
  %876 = bitcast float* %875 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %876, align 16, !tbaa !2
  %877 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 224
  %878 = bitcast float* %877 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %878, align 16, !tbaa !2
  %879 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 228
  %880 = bitcast float* %879 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %880, align 16, !tbaa !2
  %881 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 232
  %882 = bitcast float* %881 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %882, align 16, !tbaa !2
  %883 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 236
  %884 = bitcast float* %883 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %884, align 16, !tbaa !2
  %885 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 240
  %886 = bitcast float* %885 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %886, align 16, !tbaa !2
  %887 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 244
  %888 = bitcast float* %887 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %888, align 16, !tbaa !2
  %889 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 248
  %890 = bitcast float* %889 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %890, align 16, !tbaa !2
  %891 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %764, i64 252
  %892 = bitcast float* %891 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %892, align 16, !tbaa !2
  %893 = add nuw nsw i64 %764, 1
  %894 = icmp eq i64 %893, 256
  br i1 %894, label %895, label %763

895:                                              ; preds = %763, %895
  %896 = phi i64 [ %1025, %895 ], [ 0, %763 ]
  %897 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 0
  %898 = bitcast float* %897 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %898, align 16, !tbaa !2
  %899 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 4
  %900 = bitcast float* %899 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %900, align 16, !tbaa !2
  %901 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 8
  %902 = bitcast float* %901 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %902, align 16, !tbaa !2
  %903 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 12
  %904 = bitcast float* %903 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %904, align 16, !tbaa !2
  %905 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 16
  %906 = bitcast float* %905 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %906, align 16, !tbaa !2
  %907 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 20
  %908 = bitcast float* %907 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %908, align 16, !tbaa !2
  %909 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 24
  %910 = bitcast float* %909 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %910, align 16, !tbaa !2
  %911 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 28
  %912 = bitcast float* %911 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %912, align 16, !tbaa !2
  %913 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 32
  %914 = bitcast float* %913 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %914, align 16, !tbaa !2
  %915 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 36
  %916 = bitcast float* %915 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %916, align 16, !tbaa !2
  %917 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 40
  %918 = bitcast float* %917 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %918, align 16, !tbaa !2
  %919 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 44
  %920 = bitcast float* %919 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %920, align 16, !tbaa !2
  %921 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 48
  %922 = bitcast float* %921 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %922, align 16, !tbaa !2
  %923 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 52
  %924 = bitcast float* %923 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %924, align 16, !tbaa !2
  %925 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 56
  %926 = bitcast float* %925 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %926, align 16, !tbaa !2
  %927 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 60
  %928 = bitcast float* %927 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %928, align 16, !tbaa !2
  %929 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 64
  %930 = bitcast float* %929 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %930, align 16, !tbaa !2
  %931 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 68
  %932 = bitcast float* %931 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %932, align 16, !tbaa !2
  %933 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 72
  %934 = bitcast float* %933 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %934, align 16, !tbaa !2
  %935 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 76
  %936 = bitcast float* %935 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %936, align 16, !tbaa !2
  %937 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 80
  %938 = bitcast float* %937 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %938, align 16, !tbaa !2
  %939 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 84
  %940 = bitcast float* %939 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %940, align 16, !tbaa !2
  %941 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 88
  %942 = bitcast float* %941 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %942, align 16, !tbaa !2
  %943 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 92
  %944 = bitcast float* %943 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %944, align 16, !tbaa !2
  %945 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 96
  %946 = bitcast float* %945 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %946, align 16, !tbaa !2
  %947 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 100
  %948 = bitcast float* %947 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %948, align 16, !tbaa !2
  %949 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 104
  %950 = bitcast float* %949 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %950, align 16, !tbaa !2
  %951 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 108
  %952 = bitcast float* %951 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %952, align 16, !tbaa !2
  %953 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 112
  %954 = bitcast float* %953 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %954, align 16, !tbaa !2
  %955 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 116
  %956 = bitcast float* %955 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %956, align 16, !tbaa !2
  %957 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 120
  %958 = bitcast float* %957 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %958, align 16, !tbaa !2
  %959 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 124
  %960 = bitcast float* %959 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %960, align 16, !tbaa !2
  %961 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 128
  %962 = bitcast float* %961 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %962, align 16, !tbaa !2
  %963 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 132
  %964 = bitcast float* %963 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %964, align 16, !tbaa !2
  %965 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 136
  %966 = bitcast float* %965 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %966, align 16, !tbaa !2
  %967 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 140
  %968 = bitcast float* %967 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %968, align 16, !tbaa !2
  %969 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 144
  %970 = bitcast float* %969 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %970, align 16, !tbaa !2
  %971 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 148
  %972 = bitcast float* %971 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %972, align 16, !tbaa !2
  %973 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 152
  %974 = bitcast float* %973 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %974, align 16, !tbaa !2
  %975 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 156
  %976 = bitcast float* %975 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %976, align 16, !tbaa !2
  %977 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 160
  %978 = bitcast float* %977 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %978, align 16, !tbaa !2
  %979 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 164
  %980 = bitcast float* %979 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %980, align 16, !tbaa !2
  %981 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 168
  %982 = bitcast float* %981 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %982, align 16, !tbaa !2
  %983 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 172
  %984 = bitcast float* %983 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %984, align 16, !tbaa !2
  %985 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 176
  %986 = bitcast float* %985 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %986, align 16, !tbaa !2
  %987 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 180
  %988 = bitcast float* %987 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %988, align 16, !tbaa !2
  %989 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 184
  %990 = bitcast float* %989 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %990, align 16, !tbaa !2
  %991 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 188
  %992 = bitcast float* %991 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %992, align 16, !tbaa !2
  %993 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 192
  %994 = bitcast float* %993 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %994, align 16, !tbaa !2
  %995 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 196
  %996 = bitcast float* %995 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %996, align 16, !tbaa !2
  %997 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 200
  %998 = bitcast float* %997 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %998, align 16, !tbaa !2
  %999 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 204
  %1000 = bitcast float* %999 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1000, align 16, !tbaa !2
  %1001 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 208
  %1002 = bitcast float* %1001 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1002, align 16, !tbaa !2
  %1003 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 212
  %1004 = bitcast float* %1003 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1004, align 16, !tbaa !2
  %1005 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 216
  %1006 = bitcast float* %1005 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1006, align 16, !tbaa !2
  %1007 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 220
  %1008 = bitcast float* %1007 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1008, align 16, !tbaa !2
  %1009 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 224
  %1010 = bitcast float* %1009 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1010, align 16, !tbaa !2
  %1011 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 228
  %1012 = bitcast float* %1011 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1012, align 16, !tbaa !2
  %1013 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 232
  %1014 = bitcast float* %1013 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1014, align 16, !tbaa !2
  %1015 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 236
  %1016 = bitcast float* %1015 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1016, align 16, !tbaa !2
  %1017 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 240
  %1018 = bitcast float* %1017 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1018, align 16, !tbaa !2
  %1019 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 244
  %1020 = bitcast float* %1019 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1020, align 16, !tbaa !2
  %1021 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 248
  %1022 = bitcast float* %1021 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1022, align 16, !tbaa !2
  %1023 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %896, i64 252
  %1024 = bitcast float* %1023 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1024, align 16, !tbaa !2
  %1025 = add nuw nsw i64 %896, 1
  %1026 = icmp eq i64 %1025, 256
  br i1 %1026, label %15603, label %895

1027:                                             ; preds = %585
  %1028 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)) #15
  %1029 = icmp eq i32 %1028, 0
  br i1 %1029, label %1030, label %1073

1030:                                             ; preds = %1027, %1030
  %1031 = phi i64 [ %1071, %1030 ], [ 0, %1027 ]
  %1032 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1031
  %1033 = bitcast float* %1032 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1033, align 16, !tbaa !2
  %1034 = getelementptr inbounds float, float* %1032, i64 4
  %1035 = bitcast float* %1034 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1035, align 16, !tbaa !2
  %1036 = or i64 %1031, 8
  %1037 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1036
  %1038 = bitcast float* %1037 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1038, align 16, !tbaa !2
  %1039 = getelementptr inbounds float, float* %1037, i64 4
  %1040 = bitcast float* %1039 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1040, align 16, !tbaa !2
  %1041 = or i64 %1031, 16
  %1042 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1041
  %1043 = bitcast float* %1042 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1043, align 16, !tbaa !2
  %1044 = getelementptr inbounds float, float* %1042, i64 4
  %1045 = bitcast float* %1044 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1045, align 16, !tbaa !2
  %1046 = or i64 %1031, 24
  %1047 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1046
  %1048 = bitcast float* %1047 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1048, align 16, !tbaa !2
  %1049 = getelementptr inbounds float, float* %1047, i64 4
  %1050 = bitcast float* %1049 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1050, align 16, !tbaa !2
  %1051 = or i64 %1031, 32
  %1052 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1051
  %1053 = bitcast float* %1052 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1053, align 16, !tbaa !2
  %1054 = getelementptr inbounds float, float* %1052, i64 4
  %1055 = bitcast float* %1054 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1055, align 16, !tbaa !2
  %1056 = or i64 %1031, 40
  %1057 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1056
  %1058 = bitcast float* %1057 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1058, align 16, !tbaa !2
  %1059 = getelementptr inbounds float, float* %1057, i64 4
  %1060 = bitcast float* %1059 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1060, align 16, !tbaa !2
  %1061 = or i64 %1031, 48
  %1062 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1061
  %1063 = bitcast float* %1062 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1063, align 16, !tbaa !2
  %1064 = getelementptr inbounds float, float* %1062, i64 4
  %1065 = bitcast float* %1064 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1065, align 16, !tbaa !2
  %1066 = or i64 %1031, 56
  %1067 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1066
  %1068 = bitcast float* %1067 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1068, align 16, !tbaa !2
  %1069 = getelementptr inbounds float, float* %1067, i64 4
  %1070 = bitcast float* %1069 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1070, align 16, !tbaa !2
  %1071 = add nuw nsw i64 %1031, 64
  %1072 = icmp eq i64 %1071, 32000
  br i1 %1072, label %15603, label %1030, !llvm.loop !32

1073:                                             ; preds = %1027
  %1074 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #15
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1076, label %1251

1076:                                             ; preds = %1073, %1076
  %1077 = phi i64 [ %1117, %1076 ], [ 0, %1073 ]
  %1078 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1077
  %1079 = bitcast float* %1078 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1079, align 16, !tbaa !2
  %1080 = getelementptr inbounds float, float* %1078, i64 4
  %1081 = bitcast float* %1080 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1081, align 16, !tbaa !2
  %1082 = or i64 %1077, 8
  %1083 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1082
  %1084 = bitcast float* %1083 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1084, align 16, !tbaa !2
  %1085 = getelementptr inbounds float, float* %1083, i64 4
  %1086 = bitcast float* %1085 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1086, align 16, !tbaa !2
  %1087 = or i64 %1077, 16
  %1088 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1087
  %1089 = bitcast float* %1088 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1089, align 16, !tbaa !2
  %1090 = getelementptr inbounds float, float* %1088, i64 4
  %1091 = bitcast float* %1090 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1091, align 16, !tbaa !2
  %1092 = or i64 %1077, 24
  %1093 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1092
  %1094 = bitcast float* %1093 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1094, align 16, !tbaa !2
  %1095 = getelementptr inbounds float, float* %1093, i64 4
  %1096 = bitcast float* %1095 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1096, align 16, !tbaa !2
  %1097 = or i64 %1077, 32
  %1098 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1097
  %1099 = bitcast float* %1098 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1099, align 16, !tbaa !2
  %1100 = getelementptr inbounds float, float* %1098, i64 4
  %1101 = bitcast float* %1100 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1101, align 16, !tbaa !2
  %1102 = or i64 %1077, 40
  %1103 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1102
  %1104 = bitcast float* %1103 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1104, align 16, !tbaa !2
  %1105 = getelementptr inbounds float, float* %1103, i64 4
  %1106 = bitcast float* %1105 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1106, align 16, !tbaa !2
  %1107 = or i64 %1077, 48
  %1108 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1107
  %1109 = bitcast float* %1108 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1109, align 16, !tbaa !2
  %1110 = getelementptr inbounds float, float* %1108, i64 4
  %1111 = bitcast float* %1110 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1111, align 16, !tbaa !2
  %1112 = or i64 %1077, 56
  %1113 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1112
  %1114 = bitcast float* %1113 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1114, align 16, !tbaa !2
  %1115 = getelementptr inbounds float, float* %1113, i64 4
  %1116 = bitcast float* %1115 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1116, align 16, !tbaa !2
  %1117 = add nuw nsw i64 %1077, 64
  %1118 = icmp eq i64 %1117, 32000
  br i1 %1118, label %1119, label %1076, !llvm.loop !33

1119:                                             ; preds = %1076, %1119
  %1120 = phi i64 [ %1249, %1119 ], [ 0, %1076 ]
  %1121 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 0
  %1122 = bitcast float* %1121 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1122, align 16, !tbaa !2
  %1123 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 4
  %1124 = bitcast float* %1123 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1124, align 16, !tbaa !2
  %1125 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 8
  %1126 = bitcast float* %1125 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1126, align 16, !tbaa !2
  %1127 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 12
  %1128 = bitcast float* %1127 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1128, align 16, !tbaa !2
  %1129 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 16
  %1130 = bitcast float* %1129 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1130, align 16, !tbaa !2
  %1131 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 20
  %1132 = bitcast float* %1131 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1132, align 16, !tbaa !2
  %1133 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 24
  %1134 = bitcast float* %1133 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1134, align 16, !tbaa !2
  %1135 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 28
  %1136 = bitcast float* %1135 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1136, align 16, !tbaa !2
  %1137 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 32
  %1138 = bitcast float* %1137 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1138, align 16, !tbaa !2
  %1139 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 36
  %1140 = bitcast float* %1139 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1140, align 16, !tbaa !2
  %1141 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 40
  %1142 = bitcast float* %1141 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1142, align 16, !tbaa !2
  %1143 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 44
  %1144 = bitcast float* %1143 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1144, align 16, !tbaa !2
  %1145 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 48
  %1146 = bitcast float* %1145 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1146, align 16, !tbaa !2
  %1147 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 52
  %1148 = bitcast float* %1147 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1148, align 16, !tbaa !2
  %1149 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 56
  %1150 = bitcast float* %1149 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1150, align 16, !tbaa !2
  %1151 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 60
  %1152 = bitcast float* %1151 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1152, align 16, !tbaa !2
  %1153 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 64
  %1154 = bitcast float* %1153 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1154, align 16, !tbaa !2
  %1155 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 68
  %1156 = bitcast float* %1155 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1156, align 16, !tbaa !2
  %1157 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 72
  %1158 = bitcast float* %1157 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1158, align 16, !tbaa !2
  %1159 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 76
  %1160 = bitcast float* %1159 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1160, align 16, !tbaa !2
  %1161 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 80
  %1162 = bitcast float* %1161 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1162, align 16, !tbaa !2
  %1163 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 84
  %1164 = bitcast float* %1163 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1164, align 16, !tbaa !2
  %1165 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 88
  %1166 = bitcast float* %1165 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1166, align 16, !tbaa !2
  %1167 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 92
  %1168 = bitcast float* %1167 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1168, align 16, !tbaa !2
  %1169 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 96
  %1170 = bitcast float* %1169 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1170, align 16, !tbaa !2
  %1171 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 100
  %1172 = bitcast float* %1171 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1172, align 16, !tbaa !2
  %1173 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 104
  %1174 = bitcast float* %1173 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1174, align 16, !tbaa !2
  %1175 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 108
  %1176 = bitcast float* %1175 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1176, align 16, !tbaa !2
  %1177 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 112
  %1178 = bitcast float* %1177 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1178, align 16, !tbaa !2
  %1179 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 116
  %1180 = bitcast float* %1179 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1180, align 16, !tbaa !2
  %1181 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 120
  %1182 = bitcast float* %1181 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1182, align 16, !tbaa !2
  %1183 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 124
  %1184 = bitcast float* %1183 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1184, align 16, !tbaa !2
  %1185 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 128
  %1186 = bitcast float* %1185 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1186, align 16, !tbaa !2
  %1187 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 132
  %1188 = bitcast float* %1187 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1188, align 16, !tbaa !2
  %1189 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 136
  %1190 = bitcast float* %1189 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1190, align 16, !tbaa !2
  %1191 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 140
  %1192 = bitcast float* %1191 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1192, align 16, !tbaa !2
  %1193 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 144
  %1194 = bitcast float* %1193 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1194, align 16, !tbaa !2
  %1195 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 148
  %1196 = bitcast float* %1195 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1196, align 16, !tbaa !2
  %1197 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 152
  %1198 = bitcast float* %1197 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1198, align 16, !tbaa !2
  %1199 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 156
  %1200 = bitcast float* %1199 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1200, align 16, !tbaa !2
  %1201 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 160
  %1202 = bitcast float* %1201 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1202, align 16, !tbaa !2
  %1203 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 164
  %1204 = bitcast float* %1203 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1204, align 16, !tbaa !2
  %1205 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 168
  %1206 = bitcast float* %1205 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1206, align 16, !tbaa !2
  %1207 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 172
  %1208 = bitcast float* %1207 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1208, align 16, !tbaa !2
  %1209 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 176
  %1210 = bitcast float* %1209 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1210, align 16, !tbaa !2
  %1211 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 180
  %1212 = bitcast float* %1211 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1212, align 16, !tbaa !2
  %1213 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 184
  %1214 = bitcast float* %1213 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1214, align 16, !tbaa !2
  %1215 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 188
  %1216 = bitcast float* %1215 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1216, align 16, !tbaa !2
  %1217 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 192
  %1218 = bitcast float* %1217 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1218, align 16, !tbaa !2
  %1219 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 196
  %1220 = bitcast float* %1219 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1220, align 16, !tbaa !2
  %1221 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 200
  %1222 = bitcast float* %1221 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1222, align 16, !tbaa !2
  %1223 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 204
  %1224 = bitcast float* %1223 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1224, align 16, !tbaa !2
  %1225 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 208
  %1226 = bitcast float* %1225 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1226, align 16, !tbaa !2
  %1227 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 212
  %1228 = bitcast float* %1227 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1228, align 16, !tbaa !2
  %1229 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 216
  %1230 = bitcast float* %1229 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1230, align 16, !tbaa !2
  %1231 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 220
  %1232 = bitcast float* %1231 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1232, align 16, !tbaa !2
  %1233 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 224
  %1234 = bitcast float* %1233 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1234, align 16, !tbaa !2
  %1235 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 228
  %1236 = bitcast float* %1235 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1236, align 16, !tbaa !2
  %1237 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 232
  %1238 = bitcast float* %1237 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1238, align 16, !tbaa !2
  %1239 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 236
  %1240 = bitcast float* %1239 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1240, align 16, !tbaa !2
  %1241 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 240
  %1242 = bitcast float* %1241 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1242, align 16, !tbaa !2
  %1243 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 244
  %1244 = bitcast float* %1243 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1244, align 16, !tbaa !2
  %1245 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 248
  %1246 = bitcast float* %1245 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1246, align 16, !tbaa !2
  %1247 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1120, i64 252
  %1248 = bitcast float* %1247 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %1248, align 16, !tbaa !2
  %1249 = add nuw nsw i64 %1120, 1
  %1250 = icmp eq i64 %1249, 256
  br i1 %1250, label %15603, label %1119

1251:                                             ; preds = %1073
  %1252 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)) #15
  %1253 = icmp eq i32 %1252, 0
  br i1 %1253, label %1254, label %1526

1254:                                             ; preds = %1251, %1254
  %1255 = phi i64 [ %1384, %1254 ], [ 0, %1251 ]
  %1256 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 0
  %1257 = bitcast float* %1256 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1257, align 16, !tbaa !2
  %1258 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 4
  %1259 = bitcast float* %1258 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1259, align 16, !tbaa !2
  %1260 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 8
  %1261 = bitcast float* %1260 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1261, align 16, !tbaa !2
  %1262 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 12
  %1263 = bitcast float* %1262 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1263, align 16, !tbaa !2
  %1264 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 16
  %1265 = bitcast float* %1264 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1265, align 16, !tbaa !2
  %1266 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 20
  %1267 = bitcast float* %1266 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1267, align 16, !tbaa !2
  %1268 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 24
  %1269 = bitcast float* %1268 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1269, align 16, !tbaa !2
  %1270 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 28
  %1271 = bitcast float* %1270 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1271, align 16, !tbaa !2
  %1272 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 32
  %1273 = bitcast float* %1272 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1273, align 16, !tbaa !2
  %1274 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 36
  %1275 = bitcast float* %1274 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1275, align 16, !tbaa !2
  %1276 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 40
  %1277 = bitcast float* %1276 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1277, align 16, !tbaa !2
  %1278 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 44
  %1279 = bitcast float* %1278 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1279, align 16, !tbaa !2
  %1280 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 48
  %1281 = bitcast float* %1280 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1281, align 16, !tbaa !2
  %1282 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 52
  %1283 = bitcast float* %1282 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1283, align 16, !tbaa !2
  %1284 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 56
  %1285 = bitcast float* %1284 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1285, align 16, !tbaa !2
  %1286 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 60
  %1287 = bitcast float* %1286 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1287, align 16, !tbaa !2
  %1288 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 64
  %1289 = bitcast float* %1288 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1289, align 16, !tbaa !2
  %1290 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 68
  %1291 = bitcast float* %1290 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1291, align 16, !tbaa !2
  %1292 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 72
  %1293 = bitcast float* %1292 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1293, align 16, !tbaa !2
  %1294 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 76
  %1295 = bitcast float* %1294 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1295, align 16, !tbaa !2
  %1296 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 80
  %1297 = bitcast float* %1296 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1297, align 16, !tbaa !2
  %1298 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 84
  %1299 = bitcast float* %1298 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1299, align 16, !tbaa !2
  %1300 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 88
  %1301 = bitcast float* %1300 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1301, align 16, !tbaa !2
  %1302 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 92
  %1303 = bitcast float* %1302 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1303, align 16, !tbaa !2
  %1304 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 96
  %1305 = bitcast float* %1304 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1305, align 16, !tbaa !2
  %1306 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 100
  %1307 = bitcast float* %1306 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1307, align 16, !tbaa !2
  %1308 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 104
  %1309 = bitcast float* %1308 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1309, align 16, !tbaa !2
  %1310 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 108
  %1311 = bitcast float* %1310 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1311, align 16, !tbaa !2
  %1312 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 112
  %1313 = bitcast float* %1312 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1313, align 16, !tbaa !2
  %1314 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 116
  %1315 = bitcast float* %1314 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1315, align 16, !tbaa !2
  %1316 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 120
  %1317 = bitcast float* %1316 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1317, align 16, !tbaa !2
  %1318 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 124
  %1319 = bitcast float* %1318 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1319, align 16, !tbaa !2
  %1320 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 128
  %1321 = bitcast float* %1320 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1321, align 16, !tbaa !2
  %1322 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 132
  %1323 = bitcast float* %1322 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1323, align 16, !tbaa !2
  %1324 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 136
  %1325 = bitcast float* %1324 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1325, align 16, !tbaa !2
  %1326 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 140
  %1327 = bitcast float* %1326 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1327, align 16, !tbaa !2
  %1328 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 144
  %1329 = bitcast float* %1328 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1329, align 16, !tbaa !2
  %1330 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 148
  %1331 = bitcast float* %1330 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1331, align 16, !tbaa !2
  %1332 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 152
  %1333 = bitcast float* %1332 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1333, align 16, !tbaa !2
  %1334 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 156
  %1335 = bitcast float* %1334 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1335, align 16, !tbaa !2
  %1336 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 160
  %1337 = bitcast float* %1336 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1337, align 16, !tbaa !2
  %1338 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 164
  %1339 = bitcast float* %1338 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1339, align 16, !tbaa !2
  %1340 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 168
  %1341 = bitcast float* %1340 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1341, align 16, !tbaa !2
  %1342 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 172
  %1343 = bitcast float* %1342 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1343, align 16, !tbaa !2
  %1344 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 176
  %1345 = bitcast float* %1344 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1345, align 16, !tbaa !2
  %1346 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 180
  %1347 = bitcast float* %1346 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1347, align 16, !tbaa !2
  %1348 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 184
  %1349 = bitcast float* %1348 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1349, align 16, !tbaa !2
  %1350 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 188
  %1351 = bitcast float* %1350 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1351, align 16, !tbaa !2
  %1352 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 192
  %1353 = bitcast float* %1352 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1353, align 16, !tbaa !2
  %1354 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 196
  %1355 = bitcast float* %1354 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1355, align 16, !tbaa !2
  %1356 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 200
  %1357 = bitcast float* %1356 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1357, align 16, !tbaa !2
  %1358 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 204
  %1359 = bitcast float* %1358 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1359, align 16, !tbaa !2
  %1360 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 208
  %1361 = bitcast float* %1360 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1361, align 16, !tbaa !2
  %1362 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 212
  %1363 = bitcast float* %1362 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1363, align 16, !tbaa !2
  %1364 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 216
  %1365 = bitcast float* %1364 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1365, align 16, !tbaa !2
  %1366 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 220
  %1367 = bitcast float* %1366 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1367, align 16, !tbaa !2
  %1368 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 224
  %1369 = bitcast float* %1368 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1369, align 16, !tbaa !2
  %1370 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 228
  %1371 = bitcast float* %1370 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1371, align 16, !tbaa !2
  %1372 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 232
  %1373 = bitcast float* %1372 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1373, align 16, !tbaa !2
  %1374 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 236
  %1375 = bitcast float* %1374 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1375, align 16, !tbaa !2
  %1376 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 240
  %1377 = bitcast float* %1376 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1377, align 16, !tbaa !2
  %1378 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 244
  %1379 = bitcast float* %1378 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1379, align 16, !tbaa !2
  %1380 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 248
  %1381 = bitcast float* %1380 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1381, align 16, !tbaa !2
  %1382 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1255, i64 252
  %1383 = bitcast float* %1382 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1383, align 16, !tbaa !2
  %1384 = add nuw nsw i64 %1255, 1
  %1385 = icmp eq i64 %1384, 256
  br i1 %1385, label %1386, label %1254

1386:                                             ; preds = %1254, %1386
  %1387 = phi i64 [ %1388, %1386 ], [ 0, %1254 ]
  %1388 = add nuw nsw i64 %1387, 1
  %1389 = trunc i64 %1388 to i32
  %1390 = mul nsw i32 %1389, %1389
  %1391 = sitofp i32 %1390 to float
  %1392 = fdiv float 1.000000e+00, %1391
  %1393 = insertelement <4 x float> undef, float %1392, i32 0
  %1394 = shufflevector <4 x float> %1393, <4 x float> undef, <4 x i32> zeroinitializer
  %1395 = insertelement <4 x float> undef, float %1392, i32 0
  %1396 = shufflevector <4 x float> %1395, <4 x float> undef, <4 x i32> zeroinitializer
  %1397 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 0
  %1398 = bitcast float* %1397 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1398, align 16, !tbaa !2
  %1399 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 4
  %1400 = bitcast float* %1399 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1400, align 16, !tbaa !2
  %1401 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 8
  %1402 = bitcast float* %1401 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1402, align 16, !tbaa !2
  %1403 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 12
  %1404 = bitcast float* %1403 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1404, align 16, !tbaa !2
  %1405 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 16
  %1406 = bitcast float* %1405 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1406, align 16, !tbaa !2
  %1407 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 20
  %1408 = bitcast float* %1407 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1408, align 16, !tbaa !2
  %1409 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 24
  %1410 = bitcast float* %1409 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1410, align 16, !tbaa !2
  %1411 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 28
  %1412 = bitcast float* %1411 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1412, align 16, !tbaa !2
  %1413 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 32
  %1414 = bitcast float* %1413 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1414, align 16, !tbaa !2
  %1415 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 36
  %1416 = bitcast float* %1415 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1416, align 16, !tbaa !2
  %1417 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 40
  %1418 = bitcast float* %1417 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1418, align 16, !tbaa !2
  %1419 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 44
  %1420 = bitcast float* %1419 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1420, align 16, !tbaa !2
  %1421 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 48
  %1422 = bitcast float* %1421 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1422, align 16, !tbaa !2
  %1423 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 52
  %1424 = bitcast float* %1423 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1424, align 16, !tbaa !2
  %1425 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 56
  %1426 = bitcast float* %1425 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1426, align 16, !tbaa !2
  %1427 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 60
  %1428 = bitcast float* %1427 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1428, align 16, !tbaa !2
  %1429 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 64
  %1430 = bitcast float* %1429 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1430, align 16, !tbaa !2
  %1431 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 68
  %1432 = bitcast float* %1431 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1432, align 16, !tbaa !2
  %1433 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 72
  %1434 = bitcast float* %1433 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1434, align 16, !tbaa !2
  %1435 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 76
  %1436 = bitcast float* %1435 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1436, align 16, !tbaa !2
  %1437 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 80
  %1438 = bitcast float* %1437 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1438, align 16, !tbaa !2
  %1439 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 84
  %1440 = bitcast float* %1439 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1440, align 16, !tbaa !2
  %1441 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 88
  %1442 = bitcast float* %1441 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1442, align 16, !tbaa !2
  %1443 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 92
  %1444 = bitcast float* %1443 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1444, align 16, !tbaa !2
  %1445 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 96
  %1446 = bitcast float* %1445 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1446, align 16, !tbaa !2
  %1447 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 100
  %1448 = bitcast float* %1447 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1448, align 16, !tbaa !2
  %1449 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 104
  %1450 = bitcast float* %1449 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1450, align 16, !tbaa !2
  %1451 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 108
  %1452 = bitcast float* %1451 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1452, align 16, !tbaa !2
  %1453 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 112
  %1454 = bitcast float* %1453 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1454, align 16, !tbaa !2
  %1455 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 116
  %1456 = bitcast float* %1455 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1456, align 16, !tbaa !2
  %1457 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 120
  %1458 = bitcast float* %1457 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1458, align 16, !tbaa !2
  %1459 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 124
  %1460 = bitcast float* %1459 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1460, align 16, !tbaa !2
  %1461 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 128
  %1462 = bitcast float* %1461 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1462, align 16, !tbaa !2
  %1463 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 132
  %1464 = bitcast float* %1463 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1464, align 16, !tbaa !2
  %1465 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 136
  %1466 = bitcast float* %1465 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1466, align 16, !tbaa !2
  %1467 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 140
  %1468 = bitcast float* %1467 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1468, align 16, !tbaa !2
  %1469 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 144
  %1470 = bitcast float* %1469 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1470, align 16, !tbaa !2
  %1471 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 148
  %1472 = bitcast float* %1471 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1472, align 16, !tbaa !2
  %1473 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 152
  %1474 = bitcast float* %1473 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1474, align 16, !tbaa !2
  %1475 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 156
  %1476 = bitcast float* %1475 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1476, align 16, !tbaa !2
  %1477 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 160
  %1478 = bitcast float* %1477 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1478, align 16, !tbaa !2
  %1479 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 164
  %1480 = bitcast float* %1479 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1480, align 16, !tbaa !2
  %1481 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 168
  %1482 = bitcast float* %1481 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1482, align 16, !tbaa !2
  %1483 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 172
  %1484 = bitcast float* %1483 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1484, align 16, !tbaa !2
  %1485 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 176
  %1486 = bitcast float* %1485 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1486, align 16, !tbaa !2
  %1487 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 180
  %1488 = bitcast float* %1487 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1488, align 16, !tbaa !2
  %1489 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 184
  %1490 = bitcast float* %1489 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1490, align 16, !tbaa !2
  %1491 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 188
  %1492 = bitcast float* %1491 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1492, align 16, !tbaa !2
  %1493 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 192
  %1494 = bitcast float* %1493 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1494, align 16, !tbaa !2
  %1495 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 196
  %1496 = bitcast float* %1495 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1496, align 16, !tbaa !2
  %1497 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 200
  %1498 = bitcast float* %1497 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1498, align 16, !tbaa !2
  %1499 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 204
  %1500 = bitcast float* %1499 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1500, align 16, !tbaa !2
  %1501 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 208
  %1502 = bitcast float* %1501 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1502, align 16, !tbaa !2
  %1503 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 212
  %1504 = bitcast float* %1503 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1504, align 16, !tbaa !2
  %1505 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 216
  %1506 = bitcast float* %1505 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1506, align 16, !tbaa !2
  %1507 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 220
  %1508 = bitcast float* %1507 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1508, align 16, !tbaa !2
  %1509 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 224
  %1510 = bitcast float* %1509 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1510, align 16, !tbaa !2
  %1511 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 228
  %1512 = bitcast float* %1511 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1512, align 16, !tbaa !2
  %1513 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 232
  %1514 = bitcast float* %1513 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1514, align 16, !tbaa !2
  %1515 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 236
  %1516 = bitcast float* %1515 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1516, align 16, !tbaa !2
  %1517 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 240
  %1518 = bitcast float* %1517 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1518, align 16, !tbaa !2
  %1519 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 244
  %1520 = bitcast float* %1519 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1520, align 16, !tbaa !2
  %1521 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 248
  %1522 = bitcast float* %1521 to <4 x float>*
  store <4 x float> %1394, <4 x float>* %1522, align 16, !tbaa !2
  %1523 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1387, i64 252
  %1524 = bitcast float* %1523 to <4 x float>*
  store <4 x float> %1396, <4 x float>* %1524, align 16, !tbaa !2
  %1525 = icmp eq i64 %1388, 256
  br i1 %1525, label %15603, label %1386

1526:                                             ; preds = %1251
  %1527 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)) #15
  %1528 = icmp eq i32 %1527, 0
  br i1 %1528, label %1529, label %1593

1529:                                             ; preds = %1526, %1529
  %1530 = phi i64 [ %1570, %1529 ], [ 0, %1526 ]
  %1531 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1530
  %1532 = bitcast float* %1531 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1532, align 16, !tbaa !2
  %1533 = getelementptr inbounds float, float* %1531, i64 4
  %1534 = bitcast float* %1533 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1534, align 16, !tbaa !2
  %1535 = or i64 %1530, 8
  %1536 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1535
  %1537 = bitcast float* %1536 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1537, align 16, !tbaa !2
  %1538 = getelementptr inbounds float, float* %1536, i64 4
  %1539 = bitcast float* %1538 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1539, align 16, !tbaa !2
  %1540 = or i64 %1530, 16
  %1541 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1540
  %1542 = bitcast float* %1541 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1542, align 16, !tbaa !2
  %1543 = getelementptr inbounds float, float* %1541, i64 4
  %1544 = bitcast float* %1543 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1544, align 16, !tbaa !2
  %1545 = or i64 %1530, 24
  %1546 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1545
  %1547 = bitcast float* %1546 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1547, align 16, !tbaa !2
  %1548 = getelementptr inbounds float, float* %1546, i64 4
  %1549 = bitcast float* %1548 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1549, align 16, !tbaa !2
  %1550 = or i64 %1530, 32
  %1551 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1550
  %1552 = bitcast float* %1551 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1552, align 16, !tbaa !2
  %1553 = getelementptr inbounds float, float* %1551, i64 4
  %1554 = bitcast float* %1553 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1554, align 16, !tbaa !2
  %1555 = or i64 %1530, 40
  %1556 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1555
  %1557 = bitcast float* %1556 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1557, align 16, !tbaa !2
  %1558 = getelementptr inbounds float, float* %1556, i64 4
  %1559 = bitcast float* %1558 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1559, align 16, !tbaa !2
  %1560 = or i64 %1530, 48
  %1561 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1560
  %1562 = bitcast float* %1561 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1562, align 16, !tbaa !2
  %1563 = getelementptr inbounds float, float* %1561, i64 4
  %1564 = bitcast float* %1563 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1564, align 16, !tbaa !2
  %1565 = or i64 %1530, 56
  %1566 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1565
  %1567 = bitcast float* %1566 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1567, align 16, !tbaa !2
  %1568 = getelementptr inbounds float, float* %1566, i64 4
  %1569 = bitcast float* %1568 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1569, align 16, !tbaa !2
  %1570 = add nuw nsw i64 %1530, 64
  %1571 = icmp eq i64 %1570, 32000
  br i1 %1571, label %1572, label %1529, !llvm.loop !34

1572:                                             ; preds = %1529, %1572
  %1573 = phi i64 [ %1590, %1572 ], [ 0, %1529 ]
  %1574 = phi <4 x i64> [ %1591, %1572 ], [ <i64 0, i64 1, i64 2, i64 3>, %1529 ]
  %1575 = add nuw nsw <4 x i64> %1574, <i64 1, i64 1, i64 1, i64 1>
  %1576 = mul nuw nsw <4 x i64> %1575, %1575
  %1577 = trunc <4 x i64> %1576 to <4 x i32>
  %1578 = sitofp <4 x i32> %1577 to <4 x float>
  %1579 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1578
  %1580 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1573
  %1581 = bitcast float* %1580 to <4 x float>*
  store <4 x float> %1579, <4 x float>* %1581, align 16, !tbaa !2
  %1582 = or i64 %1573, 4
  %1583 = add <4 x i64> %1574, <i64 5, i64 5, i64 5, i64 5>
  %1584 = mul nuw nsw <4 x i64> %1583, %1583
  %1585 = trunc <4 x i64> %1584 to <4 x i32>
  %1586 = sitofp <4 x i32> %1585 to <4 x float>
  %1587 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1586
  %1588 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1582
  %1589 = bitcast float* %1588 to <4 x float>*
  store <4 x float> %1587, <4 x float>* %1589, align 16, !tbaa !2
  %1590 = add nuw nsw i64 %1573, 8
  %1591 = add <4 x i64> %1574, <i64 8, i64 8, i64 8, i64 8>
  %1592 = icmp eq i64 %1590, 32000
  br i1 %1592, label %15603, label %1572, !llvm.loop !35

1593:                                             ; preds = %1526
  %1594 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #15
  %1595 = icmp eq i32 %1594, 0
  br i1 %1595, label %1596, label %1660

1596:                                             ; preds = %1593, %1596
  %1597 = phi i64 [ %1637, %1596 ], [ 0, %1593 ]
  %1598 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1597
  %1599 = bitcast float* %1598 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1599, align 16, !tbaa !2
  %1600 = getelementptr inbounds float, float* %1598, i64 4
  %1601 = bitcast float* %1600 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1601, align 16, !tbaa !2
  %1602 = or i64 %1597, 8
  %1603 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1602
  %1604 = bitcast float* %1603 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1604, align 16, !tbaa !2
  %1605 = getelementptr inbounds float, float* %1603, i64 4
  %1606 = bitcast float* %1605 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1606, align 16, !tbaa !2
  %1607 = or i64 %1597, 16
  %1608 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1607
  %1609 = bitcast float* %1608 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1609, align 16, !tbaa !2
  %1610 = getelementptr inbounds float, float* %1608, i64 4
  %1611 = bitcast float* %1610 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1611, align 16, !tbaa !2
  %1612 = or i64 %1597, 24
  %1613 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1612
  %1614 = bitcast float* %1613 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1614, align 16, !tbaa !2
  %1615 = getelementptr inbounds float, float* %1613, i64 4
  %1616 = bitcast float* %1615 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1616, align 16, !tbaa !2
  %1617 = or i64 %1597, 32
  %1618 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1617
  %1619 = bitcast float* %1618 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1619, align 16, !tbaa !2
  %1620 = getelementptr inbounds float, float* %1618, i64 4
  %1621 = bitcast float* %1620 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1621, align 16, !tbaa !2
  %1622 = or i64 %1597, 40
  %1623 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1622
  %1624 = bitcast float* %1623 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1624, align 16, !tbaa !2
  %1625 = getelementptr inbounds float, float* %1623, i64 4
  %1626 = bitcast float* %1625 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1626, align 16, !tbaa !2
  %1627 = or i64 %1597, 48
  %1628 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1627
  %1629 = bitcast float* %1628 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1629, align 16, !tbaa !2
  %1630 = getelementptr inbounds float, float* %1628, i64 4
  %1631 = bitcast float* %1630 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1631, align 16, !tbaa !2
  %1632 = or i64 %1597, 56
  %1633 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1632
  %1634 = bitcast float* %1633 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1634, align 16, !tbaa !2
  %1635 = getelementptr inbounds float, float* %1633, i64 4
  %1636 = bitcast float* %1635 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1636, align 16, !tbaa !2
  %1637 = add nuw nsw i64 %1597, 64
  %1638 = icmp eq i64 %1637, 32000
  br i1 %1638, label %1639, label %1596, !llvm.loop !36

1639:                                             ; preds = %1596, %1639
  %1640 = phi i64 [ %1657, %1639 ], [ 0, %1596 ]
  %1641 = phi <4 x i64> [ %1658, %1639 ], [ <i64 0, i64 1, i64 2, i64 3>, %1596 ]
  %1642 = add nuw nsw <4 x i64> %1641, <i64 1, i64 1, i64 1, i64 1>
  %1643 = mul nuw nsw <4 x i64> %1642, %1642
  %1644 = trunc <4 x i64> %1643 to <4 x i32>
  %1645 = sitofp <4 x i32> %1644 to <4 x float>
  %1646 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1645
  %1647 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1640
  %1648 = bitcast float* %1647 to <4 x float>*
  store <4 x float> %1646, <4 x float>* %1648, align 16, !tbaa !2
  %1649 = or i64 %1640, 4
  %1650 = add <4 x i64> %1641, <i64 5, i64 5, i64 5, i64 5>
  %1651 = mul nuw nsw <4 x i64> %1650, %1650
  %1652 = trunc <4 x i64> %1651 to <4 x i32>
  %1653 = sitofp <4 x i32> %1652 to <4 x float>
  %1654 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1653
  %1655 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1649
  %1656 = bitcast float* %1655 to <4 x float>*
  store <4 x float> %1654, <4 x float>* %1656, align 16, !tbaa !2
  %1657 = add nuw nsw i64 %1640, 8
  %1658 = add <4 x i64> %1641, <i64 8, i64 8, i64 8, i64 8>
  %1659 = icmp eq i64 %1657, 32000
  br i1 %1659, label %15603, label %1639, !llvm.loop !37

1660:                                             ; preds = %1593
  %1661 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #15
  %1662 = icmp eq i32 %1661, 0
  br i1 %1662, label %1663, label %1788

1663:                                             ; preds = %1660
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %1664

1664:                                             ; preds = %1664, %1663
  %1665 = phi i64 [ 0, %1663 ], [ %1705, %1664 ]
  %1666 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1665
  %1667 = bitcast float* %1666 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1667, align 16, !tbaa !2
  %1668 = getelementptr inbounds float, float* %1666, i64 4
  %1669 = bitcast float* %1668 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1669, align 16, !tbaa !2
  %1670 = or i64 %1665, 8
  %1671 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1670
  %1672 = bitcast float* %1671 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1672, align 16, !tbaa !2
  %1673 = getelementptr inbounds float, float* %1671, i64 4
  %1674 = bitcast float* %1673 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1674, align 16, !tbaa !2
  %1675 = or i64 %1665, 16
  %1676 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1675
  %1677 = bitcast float* %1676 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1677, align 16, !tbaa !2
  %1678 = getelementptr inbounds float, float* %1676, i64 4
  %1679 = bitcast float* %1678 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1679, align 16, !tbaa !2
  %1680 = or i64 %1665, 24
  %1681 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1680
  %1682 = bitcast float* %1681 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1682, align 16, !tbaa !2
  %1683 = getelementptr inbounds float, float* %1681, i64 4
  %1684 = bitcast float* %1683 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1684, align 16, !tbaa !2
  %1685 = or i64 %1665, 32
  %1686 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1685
  %1687 = bitcast float* %1686 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1687, align 16, !tbaa !2
  %1688 = getelementptr inbounds float, float* %1686, i64 4
  %1689 = bitcast float* %1688 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1689, align 16, !tbaa !2
  %1690 = or i64 %1665, 40
  %1691 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1690
  %1692 = bitcast float* %1691 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1692, align 16, !tbaa !2
  %1693 = getelementptr inbounds float, float* %1691, i64 4
  %1694 = bitcast float* %1693 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1694, align 16, !tbaa !2
  %1695 = or i64 %1665, 48
  %1696 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1695
  %1697 = bitcast float* %1696 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1697, align 16, !tbaa !2
  %1698 = getelementptr inbounds float, float* %1696, i64 4
  %1699 = bitcast float* %1698 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1699, align 16, !tbaa !2
  %1700 = or i64 %1665, 56
  %1701 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1700
  %1702 = bitcast float* %1701 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1702, align 16, !tbaa !2
  %1703 = getelementptr inbounds float, float* %1701, i64 4
  %1704 = bitcast float* %1703 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1704, align 16, !tbaa !2
  %1705 = add nuw nsw i64 %1665, 64
  %1706 = icmp eq i64 %1705, 32000
  br i1 %1706, label %1707, label %1664, !llvm.loop !38

1707:                                             ; preds = %1664, %1707
  %1708 = phi i64 [ %1748, %1707 ], [ 0, %1664 ]
  %1709 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1708
  %1710 = bitcast float* %1709 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1710, align 16, !tbaa !2
  %1711 = getelementptr inbounds float, float* %1709, i64 4
  %1712 = bitcast float* %1711 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1712, align 16, !tbaa !2
  %1713 = or i64 %1708, 8
  %1714 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1713
  %1715 = bitcast float* %1714 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1715, align 16, !tbaa !2
  %1716 = getelementptr inbounds float, float* %1714, i64 4
  %1717 = bitcast float* %1716 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1717, align 16, !tbaa !2
  %1718 = or i64 %1708, 16
  %1719 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1718
  %1720 = bitcast float* %1719 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1720, align 16, !tbaa !2
  %1721 = getelementptr inbounds float, float* %1719, i64 4
  %1722 = bitcast float* %1721 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1722, align 16, !tbaa !2
  %1723 = or i64 %1708, 24
  %1724 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1723
  %1725 = bitcast float* %1724 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1725, align 16, !tbaa !2
  %1726 = getelementptr inbounds float, float* %1724, i64 4
  %1727 = bitcast float* %1726 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1727, align 16, !tbaa !2
  %1728 = or i64 %1708, 32
  %1729 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1728
  %1730 = bitcast float* %1729 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1730, align 16, !tbaa !2
  %1731 = getelementptr inbounds float, float* %1729, i64 4
  %1732 = bitcast float* %1731 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1732, align 16, !tbaa !2
  %1733 = or i64 %1708, 40
  %1734 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1733
  %1735 = bitcast float* %1734 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1735, align 16, !tbaa !2
  %1736 = getelementptr inbounds float, float* %1734, i64 4
  %1737 = bitcast float* %1736 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1737, align 16, !tbaa !2
  %1738 = or i64 %1708, 48
  %1739 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1738
  %1740 = bitcast float* %1739 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1740, align 16, !tbaa !2
  %1741 = getelementptr inbounds float, float* %1739, i64 4
  %1742 = bitcast float* %1741 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1742, align 16, !tbaa !2
  %1743 = or i64 %1708, 56
  %1744 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1743
  %1745 = bitcast float* %1744 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1745, align 16, !tbaa !2
  %1746 = getelementptr inbounds float, float* %1744, i64 4
  %1747 = bitcast float* %1746 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1747, align 16, !tbaa !2
  %1748 = add nuw nsw i64 %1708, 64
  %1749 = icmp eq i64 %1748, 32000
  br i1 %1749, label %1750, label %1707, !llvm.loop !39

1750:                                             ; preds = %1707, %1750
  %1751 = phi i64 [ %1766, %1750 ], [ 0, %1707 ]
  %1752 = phi <4 x i64> [ %1767, %1750 ], [ <i64 0, i64 1, i64 2, i64 3>, %1707 ]
  %1753 = trunc <4 x i64> %1752 to <4 x i32>
  %1754 = add <4 x i32> %1753, <i32 1, i32 1, i32 1, i32 1>
  %1755 = sitofp <4 x i32> %1754 to <4 x float>
  %1756 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1755
  %1757 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %1751
  %1758 = bitcast float* %1757 to <4 x float>*
  store <4 x float> %1756, <4 x float>* %1758, align 16, !tbaa !2
  %1759 = or i64 %1751, 4
  %1760 = trunc <4 x i64> %1752 to <4 x i32>
  %1761 = add <4 x i32> %1760, <i32 5, i32 5, i32 5, i32 5>
  %1762 = sitofp <4 x i32> %1761 to <4 x float>
  %1763 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1762
  %1764 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %1759
  %1765 = bitcast float* %1764 to <4 x float>*
  store <4 x float> %1763, <4 x float>* %1765, align 16, !tbaa !2
  %1766 = add nuw nsw i64 %1751, 8
  %1767 = add <4 x i64> %1752, <i64 8, i64 8, i64 8, i64 8>
  %1768 = icmp eq i64 %1766, 32000
  br i1 %1768, label %1769, label %1750, !llvm.loop !40

1769:                                             ; preds = %1750, %1769
  %1770 = phi i64 [ %1785, %1769 ], [ 0, %1750 ]
  %1771 = phi <4 x i64> [ %1786, %1769 ], [ <i64 0, i64 1, i64 2, i64 3>, %1750 ]
  %1772 = trunc <4 x i64> %1771 to <4 x i32>
  %1773 = add <4 x i32> %1772, <i32 1, i32 1, i32 1, i32 1>
  %1774 = sitofp <4 x i32> %1773 to <4 x float>
  %1775 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1774
  %1776 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %1770
  %1777 = bitcast float* %1776 to <4 x float>*
  store <4 x float> %1775, <4 x float>* %1777, align 16, !tbaa !2
  %1778 = or i64 %1770, 4
  %1779 = trunc <4 x i64> %1771 to <4 x i32>
  %1780 = add <4 x i32> %1779, <i32 5, i32 5, i32 5, i32 5>
  %1781 = sitofp <4 x i32> %1780 to <4 x float>
  %1782 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1781
  %1783 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %1778
  %1784 = bitcast float* %1783 to <4 x float>*
  store <4 x float> %1782, <4 x float>* %1784, align 16, !tbaa !2
  %1785 = add nuw nsw i64 %1770, 8
  %1786 = add <4 x i64> %1771, <i64 8, i64 8, i64 8, i64 8>
  %1787 = icmp eq i64 %1785, 32000
  br i1 %1787, label %15603, label %1769, !llvm.loop !41

1788:                                             ; preds = %1660
  %1789 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #15
  %1790 = icmp eq i32 %1789, 0
  br i1 %1790, label %1791, label %1916

1791:                                             ; preds = %1788
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %1792

1792:                                             ; preds = %1792, %1791
  %1793 = phi i64 [ 0, %1791 ], [ %1833, %1792 ]
  %1794 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1793
  %1795 = bitcast float* %1794 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1795, align 16, !tbaa !2
  %1796 = getelementptr inbounds float, float* %1794, i64 4
  %1797 = bitcast float* %1796 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1797, align 16, !tbaa !2
  %1798 = or i64 %1793, 8
  %1799 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1798
  %1800 = bitcast float* %1799 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1800, align 16, !tbaa !2
  %1801 = getelementptr inbounds float, float* %1799, i64 4
  %1802 = bitcast float* %1801 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1802, align 16, !tbaa !2
  %1803 = or i64 %1793, 16
  %1804 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1803
  %1805 = bitcast float* %1804 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1805, align 16, !tbaa !2
  %1806 = getelementptr inbounds float, float* %1804, i64 4
  %1807 = bitcast float* %1806 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1807, align 16, !tbaa !2
  %1808 = or i64 %1793, 24
  %1809 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1808
  %1810 = bitcast float* %1809 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1810, align 16, !tbaa !2
  %1811 = getelementptr inbounds float, float* %1809, i64 4
  %1812 = bitcast float* %1811 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1812, align 16, !tbaa !2
  %1813 = or i64 %1793, 32
  %1814 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1813
  %1815 = bitcast float* %1814 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1815, align 16, !tbaa !2
  %1816 = getelementptr inbounds float, float* %1814, i64 4
  %1817 = bitcast float* %1816 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1817, align 16, !tbaa !2
  %1818 = or i64 %1793, 40
  %1819 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1818
  %1820 = bitcast float* %1819 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1820, align 16, !tbaa !2
  %1821 = getelementptr inbounds float, float* %1819, i64 4
  %1822 = bitcast float* %1821 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1822, align 16, !tbaa !2
  %1823 = or i64 %1793, 48
  %1824 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1823
  %1825 = bitcast float* %1824 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1825, align 16, !tbaa !2
  %1826 = getelementptr inbounds float, float* %1824, i64 4
  %1827 = bitcast float* %1826 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1827, align 16, !tbaa !2
  %1828 = or i64 %1793, 56
  %1829 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1828
  %1830 = bitcast float* %1829 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1830, align 16, !tbaa !2
  %1831 = getelementptr inbounds float, float* %1829, i64 4
  %1832 = bitcast float* %1831 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1832, align 16, !tbaa !2
  %1833 = add nuw nsw i64 %1793, 64
  %1834 = icmp eq i64 %1833, 32000
  br i1 %1834, label %1835, label %1792, !llvm.loop !42

1835:                                             ; preds = %1792, %1835
  %1836 = phi i64 [ %1876, %1835 ], [ 0, %1792 ]
  %1837 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1836
  %1838 = bitcast float* %1837 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1838, align 16, !tbaa !2
  %1839 = getelementptr inbounds float, float* %1837, i64 4
  %1840 = bitcast float* %1839 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1840, align 16, !tbaa !2
  %1841 = or i64 %1836, 8
  %1842 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1841
  %1843 = bitcast float* %1842 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1843, align 16, !tbaa !2
  %1844 = getelementptr inbounds float, float* %1842, i64 4
  %1845 = bitcast float* %1844 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1845, align 16, !tbaa !2
  %1846 = or i64 %1836, 16
  %1847 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1846
  %1848 = bitcast float* %1847 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1848, align 16, !tbaa !2
  %1849 = getelementptr inbounds float, float* %1847, i64 4
  %1850 = bitcast float* %1849 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1850, align 16, !tbaa !2
  %1851 = or i64 %1836, 24
  %1852 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1851
  %1853 = bitcast float* %1852 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1853, align 16, !tbaa !2
  %1854 = getelementptr inbounds float, float* %1852, i64 4
  %1855 = bitcast float* %1854 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1855, align 16, !tbaa !2
  %1856 = or i64 %1836, 32
  %1857 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1856
  %1858 = bitcast float* %1857 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1858, align 16, !tbaa !2
  %1859 = getelementptr inbounds float, float* %1857, i64 4
  %1860 = bitcast float* %1859 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1860, align 16, !tbaa !2
  %1861 = or i64 %1836, 40
  %1862 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1861
  %1863 = bitcast float* %1862 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1863, align 16, !tbaa !2
  %1864 = getelementptr inbounds float, float* %1862, i64 4
  %1865 = bitcast float* %1864 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1865, align 16, !tbaa !2
  %1866 = or i64 %1836, 48
  %1867 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1866
  %1868 = bitcast float* %1867 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1868, align 16, !tbaa !2
  %1869 = getelementptr inbounds float, float* %1867, i64 4
  %1870 = bitcast float* %1869 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1870, align 16, !tbaa !2
  %1871 = or i64 %1836, 56
  %1872 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1871
  %1873 = bitcast float* %1872 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1873, align 16, !tbaa !2
  %1874 = getelementptr inbounds float, float* %1872, i64 4
  %1875 = bitcast float* %1874 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1875, align 16, !tbaa !2
  %1876 = add nuw nsw i64 %1836, 64
  %1877 = icmp eq i64 %1876, 32000
  br i1 %1877, label %1878, label %1835, !llvm.loop !43

1878:                                             ; preds = %1835, %1878
  %1879 = phi i64 [ %1894, %1878 ], [ 0, %1835 ]
  %1880 = phi <4 x i64> [ %1895, %1878 ], [ <i64 0, i64 1, i64 2, i64 3>, %1835 ]
  %1881 = trunc <4 x i64> %1880 to <4 x i32>
  %1882 = add <4 x i32> %1881, <i32 1, i32 1, i32 1, i32 1>
  %1883 = sitofp <4 x i32> %1882 to <4 x float>
  %1884 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1883
  %1885 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %1879
  %1886 = bitcast float* %1885 to <4 x float>*
  store <4 x float> %1884, <4 x float>* %1886, align 16, !tbaa !2
  %1887 = or i64 %1879, 4
  %1888 = trunc <4 x i64> %1880 to <4 x i32>
  %1889 = add <4 x i32> %1888, <i32 5, i32 5, i32 5, i32 5>
  %1890 = sitofp <4 x i32> %1889 to <4 x float>
  %1891 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1890
  %1892 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %1887
  %1893 = bitcast float* %1892 to <4 x float>*
  store <4 x float> %1891, <4 x float>* %1893, align 16, !tbaa !2
  %1894 = add nuw nsw i64 %1879, 8
  %1895 = add <4 x i64> %1880, <i64 8, i64 8, i64 8, i64 8>
  %1896 = icmp eq i64 %1894, 32000
  br i1 %1896, label %1897, label %1878, !llvm.loop !44

1897:                                             ; preds = %1878, %1897
  %1898 = phi i64 [ %1913, %1897 ], [ 0, %1878 ]
  %1899 = phi <4 x i64> [ %1914, %1897 ], [ <i64 0, i64 1, i64 2, i64 3>, %1878 ]
  %1900 = trunc <4 x i64> %1899 to <4 x i32>
  %1901 = add <4 x i32> %1900, <i32 1, i32 1, i32 1, i32 1>
  %1902 = sitofp <4 x i32> %1901 to <4 x float>
  %1903 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1902
  %1904 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %1898
  %1905 = bitcast float* %1904 to <4 x float>*
  store <4 x float> %1903, <4 x float>* %1905, align 16, !tbaa !2
  %1906 = or i64 %1898, 4
  %1907 = trunc <4 x i64> %1899 to <4 x i32>
  %1908 = add <4 x i32> %1907, <i32 5, i32 5, i32 5, i32 5>
  %1909 = sitofp <4 x i32> %1908 to <4 x float>
  %1910 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1909
  %1911 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %1906
  %1912 = bitcast float* %1911 to <4 x float>*
  store <4 x float> %1910, <4 x float>* %1912, align 16, !tbaa !2
  %1913 = add nuw nsw i64 %1898, 8
  %1914 = add <4 x i64> %1899, <i64 8, i64 8, i64 8, i64 8>
  %1915 = icmp eq i64 %1913, 32000
  br i1 %1915, label %15603, label %1897, !llvm.loop !45

1916:                                             ; preds = %1788
  %1917 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #15
  %1918 = icmp eq i32 %1917, 0
  br i1 %1918, label %1919, label %2316

1919:                                             ; preds = %1916
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([65536 x float]* @array to i8*), i8 0, i64 128000, i1 false)
  br label %1920

1920:                                             ; preds = %1920, %1919
  %1921 = phi i64 [ %2050, %1920 ], [ 0, %1919 ]
  %1922 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 0
  %1923 = bitcast float* %1922 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1923, align 16, !tbaa !2
  %1924 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 4
  %1925 = bitcast float* %1924 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1925, align 16, !tbaa !2
  %1926 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 8
  %1927 = bitcast float* %1926 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1927, align 16, !tbaa !2
  %1928 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 12
  %1929 = bitcast float* %1928 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1929, align 16, !tbaa !2
  %1930 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 16
  %1931 = bitcast float* %1930 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1931, align 16, !tbaa !2
  %1932 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 20
  %1933 = bitcast float* %1932 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1933, align 16, !tbaa !2
  %1934 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 24
  %1935 = bitcast float* %1934 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1935, align 16, !tbaa !2
  %1936 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 28
  %1937 = bitcast float* %1936 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1937, align 16, !tbaa !2
  %1938 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 32
  %1939 = bitcast float* %1938 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1939, align 16, !tbaa !2
  %1940 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 36
  %1941 = bitcast float* %1940 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1941, align 16, !tbaa !2
  %1942 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 40
  %1943 = bitcast float* %1942 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1943, align 16, !tbaa !2
  %1944 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 44
  %1945 = bitcast float* %1944 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1945, align 16, !tbaa !2
  %1946 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 48
  %1947 = bitcast float* %1946 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1947, align 16, !tbaa !2
  %1948 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 52
  %1949 = bitcast float* %1948 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1949, align 16, !tbaa !2
  %1950 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 56
  %1951 = bitcast float* %1950 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1951, align 16, !tbaa !2
  %1952 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 60
  %1953 = bitcast float* %1952 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1953, align 16, !tbaa !2
  %1954 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 64
  %1955 = bitcast float* %1954 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1955, align 16, !tbaa !2
  %1956 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 68
  %1957 = bitcast float* %1956 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1957, align 16, !tbaa !2
  %1958 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 72
  %1959 = bitcast float* %1958 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1959, align 16, !tbaa !2
  %1960 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 76
  %1961 = bitcast float* %1960 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1961, align 16, !tbaa !2
  %1962 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 80
  %1963 = bitcast float* %1962 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1963, align 16, !tbaa !2
  %1964 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 84
  %1965 = bitcast float* %1964 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1965, align 16, !tbaa !2
  %1966 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 88
  %1967 = bitcast float* %1966 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1967, align 16, !tbaa !2
  %1968 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 92
  %1969 = bitcast float* %1968 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1969, align 16, !tbaa !2
  %1970 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 96
  %1971 = bitcast float* %1970 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1971, align 16, !tbaa !2
  %1972 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 100
  %1973 = bitcast float* %1972 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1973, align 16, !tbaa !2
  %1974 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 104
  %1975 = bitcast float* %1974 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1975, align 16, !tbaa !2
  %1976 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 108
  %1977 = bitcast float* %1976 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1977, align 16, !tbaa !2
  %1978 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 112
  %1979 = bitcast float* %1978 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1979, align 16, !tbaa !2
  %1980 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 116
  %1981 = bitcast float* %1980 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1981, align 16, !tbaa !2
  %1982 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 120
  %1983 = bitcast float* %1982 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1983, align 16, !tbaa !2
  %1984 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 124
  %1985 = bitcast float* %1984 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1985, align 16, !tbaa !2
  %1986 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 128
  %1987 = bitcast float* %1986 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1987, align 16, !tbaa !2
  %1988 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 132
  %1989 = bitcast float* %1988 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1989, align 16, !tbaa !2
  %1990 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 136
  %1991 = bitcast float* %1990 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1991, align 16, !tbaa !2
  %1992 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 140
  %1993 = bitcast float* %1992 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1993, align 16, !tbaa !2
  %1994 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 144
  %1995 = bitcast float* %1994 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1995, align 16, !tbaa !2
  %1996 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 148
  %1997 = bitcast float* %1996 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1997, align 16, !tbaa !2
  %1998 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 152
  %1999 = bitcast float* %1998 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %1999, align 16, !tbaa !2
  %2000 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 156
  %2001 = bitcast float* %2000 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2001, align 16, !tbaa !2
  %2002 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 160
  %2003 = bitcast float* %2002 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2003, align 16, !tbaa !2
  %2004 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 164
  %2005 = bitcast float* %2004 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2005, align 16, !tbaa !2
  %2006 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 168
  %2007 = bitcast float* %2006 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2007, align 16, !tbaa !2
  %2008 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 172
  %2009 = bitcast float* %2008 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2009, align 16, !tbaa !2
  %2010 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 176
  %2011 = bitcast float* %2010 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2011, align 16, !tbaa !2
  %2012 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 180
  %2013 = bitcast float* %2012 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2013, align 16, !tbaa !2
  %2014 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 184
  %2015 = bitcast float* %2014 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2015, align 16, !tbaa !2
  %2016 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 188
  %2017 = bitcast float* %2016 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2017, align 16, !tbaa !2
  %2018 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 192
  %2019 = bitcast float* %2018 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2019, align 16, !tbaa !2
  %2020 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 196
  %2021 = bitcast float* %2020 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2021, align 16, !tbaa !2
  %2022 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 200
  %2023 = bitcast float* %2022 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2023, align 16, !tbaa !2
  %2024 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 204
  %2025 = bitcast float* %2024 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2025, align 16, !tbaa !2
  %2026 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 208
  %2027 = bitcast float* %2026 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2027, align 16, !tbaa !2
  %2028 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 212
  %2029 = bitcast float* %2028 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2029, align 16, !tbaa !2
  %2030 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 216
  %2031 = bitcast float* %2030 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2031, align 16, !tbaa !2
  %2032 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 220
  %2033 = bitcast float* %2032 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2033, align 16, !tbaa !2
  %2034 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 224
  %2035 = bitcast float* %2034 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2035, align 16, !tbaa !2
  %2036 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 228
  %2037 = bitcast float* %2036 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2037, align 16, !tbaa !2
  %2038 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 232
  %2039 = bitcast float* %2038 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2039, align 16, !tbaa !2
  %2040 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 236
  %2041 = bitcast float* %2040 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2041, align 16, !tbaa !2
  %2042 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 240
  %2043 = bitcast float* %2042 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2043, align 16, !tbaa !2
  %2044 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 244
  %2045 = bitcast float* %2044 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2045, align 16, !tbaa !2
  %2046 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 248
  %2047 = bitcast float* %2046 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2047, align 16, !tbaa !2
  %2048 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1921, i64 252
  %2049 = bitcast float* %2048 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2049, align 16, !tbaa !2
  %2050 = add nuw nsw i64 %1921, 1
  %2051 = icmp eq i64 %2050, 256
  br i1 %2051, label %2052, label %1920

2052:                                             ; preds = %1920, %2052
  %2053 = phi i64 [ %2182, %2052 ], [ 0, %1920 ]
  %2054 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 0
  %2055 = bitcast float* %2054 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2055, align 16, !tbaa !2
  %2056 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 4
  %2057 = bitcast float* %2056 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2057, align 16, !tbaa !2
  %2058 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 8
  %2059 = bitcast float* %2058 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2059, align 16, !tbaa !2
  %2060 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 12
  %2061 = bitcast float* %2060 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2061, align 16, !tbaa !2
  %2062 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 16
  %2063 = bitcast float* %2062 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2063, align 16, !tbaa !2
  %2064 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 20
  %2065 = bitcast float* %2064 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2065, align 16, !tbaa !2
  %2066 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 24
  %2067 = bitcast float* %2066 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2067, align 16, !tbaa !2
  %2068 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 28
  %2069 = bitcast float* %2068 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2069, align 16, !tbaa !2
  %2070 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 32
  %2071 = bitcast float* %2070 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2071, align 16, !tbaa !2
  %2072 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 36
  %2073 = bitcast float* %2072 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2073, align 16, !tbaa !2
  %2074 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 40
  %2075 = bitcast float* %2074 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2075, align 16, !tbaa !2
  %2076 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 44
  %2077 = bitcast float* %2076 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2077, align 16, !tbaa !2
  %2078 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 48
  %2079 = bitcast float* %2078 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2079, align 16, !tbaa !2
  %2080 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 52
  %2081 = bitcast float* %2080 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2081, align 16, !tbaa !2
  %2082 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 56
  %2083 = bitcast float* %2082 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2083, align 16, !tbaa !2
  %2084 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 60
  %2085 = bitcast float* %2084 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2085, align 16, !tbaa !2
  %2086 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 64
  %2087 = bitcast float* %2086 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2087, align 16, !tbaa !2
  %2088 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 68
  %2089 = bitcast float* %2088 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2089, align 16, !tbaa !2
  %2090 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 72
  %2091 = bitcast float* %2090 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2091, align 16, !tbaa !2
  %2092 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 76
  %2093 = bitcast float* %2092 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2093, align 16, !tbaa !2
  %2094 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 80
  %2095 = bitcast float* %2094 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2095, align 16, !tbaa !2
  %2096 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 84
  %2097 = bitcast float* %2096 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2097, align 16, !tbaa !2
  %2098 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 88
  %2099 = bitcast float* %2098 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2099, align 16, !tbaa !2
  %2100 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 92
  %2101 = bitcast float* %2100 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2101, align 16, !tbaa !2
  %2102 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 96
  %2103 = bitcast float* %2102 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2103, align 16, !tbaa !2
  %2104 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 100
  %2105 = bitcast float* %2104 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2105, align 16, !tbaa !2
  %2106 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 104
  %2107 = bitcast float* %2106 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2107, align 16, !tbaa !2
  %2108 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 108
  %2109 = bitcast float* %2108 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2109, align 16, !tbaa !2
  %2110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 112
  %2111 = bitcast float* %2110 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2111, align 16, !tbaa !2
  %2112 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 116
  %2113 = bitcast float* %2112 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2113, align 16, !tbaa !2
  %2114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 120
  %2115 = bitcast float* %2114 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2115, align 16, !tbaa !2
  %2116 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 124
  %2117 = bitcast float* %2116 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2117, align 16, !tbaa !2
  %2118 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 128
  %2119 = bitcast float* %2118 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2119, align 16, !tbaa !2
  %2120 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 132
  %2121 = bitcast float* %2120 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2121, align 16, !tbaa !2
  %2122 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 136
  %2123 = bitcast float* %2122 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2123, align 16, !tbaa !2
  %2124 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 140
  %2125 = bitcast float* %2124 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2125, align 16, !tbaa !2
  %2126 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 144
  %2127 = bitcast float* %2126 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2127, align 16, !tbaa !2
  %2128 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 148
  %2129 = bitcast float* %2128 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2129, align 16, !tbaa !2
  %2130 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 152
  %2131 = bitcast float* %2130 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2131, align 16, !tbaa !2
  %2132 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 156
  %2133 = bitcast float* %2132 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2133, align 16, !tbaa !2
  %2134 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 160
  %2135 = bitcast float* %2134 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2135, align 16, !tbaa !2
  %2136 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 164
  %2137 = bitcast float* %2136 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2137, align 16, !tbaa !2
  %2138 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 168
  %2139 = bitcast float* %2138 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2139, align 16, !tbaa !2
  %2140 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 172
  %2141 = bitcast float* %2140 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2141, align 16, !tbaa !2
  %2142 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 176
  %2143 = bitcast float* %2142 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2143, align 16, !tbaa !2
  %2144 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 180
  %2145 = bitcast float* %2144 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2145, align 16, !tbaa !2
  %2146 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 184
  %2147 = bitcast float* %2146 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2147, align 16, !tbaa !2
  %2148 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 188
  %2149 = bitcast float* %2148 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2149, align 16, !tbaa !2
  %2150 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 192
  %2151 = bitcast float* %2150 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2151, align 16, !tbaa !2
  %2152 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 196
  %2153 = bitcast float* %2152 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2153, align 16, !tbaa !2
  %2154 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 200
  %2155 = bitcast float* %2154 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2155, align 16, !tbaa !2
  %2156 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 204
  %2157 = bitcast float* %2156 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2157, align 16, !tbaa !2
  %2158 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 208
  %2159 = bitcast float* %2158 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2159, align 16, !tbaa !2
  %2160 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 212
  %2161 = bitcast float* %2160 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2161, align 16, !tbaa !2
  %2162 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 216
  %2163 = bitcast float* %2162 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2163, align 16, !tbaa !2
  %2164 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 220
  %2165 = bitcast float* %2164 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2165, align 16, !tbaa !2
  %2166 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 224
  %2167 = bitcast float* %2166 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2167, align 16, !tbaa !2
  %2168 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 228
  %2169 = bitcast float* %2168 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2169, align 16, !tbaa !2
  %2170 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 232
  %2171 = bitcast float* %2170 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2171, align 16, !tbaa !2
  %2172 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 236
  %2173 = bitcast float* %2172 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2173, align 16, !tbaa !2
  %2174 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 240
  %2175 = bitcast float* %2174 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2175, align 16, !tbaa !2
  %2176 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 244
  %2177 = bitcast float* %2176 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2177, align 16, !tbaa !2
  %2178 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 248
  %2179 = bitcast float* %2178 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2179, align 16, !tbaa !2
  %2180 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2053, i64 252
  %2181 = bitcast float* %2180 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %2181, align 16, !tbaa !2
  %2182 = add nuw nsw i64 %2053, 1
  %2183 = icmp eq i64 %2182, 256
  br i1 %2183, label %2184, label %2052

2184:                                             ; preds = %2052, %2184
  %2185 = phi i64 [ %2314, %2184 ], [ 0, %2052 ]
  %2186 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 0
  %2187 = bitcast float* %2186 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2187, align 16, !tbaa !2
  %2188 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 4
  %2189 = bitcast float* %2188 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2189, align 16, !tbaa !2
  %2190 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 8
  %2191 = bitcast float* %2190 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2191, align 16, !tbaa !2
  %2192 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 12
  %2193 = bitcast float* %2192 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2193, align 16, !tbaa !2
  %2194 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 16
  %2195 = bitcast float* %2194 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2195, align 16, !tbaa !2
  %2196 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 20
  %2197 = bitcast float* %2196 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2197, align 16, !tbaa !2
  %2198 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 24
  %2199 = bitcast float* %2198 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2199, align 16, !tbaa !2
  %2200 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 28
  %2201 = bitcast float* %2200 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2201, align 16, !tbaa !2
  %2202 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 32
  %2203 = bitcast float* %2202 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2203, align 16, !tbaa !2
  %2204 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 36
  %2205 = bitcast float* %2204 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2205, align 16, !tbaa !2
  %2206 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 40
  %2207 = bitcast float* %2206 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2207, align 16, !tbaa !2
  %2208 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 44
  %2209 = bitcast float* %2208 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2209, align 16, !tbaa !2
  %2210 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 48
  %2211 = bitcast float* %2210 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2211, align 16, !tbaa !2
  %2212 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 52
  %2213 = bitcast float* %2212 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2213, align 16, !tbaa !2
  %2214 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 56
  %2215 = bitcast float* %2214 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2215, align 16, !tbaa !2
  %2216 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 60
  %2217 = bitcast float* %2216 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2217, align 16, !tbaa !2
  %2218 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 64
  %2219 = bitcast float* %2218 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2219, align 16, !tbaa !2
  %2220 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 68
  %2221 = bitcast float* %2220 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2221, align 16, !tbaa !2
  %2222 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 72
  %2223 = bitcast float* %2222 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2223, align 16, !tbaa !2
  %2224 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 76
  %2225 = bitcast float* %2224 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2225, align 16, !tbaa !2
  %2226 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 80
  %2227 = bitcast float* %2226 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2227, align 16, !tbaa !2
  %2228 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 84
  %2229 = bitcast float* %2228 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2229, align 16, !tbaa !2
  %2230 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 88
  %2231 = bitcast float* %2230 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2231, align 16, !tbaa !2
  %2232 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 92
  %2233 = bitcast float* %2232 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2233, align 16, !tbaa !2
  %2234 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 96
  %2235 = bitcast float* %2234 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2235, align 16, !tbaa !2
  %2236 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 100
  %2237 = bitcast float* %2236 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2237, align 16, !tbaa !2
  %2238 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 104
  %2239 = bitcast float* %2238 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2239, align 16, !tbaa !2
  %2240 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 108
  %2241 = bitcast float* %2240 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2241, align 16, !tbaa !2
  %2242 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 112
  %2243 = bitcast float* %2242 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2243, align 16, !tbaa !2
  %2244 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 116
  %2245 = bitcast float* %2244 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2245, align 16, !tbaa !2
  %2246 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 120
  %2247 = bitcast float* %2246 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2247, align 16, !tbaa !2
  %2248 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 124
  %2249 = bitcast float* %2248 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2249, align 16, !tbaa !2
  %2250 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 128
  %2251 = bitcast float* %2250 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2251, align 16, !tbaa !2
  %2252 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 132
  %2253 = bitcast float* %2252 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2253, align 16, !tbaa !2
  %2254 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 136
  %2255 = bitcast float* %2254 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2255, align 16, !tbaa !2
  %2256 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 140
  %2257 = bitcast float* %2256 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2257, align 16, !tbaa !2
  %2258 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 144
  %2259 = bitcast float* %2258 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2259, align 16, !tbaa !2
  %2260 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 148
  %2261 = bitcast float* %2260 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2261, align 16, !tbaa !2
  %2262 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 152
  %2263 = bitcast float* %2262 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2263, align 16, !tbaa !2
  %2264 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 156
  %2265 = bitcast float* %2264 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2265, align 16, !tbaa !2
  %2266 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 160
  %2267 = bitcast float* %2266 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2267, align 16, !tbaa !2
  %2268 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 164
  %2269 = bitcast float* %2268 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2269, align 16, !tbaa !2
  %2270 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 168
  %2271 = bitcast float* %2270 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2271, align 16, !tbaa !2
  %2272 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 172
  %2273 = bitcast float* %2272 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2273, align 16, !tbaa !2
  %2274 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 176
  %2275 = bitcast float* %2274 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2275, align 16, !tbaa !2
  %2276 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 180
  %2277 = bitcast float* %2276 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2277, align 16, !tbaa !2
  %2278 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 184
  %2279 = bitcast float* %2278 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2279, align 16, !tbaa !2
  %2280 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 188
  %2281 = bitcast float* %2280 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2281, align 16, !tbaa !2
  %2282 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 192
  %2283 = bitcast float* %2282 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2283, align 16, !tbaa !2
  %2284 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 196
  %2285 = bitcast float* %2284 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2285, align 16, !tbaa !2
  %2286 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 200
  %2287 = bitcast float* %2286 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2287, align 16, !tbaa !2
  %2288 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 204
  %2289 = bitcast float* %2288 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2289, align 16, !tbaa !2
  %2290 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 208
  %2291 = bitcast float* %2290 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2291, align 16, !tbaa !2
  %2292 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 212
  %2293 = bitcast float* %2292 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2293, align 16, !tbaa !2
  %2294 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 216
  %2295 = bitcast float* %2294 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2295, align 16, !tbaa !2
  %2296 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 220
  %2297 = bitcast float* %2296 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2297, align 16, !tbaa !2
  %2298 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 224
  %2299 = bitcast float* %2298 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2299, align 16, !tbaa !2
  %2300 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 228
  %2301 = bitcast float* %2300 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2301, align 16, !tbaa !2
  %2302 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 232
  %2303 = bitcast float* %2302 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2303, align 16, !tbaa !2
  %2304 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 236
  %2305 = bitcast float* %2304 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2305, align 16, !tbaa !2
  %2306 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 240
  %2307 = bitcast float* %2306 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2307, align 16, !tbaa !2
  %2308 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 244
  %2309 = bitcast float* %2308 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2309, align 16, !tbaa !2
  %2310 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 248
  %2311 = bitcast float* %2310 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2311, align 16, !tbaa !2
  %2312 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2185, i64 252
  %2313 = bitcast float* %2312 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2313, align 16, !tbaa !2
  %2314 = add nuw nsw i64 %2185, 1
  %2315 = icmp eq i64 %2314, 256
  br i1 %2315, label %15603, label %2184

2316:                                             ; preds = %1916
  %2317 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)) #15
  %2318 = icmp eq i32 %2317, 0
  br i1 %2318, label %2319, label %2609

2319:                                             ; preds = %2316, %2319
  %2320 = phi i64 [ %2449, %2319 ], [ 0, %2316 ]
  %2321 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 0
  %2322 = bitcast float* %2321 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2322, align 16, !tbaa !2
  %2323 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 4
  %2324 = bitcast float* %2323 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2324, align 16, !tbaa !2
  %2325 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 8
  %2326 = bitcast float* %2325 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2326, align 16, !tbaa !2
  %2327 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 12
  %2328 = bitcast float* %2327 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2328, align 16, !tbaa !2
  %2329 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 16
  %2330 = bitcast float* %2329 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2330, align 16, !tbaa !2
  %2331 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 20
  %2332 = bitcast float* %2331 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2332, align 16, !tbaa !2
  %2333 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 24
  %2334 = bitcast float* %2333 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2334, align 16, !tbaa !2
  %2335 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 28
  %2336 = bitcast float* %2335 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2336, align 16, !tbaa !2
  %2337 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 32
  %2338 = bitcast float* %2337 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2338, align 16, !tbaa !2
  %2339 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 36
  %2340 = bitcast float* %2339 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2340, align 16, !tbaa !2
  %2341 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 40
  %2342 = bitcast float* %2341 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2342, align 16, !tbaa !2
  %2343 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 44
  %2344 = bitcast float* %2343 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2344, align 16, !tbaa !2
  %2345 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 48
  %2346 = bitcast float* %2345 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2346, align 16, !tbaa !2
  %2347 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 52
  %2348 = bitcast float* %2347 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2348, align 16, !tbaa !2
  %2349 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 56
  %2350 = bitcast float* %2349 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2350, align 16, !tbaa !2
  %2351 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 60
  %2352 = bitcast float* %2351 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2352, align 16, !tbaa !2
  %2353 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 64
  %2354 = bitcast float* %2353 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2354, align 16, !tbaa !2
  %2355 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 68
  %2356 = bitcast float* %2355 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2356, align 16, !tbaa !2
  %2357 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 72
  %2358 = bitcast float* %2357 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2358, align 16, !tbaa !2
  %2359 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 76
  %2360 = bitcast float* %2359 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2360, align 16, !tbaa !2
  %2361 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 80
  %2362 = bitcast float* %2361 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2362, align 16, !tbaa !2
  %2363 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 84
  %2364 = bitcast float* %2363 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2364, align 16, !tbaa !2
  %2365 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 88
  %2366 = bitcast float* %2365 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2366, align 16, !tbaa !2
  %2367 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 92
  %2368 = bitcast float* %2367 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2368, align 16, !tbaa !2
  %2369 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 96
  %2370 = bitcast float* %2369 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2370, align 16, !tbaa !2
  %2371 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 100
  %2372 = bitcast float* %2371 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2372, align 16, !tbaa !2
  %2373 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 104
  %2374 = bitcast float* %2373 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2374, align 16, !tbaa !2
  %2375 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 108
  %2376 = bitcast float* %2375 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2376, align 16, !tbaa !2
  %2377 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 112
  %2378 = bitcast float* %2377 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2378, align 16, !tbaa !2
  %2379 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 116
  %2380 = bitcast float* %2379 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2380, align 16, !tbaa !2
  %2381 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 120
  %2382 = bitcast float* %2381 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2382, align 16, !tbaa !2
  %2383 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 124
  %2384 = bitcast float* %2383 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2384, align 16, !tbaa !2
  %2385 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 128
  %2386 = bitcast float* %2385 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2386, align 16, !tbaa !2
  %2387 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 132
  %2388 = bitcast float* %2387 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2388, align 16, !tbaa !2
  %2389 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 136
  %2390 = bitcast float* %2389 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2390, align 16, !tbaa !2
  %2391 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 140
  %2392 = bitcast float* %2391 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2392, align 16, !tbaa !2
  %2393 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 144
  %2394 = bitcast float* %2393 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2394, align 16, !tbaa !2
  %2395 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 148
  %2396 = bitcast float* %2395 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2396, align 16, !tbaa !2
  %2397 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 152
  %2398 = bitcast float* %2397 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2398, align 16, !tbaa !2
  %2399 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 156
  %2400 = bitcast float* %2399 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2400, align 16, !tbaa !2
  %2401 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 160
  %2402 = bitcast float* %2401 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2402, align 16, !tbaa !2
  %2403 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 164
  %2404 = bitcast float* %2403 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2404, align 16, !tbaa !2
  %2405 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 168
  %2406 = bitcast float* %2405 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2406, align 16, !tbaa !2
  %2407 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 172
  %2408 = bitcast float* %2407 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2408, align 16, !tbaa !2
  %2409 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 176
  %2410 = bitcast float* %2409 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2410, align 16, !tbaa !2
  %2411 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 180
  %2412 = bitcast float* %2411 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2412, align 16, !tbaa !2
  %2413 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 184
  %2414 = bitcast float* %2413 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2414, align 16, !tbaa !2
  %2415 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 188
  %2416 = bitcast float* %2415 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2416, align 16, !tbaa !2
  %2417 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 192
  %2418 = bitcast float* %2417 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2418, align 16, !tbaa !2
  %2419 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 196
  %2420 = bitcast float* %2419 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2420, align 16, !tbaa !2
  %2421 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 200
  %2422 = bitcast float* %2421 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2422, align 16, !tbaa !2
  %2423 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 204
  %2424 = bitcast float* %2423 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2424, align 16, !tbaa !2
  %2425 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 208
  %2426 = bitcast float* %2425 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2426, align 16, !tbaa !2
  %2427 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 212
  %2428 = bitcast float* %2427 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2428, align 16, !tbaa !2
  %2429 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 216
  %2430 = bitcast float* %2429 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2430, align 16, !tbaa !2
  %2431 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 220
  %2432 = bitcast float* %2431 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2432, align 16, !tbaa !2
  %2433 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 224
  %2434 = bitcast float* %2433 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2434, align 16, !tbaa !2
  %2435 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 228
  %2436 = bitcast float* %2435 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2436, align 16, !tbaa !2
  %2437 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 232
  %2438 = bitcast float* %2437 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2438, align 16, !tbaa !2
  %2439 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 236
  %2440 = bitcast float* %2439 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2440, align 16, !tbaa !2
  %2441 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 240
  %2442 = bitcast float* %2441 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2442, align 16, !tbaa !2
  %2443 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 244
  %2444 = bitcast float* %2443 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2444, align 16, !tbaa !2
  %2445 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 248
  %2446 = bitcast float* %2445 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2446, align 16, !tbaa !2
  %2447 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2320, i64 252
  %2448 = bitcast float* %2447 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2448, align 16, !tbaa !2
  %2449 = add nuw nsw i64 %2320, 1
  %2450 = icmp eq i64 %2449, 256
  br i1 %2450, label %2451, label %2319

2451:                                             ; preds = %2319, %2451
  %2452 = phi i64 [ %2467, %2451 ], [ 0, %2319 ]
  %2453 = phi <4 x i64> [ %2468, %2451 ], [ <i64 0, i64 1, i64 2, i64 3>, %2319 ]
  %2454 = trunc <4 x i64> %2453 to <4 x i32>
  %2455 = add <4 x i32> %2454, <i32 1, i32 1, i32 1, i32 1>
  %2456 = sitofp <4 x i32> %2455 to <4 x float>
  %2457 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2456
  %2458 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %2452
  %2459 = bitcast float* %2458 to <4 x float>*
  store <4 x float> %2457, <4 x float>* %2459, align 16, !tbaa !2
  %2460 = or i64 %2452, 4
  %2461 = trunc <4 x i64> %2453 to <4 x i32>
  %2462 = add <4 x i32> %2461, <i32 5, i32 5, i32 5, i32 5>
  %2463 = sitofp <4 x i32> %2462 to <4 x float>
  %2464 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2463
  %2465 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %2460
  %2466 = bitcast float* %2465 to <4 x float>*
  store <4 x float> %2464, <4 x float>* %2466, align 16, !tbaa !2
  %2467 = add nuw nsw i64 %2452, 8
  %2468 = add <4 x i64> %2453, <i64 8, i64 8, i64 8, i64 8>
  %2469 = icmp eq i64 %2467, 32000
  br i1 %2469, label %2470, label %2451, !llvm.loop !46

2470:                                             ; preds = %2451, %2470
  %2471 = phi i64 [ %2472, %2470 ], [ 0, %2451 ]
  %2472 = add nuw nsw i64 %2471, 1
  %2473 = trunc i64 %2472 to i32
  %2474 = sitofp i32 %2473 to float
  %2475 = fdiv float 1.000000e+00, %2474
  %2476 = insertelement <4 x float> undef, float %2475, i32 0
  %2477 = shufflevector <4 x float> %2476, <4 x float> undef, <4 x i32> zeroinitializer
  %2478 = insertelement <4 x float> undef, float %2475, i32 0
  %2479 = shufflevector <4 x float> %2478, <4 x float> undef, <4 x i32> zeroinitializer
  %2480 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 0
  %2481 = bitcast float* %2480 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2481, align 16, !tbaa !2
  %2482 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 4
  %2483 = bitcast float* %2482 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2483, align 16, !tbaa !2
  %2484 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 8
  %2485 = bitcast float* %2484 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2485, align 16, !tbaa !2
  %2486 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 12
  %2487 = bitcast float* %2486 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2487, align 16, !tbaa !2
  %2488 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 16
  %2489 = bitcast float* %2488 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2489, align 16, !tbaa !2
  %2490 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 20
  %2491 = bitcast float* %2490 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2491, align 16, !tbaa !2
  %2492 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 24
  %2493 = bitcast float* %2492 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2493, align 16, !tbaa !2
  %2494 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 28
  %2495 = bitcast float* %2494 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2495, align 16, !tbaa !2
  %2496 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 32
  %2497 = bitcast float* %2496 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2497, align 16, !tbaa !2
  %2498 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 36
  %2499 = bitcast float* %2498 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2499, align 16, !tbaa !2
  %2500 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 40
  %2501 = bitcast float* %2500 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2501, align 16, !tbaa !2
  %2502 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 44
  %2503 = bitcast float* %2502 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2503, align 16, !tbaa !2
  %2504 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 48
  %2505 = bitcast float* %2504 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2505, align 16, !tbaa !2
  %2506 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 52
  %2507 = bitcast float* %2506 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2507, align 16, !tbaa !2
  %2508 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 56
  %2509 = bitcast float* %2508 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2509, align 16, !tbaa !2
  %2510 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 60
  %2511 = bitcast float* %2510 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2511, align 16, !tbaa !2
  %2512 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 64
  %2513 = bitcast float* %2512 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2513, align 16, !tbaa !2
  %2514 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 68
  %2515 = bitcast float* %2514 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2515, align 16, !tbaa !2
  %2516 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 72
  %2517 = bitcast float* %2516 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2517, align 16, !tbaa !2
  %2518 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 76
  %2519 = bitcast float* %2518 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2519, align 16, !tbaa !2
  %2520 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 80
  %2521 = bitcast float* %2520 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2521, align 16, !tbaa !2
  %2522 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 84
  %2523 = bitcast float* %2522 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2523, align 16, !tbaa !2
  %2524 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 88
  %2525 = bitcast float* %2524 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2525, align 16, !tbaa !2
  %2526 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 92
  %2527 = bitcast float* %2526 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2527, align 16, !tbaa !2
  %2528 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 96
  %2529 = bitcast float* %2528 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2529, align 16, !tbaa !2
  %2530 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 100
  %2531 = bitcast float* %2530 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2531, align 16, !tbaa !2
  %2532 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 104
  %2533 = bitcast float* %2532 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2533, align 16, !tbaa !2
  %2534 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 108
  %2535 = bitcast float* %2534 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2535, align 16, !tbaa !2
  %2536 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 112
  %2537 = bitcast float* %2536 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2537, align 16, !tbaa !2
  %2538 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 116
  %2539 = bitcast float* %2538 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2539, align 16, !tbaa !2
  %2540 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 120
  %2541 = bitcast float* %2540 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2541, align 16, !tbaa !2
  %2542 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 124
  %2543 = bitcast float* %2542 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2543, align 16, !tbaa !2
  %2544 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 128
  %2545 = bitcast float* %2544 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2545, align 16, !tbaa !2
  %2546 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 132
  %2547 = bitcast float* %2546 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2547, align 16, !tbaa !2
  %2548 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 136
  %2549 = bitcast float* %2548 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2549, align 16, !tbaa !2
  %2550 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 140
  %2551 = bitcast float* %2550 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2551, align 16, !tbaa !2
  %2552 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 144
  %2553 = bitcast float* %2552 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2553, align 16, !tbaa !2
  %2554 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 148
  %2555 = bitcast float* %2554 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2555, align 16, !tbaa !2
  %2556 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 152
  %2557 = bitcast float* %2556 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2557, align 16, !tbaa !2
  %2558 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 156
  %2559 = bitcast float* %2558 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2559, align 16, !tbaa !2
  %2560 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 160
  %2561 = bitcast float* %2560 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2561, align 16, !tbaa !2
  %2562 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 164
  %2563 = bitcast float* %2562 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2563, align 16, !tbaa !2
  %2564 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 168
  %2565 = bitcast float* %2564 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2565, align 16, !tbaa !2
  %2566 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 172
  %2567 = bitcast float* %2566 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2567, align 16, !tbaa !2
  %2568 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 176
  %2569 = bitcast float* %2568 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2569, align 16, !tbaa !2
  %2570 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 180
  %2571 = bitcast float* %2570 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2571, align 16, !tbaa !2
  %2572 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 184
  %2573 = bitcast float* %2572 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2573, align 16, !tbaa !2
  %2574 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 188
  %2575 = bitcast float* %2574 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2575, align 16, !tbaa !2
  %2576 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 192
  %2577 = bitcast float* %2576 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2577, align 16, !tbaa !2
  %2578 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 196
  %2579 = bitcast float* %2578 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2579, align 16, !tbaa !2
  %2580 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 200
  %2581 = bitcast float* %2580 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2581, align 16, !tbaa !2
  %2582 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 204
  %2583 = bitcast float* %2582 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2583, align 16, !tbaa !2
  %2584 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 208
  %2585 = bitcast float* %2584 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2585, align 16, !tbaa !2
  %2586 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 212
  %2587 = bitcast float* %2586 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2587, align 16, !tbaa !2
  %2588 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 216
  %2589 = bitcast float* %2588 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2589, align 16, !tbaa !2
  %2590 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 220
  %2591 = bitcast float* %2590 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2591, align 16, !tbaa !2
  %2592 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 224
  %2593 = bitcast float* %2592 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2593, align 16, !tbaa !2
  %2594 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 228
  %2595 = bitcast float* %2594 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2595, align 16, !tbaa !2
  %2596 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 232
  %2597 = bitcast float* %2596 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2597, align 16, !tbaa !2
  %2598 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 236
  %2599 = bitcast float* %2598 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2599, align 16, !tbaa !2
  %2600 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 240
  %2601 = bitcast float* %2600 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2601, align 16, !tbaa !2
  %2602 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 244
  %2603 = bitcast float* %2602 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2603, align 16, !tbaa !2
  %2604 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 248
  %2605 = bitcast float* %2604 to <4 x float>*
  store <4 x float> %2477, <4 x float>* %2605, align 16, !tbaa !2
  %2606 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2471, i64 252
  %2607 = bitcast float* %2606 to <4 x float>*
  store <4 x float> %2479, <4 x float>* %2607, align 16, !tbaa !2
  %2608 = icmp eq i64 %2472, 256
  br i1 %2608, label %15603, label %2470

2609:                                             ; preds = %2316
  %2610 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0)) #15
  %2611 = icmp eq i32 %2610, 0
  br i1 %2611, label %2612, label %2713

2612:                                             ; preds = %2609
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %2613

2613:                                             ; preds = %2613, %2612
  %2614 = phi i64 [ 0, %2612 ], [ %2654, %2613 ]
  %2615 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2614
  %2616 = bitcast float* %2615 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2616, align 16, !tbaa !2
  %2617 = getelementptr inbounds float, float* %2615, i64 4
  %2618 = bitcast float* %2617 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2618, align 16, !tbaa !2
  %2619 = or i64 %2614, 8
  %2620 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2619
  %2621 = bitcast float* %2620 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2621, align 16, !tbaa !2
  %2622 = getelementptr inbounds float, float* %2620, i64 4
  %2623 = bitcast float* %2622 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2623, align 16, !tbaa !2
  %2624 = or i64 %2614, 16
  %2625 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2624
  %2626 = bitcast float* %2625 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2626, align 16, !tbaa !2
  %2627 = getelementptr inbounds float, float* %2625, i64 4
  %2628 = bitcast float* %2627 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2628, align 16, !tbaa !2
  %2629 = or i64 %2614, 24
  %2630 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2629
  %2631 = bitcast float* %2630 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2631, align 16, !tbaa !2
  %2632 = getelementptr inbounds float, float* %2630, i64 4
  %2633 = bitcast float* %2632 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2633, align 16, !tbaa !2
  %2634 = or i64 %2614, 32
  %2635 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2634
  %2636 = bitcast float* %2635 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2636, align 16, !tbaa !2
  %2637 = getelementptr inbounds float, float* %2635, i64 4
  %2638 = bitcast float* %2637 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2638, align 16, !tbaa !2
  %2639 = or i64 %2614, 40
  %2640 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2639
  %2641 = bitcast float* %2640 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2641, align 16, !tbaa !2
  %2642 = getelementptr inbounds float, float* %2640, i64 4
  %2643 = bitcast float* %2642 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2643, align 16, !tbaa !2
  %2644 = or i64 %2614, 48
  %2645 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2644
  %2646 = bitcast float* %2645 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2646, align 16, !tbaa !2
  %2647 = getelementptr inbounds float, float* %2645, i64 4
  %2648 = bitcast float* %2647 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2648, align 16, !tbaa !2
  %2649 = or i64 %2614, 56
  %2650 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2649
  %2651 = bitcast float* %2650 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2651, align 16, !tbaa !2
  %2652 = getelementptr inbounds float, float* %2650, i64 4
  %2653 = bitcast float* %2652 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2653, align 16, !tbaa !2
  %2654 = add nuw nsw i64 %2614, 64
  %2655 = icmp eq i64 %2654, 32000
  br i1 %2655, label %2656, label %2613, !llvm.loop !47

2656:                                             ; preds = %2613, %2656
  %2657 = phi i64 [ %2672, %2656 ], [ 0, %2613 ]
  %2658 = phi <4 x i64> [ %2673, %2656 ], [ <i64 0, i64 1, i64 2, i64 3>, %2613 ]
  %2659 = trunc <4 x i64> %2658 to <4 x i32>
  %2660 = add <4 x i32> %2659, <i32 1, i32 1, i32 1, i32 1>
  %2661 = sitofp <4 x i32> %2660 to <4 x float>
  %2662 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2661
  %2663 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2657
  %2664 = bitcast float* %2663 to <4 x float>*
  store <4 x float> %2662, <4 x float>* %2664, align 16, !tbaa !2
  %2665 = or i64 %2657, 4
  %2666 = trunc <4 x i64> %2658 to <4 x i32>
  %2667 = add <4 x i32> %2666, <i32 5, i32 5, i32 5, i32 5>
  %2668 = sitofp <4 x i32> %2667 to <4 x float>
  %2669 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2668
  %2670 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2665
  %2671 = bitcast float* %2670 to <4 x float>*
  store <4 x float> %2669, <4 x float>* %2671, align 16, !tbaa !2
  %2672 = add nuw nsw i64 %2657, 8
  %2673 = add <4 x i64> %2658, <i64 8, i64 8, i64 8, i64 8>
  %2674 = icmp eq i64 %2672, 32000
  br i1 %2674, label %2675, label %2656, !llvm.loop !48

2675:                                             ; preds = %2656, %2675
  %2676 = phi i64 [ %2691, %2675 ], [ 0, %2656 ]
  %2677 = phi <4 x i64> [ %2692, %2675 ], [ <i64 0, i64 1, i64 2, i64 3>, %2656 ]
  %2678 = trunc <4 x i64> %2677 to <4 x i32>
  %2679 = add <4 x i32> %2678, <i32 1, i32 1, i32 1, i32 1>
  %2680 = sitofp <4 x i32> %2679 to <4 x float>
  %2681 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2680
  %2682 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2676
  %2683 = bitcast float* %2682 to <4 x float>*
  store <4 x float> %2681, <4 x float>* %2683, align 16, !tbaa !2
  %2684 = or i64 %2676, 4
  %2685 = trunc <4 x i64> %2677 to <4 x i32>
  %2686 = add <4 x i32> %2685, <i32 5, i32 5, i32 5, i32 5>
  %2687 = sitofp <4 x i32> %2686 to <4 x float>
  %2688 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2687
  %2689 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2684
  %2690 = bitcast float* %2689 to <4 x float>*
  store <4 x float> %2688, <4 x float>* %2690, align 16, !tbaa !2
  %2691 = add nuw nsw i64 %2676, 8
  %2692 = add <4 x i64> %2677, <i64 8, i64 8, i64 8, i64 8>
  %2693 = icmp eq i64 %2691, 32000
  br i1 %2693, label %2694, label %2675, !llvm.loop !49

2694:                                             ; preds = %2675, %2694
  %2695 = phi i64 [ %2710, %2694 ], [ 0, %2675 ]
  %2696 = phi <4 x i64> [ %2711, %2694 ], [ <i64 0, i64 1, i64 2, i64 3>, %2675 ]
  %2697 = trunc <4 x i64> %2696 to <4 x i32>
  %2698 = add <4 x i32> %2697, <i32 1, i32 1, i32 1, i32 1>
  %2699 = sitofp <4 x i32> %2698 to <4 x float>
  %2700 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2699
  %2701 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %2695
  %2702 = bitcast float* %2701 to <4 x float>*
  store <4 x float> %2700, <4 x float>* %2702, align 16, !tbaa !2
  %2703 = or i64 %2695, 4
  %2704 = trunc <4 x i64> %2696 to <4 x i32>
  %2705 = add <4 x i32> %2704, <i32 5, i32 5, i32 5, i32 5>
  %2706 = sitofp <4 x i32> %2705 to <4 x float>
  %2707 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2706
  %2708 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %2703
  %2709 = bitcast float* %2708 to <4 x float>*
  store <4 x float> %2707, <4 x float>* %2709, align 16, !tbaa !2
  %2710 = add nuw nsw i64 %2695, 8
  %2711 = add <4 x i64> %2696, <i64 8, i64 8, i64 8, i64 8>
  %2712 = icmp eq i64 %2710, 32000
  br i1 %2712, label %15603, label %2694, !llvm.loop !50

2713:                                             ; preds = %2609
  %2714 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  %2715 = icmp eq i32 %2714, 0
  br i1 %2715, label %2716, label %2846

2716:                                             ; preds = %2713
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %2717

2717:                                             ; preds = %2717, %2716
  %2718 = phi i64 [ 0, %2716 ], [ %2758, %2717 ]
  %2719 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2718
  %2720 = bitcast float* %2719 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2720, align 16, !tbaa !2
  %2721 = getelementptr inbounds float, float* %2719, i64 4
  %2722 = bitcast float* %2721 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2722, align 16, !tbaa !2
  %2723 = or i64 %2718, 8
  %2724 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2723
  %2725 = bitcast float* %2724 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2725, align 16, !tbaa !2
  %2726 = getelementptr inbounds float, float* %2724, i64 4
  %2727 = bitcast float* %2726 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2727, align 16, !tbaa !2
  %2728 = or i64 %2718, 16
  %2729 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2728
  %2730 = bitcast float* %2729 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2730, align 16, !tbaa !2
  %2731 = getelementptr inbounds float, float* %2729, i64 4
  %2732 = bitcast float* %2731 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2732, align 16, !tbaa !2
  %2733 = or i64 %2718, 24
  %2734 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2733
  %2735 = bitcast float* %2734 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2735, align 16, !tbaa !2
  %2736 = getelementptr inbounds float, float* %2734, i64 4
  %2737 = bitcast float* %2736 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2737, align 16, !tbaa !2
  %2738 = or i64 %2718, 32
  %2739 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2738
  %2740 = bitcast float* %2739 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2740, align 16, !tbaa !2
  %2741 = getelementptr inbounds float, float* %2739, i64 4
  %2742 = bitcast float* %2741 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2742, align 16, !tbaa !2
  %2743 = or i64 %2718, 40
  %2744 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2743
  %2745 = bitcast float* %2744 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2745, align 16, !tbaa !2
  %2746 = getelementptr inbounds float, float* %2744, i64 4
  %2747 = bitcast float* %2746 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2747, align 16, !tbaa !2
  %2748 = or i64 %2718, 48
  %2749 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2748
  %2750 = bitcast float* %2749 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2750, align 16, !tbaa !2
  %2751 = getelementptr inbounds float, float* %2749, i64 4
  %2752 = bitcast float* %2751 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2752, align 16, !tbaa !2
  %2753 = or i64 %2718, 56
  %2754 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2753
  %2755 = bitcast float* %2754 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2755, align 16, !tbaa !2
  %2756 = getelementptr inbounds float, float* %2754, i64 4
  %2757 = bitcast float* %2756 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %2757, align 16, !tbaa !2
  %2758 = add nuw nsw i64 %2718, 64
  %2759 = icmp eq i64 %2758, 32000
  br i1 %2759, label %2760, label %2717, !llvm.loop !51

2760:                                             ; preds = %2717, %2760
  %2761 = phi i64 [ %2801, %2760 ], [ 0, %2717 ]
  %2762 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2761
  %2763 = bitcast float* %2762 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2763, align 16, !tbaa !2
  %2764 = getelementptr inbounds float, float* %2762, i64 4
  %2765 = bitcast float* %2764 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2765, align 16, !tbaa !2
  %2766 = or i64 %2761, 8
  %2767 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2766
  %2768 = bitcast float* %2767 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2768, align 16, !tbaa !2
  %2769 = getelementptr inbounds float, float* %2767, i64 4
  %2770 = bitcast float* %2769 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2770, align 16, !tbaa !2
  %2771 = or i64 %2761, 16
  %2772 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2771
  %2773 = bitcast float* %2772 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2773, align 16, !tbaa !2
  %2774 = getelementptr inbounds float, float* %2772, i64 4
  %2775 = bitcast float* %2774 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2775, align 16, !tbaa !2
  %2776 = or i64 %2761, 24
  %2777 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2776
  %2778 = bitcast float* %2777 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2778, align 16, !tbaa !2
  %2779 = getelementptr inbounds float, float* %2777, i64 4
  %2780 = bitcast float* %2779 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2780, align 16, !tbaa !2
  %2781 = or i64 %2761, 32
  %2782 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2781
  %2783 = bitcast float* %2782 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2783, align 16, !tbaa !2
  %2784 = getelementptr inbounds float, float* %2782, i64 4
  %2785 = bitcast float* %2784 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2785, align 16, !tbaa !2
  %2786 = or i64 %2761, 40
  %2787 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2786
  %2788 = bitcast float* %2787 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2788, align 16, !tbaa !2
  %2789 = getelementptr inbounds float, float* %2787, i64 4
  %2790 = bitcast float* %2789 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2790, align 16, !tbaa !2
  %2791 = or i64 %2761, 48
  %2792 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2791
  %2793 = bitcast float* %2792 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2793, align 16, !tbaa !2
  %2794 = getelementptr inbounds float, float* %2792, i64 4
  %2795 = bitcast float* %2794 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2795, align 16, !tbaa !2
  %2796 = or i64 %2761, 56
  %2797 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2796
  %2798 = bitcast float* %2797 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2798, align 16, !tbaa !2
  %2799 = getelementptr inbounds float, float* %2797, i64 4
  %2800 = bitcast float* %2799 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2800, align 16, !tbaa !2
  %2801 = add nuw nsw i64 %2761, 64
  %2802 = icmp eq i64 %2801, 32000
  br i1 %2802, label %2803, label %2760, !llvm.loop !52

2803:                                             ; preds = %2760, %2803
  %2804 = phi i64 [ %2844, %2803 ], [ 0, %2760 ]
  %2805 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2804
  %2806 = bitcast float* %2805 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2806, align 16, !tbaa !2
  %2807 = getelementptr inbounds float, float* %2805, i64 4
  %2808 = bitcast float* %2807 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2808, align 16, !tbaa !2
  %2809 = or i64 %2804, 8
  %2810 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2809
  %2811 = bitcast float* %2810 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2811, align 16, !tbaa !2
  %2812 = getelementptr inbounds float, float* %2810, i64 4
  %2813 = bitcast float* %2812 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2813, align 16, !tbaa !2
  %2814 = or i64 %2804, 16
  %2815 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2814
  %2816 = bitcast float* %2815 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2816, align 16, !tbaa !2
  %2817 = getelementptr inbounds float, float* %2815, i64 4
  %2818 = bitcast float* %2817 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2818, align 16, !tbaa !2
  %2819 = or i64 %2804, 24
  %2820 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2819
  %2821 = bitcast float* %2820 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2821, align 16, !tbaa !2
  %2822 = getelementptr inbounds float, float* %2820, i64 4
  %2823 = bitcast float* %2822 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2823, align 16, !tbaa !2
  %2824 = or i64 %2804, 32
  %2825 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2824
  %2826 = bitcast float* %2825 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2826, align 16, !tbaa !2
  %2827 = getelementptr inbounds float, float* %2825, i64 4
  %2828 = bitcast float* %2827 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2828, align 16, !tbaa !2
  %2829 = or i64 %2804, 40
  %2830 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2829
  %2831 = bitcast float* %2830 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2831, align 16, !tbaa !2
  %2832 = getelementptr inbounds float, float* %2830, i64 4
  %2833 = bitcast float* %2832 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2833, align 16, !tbaa !2
  %2834 = or i64 %2804, 48
  %2835 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2834
  %2836 = bitcast float* %2835 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2836, align 16, !tbaa !2
  %2837 = getelementptr inbounds float, float* %2835, i64 4
  %2838 = bitcast float* %2837 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2838, align 16, !tbaa !2
  %2839 = or i64 %2804, 56
  %2840 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2839
  %2841 = bitcast float* %2840 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2841, align 16, !tbaa !2
  %2842 = getelementptr inbounds float, float* %2840, i64 4
  %2843 = bitcast float* %2842 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2843, align 16, !tbaa !2
  %2844 = add nuw nsw i64 %2804, 64
  %2845 = icmp eq i64 %2844, 32000
  br i1 %2845, label %15603, label %2803, !llvm.loop !53

2846:                                             ; preds = %2713
  %2847 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #15
  %2848 = icmp eq i32 %2847, 0
  br i1 %2848, label %2849, label %2913

2849:                                             ; preds = %2846, %2849
  %2850 = phi i64 [ %2890, %2849 ], [ 0, %2846 ]
  %2851 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %2850
  %2852 = bitcast float* %2851 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2852, align 16, !tbaa !2
  %2853 = getelementptr inbounds float, float* %2851, i64 4
  %2854 = bitcast float* %2853 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2854, align 16, !tbaa !2
  %2855 = or i64 %2850, 8
  %2856 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %2855
  %2857 = bitcast float* %2856 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2857, align 16, !tbaa !2
  %2858 = getelementptr inbounds float, float* %2856, i64 4
  %2859 = bitcast float* %2858 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2859, align 16, !tbaa !2
  %2860 = or i64 %2850, 16
  %2861 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %2860
  %2862 = bitcast float* %2861 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2862, align 16, !tbaa !2
  %2863 = getelementptr inbounds float, float* %2861, i64 4
  %2864 = bitcast float* %2863 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2864, align 16, !tbaa !2
  %2865 = or i64 %2850, 24
  %2866 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %2865
  %2867 = bitcast float* %2866 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2867, align 16, !tbaa !2
  %2868 = getelementptr inbounds float, float* %2866, i64 4
  %2869 = bitcast float* %2868 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2869, align 16, !tbaa !2
  %2870 = or i64 %2850, 32
  %2871 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %2870
  %2872 = bitcast float* %2871 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2872, align 16, !tbaa !2
  %2873 = getelementptr inbounds float, float* %2871, i64 4
  %2874 = bitcast float* %2873 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2874, align 16, !tbaa !2
  %2875 = or i64 %2850, 40
  %2876 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %2875
  %2877 = bitcast float* %2876 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2877, align 16, !tbaa !2
  %2878 = getelementptr inbounds float, float* %2876, i64 4
  %2879 = bitcast float* %2878 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2879, align 16, !tbaa !2
  %2880 = or i64 %2850, 48
  %2881 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %2880
  %2882 = bitcast float* %2881 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2882, align 16, !tbaa !2
  %2883 = getelementptr inbounds float, float* %2881, i64 4
  %2884 = bitcast float* %2883 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2884, align 16, !tbaa !2
  %2885 = or i64 %2850, 56
  %2886 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %2885
  %2887 = bitcast float* %2886 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2887, align 16, !tbaa !2
  %2888 = getelementptr inbounds float, float* %2886, i64 4
  %2889 = bitcast float* %2888 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2889, align 16, !tbaa !2
  %2890 = add nuw nsw i64 %2850, 64
  %2891 = icmp eq i64 %2890, 32000
  br i1 %2891, label %2892, label %2849, !llvm.loop !54

2892:                                             ; preds = %2849, %2892
  %2893 = phi i64 [ %2910, %2892 ], [ 0, %2849 ]
  %2894 = phi <4 x i64> [ %2911, %2892 ], [ <i64 0, i64 1, i64 2, i64 3>, %2849 ]
  %2895 = add nuw nsw <4 x i64> %2894, <i64 1, i64 1, i64 1, i64 1>
  %2896 = mul nuw nsw <4 x i64> %2895, %2895
  %2897 = trunc <4 x i64> %2896 to <4 x i32>
  %2898 = sitofp <4 x i32> %2897 to <4 x float>
  %2899 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2898
  %2900 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2893
  %2901 = bitcast float* %2900 to <4 x float>*
  store <4 x float> %2899, <4 x float>* %2901, align 16, !tbaa !2
  %2902 = or i64 %2893, 4
  %2903 = add <4 x i64> %2894, <i64 5, i64 5, i64 5, i64 5>
  %2904 = mul nuw nsw <4 x i64> %2903, %2903
  %2905 = trunc <4 x i64> %2904 to <4 x i32>
  %2906 = sitofp <4 x i32> %2905 to <4 x float>
  %2907 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2906
  %2908 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2902
  %2909 = bitcast float* %2908 to <4 x float>*
  store <4 x float> %2907, <4 x float>* %2909, align 16, !tbaa !2
  %2910 = add nuw nsw i64 %2893, 8
  %2911 = add <4 x i64> %2894, <i64 8, i64 8, i64 8, i64 8>
  %2912 = icmp eq i64 %2910, 32000
  br i1 %2912, label %15603, label %2892, !llvm.loop !55

2913:                                             ; preds = %2846
  %2914 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #15
  %2915 = icmp eq i32 %2914, 0
  br i1 %2915, label %2916, label %3086

2916:                                             ; preds = %2913, %2916
  %2917 = phi i64 [ %3046, %2916 ], [ 0, %2913 ]
  %2918 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 0
  %2919 = bitcast float* %2918 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2919, align 16, !tbaa !2
  %2920 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 4
  %2921 = bitcast float* %2920 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2921, align 16, !tbaa !2
  %2922 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 8
  %2923 = bitcast float* %2922 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2923, align 16, !tbaa !2
  %2924 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 12
  %2925 = bitcast float* %2924 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2925, align 16, !tbaa !2
  %2926 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 16
  %2927 = bitcast float* %2926 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2927, align 16, !tbaa !2
  %2928 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 20
  %2929 = bitcast float* %2928 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2929, align 16, !tbaa !2
  %2930 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 24
  %2931 = bitcast float* %2930 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2931, align 16, !tbaa !2
  %2932 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 28
  %2933 = bitcast float* %2932 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2933, align 16, !tbaa !2
  %2934 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 32
  %2935 = bitcast float* %2934 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2935, align 16, !tbaa !2
  %2936 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 36
  %2937 = bitcast float* %2936 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2937, align 16, !tbaa !2
  %2938 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 40
  %2939 = bitcast float* %2938 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2939, align 16, !tbaa !2
  %2940 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 44
  %2941 = bitcast float* %2940 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2941, align 16, !tbaa !2
  %2942 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 48
  %2943 = bitcast float* %2942 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2943, align 16, !tbaa !2
  %2944 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 52
  %2945 = bitcast float* %2944 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2945, align 16, !tbaa !2
  %2946 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 56
  %2947 = bitcast float* %2946 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2947, align 16, !tbaa !2
  %2948 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 60
  %2949 = bitcast float* %2948 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2949, align 16, !tbaa !2
  %2950 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 64
  %2951 = bitcast float* %2950 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2951, align 16, !tbaa !2
  %2952 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 68
  %2953 = bitcast float* %2952 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2953, align 16, !tbaa !2
  %2954 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 72
  %2955 = bitcast float* %2954 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2955, align 16, !tbaa !2
  %2956 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 76
  %2957 = bitcast float* %2956 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2957, align 16, !tbaa !2
  %2958 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 80
  %2959 = bitcast float* %2958 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2959, align 16, !tbaa !2
  %2960 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 84
  %2961 = bitcast float* %2960 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2961, align 16, !tbaa !2
  %2962 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 88
  %2963 = bitcast float* %2962 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2963, align 16, !tbaa !2
  %2964 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 92
  %2965 = bitcast float* %2964 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2965, align 16, !tbaa !2
  %2966 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 96
  %2967 = bitcast float* %2966 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2967, align 16, !tbaa !2
  %2968 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 100
  %2969 = bitcast float* %2968 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2969, align 16, !tbaa !2
  %2970 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 104
  %2971 = bitcast float* %2970 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2971, align 16, !tbaa !2
  %2972 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 108
  %2973 = bitcast float* %2972 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2973, align 16, !tbaa !2
  %2974 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 112
  %2975 = bitcast float* %2974 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2975, align 16, !tbaa !2
  %2976 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 116
  %2977 = bitcast float* %2976 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2977, align 16, !tbaa !2
  %2978 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 120
  %2979 = bitcast float* %2978 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2979, align 16, !tbaa !2
  %2980 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 124
  %2981 = bitcast float* %2980 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2981, align 16, !tbaa !2
  %2982 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 128
  %2983 = bitcast float* %2982 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2983, align 16, !tbaa !2
  %2984 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 132
  %2985 = bitcast float* %2984 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2985, align 16, !tbaa !2
  %2986 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 136
  %2987 = bitcast float* %2986 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2987, align 16, !tbaa !2
  %2988 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 140
  %2989 = bitcast float* %2988 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2989, align 16, !tbaa !2
  %2990 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 144
  %2991 = bitcast float* %2990 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2991, align 16, !tbaa !2
  %2992 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 148
  %2993 = bitcast float* %2992 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2993, align 16, !tbaa !2
  %2994 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 152
  %2995 = bitcast float* %2994 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2995, align 16, !tbaa !2
  %2996 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 156
  %2997 = bitcast float* %2996 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2997, align 16, !tbaa !2
  %2998 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 160
  %2999 = bitcast float* %2998 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2999, align 16, !tbaa !2
  %3000 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 164
  %3001 = bitcast float* %3000 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3001, align 16, !tbaa !2
  %3002 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 168
  %3003 = bitcast float* %3002 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3003, align 16, !tbaa !2
  %3004 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 172
  %3005 = bitcast float* %3004 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3005, align 16, !tbaa !2
  %3006 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 176
  %3007 = bitcast float* %3006 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3007, align 16, !tbaa !2
  %3008 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 180
  %3009 = bitcast float* %3008 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3009, align 16, !tbaa !2
  %3010 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 184
  %3011 = bitcast float* %3010 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3011, align 16, !tbaa !2
  %3012 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 188
  %3013 = bitcast float* %3012 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3013, align 16, !tbaa !2
  %3014 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 192
  %3015 = bitcast float* %3014 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3015, align 16, !tbaa !2
  %3016 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 196
  %3017 = bitcast float* %3016 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3017, align 16, !tbaa !2
  %3018 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 200
  %3019 = bitcast float* %3018 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3019, align 16, !tbaa !2
  %3020 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 204
  %3021 = bitcast float* %3020 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3021, align 16, !tbaa !2
  %3022 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 208
  %3023 = bitcast float* %3022 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3023, align 16, !tbaa !2
  %3024 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 212
  %3025 = bitcast float* %3024 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3025, align 16, !tbaa !2
  %3026 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 216
  %3027 = bitcast float* %3026 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3027, align 16, !tbaa !2
  %3028 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 220
  %3029 = bitcast float* %3028 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3029, align 16, !tbaa !2
  %3030 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 224
  %3031 = bitcast float* %3030 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3031, align 16, !tbaa !2
  %3032 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 228
  %3033 = bitcast float* %3032 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3033, align 16, !tbaa !2
  %3034 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 232
  %3035 = bitcast float* %3034 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3035, align 16, !tbaa !2
  %3036 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 236
  %3037 = bitcast float* %3036 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3037, align 16, !tbaa !2
  %3038 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 240
  %3039 = bitcast float* %3038 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3039, align 16, !tbaa !2
  %3040 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 244
  %3041 = bitcast float* %3040 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3041, align 16, !tbaa !2
  %3042 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 248
  %3043 = bitcast float* %3042 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3043, align 16, !tbaa !2
  %3044 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2917, i64 252
  %3045 = bitcast float* %3044 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3045, align 16, !tbaa !2
  %3046 = add nuw nsw i64 %2917, 1
  %3047 = icmp eq i64 %3046, 256
  br i1 %3047, label %3048, label %2916

3048:                                             ; preds = %2916, %3048
  %3049 = phi i64 [ %3064, %3048 ], [ 0, %2916 ]
  %3050 = phi <4 x i64> [ %3065, %3048 ], [ <i64 0, i64 1, i64 2, i64 3>, %2916 ]
  %3051 = trunc <4 x i64> %3050 to <4 x i32>
  %3052 = add <4 x i32> %3051, <i32 1, i32 1, i32 1, i32 1>
  %3053 = sitofp <4 x i32> %3052 to <4 x float>
  %3054 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3053
  %3055 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3049
  %3056 = bitcast float* %3055 to <4 x float>*
  store <4 x float> %3054, <4 x float>* %3056, align 16, !tbaa !2
  %3057 = or i64 %3049, 4
  %3058 = trunc <4 x i64> %3050 to <4 x i32>
  %3059 = add <4 x i32> %3058, <i32 5, i32 5, i32 5, i32 5>
  %3060 = sitofp <4 x i32> %3059 to <4 x float>
  %3061 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3060
  %3062 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3057
  %3063 = bitcast float* %3062 to <4 x float>*
  store <4 x float> %3061, <4 x float>* %3063, align 16, !tbaa !2
  %3064 = add nuw nsw i64 %3049, 8
  %3065 = add <4 x i64> %3050, <i64 8, i64 8, i64 8, i64 8>
  %3066 = icmp eq i64 %3064, 32000
  br i1 %3066, label %3067, label %3048, !llvm.loop !56

3067:                                             ; preds = %3048, %3067
  %3068 = phi i64 [ %3083, %3067 ], [ 0, %3048 ]
  %3069 = phi <4 x i64> [ %3084, %3067 ], [ <i64 0, i64 1, i64 2, i64 3>, %3048 ]
  %3070 = trunc <4 x i64> %3069 to <4 x i32>
  %3071 = add <4 x i32> %3070, <i32 1, i32 1, i32 1, i32 1>
  %3072 = sitofp <4 x i32> %3071 to <4 x float>
  %3073 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3072
  %3074 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3068
  %3075 = bitcast float* %3074 to <4 x float>*
  store <4 x float> %3073, <4 x float>* %3075, align 16, !tbaa !2
  %3076 = or i64 %3068, 4
  %3077 = trunc <4 x i64> %3069 to <4 x i32>
  %3078 = add <4 x i32> %3077, <i32 5, i32 5, i32 5, i32 5>
  %3079 = sitofp <4 x i32> %3078 to <4 x float>
  %3080 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3079
  %3081 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3076
  %3082 = bitcast float* %3081 to <4 x float>*
  store <4 x float> %3080, <4 x float>* %3082, align 16, !tbaa !2
  %3083 = add nuw nsw i64 %3068, 8
  %3084 = add <4 x i64> %3069, <i64 8, i64 8, i64 8, i64 8>
  %3085 = icmp eq i64 %3083, 32000
  br i1 %3085, label %15603, label %3067, !llvm.loop !57

3086:                                             ; preds = %2913
  %3087 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #15
  %3088 = icmp eq i32 %3087, 0
  br i1 %3088, label %3089, label %3272

3089:                                             ; preds = %3086, %3089
  %3090 = phi i64 [ %3130, %3089 ], [ 0, %3086 ]
  %3091 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %3090
  %3092 = bitcast float* %3091 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3092, align 16, !tbaa !2
  %3093 = getelementptr inbounds float, float* %3091, i64 4
  %3094 = bitcast float* %3093 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3094, align 16, !tbaa !2
  %3095 = or i64 %3090, 8
  %3096 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %3095
  %3097 = bitcast float* %3096 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3097, align 16, !tbaa !2
  %3098 = getelementptr inbounds float, float* %3096, i64 4
  %3099 = bitcast float* %3098 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3099, align 16, !tbaa !2
  %3100 = or i64 %3090, 16
  %3101 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %3100
  %3102 = bitcast float* %3101 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3102, align 16, !tbaa !2
  %3103 = getelementptr inbounds float, float* %3101, i64 4
  %3104 = bitcast float* %3103 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3104, align 16, !tbaa !2
  %3105 = or i64 %3090, 24
  %3106 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %3105
  %3107 = bitcast float* %3106 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3107, align 16, !tbaa !2
  %3108 = getelementptr inbounds float, float* %3106, i64 4
  %3109 = bitcast float* %3108 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3109, align 16, !tbaa !2
  %3110 = or i64 %3090, 32
  %3111 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %3110
  %3112 = bitcast float* %3111 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3112, align 16, !tbaa !2
  %3113 = getelementptr inbounds float, float* %3111, i64 4
  %3114 = bitcast float* %3113 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3114, align 16, !tbaa !2
  %3115 = or i64 %3090, 40
  %3116 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %3115
  %3117 = bitcast float* %3116 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3117, align 16, !tbaa !2
  %3118 = getelementptr inbounds float, float* %3116, i64 4
  %3119 = bitcast float* %3118 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3119, align 16, !tbaa !2
  %3120 = or i64 %3090, 48
  %3121 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %3120
  %3122 = bitcast float* %3121 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3122, align 16, !tbaa !2
  %3123 = getelementptr inbounds float, float* %3121, i64 4
  %3124 = bitcast float* %3123 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3124, align 16, !tbaa !2
  %3125 = or i64 %3090, 56
  %3126 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %3125
  %3127 = bitcast float* %3126 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3127, align 16, !tbaa !2
  %3128 = getelementptr inbounds float, float* %3126, i64 4
  %3129 = bitcast float* %3128 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3129, align 16, !tbaa !2
  %3130 = add nuw nsw i64 %3090, 64
  %3131 = icmp eq i64 %3130, 32000
  br i1 %3131, label %3132, label %3089, !llvm.loop !58

3132:                                             ; preds = %3089, %3132
  %3133 = phi i64 [ %3134, %3132 ], [ 0, %3089 ]
  %3134 = add nuw nsw i64 %3133, 1
  %3135 = trunc i64 %3134 to i32
  %3136 = mul nsw i32 %3135, %3135
  %3137 = sitofp i32 %3136 to float
  %3138 = fdiv float 1.000000e+00, %3137
  %3139 = insertelement <4 x float> undef, float %3138, i32 0
  %3140 = shufflevector <4 x float> %3139, <4 x float> undef, <4 x i32> zeroinitializer
  %3141 = insertelement <4 x float> undef, float %3138, i32 0
  %3142 = shufflevector <4 x float> %3141, <4 x float> undef, <4 x i32> zeroinitializer
  %3143 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 0
  %3144 = bitcast float* %3143 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3144, align 16, !tbaa !2
  %3145 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 4
  %3146 = bitcast float* %3145 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3146, align 16, !tbaa !2
  %3147 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 8
  %3148 = bitcast float* %3147 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3148, align 16, !tbaa !2
  %3149 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 12
  %3150 = bitcast float* %3149 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3150, align 16, !tbaa !2
  %3151 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 16
  %3152 = bitcast float* %3151 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3152, align 16, !tbaa !2
  %3153 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 20
  %3154 = bitcast float* %3153 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3154, align 16, !tbaa !2
  %3155 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 24
  %3156 = bitcast float* %3155 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3156, align 16, !tbaa !2
  %3157 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 28
  %3158 = bitcast float* %3157 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3158, align 16, !tbaa !2
  %3159 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 32
  %3160 = bitcast float* %3159 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3160, align 16, !tbaa !2
  %3161 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 36
  %3162 = bitcast float* %3161 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3162, align 16, !tbaa !2
  %3163 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 40
  %3164 = bitcast float* %3163 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3164, align 16, !tbaa !2
  %3165 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 44
  %3166 = bitcast float* %3165 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3166, align 16, !tbaa !2
  %3167 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 48
  %3168 = bitcast float* %3167 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3168, align 16, !tbaa !2
  %3169 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 52
  %3170 = bitcast float* %3169 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3170, align 16, !tbaa !2
  %3171 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 56
  %3172 = bitcast float* %3171 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3172, align 16, !tbaa !2
  %3173 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 60
  %3174 = bitcast float* %3173 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3174, align 16, !tbaa !2
  %3175 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 64
  %3176 = bitcast float* %3175 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3176, align 16, !tbaa !2
  %3177 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 68
  %3178 = bitcast float* %3177 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3178, align 16, !tbaa !2
  %3179 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 72
  %3180 = bitcast float* %3179 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3180, align 16, !tbaa !2
  %3181 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 76
  %3182 = bitcast float* %3181 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3182, align 16, !tbaa !2
  %3183 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 80
  %3184 = bitcast float* %3183 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3184, align 16, !tbaa !2
  %3185 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 84
  %3186 = bitcast float* %3185 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3186, align 16, !tbaa !2
  %3187 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 88
  %3188 = bitcast float* %3187 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3188, align 16, !tbaa !2
  %3189 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 92
  %3190 = bitcast float* %3189 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3190, align 16, !tbaa !2
  %3191 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 96
  %3192 = bitcast float* %3191 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3192, align 16, !tbaa !2
  %3193 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 100
  %3194 = bitcast float* %3193 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3194, align 16, !tbaa !2
  %3195 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 104
  %3196 = bitcast float* %3195 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3196, align 16, !tbaa !2
  %3197 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 108
  %3198 = bitcast float* %3197 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3198, align 16, !tbaa !2
  %3199 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 112
  %3200 = bitcast float* %3199 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3200, align 16, !tbaa !2
  %3201 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 116
  %3202 = bitcast float* %3201 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3202, align 16, !tbaa !2
  %3203 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 120
  %3204 = bitcast float* %3203 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3204, align 16, !tbaa !2
  %3205 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 124
  %3206 = bitcast float* %3205 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3206, align 16, !tbaa !2
  %3207 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 128
  %3208 = bitcast float* %3207 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3208, align 16, !tbaa !2
  %3209 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 132
  %3210 = bitcast float* %3209 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3210, align 16, !tbaa !2
  %3211 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 136
  %3212 = bitcast float* %3211 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3212, align 16, !tbaa !2
  %3213 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 140
  %3214 = bitcast float* %3213 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3214, align 16, !tbaa !2
  %3215 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 144
  %3216 = bitcast float* %3215 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3216, align 16, !tbaa !2
  %3217 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 148
  %3218 = bitcast float* %3217 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3218, align 16, !tbaa !2
  %3219 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 152
  %3220 = bitcast float* %3219 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3220, align 16, !tbaa !2
  %3221 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 156
  %3222 = bitcast float* %3221 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3222, align 16, !tbaa !2
  %3223 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 160
  %3224 = bitcast float* %3223 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3224, align 16, !tbaa !2
  %3225 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 164
  %3226 = bitcast float* %3225 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3226, align 16, !tbaa !2
  %3227 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 168
  %3228 = bitcast float* %3227 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3228, align 16, !tbaa !2
  %3229 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 172
  %3230 = bitcast float* %3229 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3230, align 16, !tbaa !2
  %3231 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 176
  %3232 = bitcast float* %3231 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3232, align 16, !tbaa !2
  %3233 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 180
  %3234 = bitcast float* %3233 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3234, align 16, !tbaa !2
  %3235 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 184
  %3236 = bitcast float* %3235 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3236, align 16, !tbaa !2
  %3237 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 188
  %3238 = bitcast float* %3237 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3238, align 16, !tbaa !2
  %3239 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 192
  %3240 = bitcast float* %3239 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3240, align 16, !tbaa !2
  %3241 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 196
  %3242 = bitcast float* %3241 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3242, align 16, !tbaa !2
  %3243 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 200
  %3244 = bitcast float* %3243 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3244, align 16, !tbaa !2
  %3245 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 204
  %3246 = bitcast float* %3245 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3246, align 16, !tbaa !2
  %3247 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 208
  %3248 = bitcast float* %3247 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3248, align 16, !tbaa !2
  %3249 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 212
  %3250 = bitcast float* %3249 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3250, align 16, !tbaa !2
  %3251 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 216
  %3252 = bitcast float* %3251 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3252, align 16, !tbaa !2
  %3253 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 220
  %3254 = bitcast float* %3253 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3254, align 16, !tbaa !2
  %3255 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 224
  %3256 = bitcast float* %3255 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3256, align 16, !tbaa !2
  %3257 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 228
  %3258 = bitcast float* %3257 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3258, align 16, !tbaa !2
  %3259 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 232
  %3260 = bitcast float* %3259 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3260, align 16, !tbaa !2
  %3261 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 236
  %3262 = bitcast float* %3261 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3262, align 16, !tbaa !2
  %3263 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 240
  %3264 = bitcast float* %3263 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3264, align 16, !tbaa !2
  %3265 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 244
  %3266 = bitcast float* %3265 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3266, align 16, !tbaa !2
  %3267 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 248
  %3268 = bitcast float* %3267 to <4 x float>*
  store <4 x float> %3140, <4 x float>* %3268, align 16, !tbaa !2
  %3269 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3133, i64 252
  %3270 = bitcast float* %3269 to <4 x float>*
  store <4 x float> %3142, <4 x float>* %3270, align 16, !tbaa !2
  %3271 = icmp eq i64 %3134, 256
  br i1 %3271, label %15603, label %3132

3272:                                             ; preds = %3086
  %3273 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #15
  %3274 = icmp eq i32 %3273, 0
  br i1 %3274, label %3275, label %3339

3275:                                             ; preds = %3272, %3275
  %3276 = phi i64 [ %3316, %3275 ], [ 0, %3272 ]
  %3277 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3276
  %3278 = bitcast float* %3277 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3278, align 16, !tbaa !2
  %3279 = getelementptr inbounds float, float* %3277, i64 4
  %3280 = bitcast float* %3279 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3280, align 16, !tbaa !2
  %3281 = or i64 %3276, 8
  %3282 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3281
  %3283 = bitcast float* %3282 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3283, align 16, !tbaa !2
  %3284 = getelementptr inbounds float, float* %3282, i64 4
  %3285 = bitcast float* %3284 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3285, align 16, !tbaa !2
  %3286 = or i64 %3276, 16
  %3287 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3286
  %3288 = bitcast float* %3287 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3288, align 16, !tbaa !2
  %3289 = getelementptr inbounds float, float* %3287, i64 4
  %3290 = bitcast float* %3289 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3290, align 16, !tbaa !2
  %3291 = or i64 %3276, 24
  %3292 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3291
  %3293 = bitcast float* %3292 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3293, align 16, !tbaa !2
  %3294 = getelementptr inbounds float, float* %3292, i64 4
  %3295 = bitcast float* %3294 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3295, align 16, !tbaa !2
  %3296 = or i64 %3276, 32
  %3297 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3296
  %3298 = bitcast float* %3297 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3298, align 16, !tbaa !2
  %3299 = getelementptr inbounds float, float* %3297, i64 4
  %3300 = bitcast float* %3299 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3300, align 16, !tbaa !2
  %3301 = or i64 %3276, 40
  %3302 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3301
  %3303 = bitcast float* %3302 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3303, align 16, !tbaa !2
  %3304 = getelementptr inbounds float, float* %3302, i64 4
  %3305 = bitcast float* %3304 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3305, align 16, !tbaa !2
  %3306 = or i64 %3276, 48
  %3307 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3306
  %3308 = bitcast float* %3307 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3308, align 16, !tbaa !2
  %3309 = getelementptr inbounds float, float* %3307, i64 4
  %3310 = bitcast float* %3309 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3310, align 16, !tbaa !2
  %3311 = or i64 %3276, 56
  %3312 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3311
  %3313 = bitcast float* %3312 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3313, align 16, !tbaa !2
  %3314 = getelementptr inbounds float, float* %3312, i64 4
  %3315 = bitcast float* %3314 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3315, align 16, !tbaa !2
  %3316 = add nuw nsw i64 %3276, 64
  %3317 = icmp eq i64 %3316, 32000
  br i1 %3317, label %3318, label %3275, !llvm.loop !59

3318:                                             ; preds = %3275, %3318
  %3319 = phi i64 [ %3336, %3318 ], [ 0, %3275 ]
  %3320 = phi <4 x i64> [ %3337, %3318 ], [ <i64 0, i64 1, i64 2, i64 3>, %3275 ]
  %3321 = add nuw nsw <4 x i64> %3320, <i64 1, i64 1, i64 1, i64 1>
  %3322 = mul nuw nsw <4 x i64> %3321, %3321
  %3323 = trunc <4 x i64> %3322 to <4 x i32>
  %3324 = sitofp <4 x i32> %3323 to <4 x float>
  %3325 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3324
  %3326 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3319
  %3327 = bitcast float* %3326 to <4 x float>*
  store <4 x float> %3325, <4 x float>* %3327, align 16, !tbaa !2
  %3328 = or i64 %3319, 4
  %3329 = add <4 x i64> %3320, <i64 5, i64 5, i64 5, i64 5>
  %3330 = mul nuw nsw <4 x i64> %3329, %3329
  %3331 = trunc <4 x i64> %3330 to <4 x i32>
  %3332 = sitofp <4 x i32> %3331 to <4 x float>
  %3333 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3332
  %3334 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3328
  %3335 = bitcast float* %3334 to <4 x float>*
  store <4 x float> %3333, <4 x float>* %3335, align 16, !tbaa !2
  %3336 = add nuw nsw i64 %3319, 8
  %3337 = add <4 x i64> %3320, <i64 8, i64 8, i64 8, i64 8>
  %3338 = icmp eq i64 %3336, 32000
  br i1 %3338, label %15603, label %3318, !llvm.loop !60

3339:                                             ; preds = %3272
  %3340 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #15
  %3341 = icmp eq i32 %3340, 0
  br i1 %3341, label %3342, label %3443

3342:                                             ; preds = %3339, %3342
  %3343 = phi i64 [ %3383, %3342 ], [ 0, %3339 ]
  %3344 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3343
  %3345 = bitcast float* %3344 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3345, align 16, !tbaa !2
  %3346 = getelementptr inbounds float, float* %3344, i64 4
  %3347 = bitcast float* %3346 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3347, align 16, !tbaa !2
  %3348 = or i64 %3343, 8
  %3349 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3348
  %3350 = bitcast float* %3349 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3350, align 16, !tbaa !2
  %3351 = getelementptr inbounds float, float* %3349, i64 4
  %3352 = bitcast float* %3351 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3352, align 16, !tbaa !2
  %3353 = or i64 %3343, 16
  %3354 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3353
  %3355 = bitcast float* %3354 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3355, align 16, !tbaa !2
  %3356 = getelementptr inbounds float, float* %3354, i64 4
  %3357 = bitcast float* %3356 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3357, align 16, !tbaa !2
  %3358 = or i64 %3343, 24
  %3359 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3358
  %3360 = bitcast float* %3359 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3360, align 16, !tbaa !2
  %3361 = getelementptr inbounds float, float* %3359, i64 4
  %3362 = bitcast float* %3361 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3362, align 16, !tbaa !2
  %3363 = or i64 %3343, 32
  %3364 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3363
  %3365 = bitcast float* %3364 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3365, align 16, !tbaa !2
  %3366 = getelementptr inbounds float, float* %3364, i64 4
  %3367 = bitcast float* %3366 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3367, align 16, !tbaa !2
  %3368 = or i64 %3343, 40
  %3369 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3368
  %3370 = bitcast float* %3369 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3370, align 16, !tbaa !2
  %3371 = getelementptr inbounds float, float* %3369, i64 4
  %3372 = bitcast float* %3371 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3372, align 16, !tbaa !2
  %3373 = or i64 %3343, 48
  %3374 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3373
  %3375 = bitcast float* %3374 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3375, align 16, !tbaa !2
  %3376 = getelementptr inbounds float, float* %3374, i64 4
  %3377 = bitcast float* %3376 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3377, align 16, !tbaa !2
  %3378 = or i64 %3343, 56
  %3379 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3378
  %3380 = bitcast float* %3379 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3380, align 16, !tbaa !2
  %3381 = getelementptr inbounds float, float* %3379, i64 4
  %3382 = bitcast float* %3381 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3382, align 16, !tbaa !2
  %3383 = add nuw nsw i64 %3343, 64
  %3384 = icmp eq i64 %3383, 32000
  br i1 %3384, label %3385, label %3342, !llvm.loop !61

3385:                                             ; preds = %3342
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %3386

3386:                                             ; preds = %3386, %3385
  %3387 = phi i64 [ 0, %3385 ], [ %3402, %3386 ]
  %3388 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3385 ], [ %3403, %3386 ]
  %3389 = trunc <4 x i64> %3388 to <4 x i32>
  %3390 = add <4 x i32> %3389, <i32 1, i32 1, i32 1, i32 1>
  %3391 = sitofp <4 x i32> %3390 to <4 x float>
  %3392 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3391
  %3393 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3387
  %3394 = bitcast float* %3393 to <4 x float>*
  store <4 x float> %3392, <4 x float>* %3394, align 16, !tbaa !2
  %3395 = or i64 %3387, 4
  %3396 = trunc <4 x i64> %3388 to <4 x i32>
  %3397 = add <4 x i32> %3396, <i32 5, i32 5, i32 5, i32 5>
  %3398 = sitofp <4 x i32> %3397 to <4 x float>
  %3399 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3398
  %3400 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3395
  %3401 = bitcast float* %3400 to <4 x float>*
  store <4 x float> %3399, <4 x float>* %3401, align 16, !tbaa !2
  %3402 = add nuw nsw i64 %3387, 8
  %3403 = add <4 x i64> %3388, <i64 8, i64 8, i64 8, i64 8>
  %3404 = icmp eq i64 %3402, 32000
  br i1 %3404, label %3405, label %3386, !llvm.loop !62

3405:                                             ; preds = %3386, %3405
  %3406 = phi i64 [ %3421, %3405 ], [ 0, %3386 ]
  %3407 = phi <4 x i64> [ %3422, %3405 ], [ <i64 0, i64 1, i64 2, i64 3>, %3386 ]
  %3408 = trunc <4 x i64> %3407 to <4 x i32>
  %3409 = add <4 x i32> %3408, <i32 1, i32 1, i32 1, i32 1>
  %3410 = sitofp <4 x i32> %3409 to <4 x float>
  %3411 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3410
  %3412 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3406
  %3413 = bitcast float* %3412 to <4 x float>*
  store <4 x float> %3411, <4 x float>* %3413, align 16, !tbaa !2
  %3414 = or i64 %3406, 4
  %3415 = trunc <4 x i64> %3407 to <4 x i32>
  %3416 = add <4 x i32> %3415, <i32 5, i32 5, i32 5, i32 5>
  %3417 = sitofp <4 x i32> %3416 to <4 x float>
  %3418 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3417
  %3419 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3414
  %3420 = bitcast float* %3419 to <4 x float>*
  store <4 x float> %3418, <4 x float>* %3420, align 16, !tbaa !2
  %3421 = add nuw nsw i64 %3406, 8
  %3422 = add <4 x i64> %3407, <i64 8, i64 8, i64 8, i64 8>
  %3423 = icmp eq i64 %3421, 32000
  br i1 %3423, label %3424, label %3405, !llvm.loop !63

3424:                                             ; preds = %3405, %3424
  %3425 = phi i64 [ %3440, %3424 ], [ 0, %3405 ]
  %3426 = phi <4 x i64> [ %3441, %3424 ], [ <i64 0, i64 1, i64 2, i64 3>, %3405 ]
  %3427 = trunc <4 x i64> %3426 to <4 x i32>
  %3428 = add <4 x i32> %3427, <i32 1, i32 1, i32 1, i32 1>
  %3429 = sitofp <4 x i32> %3428 to <4 x float>
  %3430 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3429
  %3431 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3425
  %3432 = bitcast float* %3431 to <4 x float>*
  store <4 x float> %3430, <4 x float>* %3432, align 16, !tbaa !2
  %3433 = or i64 %3425, 4
  %3434 = trunc <4 x i64> %3426 to <4 x i32>
  %3435 = add <4 x i32> %3434, <i32 5, i32 5, i32 5, i32 5>
  %3436 = sitofp <4 x i32> %3435 to <4 x float>
  %3437 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3436
  %3438 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3433
  %3439 = bitcast float* %3438 to <4 x float>*
  store <4 x float> %3437, <4 x float>* %3439, align 16, !tbaa !2
  %3440 = add nuw nsw i64 %3425, 8
  %3441 = add <4 x i64> %3426, <i64 8, i64 8, i64 8, i64 8>
  %3442 = icmp eq i64 %3440, 32000
  br i1 %3442, label %15603, label %3424, !llvm.loop !64

3443:                                             ; preds = %3339
  %3444 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0)) #15
  %3445 = icmp eq i32 %3444, 0
  br i1 %3445, label %3446, label %3608

3446:                                             ; preds = %3443, %3446
  %3447 = phi i64 [ %3487, %3446 ], [ 0, %3443 ]
  %3448 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3447
  %3449 = bitcast float* %3448 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3449, align 16, !tbaa !2
  %3450 = getelementptr inbounds float, float* %3448, i64 4
  %3451 = bitcast float* %3450 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3451, align 16, !tbaa !2
  %3452 = or i64 %3447, 8
  %3453 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3452
  %3454 = bitcast float* %3453 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3454, align 16, !tbaa !2
  %3455 = getelementptr inbounds float, float* %3453, i64 4
  %3456 = bitcast float* %3455 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3456, align 16, !tbaa !2
  %3457 = or i64 %3447, 16
  %3458 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3457
  %3459 = bitcast float* %3458 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3459, align 16, !tbaa !2
  %3460 = getelementptr inbounds float, float* %3458, i64 4
  %3461 = bitcast float* %3460 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3461, align 16, !tbaa !2
  %3462 = or i64 %3447, 24
  %3463 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3462
  %3464 = bitcast float* %3463 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3464, align 16, !tbaa !2
  %3465 = getelementptr inbounds float, float* %3463, i64 4
  %3466 = bitcast float* %3465 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3466, align 16, !tbaa !2
  %3467 = or i64 %3447, 32
  %3468 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3467
  %3469 = bitcast float* %3468 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3469, align 16, !tbaa !2
  %3470 = getelementptr inbounds float, float* %3468, i64 4
  %3471 = bitcast float* %3470 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3471, align 16, !tbaa !2
  %3472 = or i64 %3447, 40
  %3473 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3472
  %3474 = bitcast float* %3473 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3474, align 16, !tbaa !2
  %3475 = getelementptr inbounds float, float* %3473, i64 4
  %3476 = bitcast float* %3475 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3476, align 16, !tbaa !2
  %3477 = or i64 %3447, 48
  %3478 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3477
  %3479 = bitcast float* %3478 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3479, align 16, !tbaa !2
  %3480 = getelementptr inbounds float, float* %3478, i64 4
  %3481 = bitcast float* %3480 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3481, align 16, !tbaa !2
  %3482 = or i64 %3447, 56
  %3483 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3482
  %3484 = bitcast float* %3483 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3484, align 16, !tbaa !2
  %3485 = getelementptr inbounds float, float* %3483, i64 4
  %3486 = bitcast float* %3485 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3486, align 16, !tbaa !2
  %3487 = add nuw nsw i64 %3447, 64
  %3488 = icmp eq i64 %3487, 32000
  br i1 %3488, label %3489, label %3446, !llvm.loop !65

3489:                                             ; preds = %3446, %3489
  %3490 = phi i64 [ %3506, %3489 ], [ 0, %3446 ]
  %3491 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3490
  store float 1.000000e+00, float* %3491, align 16, !tbaa !2
  %3492 = or i64 %3490, 2
  %3493 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3492
  store float 1.000000e+00, float* %3493, align 8, !tbaa !2
  %3494 = or i64 %3490, 4
  %3495 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3494
  store float 1.000000e+00, float* %3495, align 16, !tbaa !2
  %3496 = or i64 %3490, 6
  %3497 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3496
  store float 1.000000e+00, float* %3497, align 8, !tbaa !2
  %3498 = or i64 %3490, 8
  %3499 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3498
  store float 1.000000e+00, float* %3499, align 16, !tbaa !2
  %3500 = or i64 %3490, 10
  %3501 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3500
  store float 1.000000e+00, float* %3501, align 8, !tbaa !2
  %3502 = or i64 %3490, 12
  %3503 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3502
  store float 1.000000e+00, float* %3503, align 16, !tbaa !2
  %3504 = or i64 %3490, 14
  %3505 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3504
  store float 1.000000e+00, float* %3505, align 8, !tbaa !2
  %3506 = add nuw nsw i64 %3490, 16
  %3507 = icmp ult i64 %3490, 31984
  br i1 %3507, label %3489, label %3508

3508:                                             ; preds = %3489, %3508
  %3509 = phi i64 [ %3525, %3508 ], [ 0, %3489 ]
  %3510 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %3509
  store float -1.000000e+00, float* %3510, align 4, !tbaa !2
  %3511 = or i64 %3509, 2
  %3512 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %3511
  store float -1.000000e+00, float* %3512, align 4, !tbaa !2
  %3513 = or i64 %3509, 4
  %3514 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %3513
  store float -1.000000e+00, float* %3514, align 4, !tbaa !2
  %3515 = or i64 %3509, 6
  %3516 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %3515
  store float -1.000000e+00, float* %3516, align 4, !tbaa !2
  %3517 = or i64 %3509, 8
  %3518 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %3517
  store float -1.000000e+00, float* %3518, align 4, !tbaa !2
  %3519 = or i64 %3509, 10
  %3520 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %3519
  store float -1.000000e+00, float* %3520, align 4, !tbaa !2
  %3521 = or i64 %3509, 12
  %3522 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %3521
  store float -1.000000e+00, float* %3522, align 4, !tbaa !2
  %3523 = or i64 %3509, 14
  %3524 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %3523
  store float -1.000000e+00, float* %3524, align 4, !tbaa !2
  %3525 = add nuw nsw i64 %3509, 16
  %3526 = icmp ult i64 %3509, 31984
  br i1 %3526, label %3508, label %3527

3527:                                             ; preds = %3508, %3527
  %3528 = phi i64 [ %3568, %3527 ], [ 0, %3508 ]
  %3529 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3528
  %3530 = bitcast float* %3529 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3530, align 16, !tbaa !2
  %3531 = getelementptr inbounds float, float* %3529, i64 4
  %3532 = bitcast float* %3531 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3532, align 16, !tbaa !2
  %3533 = or i64 %3528, 8
  %3534 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3533
  %3535 = bitcast float* %3534 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3535, align 16, !tbaa !2
  %3536 = getelementptr inbounds float, float* %3534, i64 4
  %3537 = bitcast float* %3536 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3537, align 16, !tbaa !2
  %3538 = or i64 %3528, 16
  %3539 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3538
  %3540 = bitcast float* %3539 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3540, align 16, !tbaa !2
  %3541 = getelementptr inbounds float, float* %3539, i64 4
  %3542 = bitcast float* %3541 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3542, align 16, !tbaa !2
  %3543 = or i64 %3528, 24
  %3544 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3543
  %3545 = bitcast float* %3544 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3545, align 16, !tbaa !2
  %3546 = getelementptr inbounds float, float* %3544, i64 4
  %3547 = bitcast float* %3546 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3547, align 16, !tbaa !2
  %3548 = or i64 %3528, 32
  %3549 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3548
  %3550 = bitcast float* %3549 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3550, align 16, !tbaa !2
  %3551 = getelementptr inbounds float, float* %3549, i64 4
  %3552 = bitcast float* %3551 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3552, align 16, !tbaa !2
  %3553 = or i64 %3528, 40
  %3554 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3553
  %3555 = bitcast float* %3554 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3555, align 16, !tbaa !2
  %3556 = getelementptr inbounds float, float* %3554, i64 4
  %3557 = bitcast float* %3556 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3557, align 16, !tbaa !2
  %3558 = or i64 %3528, 48
  %3559 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3558
  %3560 = bitcast float* %3559 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3560, align 16, !tbaa !2
  %3561 = getelementptr inbounds float, float* %3559, i64 4
  %3562 = bitcast float* %3561 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3562, align 16, !tbaa !2
  %3563 = or i64 %3528, 56
  %3564 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3563
  %3565 = bitcast float* %3564 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3565, align 16, !tbaa !2
  %3566 = getelementptr inbounds float, float* %3564, i64 4
  %3567 = bitcast float* %3566 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3567, align 16, !tbaa !2
  %3568 = add nuw nsw i64 %3528, 64
  %3569 = icmp eq i64 %3568, 32000
  br i1 %3569, label %3570, label %3527, !llvm.loop !66

3570:                                             ; preds = %3527, %3570
  %3571 = phi i64 [ %3586, %3570 ], [ 0, %3527 ]
  %3572 = phi <4 x i64> [ %3587, %3570 ], [ <i64 0, i64 1, i64 2, i64 3>, %3527 ]
  %3573 = trunc <4 x i64> %3572 to <4 x i32>
  %3574 = add <4 x i32> %3573, <i32 1, i32 1, i32 1, i32 1>
  %3575 = sitofp <4 x i32> %3574 to <4 x float>
  %3576 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3575
  %3577 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3571
  %3578 = bitcast float* %3577 to <4 x float>*
  store <4 x float> %3576, <4 x float>* %3578, align 16, !tbaa !2
  %3579 = or i64 %3571, 4
  %3580 = trunc <4 x i64> %3572 to <4 x i32>
  %3581 = add <4 x i32> %3580, <i32 5, i32 5, i32 5, i32 5>
  %3582 = sitofp <4 x i32> %3581 to <4 x float>
  %3583 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3582
  %3584 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3579
  %3585 = bitcast float* %3584 to <4 x float>*
  store <4 x float> %3583, <4 x float>* %3585, align 16, !tbaa !2
  %3586 = add nuw nsw i64 %3571, 8
  %3587 = add <4 x i64> %3572, <i64 8, i64 8, i64 8, i64 8>
  %3588 = icmp eq i64 %3586, 32000
  br i1 %3588, label %3589, label %3570, !llvm.loop !67

3589:                                             ; preds = %3570, %3589
  %3590 = phi i64 [ %3605, %3589 ], [ 0, %3570 ]
  %3591 = phi <4 x i64> [ %3606, %3589 ], [ <i64 0, i64 1, i64 2, i64 3>, %3570 ]
  %3592 = trunc <4 x i64> %3591 to <4 x i32>
  %3593 = add <4 x i32> %3592, <i32 1, i32 1, i32 1, i32 1>
  %3594 = sitofp <4 x i32> %3593 to <4 x float>
  %3595 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3594
  %3596 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3590
  %3597 = bitcast float* %3596 to <4 x float>*
  store <4 x float> %3595, <4 x float>* %3597, align 16, !tbaa !2
  %3598 = or i64 %3590, 4
  %3599 = trunc <4 x i64> %3591 to <4 x i32>
  %3600 = add <4 x i32> %3599, <i32 5, i32 5, i32 5, i32 5>
  %3601 = sitofp <4 x i32> %3600 to <4 x float>
  %3602 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3601
  %3603 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3598
  %3604 = bitcast float* %3603 to <4 x float>*
  store <4 x float> %3602, <4 x float>* %3604, align 16, !tbaa !2
  %3605 = add nuw nsw i64 %3590, 8
  %3606 = add <4 x i64> %3591, <i64 8, i64 8, i64 8, i64 8>
  %3607 = icmp eq i64 %3605, 32000
  br i1 %3607, label %15603, label %3589, !llvm.loop !68

3608:                                             ; preds = %3443
  %3609 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0)) #15
  %3610 = icmp eq i32 %3609, 0
  br i1 %3610, label %3611, label %3692

3611:                                             ; preds = %3608, %3611
  %3612 = phi i64 [ %3652, %3611 ], [ 0, %3608 ]
  %3613 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3612
  %3614 = bitcast float* %3613 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3614, align 16, !tbaa !2
  %3615 = getelementptr inbounds float, float* %3613, i64 4
  %3616 = bitcast float* %3615 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3616, align 16, !tbaa !2
  %3617 = or i64 %3612, 8
  %3618 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3617
  %3619 = bitcast float* %3618 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3619, align 16, !tbaa !2
  %3620 = getelementptr inbounds float, float* %3618, i64 4
  %3621 = bitcast float* %3620 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3621, align 16, !tbaa !2
  %3622 = or i64 %3612, 16
  %3623 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3622
  %3624 = bitcast float* %3623 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3624, align 16, !tbaa !2
  %3625 = getelementptr inbounds float, float* %3623, i64 4
  %3626 = bitcast float* %3625 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3626, align 16, !tbaa !2
  %3627 = or i64 %3612, 24
  %3628 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3627
  %3629 = bitcast float* %3628 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3629, align 16, !tbaa !2
  %3630 = getelementptr inbounds float, float* %3628, i64 4
  %3631 = bitcast float* %3630 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3631, align 16, !tbaa !2
  %3632 = or i64 %3612, 32
  %3633 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3632
  %3634 = bitcast float* %3633 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3634, align 16, !tbaa !2
  %3635 = getelementptr inbounds float, float* %3633, i64 4
  %3636 = bitcast float* %3635 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3636, align 16, !tbaa !2
  %3637 = or i64 %3612, 40
  %3638 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3637
  %3639 = bitcast float* %3638 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3639, align 16, !tbaa !2
  %3640 = getelementptr inbounds float, float* %3638, i64 4
  %3641 = bitcast float* %3640 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3641, align 16, !tbaa !2
  %3642 = or i64 %3612, 48
  %3643 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3642
  %3644 = bitcast float* %3643 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3644, align 16, !tbaa !2
  %3645 = getelementptr inbounds float, float* %3643, i64 4
  %3646 = bitcast float* %3645 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3646, align 16, !tbaa !2
  %3647 = or i64 %3612, 56
  %3648 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3647
  %3649 = bitcast float* %3648 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3649, align 16, !tbaa !2
  %3650 = getelementptr inbounds float, float* %3648, i64 4
  %3651 = bitcast float* %3650 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3651, align 16, !tbaa !2
  %3652 = add nuw nsw i64 %3612, 64
  %3653 = icmp eq i64 %3652, 32000
  br i1 %3653, label %3654, label %3611, !llvm.loop !69

3654:                                             ; preds = %3611, %3654
  %3655 = phi i64 [ %3670, %3654 ], [ 0, %3611 ]
  %3656 = phi <4 x i64> [ %3671, %3654 ], [ <i64 0, i64 1, i64 2, i64 3>, %3611 ]
  %3657 = trunc <4 x i64> %3656 to <4 x i32>
  %3658 = add <4 x i32> %3657, <i32 1, i32 1, i32 1, i32 1>
  %3659 = sitofp <4 x i32> %3658 to <4 x float>
  %3660 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3659
  %3661 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3655
  %3662 = bitcast float* %3661 to <4 x float>*
  store <4 x float> %3660, <4 x float>* %3662, align 16, !tbaa !2
  %3663 = or i64 %3655, 4
  %3664 = trunc <4 x i64> %3656 to <4 x i32>
  %3665 = add <4 x i32> %3664, <i32 5, i32 5, i32 5, i32 5>
  %3666 = sitofp <4 x i32> %3665 to <4 x float>
  %3667 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3666
  %3668 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3663
  %3669 = bitcast float* %3668 to <4 x float>*
  store <4 x float> %3667, <4 x float>* %3669, align 16, !tbaa !2
  %3670 = add nuw nsw i64 %3655, 8
  %3671 = add <4 x i64> %3656, <i64 8, i64 8, i64 8, i64 8>
  %3672 = icmp eq i64 %3670, 32000
  br i1 %3672, label %3673, label %3654, !llvm.loop !70

3673:                                             ; preds = %3654, %3673
  %3674 = phi i64 [ %3689, %3673 ], [ 0, %3654 ]
  %3675 = phi <4 x i64> [ %3690, %3673 ], [ <i64 0, i64 1, i64 2, i64 3>, %3654 ]
  %3676 = trunc <4 x i64> %3675 to <4 x i32>
  %3677 = add <4 x i32> %3676, <i32 1, i32 1, i32 1, i32 1>
  %3678 = sitofp <4 x i32> %3677 to <4 x float>
  %3679 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3678
  %3680 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3674
  %3681 = bitcast float* %3680 to <4 x float>*
  store <4 x float> %3679, <4 x float>* %3681, align 16, !tbaa !2
  %3682 = or i64 %3674, 4
  %3683 = trunc <4 x i64> %3675 to <4 x i32>
  %3684 = add <4 x i32> %3683, <i32 5, i32 5, i32 5, i32 5>
  %3685 = sitofp <4 x i32> %3684 to <4 x float>
  %3686 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3685
  %3687 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3682
  %3688 = bitcast float* %3687 to <4 x float>*
  store <4 x float> %3686, <4 x float>* %3688, align 16, !tbaa !2
  %3689 = add nuw nsw i64 %3674, 8
  %3690 = add <4 x i64> %3675, <i64 8, i64 8, i64 8, i64 8>
  %3691 = icmp eq i64 %3689, 32000
  br i1 %3691, label %15603, label %3673, !llvm.loop !71

3692:                                             ; preds = %3608
  %3693 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #15
  %3694 = icmp eq i32 %3693, 0
  br i1 %3694, label %3695, label %3759

3695:                                             ; preds = %3692, %3695
  %3696 = phi i64 [ %3736, %3695 ], [ 0, %3692 ]
  %3697 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3696
  %3698 = bitcast float* %3697 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3698, align 16, !tbaa !2
  %3699 = getelementptr inbounds float, float* %3697, i64 4
  %3700 = bitcast float* %3699 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3700, align 16, !tbaa !2
  %3701 = or i64 %3696, 8
  %3702 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3701
  %3703 = bitcast float* %3702 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3703, align 16, !tbaa !2
  %3704 = getelementptr inbounds float, float* %3702, i64 4
  %3705 = bitcast float* %3704 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3705, align 16, !tbaa !2
  %3706 = or i64 %3696, 16
  %3707 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3706
  %3708 = bitcast float* %3707 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3708, align 16, !tbaa !2
  %3709 = getelementptr inbounds float, float* %3707, i64 4
  %3710 = bitcast float* %3709 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3710, align 16, !tbaa !2
  %3711 = or i64 %3696, 24
  %3712 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3711
  %3713 = bitcast float* %3712 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3713, align 16, !tbaa !2
  %3714 = getelementptr inbounds float, float* %3712, i64 4
  %3715 = bitcast float* %3714 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3715, align 16, !tbaa !2
  %3716 = or i64 %3696, 32
  %3717 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3716
  %3718 = bitcast float* %3717 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3718, align 16, !tbaa !2
  %3719 = getelementptr inbounds float, float* %3717, i64 4
  %3720 = bitcast float* %3719 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3720, align 16, !tbaa !2
  %3721 = or i64 %3696, 40
  %3722 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3721
  %3723 = bitcast float* %3722 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3723, align 16, !tbaa !2
  %3724 = getelementptr inbounds float, float* %3722, i64 4
  %3725 = bitcast float* %3724 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3725, align 16, !tbaa !2
  %3726 = or i64 %3696, 48
  %3727 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3726
  %3728 = bitcast float* %3727 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3728, align 16, !tbaa !2
  %3729 = getelementptr inbounds float, float* %3727, i64 4
  %3730 = bitcast float* %3729 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3730, align 16, !tbaa !2
  %3731 = or i64 %3696, 56
  %3732 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3731
  %3733 = bitcast float* %3732 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3733, align 16, !tbaa !2
  %3734 = getelementptr inbounds float, float* %3732, i64 4
  %3735 = bitcast float* %3734 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3735, align 16, !tbaa !2
  %3736 = add nuw nsw i64 %3696, 64
  %3737 = icmp eq i64 %3736, 32000
  br i1 %3737, label %3738, label %3695, !llvm.loop !72

3738:                                             ; preds = %3695, %3738
  %3739 = phi i64 [ %3756, %3738 ], [ 0, %3695 ]
  %3740 = phi <4 x i64> [ %3757, %3738 ], [ <i64 0, i64 1, i64 2, i64 3>, %3695 ]
  %3741 = add nuw nsw <4 x i64> %3740, <i64 1, i64 1, i64 1, i64 1>
  %3742 = mul nuw nsw <4 x i64> %3741, %3741
  %3743 = trunc <4 x i64> %3742 to <4 x i32>
  %3744 = sitofp <4 x i32> %3743 to <4 x float>
  %3745 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3744
  %3746 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3739
  %3747 = bitcast float* %3746 to <4 x float>*
  store <4 x float> %3745, <4 x float>* %3747, align 16, !tbaa !2
  %3748 = or i64 %3739, 4
  %3749 = add <4 x i64> %3740, <i64 5, i64 5, i64 5, i64 5>
  %3750 = mul nuw nsw <4 x i64> %3749, %3749
  %3751 = trunc <4 x i64> %3750 to <4 x i32>
  %3752 = sitofp <4 x i32> %3751 to <4 x float>
  %3753 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3752
  %3754 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3748
  %3755 = bitcast float* %3754 to <4 x float>*
  store <4 x float> %3753, <4 x float>* %3755, align 16, !tbaa !2
  %3756 = add nuw nsw i64 %3739, 8
  %3757 = add <4 x i64> %3740, <i64 8, i64 8, i64 8, i64 8>
  %3758 = icmp eq i64 %3756, 32000
  br i1 %3758, label %15603, label %3738, !llvm.loop !73

3759:                                             ; preds = %3692
  %3760 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0)) #15
  %3761 = icmp eq i32 %3760, 0
  br i1 %3761, label %3762, label %3826

3762:                                             ; preds = %3759, %3762
  %3763 = phi i64 [ %3803, %3762 ], [ 0, %3759 ]
  %3764 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3763
  %3765 = bitcast float* %3764 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3765, align 16, !tbaa !2
  %3766 = getelementptr inbounds float, float* %3764, i64 4
  %3767 = bitcast float* %3766 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3767, align 16, !tbaa !2
  %3768 = or i64 %3763, 8
  %3769 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3768
  %3770 = bitcast float* %3769 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3770, align 16, !tbaa !2
  %3771 = getelementptr inbounds float, float* %3769, i64 4
  %3772 = bitcast float* %3771 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3772, align 16, !tbaa !2
  %3773 = or i64 %3763, 16
  %3774 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3773
  %3775 = bitcast float* %3774 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3775, align 16, !tbaa !2
  %3776 = getelementptr inbounds float, float* %3774, i64 4
  %3777 = bitcast float* %3776 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3777, align 16, !tbaa !2
  %3778 = or i64 %3763, 24
  %3779 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3778
  %3780 = bitcast float* %3779 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3780, align 16, !tbaa !2
  %3781 = getelementptr inbounds float, float* %3779, i64 4
  %3782 = bitcast float* %3781 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3782, align 16, !tbaa !2
  %3783 = or i64 %3763, 32
  %3784 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3783
  %3785 = bitcast float* %3784 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3785, align 16, !tbaa !2
  %3786 = getelementptr inbounds float, float* %3784, i64 4
  %3787 = bitcast float* %3786 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3787, align 16, !tbaa !2
  %3788 = or i64 %3763, 40
  %3789 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3788
  %3790 = bitcast float* %3789 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3790, align 16, !tbaa !2
  %3791 = getelementptr inbounds float, float* %3789, i64 4
  %3792 = bitcast float* %3791 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3792, align 16, !tbaa !2
  %3793 = or i64 %3763, 48
  %3794 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3793
  %3795 = bitcast float* %3794 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3795, align 16, !tbaa !2
  %3796 = getelementptr inbounds float, float* %3794, i64 4
  %3797 = bitcast float* %3796 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3797, align 16, !tbaa !2
  %3798 = or i64 %3763, 56
  %3799 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3798
  %3800 = bitcast float* %3799 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3800, align 16, !tbaa !2
  %3801 = getelementptr inbounds float, float* %3799, i64 4
  %3802 = bitcast float* %3801 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3802, align 16, !tbaa !2
  %3803 = add nuw nsw i64 %3763, 64
  %3804 = icmp eq i64 %3803, 32000
  br i1 %3804, label %3805, label %3762, !llvm.loop !74

3805:                                             ; preds = %3762, %3805
  %3806 = phi i64 [ %3823, %3805 ], [ 0, %3762 ]
  %3807 = phi <4 x i64> [ %3824, %3805 ], [ <i64 0, i64 1, i64 2, i64 3>, %3762 ]
  %3808 = add nuw nsw <4 x i64> %3807, <i64 1, i64 1, i64 1, i64 1>
  %3809 = mul nuw nsw <4 x i64> %3808, %3808
  %3810 = trunc <4 x i64> %3809 to <4 x i32>
  %3811 = sitofp <4 x i32> %3810 to <4 x float>
  %3812 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3811
  %3813 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3806
  %3814 = bitcast float* %3813 to <4 x float>*
  store <4 x float> %3812, <4 x float>* %3814, align 16, !tbaa !2
  %3815 = or i64 %3806, 4
  %3816 = add <4 x i64> %3807, <i64 5, i64 5, i64 5, i64 5>
  %3817 = mul nuw nsw <4 x i64> %3816, %3816
  %3818 = trunc <4 x i64> %3817 to <4 x i32>
  %3819 = sitofp <4 x i32> %3818 to <4 x float>
  %3820 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3819
  %3821 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3815
  %3822 = bitcast float* %3821 to <4 x float>*
  store <4 x float> %3820, <4 x float>* %3822, align 16, !tbaa !2
  %3823 = add nuw nsw i64 %3806, 8
  %3824 = add <4 x i64> %3807, <i64 8, i64 8, i64 8, i64 8>
  %3825 = icmp eq i64 %3823, 32000
  br i1 %3825, label %15603, label %3805, !llvm.loop !75

3826:                                             ; preds = %3759
  %3827 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0)) #15
  %3828 = icmp eq i32 %3827, 0
  br i1 %3828, label %3829, label %3893

3829:                                             ; preds = %3826, %3829
  %3830 = phi i64 [ %3870, %3829 ], [ 0, %3826 ]
  %3831 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3830
  %3832 = bitcast float* %3831 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3832, align 16, !tbaa !2
  %3833 = getelementptr inbounds float, float* %3831, i64 4
  %3834 = bitcast float* %3833 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3834, align 16, !tbaa !2
  %3835 = or i64 %3830, 8
  %3836 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3835
  %3837 = bitcast float* %3836 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3837, align 16, !tbaa !2
  %3838 = getelementptr inbounds float, float* %3836, i64 4
  %3839 = bitcast float* %3838 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3839, align 16, !tbaa !2
  %3840 = or i64 %3830, 16
  %3841 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3840
  %3842 = bitcast float* %3841 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3842, align 16, !tbaa !2
  %3843 = getelementptr inbounds float, float* %3841, i64 4
  %3844 = bitcast float* %3843 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3844, align 16, !tbaa !2
  %3845 = or i64 %3830, 24
  %3846 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3845
  %3847 = bitcast float* %3846 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3847, align 16, !tbaa !2
  %3848 = getelementptr inbounds float, float* %3846, i64 4
  %3849 = bitcast float* %3848 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3849, align 16, !tbaa !2
  %3850 = or i64 %3830, 32
  %3851 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3850
  %3852 = bitcast float* %3851 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3852, align 16, !tbaa !2
  %3853 = getelementptr inbounds float, float* %3851, i64 4
  %3854 = bitcast float* %3853 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3854, align 16, !tbaa !2
  %3855 = or i64 %3830, 40
  %3856 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3855
  %3857 = bitcast float* %3856 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3857, align 16, !tbaa !2
  %3858 = getelementptr inbounds float, float* %3856, i64 4
  %3859 = bitcast float* %3858 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3859, align 16, !tbaa !2
  %3860 = or i64 %3830, 48
  %3861 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3860
  %3862 = bitcast float* %3861 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3862, align 16, !tbaa !2
  %3863 = getelementptr inbounds float, float* %3861, i64 4
  %3864 = bitcast float* %3863 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3864, align 16, !tbaa !2
  %3865 = or i64 %3830, 56
  %3866 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3865
  %3867 = bitcast float* %3866 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3867, align 16, !tbaa !2
  %3868 = getelementptr inbounds float, float* %3866, i64 4
  %3869 = bitcast float* %3868 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3869, align 16, !tbaa !2
  %3870 = add nuw nsw i64 %3830, 64
  %3871 = icmp eq i64 %3870, 32000
  br i1 %3871, label %3872, label %3829, !llvm.loop !76

3872:                                             ; preds = %3829, %3872
  %3873 = phi i64 [ %3890, %3872 ], [ 0, %3829 ]
  %3874 = phi <4 x i64> [ %3891, %3872 ], [ <i64 0, i64 1, i64 2, i64 3>, %3829 ]
  %3875 = add nuw nsw <4 x i64> %3874, <i64 1, i64 1, i64 1, i64 1>
  %3876 = mul nuw nsw <4 x i64> %3875, %3875
  %3877 = trunc <4 x i64> %3876 to <4 x i32>
  %3878 = sitofp <4 x i32> %3877 to <4 x float>
  %3879 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3878
  %3880 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3873
  %3881 = bitcast float* %3880 to <4 x float>*
  store <4 x float> %3879, <4 x float>* %3881, align 16, !tbaa !2
  %3882 = or i64 %3873, 4
  %3883 = add <4 x i64> %3874, <i64 5, i64 5, i64 5, i64 5>
  %3884 = mul nuw nsw <4 x i64> %3883, %3883
  %3885 = trunc <4 x i64> %3884 to <4 x i32>
  %3886 = sitofp <4 x i32> %3885 to <4 x float>
  %3887 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3886
  %3888 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3882
  %3889 = bitcast float* %3888 to <4 x float>*
  store <4 x float> %3887, <4 x float>* %3889, align 16, !tbaa !2
  %3890 = add nuw nsw i64 %3873, 8
  %3891 = add <4 x i64> %3874, <i64 8, i64 8, i64 8, i64 8>
  %3892 = icmp eq i64 %3890, 32000
  br i1 %3892, label %15603, label %3872, !llvm.loop !77

3893:                                             ; preds = %3826
  %3894 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)) #15
  %3895 = icmp eq i32 %3894, 0
  br i1 %3895, label %3896, label %3960

3896:                                             ; preds = %3893, %3896
  %3897 = phi i64 [ %3937, %3896 ], [ 0, %3893 ]
  %3898 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3897
  %3899 = bitcast float* %3898 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3899, align 16, !tbaa !2
  %3900 = getelementptr inbounds float, float* %3898, i64 4
  %3901 = bitcast float* %3900 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3901, align 16, !tbaa !2
  %3902 = or i64 %3897, 8
  %3903 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3902
  %3904 = bitcast float* %3903 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3904, align 16, !tbaa !2
  %3905 = getelementptr inbounds float, float* %3903, i64 4
  %3906 = bitcast float* %3905 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3906, align 16, !tbaa !2
  %3907 = or i64 %3897, 16
  %3908 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3907
  %3909 = bitcast float* %3908 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3909, align 16, !tbaa !2
  %3910 = getelementptr inbounds float, float* %3908, i64 4
  %3911 = bitcast float* %3910 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3911, align 16, !tbaa !2
  %3912 = or i64 %3897, 24
  %3913 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3912
  %3914 = bitcast float* %3913 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3914, align 16, !tbaa !2
  %3915 = getelementptr inbounds float, float* %3913, i64 4
  %3916 = bitcast float* %3915 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3916, align 16, !tbaa !2
  %3917 = or i64 %3897, 32
  %3918 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3917
  %3919 = bitcast float* %3918 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3919, align 16, !tbaa !2
  %3920 = getelementptr inbounds float, float* %3918, i64 4
  %3921 = bitcast float* %3920 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3921, align 16, !tbaa !2
  %3922 = or i64 %3897, 40
  %3923 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3922
  %3924 = bitcast float* %3923 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3924, align 16, !tbaa !2
  %3925 = getelementptr inbounds float, float* %3923, i64 4
  %3926 = bitcast float* %3925 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3926, align 16, !tbaa !2
  %3927 = or i64 %3897, 48
  %3928 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3927
  %3929 = bitcast float* %3928 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3929, align 16, !tbaa !2
  %3930 = getelementptr inbounds float, float* %3928, i64 4
  %3931 = bitcast float* %3930 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3931, align 16, !tbaa !2
  %3932 = or i64 %3897, 56
  %3933 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3932
  %3934 = bitcast float* %3933 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3934, align 16, !tbaa !2
  %3935 = getelementptr inbounds float, float* %3933, i64 4
  %3936 = bitcast float* %3935 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3936, align 16, !tbaa !2
  %3937 = add nuw nsw i64 %3897, 64
  %3938 = icmp eq i64 %3937, 32000
  br i1 %3938, label %3939, label %3896, !llvm.loop !78

3939:                                             ; preds = %3896, %3939
  %3940 = phi i64 [ %3957, %3939 ], [ 0, %3896 ]
  %3941 = phi <4 x i64> [ %3958, %3939 ], [ <i64 0, i64 1, i64 2, i64 3>, %3896 ]
  %3942 = add nuw nsw <4 x i64> %3941, <i64 1, i64 1, i64 1, i64 1>
  %3943 = mul nuw nsw <4 x i64> %3942, %3942
  %3944 = trunc <4 x i64> %3943 to <4 x i32>
  %3945 = sitofp <4 x i32> %3944 to <4 x float>
  %3946 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3945
  %3947 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3940
  %3948 = bitcast float* %3947 to <4 x float>*
  store <4 x float> %3946, <4 x float>* %3948, align 16, !tbaa !2
  %3949 = or i64 %3940, 4
  %3950 = add <4 x i64> %3941, <i64 5, i64 5, i64 5, i64 5>
  %3951 = mul nuw nsw <4 x i64> %3950, %3950
  %3952 = trunc <4 x i64> %3951 to <4 x i32>
  %3953 = sitofp <4 x i32> %3952 to <4 x float>
  %3954 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3953
  %3955 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3949
  %3956 = bitcast float* %3955 to <4 x float>*
  store <4 x float> %3954, <4 x float>* %3956, align 16, !tbaa !2
  %3957 = add nuw nsw i64 %3940, 8
  %3958 = add <4 x i64> %3941, <i64 8, i64 8, i64 8, i64 8>
  %3959 = icmp eq i64 %3957, 32000
  br i1 %3959, label %15603, label %3939, !llvm.loop !79

3960:                                             ; preds = %3893
  %3961 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0)) #15
  %3962 = icmp eq i32 %3961, 0
  br i1 %3962, label %3963, label %4027

3963:                                             ; preds = %3960, %3963
  %3964 = phi i64 [ %4004, %3963 ], [ 0, %3960 ]
  %3965 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3964
  %3966 = bitcast float* %3965 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3966, align 16, !tbaa !2
  %3967 = getelementptr inbounds float, float* %3965, i64 4
  %3968 = bitcast float* %3967 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3968, align 16, !tbaa !2
  %3969 = or i64 %3964, 8
  %3970 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3969
  %3971 = bitcast float* %3970 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3971, align 16, !tbaa !2
  %3972 = getelementptr inbounds float, float* %3970, i64 4
  %3973 = bitcast float* %3972 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3973, align 16, !tbaa !2
  %3974 = or i64 %3964, 16
  %3975 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3974
  %3976 = bitcast float* %3975 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3976, align 16, !tbaa !2
  %3977 = getelementptr inbounds float, float* %3975, i64 4
  %3978 = bitcast float* %3977 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3978, align 16, !tbaa !2
  %3979 = or i64 %3964, 24
  %3980 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3979
  %3981 = bitcast float* %3980 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3981, align 16, !tbaa !2
  %3982 = getelementptr inbounds float, float* %3980, i64 4
  %3983 = bitcast float* %3982 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3983, align 16, !tbaa !2
  %3984 = or i64 %3964, 32
  %3985 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3984
  %3986 = bitcast float* %3985 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3986, align 16, !tbaa !2
  %3987 = getelementptr inbounds float, float* %3985, i64 4
  %3988 = bitcast float* %3987 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3988, align 16, !tbaa !2
  %3989 = or i64 %3964, 40
  %3990 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3989
  %3991 = bitcast float* %3990 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3991, align 16, !tbaa !2
  %3992 = getelementptr inbounds float, float* %3990, i64 4
  %3993 = bitcast float* %3992 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3993, align 16, !tbaa !2
  %3994 = or i64 %3964, 48
  %3995 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3994
  %3996 = bitcast float* %3995 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3996, align 16, !tbaa !2
  %3997 = getelementptr inbounds float, float* %3995, i64 4
  %3998 = bitcast float* %3997 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %3998, align 16, !tbaa !2
  %3999 = or i64 %3964, 56
  %4000 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3999
  %4001 = bitcast float* %4000 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4001, align 16, !tbaa !2
  %4002 = getelementptr inbounds float, float* %4000, i64 4
  %4003 = bitcast float* %4002 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4003, align 16, !tbaa !2
  %4004 = add nuw nsw i64 %3964, 64
  %4005 = icmp eq i64 %4004, 32000
  br i1 %4005, label %4006, label %3963, !llvm.loop !80

4006:                                             ; preds = %3963, %4006
  %4007 = phi i64 [ %4024, %4006 ], [ 0, %3963 ]
  %4008 = phi <4 x i64> [ %4025, %4006 ], [ <i64 0, i64 1, i64 2, i64 3>, %3963 ]
  %4009 = add nuw nsw <4 x i64> %4008, <i64 1, i64 1, i64 1, i64 1>
  %4010 = mul nuw nsw <4 x i64> %4009, %4009
  %4011 = trunc <4 x i64> %4010 to <4 x i32>
  %4012 = sitofp <4 x i32> %4011 to <4 x float>
  %4013 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4012
  %4014 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4007
  %4015 = bitcast float* %4014 to <4 x float>*
  store <4 x float> %4013, <4 x float>* %4015, align 16, !tbaa !2
  %4016 = or i64 %4007, 4
  %4017 = add <4 x i64> %4008, <i64 5, i64 5, i64 5, i64 5>
  %4018 = mul nuw nsw <4 x i64> %4017, %4017
  %4019 = trunc <4 x i64> %4018 to <4 x i32>
  %4020 = sitofp <4 x i32> %4019 to <4 x float>
  %4021 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4020
  %4022 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4016
  %4023 = bitcast float* %4022 to <4 x float>*
  store <4 x float> %4021, <4 x float>* %4023, align 16, !tbaa !2
  %4024 = add nuw nsw i64 %4007, 8
  %4025 = add <4 x i64> %4008, <i64 8, i64 8, i64 8, i64 8>
  %4026 = icmp eq i64 %4024, 32000
  br i1 %4026, label %15603, label %4006, !llvm.loop !81

4027:                                             ; preds = %3960
  %4028 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)) #15
  %4029 = icmp eq i32 %4028, 0
  br i1 %4029, label %4030, label %4111

4030:                                             ; preds = %4027, %4030
  %4031 = phi i64 [ %4071, %4030 ], [ 0, %4027 ]
  %4032 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4031
  %4033 = bitcast float* %4032 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4033, align 16, !tbaa !2
  %4034 = getelementptr inbounds float, float* %4032, i64 4
  %4035 = bitcast float* %4034 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4035, align 16, !tbaa !2
  %4036 = or i64 %4031, 8
  %4037 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4036
  %4038 = bitcast float* %4037 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4038, align 16, !tbaa !2
  %4039 = getelementptr inbounds float, float* %4037, i64 4
  %4040 = bitcast float* %4039 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4040, align 16, !tbaa !2
  %4041 = or i64 %4031, 16
  %4042 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4041
  %4043 = bitcast float* %4042 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4043, align 16, !tbaa !2
  %4044 = getelementptr inbounds float, float* %4042, i64 4
  %4045 = bitcast float* %4044 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4045, align 16, !tbaa !2
  %4046 = or i64 %4031, 24
  %4047 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4046
  %4048 = bitcast float* %4047 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4048, align 16, !tbaa !2
  %4049 = getelementptr inbounds float, float* %4047, i64 4
  %4050 = bitcast float* %4049 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4050, align 16, !tbaa !2
  %4051 = or i64 %4031, 32
  %4052 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4051
  %4053 = bitcast float* %4052 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4053, align 16, !tbaa !2
  %4054 = getelementptr inbounds float, float* %4052, i64 4
  %4055 = bitcast float* %4054 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4055, align 16, !tbaa !2
  %4056 = or i64 %4031, 40
  %4057 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4056
  %4058 = bitcast float* %4057 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4058, align 16, !tbaa !2
  %4059 = getelementptr inbounds float, float* %4057, i64 4
  %4060 = bitcast float* %4059 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4060, align 16, !tbaa !2
  %4061 = or i64 %4031, 48
  %4062 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4061
  %4063 = bitcast float* %4062 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4063, align 16, !tbaa !2
  %4064 = getelementptr inbounds float, float* %4062, i64 4
  %4065 = bitcast float* %4064 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4065, align 16, !tbaa !2
  %4066 = or i64 %4031, 56
  %4067 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4066
  %4068 = bitcast float* %4067 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4068, align 16, !tbaa !2
  %4069 = getelementptr inbounds float, float* %4067, i64 4
  %4070 = bitcast float* %4069 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4070, align 16, !tbaa !2
  %4071 = add nuw nsw i64 %4031, 64
  %4072 = icmp eq i64 %4071, 32000
  br i1 %4072, label %4073, label %4030, !llvm.loop !82

4073:                                             ; preds = %4030, %4073
  %4074 = phi i64 [ %4089, %4073 ], [ 0, %4030 ]
  %4075 = phi <4 x i64> [ %4090, %4073 ], [ <i64 0, i64 1, i64 2, i64 3>, %4030 ]
  %4076 = trunc <4 x i64> %4075 to <4 x i32>
  %4077 = add <4 x i32> %4076, <i32 1, i32 1, i32 1, i32 1>
  %4078 = sitofp <4 x i32> %4077 to <4 x float>
  %4079 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4078
  %4080 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4074
  %4081 = bitcast float* %4080 to <4 x float>*
  store <4 x float> %4079, <4 x float>* %4081, align 16, !tbaa !2
  %4082 = or i64 %4074, 4
  %4083 = trunc <4 x i64> %4075 to <4 x i32>
  %4084 = add <4 x i32> %4083, <i32 5, i32 5, i32 5, i32 5>
  %4085 = sitofp <4 x i32> %4084 to <4 x float>
  %4086 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4085
  %4087 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4082
  %4088 = bitcast float* %4087 to <4 x float>*
  store <4 x float> %4086, <4 x float>* %4088, align 16, !tbaa !2
  %4089 = add nuw nsw i64 %4074, 8
  %4090 = add <4 x i64> %4075, <i64 8, i64 8, i64 8, i64 8>
  %4091 = icmp eq i64 %4089, 32000
  br i1 %4091, label %4092, label %4073, !llvm.loop !83

4092:                                             ; preds = %4073, %4092
  %4093 = phi i64 [ %4108, %4092 ], [ 0, %4073 ]
  %4094 = phi <4 x i64> [ %4109, %4092 ], [ <i64 0, i64 1, i64 2, i64 3>, %4073 ]
  %4095 = trunc <4 x i64> %4094 to <4 x i32>
  %4096 = add <4 x i32> %4095, <i32 1, i32 1, i32 1, i32 1>
  %4097 = sitofp <4 x i32> %4096 to <4 x float>
  %4098 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4097
  %4099 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4093
  %4100 = bitcast float* %4099 to <4 x float>*
  store <4 x float> %4098, <4 x float>* %4100, align 16, !tbaa !2
  %4101 = or i64 %4093, 4
  %4102 = trunc <4 x i64> %4094 to <4 x i32>
  %4103 = add <4 x i32> %4102, <i32 5, i32 5, i32 5, i32 5>
  %4104 = sitofp <4 x i32> %4103 to <4 x float>
  %4105 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4104
  %4106 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4101
  %4107 = bitcast float* %4106 to <4 x float>*
  store <4 x float> %4105, <4 x float>* %4107, align 16, !tbaa !2
  %4108 = add nuw nsw i64 %4093, 8
  %4109 = add <4 x i64> %4094, <i64 8, i64 8, i64 8, i64 8>
  %4110 = icmp eq i64 %4108, 32000
  br i1 %4110, label %15603, label %4092, !llvm.loop !84

4111:                                             ; preds = %4027
  %4112 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0)) #15
  %4113 = icmp eq i32 %4112, 0
  br i1 %4113, label %4114, label %4215

4114:                                             ; preds = %4111
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %4115

4115:                                             ; preds = %4115, %4114
  %4116 = phi i64 [ 0, %4114 ], [ %4156, %4115 ]
  %4117 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4116
  %4118 = bitcast float* %4117 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4118, align 16, !tbaa !2
  %4119 = getelementptr inbounds float, float* %4117, i64 4
  %4120 = bitcast float* %4119 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4120, align 16, !tbaa !2
  %4121 = or i64 %4116, 8
  %4122 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4121
  %4123 = bitcast float* %4122 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4123, align 16, !tbaa !2
  %4124 = getelementptr inbounds float, float* %4122, i64 4
  %4125 = bitcast float* %4124 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4125, align 16, !tbaa !2
  %4126 = or i64 %4116, 16
  %4127 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4126
  %4128 = bitcast float* %4127 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4128, align 16, !tbaa !2
  %4129 = getelementptr inbounds float, float* %4127, i64 4
  %4130 = bitcast float* %4129 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4130, align 16, !tbaa !2
  %4131 = or i64 %4116, 24
  %4132 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4131
  %4133 = bitcast float* %4132 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4133, align 16, !tbaa !2
  %4134 = getelementptr inbounds float, float* %4132, i64 4
  %4135 = bitcast float* %4134 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4135, align 16, !tbaa !2
  %4136 = or i64 %4116, 32
  %4137 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4136
  %4138 = bitcast float* %4137 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4138, align 16, !tbaa !2
  %4139 = getelementptr inbounds float, float* %4137, i64 4
  %4140 = bitcast float* %4139 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4140, align 16, !tbaa !2
  %4141 = or i64 %4116, 40
  %4142 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4141
  %4143 = bitcast float* %4142 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4143, align 16, !tbaa !2
  %4144 = getelementptr inbounds float, float* %4142, i64 4
  %4145 = bitcast float* %4144 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4145, align 16, !tbaa !2
  %4146 = or i64 %4116, 48
  %4147 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4146
  %4148 = bitcast float* %4147 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4148, align 16, !tbaa !2
  %4149 = getelementptr inbounds float, float* %4147, i64 4
  %4150 = bitcast float* %4149 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4150, align 16, !tbaa !2
  %4151 = or i64 %4116, 56
  %4152 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4151
  %4153 = bitcast float* %4152 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4153, align 16, !tbaa !2
  %4154 = getelementptr inbounds float, float* %4152, i64 4
  %4155 = bitcast float* %4154 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4155, align 16, !tbaa !2
  %4156 = add nuw nsw i64 %4116, 64
  %4157 = icmp eq i64 %4156, 32000
  br i1 %4157, label %4158, label %4115, !llvm.loop !85

4158:                                             ; preds = %4115, %4158
  %4159 = phi i64 [ %4174, %4158 ], [ 0, %4115 ]
  %4160 = phi <4 x i64> [ %4175, %4158 ], [ <i64 0, i64 1, i64 2, i64 3>, %4115 ]
  %4161 = trunc <4 x i64> %4160 to <4 x i32>
  %4162 = add <4 x i32> %4161, <i32 1, i32 1, i32 1, i32 1>
  %4163 = sitofp <4 x i32> %4162 to <4 x float>
  %4164 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4163
  %4165 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4159
  %4166 = bitcast float* %4165 to <4 x float>*
  store <4 x float> %4164, <4 x float>* %4166, align 16, !tbaa !2
  %4167 = or i64 %4159, 4
  %4168 = trunc <4 x i64> %4160 to <4 x i32>
  %4169 = add <4 x i32> %4168, <i32 5, i32 5, i32 5, i32 5>
  %4170 = sitofp <4 x i32> %4169 to <4 x float>
  %4171 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4170
  %4172 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4167
  %4173 = bitcast float* %4172 to <4 x float>*
  store <4 x float> %4171, <4 x float>* %4173, align 16, !tbaa !2
  %4174 = add nuw nsw i64 %4159, 8
  %4175 = add <4 x i64> %4160, <i64 8, i64 8, i64 8, i64 8>
  %4176 = icmp eq i64 %4174, 32000
  br i1 %4176, label %4177, label %4158, !llvm.loop !86

4177:                                             ; preds = %4158, %4177
  %4178 = phi i64 [ %4193, %4177 ], [ 0, %4158 ]
  %4179 = phi <4 x i64> [ %4194, %4177 ], [ <i64 0, i64 1, i64 2, i64 3>, %4158 ]
  %4180 = trunc <4 x i64> %4179 to <4 x i32>
  %4181 = add <4 x i32> %4180, <i32 1, i32 1, i32 1, i32 1>
  %4182 = sitofp <4 x i32> %4181 to <4 x float>
  %4183 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4182
  %4184 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %4178
  %4185 = bitcast float* %4184 to <4 x float>*
  store <4 x float> %4183, <4 x float>* %4185, align 16, !tbaa !2
  %4186 = or i64 %4178, 4
  %4187 = trunc <4 x i64> %4179 to <4 x i32>
  %4188 = add <4 x i32> %4187, <i32 5, i32 5, i32 5, i32 5>
  %4189 = sitofp <4 x i32> %4188 to <4 x float>
  %4190 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4189
  %4191 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %4186
  %4192 = bitcast float* %4191 to <4 x float>*
  store <4 x float> %4190, <4 x float>* %4192, align 16, !tbaa !2
  %4193 = add nuw nsw i64 %4178, 8
  %4194 = add <4 x i64> %4179, <i64 8, i64 8, i64 8, i64 8>
  %4195 = icmp eq i64 %4193, 32000
  br i1 %4195, label %4196, label %4177, !llvm.loop !87

4196:                                             ; preds = %4177, %4196
  %4197 = phi i64 [ %4212, %4196 ], [ 0, %4177 ]
  %4198 = phi <4 x i64> [ %4213, %4196 ], [ <i64 0, i64 1, i64 2, i64 3>, %4177 ]
  %4199 = trunc <4 x i64> %4198 to <4 x i32>
  %4200 = add <4 x i32> %4199, <i32 1, i32 1, i32 1, i32 1>
  %4201 = sitofp <4 x i32> %4200 to <4 x float>
  %4202 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4201
  %4203 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %4197
  %4204 = bitcast float* %4203 to <4 x float>*
  store <4 x float> %4202, <4 x float>* %4204, align 16, !tbaa !2
  %4205 = or i64 %4197, 4
  %4206 = trunc <4 x i64> %4198 to <4 x i32>
  %4207 = add <4 x i32> %4206, <i32 5, i32 5, i32 5, i32 5>
  %4208 = sitofp <4 x i32> %4207 to <4 x float>
  %4209 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4208
  %4210 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %4205
  %4211 = bitcast float* %4210 to <4 x float>*
  store <4 x float> %4209, <4 x float>* %4211, align 16, !tbaa !2
  %4212 = add nuw nsw i64 %4197, 8
  %4213 = add <4 x i64> %4198, <i64 8, i64 8, i64 8, i64 8>
  %4214 = icmp eq i64 %4212, 32000
  br i1 %4214, label %15603, label %4196, !llvm.loop !88

4215:                                             ; preds = %4111
  %4216 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0)) #15
  %4217 = icmp eq i32 %4216, 0
  br i1 %4217, label %4218, label %4342

4218:                                             ; preds = %4215, %4218
  %4219 = phi i64 [ %4234, %4218 ], [ 0, %4215 ]
  %4220 = phi <4 x i64> [ %4235, %4218 ], [ <i64 0, i64 1, i64 2, i64 3>, %4215 ]
  %4221 = trunc <4 x i64> %4220 to <4 x i32>
  %4222 = add <4 x i32> %4221, <i32 1, i32 1, i32 1, i32 1>
  %4223 = sitofp <4 x i32> %4222 to <4 x float>
  %4224 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4223
  %4225 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4219
  %4226 = bitcast float* %4225 to <4 x float>*
  store <4 x float> %4224, <4 x float>* %4226, align 16, !tbaa !2
  %4227 = or i64 %4219, 4
  %4228 = trunc <4 x i64> %4220 to <4 x i32>
  %4229 = add <4 x i32> %4228, <i32 5, i32 5, i32 5, i32 5>
  %4230 = sitofp <4 x i32> %4229 to <4 x float>
  %4231 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4230
  %4232 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4227
  %4233 = bitcast float* %4232 to <4 x float>*
  store <4 x float> %4231, <4 x float>* %4233, align 16, !tbaa !2
  %4234 = add nuw nsw i64 %4219, 8
  %4235 = add <4 x i64> %4220, <i64 8, i64 8, i64 8, i64 8>
  %4236 = icmp eq i64 %4234, 32000
  br i1 %4236, label %4237, label %4218, !llvm.loop !89

4237:                                             ; preds = %4218, %4237
  %4238 = phi i64 [ %4278, %4237 ], [ 0, %4218 ]
  %4239 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4238
  %4240 = bitcast float* %4239 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4240, align 16, !tbaa !2
  %4241 = getelementptr inbounds float, float* %4239, i64 4
  %4242 = bitcast float* %4241 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4242, align 16, !tbaa !2
  %4243 = or i64 %4238, 8
  %4244 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4243
  %4245 = bitcast float* %4244 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4245, align 16, !tbaa !2
  %4246 = getelementptr inbounds float, float* %4244, i64 4
  %4247 = bitcast float* %4246 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4247, align 16, !tbaa !2
  %4248 = or i64 %4238, 16
  %4249 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4248
  %4250 = bitcast float* %4249 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4250, align 16, !tbaa !2
  %4251 = getelementptr inbounds float, float* %4249, i64 4
  %4252 = bitcast float* %4251 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4252, align 16, !tbaa !2
  %4253 = or i64 %4238, 24
  %4254 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4253
  %4255 = bitcast float* %4254 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4255, align 16, !tbaa !2
  %4256 = getelementptr inbounds float, float* %4254, i64 4
  %4257 = bitcast float* %4256 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4257, align 16, !tbaa !2
  %4258 = or i64 %4238, 32
  %4259 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4258
  %4260 = bitcast float* %4259 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4260, align 16, !tbaa !2
  %4261 = getelementptr inbounds float, float* %4259, i64 4
  %4262 = bitcast float* %4261 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4262, align 16, !tbaa !2
  %4263 = or i64 %4238, 40
  %4264 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4263
  %4265 = bitcast float* %4264 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4265, align 16, !tbaa !2
  %4266 = getelementptr inbounds float, float* %4264, i64 4
  %4267 = bitcast float* %4266 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4267, align 16, !tbaa !2
  %4268 = or i64 %4238, 48
  %4269 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4268
  %4270 = bitcast float* %4269 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4270, align 16, !tbaa !2
  %4271 = getelementptr inbounds float, float* %4269, i64 4
  %4272 = bitcast float* %4271 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4272, align 16, !tbaa !2
  %4273 = or i64 %4238, 56
  %4274 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4273
  %4275 = bitcast float* %4274 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4275, align 16, !tbaa !2
  %4276 = getelementptr inbounds float, float* %4274, i64 4
  %4277 = bitcast float* %4276 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4277, align 16, !tbaa !2
  %4278 = add nuw nsw i64 %4238, 64
  %4279 = icmp eq i64 %4278, 32000
  br i1 %4279, label %4280, label %4237, !llvm.loop !90

4280:                                             ; preds = %4237, %4280
  %4281 = phi i64 [ %4321, %4280 ], [ 0, %4237 ]
  %4282 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4281
  %4283 = bitcast float* %4282 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4283, align 16, !tbaa !2
  %4284 = getelementptr inbounds float, float* %4282, i64 4
  %4285 = bitcast float* %4284 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4285, align 16, !tbaa !2
  %4286 = or i64 %4281, 8
  %4287 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4286
  %4288 = bitcast float* %4287 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4288, align 16, !tbaa !2
  %4289 = getelementptr inbounds float, float* %4287, i64 4
  %4290 = bitcast float* %4289 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4290, align 16, !tbaa !2
  %4291 = or i64 %4281, 16
  %4292 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4291
  %4293 = bitcast float* %4292 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4293, align 16, !tbaa !2
  %4294 = getelementptr inbounds float, float* %4292, i64 4
  %4295 = bitcast float* %4294 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4295, align 16, !tbaa !2
  %4296 = or i64 %4281, 24
  %4297 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4296
  %4298 = bitcast float* %4297 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4298, align 16, !tbaa !2
  %4299 = getelementptr inbounds float, float* %4297, i64 4
  %4300 = bitcast float* %4299 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4300, align 16, !tbaa !2
  %4301 = or i64 %4281, 32
  %4302 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4301
  %4303 = bitcast float* %4302 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4303, align 16, !tbaa !2
  %4304 = getelementptr inbounds float, float* %4302, i64 4
  %4305 = bitcast float* %4304 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4305, align 16, !tbaa !2
  %4306 = or i64 %4281, 40
  %4307 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4306
  %4308 = bitcast float* %4307 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4308, align 16, !tbaa !2
  %4309 = getelementptr inbounds float, float* %4307, i64 4
  %4310 = bitcast float* %4309 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4310, align 16, !tbaa !2
  %4311 = or i64 %4281, 48
  %4312 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4311
  %4313 = bitcast float* %4312 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4313, align 16, !tbaa !2
  %4314 = getelementptr inbounds float, float* %4312, i64 4
  %4315 = bitcast float* %4314 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4315, align 16, !tbaa !2
  %4316 = or i64 %4281, 56
  %4317 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4316
  %4318 = bitcast float* %4317 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4318, align 16, !tbaa !2
  %4319 = getelementptr inbounds float, float* %4317, i64 4
  %4320 = bitcast float* %4319 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4320, align 16, !tbaa !2
  %4321 = add nuw nsw i64 %4281, 64
  %4322 = icmp eq i64 %4321, 32000
  br i1 %4322, label %4323, label %4280, !llvm.loop !91

4323:                                             ; preds = %4280, %4323
  %4324 = phi i64 [ %4339, %4323 ], [ 0, %4280 ]
  %4325 = phi <4 x i64> [ %4340, %4323 ], [ <i64 0, i64 1, i64 2, i64 3>, %4280 ]
  %4326 = trunc <4 x i64> %4325 to <4 x i32>
  %4327 = add <4 x i32> %4326, <i32 1, i32 1, i32 1, i32 1>
  %4328 = sitofp <4 x i32> %4327 to <4 x float>
  %4329 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4328
  %4330 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %4324
  %4331 = bitcast float* %4330 to <4 x float>*
  store <4 x float> %4329, <4 x float>* %4331, align 16, !tbaa !2
  %4332 = or i64 %4324, 4
  %4333 = trunc <4 x i64> %4325 to <4 x i32>
  %4334 = add <4 x i32> %4333, <i32 5, i32 5, i32 5, i32 5>
  %4335 = sitofp <4 x i32> %4334 to <4 x float>
  %4336 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4335
  %4337 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %4332
  %4338 = bitcast float* %4337 to <4 x float>*
  store <4 x float> %4336, <4 x float>* %4338, align 16, !tbaa !2
  %4339 = add nuw nsw i64 %4324, 8
  %4340 = add <4 x i64> %4325, <i64 8, i64 8, i64 8, i64 8>
  %4341 = icmp eq i64 %4339, 32000
  br i1 %4341, label %15603, label %4323, !llvm.loop !92

4342:                                             ; preds = %4215
  %4343 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0)) #15
  %4344 = icmp eq i32 %4343, 0
  br i1 %4344, label %4345, label %4445

4345:                                             ; preds = %4342, %4345
  %4346 = phi i64 [ %4386, %4345 ], [ 0, %4342 ]
  %4347 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4346
  %4348 = bitcast float* %4347 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4348, align 16, !tbaa !2
  %4349 = getelementptr inbounds float, float* %4347, i64 4
  %4350 = bitcast float* %4349 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4350, align 16, !tbaa !2
  %4351 = or i64 %4346, 8
  %4352 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4351
  %4353 = bitcast float* %4352 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4353, align 16, !tbaa !2
  %4354 = getelementptr inbounds float, float* %4352, i64 4
  %4355 = bitcast float* %4354 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4355, align 16, !tbaa !2
  %4356 = or i64 %4346, 16
  %4357 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4356
  %4358 = bitcast float* %4357 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4358, align 16, !tbaa !2
  %4359 = getelementptr inbounds float, float* %4357, i64 4
  %4360 = bitcast float* %4359 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4360, align 16, !tbaa !2
  %4361 = or i64 %4346, 24
  %4362 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4361
  %4363 = bitcast float* %4362 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4363, align 16, !tbaa !2
  %4364 = getelementptr inbounds float, float* %4362, i64 4
  %4365 = bitcast float* %4364 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4365, align 16, !tbaa !2
  %4366 = or i64 %4346, 32
  %4367 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4366
  %4368 = bitcast float* %4367 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4368, align 16, !tbaa !2
  %4369 = getelementptr inbounds float, float* %4367, i64 4
  %4370 = bitcast float* %4369 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4370, align 16, !tbaa !2
  %4371 = or i64 %4346, 40
  %4372 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4371
  %4373 = bitcast float* %4372 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4373, align 16, !tbaa !2
  %4374 = getelementptr inbounds float, float* %4372, i64 4
  %4375 = bitcast float* %4374 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4375, align 16, !tbaa !2
  %4376 = or i64 %4346, 48
  %4377 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4376
  %4378 = bitcast float* %4377 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4378, align 16, !tbaa !2
  %4379 = getelementptr inbounds float, float* %4377, i64 4
  %4380 = bitcast float* %4379 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4380, align 16, !tbaa !2
  %4381 = or i64 %4346, 56
  %4382 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4381
  %4383 = bitcast float* %4382 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4383, align 16, !tbaa !2
  %4384 = getelementptr inbounds float, float* %4382, i64 4
  %4385 = bitcast float* %4384 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4385, align 16, !tbaa !2
  %4386 = add nuw nsw i64 %4346, 64
  %4387 = icmp eq i64 %4386, 32000
  br i1 %4387, label %4388, label %4345, !llvm.loop !93

4388:                                             ; preds = %4345, %4388
  %4389 = phi i64 [ %4404, %4388 ], [ 0, %4345 ]
  %4390 = phi <4 x i64> [ %4405, %4388 ], [ <i64 0, i64 1, i64 2, i64 3>, %4345 ]
  %4391 = trunc <4 x i64> %4390 to <4 x i32>
  %4392 = add <4 x i32> %4391, <i32 1, i32 1, i32 1, i32 1>
  %4393 = sitofp <4 x i32> %4392 to <4 x float>
  %4394 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4393
  %4395 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4389
  %4396 = bitcast float* %4395 to <4 x float>*
  store <4 x float> %4394, <4 x float>* %4396, align 16, !tbaa !2
  %4397 = or i64 %4389, 4
  %4398 = trunc <4 x i64> %4390 to <4 x i32>
  %4399 = add <4 x i32> %4398, <i32 5, i32 5, i32 5, i32 5>
  %4400 = sitofp <4 x i32> %4399 to <4 x float>
  %4401 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4400
  %4402 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4397
  %4403 = bitcast float* %4402 to <4 x float>*
  store <4 x float> %4401, <4 x float>* %4403, align 16, !tbaa !2
  %4404 = add nuw nsw i64 %4389, 8
  %4405 = add <4 x i64> %4390, <i64 8, i64 8, i64 8, i64 8>
  %4406 = icmp eq i64 %4404, 32000
  br i1 %4406, label %4407, label %4388, !llvm.loop !94

4407:                                             ; preds = %4388, %4407
  %4408 = phi i64 [ %4423, %4407 ], [ 0, %4388 ]
  %4409 = phi <4 x i64> [ %4424, %4407 ], [ <i64 0, i64 1, i64 2, i64 3>, %4388 ]
  %4410 = trunc <4 x i64> %4409 to <4 x i32>
  %4411 = add <4 x i32> %4410, <i32 1, i32 1, i32 1, i32 1>
  %4412 = sitofp <4 x i32> %4411 to <4 x float>
  %4413 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4412
  %4414 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4408
  %4415 = bitcast float* %4414 to <4 x float>*
  store <4 x float> %4413, <4 x float>* %4415, align 16, !tbaa !2
  %4416 = or i64 %4408, 4
  %4417 = trunc <4 x i64> %4409 to <4 x i32>
  %4418 = add <4 x i32> %4417, <i32 5, i32 5, i32 5, i32 5>
  %4419 = sitofp <4 x i32> %4418 to <4 x float>
  %4420 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4419
  %4421 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4416
  %4422 = bitcast float* %4421 to <4 x float>*
  store <4 x float> %4420, <4 x float>* %4422, align 16, !tbaa !2
  %4423 = add nuw nsw i64 %4408, 8
  %4424 = add <4 x i64> %4409, <i64 8, i64 8, i64 8, i64 8>
  %4425 = icmp eq i64 %4423, 32000
  br i1 %4425, label %4426, label %4407, !llvm.loop !95

4426:                                             ; preds = %4407, %4426
  %4427 = phi i64 [ %4442, %4426 ], [ 0, %4407 ]
  %4428 = phi <4 x i64> [ %4443, %4426 ], [ <i64 0, i64 1, i64 2, i64 3>, %4407 ]
  %4429 = trunc <4 x i64> %4428 to <4 x i32>
  %4430 = add <4 x i32> %4429, <i32 1, i32 1, i32 1, i32 1>
  %4431 = sitofp <4 x i32> %4430 to <4 x float>
  %4432 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4431
  %4433 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %4427
  %4434 = bitcast float* %4433 to <4 x float>*
  store <4 x float> %4432, <4 x float>* %4434, align 16, !tbaa !2
  %4435 = or i64 %4427, 4
  %4436 = trunc <4 x i64> %4428 to <4 x i32>
  %4437 = add <4 x i32> %4436, <i32 5, i32 5, i32 5, i32 5>
  %4438 = sitofp <4 x i32> %4437 to <4 x float>
  %4439 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4438
  %4440 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %4435
  %4441 = bitcast float* %4440 to <4 x float>*
  store <4 x float> %4439, <4 x float>* %4441, align 16, !tbaa !2
  %4442 = add nuw nsw i64 %4427, 8
  %4443 = add <4 x i64> %4428, <i64 8, i64 8, i64 8, i64 8>
  %4444 = icmp eq i64 %4442, 32000
  br i1 %4444, label %15603, label %4426, !llvm.loop !96

4445:                                             ; preds = %4342
  %4446 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)) #15
  %4447 = icmp eq i32 %4446, 0
  br i1 %4447, label %4448, label %4535

4448:                                             ; preds = %4445
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %4449

4449:                                             ; preds = %4449, %4448
  %4450 = phi i64 [ 0, %4448 ], [ %4490, %4449 ]
  %4451 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4450
  %4452 = bitcast float* %4451 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4452, align 16, !tbaa !2
  %4453 = getelementptr inbounds float, float* %4451, i64 4
  %4454 = bitcast float* %4453 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4454, align 16, !tbaa !2
  %4455 = or i64 %4450, 8
  %4456 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4455
  %4457 = bitcast float* %4456 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4457, align 16, !tbaa !2
  %4458 = getelementptr inbounds float, float* %4456, i64 4
  %4459 = bitcast float* %4458 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4459, align 16, !tbaa !2
  %4460 = or i64 %4450, 16
  %4461 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4460
  %4462 = bitcast float* %4461 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4462, align 16, !tbaa !2
  %4463 = getelementptr inbounds float, float* %4461, i64 4
  %4464 = bitcast float* %4463 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4464, align 16, !tbaa !2
  %4465 = or i64 %4450, 24
  %4466 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4465
  %4467 = bitcast float* %4466 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4467, align 16, !tbaa !2
  %4468 = getelementptr inbounds float, float* %4466, i64 4
  %4469 = bitcast float* %4468 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4469, align 16, !tbaa !2
  %4470 = or i64 %4450, 32
  %4471 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4470
  %4472 = bitcast float* %4471 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4472, align 16, !tbaa !2
  %4473 = getelementptr inbounds float, float* %4471, i64 4
  %4474 = bitcast float* %4473 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4474, align 16, !tbaa !2
  %4475 = or i64 %4450, 40
  %4476 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4475
  %4477 = bitcast float* %4476 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4477, align 16, !tbaa !2
  %4478 = getelementptr inbounds float, float* %4476, i64 4
  %4479 = bitcast float* %4478 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4479, align 16, !tbaa !2
  %4480 = or i64 %4450, 48
  %4481 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4480
  %4482 = bitcast float* %4481 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4482, align 16, !tbaa !2
  %4483 = getelementptr inbounds float, float* %4481, i64 4
  %4484 = bitcast float* %4483 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4484, align 16, !tbaa !2
  %4485 = or i64 %4450, 56
  %4486 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4485
  %4487 = bitcast float* %4486 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4487, align 16, !tbaa !2
  %4488 = getelementptr inbounds float, float* %4486, i64 4
  %4489 = bitcast float* %4488 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4489, align 16, !tbaa !2
  %4490 = add nuw nsw i64 %4450, 64
  %4491 = icmp eq i64 %4490, 32000
  br i1 %4491, label %4492, label %4449, !llvm.loop !97

4492:                                             ; preds = %4449, %4492
  %4493 = phi i64 [ %4533, %4492 ], [ 0, %4449 ]
  %4494 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4493
  %4495 = bitcast float* %4494 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4495, align 16, !tbaa !2
  %4496 = getelementptr inbounds float, float* %4494, i64 4
  %4497 = bitcast float* %4496 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4497, align 16, !tbaa !2
  %4498 = or i64 %4493, 8
  %4499 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4498
  %4500 = bitcast float* %4499 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4500, align 16, !tbaa !2
  %4501 = getelementptr inbounds float, float* %4499, i64 4
  %4502 = bitcast float* %4501 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4502, align 16, !tbaa !2
  %4503 = or i64 %4493, 16
  %4504 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4503
  %4505 = bitcast float* %4504 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4505, align 16, !tbaa !2
  %4506 = getelementptr inbounds float, float* %4504, i64 4
  %4507 = bitcast float* %4506 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4507, align 16, !tbaa !2
  %4508 = or i64 %4493, 24
  %4509 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4508
  %4510 = bitcast float* %4509 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4510, align 16, !tbaa !2
  %4511 = getelementptr inbounds float, float* %4509, i64 4
  %4512 = bitcast float* %4511 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4512, align 16, !tbaa !2
  %4513 = or i64 %4493, 32
  %4514 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4513
  %4515 = bitcast float* %4514 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4515, align 16, !tbaa !2
  %4516 = getelementptr inbounds float, float* %4514, i64 4
  %4517 = bitcast float* %4516 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4517, align 16, !tbaa !2
  %4518 = or i64 %4493, 40
  %4519 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4518
  %4520 = bitcast float* %4519 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4520, align 16, !tbaa !2
  %4521 = getelementptr inbounds float, float* %4519, i64 4
  %4522 = bitcast float* %4521 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4522, align 16, !tbaa !2
  %4523 = or i64 %4493, 48
  %4524 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4523
  %4525 = bitcast float* %4524 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4525, align 16, !tbaa !2
  %4526 = getelementptr inbounds float, float* %4524, i64 4
  %4527 = bitcast float* %4526 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4527, align 16, !tbaa !2
  %4528 = or i64 %4493, 56
  %4529 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4528
  %4530 = bitcast float* %4529 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4530, align 16, !tbaa !2
  %4531 = getelementptr inbounds float, float* %4529, i64 4
  %4532 = bitcast float* %4531 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4532, align 16, !tbaa !2
  %4533 = add nuw nsw i64 %4493, 64
  %4534 = icmp eq i64 %4533, 32000
  br i1 %4534, label %15603, label %4492, !llvm.loop !98

4535:                                             ; preds = %4445
  %4536 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0)) #15
  %4537 = icmp eq i32 %4536, 0
  br i1 %4537, label %4538, label %4810

4538:                                             ; preds = %4535, %4538
  %4539 = phi i64 [ %4668, %4538 ], [ 0, %4535 ]
  %4540 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 0
  %4541 = bitcast float* %4540 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4541, align 16, !tbaa !2
  %4542 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 4
  %4543 = bitcast float* %4542 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4543, align 16, !tbaa !2
  %4544 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 8
  %4545 = bitcast float* %4544 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4545, align 16, !tbaa !2
  %4546 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 12
  %4547 = bitcast float* %4546 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4547, align 16, !tbaa !2
  %4548 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 16
  %4549 = bitcast float* %4548 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4549, align 16, !tbaa !2
  %4550 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 20
  %4551 = bitcast float* %4550 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4551, align 16, !tbaa !2
  %4552 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 24
  %4553 = bitcast float* %4552 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4553, align 16, !tbaa !2
  %4554 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 28
  %4555 = bitcast float* %4554 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4555, align 16, !tbaa !2
  %4556 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 32
  %4557 = bitcast float* %4556 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4557, align 16, !tbaa !2
  %4558 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 36
  %4559 = bitcast float* %4558 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4559, align 16, !tbaa !2
  %4560 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 40
  %4561 = bitcast float* %4560 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4561, align 16, !tbaa !2
  %4562 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 44
  %4563 = bitcast float* %4562 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4563, align 16, !tbaa !2
  %4564 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 48
  %4565 = bitcast float* %4564 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4565, align 16, !tbaa !2
  %4566 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 52
  %4567 = bitcast float* %4566 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4567, align 16, !tbaa !2
  %4568 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 56
  %4569 = bitcast float* %4568 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4569, align 16, !tbaa !2
  %4570 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 60
  %4571 = bitcast float* %4570 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4571, align 16, !tbaa !2
  %4572 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 64
  %4573 = bitcast float* %4572 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4573, align 16, !tbaa !2
  %4574 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 68
  %4575 = bitcast float* %4574 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4575, align 16, !tbaa !2
  %4576 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 72
  %4577 = bitcast float* %4576 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4577, align 16, !tbaa !2
  %4578 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 76
  %4579 = bitcast float* %4578 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4579, align 16, !tbaa !2
  %4580 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 80
  %4581 = bitcast float* %4580 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4581, align 16, !tbaa !2
  %4582 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 84
  %4583 = bitcast float* %4582 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4583, align 16, !tbaa !2
  %4584 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 88
  %4585 = bitcast float* %4584 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4585, align 16, !tbaa !2
  %4586 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 92
  %4587 = bitcast float* %4586 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4587, align 16, !tbaa !2
  %4588 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 96
  %4589 = bitcast float* %4588 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4589, align 16, !tbaa !2
  %4590 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 100
  %4591 = bitcast float* %4590 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4591, align 16, !tbaa !2
  %4592 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 104
  %4593 = bitcast float* %4592 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4593, align 16, !tbaa !2
  %4594 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 108
  %4595 = bitcast float* %4594 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4595, align 16, !tbaa !2
  %4596 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 112
  %4597 = bitcast float* %4596 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4597, align 16, !tbaa !2
  %4598 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 116
  %4599 = bitcast float* %4598 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4599, align 16, !tbaa !2
  %4600 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 120
  %4601 = bitcast float* %4600 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4601, align 16, !tbaa !2
  %4602 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 124
  %4603 = bitcast float* %4602 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4603, align 16, !tbaa !2
  %4604 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 128
  %4605 = bitcast float* %4604 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4605, align 16, !tbaa !2
  %4606 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 132
  %4607 = bitcast float* %4606 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4607, align 16, !tbaa !2
  %4608 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 136
  %4609 = bitcast float* %4608 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4609, align 16, !tbaa !2
  %4610 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 140
  %4611 = bitcast float* %4610 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4611, align 16, !tbaa !2
  %4612 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 144
  %4613 = bitcast float* %4612 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4613, align 16, !tbaa !2
  %4614 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 148
  %4615 = bitcast float* %4614 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4615, align 16, !tbaa !2
  %4616 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 152
  %4617 = bitcast float* %4616 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4617, align 16, !tbaa !2
  %4618 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 156
  %4619 = bitcast float* %4618 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4619, align 16, !tbaa !2
  %4620 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 160
  %4621 = bitcast float* %4620 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4621, align 16, !tbaa !2
  %4622 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 164
  %4623 = bitcast float* %4622 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4623, align 16, !tbaa !2
  %4624 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 168
  %4625 = bitcast float* %4624 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4625, align 16, !tbaa !2
  %4626 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 172
  %4627 = bitcast float* %4626 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4627, align 16, !tbaa !2
  %4628 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 176
  %4629 = bitcast float* %4628 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4629, align 16, !tbaa !2
  %4630 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 180
  %4631 = bitcast float* %4630 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4631, align 16, !tbaa !2
  %4632 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 184
  %4633 = bitcast float* %4632 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4633, align 16, !tbaa !2
  %4634 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 188
  %4635 = bitcast float* %4634 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4635, align 16, !tbaa !2
  %4636 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 192
  %4637 = bitcast float* %4636 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4637, align 16, !tbaa !2
  %4638 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 196
  %4639 = bitcast float* %4638 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4639, align 16, !tbaa !2
  %4640 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 200
  %4641 = bitcast float* %4640 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4641, align 16, !tbaa !2
  %4642 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 204
  %4643 = bitcast float* %4642 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4643, align 16, !tbaa !2
  %4644 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 208
  %4645 = bitcast float* %4644 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4645, align 16, !tbaa !2
  %4646 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 212
  %4647 = bitcast float* %4646 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4647, align 16, !tbaa !2
  %4648 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 216
  %4649 = bitcast float* %4648 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4649, align 16, !tbaa !2
  %4650 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 220
  %4651 = bitcast float* %4650 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4651, align 16, !tbaa !2
  %4652 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 224
  %4653 = bitcast float* %4652 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4653, align 16, !tbaa !2
  %4654 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 228
  %4655 = bitcast float* %4654 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4655, align 16, !tbaa !2
  %4656 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 232
  %4657 = bitcast float* %4656 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4657, align 16, !tbaa !2
  %4658 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 236
  %4659 = bitcast float* %4658 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4659, align 16, !tbaa !2
  %4660 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 240
  %4661 = bitcast float* %4660 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4661, align 16, !tbaa !2
  %4662 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 244
  %4663 = bitcast float* %4662 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4663, align 16, !tbaa !2
  %4664 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 248
  %4665 = bitcast float* %4664 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4665, align 16, !tbaa !2
  %4666 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4539, i64 252
  %4667 = bitcast float* %4666 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4667, align 16, !tbaa !2
  %4668 = add nuw nsw i64 %4539, 1
  %4669 = icmp eq i64 %4668, 256
  br i1 %4669, label %4670, label %4538

4670:                                             ; preds = %4538, %4670
  %4671 = phi i64 [ %4672, %4670 ], [ 0, %4538 ]
  %4672 = add nuw nsw i64 %4671, 1
  %4673 = trunc i64 %4672 to i32
  %4674 = mul nsw i32 %4673, %4673
  %4675 = sitofp i32 %4674 to float
  %4676 = fdiv float 1.000000e+00, %4675
  %4677 = insertelement <4 x float> undef, float %4676, i32 0
  %4678 = shufflevector <4 x float> %4677, <4 x float> undef, <4 x i32> zeroinitializer
  %4679 = insertelement <4 x float> undef, float %4676, i32 0
  %4680 = shufflevector <4 x float> %4679, <4 x float> undef, <4 x i32> zeroinitializer
  %4681 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 0
  %4682 = bitcast float* %4681 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4682, align 16, !tbaa !2
  %4683 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 4
  %4684 = bitcast float* %4683 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4684, align 16, !tbaa !2
  %4685 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 8
  %4686 = bitcast float* %4685 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4686, align 16, !tbaa !2
  %4687 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 12
  %4688 = bitcast float* %4687 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4688, align 16, !tbaa !2
  %4689 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 16
  %4690 = bitcast float* %4689 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4690, align 16, !tbaa !2
  %4691 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 20
  %4692 = bitcast float* %4691 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4692, align 16, !tbaa !2
  %4693 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 24
  %4694 = bitcast float* %4693 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4694, align 16, !tbaa !2
  %4695 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 28
  %4696 = bitcast float* %4695 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4696, align 16, !tbaa !2
  %4697 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 32
  %4698 = bitcast float* %4697 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4698, align 16, !tbaa !2
  %4699 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 36
  %4700 = bitcast float* %4699 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4700, align 16, !tbaa !2
  %4701 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 40
  %4702 = bitcast float* %4701 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4702, align 16, !tbaa !2
  %4703 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 44
  %4704 = bitcast float* %4703 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4704, align 16, !tbaa !2
  %4705 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 48
  %4706 = bitcast float* %4705 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4706, align 16, !tbaa !2
  %4707 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 52
  %4708 = bitcast float* %4707 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4708, align 16, !tbaa !2
  %4709 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 56
  %4710 = bitcast float* %4709 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4710, align 16, !tbaa !2
  %4711 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 60
  %4712 = bitcast float* %4711 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4712, align 16, !tbaa !2
  %4713 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 64
  %4714 = bitcast float* %4713 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4714, align 16, !tbaa !2
  %4715 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 68
  %4716 = bitcast float* %4715 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4716, align 16, !tbaa !2
  %4717 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 72
  %4718 = bitcast float* %4717 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4718, align 16, !tbaa !2
  %4719 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 76
  %4720 = bitcast float* %4719 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4720, align 16, !tbaa !2
  %4721 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 80
  %4722 = bitcast float* %4721 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4722, align 16, !tbaa !2
  %4723 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 84
  %4724 = bitcast float* %4723 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4724, align 16, !tbaa !2
  %4725 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 88
  %4726 = bitcast float* %4725 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4726, align 16, !tbaa !2
  %4727 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 92
  %4728 = bitcast float* %4727 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4728, align 16, !tbaa !2
  %4729 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 96
  %4730 = bitcast float* %4729 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4730, align 16, !tbaa !2
  %4731 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 100
  %4732 = bitcast float* %4731 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4732, align 16, !tbaa !2
  %4733 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 104
  %4734 = bitcast float* %4733 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4734, align 16, !tbaa !2
  %4735 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 108
  %4736 = bitcast float* %4735 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4736, align 16, !tbaa !2
  %4737 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 112
  %4738 = bitcast float* %4737 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4738, align 16, !tbaa !2
  %4739 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 116
  %4740 = bitcast float* %4739 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4740, align 16, !tbaa !2
  %4741 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 120
  %4742 = bitcast float* %4741 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4742, align 16, !tbaa !2
  %4743 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 124
  %4744 = bitcast float* %4743 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4744, align 16, !tbaa !2
  %4745 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 128
  %4746 = bitcast float* %4745 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4746, align 16, !tbaa !2
  %4747 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 132
  %4748 = bitcast float* %4747 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4748, align 16, !tbaa !2
  %4749 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 136
  %4750 = bitcast float* %4749 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4750, align 16, !tbaa !2
  %4751 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 140
  %4752 = bitcast float* %4751 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4752, align 16, !tbaa !2
  %4753 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 144
  %4754 = bitcast float* %4753 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4754, align 16, !tbaa !2
  %4755 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 148
  %4756 = bitcast float* %4755 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4756, align 16, !tbaa !2
  %4757 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 152
  %4758 = bitcast float* %4757 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4758, align 16, !tbaa !2
  %4759 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 156
  %4760 = bitcast float* %4759 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4760, align 16, !tbaa !2
  %4761 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 160
  %4762 = bitcast float* %4761 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4762, align 16, !tbaa !2
  %4763 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 164
  %4764 = bitcast float* %4763 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4764, align 16, !tbaa !2
  %4765 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 168
  %4766 = bitcast float* %4765 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4766, align 16, !tbaa !2
  %4767 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 172
  %4768 = bitcast float* %4767 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4768, align 16, !tbaa !2
  %4769 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 176
  %4770 = bitcast float* %4769 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4770, align 16, !tbaa !2
  %4771 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 180
  %4772 = bitcast float* %4771 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4772, align 16, !tbaa !2
  %4773 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 184
  %4774 = bitcast float* %4773 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4774, align 16, !tbaa !2
  %4775 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 188
  %4776 = bitcast float* %4775 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4776, align 16, !tbaa !2
  %4777 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 192
  %4778 = bitcast float* %4777 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4778, align 16, !tbaa !2
  %4779 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 196
  %4780 = bitcast float* %4779 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4780, align 16, !tbaa !2
  %4781 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 200
  %4782 = bitcast float* %4781 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4782, align 16, !tbaa !2
  %4783 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 204
  %4784 = bitcast float* %4783 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4784, align 16, !tbaa !2
  %4785 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 208
  %4786 = bitcast float* %4785 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4786, align 16, !tbaa !2
  %4787 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 212
  %4788 = bitcast float* %4787 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4788, align 16, !tbaa !2
  %4789 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 216
  %4790 = bitcast float* %4789 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4790, align 16, !tbaa !2
  %4791 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 220
  %4792 = bitcast float* %4791 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4792, align 16, !tbaa !2
  %4793 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 224
  %4794 = bitcast float* %4793 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4794, align 16, !tbaa !2
  %4795 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 228
  %4796 = bitcast float* %4795 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4796, align 16, !tbaa !2
  %4797 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 232
  %4798 = bitcast float* %4797 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4798, align 16, !tbaa !2
  %4799 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 236
  %4800 = bitcast float* %4799 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4800, align 16, !tbaa !2
  %4801 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 240
  %4802 = bitcast float* %4801 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4802, align 16, !tbaa !2
  %4803 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 244
  %4804 = bitcast float* %4803 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4804, align 16, !tbaa !2
  %4805 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 248
  %4806 = bitcast float* %4805 to <4 x float>*
  store <4 x float> %4678, <4 x float>* %4806, align 16, !tbaa !2
  %4807 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4671, i64 252
  %4808 = bitcast float* %4807 to <4 x float>*
  store <4 x float> %4680, <4 x float>* %4808, align 16, !tbaa !2
  %4809 = icmp eq i64 %4672, 256
  br i1 %4809, label %15603, label %4670

4810:                                             ; preds = %4535
  %4811 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0)) #15
  %4812 = icmp eq i32 %4811, 0
  br i1 %4812, label %4813, label %4946

4813:                                             ; preds = %4810, %4813
  %4814 = phi i64 [ %4943, %4813 ], [ 0, %4810 ]
  %4815 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 0
  %4816 = bitcast float* %4815 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4816, align 16, !tbaa !2
  %4817 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 4
  %4818 = bitcast float* %4817 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4818, align 16, !tbaa !2
  %4819 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 8
  %4820 = bitcast float* %4819 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4820, align 16, !tbaa !2
  %4821 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 12
  %4822 = bitcast float* %4821 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4822, align 16, !tbaa !2
  %4823 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 16
  %4824 = bitcast float* %4823 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4824, align 16, !tbaa !2
  %4825 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 20
  %4826 = bitcast float* %4825 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4826, align 16, !tbaa !2
  %4827 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 24
  %4828 = bitcast float* %4827 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4828, align 16, !tbaa !2
  %4829 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 28
  %4830 = bitcast float* %4829 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4830, align 16, !tbaa !2
  %4831 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 32
  %4832 = bitcast float* %4831 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4832, align 16, !tbaa !2
  %4833 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 36
  %4834 = bitcast float* %4833 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4834, align 16, !tbaa !2
  %4835 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 40
  %4836 = bitcast float* %4835 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4836, align 16, !tbaa !2
  %4837 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 44
  %4838 = bitcast float* %4837 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4838, align 16, !tbaa !2
  %4839 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 48
  %4840 = bitcast float* %4839 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4840, align 16, !tbaa !2
  %4841 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 52
  %4842 = bitcast float* %4841 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4842, align 16, !tbaa !2
  %4843 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 56
  %4844 = bitcast float* %4843 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4844, align 16, !tbaa !2
  %4845 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 60
  %4846 = bitcast float* %4845 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4846, align 16, !tbaa !2
  %4847 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 64
  %4848 = bitcast float* %4847 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4848, align 16, !tbaa !2
  %4849 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 68
  %4850 = bitcast float* %4849 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4850, align 16, !tbaa !2
  %4851 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 72
  %4852 = bitcast float* %4851 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4852, align 16, !tbaa !2
  %4853 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 76
  %4854 = bitcast float* %4853 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4854, align 16, !tbaa !2
  %4855 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 80
  %4856 = bitcast float* %4855 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4856, align 16, !tbaa !2
  %4857 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 84
  %4858 = bitcast float* %4857 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4858, align 16, !tbaa !2
  %4859 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 88
  %4860 = bitcast float* %4859 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4860, align 16, !tbaa !2
  %4861 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 92
  %4862 = bitcast float* %4861 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4862, align 16, !tbaa !2
  %4863 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 96
  %4864 = bitcast float* %4863 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4864, align 16, !tbaa !2
  %4865 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 100
  %4866 = bitcast float* %4865 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4866, align 16, !tbaa !2
  %4867 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 104
  %4868 = bitcast float* %4867 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4868, align 16, !tbaa !2
  %4869 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 108
  %4870 = bitcast float* %4869 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4870, align 16, !tbaa !2
  %4871 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 112
  %4872 = bitcast float* %4871 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4872, align 16, !tbaa !2
  %4873 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 116
  %4874 = bitcast float* %4873 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4874, align 16, !tbaa !2
  %4875 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 120
  %4876 = bitcast float* %4875 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4876, align 16, !tbaa !2
  %4877 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 124
  %4878 = bitcast float* %4877 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4878, align 16, !tbaa !2
  %4879 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 128
  %4880 = bitcast float* %4879 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4880, align 16, !tbaa !2
  %4881 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 132
  %4882 = bitcast float* %4881 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4882, align 16, !tbaa !2
  %4883 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 136
  %4884 = bitcast float* %4883 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4884, align 16, !tbaa !2
  %4885 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 140
  %4886 = bitcast float* %4885 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4886, align 16, !tbaa !2
  %4887 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 144
  %4888 = bitcast float* %4887 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4888, align 16, !tbaa !2
  %4889 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 148
  %4890 = bitcast float* %4889 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4890, align 16, !tbaa !2
  %4891 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 152
  %4892 = bitcast float* %4891 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4892, align 16, !tbaa !2
  %4893 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 156
  %4894 = bitcast float* %4893 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4894, align 16, !tbaa !2
  %4895 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 160
  %4896 = bitcast float* %4895 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4896, align 16, !tbaa !2
  %4897 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 164
  %4898 = bitcast float* %4897 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4898, align 16, !tbaa !2
  %4899 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 168
  %4900 = bitcast float* %4899 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4900, align 16, !tbaa !2
  %4901 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 172
  %4902 = bitcast float* %4901 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4902, align 16, !tbaa !2
  %4903 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 176
  %4904 = bitcast float* %4903 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4904, align 16, !tbaa !2
  %4905 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 180
  %4906 = bitcast float* %4905 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4906, align 16, !tbaa !2
  %4907 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 184
  %4908 = bitcast float* %4907 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4908, align 16, !tbaa !2
  %4909 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 188
  %4910 = bitcast float* %4909 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4910, align 16, !tbaa !2
  %4911 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 192
  %4912 = bitcast float* %4911 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4912, align 16, !tbaa !2
  %4913 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 196
  %4914 = bitcast float* %4913 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4914, align 16, !tbaa !2
  %4915 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 200
  %4916 = bitcast float* %4915 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4916, align 16, !tbaa !2
  %4917 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 204
  %4918 = bitcast float* %4917 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4918, align 16, !tbaa !2
  %4919 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 208
  %4920 = bitcast float* %4919 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4920, align 16, !tbaa !2
  %4921 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 212
  %4922 = bitcast float* %4921 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4922, align 16, !tbaa !2
  %4923 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 216
  %4924 = bitcast float* %4923 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4924, align 16, !tbaa !2
  %4925 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 220
  %4926 = bitcast float* %4925 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4926, align 16, !tbaa !2
  %4927 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 224
  %4928 = bitcast float* %4927 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4928, align 16, !tbaa !2
  %4929 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 228
  %4930 = bitcast float* %4929 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4930, align 16, !tbaa !2
  %4931 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 232
  %4932 = bitcast float* %4931 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4932, align 16, !tbaa !2
  %4933 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 236
  %4934 = bitcast float* %4933 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4934, align 16, !tbaa !2
  %4935 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 240
  %4936 = bitcast float* %4935 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4936, align 16, !tbaa !2
  %4937 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 244
  %4938 = bitcast float* %4937 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4938, align 16, !tbaa !2
  %4939 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 248
  %4940 = bitcast float* %4939 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4940, align 16, !tbaa !2
  %4941 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4814, i64 252
  %4942 = bitcast float* %4941 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4942, align 16, !tbaa !2
  %4943 = add nuw nsw i64 %4814, 1
  %4944 = icmp eq i64 %4943, 256
  br i1 %4944, label %4945, label %4813

4945:                                             ; preds = %4813
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(262144) bitcast ([256 x [256 x float]]* @bb to i8*), i8 0, i64 262144, i1 false)
  br label %15603

4946:                                             ; preds = %4810
  %4947 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0)) #15
  %4948 = icmp eq i32 %4947, 0
  br i1 %4948, label %4949, label %5366

4949:                                             ; preds = %4946, %4949
  %4950 = phi i64 [ %4951, %4949 ], [ 0, %4946 ]
  %4951 = add nuw nsw i64 %4950, 1
  %4952 = trunc i64 %4951 to i32
  %4953 = sitofp i32 %4952 to float
  %4954 = fdiv float 1.000000e+00, %4953
  %4955 = insertelement <4 x float> undef, float %4954, i32 0
  %4956 = shufflevector <4 x float> %4955, <4 x float> undef, <4 x i32> zeroinitializer
  %4957 = insertelement <4 x float> undef, float %4954, i32 0
  %4958 = shufflevector <4 x float> %4957, <4 x float> undef, <4 x i32> zeroinitializer
  %4959 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 0
  %4960 = bitcast float* %4959 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4960, align 16, !tbaa !2
  %4961 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 4
  %4962 = bitcast float* %4961 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4962, align 16, !tbaa !2
  %4963 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 8
  %4964 = bitcast float* %4963 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4964, align 16, !tbaa !2
  %4965 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 12
  %4966 = bitcast float* %4965 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4966, align 16, !tbaa !2
  %4967 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 16
  %4968 = bitcast float* %4967 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4968, align 16, !tbaa !2
  %4969 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 20
  %4970 = bitcast float* %4969 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4970, align 16, !tbaa !2
  %4971 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 24
  %4972 = bitcast float* %4971 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4972, align 16, !tbaa !2
  %4973 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 28
  %4974 = bitcast float* %4973 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4974, align 16, !tbaa !2
  %4975 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 32
  %4976 = bitcast float* %4975 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4976, align 16, !tbaa !2
  %4977 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 36
  %4978 = bitcast float* %4977 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4978, align 16, !tbaa !2
  %4979 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 40
  %4980 = bitcast float* %4979 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4980, align 16, !tbaa !2
  %4981 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 44
  %4982 = bitcast float* %4981 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4982, align 16, !tbaa !2
  %4983 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 48
  %4984 = bitcast float* %4983 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4984, align 16, !tbaa !2
  %4985 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 52
  %4986 = bitcast float* %4985 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4986, align 16, !tbaa !2
  %4987 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 56
  %4988 = bitcast float* %4987 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4988, align 16, !tbaa !2
  %4989 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 60
  %4990 = bitcast float* %4989 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4990, align 16, !tbaa !2
  %4991 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 64
  %4992 = bitcast float* %4991 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4992, align 16, !tbaa !2
  %4993 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 68
  %4994 = bitcast float* %4993 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4994, align 16, !tbaa !2
  %4995 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 72
  %4996 = bitcast float* %4995 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %4996, align 16, !tbaa !2
  %4997 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 76
  %4998 = bitcast float* %4997 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %4998, align 16, !tbaa !2
  %4999 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 80
  %5000 = bitcast float* %4999 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5000, align 16, !tbaa !2
  %5001 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 84
  %5002 = bitcast float* %5001 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5002, align 16, !tbaa !2
  %5003 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 88
  %5004 = bitcast float* %5003 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5004, align 16, !tbaa !2
  %5005 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 92
  %5006 = bitcast float* %5005 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5006, align 16, !tbaa !2
  %5007 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 96
  %5008 = bitcast float* %5007 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5008, align 16, !tbaa !2
  %5009 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 100
  %5010 = bitcast float* %5009 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5010, align 16, !tbaa !2
  %5011 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 104
  %5012 = bitcast float* %5011 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5012, align 16, !tbaa !2
  %5013 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 108
  %5014 = bitcast float* %5013 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5014, align 16, !tbaa !2
  %5015 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 112
  %5016 = bitcast float* %5015 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5016, align 16, !tbaa !2
  %5017 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 116
  %5018 = bitcast float* %5017 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5018, align 16, !tbaa !2
  %5019 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 120
  %5020 = bitcast float* %5019 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5020, align 16, !tbaa !2
  %5021 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 124
  %5022 = bitcast float* %5021 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5022, align 16, !tbaa !2
  %5023 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 128
  %5024 = bitcast float* %5023 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5024, align 16, !tbaa !2
  %5025 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 132
  %5026 = bitcast float* %5025 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5026, align 16, !tbaa !2
  %5027 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 136
  %5028 = bitcast float* %5027 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5028, align 16, !tbaa !2
  %5029 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 140
  %5030 = bitcast float* %5029 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5030, align 16, !tbaa !2
  %5031 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 144
  %5032 = bitcast float* %5031 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5032, align 16, !tbaa !2
  %5033 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 148
  %5034 = bitcast float* %5033 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5034, align 16, !tbaa !2
  %5035 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 152
  %5036 = bitcast float* %5035 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5036, align 16, !tbaa !2
  %5037 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 156
  %5038 = bitcast float* %5037 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5038, align 16, !tbaa !2
  %5039 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 160
  %5040 = bitcast float* %5039 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5040, align 16, !tbaa !2
  %5041 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 164
  %5042 = bitcast float* %5041 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5042, align 16, !tbaa !2
  %5043 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 168
  %5044 = bitcast float* %5043 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5044, align 16, !tbaa !2
  %5045 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 172
  %5046 = bitcast float* %5045 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5046, align 16, !tbaa !2
  %5047 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 176
  %5048 = bitcast float* %5047 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5048, align 16, !tbaa !2
  %5049 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 180
  %5050 = bitcast float* %5049 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5050, align 16, !tbaa !2
  %5051 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 184
  %5052 = bitcast float* %5051 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5052, align 16, !tbaa !2
  %5053 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 188
  %5054 = bitcast float* %5053 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5054, align 16, !tbaa !2
  %5055 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 192
  %5056 = bitcast float* %5055 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5056, align 16, !tbaa !2
  %5057 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 196
  %5058 = bitcast float* %5057 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5058, align 16, !tbaa !2
  %5059 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 200
  %5060 = bitcast float* %5059 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5060, align 16, !tbaa !2
  %5061 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 204
  %5062 = bitcast float* %5061 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5062, align 16, !tbaa !2
  %5063 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 208
  %5064 = bitcast float* %5063 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5064, align 16, !tbaa !2
  %5065 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 212
  %5066 = bitcast float* %5065 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5066, align 16, !tbaa !2
  %5067 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 216
  %5068 = bitcast float* %5067 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5068, align 16, !tbaa !2
  %5069 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 220
  %5070 = bitcast float* %5069 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5070, align 16, !tbaa !2
  %5071 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 224
  %5072 = bitcast float* %5071 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5072, align 16, !tbaa !2
  %5073 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 228
  %5074 = bitcast float* %5073 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5074, align 16, !tbaa !2
  %5075 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 232
  %5076 = bitcast float* %5075 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5076, align 16, !tbaa !2
  %5077 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 236
  %5078 = bitcast float* %5077 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5078, align 16, !tbaa !2
  %5079 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 240
  %5080 = bitcast float* %5079 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5080, align 16, !tbaa !2
  %5081 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 244
  %5082 = bitcast float* %5081 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5082, align 16, !tbaa !2
  %5083 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 248
  %5084 = bitcast float* %5083 to <4 x float>*
  store <4 x float> %4956, <4 x float>* %5084, align 16, !tbaa !2
  %5085 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4950, i64 252
  %5086 = bitcast float* %5085 to <4 x float>*
  store <4 x float> %4958, <4 x float>* %5086, align 16, !tbaa !2
  %5087 = icmp eq i64 %4951, 256
  br i1 %5087, label %5088, label %4949

5088:                                             ; preds = %4949, %5088
  %5089 = phi i64 [ %5090, %5088 ], [ 0, %4949 ]
  %5090 = add nuw nsw i64 %5089, 1
  %5091 = trunc i64 %5090 to i32
  %5092 = sitofp i32 %5091 to float
  %5093 = fdiv float 1.000000e+00, %5092
  %5094 = insertelement <4 x float> undef, float %5093, i32 0
  %5095 = shufflevector <4 x float> %5094, <4 x float> undef, <4 x i32> zeroinitializer
  %5096 = insertelement <4 x float> undef, float %5093, i32 0
  %5097 = shufflevector <4 x float> %5096, <4 x float> undef, <4 x i32> zeroinitializer
  %5098 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 0
  %5099 = bitcast float* %5098 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5099, align 16, !tbaa !2
  %5100 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 4
  %5101 = bitcast float* %5100 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5101, align 16, !tbaa !2
  %5102 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 8
  %5103 = bitcast float* %5102 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5103, align 16, !tbaa !2
  %5104 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 12
  %5105 = bitcast float* %5104 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5105, align 16, !tbaa !2
  %5106 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 16
  %5107 = bitcast float* %5106 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5107, align 16, !tbaa !2
  %5108 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 20
  %5109 = bitcast float* %5108 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5109, align 16, !tbaa !2
  %5110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 24
  %5111 = bitcast float* %5110 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5111, align 16, !tbaa !2
  %5112 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 28
  %5113 = bitcast float* %5112 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5113, align 16, !tbaa !2
  %5114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 32
  %5115 = bitcast float* %5114 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5115, align 16, !tbaa !2
  %5116 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 36
  %5117 = bitcast float* %5116 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5117, align 16, !tbaa !2
  %5118 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 40
  %5119 = bitcast float* %5118 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5119, align 16, !tbaa !2
  %5120 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 44
  %5121 = bitcast float* %5120 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5121, align 16, !tbaa !2
  %5122 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 48
  %5123 = bitcast float* %5122 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5123, align 16, !tbaa !2
  %5124 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 52
  %5125 = bitcast float* %5124 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5125, align 16, !tbaa !2
  %5126 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 56
  %5127 = bitcast float* %5126 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5127, align 16, !tbaa !2
  %5128 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 60
  %5129 = bitcast float* %5128 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5129, align 16, !tbaa !2
  %5130 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 64
  %5131 = bitcast float* %5130 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5131, align 16, !tbaa !2
  %5132 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 68
  %5133 = bitcast float* %5132 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5133, align 16, !tbaa !2
  %5134 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 72
  %5135 = bitcast float* %5134 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5135, align 16, !tbaa !2
  %5136 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 76
  %5137 = bitcast float* %5136 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5137, align 16, !tbaa !2
  %5138 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 80
  %5139 = bitcast float* %5138 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5139, align 16, !tbaa !2
  %5140 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 84
  %5141 = bitcast float* %5140 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5141, align 16, !tbaa !2
  %5142 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 88
  %5143 = bitcast float* %5142 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5143, align 16, !tbaa !2
  %5144 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 92
  %5145 = bitcast float* %5144 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5145, align 16, !tbaa !2
  %5146 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 96
  %5147 = bitcast float* %5146 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5147, align 16, !tbaa !2
  %5148 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 100
  %5149 = bitcast float* %5148 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5149, align 16, !tbaa !2
  %5150 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 104
  %5151 = bitcast float* %5150 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5151, align 16, !tbaa !2
  %5152 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 108
  %5153 = bitcast float* %5152 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5153, align 16, !tbaa !2
  %5154 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 112
  %5155 = bitcast float* %5154 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5155, align 16, !tbaa !2
  %5156 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 116
  %5157 = bitcast float* %5156 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5157, align 16, !tbaa !2
  %5158 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 120
  %5159 = bitcast float* %5158 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5159, align 16, !tbaa !2
  %5160 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 124
  %5161 = bitcast float* %5160 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5161, align 16, !tbaa !2
  %5162 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 128
  %5163 = bitcast float* %5162 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5163, align 16, !tbaa !2
  %5164 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 132
  %5165 = bitcast float* %5164 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5165, align 16, !tbaa !2
  %5166 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 136
  %5167 = bitcast float* %5166 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5167, align 16, !tbaa !2
  %5168 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 140
  %5169 = bitcast float* %5168 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5169, align 16, !tbaa !2
  %5170 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 144
  %5171 = bitcast float* %5170 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5171, align 16, !tbaa !2
  %5172 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 148
  %5173 = bitcast float* %5172 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5173, align 16, !tbaa !2
  %5174 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 152
  %5175 = bitcast float* %5174 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5175, align 16, !tbaa !2
  %5176 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 156
  %5177 = bitcast float* %5176 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5177, align 16, !tbaa !2
  %5178 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 160
  %5179 = bitcast float* %5178 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5179, align 16, !tbaa !2
  %5180 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 164
  %5181 = bitcast float* %5180 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5181, align 16, !tbaa !2
  %5182 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 168
  %5183 = bitcast float* %5182 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5183, align 16, !tbaa !2
  %5184 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 172
  %5185 = bitcast float* %5184 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5185, align 16, !tbaa !2
  %5186 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 176
  %5187 = bitcast float* %5186 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5187, align 16, !tbaa !2
  %5188 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 180
  %5189 = bitcast float* %5188 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5189, align 16, !tbaa !2
  %5190 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 184
  %5191 = bitcast float* %5190 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5191, align 16, !tbaa !2
  %5192 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 188
  %5193 = bitcast float* %5192 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5193, align 16, !tbaa !2
  %5194 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 192
  %5195 = bitcast float* %5194 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5195, align 16, !tbaa !2
  %5196 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 196
  %5197 = bitcast float* %5196 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5197, align 16, !tbaa !2
  %5198 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 200
  %5199 = bitcast float* %5198 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5199, align 16, !tbaa !2
  %5200 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 204
  %5201 = bitcast float* %5200 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5201, align 16, !tbaa !2
  %5202 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 208
  %5203 = bitcast float* %5202 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5203, align 16, !tbaa !2
  %5204 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 212
  %5205 = bitcast float* %5204 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5205, align 16, !tbaa !2
  %5206 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 216
  %5207 = bitcast float* %5206 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5207, align 16, !tbaa !2
  %5208 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 220
  %5209 = bitcast float* %5208 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5209, align 16, !tbaa !2
  %5210 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 224
  %5211 = bitcast float* %5210 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5211, align 16, !tbaa !2
  %5212 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 228
  %5213 = bitcast float* %5212 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5213, align 16, !tbaa !2
  %5214 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 232
  %5215 = bitcast float* %5214 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5215, align 16, !tbaa !2
  %5216 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 236
  %5217 = bitcast float* %5216 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5217, align 16, !tbaa !2
  %5218 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 240
  %5219 = bitcast float* %5218 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5219, align 16, !tbaa !2
  %5220 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 244
  %5221 = bitcast float* %5220 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5221, align 16, !tbaa !2
  %5222 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 248
  %5223 = bitcast float* %5222 to <4 x float>*
  store <4 x float> %5095, <4 x float>* %5223, align 16, !tbaa !2
  %5224 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5089, i64 252
  %5225 = bitcast float* %5224 to <4 x float>*
  store <4 x float> %5097, <4 x float>* %5225, align 16, !tbaa !2
  %5226 = icmp eq i64 %5090, 256
  br i1 %5226, label %5227, label %5088

5227:                                             ; preds = %5088, %5227
  %5228 = phi i64 [ %5229, %5227 ], [ 0, %5088 ]
  %5229 = add nuw nsw i64 %5228, 1
  %5230 = trunc i64 %5229 to i32
  %5231 = sitofp i32 %5230 to float
  %5232 = fdiv float 1.000000e+00, %5231
  %5233 = insertelement <4 x float> undef, float %5232, i32 0
  %5234 = shufflevector <4 x float> %5233, <4 x float> undef, <4 x i32> zeroinitializer
  %5235 = insertelement <4 x float> undef, float %5232, i32 0
  %5236 = shufflevector <4 x float> %5235, <4 x float> undef, <4 x i32> zeroinitializer
  %5237 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 0
  %5238 = bitcast float* %5237 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5238, align 16, !tbaa !2
  %5239 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 4
  %5240 = bitcast float* %5239 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5240, align 16, !tbaa !2
  %5241 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 8
  %5242 = bitcast float* %5241 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5242, align 16, !tbaa !2
  %5243 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 12
  %5244 = bitcast float* %5243 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5244, align 16, !tbaa !2
  %5245 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 16
  %5246 = bitcast float* %5245 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5246, align 16, !tbaa !2
  %5247 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 20
  %5248 = bitcast float* %5247 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5248, align 16, !tbaa !2
  %5249 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 24
  %5250 = bitcast float* %5249 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5250, align 16, !tbaa !2
  %5251 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 28
  %5252 = bitcast float* %5251 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5252, align 16, !tbaa !2
  %5253 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 32
  %5254 = bitcast float* %5253 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5254, align 16, !tbaa !2
  %5255 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 36
  %5256 = bitcast float* %5255 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5256, align 16, !tbaa !2
  %5257 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 40
  %5258 = bitcast float* %5257 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5258, align 16, !tbaa !2
  %5259 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 44
  %5260 = bitcast float* %5259 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5260, align 16, !tbaa !2
  %5261 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 48
  %5262 = bitcast float* %5261 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5262, align 16, !tbaa !2
  %5263 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 52
  %5264 = bitcast float* %5263 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5264, align 16, !tbaa !2
  %5265 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 56
  %5266 = bitcast float* %5265 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5266, align 16, !tbaa !2
  %5267 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 60
  %5268 = bitcast float* %5267 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5268, align 16, !tbaa !2
  %5269 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 64
  %5270 = bitcast float* %5269 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5270, align 16, !tbaa !2
  %5271 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 68
  %5272 = bitcast float* %5271 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5272, align 16, !tbaa !2
  %5273 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 72
  %5274 = bitcast float* %5273 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5274, align 16, !tbaa !2
  %5275 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 76
  %5276 = bitcast float* %5275 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5276, align 16, !tbaa !2
  %5277 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 80
  %5278 = bitcast float* %5277 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5278, align 16, !tbaa !2
  %5279 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 84
  %5280 = bitcast float* %5279 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5280, align 16, !tbaa !2
  %5281 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 88
  %5282 = bitcast float* %5281 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5282, align 16, !tbaa !2
  %5283 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 92
  %5284 = bitcast float* %5283 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5284, align 16, !tbaa !2
  %5285 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 96
  %5286 = bitcast float* %5285 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5286, align 16, !tbaa !2
  %5287 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 100
  %5288 = bitcast float* %5287 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5288, align 16, !tbaa !2
  %5289 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 104
  %5290 = bitcast float* %5289 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5290, align 16, !tbaa !2
  %5291 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 108
  %5292 = bitcast float* %5291 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5292, align 16, !tbaa !2
  %5293 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 112
  %5294 = bitcast float* %5293 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5294, align 16, !tbaa !2
  %5295 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 116
  %5296 = bitcast float* %5295 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5296, align 16, !tbaa !2
  %5297 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 120
  %5298 = bitcast float* %5297 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5298, align 16, !tbaa !2
  %5299 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 124
  %5300 = bitcast float* %5299 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5300, align 16, !tbaa !2
  %5301 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 128
  %5302 = bitcast float* %5301 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5302, align 16, !tbaa !2
  %5303 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 132
  %5304 = bitcast float* %5303 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5304, align 16, !tbaa !2
  %5305 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 136
  %5306 = bitcast float* %5305 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5306, align 16, !tbaa !2
  %5307 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 140
  %5308 = bitcast float* %5307 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5308, align 16, !tbaa !2
  %5309 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 144
  %5310 = bitcast float* %5309 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5310, align 16, !tbaa !2
  %5311 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 148
  %5312 = bitcast float* %5311 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5312, align 16, !tbaa !2
  %5313 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 152
  %5314 = bitcast float* %5313 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5314, align 16, !tbaa !2
  %5315 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 156
  %5316 = bitcast float* %5315 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5316, align 16, !tbaa !2
  %5317 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 160
  %5318 = bitcast float* %5317 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5318, align 16, !tbaa !2
  %5319 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 164
  %5320 = bitcast float* %5319 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5320, align 16, !tbaa !2
  %5321 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 168
  %5322 = bitcast float* %5321 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5322, align 16, !tbaa !2
  %5323 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 172
  %5324 = bitcast float* %5323 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5324, align 16, !tbaa !2
  %5325 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 176
  %5326 = bitcast float* %5325 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5326, align 16, !tbaa !2
  %5327 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 180
  %5328 = bitcast float* %5327 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5328, align 16, !tbaa !2
  %5329 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 184
  %5330 = bitcast float* %5329 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5330, align 16, !tbaa !2
  %5331 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 188
  %5332 = bitcast float* %5331 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5332, align 16, !tbaa !2
  %5333 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 192
  %5334 = bitcast float* %5333 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5334, align 16, !tbaa !2
  %5335 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 196
  %5336 = bitcast float* %5335 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5336, align 16, !tbaa !2
  %5337 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 200
  %5338 = bitcast float* %5337 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5338, align 16, !tbaa !2
  %5339 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 204
  %5340 = bitcast float* %5339 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5340, align 16, !tbaa !2
  %5341 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 208
  %5342 = bitcast float* %5341 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5342, align 16, !tbaa !2
  %5343 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 212
  %5344 = bitcast float* %5343 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5344, align 16, !tbaa !2
  %5345 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 216
  %5346 = bitcast float* %5345 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5346, align 16, !tbaa !2
  %5347 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 220
  %5348 = bitcast float* %5347 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5348, align 16, !tbaa !2
  %5349 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 224
  %5350 = bitcast float* %5349 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5350, align 16, !tbaa !2
  %5351 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 228
  %5352 = bitcast float* %5351 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5352, align 16, !tbaa !2
  %5353 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 232
  %5354 = bitcast float* %5353 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5354, align 16, !tbaa !2
  %5355 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 236
  %5356 = bitcast float* %5355 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5356, align 16, !tbaa !2
  %5357 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 240
  %5358 = bitcast float* %5357 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5358, align 16, !tbaa !2
  %5359 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 244
  %5360 = bitcast float* %5359 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5360, align 16, !tbaa !2
  %5361 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 248
  %5362 = bitcast float* %5361 to <4 x float>*
  store <4 x float> %5234, <4 x float>* %5362, align 16, !tbaa !2
  %5363 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5228, i64 252
  %5364 = bitcast float* %5363 to <4 x float>*
  store <4 x float> %5236, <4 x float>* %5364, align 16, !tbaa !2
  %5365 = icmp eq i64 %5229, 256
  br i1 %5365, label %15603, label %5227

5366:                                             ; preds = %4946
  %5367 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0)) #15
  %5368 = icmp eq i32 %5367, 0
  br i1 %5368, label %5369, label %5779

5369:                                             ; preds = %5366, %5369
  %5370 = phi i64 [ %5499, %5369 ], [ 0, %5366 ]
  %5371 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 0
  %5372 = bitcast float* %5371 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5372, align 16, !tbaa !2
  %5373 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 4
  %5374 = bitcast float* %5373 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5374, align 16, !tbaa !2
  %5375 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 8
  %5376 = bitcast float* %5375 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5376, align 16, !tbaa !2
  %5377 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 12
  %5378 = bitcast float* %5377 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5378, align 16, !tbaa !2
  %5379 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 16
  %5380 = bitcast float* %5379 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5380, align 16, !tbaa !2
  %5381 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 20
  %5382 = bitcast float* %5381 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5382, align 16, !tbaa !2
  %5383 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 24
  %5384 = bitcast float* %5383 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5384, align 16, !tbaa !2
  %5385 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 28
  %5386 = bitcast float* %5385 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5386, align 16, !tbaa !2
  %5387 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 32
  %5388 = bitcast float* %5387 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5388, align 16, !tbaa !2
  %5389 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 36
  %5390 = bitcast float* %5389 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5390, align 16, !tbaa !2
  %5391 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 40
  %5392 = bitcast float* %5391 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5392, align 16, !tbaa !2
  %5393 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 44
  %5394 = bitcast float* %5393 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5394, align 16, !tbaa !2
  %5395 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 48
  %5396 = bitcast float* %5395 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5396, align 16, !tbaa !2
  %5397 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 52
  %5398 = bitcast float* %5397 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5398, align 16, !tbaa !2
  %5399 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 56
  %5400 = bitcast float* %5399 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5400, align 16, !tbaa !2
  %5401 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 60
  %5402 = bitcast float* %5401 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5402, align 16, !tbaa !2
  %5403 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 64
  %5404 = bitcast float* %5403 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5404, align 16, !tbaa !2
  %5405 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 68
  %5406 = bitcast float* %5405 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5406, align 16, !tbaa !2
  %5407 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 72
  %5408 = bitcast float* %5407 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5408, align 16, !tbaa !2
  %5409 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 76
  %5410 = bitcast float* %5409 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5410, align 16, !tbaa !2
  %5411 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 80
  %5412 = bitcast float* %5411 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5412, align 16, !tbaa !2
  %5413 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 84
  %5414 = bitcast float* %5413 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5414, align 16, !tbaa !2
  %5415 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 88
  %5416 = bitcast float* %5415 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5416, align 16, !tbaa !2
  %5417 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 92
  %5418 = bitcast float* %5417 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5418, align 16, !tbaa !2
  %5419 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 96
  %5420 = bitcast float* %5419 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5420, align 16, !tbaa !2
  %5421 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 100
  %5422 = bitcast float* %5421 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5422, align 16, !tbaa !2
  %5423 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 104
  %5424 = bitcast float* %5423 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5424, align 16, !tbaa !2
  %5425 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 108
  %5426 = bitcast float* %5425 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5426, align 16, !tbaa !2
  %5427 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 112
  %5428 = bitcast float* %5427 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5428, align 16, !tbaa !2
  %5429 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 116
  %5430 = bitcast float* %5429 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5430, align 16, !tbaa !2
  %5431 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 120
  %5432 = bitcast float* %5431 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5432, align 16, !tbaa !2
  %5433 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 124
  %5434 = bitcast float* %5433 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5434, align 16, !tbaa !2
  %5435 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 128
  %5436 = bitcast float* %5435 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5436, align 16, !tbaa !2
  %5437 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 132
  %5438 = bitcast float* %5437 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5438, align 16, !tbaa !2
  %5439 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 136
  %5440 = bitcast float* %5439 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5440, align 16, !tbaa !2
  %5441 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 140
  %5442 = bitcast float* %5441 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5442, align 16, !tbaa !2
  %5443 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 144
  %5444 = bitcast float* %5443 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5444, align 16, !tbaa !2
  %5445 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 148
  %5446 = bitcast float* %5445 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5446, align 16, !tbaa !2
  %5447 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 152
  %5448 = bitcast float* %5447 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5448, align 16, !tbaa !2
  %5449 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 156
  %5450 = bitcast float* %5449 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5450, align 16, !tbaa !2
  %5451 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 160
  %5452 = bitcast float* %5451 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5452, align 16, !tbaa !2
  %5453 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 164
  %5454 = bitcast float* %5453 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5454, align 16, !tbaa !2
  %5455 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 168
  %5456 = bitcast float* %5455 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5456, align 16, !tbaa !2
  %5457 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 172
  %5458 = bitcast float* %5457 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5458, align 16, !tbaa !2
  %5459 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 176
  %5460 = bitcast float* %5459 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5460, align 16, !tbaa !2
  %5461 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 180
  %5462 = bitcast float* %5461 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5462, align 16, !tbaa !2
  %5463 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 184
  %5464 = bitcast float* %5463 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5464, align 16, !tbaa !2
  %5465 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 188
  %5466 = bitcast float* %5465 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5466, align 16, !tbaa !2
  %5467 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 192
  %5468 = bitcast float* %5467 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5468, align 16, !tbaa !2
  %5469 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 196
  %5470 = bitcast float* %5469 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5470, align 16, !tbaa !2
  %5471 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 200
  %5472 = bitcast float* %5471 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5472, align 16, !tbaa !2
  %5473 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 204
  %5474 = bitcast float* %5473 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5474, align 16, !tbaa !2
  %5475 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 208
  %5476 = bitcast float* %5475 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5476, align 16, !tbaa !2
  %5477 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 212
  %5478 = bitcast float* %5477 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5478, align 16, !tbaa !2
  %5479 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 216
  %5480 = bitcast float* %5479 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5480, align 16, !tbaa !2
  %5481 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 220
  %5482 = bitcast float* %5481 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5482, align 16, !tbaa !2
  %5483 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 224
  %5484 = bitcast float* %5483 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5484, align 16, !tbaa !2
  %5485 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 228
  %5486 = bitcast float* %5485 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5486, align 16, !tbaa !2
  %5487 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 232
  %5488 = bitcast float* %5487 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5488, align 16, !tbaa !2
  %5489 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 236
  %5490 = bitcast float* %5489 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5490, align 16, !tbaa !2
  %5491 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 240
  %5492 = bitcast float* %5491 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5492, align 16, !tbaa !2
  %5493 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 244
  %5494 = bitcast float* %5493 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5494, align 16, !tbaa !2
  %5495 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 248
  %5496 = bitcast float* %5495 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5496, align 16, !tbaa !2
  %5497 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5370, i64 252
  %5498 = bitcast float* %5497 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5498, align 16, !tbaa !2
  %5499 = add nuw nsw i64 %5370, 1
  %5500 = icmp eq i64 %5499, 256
  br i1 %5500, label %5501, label %5369

5501:                                             ; preds = %5369, %5501
  %5502 = phi i64 [ %5503, %5501 ], [ 0, %5369 ]
  %5503 = add nuw nsw i64 %5502, 1
  %5504 = trunc i64 %5503 to i32
  %5505 = sitofp i32 %5504 to float
  %5506 = fdiv float 1.000000e+00, %5505
  %5507 = insertelement <4 x float> undef, float %5506, i32 0
  %5508 = shufflevector <4 x float> %5507, <4 x float> undef, <4 x i32> zeroinitializer
  %5509 = insertelement <4 x float> undef, float %5506, i32 0
  %5510 = shufflevector <4 x float> %5509, <4 x float> undef, <4 x i32> zeroinitializer
  %5511 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 0
  %5512 = bitcast float* %5511 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5512, align 16, !tbaa !2
  %5513 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 4
  %5514 = bitcast float* %5513 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5514, align 16, !tbaa !2
  %5515 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 8
  %5516 = bitcast float* %5515 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5516, align 16, !tbaa !2
  %5517 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 12
  %5518 = bitcast float* %5517 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5518, align 16, !tbaa !2
  %5519 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 16
  %5520 = bitcast float* %5519 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5520, align 16, !tbaa !2
  %5521 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 20
  %5522 = bitcast float* %5521 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5522, align 16, !tbaa !2
  %5523 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 24
  %5524 = bitcast float* %5523 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5524, align 16, !tbaa !2
  %5525 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 28
  %5526 = bitcast float* %5525 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5526, align 16, !tbaa !2
  %5527 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 32
  %5528 = bitcast float* %5527 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5528, align 16, !tbaa !2
  %5529 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 36
  %5530 = bitcast float* %5529 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5530, align 16, !tbaa !2
  %5531 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 40
  %5532 = bitcast float* %5531 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5532, align 16, !tbaa !2
  %5533 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 44
  %5534 = bitcast float* %5533 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5534, align 16, !tbaa !2
  %5535 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 48
  %5536 = bitcast float* %5535 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5536, align 16, !tbaa !2
  %5537 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 52
  %5538 = bitcast float* %5537 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5538, align 16, !tbaa !2
  %5539 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 56
  %5540 = bitcast float* %5539 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5540, align 16, !tbaa !2
  %5541 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 60
  %5542 = bitcast float* %5541 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5542, align 16, !tbaa !2
  %5543 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 64
  %5544 = bitcast float* %5543 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5544, align 16, !tbaa !2
  %5545 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 68
  %5546 = bitcast float* %5545 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5546, align 16, !tbaa !2
  %5547 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 72
  %5548 = bitcast float* %5547 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5548, align 16, !tbaa !2
  %5549 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 76
  %5550 = bitcast float* %5549 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5550, align 16, !tbaa !2
  %5551 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 80
  %5552 = bitcast float* %5551 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5552, align 16, !tbaa !2
  %5553 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 84
  %5554 = bitcast float* %5553 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5554, align 16, !tbaa !2
  %5555 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 88
  %5556 = bitcast float* %5555 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5556, align 16, !tbaa !2
  %5557 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 92
  %5558 = bitcast float* %5557 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5558, align 16, !tbaa !2
  %5559 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 96
  %5560 = bitcast float* %5559 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5560, align 16, !tbaa !2
  %5561 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 100
  %5562 = bitcast float* %5561 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5562, align 16, !tbaa !2
  %5563 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 104
  %5564 = bitcast float* %5563 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5564, align 16, !tbaa !2
  %5565 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 108
  %5566 = bitcast float* %5565 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5566, align 16, !tbaa !2
  %5567 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 112
  %5568 = bitcast float* %5567 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5568, align 16, !tbaa !2
  %5569 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 116
  %5570 = bitcast float* %5569 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5570, align 16, !tbaa !2
  %5571 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 120
  %5572 = bitcast float* %5571 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5572, align 16, !tbaa !2
  %5573 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 124
  %5574 = bitcast float* %5573 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5574, align 16, !tbaa !2
  %5575 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 128
  %5576 = bitcast float* %5575 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5576, align 16, !tbaa !2
  %5577 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 132
  %5578 = bitcast float* %5577 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5578, align 16, !tbaa !2
  %5579 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 136
  %5580 = bitcast float* %5579 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5580, align 16, !tbaa !2
  %5581 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 140
  %5582 = bitcast float* %5581 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5582, align 16, !tbaa !2
  %5583 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 144
  %5584 = bitcast float* %5583 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5584, align 16, !tbaa !2
  %5585 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 148
  %5586 = bitcast float* %5585 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5586, align 16, !tbaa !2
  %5587 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 152
  %5588 = bitcast float* %5587 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5588, align 16, !tbaa !2
  %5589 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 156
  %5590 = bitcast float* %5589 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5590, align 16, !tbaa !2
  %5591 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 160
  %5592 = bitcast float* %5591 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5592, align 16, !tbaa !2
  %5593 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 164
  %5594 = bitcast float* %5593 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5594, align 16, !tbaa !2
  %5595 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 168
  %5596 = bitcast float* %5595 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5596, align 16, !tbaa !2
  %5597 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 172
  %5598 = bitcast float* %5597 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5598, align 16, !tbaa !2
  %5599 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 176
  %5600 = bitcast float* %5599 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5600, align 16, !tbaa !2
  %5601 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 180
  %5602 = bitcast float* %5601 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5602, align 16, !tbaa !2
  %5603 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 184
  %5604 = bitcast float* %5603 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5604, align 16, !tbaa !2
  %5605 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 188
  %5606 = bitcast float* %5605 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5606, align 16, !tbaa !2
  %5607 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 192
  %5608 = bitcast float* %5607 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5608, align 16, !tbaa !2
  %5609 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 196
  %5610 = bitcast float* %5609 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5610, align 16, !tbaa !2
  %5611 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 200
  %5612 = bitcast float* %5611 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5612, align 16, !tbaa !2
  %5613 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 204
  %5614 = bitcast float* %5613 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5614, align 16, !tbaa !2
  %5615 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 208
  %5616 = bitcast float* %5615 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5616, align 16, !tbaa !2
  %5617 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 212
  %5618 = bitcast float* %5617 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5618, align 16, !tbaa !2
  %5619 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 216
  %5620 = bitcast float* %5619 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5620, align 16, !tbaa !2
  %5621 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 220
  %5622 = bitcast float* %5621 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5622, align 16, !tbaa !2
  %5623 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 224
  %5624 = bitcast float* %5623 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5624, align 16, !tbaa !2
  %5625 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 228
  %5626 = bitcast float* %5625 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5626, align 16, !tbaa !2
  %5627 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 232
  %5628 = bitcast float* %5627 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5628, align 16, !tbaa !2
  %5629 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 236
  %5630 = bitcast float* %5629 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5630, align 16, !tbaa !2
  %5631 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 240
  %5632 = bitcast float* %5631 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5632, align 16, !tbaa !2
  %5633 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 244
  %5634 = bitcast float* %5633 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5634, align 16, !tbaa !2
  %5635 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 248
  %5636 = bitcast float* %5635 to <4 x float>*
  store <4 x float> %5508, <4 x float>* %5636, align 16, !tbaa !2
  %5637 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5502, i64 252
  %5638 = bitcast float* %5637 to <4 x float>*
  store <4 x float> %5510, <4 x float>* %5638, align 16, !tbaa !2
  %5639 = icmp eq i64 %5503, 256
  br i1 %5639, label %5640, label %5501

5640:                                             ; preds = %5501, %5640
  %5641 = phi i64 [ %5642, %5640 ], [ 0, %5501 ]
  %5642 = add nuw nsw i64 %5641, 1
  %5643 = trunc i64 %5642 to i32
  %5644 = sitofp i32 %5643 to float
  %5645 = fdiv float 1.000000e+00, %5644
  %5646 = insertelement <4 x float> undef, float %5645, i32 0
  %5647 = shufflevector <4 x float> %5646, <4 x float> undef, <4 x i32> zeroinitializer
  %5648 = insertelement <4 x float> undef, float %5645, i32 0
  %5649 = shufflevector <4 x float> %5648, <4 x float> undef, <4 x i32> zeroinitializer
  %5650 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 0
  %5651 = bitcast float* %5650 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5651, align 16, !tbaa !2
  %5652 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 4
  %5653 = bitcast float* %5652 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5653, align 16, !tbaa !2
  %5654 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 8
  %5655 = bitcast float* %5654 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5655, align 16, !tbaa !2
  %5656 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 12
  %5657 = bitcast float* %5656 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5657, align 16, !tbaa !2
  %5658 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 16
  %5659 = bitcast float* %5658 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5659, align 16, !tbaa !2
  %5660 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 20
  %5661 = bitcast float* %5660 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5661, align 16, !tbaa !2
  %5662 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 24
  %5663 = bitcast float* %5662 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5663, align 16, !tbaa !2
  %5664 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 28
  %5665 = bitcast float* %5664 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5665, align 16, !tbaa !2
  %5666 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 32
  %5667 = bitcast float* %5666 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5667, align 16, !tbaa !2
  %5668 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 36
  %5669 = bitcast float* %5668 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5669, align 16, !tbaa !2
  %5670 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 40
  %5671 = bitcast float* %5670 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5671, align 16, !tbaa !2
  %5672 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 44
  %5673 = bitcast float* %5672 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5673, align 16, !tbaa !2
  %5674 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 48
  %5675 = bitcast float* %5674 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5675, align 16, !tbaa !2
  %5676 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 52
  %5677 = bitcast float* %5676 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5677, align 16, !tbaa !2
  %5678 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 56
  %5679 = bitcast float* %5678 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5679, align 16, !tbaa !2
  %5680 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 60
  %5681 = bitcast float* %5680 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5681, align 16, !tbaa !2
  %5682 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 64
  %5683 = bitcast float* %5682 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5683, align 16, !tbaa !2
  %5684 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 68
  %5685 = bitcast float* %5684 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5685, align 16, !tbaa !2
  %5686 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 72
  %5687 = bitcast float* %5686 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5687, align 16, !tbaa !2
  %5688 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 76
  %5689 = bitcast float* %5688 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5689, align 16, !tbaa !2
  %5690 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 80
  %5691 = bitcast float* %5690 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5691, align 16, !tbaa !2
  %5692 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 84
  %5693 = bitcast float* %5692 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5693, align 16, !tbaa !2
  %5694 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 88
  %5695 = bitcast float* %5694 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5695, align 16, !tbaa !2
  %5696 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 92
  %5697 = bitcast float* %5696 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5697, align 16, !tbaa !2
  %5698 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 96
  %5699 = bitcast float* %5698 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5699, align 16, !tbaa !2
  %5700 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 100
  %5701 = bitcast float* %5700 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5701, align 16, !tbaa !2
  %5702 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 104
  %5703 = bitcast float* %5702 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5703, align 16, !tbaa !2
  %5704 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 108
  %5705 = bitcast float* %5704 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5705, align 16, !tbaa !2
  %5706 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 112
  %5707 = bitcast float* %5706 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5707, align 16, !tbaa !2
  %5708 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 116
  %5709 = bitcast float* %5708 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5709, align 16, !tbaa !2
  %5710 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 120
  %5711 = bitcast float* %5710 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5711, align 16, !tbaa !2
  %5712 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 124
  %5713 = bitcast float* %5712 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5713, align 16, !tbaa !2
  %5714 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 128
  %5715 = bitcast float* %5714 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5715, align 16, !tbaa !2
  %5716 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 132
  %5717 = bitcast float* %5716 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5717, align 16, !tbaa !2
  %5718 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 136
  %5719 = bitcast float* %5718 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5719, align 16, !tbaa !2
  %5720 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 140
  %5721 = bitcast float* %5720 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5721, align 16, !tbaa !2
  %5722 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 144
  %5723 = bitcast float* %5722 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5723, align 16, !tbaa !2
  %5724 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 148
  %5725 = bitcast float* %5724 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5725, align 16, !tbaa !2
  %5726 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 152
  %5727 = bitcast float* %5726 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5727, align 16, !tbaa !2
  %5728 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 156
  %5729 = bitcast float* %5728 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5729, align 16, !tbaa !2
  %5730 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 160
  %5731 = bitcast float* %5730 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5731, align 16, !tbaa !2
  %5732 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 164
  %5733 = bitcast float* %5732 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5733, align 16, !tbaa !2
  %5734 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 168
  %5735 = bitcast float* %5734 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5735, align 16, !tbaa !2
  %5736 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 172
  %5737 = bitcast float* %5736 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5737, align 16, !tbaa !2
  %5738 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 176
  %5739 = bitcast float* %5738 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5739, align 16, !tbaa !2
  %5740 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 180
  %5741 = bitcast float* %5740 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5741, align 16, !tbaa !2
  %5742 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 184
  %5743 = bitcast float* %5742 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5743, align 16, !tbaa !2
  %5744 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 188
  %5745 = bitcast float* %5744 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5745, align 16, !tbaa !2
  %5746 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 192
  %5747 = bitcast float* %5746 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5747, align 16, !tbaa !2
  %5748 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 196
  %5749 = bitcast float* %5748 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5749, align 16, !tbaa !2
  %5750 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 200
  %5751 = bitcast float* %5750 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5751, align 16, !tbaa !2
  %5752 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 204
  %5753 = bitcast float* %5752 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5753, align 16, !tbaa !2
  %5754 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 208
  %5755 = bitcast float* %5754 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5755, align 16, !tbaa !2
  %5756 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 212
  %5757 = bitcast float* %5756 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5757, align 16, !tbaa !2
  %5758 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 216
  %5759 = bitcast float* %5758 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5759, align 16, !tbaa !2
  %5760 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 220
  %5761 = bitcast float* %5760 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5761, align 16, !tbaa !2
  %5762 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 224
  %5763 = bitcast float* %5762 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5763, align 16, !tbaa !2
  %5764 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 228
  %5765 = bitcast float* %5764 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5765, align 16, !tbaa !2
  %5766 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 232
  %5767 = bitcast float* %5766 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5767, align 16, !tbaa !2
  %5768 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 236
  %5769 = bitcast float* %5768 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5769, align 16, !tbaa !2
  %5770 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 240
  %5771 = bitcast float* %5770 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5771, align 16, !tbaa !2
  %5772 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 244
  %5773 = bitcast float* %5772 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5773, align 16, !tbaa !2
  %5774 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 248
  %5775 = bitcast float* %5774 to <4 x float>*
  store <4 x float> %5647, <4 x float>* %5775, align 16, !tbaa !2
  %5776 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5641, i64 252
  %5777 = bitcast float* %5776 to <4 x float>*
  store <4 x float> %5649, <4 x float>* %5777, align 16, !tbaa !2
  %5778 = icmp eq i64 %5642, 256
  br i1 %5778, label %15603, label %5640

5779:                                             ; preds = %5366
  %5780 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0)) #15
  %5781 = icmp eq i32 %5780, 0
  br i1 %5781, label %5782, label %6135

5782:                                             ; preds = %5779, %5782
  %5783 = phi i64 [ %5823, %5782 ], [ 0, %5779 ]
  %5784 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5783
  %5785 = bitcast float* %5784 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5785, align 16, !tbaa !2
  %5786 = getelementptr inbounds float, float* %5784, i64 4
  %5787 = bitcast float* %5786 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5787, align 16, !tbaa !2
  %5788 = or i64 %5783, 8
  %5789 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5788
  %5790 = bitcast float* %5789 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5790, align 16, !tbaa !2
  %5791 = getelementptr inbounds float, float* %5789, i64 4
  %5792 = bitcast float* %5791 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5792, align 16, !tbaa !2
  %5793 = or i64 %5783, 16
  %5794 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5793
  %5795 = bitcast float* %5794 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5795, align 16, !tbaa !2
  %5796 = getelementptr inbounds float, float* %5794, i64 4
  %5797 = bitcast float* %5796 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5797, align 16, !tbaa !2
  %5798 = or i64 %5783, 24
  %5799 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5798
  %5800 = bitcast float* %5799 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5800, align 16, !tbaa !2
  %5801 = getelementptr inbounds float, float* %5799, i64 4
  %5802 = bitcast float* %5801 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5802, align 16, !tbaa !2
  %5803 = or i64 %5783, 32
  %5804 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5803
  %5805 = bitcast float* %5804 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5805, align 16, !tbaa !2
  %5806 = getelementptr inbounds float, float* %5804, i64 4
  %5807 = bitcast float* %5806 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5807, align 16, !tbaa !2
  %5808 = or i64 %5783, 40
  %5809 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5808
  %5810 = bitcast float* %5809 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5810, align 16, !tbaa !2
  %5811 = getelementptr inbounds float, float* %5809, i64 4
  %5812 = bitcast float* %5811 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5812, align 16, !tbaa !2
  %5813 = or i64 %5783, 48
  %5814 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5813
  %5815 = bitcast float* %5814 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5815, align 16, !tbaa !2
  %5816 = getelementptr inbounds float, float* %5814, i64 4
  %5817 = bitcast float* %5816 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5817, align 16, !tbaa !2
  %5818 = or i64 %5783, 56
  %5819 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5818
  %5820 = bitcast float* %5819 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5820, align 16, !tbaa !2
  %5821 = getelementptr inbounds float, float* %5819, i64 4
  %5822 = bitcast float* %5821 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5822, align 16, !tbaa !2
  %5823 = add nuw nsw i64 %5783, 64
  %5824 = icmp eq i64 %5823, 32000
  br i1 %5824, label %5825, label %5782, !llvm.loop !99

5825:                                             ; preds = %5782, %5825
  %5826 = phi i64 [ %5841, %5825 ], [ 0, %5782 ]
  %5827 = phi <4 x i64> [ %5842, %5825 ], [ <i64 0, i64 1, i64 2, i64 3>, %5782 ]
  %5828 = trunc <4 x i64> %5827 to <4 x i32>
  %5829 = add <4 x i32> %5828, <i32 1, i32 1, i32 1, i32 1>
  %5830 = sitofp <4 x i32> %5829 to <4 x float>
  %5831 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5830
  %5832 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5826
  %5833 = bitcast float* %5832 to <4 x float>*
  store <4 x float> %5831, <4 x float>* %5833, align 16, !tbaa !2
  %5834 = or i64 %5826, 4
  %5835 = trunc <4 x i64> %5827 to <4 x i32>
  %5836 = add <4 x i32> %5835, <i32 5, i32 5, i32 5, i32 5>
  %5837 = sitofp <4 x i32> %5836 to <4 x float>
  %5838 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5837
  %5839 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5834
  %5840 = bitcast float* %5839 to <4 x float>*
  store <4 x float> %5838, <4 x float>* %5840, align 16, !tbaa !2
  %5841 = add nuw nsw i64 %5826, 8
  %5842 = add <4 x i64> %5827, <i64 8, i64 8, i64 8, i64 8>
  %5843 = icmp eq i64 %5841, 32000
  br i1 %5843, label %5844, label %5825, !llvm.loop !100

5844:                                             ; preds = %5825, %5844
  %5845 = phi i64 [ %5860, %5844 ], [ 0, %5825 ]
  %5846 = phi <4 x i64> [ %5861, %5844 ], [ <i64 0, i64 1, i64 2, i64 3>, %5825 ]
  %5847 = trunc <4 x i64> %5846 to <4 x i32>
  %5848 = add <4 x i32> %5847, <i32 1, i32 1, i32 1, i32 1>
  %5849 = sitofp <4 x i32> %5848 to <4 x float>
  %5850 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5849
  %5851 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5845
  %5852 = bitcast float* %5851 to <4 x float>*
  store <4 x float> %5850, <4 x float>* %5852, align 16, !tbaa !2
  %5853 = or i64 %5845, 4
  %5854 = trunc <4 x i64> %5846 to <4 x i32>
  %5855 = add <4 x i32> %5854, <i32 5, i32 5, i32 5, i32 5>
  %5856 = sitofp <4 x i32> %5855 to <4 x float>
  %5857 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5856
  %5858 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5853
  %5859 = bitcast float* %5858 to <4 x float>*
  store <4 x float> %5857, <4 x float>* %5859, align 16, !tbaa !2
  %5860 = add nuw nsw i64 %5845, 8
  %5861 = add <4 x i64> %5846, <i64 8, i64 8, i64 8, i64 8>
  %5862 = icmp eq i64 %5860, 32000
  br i1 %5862, label %5863, label %5844, !llvm.loop !101

5863:                                             ; preds = %5844, %5863
  %5864 = phi i64 [ %5993, %5863 ], [ 0, %5844 ]
  %5865 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 0
  %5866 = bitcast float* %5865 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5866, align 16, !tbaa !2
  %5867 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 4
  %5868 = bitcast float* %5867 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5868, align 16, !tbaa !2
  %5869 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 8
  %5870 = bitcast float* %5869 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5870, align 16, !tbaa !2
  %5871 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 12
  %5872 = bitcast float* %5871 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5872, align 16, !tbaa !2
  %5873 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 16
  %5874 = bitcast float* %5873 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5874, align 16, !tbaa !2
  %5875 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 20
  %5876 = bitcast float* %5875 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5876, align 16, !tbaa !2
  %5877 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 24
  %5878 = bitcast float* %5877 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5878, align 16, !tbaa !2
  %5879 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 28
  %5880 = bitcast float* %5879 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5880, align 16, !tbaa !2
  %5881 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 32
  %5882 = bitcast float* %5881 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5882, align 16, !tbaa !2
  %5883 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 36
  %5884 = bitcast float* %5883 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5884, align 16, !tbaa !2
  %5885 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 40
  %5886 = bitcast float* %5885 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5886, align 16, !tbaa !2
  %5887 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 44
  %5888 = bitcast float* %5887 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5888, align 16, !tbaa !2
  %5889 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 48
  %5890 = bitcast float* %5889 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5890, align 16, !tbaa !2
  %5891 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 52
  %5892 = bitcast float* %5891 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5892, align 16, !tbaa !2
  %5893 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 56
  %5894 = bitcast float* %5893 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5894, align 16, !tbaa !2
  %5895 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 60
  %5896 = bitcast float* %5895 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5896, align 16, !tbaa !2
  %5897 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 64
  %5898 = bitcast float* %5897 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5898, align 16, !tbaa !2
  %5899 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 68
  %5900 = bitcast float* %5899 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5900, align 16, !tbaa !2
  %5901 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 72
  %5902 = bitcast float* %5901 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5902, align 16, !tbaa !2
  %5903 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 76
  %5904 = bitcast float* %5903 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5904, align 16, !tbaa !2
  %5905 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 80
  %5906 = bitcast float* %5905 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5906, align 16, !tbaa !2
  %5907 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 84
  %5908 = bitcast float* %5907 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5908, align 16, !tbaa !2
  %5909 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 88
  %5910 = bitcast float* %5909 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5910, align 16, !tbaa !2
  %5911 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 92
  %5912 = bitcast float* %5911 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5912, align 16, !tbaa !2
  %5913 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 96
  %5914 = bitcast float* %5913 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5914, align 16, !tbaa !2
  %5915 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 100
  %5916 = bitcast float* %5915 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5916, align 16, !tbaa !2
  %5917 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 104
  %5918 = bitcast float* %5917 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5918, align 16, !tbaa !2
  %5919 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 108
  %5920 = bitcast float* %5919 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5920, align 16, !tbaa !2
  %5921 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 112
  %5922 = bitcast float* %5921 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5922, align 16, !tbaa !2
  %5923 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 116
  %5924 = bitcast float* %5923 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5924, align 16, !tbaa !2
  %5925 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 120
  %5926 = bitcast float* %5925 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5926, align 16, !tbaa !2
  %5927 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 124
  %5928 = bitcast float* %5927 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5928, align 16, !tbaa !2
  %5929 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 128
  %5930 = bitcast float* %5929 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5930, align 16, !tbaa !2
  %5931 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 132
  %5932 = bitcast float* %5931 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5932, align 16, !tbaa !2
  %5933 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 136
  %5934 = bitcast float* %5933 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5934, align 16, !tbaa !2
  %5935 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 140
  %5936 = bitcast float* %5935 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5936, align 16, !tbaa !2
  %5937 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 144
  %5938 = bitcast float* %5937 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5938, align 16, !tbaa !2
  %5939 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 148
  %5940 = bitcast float* %5939 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5940, align 16, !tbaa !2
  %5941 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 152
  %5942 = bitcast float* %5941 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5942, align 16, !tbaa !2
  %5943 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 156
  %5944 = bitcast float* %5943 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5944, align 16, !tbaa !2
  %5945 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 160
  %5946 = bitcast float* %5945 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5946, align 16, !tbaa !2
  %5947 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 164
  %5948 = bitcast float* %5947 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5948, align 16, !tbaa !2
  %5949 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 168
  %5950 = bitcast float* %5949 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5950, align 16, !tbaa !2
  %5951 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 172
  %5952 = bitcast float* %5951 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5952, align 16, !tbaa !2
  %5953 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 176
  %5954 = bitcast float* %5953 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5954, align 16, !tbaa !2
  %5955 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 180
  %5956 = bitcast float* %5955 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5956, align 16, !tbaa !2
  %5957 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 184
  %5958 = bitcast float* %5957 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5958, align 16, !tbaa !2
  %5959 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 188
  %5960 = bitcast float* %5959 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5960, align 16, !tbaa !2
  %5961 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 192
  %5962 = bitcast float* %5961 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5962, align 16, !tbaa !2
  %5963 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 196
  %5964 = bitcast float* %5963 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5964, align 16, !tbaa !2
  %5965 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 200
  %5966 = bitcast float* %5965 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5966, align 16, !tbaa !2
  %5967 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 204
  %5968 = bitcast float* %5967 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5968, align 16, !tbaa !2
  %5969 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 208
  %5970 = bitcast float* %5969 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5970, align 16, !tbaa !2
  %5971 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 212
  %5972 = bitcast float* %5971 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5972, align 16, !tbaa !2
  %5973 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 216
  %5974 = bitcast float* %5973 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5974, align 16, !tbaa !2
  %5975 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 220
  %5976 = bitcast float* %5975 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5976, align 16, !tbaa !2
  %5977 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 224
  %5978 = bitcast float* %5977 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5978, align 16, !tbaa !2
  %5979 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 228
  %5980 = bitcast float* %5979 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5980, align 16, !tbaa !2
  %5981 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 232
  %5982 = bitcast float* %5981 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5982, align 16, !tbaa !2
  %5983 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 236
  %5984 = bitcast float* %5983 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5984, align 16, !tbaa !2
  %5985 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 240
  %5986 = bitcast float* %5985 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5986, align 16, !tbaa !2
  %5987 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 244
  %5988 = bitcast float* %5987 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5988, align 16, !tbaa !2
  %5989 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 248
  %5990 = bitcast float* %5989 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5990, align 16, !tbaa !2
  %5991 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5864, i64 252
  %5992 = bitcast float* %5991 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5992, align 16, !tbaa !2
  %5993 = add nuw nsw i64 %5864, 1
  %5994 = icmp eq i64 %5993, 256
  br i1 %5994, label %5995, label %5863

5995:                                             ; preds = %5863, %5995
  %5996 = phi i64 [ %5997, %5995 ], [ 0, %5863 ]
  %5997 = add nuw nsw i64 %5996, 1
  %5998 = trunc i64 %5997 to i32
  %5999 = mul nsw i32 %5998, %5998
  %6000 = sitofp i32 %5999 to float
  %6001 = fdiv float 1.000000e+00, %6000
  %6002 = insertelement <4 x float> undef, float %6001, i32 0
  %6003 = shufflevector <4 x float> %6002, <4 x float> undef, <4 x i32> zeroinitializer
  %6004 = insertelement <4 x float> undef, float %6001, i32 0
  %6005 = shufflevector <4 x float> %6004, <4 x float> undef, <4 x i32> zeroinitializer
  %6006 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 0
  %6007 = bitcast float* %6006 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6007, align 16, !tbaa !2
  %6008 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 4
  %6009 = bitcast float* %6008 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6009, align 16, !tbaa !2
  %6010 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 8
  %6011 = bitcast float* %6010 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6011, align 16, !tbaa !2
  %6012 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 12
  %6013 = bitcast float* %6012 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6013, align 16, !tbaa !2
  %6014 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 16
  %6015 = bitcast float* %6014 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6015, align 16, !tbaa !2
  %6016 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 20
  %6017 = bitcast float* %6016 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6017, align 16, !tbaa !2
  %6018 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 24
  %6019 = bitcast float* %6018 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6019, align 16, !tbaa !2
  %6020 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 28
  %6021 = bitcast float* %6020 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6021, align 16, !tbaa !2
  %6022 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 32
  %6023 = bitcast float* %6022 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6023, align 16, !tbaa !2
  %6024 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 36
  %6025 = bitcast float* %6024 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6025, align 16, !tbaa !2
  %6026 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 40
  %6027 = bitcast float* %6026 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6027, align 16, !tbaa !2
  %6028 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 44
  %6029 = bitcast float* %6028 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6029, align 16, !tbaa !2
  %6030 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 48
  %6031 = bitcast float* %6030 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6031, align 16, !tbaa !2
  %6032 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 52
  %6033 = bitcast float* %6032 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6033, align 16, !tbaa !2
  %6034 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 56
  %6035 = bitcast float* %6034 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6035, align 16, !tbaa !2
  %6036 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 60
  %6037 = bitcast float* %6036 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6037, align 16, !tbaa !2
  %6038 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 64
  %6039 = bitcast float* %6038 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6039, align 16, !tbaa !2
  %6040 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 68
  %6041 = bitcast float* %6040 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6041, align 16, !tbaa !2
  %6042 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 72
  %6043 = bitcast float* %6042 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6043, align 16, !tbaa !2
  %6044 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 76
  %6045 = bitcast float* %6044 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6045, align 16, !tbaa !2
  %6046 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 80
  %6047 = bitcast float* %6046 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6047, align 16, !tbaa !2
  %6048 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 84
  %6049 = bitcast float* %6048 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6049, align 16, !tbaa !2
  %6050 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 88
  %6051 = bitcast float* %6050 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6051, align 16, !tbaa !2
  %6052 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 92
  %6053 = bitcast float* %6052 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6053, align 16, !tbaa !2
  %6054 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 96
  %6055 = bitcast float* %6054 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6055, align 16, !tbaa !2
  %6056 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 100
  %6057 = bitcast float* %6056 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6057, align 16, !tbaa !2
  %6058 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 104
  %6059 = bitcast float* %6058 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6059, align 16, !tbaa !2
  %6060 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 108
  %6061 = bitcast float* %6060 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6061, align 16, !tbaa !2
  %6062 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 112
  %6063 = bitcast float* %6062 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6063, align 16, !tbaa !2
  %6064 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 116
  %6065 = bitcast float* %6064 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6065, align 16, !tbaa !2
  %6066 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 120
  %6067 = bitcast float* %6066 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6067, align 16, !tbaa !2
  %6068 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 124
  %6069 = bitcast float* %6068 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6069, align 16, !tbaa !2
  %6070 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 128
  %6071 = bitcast float* %6070 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6071, align 16, !tbaa !2
  %6072 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 132
  %6073 = bitcast float* %6072 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6073, align 16, !tbaa !2
  %6074 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 136
  %6075 = bitcast float* %6074 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6075, align 16, !tbaa !2
  %6076 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 140
  %6077 = bitcast float* %6076 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6077, align 16, !tbaa !2
  %6078 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 144
  %6079 = bitcast float* %6078 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6079, align 16, !tbaa !2
  %6080 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 148
  %6081 = bitcast float* %6080 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6081, align 16, !tbaa !2
  %6082 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 152
  %6083 = bitcast float* %6082 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6083, align 16, !tbaa !2
  %6084 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 156
  %6085 = bitcast float* %6084 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6085, align 16, !tbaa !2
  %6086 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 160
  %6087 = bitcast float* %6086 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6087, align 16, !tbaa !2
  %6088 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 164
  %6089 = bitcast float* %6088 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6089, align 16, !tbaa !2
  %6090 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 168
  %6091 = bitcast float* %6090 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6091, align 16, !tbaa !2
  %6092 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 172
  %6093 = bitcast float* %6092 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6093, align 16, !tbaa !2
  %6094 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 176
  %6095 = bitcast float* %6094 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6095, align 16, !tbaa !2
  %6096 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 180
  %6097 = bitcast float* %6096 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6097, align 16, !tbaa !2
  %6098 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 184
  %6099 = bitcast float* %6098 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6099, align 16, !tbaa !2
  %6100 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 188
  %6101 = bitcast float* %6100 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6101, align 16, !tbaa !2
  %6102 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 192
  %6103 = bitcast float* %6102 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6103, align 16, !tbaa !2
  %6104 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 196
  %6105 = bitcast float* %6104 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6105, align 16, !tbaa !2
  %6106 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 200
  %6107 = bitcast float* %6106 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6107, align 16, !tbaa !2
  %6108 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 204
  %6109 = bitcast float* %6108 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6109, align 16, !tbaa !2
  %6110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 208
  %6111 = bitcast float* %6110 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6111, align 16, !tbaa !2
  %6112 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 212
  %6113 = bitcast float* %6112 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6113, align 16, !tbaa !2
  %6114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 216
  %6115 = bitcast float* %6114 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6115, align 16, !tbaa !2
  %6116 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 220
  %6117 = bitcast float* %6116 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6117, align 16, !tbaa !2
  %6118 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 224
  %6119 = bitcast float* %6118 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6119, align 16, !tbaa !2
  %6120 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 228
  %6121 = bitcast float* %6120 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6121, align 16, !tbaa !2
  %6122 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 232
  %6123 = bitcast float* %6122 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6123, align 16, !tbaa !2
  %6124 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 236
  %6125 = bitcast float* %6124 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6125, align 16, !tbaa !2
  %6126 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 240
  %6127 = bitcast float* %6126 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6127, align 16, !tbaa !2
  %6128 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 244
  %6129 = bitcast float* %6128 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6129, align 16, !tbaa !2
  %6130 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 248
  %6131 = bitcast float* %6130 to <4 x float>*
  store <4 x float> %6003, <4 x float>* %6131, align 16, !tbaa !2
  %6132 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %5996, i64 252
  %6133 = bitcast float* %6132 to <4 x float>*
  store <4 x float> %6005, <4 x float>* %6133, align 16, !tbaa !2
  %6134 = icmp eq i64 %5997, 256
  br i1 %6134, label %15603, label %5995

6135:                                             ; preds = %5779
  %6136 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0)) #15
  %6137 = icmp eq i32 %6136, 0
  br i1 %6137, label %6138, label %6310

6138:                                             ; preds = %6135, %6138
  %6139 = phi i64 [ %6179, %6138 ], [ 0, %6135 ]
  %6140 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6139
  %6141 = bitcast float* %6140 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6141, align 16, !tbaa !2
  %6142 = getelementptr inbounds float, float* %6140, i64 4
  %6143 = bitcast float* %6142 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6143, align 16, !tbaa !2
  %6144 = or i64 %6139, 8
  %6145 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6144
  %6146 = bitcast float* %6145 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6146, align 16, !tbaa !2
  %6147 = getelementptr inbounds float, float* %6145, i64 4
  %6148 = bitcast float* %6147 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6148, align 16, !tbaa !2
  %6149 = or i64 %6139, 16
  %6150 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6149
  %6151 = bitcast float* %6150 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6151, align 16, !tbaa !2
  %6152 = getelementptr inbounds float, float* %6150, i64 4
  %6153 = bitcast float* %6152 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6153, align 16, !tbaa !2
  %6154 = or i64 %6139, 24
  %6155 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6154
  %6156 = bitcast float* %6155 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6156, align 16, !tbaa !2
  %6157 = getelementptr inbounds float, float* %6155, i64 4
  %6158 = bitcast float* %6157 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6158, align 16, !tbaa !2
  %6159 = or i64 %6139, 32
  %6160 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6159
  %6161 = bitcast float* %6160 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6161, align 16, !tbaa !2
  %6162 = getelementptr inbounds float, float* %6160, i64 4
  %6163 = bitcast float* %6162 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6163, align 16, !tbaa !2
  %6164 = or i64 %6139, 40
  %6165 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6164
  %6166 = bitcast float* %6165 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6166, align 16, !tbaa !2
  %6167 = getelementptr inbounds float, float* %6165, i64 4
  %6168 = bitcast float* %6167 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6168, align 16, !tbaa !2
  %6169 = or i64 %6139, 48
  %6170 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6169
  %6171 = bitcast float* %6170 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6171, align 16, !tbaa !2
  %6172 = getelementptr inbounds float, float* %6170, i64 4
  %6173 = bitcast float* %6172 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6173, align 16, !tbaa !2
  %6174 = or i64 %6139, 56
  %6175 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6174
  %6176 = bitcast float* %6175 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6176, align 16, !tbaa !2
  %6177 = getelementptr inbounds float, float* %6175, i64 4
  %6178 = bitcast float* %6177 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6178, align 16, !tbaa !2
  %6179 = add nuw nsw i64 %6139, 64
  %6180 = icmp eq i64 %6179, 32000
  br i1 %6180, label %6181, label %6138, !llvm.loop !102

6181:                                             ; preds = %6138, %6181
  %6182 = phi i64 [ %6222, %6181 ], [ 0, %6138 ]
  %6183 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6182
  %6184 = bitcast float* %6183 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6184, align 16, !tbaa !2
  %6185 = getelementptr inbounds float, float* %6183, i64 4
  %6186 = bitcast float* %6185 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6186, align 16, !tbaa !2
  %6187 = or i64 %6182, 8
  %6188 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6187
  %6189 = bitcast float* %6188 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6189, align 16, !tbaa !2
  %6190 = getelementptr inbounds float, float* %6188, i64 4
  %6191 = bitcast float* %6190 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6191, align 16, !tbaa !2
  %6192 = or i64 %6182, 16
  %6193 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6192
  %6194 = bitcast float* %6193 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6194, align 16, !tbaa !2
  %6195 = getelementptr inbounds float, float* %6193, i64 4
  %6196 = bitcast float* %6195 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6196, align 16, !tbaa !2
  %6197 = or i64 %6182, 24
  %6198 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6197
  %6199 = bitcast float* %6198 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6199, align 16, !tbaa !2
  %6200 = getelementptr inbounds float, float* %6198, i64 4
  %6201 = bitcast float* %6200 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6201, align 16, !tbaa !2
  %6202 = or i64 %6182, 32
  %6203 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6202
  %6204 = bitcast float* %6203 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6204, align 16, !tbaa !2
  %6205 = getelementptr inbounds float, float* %6203, i64 4
  %6206 = bitcast float* %6205 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6206, align 16, !tbaa !2
  %6207 = or i64 %6182, 40
  %6208 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6207
  %6209 = bitcast float* %6208 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6209, align 16, !tbaa !2
  %6210 = getelementptr inbounds float, float* %6208, i64 4
  %6211 = bitcast float* %6210 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6211, align 16, !tbaa !2
  %6212 = or i64 %6182, 48
  %6213 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6212
  %6214 = bitcast float* %6213 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6214, align 16, !tbaa !2
  %6215 = getelementptr inbounds float, float* %6213, i64 4
  %6216 = bitcast float* %6215 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6216, align 16, !tbaa !2
  %6217 = or i64 %6182, 56
  %6218 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6217
  %6219 = bitcast float* %6218 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6219, align 16, !tbaa !2
  %6220 = getelementptr inbounds float, float* %6218, i64 4
  %6221 = bitcast float* %6220 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6221, align 16, !tbaa !2
  %6222 = add nuw nsw i64 %6182, 64
  %6223 = icmp eq i64 %6222, 32000
  br i1 %6223, label %6224, label %6181, !llvm.loop !103

6224:                                             ; preds = %6181, %6224
  %6225 = phi i64 [ %6265, %6224 ], [ 0, %6181 ]
  %6226 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6225
  %6227 = bitcast float* %6226 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6227, align 16, !tbaa !2
  %6228 = getelementptr inbounds float, float* %6226, i64 4
  %6229 = bitcast float* %6228 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6229, align 16, !tbaa !2
  %6230 = or i64 %6225, 8
  %6231 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6230
  %6232 = bitcast float* %6231 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6232, align 16, !tbaa !2
  %6233 = getelementptr inbounds float, float* %6231, i64 4
  %6234 = bitcast float* %6233 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6234, align 16, !tbaa !2
  %6235 = or i64 %6225, 16
  %6236 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6235
  %6237 = bitcast float* %6236 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6237, align 16, !tbaa !2
  %6238 = getelementptr inbounds float, float* %6236, i64 4
  %6239 = bitcast float* %6238 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6239, align 16, !tbaa !2
  %6240 = or i64 %6225, 24
  %6241 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6240
  %6242 = bitcast float* %6241 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6242, align 16, !tbaa !2
  %6243 = getelementptr inbounds float, float* %6241, i64 4
  %6244 = bitcast float* %6243 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6244, align 16, !tbaa !2
  %6245 = or i64 %6225, 32
  %6246 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6245
  %6247 = bitcast float* %6246 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6247, align 16, !tbaa !2
  %6248 = getelementptr inbounds float, float* %6246, i64 4
  %6249 = bitcast float* %6248 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6249, align 16, !tbaa !2
  %6250 = or i64 %6225, 40
  %6251 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6250
  %6252 = bitcast float* %6251 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6252, align 16, !tbaa !2
  %6253 = getelementptr inbounds float, float* %6251, i64 4
  %6254 = bitcast float* %6253 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6254, align 16, !tbaa !2
  %6255 = or i64 %6225, 48
  %6256 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6255
  %6257 = bitcast float* %6256 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6257, align 16, !tbaa !2
  %6258 = getelementptr inbounds float, float* %6256, i64 4
  %6259 = bitcast float* %6258 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6259, align 16, !tbaa !2
  %6260 = or i64 %6225, 56
  %6261 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6260
  %6262 = bitcast float* %6261 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6262, align 16, !tbaa !2
  %6263 = getelementptr inbounds float, float* %6261, i64 4
  %6264 = bitcast float* %6263 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6264, align 16, !tbaa !2
  %6265 = add nuw nsw i64 %6225, 64
  %6266 = icmp eq i64 %6265, 32000
  br i1 %6266, label %6267, label %6224, !llvm.loop !104

6267:                                             ; preds = %6224, %6267
  %6268 = phi i64 [ %6308, %6267 ], [ 0, %6224 ]
  %6269 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6268
  %6270 = bitcast float* %6269 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6270, align 16, !tbaa !2
  %6271 = getelementptr inbounds float, float* %6269, i64 4
  %6272 = bitcast float* %6271 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6272, align 16, !tbaa !2
  %6273 = or i64 %6268, 8
  %6274 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6273
  %6275 = bitcast float* %6274 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6275, align 16, !tbaa !2
  %6276 = getelementptr inbounds float, float* %6274, i64 4
  %6277 = bitcast float* %6276 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6277, align 16, !tbaa !2
  %6278 = or i64 %6268, 16
  %6279 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6278
  %6280 = bitcast float* %6279 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6280, align 16, !tbaa !2
  %6281 = getelementptr inbounds float, float* %6279, i64 4
  %6282 = bitcast float* %6281 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6282, align 16, !tbaa !2
  %6283 = or i64 %6268, 24
  %6284 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6283
  %6285 = bitcast float* %6284 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6285, align 16, !tbaa !2
  %6286 = getelementptr inbounds float, float* %6284, i64 4
  %6287 = bitcast float* %6286 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6287, align 16, !tbaa !2
  %6288 = or i64 %6268, 32
  %6289 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6288
  %6290 = bitcast float* %6289 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6290, align 16, !tbaa !2
  %6291 = getelementptr inbounds float, float* %6289, i64 4
  %6292 = bitcast float* %6291 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6292, align 16, !tbaa !2
  %6293 = or i64 %6268, 40
  %6294 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6293
  %6295 = bitcast float* %6294 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6295, align 16, !tbaa !2
  %6296 = getelementptr inbounds float, float* %6294, i64 4
  %6297 = bitcast float* %6296 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6297, align 16, !tbaa !2
  %6298 = or i64 %6268, 48
  %6299 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6298
  %6300 = bitcast float* %6299 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6300, align 16, !tbaa !2
  %6301 = getelementptr inbounds float, float* %6299, i64 4
  %6302 = bitcast float* %6301 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6302, align 16, !tbaa !2
  %6303 = or i64 %6268, 56
  %6304 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6303
  %6305 = bitcast float* %6304 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6305, align 16, !tbaa !2
  %6306 = getelementptr inbounds float, float* %6304, i64 4
  %6307 = bitcast float* %6306 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6307, align 16, !tbaa !2
  %6308 = add nuw nsw i64 %6268, 64
  %6309 = icmp eq i64 %6308, 32000
  br i1 %6309, label %15603, label %6267, !llvm.loop !105

6310:                                             ; preds = %6135
  %6311 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)) #15
  %6312 = icmp eq i32 %6311, 0
  br i1 %6312, label %6313, label %6485

6313:                                             ; preds = %6310, %6313
  %6314 = phi i64 [ %6354, %6313 ], [ 0, %6310 ]
  %6315 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6314
  %6316 = bitcast float* %6315 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6316, align 16, !tbaa !2
  %6317 = getelementptr inbounds float, float* %6315, i64 4
  %6318 = bitcast float* %6317 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6318, align 16, !tbaa !2
  %6319 = or i64 %6314, 8
  %6320 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6319
  %6321 = bitcast float* %6320 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6321, align 16, !tbaa !2
  %6322 = getelementptr inbounds float, float* %6320, i64 4
  %6323 = bitcast float* %6322 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6323, align 16, !tbaa !2
  %6324 = or i64 %6314, 16
  %6325 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6324
  %6326 = bitcast float* %6325 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6326, align 16, !tbaa !2
  %6327 = getelementptr inbounds float, float* %6325, i64 4
  %6328 = bitcast float* %6327 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6328, align 16, !tbaa !2
  %6329 = or i64 %6314, 24
  %6330 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6329
  %6331 = bitcast float* %6330 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6331, align 16, !tbaa !2
  %6332 = getelementptr inbounds float, float* %6330, i64 4
  %6333 = bitcast float* %6332 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6333, align 16, !tbaa !2
  %6334 = or i64 %6314, 32
  %6335 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6334
  %6336 = bitcast float* %6335 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6336, align 16, !tbaa !2
  %6337 = getelementptr inbounds float, float* %6335, i64 4
  %6338 = bitcast float* %6337 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6338, align 16, !tbaa !2
  %6339 = or i64 %6314, 40
  %6340 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6339
  %6341 = bitcast float* %6340 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6341, align 16, !tbaa !2
  %6342 = getelementptr inbounds float, float* %6340, i64 4
  %6343 = bitcast float* %6342 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6343, align 16, !tbaa !2
  %6344 = or i64 %6314, 48
  %6345 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6344
  %6346 = bitcast float* %6345 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6346, align 16, !tbaa !2
  %6347 = getelementptr inbounds float, float* %6345, i64 4
  %6348 = bitcast float* %6347 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6348, align 16, !tbaa !2
  %6349 = or i64 %6314, 56
  %6350 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6349
  %6351 = bitcast float* %6350 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6351, align 16, !tbaa !2
  %6352 = getelementptr inbounds float, float* %6350, i64 4
  %6353 = bitcast float* %6352 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6353, align 16, !tbaa !2
  %6354 = add nuw nsw i64 %6314, 64
  %6355 = icmp eq i64 %6354, 32000
  br i1 %6355, label %6356, label %6313, !llvm.loop !106

6356:                                             ; preds = %6313, %6356
  %6357 = phi i64 [ %6397, %6356 ], [ 0, %6313 ]
  %6358 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6357
  %6359 = bitcast float* %6358 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6359, align 16, !tbaa !2
  %6360 = getelementptr inbounds float, float* %6358, i64 4
  %6361 = bitcast float* %6360 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6361, align 16, !tbaa !2
  %6362 = or i64 %6357, 8
  %6363 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6362
  %6364 = bitcast float* %6363 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6364, align 16, !tbaa !2
  %6365 = getelementptr inbounds float, float* %6363, i64 4
  %6366 = bitcast float* %6365 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6366, align 16, !tbaa !2
  %6367 = or i64 %6357, 16
  %6368 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6367
  %6369 = bitcast float* %6368 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6369, align 16, !tbaa !2
  %6370 = getelementptr inbounds float, float* %6368, i64 4
  %6371 = bitcast float* %6370 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6371, align 16, !tbaa !2
  %6372 = or i64 %6357, 24
  %6373 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6372
  %6374 = bitcast float* %6373 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6374, align 16, !tbaa !2
  %6375 = getelementptr inbounds float, float* %6373, i64 4
  %6376 = bitcast float* %6375 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6376, align 16, !tbaa !2
  %6377 = or i64 %6357, 32
  %6378 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6377
  %6379 = bitcast float* %6378 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6379, align 16, !tbaa !2
  %6380 = getelementptr inbounds float, float* %6378, i64 4
  %6381 = bitcast float* %6380 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6381, align 16, !tbaa !2
  %6382 = or i64 %6357, 40
  %6383 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6382
  %6384 = bitcast float* %6383 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6384, align 16, !tbaa !2
  %6385 = getelementptr inbounds float, float* %6383, i64 4
  %6386 = bitcast float* %6385 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6386, align 16, !tbaa !2
  %6387 = or i64 %6357, 48
  %6388 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6387
  %6389 = bitcast float* %6388 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6389, align 16, !tbaa !2
  %6390 = getelementptr inbounds float, float* %6388, i64 4
  %6391 = bitcast float* %6390 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6391, align 16, !tbaa !2
  %6392 = or i64 %6357, 56
  %6393 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6392
  %6394 = bitcast float* %6393 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6394, align 16, !tbaa !2
  %6395 = getelementptr inbounds float, float* %6393, i64 4
  %6396 = bitcast float* %6395 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6396, align 16, !tbaa !2
  %6397 = add nuw nsw i64 %6357, 64
  %6398 = icmp eq i64 %6397, 32000
  br i1 %6398, label %6399, label %6356, !llvm.loop !107

6399:                                             ; preds = %6356, %6399
  %6400 = phi i64 [ %6440, %6399 ], [ 0, %6356 ]
  %6401 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6400
  %6402 = bitcast float* %6401 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6402, align 16, !tbaa !2
  %6403 = getelementptr inbounds float, float* %6401, i64 4
  %6404 = bitcast float* %6403 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6404, align 16, !tbaa !2
  %6405 = or i64 %6400, 8
  %6406 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6405
  %6407 = bitcast float* %6406 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6407, align 16, !tbaa !2
  %6408 = getelementptr inbounds float, float* %6406, i64 4
  %6409 = bitcast float* %6408 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6409, align 16, !tbaa !2
  %6410 = or i64 %6400, 16
  %6411 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6410
  %6412 = bitcast float* %6411 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6412, align 16, !tbaa !2
  %6413 = getelementptr inbounds float, float* %6411, i64 4
  %6414 = bitcast float* %6413 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6414, align 16, !tbaa !2
  %6415 = or i64 %6400, 24
  %6416 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6415
  %6417 = bitcast float* %6416 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6417, align 16, !tbaa !2
  %6418 = getelementptr inbounds float, float* %6416, i64 4
  %6419 = bitcast float* %6418 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6419, align 16, !tbaa !2
  %6420 = or i64 %6400, 32
  %6421 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6420
  %6422 = bitcast float* %6421 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6422, align 16, !tbaa !2
  %6423 = getelementptr inbounds float, float* %6421, i64 4
  %6424 = bitcast float* %6423 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6424, align 16, !tbaa !2
  %6425 = or i64 %6400, 40
  %6426 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6425
  %6427 = bitcast float* %6426 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6427, align 16, !tbaa !2
  %6428 = getelementptr inbounds float, float* %6426, i64 4
  %6429 = bitcast float* %6428 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6429, align 16, !tbaa !2
  %6430 = or i64 %6400, 48
  %6431 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6430
  %6432 = bitcast float* %6431 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6432, align 16, !tbaa !2
  %6433 = getelementptr inbounds float, float* %6431, i64 4
  %6434 = bitcast float* %6433 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6434, align 16, !tbaa !2
  %6435 = or i64 %6400, 56
  %6436 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6435
  %6437 = bitcast float* %6436 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6437, align 16, !tbaa !2
  %6438 = getelementptr inbounds float, float* %6436, i64 4
  %6439 = bitcast float* %6438 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6439, align 16, !tbaa !2
  %6440 = add nuw nsw i64 %6400, 64
  %6441 = icmp eq i64 %6440, 32000
  br i1 %6441, label %6442, label %6399, !llvm.loop !108

6442:                                             ; preds = %6399, %6442
  %6443 = phi i64 [ %6483, %6442 ], [ 0, %6399 ]
  %6444 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6443
  %6445 = bitcast float* %6444 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6445, align 16, !tbaa !2
  %6446 = getelementptr inbounds float, float* %6444, i64 4
  %6447 = bitcast float* %6446 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6447, align 16, !tbaa !2
  %6448 = or i64 %6443, 8
  %6449 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6448
  %6450 = bitcast float* %6449 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6450, align 16, !tbaa !2
  %6451 = getelementptr inbounds float, float* %6449, i64 4
  %6452 = bitcast float* %6451 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6452, align 16, !tbaa !2
  %6453 = or i64 %6443, 16
  %6454 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6453
  %6455 = bitcast float* %6454 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6455, align 16, !tbaa !2
  %6456 = getelementptr inbounds float, float* %6454, i64 4
  %6457 = bitcast float* %6456 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6457, align 16, !tbaa !2
  %6458 = or i64 %6443, 24
  %6459 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6458
  %6460 = bitcast float* %6459 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6460, align 16, !tbaa !2
  %6461 = getelementptr inbounds float, float* %6459, i64 4
  %6462 = bitcast float* %6461 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6462, align 16, !tbaa !2
  %6463 = or i64 %6443, 32
  %6464 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6463
  %6465 = bitcast float* %6464 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6465, align 16, !tbaa !2
  %6466 = getelementptr inbounds float, float* %6464, i64 4
  %6467 = bitcast float* %6466 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6467, align 16, !tbaa !2
  %6468 = or i64 %6443, 40
  %6469 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6468
  %6470 = bitcast float* %6469 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6470, align 16, !tbaa !2
  %6471 = getelementptr inbounds float, float* %6469, i64 4
  %6472 = bitcast float* %6471 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6472, align 16, !tbaa !2
  %6473 = or i64 %6443, 48
  %6474 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6473
  %6475 = bitcast float* %6474 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6475, align 16, !tbaa !2
  %6476 = getelementptr inbounds float, float* %6474, i64 4
  %6477 = bitcast float* %6476 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6477, align 16, !tbaa !2
  %6478 = or i64 %6443, 56
  %6479 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6478
  %6480 = bitcast float* %6479 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6480, align 16, !tbaa !2
  %6481 = getelementptr inbounds float, float* %6479, i64 4
  %6482 = bitcast float* %6481 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6482, align 16, !tbaa !2
  %6483 = add nuw nsw i64 %6443, 64
  %6484 = icmp eq i64 %6483, 32000
  br i1 %6484, label %15603, label %6442, !llvm.loop !109

6485:                                             ; preds = %6310
  %6486 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)) #15
  %6487 = icmp eq i32 %6486, 0
  br i1 %6487, label %6488, label %6589

6488:                                             ; preds = %6485
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %6489

6489:                                             ; preds = %6489, %6488
  %6490 = phi i64 [ 0, %6488 ], [ %6530, %6489 ]
  %6491 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6490
  %6492 = bitcast float* %6491 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6492, align 16, !tbaa !2
  %6493 = getelementptr inbounds float, float* %6491, i64 4
  %6494 = bitcast float* %6493 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6494, align 16, !tbaa !2
  %6495 = or i64 %6490, 8
  %6496 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6495
  %6497 = bitcast float* %6496 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6497, align 16, !tbaa !2
  %6498 = getelementptr inbounds float, float* %6496, i64 4
  %6499 = bitcast float* %6498 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6499, align 16, !tbaa !2
  %6500 = or i64 %6490, 16
  %6501 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6500
  %6502 = bitcast float* %6501 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6502, align 16, !tbaa !2
  %6503 = getelementptr inbounds float, float* %6501, i64 4
  %6504 = bitcast float* %6503 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6504, align 16, !tbaa !2
  %6505 = or i64 %6490, 24
  %6506 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6505
  %6507 = bitcast float* %6506 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6507, align 16, !tbaa !2
  %6508 = getelementptr inbounds float, float* %6506, i64 4
  %6509 = bitcast float* %6508 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6509, align 16, !tbaa !2
  %6510 = or i64 %6490, 32
  %6511 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6510
  %6512 = bitcast float* %6511 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6512, align 16, !tbaa !2
  %6513 = getelementptr inbounds float, float* %6511, i64 4
  %6514 = bitcast float* %6513 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6514, align 16, !tbaa !2
  %6515 = or i64 %6490, 40
  %6516 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6515
  %6517 = bitcast float* %6516 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6517, align 16, !tbaa !2
  %6518 = getelementptr inbounds float, float* %6516, i64 4
  %6519 = bitcast float* %6518 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6519, align 16, !tbaa !2
  %6520 = or i64 %6490, 48
  %6521 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6520
  %6522 = bitcast float* %6521 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6522, align 16, !tbaa !2
  %6523 = getelementptr inbounds float, float* %6521, i64 4
  %6524 = bitcast float* %6523 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6524, align 16, !tbaa !2
  %6525 = or i64 %6490, 56
  %6526 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6525
  %6527 = bitcast float* %6526 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6527, align 16, !tbaa !2
  %6528 = getelementptr inbounds float, float* %6526, i64 4
  %6529 = bitcast float* %6528 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6529, align 16, !tbaa !2
  %6530 = add nuw nsw i64 %6490, 64
  %6531 = icmp eq i64 %6530, 32000
  br i1 %6531, label %6532, label %6489, !llvm.loop !110

6532:                                             ; preds = %6489, %6532
  %6533 = phi i64 [ %6548, %6532 ], [ 0, %6489 ]
  %6534 = phi <4 x i64> [ %6549, %6532 ], [ <i64 0, i64 1, i64 2, i64 3>, %6489 ]
  %6535 = trunc <4 x i64> %6534 to <4 x i32>
  %6536 = add <4 x i32> %6535, <i32 1, i32 1, i32 1, i32 1>
  %6537 = sitofp <4 x i32> %6536 to <4 x float>
  %6538 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6537
  %6539 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6533
  %6540 = bitcast float* %6539 to <4 x float>*
  store <4 x float> %6538, <4 x float>* %6540, align 16, !tbaa !2
  %6541 = or i64 %6533, 4
  %6542 = trunc <4 x i64> %6534 to <4 x i32>
  %6543 = add <4 x i32> %6542, <i32 5, i32 5, i32 5, i32 5>
  %6544 = sitofp <4 x i32> %6543 to <4 x float>
  %6545 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6544
  %6546 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6541
  %6547 = bitcast float* %6546 to <4 x float>*
  store <4 x float> %6545, <4 x float>* %6547, align 16, !tbaa !2
  %6548 = add nuw nsw i64 %6533, 8
  %6549 = add <4 x i64> %6534, <i64 8, i64 8, i64 8, i64 8>
  %6550 = icmp eq i64 %6548, 32000
  br i1 %6550, label %6551, label %6532, !llvm.loop !111

6551:                                             ; preds = %6532, %6551
  %6552 = phi i64 [ %6567, %6551 ], [ 0, %6532 ]
  %6553 = phi <4 x i64> [ %6568, %6551 ], [ <i64 0, i64 1, i64 2, i64 3>, %6532 ]
  %6554 = trunc <4 x i64> %6553 to <4 x i32>
  %6555 = add <4 x i32> %6554, <i32 1, i32 1, i32 1, i32 1>
  %6556 = sitofp <4 x i32> %6555 to <4 x float>
  %6557 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6556
  %6558 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6552
  %6559 = bitcast float* %6558 to <4 x float>*
  store <4 x float> %6557, <4 x float>* %6559, align 16, !tbaa !2
  %6560 = or i64 %6552, 4
  %6561 = trunc <4 x i64> %6553 to <4 x i32>
  %6562 = add <4 x i32> %6561, <i32 5, i32 5, i32 5, i32 5>
  %6563 = sitofp <4 x i32> %6562 to <4 x float>
  %6564 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6563
  %6565 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6560
  %6566 = bitcast float* %6565 to <4 x float>*
  store <4 x float> %6564, <4 x float>* %6566, align 16, !tbaa !2
  %6567 = add nuw nsw i64 %6552, 8
  %6568 = add <4 x i64> %6553, <i64 8, i64 8, i64 8, i64 8>
  %6569 = icmp eq i64 %6567, 32000
  br i1 %6569, label %6570, label %6551, !llvm.loop !112

6570:                                             ; preds = %6551, %6570
  %6571 = phi i64 [ %6586, %6570 ], [ 0, %6551 ]
  %6572 = phi <4 x i64> [ %6587, %6570 ], [ <i64 0, i64 1, i64 2, i64 3>, %6551 ]
  %6573 = trunc <4 x i64> %6572 to <4 x i32>
  %6574 = add <4 x i32> %6573, <i32 1, i32 1, i32 1, i32 1>
  %6575 = sitofp <4 x i32> %6574 to <4 x float>
  %6576 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6575
  %6577 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6571
  %6578 = bitcast float* %6577 to <4 x float>*
  store <4 x float> %6576, <4 x float>* %6578, align 16, !tbaa !2
  %6579 = or i64 %6571, 4
  %6580 = trunc <4 x i64> %6572 to <4 x i32>
  %6581 = add <4 x i32> %6580, <i32 5, i32 5, i32 5, i32 5>
  %6582 = sitofp <4 x i32> %6581 to <4 x float>
  %6583 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6582
  %6584 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6579
  %6585 = bitcast float* %6584 to <4 x float>*
  store <4 x float> %6583, <4 x float>* %6585, align 16, !tbaa !2
  %6586 = add nuw nsw i64 %6571, 8
  %6587 = add <4 x i64> %6572, <i64 8, i64 8, i64 8, i64 8>
  %6588 = icmp eq i64 %6586, 32000
  br i1 %6588, label %15603, label %6570, !llvm.loop !113

6589:                                             ; preds = %6485
  %6590 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0)) #15
  %6591 = icmp eq i32 %6590, 0
  br i1 %6591, label %6592, label %6722

6592:                                             ; preds = %6589
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %6593

6593:                                             ; preds = %6593, %6592
  %6594 = phi i64 [ 0, %6592 ], [ %6634, %6593 ]
  %6595 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6594
  %6596 = bitcast float* %6595 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6596, align 16, !tbaa !2
  %6597 = getelementptr inbounds float, float* %6595, i64 4
  %6598 = bitcast float* %6597 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6598, align 16, !tbaa !2
  %6599 = or i64 %6594, 8
  %6600 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6599
  %6601 = bitcast float* %6600 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6601, align 16, !tbaa !2
  %6602 = getelementptr inbounds float, float* %6600, i64 4
  %6603 = bitcast float* %6602 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6603, align 16, !tbaa !2
  %6604 = or i64 %6594, 16
  %6605 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6604
  %6606 = bitcast float* %6605 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6606, align 16, !tbaa !2
  %6607 = getelementptr inbounds float, float* %6605, i64 4
  %6608 = bitcast float* %6607 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6608, align 16, !tbaa !2
  %6609 = or i64 %6594, 24
  %6610 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6609
  %6611 = bitcast float* %6610 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6611, align 16, !tbaa !2
  %6612 = getelementptr inbounds float, float* %6610, i64 4
  %6613 = bitcast float* %6612 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6613, align 16, !tbaa !2
  %6614 = or i64 %6594, 32
  %6615 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6614
  %6616 = bitcast float* %6615 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6616, align 16, !tbaa !2
  %6617 = getelementptr inbounds float, float* %6615, i64 4
  %6618 = bitcast float* %6617 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6618, align 16, !tbaa !2
  %6619 = or i64 %6594, 40
  %6620 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6619
  %6621 = bitcast float* %6620 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6621, align 16, !tbaa !2
  %6622 = getelementptr inbounds float, float* %6620, i64 4
  %6623 = bitcast float* %6622 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6623, align 16, !tbaa !2
  %6624 = or i64 %6594, 48
  %6625 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6624
  %6626 = bitcast float* %6625 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6626, align 16, !tbaa !2
  %6627 = getelementptr inbounds float, float* %6625, i64 4
  %6628 = bitcast float* %6627 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6628, align 16, !tbaa !2
  %6629 = or i64 %6594, 56
  %6630 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6629
  %6631 = bitcast float* %6630 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6631, align 16, !tbaa !2
  %6632 = getelementptr inbounds float, float* %6630, i64 4
  %6633 = bitcast float* %6632 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6633, align 16, !tbaa !2
  %6634 = add nuw nsw i64 %6594, 64
  %6635 = icmp eq i64 %6634, 32000
  br i1 %6635, label %6636, label %6593, !llvm.loop !114

6636:                                             ; preds = %6593, %6636
  %6637 = phi i64 [ %6677, %6636 ], [ 0, %6593 ]
  %6638 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6637
  %6639 = bitcast float* %6638 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6639, align 16, !tbaa !2
  %6640 = getelementptr inbounds float, float* %6638, i64 4
  %6641 = bitcast float* %6640 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6641, align 16, !tbaa !2
  %6642 = or i64 %6637, 8
  %6643 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6642
  %6644 = bitcast float* %6643 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6644, align 16, !tbaa !2
  %6645 = getelementptr inbounds float, float* %6643, i64 4
  %6646 = bitcast float* %6645 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6646, align 16, !tbaa !2
  %6647 = or i64 %6637, 16
  %6648 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6647
  %6649 = bitcast float* %6648 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6649, align 16, !tbaa !2
  %6650 = getelementptr inbounds float, float* %6648, i64 4
  %6651 = bitcast float* %6650 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6651, align 16, !tbaa !2
  %6652 = or i64 %6637, 24
  %6653 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6652
  %6654 = bitcast float* %6653 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6654, align 16, !tbaa !2
  %6655 = getelementptr inbounds float, float* %6653, i64 4
  %6656 = bitcast float* %6655 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6656, align 16, !tbaa !2
  %6657 = or i64 %6637, 32
  %6658 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6657
  %6659 = bitcast float* %6658 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6659, align 16, !tbaa !2
  %6660 = getelementptr inbounds float, float* %6658, i64 4
  %6661 = bitcast float* %6660 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6661, align 16, !tbaa !2
  %6662 = or i64 %6637, 40
  %6663 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6662
  %6664 = bitcast float* %6663 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6664, align 16, !tbaa !2
  %6665 = getelementptr inbounds float, float* %6663, i64 4
  %6666 = bitcast float* %6665 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6666, align 16, !tbaa !2
  %6667 = or i64 %6637, 48
  %6668 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6667
  %6669 = bitcast float* %6668 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6669, align 16, !tbaa !2
  %6670 = getelementptr inbounds float, float* %6668, i64 4
  %6671 = bitcast float* %6670 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6671, align 16, !tbaa !2
  %6672 = or i64 %6637, 56
  %6673 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6672
  %6674 = bitcast float* %6673 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6674, align 16, !tbaa !2
  %6675 = getelementptr inbounds float, float* %6673, i64 4
  %6676 = bitcast float* %6675 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6676, align 16, !tbaa !2
  %6677 = add nuw nsw i64 %6637, 64
  %6678 = icmp eq i64 %6677, 32000
  br i1 %6678, label %6679, label %6636, !llvm.loop !115

6679:                                             ; preds = %6636, %6679
  %6680 = phi i64 [ %6720, %6679 ], [ 0, %6636 ]
  %6681 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6680
  %6682 = bitcast float* %6681 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6682, align 16, !tbaa !2
  %6683 = getelementptr inbounds float, float* %6681, i64 4
  %6684 = bitcast float* %6683 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6684, align 16, !tbaa !2
  %6685 = or i64 %6680, 8
  %6686 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6685
  %6687 = bitcast float* %6686 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6687, align 16, !tbaa !2
  %6688 = getelementptr inbounds float, float* %6686, i64 4
  %6689 = bitcast float* %6688 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6689, align 16, !tbaa !2
  %6690 = or i64 %6680, 16
  %6691 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6690
  %6692 = bitcast float* %6691 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6692, align 16, !tbaa !2
  %6693 = getelementptr inbounds float, float* %6691, i64 4
  %6694 = bitcast float* %6693 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6694, align 16, !tbaa !2
  %6695 = or i64 %6680, 24
  %6696 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6695
  %6697 = bitcast float* %6696 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6697, align 16, !tbaa !2
  %6698 = getelementptr inbounds float, float* %6696, i64 4
  %6699 = bitcast float* %6698 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6699, align 16, !tbaa !2
  %6700 = or i64 %6680, 32
  %6701 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6700
  %6702 = bitcast float* %6701 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6702, align 16, !tbaa !2
  %6703 = getelementptr inbounds float, float* %6701, i64 4
  %6704 = bitcast float* %6703 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6704, align 16, !tbaa !2
  %6705 = or i64 %6680, 40
  %6706 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6705
  %6707 = bitcast float* %6706 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6707, align 16, !tbaa !2
  %6708 = getelementptr inbounds float, float* %6706, i64 4
  %6709 = bitcast float* %6708 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6709, align 16, !tbaa !2
  %6710 = or i64 %6680, 48
  %6711 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6710
  %6712 = bitcast float* %6711 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6712, align 16, !tbaa !2
  %6713 = getelementptr inbounds float, float* %6711, i64 4
  %6714 = bitcast float* %6713 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6714, align 16, !tbaa !2
  %6715 = or i64 %6680, 56
  %6716 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6715
  %6717 = bitcast float* %6716 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6717, align 16, !tbaa !2
  %6718 = getelementptr inbounds float, float* %6716, i64 4
  %6719 = bitcast float* %6718 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6719, align 16, !tbaa !2
  %6720 = add nuw nsw i64 %6680, 64
  %6721 = icmp eq i64 %6720, 32000
  br i1 %6721, label %15603, label %6679, !llvm.loop !116

6722:                                             ; preds = %6589
  %6723 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0)) #15
  %6724 = icmp eq i32 %6723, 0
  br i1 %6724, label %6725, label %6826

6725:                                             ; preds = %6722
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %6726

6726:                                             ; preds = %6726, %6725
  %6727 = phi i64 [ 0, %6725 ], [ %6767, %6726 ]
  %6728 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6727
  %6729 = bitcast float* %6728 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6729, align 16, !tbaa !2
  %6730 = getelementptr inbounds float, float* %6728, i64 4
  %6731 = bitcast float* %6730 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6731, align 16, !tbaa !2
  %6732 = or i64 %6727, 8
  %6733 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6732
  %6734 = bitcast float* %6733 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6734, align 16, !tbaa !2
  %6735 = getelementptr inbounds float, float* %6733, i64 4
  %6736 = bitcast float* %6735 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6736, align 16, !tbaa !2
  %6737 = or i64 %6727, 16
  %6738 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6737
  %6739 = bitcast float* %6738 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6739, align 16, !tbaa !2
  %6740 = getelementptr inbounds float, float* %6738, i64 4
  %6741 = bitcast float* %6740 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6741, align 16, !tbaa !2
  %6742 = or i64 %6727, 24
  %6743 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6742
  %6744 = bitcast float* %6743 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6744, align 16, !tbaa !2
  %6745 = getelementptr inbounds float, float* %6743, i64 4
  %6746 = bitcast float* %6745 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6746, align 16, !tbaa !2
  %6747 = or i64 %6727, 32
  %6748 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6747
  %6749 = bitcast float* %6748 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6749, align 16, !tbaa !2
  %6750 = getelementptr inbounds float, float* %6748, i64 4
  %6751 = bitcast float* %6750 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6751, align 16, !tbaa !2
  %6752 = or i64 %6727, 40
  %6753 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6752
  %6754 = bitcast float* %6753 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6754, align 16, !tbaa !2
  %6755 = getelementptr inbounds float, float* %6753, i64 4
  %6756 = bitcast float* %6755 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6756, align 16, !tbaa !2
  %6757 = or i64 %6727, 48
  %6758 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6757
  %6759 = bitcast float* %6758 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6759, align 16, !tbaa !2
  %6760 = getelementptr inbounds float, float* %6758, i64 4
  %6761 = bitcast float* %6760 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6761, align 16, !tbaa !2
  %6762 = or i64 %6727, 56
  %6763 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6762
  %6764 = bitcast float* %6763 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6764, align 16, !tbaa !2
  %6765 = getelementptr inbounds float, float* %6763, i64 4
  %6766 = bitcast float* %6765 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6766, align 16, !tbaa !2
  %6767 = add nuw nsw i64 %6727, 64
  %6768 = icmp eq i64 %6767, 32000
  br i1 %6768, label %6769, label %6726, !llvm.loop !117

6769:                                             ; preds = %6726, %6769
  %6770 = phi i64 [ %6785, %6769 ], [ 0, %6726 ]
  %6771 = phi <4 x i64> [ %6786, %6769 ], [ <i64 0, i64 1, i64 2, i64 3>, %6726 ]
  %6772 = trunc <4 x i64> %6771 to <4 x i32>
  %6773 = add <4 x i32> %6772, <i32 1, i32 1, i32 1, i32 1>
  %6774 = sitofp <4 x i32> %6773 to <4 x float>
  %6775 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6774
  %6776 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6770
  %6777 = bitcast float* %6776 to <4 x float>*
  store <4 x float> %6775, <4 x float>* %6777, align 16, !tbaa !2
  %6778 = or i64 %6770, 4
  %6779 = trunc <4 x i64> %6771 to <4 x i32>
  %6780 = add <4 x i32> %6779, <i32 5, i32 5, i32 5, i32 5>
  %6781 = sitofp <4 x i32> %6780 to <4 x float>
  %6782 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6781
  %6783 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6778
  %6784 = bitcast float* %6783 to <4 x float>*
  store <4 x float> %6782, <4 x float>* %6784, align 16, !tbaa !2
  %6785 = add nuw nsw i64 %6770, 8
  %6786 = add <4 x i64> %6771, <i64 8, i64 8, i64 8, i64 8>
  %6787 = icmp eq i64 %6785, 32000
  br i1 %6787, label %6788, label %6769, !llvm.loop !118

6788:                                             ; preds = %6769, %6788
  %6789 = phi i64 [ %6804, %6788 ], [ 0, %6769 ]
  %6790 = phi <4 x i64> [ %6805, %6788 ], [ <i64 0, i64 1, i64 2, i64 3>, %6769 ]
  %6791 = trunc <4 x i64> %6790 to <4 x i32>
  %6792 = add <4 x i32> %6791, <i32 1, i32 1, i32 1, i32 1>
  %6793 = sitofp <4 x i32> %6792 to <4 x float>
  %6794 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6793
  %6795 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6789
  %6796 = bitcast float* %6795 to <4 x float>*
  store <4 x float> %6794, <4 x float>* %6796, align 16, !tbaa !2
  %6797 = or i64 %6789, 4
  %6798 = trunc <4 x i64> %6790 to <4 x i32>
  %6799 = add <4 x i32> %6798, <i32 5, i32 5, i32 5, i32 5>
  %6800 = sitofp <4 x i32> %6799 to <4 x float>
  %6801 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6800
  %6802 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6797
  %6803 = bitcast float* %6802 to <4 x float>*
  store <4 x float> %6801, <4 x float>* %6803, align 16, !tbaa !2
  %6804 = add nuw nsw i64 %6789, 8
  %6805 = add <4 x i64> %6790, <i64 8, i64 8, i64 8, i64 8>
  %6806 = icmp eq i64 %6804, 32000
  br i1 %6806, label %6807, label %6788, !llvm.loop !119

6807:                                             ; preds = %6788, %6807
  %6808 = phi i64 [ %6823, %6807 ], [ 0, %6788 ]
  %6809 = phi <4 x i64> [ %6824, %6807 ], [ <i64 0, i64 1, i64 2, i64 3>, %6788 ]
  %6810 = trunc <4 x i64> %6809 to <4 x i32>
  %6811 = add <4 x i32> %6810, <i32 1, i32 1, i32 1, i32 1>
  %6812 = sitofp <4 x i32> %6811 to <4 x float>
  %6813 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6812
  %6814 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6808
  %6815 = bitcast float* %6814 to <4 x float>*
  store <4 x float> %6813, <4 x float>* %6815, align 16, !tbaa !2
  %6816 = or i64 %6808, 4
  %6817 = trunc <4 x i64> %6809 to <4 x i32>
  %6818 = add <4 x i32> %6817, <i32 5, i32 5, i32 5, i32 5>
  %6819 = sitofp <4 x i32> %6818 to <4 x float>
  %6820 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6819
  %6821 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6816
  %6822 = bitcast float* %6821 to <4 x float>*
  store <4 x float> %6820, <4 x float>* %6822, align 16, !tbaa !2
  %6823 = add nuw nsw i64 %6808, 8
  %6824 = add <4 x i64> %6809, <i64 8, i64 8, i64 8, i64 8>
  %6825 = icmp eq i64 %6823, 32000
  br i1 %6825, label %15603, label %6807, !llvm.loop !120

6826:                                             ; preds = %6722
  %6827 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0)) #15
  %6828 = icmp eq i32 %6827, 0
  br i1 %6828, label %6829, label %6916

6829:                                             ; preds = %6826
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %6830

6830:                                             ; preds = %6830, %6829
  %6831 = phi i64 [ 0, %6829 ], [ %6871, %6830 ]
  %6832 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6831
  %6833 = bitcast float* %6832 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6833, align 16, !tbaa !2
  %6834 = getelementptr inbounds float, float* %6832, i64 4
  %6835 = bitcast float* %6834 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6835, align 16, !tbaa !2
  %6836 = or i64 %6831, 8
  %6837 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6836
  %6838 = bitcast float* %6837 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6838, align 16, !tbaa !2
  %6839 = getelementptr inbounds float, float* %6837, i64 4
  %6840 = bitcast float* %6839 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6840, align 16, !tbaa !2
  %6841 = or i64 %6831, 16
  %6842 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6841
  %6843 = bitcast float* %6842 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6843, align 16, !tbaa !2
  %6844 = getelementptr inbounds float, float* %6842, i64 4
  %6845 = bitcast float* %6844 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6845, align 16, !tbaa !2
  %6846 = or i64 %6831, 24
  %6847 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6846
  %6848 = bitcast float* %6847 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6848, align 16, !tbaa !2
  %6849 = getelementptr inbounds float, float* %6847, i64 4
  %6850 = bitcast float* %6849 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6850, align 16, !tbaa !2
  %6851 = or i64 %6831, 32
  %6852 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6851
  %6853 = bitcast float* %6852 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6853, align 16, !tbaa !2
  %6854 = getelementptr inbounds float, float* %6852, i64 4
  %6855 = bitcast float* %6854 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6855, align 16, !tbaa !2
  %6856 = or i64 %6831, 40
  %6857 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6856
  %6858 = bitcast float* %6857 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6858, align 16, !tbaa !2
  %6859 = getelementptr inbounds float, float* %6857, i64 4
  %6860 = bitcast float* %6859 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6860, align 16, !tbaa !2
  %6861 = or i64 %6831, 48
  %6862 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6861
  %6863 = bitcast float* %6862 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6863, align 16, !tbaa !2
  %6864 = getelementptr inbounds float, float* %6862, i64 4
  %6865 = bitcast float* %6864 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6865, align 16, !tbaa !2
  %6866 = or i64 %6831, 56
  %6867 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6866
  %6868 = bitcast float* %6867 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6868, align 16, !tbaa !2
  %6869 = getelementptr inbounds float, float* %6867, i64 4
  %6870 = bitcast float* %6869 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6870, align 16, !tbaa !2
  %6871 = add nuw nsw i64 %6831, 64
  %6872 = icmp eq i64 %6871, 32000
  br i1 %6872, label %6873, label %6830, !llvm.loop !121

6873:                                             ; preds = %6830, %6873
  %6874 = phi i64 [ %6914, %6873 ], [ 0, %6830 ]
  %6875 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6874
  %6876 = bitcast float* %6875 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6876, align 16, !tbaa !2
  %6877 = getelementptr inbounds float, float* %6875, i64 4
  %6878 = bitcast float* %6877 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6878, align 16, !tbaa !2
  %6879 = or i64 %6874, 8
  %6880 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6879
  %6881 = bitcast float* %6880 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6881, align 16, !tbaa !2
  %6882 = getelementptr inbounds float, float* %6880, i64 4
  %6883 = bitcast float* %6882 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6883, align 16, !tbaa !2
  %6884 = or i64 %6874, 16
  %6885 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6884
  %6886 = bitcast float* %6885 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6886, align 16, !tbaa !2
  %6887 = getelementptr inbounds float, float* %6885, i64 4
  %6888 = bitcast float* %6887 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6888, align 16, !tbaa !2
  %6889 = or i64 %6874, 24
  %6890 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6889
  %6891 = bitcast float* %6890 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6891, align 16, !tbaa !2
  %6892 = getelementptr inbounds float, float* %6890, i64 4
  %6893 = bitcast float* %6892 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6893, align 16, !tbaa !2
  %6894 = or i64 %6874, 32
  %6895 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6894
  %6896 = bitcast float* %6895 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6896, align 16, !tbaa !2
  %6897 = getelementptr inbounds float, float* %6895, i64 4
  %6898 = bitcast float* %6897 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6898, align 16, !tbaa !2
  %6899 = or i64 %6874, 40
  %6900 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6899
  %6901 = bitcast float* %6900 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6901, align 16, !tbaa !2
  %6902 = getelementptr inbounds float, float* %6900, i64 4
  %6903 = bitcast float* %6902 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6903, align 16, !tbaa !2
  %6904 = or i64 %6874, 48
  %6905 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6904
  %6906 = bitcast float* %6905 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6906, align 16, !tbaa !2
  %6907 = getelementptr inbounds float, float* %6905, i64 4
  %6908 = bitcast float* %6907 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6908, align 16, !tbaa !2
  %6909 = or i64 %6874, 56
  %6910 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6909
  %6911 = bitcast float* %6910 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6911, align 16, !tbaa !2
  %6912 = getelementptr inbounds float, float* %6910, i64 4
  %6913 = bitcast float* %6912 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6913, align 16, !tbaa !2
  %6914 = add nuw nsw i64 %6874, 64
  %6915 = icmp eq i64 %6914, 32000
  br i1 %6915, label %15603, label %6873, !llvm.loop !122

6916:                                             ; preds = %6826
  %6917 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0)) #15
  %6918 = icmp eq i32 %6917, 0
  br i1 %6918, label %6919, label %7067

6919:                                             ; preds = %6916, %6919
  %6920 = phi i64 [ %6960, %6919 ], [ 0, %6916 ]
  %6921 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6920
  %6922 = bitcast float* %6921 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6922, align 16, !tbaa !2
  %6923 = getelementptr inbounds float, float* %6921, i64 4
  %6924 = bitcast float* %6923 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6924, align 16, !tbaa !2
  %6925 = or i64 %6920, 8
  %6926 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6925
  %6927 = bitcast float* %6926 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6927, align 16, !tbaa !2
  %6928 = getelementptr inbounds float, float* %6926, i64 4
  %6929 = bitcast float* %6928 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6929, align 16, !tbaa !2
  %6930 = or i64 %6920, 16
  %6931 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6930
  %6932 = bitcast float* %6931 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6932, align 16, !tbaa !2
  %6933 = getelementptr inbounds float, float* %6931, i64 4
  %6934 = bitcast float* %6933 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6934, align 16, !tbaa !2
  %6935 = or i64 %6920, 24
  %6936 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6935
  %6937 = bitcast float* %6936 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6937, align 16, !tbaa !2
  %6938 = getelementptr inbounds float, float* %6936, i64 4
  %6939 = bitcast float* %6938 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6939, align 16, !tbaa !2
  %6940 = or i64 %6920, 32
  %6941 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6940
  %6942 = bitcast float* %6941 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6942, align 16, !tbaa !2
  %6943 = getelementptr inbounds float, float* %6941, i64 4
  %6944 = bitcast float* %6943 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6944, align 16, !tbaa !2
  %6945 = or i64 %6920, 40
  %6946 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6945
  %6947 = bitcast float* %6946 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6947, align 16, !tbaa !2
  %6948 = getelementptr inbounds float, float* %6946, i64 4
  %6949 = bitcast float* %6948 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6949, align 16, !tbaa !2
  %6950 = or i64 %6920, 48
  %6951 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6950
  %6952 = bitcast float* %6951 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6952, align 16, !tbaa !2
  %6953 = getelementptr inbounds float, float* %6951, i64 4
  %6954 = bitcast float* %6953 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6954, align 16, !tbaa !2
  %6955 = or i64 %6920, 56
  %6956 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6955
  %6957 = bitcast float* %6956 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6957, align 16, !tbaa !2
  %6958 = getelementptr inbounds float, float* %6956, i64 4
  %6959 = bitcast float* %6958 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6959, align 16, !tbaa !2
  %6960 = add nuw nsw i64 %6920, 64
  %6961 = icmp eq i64 %6960, 32000
  br i1 %6961, label %6962, label %6919, !llvm.loop !123

6962:                                             ; preds = %6919, %6962
  %6963 = phi i64 [ %7003, %6962 ], [ 0, %6919 ]
  %6964 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6963
  %6965 = bitcast float* %6964 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6965, align 16, !tbaa !2
  %6966 = getelementptr inbounds float, float* %6964, i64 4
  %6967 = bitcast float* %6966 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6967, align 16, !tbaa !2
  %6968 = or i64 %6963, 8
  %6969 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6968
  %6970 = bitcast float* %6969 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6970, align 16, !tbaa !2
  %6971 = getelementptr inbounds float, float* %6969, i64 4
  %6972 = bitcast float* %6971 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6972, align 16, !tbaa !2
  %6973 = or i64 %6963, 16
  %6974 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6973
  %6975 = bitcast float* %6974 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6975, align 16, !tbaa !2
  %6976 = getelementptr inbounds float, float* %6974, i64 4
  %6977 = bitcast float* %6976 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6977, align 16, !tbaa !2
  %6978 = or i64 %6963, 24
  %6979 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6978
  %6980 = bitcast float* %6979 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6980, align 16, !tbaa !2
  %6981 = getelementptr inbounds float, float* %6979, i64 4
  %6982 = bitcast float* %6981 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6982, align 16, !tbaa !2
  %6983 = or i64 %6963, 32
  %6984 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6983
  %6985 = bitcast float* %6984 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6985, align 16, !tbaa !2
  %6986 = getelementptr inbounds float, float* %6984, i64 4
  %6987 = bitcast float* %6986 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6987, align 16, !tbaa !2
  %6988 = or i64 %6963, 40
  %6989 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6988
  %6990 = bitcast float* %6989 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6990, align 16, !tbaa !2
  %6991 = getelementptr inbounds float, float* %6989, i64 4
  %6992 = bitcast float* %6991 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6992, align 16, !tbaa !2
  %6993 = or i64 %6963, 48
  %6994 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6993
  %6995 = bitcast float* %6994 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6995, align 16, !tbaa !2
  %6996 = getelementptr inbounds float, float* %6994, i64 4
  %6997 = bitcast float* %6996 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %6997, align 16, !tbaa !2
  %6998 = or i64 %6963, 56
  %6999 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6998
  %7000 = bitcast float* %6999 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %7000, align 16, !tbaa !2
  %7001 = getelementptr inbounds float, float* %6999, i64 4
  %7002 = bitcast float* %7001 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %7002, align 16, !tbaa !2
  %7003 = add nuw nsw i64 %6963, 64
  %7004 = icmp eq i64 %7003, 32000
  br i1 %7004, label %7005, label %6962, !llvm.loop !124

7005:                                             ; preds = %6962, %7005
  %7006 = phi i64 [ %7046, %7005 ], [ 0, %6962 ]
  %7007 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7006
  %7008 = bitcast float* %7007 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7008, align 16, !tbaa !2
  %7009 = getelementptr inbounds float, float* %7007, i64 4
  %7010 = bitcast float* %7009 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7010, align 16, !tbaa !2
  %7011 = or i64 %7006, 8
  %7012 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7011
  %7013 = bitcast float* %7012 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7013, align 16, !tbaa !2
  %7014 = getelementptr inbounds float, float* %7012, i64 4
  %7015 = bitcast float* %7014 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7015, align 16, !tbaa !2
  %7016 = or i64 %7006, 16
  %7017 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7016
  %7018 = bitcast float* %7017 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7018, align 16, !tbaa !2
  %7019 = getelementptr inbounds float, float* %7017, i64 4
  %7020 = bitcast float* %7019 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7020, align 16, !tbaa !2
  %7021 = or i64 %7006, 24
  %7022 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7021
  %7023 = bitcast float* %7022 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7023, align 16, !tbaa !2
  %7024 = getelementptr inbounds float, float* %7022, i64 4
  %7025 = bitcast float* %7024 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7025, align 16, !tbaa !2
  %7026 = or i64 %7006, 32
  %7027 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7026
  %7028 = bitcast float* %7027 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7028, align 16, !tbaa !2
  %7029 = getelementptr inbounds float, float* %7027, i64 4
  %7030 = bitcast float* %7029 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7030, align 16, !tbaa !2
  %7031 = or i64 %7006, 40
  %7032 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7031
  %7033 = bitcast float* %7032 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7033, align 16, !tbaa !2
  %7034 = getelementptr inbounds float, float* %7032, i64 4
  %7035 = bitcast float* %7034 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7035, align 16, !tbaa !2
  %7036 = or i64 %7006, 48
  %7037 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7036
  %7038 = bitcast float* %7037 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7038, align 16, !tbaa !2
  %7039 = getelementptr inbounds float, float* %7037, i64 4
  %7040 = bitcast float* %7039 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7040, align 16, !tbaa !2
  %7041 = or i64 %7006, 56
  %7042 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7041
  %7043 = bitcast float* %7042 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7043, align 16, !tbaa !2
  %7044 = getelementptr inbounds float, float* %7042, i64 4
  %7045 = bitcast float* %7044 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7045, align 16, !tbaa !2
  %7046 = add nuw nsw i64 %7006, 64
  %7047 = icmp eq i64 %7046, 32000
  br i1 %7047, label %7048, label %7005, !llvm.loop !125

7048:                                             ; preds = %7005, %7048
  %7049 = phi i64 [ %7064, %7048 ], [ 0, %7005 ]
  %7050 = phi <4 x i64> [ %7065, %7048 ], [ <i64 0, i64 1, i64 2, i64 3>, %7005 ]
  %7051 = trunc <4 x i64> %7050 to <4 x i32>
  %7052 = add <4 x i32> %7051, <i32 1, i32 1, i32 1, i32 1>
  %7053 = sitofp <4 x i32> %7052 to <4 x float>
  %7054 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %7053
  %7055 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %7049
  %7056 = bitcast float* %7055 to <4 x float>*
  store <4 x float> %7054, <4 x float>* %7056, align 16, !tbaa !2
  %7057 = or i64 %7049, 4
  %7058 = trunc <4 x i64> %7050 to <4 x i32>
  %7059 = add <4 x i32> %7058, <i32 5, i32 5, i32 5, i32 5>
  %7060 = sitofp <4 x i32> %7059 to <4 x float>
  %7061 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %7060
  %7062 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %7057
  %7063 = bitcast float* %7062 to <4 x float>*
  store <4 x float> %7061, <4 x float>* %7063, align 16, !tbaa !2
  %7064 = add nuw nsw i64 %7049, 8
  %7065 = add <4 x i64> %7050, <i64 8, i64 8, i64 8, i64 8>
  %7066 = icmp eq i64 %7064, 32000
  br i1 %7066, label %15603, label %7048, !llvm.loop !126

7067:                                             ; preds = %6916
  %7068 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0)) #15
  %7069 = icmp eq i32 %7068, 0
  br i1 %7069, label %7070, label %7114

7070:                                             ; preds = %7067
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %7071

7071:                                             ; preds = %7071, %7070
  %7072 = phi i64 [ 0, %7070 ], [ %7112, %7071 ]
  %7073 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7072
  %7074 = bitcast float* %7073 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7074, align 16, !tbaa !2
  %7075 = getelementptr inbounds float, float* %7073, i64 4
  %7076 = bitcast float* %7075 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7076, align 16, !tbaa !2
  %7077 = or i64 %7072, 8
  %7078 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7077
  %7079 = bitcast float* %7078 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7079, align 16, !tbaa !2
  %7080 = getelementptr inbounds float, float* %7078, i64 4
  %7081 = bitcast float* %7080 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7081, align 16, !tbaa !2
  %7082 = or i64 %7072, 16
  %7083 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7082
  %7084 = bitcast float* %7083 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7084, align 16, !tbaa !2
  %7085 = getelementptr inbounds float, float* %7083, i64 4
  %7086 = bitcast float* %7085 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7086, align 16, !tbaa !2
  %7087 = or i64 %7072, 24
  %7088 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7087
  %7089 = bitcast float* %7088 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7089, align 16, !tbaa !2
  %7090 = getelementptr inbounds float, float* %7088, i64 4
  %7091 = bitcast float* %7090 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7091, align 16, !tbaa !2
  %7092 = or i64 %7072, 32
  %7093 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7092
  %7094 = bitcast float* %7093 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7094, align 16, !tbaa !2
  %7095 = getelementptr inbounds float, float* %7093, i64 4
  %7096 = bitcast float* %7095 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7096, align 16, !tbaa !2
  %7097 = or i64 %7072, 40
  %7098 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7097
  %7099 = bitcast float* %7098 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7099, align 16, !tbaa !2
  %7100 = getelementptr inbounds float, float* %7098, i64 4
  %7101 = bitcast float* %7100 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7101, align 16, !tbaa !2
  %7102 = or i64 %7072, 48
  %7103 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7102
  %7104 = bitcast float* %7103 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7104, align 16, !tbaa !2
  %7105 = getelementptr inbounds float, float* %7103, i64 4
  %7106 = bitcast float* %7105 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7106, align 16, !tbaa !2
  %7107 = or i64 %7072, 56
  %7108 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7107
  %7109 = bitcast float* %7108 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7109, align 16, !tbaa !2
  %7110 = getelementptr inbounds float, float* %7108, i64 4
  %7111 = bitcast float* %7110 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7111, align 16, !tbaa !2
  %7112 = add nuw nsw i64 %7072, 64
  %7113 = icmp eq i64 %7112, 32000
  br i1 %7113, label %15603, label %7071, !llvm.loop !127

7114:                                             ; preds = %7067
  %7115 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0)) #15
  %7116 = icmp eq i32 %7115, 0
  br i1 %7116, label %7117, label %7161

7117:                                             ; preds = %7114
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %7118

7118:                                             ; preds = %7118, %7117
  %7119 = phi i64 [ 0, %7117 ], [ %7159, %7118 ]
  %7120 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7119
  %7121 = bitcast float* %7120 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7121, align 16, !tbaa !2
  %7122 = getelementptr inbounds float, float* %7120, i64 4
  %7123 = bitcast float* %7122 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7123, align 16, !tbaa !2
  %7124 = or i64 %7119, 8
  %7125 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7124
  %7126 = bitcast float* %7125 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7126, align 16, !tbaa !2
  %7127 = getelementptr inbounds float, float* %7125, i64 4
  %7128 = bitcast float* %7127 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7128, align 16, !tbaa !2
  %7129 = or i64 %7119, 16
  %7130 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7129
  %7131 = bitcast float* %7130 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7131, align 16, !tbaa !2
  %7132 = getelementptr inbounds float, float* %7130, i64 4
  %7133 = bitcast float* %7132 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7133, align 16, !tbaa !2
  %7134 = or i64 %7119, 24
  %7135 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7134
  %7136 = bitcast float* %7135 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7136, align 16, !tbaa !2
  %7137 = getelementptr inbounds float, float* %7135, i64 4
  %7138 = bitcast float* %7137 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7138, align 16, !tbaa !2
  %7139 = or i64 %7119, 32
  %7140 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7139
  %7141 = bitcast float* %7140 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7141, align 16, !tbaa !2
  %7142 = getelementptr inbounds float, float* %7140, i64 4
  %7143 = bitcast float* %7142 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7143, align 16, !tbaa !2
  %7144 = or i64 %7119, 40
  %7145 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7144
  %7146 = bitcast float* %7145 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7146, align 16, !tbaa !2
  %7147 = getelementptr inbounds float, float* %7145, i64 4
  %7148 = bitcast float* %7147 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7148, align 16, !tbaa !2
  %7149 = or i64 %7119, 48
  %7150 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7149
  %7151 = bitcast float* %7150 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7151, align 16, !tbaa !2
  %7152 = getelementptr inbounds float, float* %7150, i64 4
  %7153 = bitcast float* %7152 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7153, align 16, !tbaa !2
  %7154 = or i64 %7119, 56
  %7155 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7154
  %7156 = bitcast float* %7155 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7156, align 16, !tbaa !2
  %7157 = getelementptr inbounds float, float* %7155, i64 4
  %7158 = bitcast float* %7157 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7158, align 16, !tbaa !2
  %7159 = add nuw nsw i64 %7119, 64
  %7160 = icmp eq i64 %7159, 32000
  br i1 %7160, label %15603, label %7118, !llvm.loop !128

7161:                                             ; preds = %7114
  %7162 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0)) #15
  %7163 = icmp eq i32 %7162, 0
  br i1 %7163, label %7164, label %7471

7164:                                             ; preds = %7161, %7164
  %7165 = phi i64 [ %7205, %7164 ], [ 0, %7161 ]
  %7166 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7165
  %7167 = bitcast float* %7166 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7167, align 16, !tbaa !2
  %7168 = getelementptr inbounds float, float* %7166, i64 4
  %7169 = bitcast float* %7168 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7169, align 16, !tbaa !2
  %7170 = or i64 %7165, 8
  %7171 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7170
  %7172 = bitcast float* %7171 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7172, align 16, !tbaa !2
  %7173 = getelementptr inbounds float, float* %7171, i64 4
  %7174 = bitcast float* %7173 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7174, align 16, !tbaa !2
  %7175 = or i64 %7165, 16
  %7176 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7175
  %7177 = bitcast float* %7176 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7177, align 16, !tbaa !2
  %7178 = getelementptr inbounds float, float* %7176, i64 4
  %7179 = bitcast float* %7178 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7179, align 16, !tbaa !2
  %7180 = or i64 %7165, 24
  %7181 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7180
  %7182 = bitcast float* %7181 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7182, align 16, !tbaa !2
  %7183 = getelementptr inbounds float, float* %7181, i64 4
  %7184 = bitcast float* %7183 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7184, align 16, !tbaa !2
  %7185 = or i64 %7165, 32
  %7186 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7185
  %7187 = bitcast float* %7186 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7187, align 16, !tbaa !2
  %7188 = getelementptr inbounds float, float* %7186, i64 4
  %7189 = bitcast float* %7188 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7189, align 16, !tbaa !2
  %7190 = or i64 %7165, 40
  %7191 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7190
  %7192 = bitcast float* %7191 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7192, align 16, !tbaa !2
  %7193 = getelementptr inbounds float, float* %7191, i64 4
  %7194 = bitcast float* %7193 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7194, align 16, !tbaa !2
  %7195 = or i64 %7165, 48
  %7196 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7195
  %7197 = bitcast float* %7196 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7197, align 16, !tbaa !2
  %7198 = getelementptr inbounds float, float* %7196, i64 4
  %7199 = bitcast float* %7198 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7199, align 16, !tbaa !2
  %7200 = or i64 %7165, 56
  %7201 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7200
  %7202 = bitcast float* %7201 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7202, align 16, !tbaa !2
  %7203 = getelementptr inbounds float, float* %7201, i64 4
  %7204 = bitcast float* %7203 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7204, align 16, !tbaa !2
  %7205 = add nuw nsw i64 %7165, 64
  %7206 = icmp eq i64 %7205, 32000
  br i1 %7206, label %7207, label %7164, !llvm.loop !129

7207:                                             ; preds = %7164, %7207
  %7208 = phi i64 [ %7337, %7207 ], [ 0, %7164 ]
  %7209 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 0
  %7210 = bitcast float* %7209 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7210, align 16, !tbaa !2
  %7211 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 4
  %7212 = bitcast float* %7211 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7212, align 16, !tbaa !2
  %7213 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 8
  %7214 = bitcast float* %7213 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7214, align 16, !tbaa !2
  %7215 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 12
  %7216 = bitcast float* %7215 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7216, align 16, !tbaa !2
  %7217 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 16
  %7218 = bitcast float* %7217 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7218, align 16, !tbaa !2
  %7219 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 20
  %7220 = bitcast float* %7219 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7220, align 16, !tbaa !2
  %7221 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 24
  %7222 = bitcast float* %7221 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7222, align 16, !tbaa !2
  %7223 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 28
  %7224 = bitcast float* %7223 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7224, align 16, !tbaa !2
  %7225 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 32
  %7226 = bitcast float* %7225 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7226, align 16, !tbaa !2
  %7227 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 36
  %7228 = bitcast float* %7227 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7228, align 16, !tbaa !2
  %7229 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 40
  %7230 = bitcast float* %7229 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7230, align 16, !tbaa !2
  %7231 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 44
  %7232 = bitcast float* %7231 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7232, align 16, !tbaa !2
  %7233 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 48
  %7234 = bitcast float* %7233 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7234, align 16, !tbaa !2
  %7235 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 52
  %7236 = bitcast float* %7235 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7236, align 16, !tbaa !2
  %7237 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 56
  %7238 = bitcast float* %7237 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7238, align 16, !tbaa !2
  %7239 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 60
  %7240 = bitcast float* %7239 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7240, align 16, !tbaa !2
  %7241 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 64
  %7242 = bitcast float* %7241 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7242, align 16, !tbaa !2
  %7243 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 68
  %7244 = bitcast float* %7243 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7244, align 16, !tbaa !2
  %7245 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 72
  %7246 = bitcast float* %7245 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7246, align 16, !tbaa !2
  %7247 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 76
  %7248 = bitcast float* %7247 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7248, align 16, !tbaa !2
  %7249 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 80
  %7250 = bitcast float* %7249 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7250, align 16, !tbaa !2
  %7251 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 84
  %7252 = bitcast float* %7251 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7252, align 16, !tbaa !2
  %7253 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 88
  %7254 = bitcast float* %7253 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7254, align 16, !tbaa !2
  %7255 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 92
  %7256 = bitcast float* %7255 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7256, align 16, !tbaa !2
  %7257 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 96
  %7258 = bitcast float* %7257 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7258, align 16, !tbaa !2
  %7259 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 100
  %7260 = bitcast float* %7259 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7260, align 16, !tbaa !2
  %7261 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 104
  %7262 = bitcast float* %7261 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7262, align 16, !tbaa !2
  %7263 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 108
  %7264 = bitcast float* %7263 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7264, align 16, !tbaa !2
  %7265 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 112
  %7266 = bitcast float* %7265 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7266, align 16, !tbaa !2
  %7267 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 116
  %7268 = bitcast float* %7267 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7268, align 16, !tbaa !2
  %7269 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 120
  %7270 = bitcast float* %7269 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7270, align 16, !tbaa !2
  %7271 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 124
  %7272 = bitcast float* %7271 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7272, align 16, !tbaa !2
  %7273 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 128
  %7274 = bitcast float* %7273 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7274, align 16, !tbaa !2
  %7275 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 132
  %7276 = bitcast float* %7275 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7276, align 16, !tbaa !2
  %7277 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 136
  %7278 = bitcast float* %7277 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7278, align 16, !tbaa !2
  %7279 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 140
  %7280 = bitcast float* %7279 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7280, align 16, !tbaa !2
  %7281 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 144
  %7282 = bitcast float* %7281 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7282, align 16, !tbaa !2
  %7283 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 148
  %7284 = bitcast float* %7283 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7284, align 16, !tbaa !2
  %7285 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 152
  %7286 = bitcast float* %7285 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7286, align 16, !tbaa !2
  %7287 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 156
  %7288 = bitcast float* %7287 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7288, align 16, !tbaa !2
  %7289 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 160
  %7290 = bitcast float* %7289 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7290, align 16, !tbaa !2
  %7291 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 164
  %7292 = bitcast float* %7291 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7292, align 16, !tbaa !2
  %7293 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 168
  %7294 = bitcast float* %7293 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7294, align 16, !tbaa !2
  %7295 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 172
  %7296 = bitcast float* %7295 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7296, align 16, !tbaa !2
  %7297 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 176
  %7298 = bitcast float* %7297 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7298, align 16, !tbaa !2
  %7299 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 180
  %7300 = bitcast float* %7299 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7300, align 16, !tbaa !2
  %7301 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 184
  %7302 = bitcast float* %7301 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7302, align 16, !tbaa !2
  %7303 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 188
  %7304 = bitcast float* %7303 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7304, align 16, !tbaa !2
  %7305 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 192
  %7306 = bitcast float* %7305 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7306, align 16, !tbaa !2
  %7307 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 196
  %7308 = bitcast float* %7307 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7308, align 16, !tbaa !2
  %7309 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 200
  %7310 = bitcast float* %7309 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7310, align 16, !tbaa !2
  %7311 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 204
  %7312 = bitcast float* %7311 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7312, align 16, !tbaa !2
  %7313 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 208
  %7314 = bitcast float* %7313 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7314, align 16, !tbaa !2
  %7315 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 212
  %7316 = bitcast float* %7315 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7316, align 16, !tbaa !2
  %7317 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 216
  %7318 = bitcast float* %7317 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7318, align 16, !tbaa !2
  %7319 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 220
  %7320 = bitcast float* %7319 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7320, align 16, !tbaa !2
  %7321 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 224
  %7322 = bitcast float* %7321 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7322, align 16, !tbaa !2
  %7323 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 228
  %7324 = bitcast float* %7323 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7324, align 16, !tbaa !2
  %7325 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 232
  %7326 = bitcast float* %7325 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7326, align 16, !tbaa !2
  %7327 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 236
  %7328 = bitcast float* %7327 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7328, align 16, !tbaa !2
  %7329 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 240
  %7330 = bitcast float* %7329 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7330, align 16, !tbaa !2
  %7331 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 244
  %7332 = bitcast float* %7331 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7332, align 16, !tbaa !2
  %7333 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 248
  %7334 = bitcast float* %7333 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7334, align 16, !tbaa !2
  %7335 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7208, i64 252
  %7336 = bitcast float* %7335 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7336, align 16, !tbaa !2
  %7337 = add nuw nsw i64 %7208, 1
  %7338 = icmp eq i64 %7337, 256
  br i1 %7338, label %7339, label %7207

7339:                                             ; preds = %7207, %7339
  %7340 = phi i64 [ %7469, %7339 ], [ 0, %7207 ]
  %7341 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 0
  %7342 = bitcast float* %7341 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7342, align 16, !tbaa !2
  %7343 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 4
  %7344 = bitcast float* %7343 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7344, align 16, !tbaa !2
  %7345 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 8
  %7346 = bitcast float* %7345 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7346, align 16, !tbaa !2
  %7347 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 12
  %7348 = bitcast float* %7347 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7348, align 16, !tbaa !2
  %7349 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 16
  %7350 = bitcast float* %7349 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7350, align 16, !tbaa !2
  %7351 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 20
  %7352 = bitcast float* %7351 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7352, align 16, !tbaa !2
  %7353 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 24
  %7354 = bitcast float* %7353 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7354, align 16, !tbaa !2
  %7355 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 28
  %7356 = bitcast float* %7355 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7356, align 16, !tbaa !2
  %7357 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 32
  %7358 = bitcast float* %7357 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7358, align 16, !tbaa !2
  %7359 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 36
  %7360 = bitcast float* %7359 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7360, align 16, !tbaa !2
  %7361 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 40
  %7362 = bitcast float* %7361 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7362, align 16, !tbaa !2
  %7363 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 44
  %7364 = bitcast float* %7363 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7364, align 16, !tbaa !2
  %7365 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 48
  %7366 = bitcast float* %7365 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7366, align 16, !tbaa !2
  %7367 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 52
  %7368 = bitcast float* %7367 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7368, align 16, !tbaa !2
  %7369 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 56
  %7370 = bitcast float* %7369 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7370, align 16, !tbaa !2
  %7371 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 60
  %7372 = bitcast float* %7371 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7372, align 16, !tbaa !2
  %7373 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 64
  %7374 = bitcast float* %7373 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7374, align 16, !tbaa !2
  %7375 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 68
  %7376 = bitcast float* %7375 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7376, align 16, !tbaa !2
  %7377 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 72
  %7378 = bitcast float* %7377 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7378, align 16, !tbaa !2
  %7379 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 76
  %7380 = bitcast float* %7379 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7380, align 16, !tbaa !2
  %7381 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 80
  %7382 = bitcast float* %7381 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7382, align 16, !tbaa !2
  %7383 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 84
  %7384 = bitcast float* %7383 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7384, align 16, !tbaa !2
  %7385 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 88
  %7386 = bitcast float* %7385 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7386, align 16, !tbaa !2
  %7387 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 92
  %7388 = bitcast float* %7387 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7388, align 16, !tbaa !2
  %7389 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 96
  %7390 = bitcast float* %7389 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7390, align 16, !tbaa !2
  %7391 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 100
  %7392 = bitcast float* %7391 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7392, align 16, !tbaa !2
  %7393 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 104
  %7394 = bitcast float* %7393 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7394, align 16, !tbaa !2
  %7395 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 108
  %7396 = bitcast float* %7395 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7396, align 16, !tbaa !2
  %7397 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 112
  %7398 = bitcast float* %7397 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7398, align 16, !tbaa !2
  %7399 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 116
  %7400 = bitcast float* %7399 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7400, align 16, !tbaa !2
  %7401 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 120
  %7402 = bitcast float* %7401 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7402, align 16, !tbaa !2
  %7403 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 124
  %7404 = bitcast float* %7403 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7404, align 16, !tbaa !2
  %7405 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 128
  %7406 = bitcast float* %7405 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7406, align 16, !tbaa !2
  %7407 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 132
  %7408 = bitcast float* %7407 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7408, align 16, !tbaa !2
  %7409 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 136
  %7410 = bitcast float* %7409 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7410, align 16, !tbaa !2
  %7411 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 140
  %7412 = bitcast float* %7411 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7412, align 16, !tbaa !2
  %7413 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 144
  %7414 = bitcast float* %7413 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7414, align 16, !tbaa !2
  %7415 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 148
  %7416 = bitcast float* %7415 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7416, align 16, !tbaa !2
  %7417 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 152
  %7418 = bitcast float* %7417 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7418, align 16, !tbaa !2
  %7419 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 156
  %7420 = bitcast float* %7419 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7420, align 16, !tbaa !2
  %7421 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 160
  %7422 = bitcast float* %7421 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7422, align 16, !tbaa !2
  %7423 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 164
  %7424 = bitcast float* %7423 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7424, align 16, !tbaa !2
  %7425 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 168
  %7426 = bitcast float* %7425 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7426, align 16, !tbaa !2
  %7427 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 172
  %7428 = bitcast float* %7427 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7428, align 16, !tbaa !2
  %7429 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 176
  %7430 = bitcast float* %7429 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7430, align 16, !tbaa !2
  %7431 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 180
  %7432 = bitcast float* %7431 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7432, align 16, !tbaa !2
  %7433 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 184
  %7434 = bitcast float* %7433 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7434, align 16, !tbaa !2
  %7435 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 188
  %7436 = bitcast float* %7435 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7436, align 16, !tbaa !2
  %7437 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 192
  %7438 = bitcast float* %7437 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7438, align 16, !tbaa !2
  %7439 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 196
  %7440 = bitcast float* %7439 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7440, align 16, !tbaa !2
  %7441 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 200
  %7442 = bitcast float* %7441 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7442, align 16, !tbaa !2
  %7443 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 204
  %7444 = bitcast float* %7443 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7444, align 16, !tbaa !2
  %7445 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 208
  %7446 = bitcast float* %7445 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7446, align 16, !tbaa !2
  %7447 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 212
  %7448 = bitcast float* %7447 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7448, align 16, !tbaa !2
  %7449 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 216
  %7450 = bitcast float* %7449 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7450, align 16, !tbaa !2
  %7451 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 220
  %7452 = bitcast float* %7451 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7452, align 16, !tbaa !2
  %7453 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 224
  %7454 = bitcast float* %7453 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7454, align 16, !tbaa !2
  %7455 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 228
  %7456 = bitcast float* %7455 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7456, align 16, !tbaa !2
  %7457 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 232
  %7458 = bitcast float* %7457 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7458, align 16, !tbaa !2
  %7459 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 236
  %7460 = bitcast float* %7459 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7460, align 16, !tbaa !2
  %7461 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 240
  %7462 = bitcast float* %7461 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7462, align 16, !tbaa !2
  %7463 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 244
  %7464 = bitcast float* %7463 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7464, align 16, !tbaa !2
  %7465 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 248
  %7466 = bitcast float* %7465 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7466, align 16, !tbaa !2
  %7467 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7340, i64 252
  %7468 = bitcast float* %7467 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7468, align 16, !tbaa !2
  %7469 = add nuw nsw i64 %7340, 1
  %7470 = icmp eq i64 %7469, 256
  br i1 %7470, label %15603, label %7339

7471:                                             ; preds = %7161
  %7472 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0)) #15
  %7473 = icmp eq i32 %7472, 0
  br i1 %7473, label %7474, label %7781

7474:                                             ; preds = %7471, %7474
  %7475 = phi i64 [ %7515, %7474 ], [ 0, %7471 ]
  %7476 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7475
  %7477 = bitcast float* %7476 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7477, align 16, !tbaa !2
  %7478 = getelementptr inbounds float, float* %7476, i64 4
  %7479 = bitcast float* %7478 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7479, align 16, !tbaa !2
  %7480 = or i64 %7475, 8
  %7481 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7480
  %7482 = bitcast float* %7481 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7482, align 16, !tbaa !2
  %7483 = getelementptr inbounds float, float* %7481, i64 4
  %7484 = bitcast float* %7483 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7484, align 16, !tbaa !2
  %7485 = or i64 %7475, 16
  %7486 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7485
  %7487 = bitcast float* %7486 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7487, align 16, !tbaa !2
  %7488 = getelementptr inbounds float, float* %7486, i64 4
  %7489 = bitcast float* %7488 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7489, align 16, !tbaa !2
  %7490 = or i64 %7475, 24
  %7491 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7490
  %7492 = bitcast float* %7491 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7492, align 16, !tbaa !2
  %7493 = getelementptr inbounds float, float* %7491, i64 4
  %7494 = bitcast float* %7493 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7494, align 16, !tbaa !2
  %7495 = or i64 %7475, 32
  %7496 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7495
  %7497 = bitcast float* %7496 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7497, align 16, !tbaa !2
  %7498 = getelementptr inbounds float, float* %7496, i64 4
  %7499 = bitcast float* %7498 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7499, align 16, !tbaa !2
  %7500 = or i64 %7475, 40
  %7501 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7500
  %7502 = bitcast float* %7501 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7502, align 16, !tbaa !2
  %7503 = getelementptr inbounds float, float* %7501, i64 4
  %7504 = bitcast float* %7503 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7504, align 16, !tbaa !2
  %7505 = or i64 %7475, 48
  %7506 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7505
  %7507 = bitcast float* %7506 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7507, align 16, !tbaa !2
  %7508 = getelementptr inbounds float, float* %7506, i64 4
  %7509 = bitcast float* %7508 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7509, align 16, !tbaa !2
  %7510 = or i64 %7475, 56
  %7511 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7510
  %7512 = bitcast float* %7511 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7512, align 16, !tbaa !2
  %7513 = getelementptr inbounds float, float* %7511, i64 4
  %7514 = bitcast float* %7513 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7514, align 16, !tbaa !2
  %7515 = add nuw nsw i64 %7475, 64
  %7516 = icmp eq i64 %7515, 32000
  br i1 %7516, label %7517, label %7474, !llvm.loop !130

7517:                                             ; preds = %7474, %7517
  %7518 = phi i64 [ %7647, %7517 ], [ 0, %7474 ]
  %7519 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 0
  %7520 = bitcast float* %7519 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7520, align 16, !tbaa !2
  %7521 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 4
  %7522 = bitcast float* %7521 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7522, align 16, !tbaa !2
  %7523 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 8
  %7524 = bitcast float* %7523 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7524, align 16, !tbaa !2
  %7525 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 12
  %7526 = bitcast float* %7525 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7526, align 16, !tbaa !2
  %7527 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 16
  %7528 = bitcast float* %7527 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7528, align 16, !tbaa !2
  %7529 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 20
  %7530 = bitcast float* %7529 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7530, align 16, !tbaa !2
  %7531 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 24
  %7532 = bitcast float* %7531 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7532, align 16, !tbaa !2
  %7533 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 28
  %7534 = bitcast float* %7533 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7534, align 16, !tbaa !2
  %7535 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 32
  %7536 = bitcast float* %7535 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7536, align 16, !tbaa !2
  %7537 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 36
  %7538 = bitcast float* %7537 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7538, align 16, !tbaa !2
  %7539 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 40
  %7540 = bitcast float* %7539 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7540, align 16, !tbaa !2
  %7541 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 44
  %7542 = bitcast float* %7541 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7542, align 16, !tbaa !2
  %7543 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 48
  %7544 = bitcast float* %7543 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7544, align 16, !tbaa !2
  %7545 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 52
  %7546 = bitcast float* %7545 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7546, align 16, !tbaa !2
  %7547 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 56
  %7548 = bitcast float* %7547 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7548, align 16, !tbaa !2
  %7549 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 60
  %7550 = bitcast float* %7549 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7550, align 16, !tbaa !2
  %7551 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 64
  %7552 = bitcast float* %7551 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7552, align 16, !tbaa !2
  %7553 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 68
  %7554 = bitcast float* %7553 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7554, align 16, !tbaa !2
  %7555 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 72
  %7556 = bitcast float* %7555 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7556, align 16, !tbaa !2
  %7557 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 76
  %7558 = bitcast float* %7557 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7558, align 16, !tbaa !2
  %7559 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 80
  %7560 = bitcast float* %7559 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7560, align 16, !tbaa !2
  %7561 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 84
  %7562 = bitcast float* %7561 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7562, align 16, !tbaa !2
  %7563 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 88
  %7564 = bitcast float* %7563 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7564, align 16, !tbaa !2
  %7565 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 92
  %7566 = bitcast float* %7565 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7566, align 16, !tbaa !2
  %7567 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 96
  %7568 = bitcast float* %7567 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7568, align 16, !tbaa !2
  %7569 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 100
  %7570 = bitcast float* %7569 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7570, align 16, !tbaa !2
  %7571 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 104
  %7572 = bitcast float* %7571 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7572, align 16, !tbaa !2
  %7573 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 108
  %7574 = bitcast float* %7573 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7574, align 16, !tbaa !2
  %7575 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 112
  %7576 = bitcast float* %7575 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7576, align 16, !tbaa !2
  %7577 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 116
  %7578 = bitcast float* %7577 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7578, align 16, !tbaa !2
  %7579 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 120
  %7580 = bitcast float* %7579 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7580, align 16, !tbaa !2
  %7581 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 124
  %7582 = bitcast float* %7581 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7582, align 16, !tbaa !2
  %7583 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 128
  %7584 = bitcast float* %7583 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7584, align 16, !tbaa !2
  %7585 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 132
  %7586 = bitcast float* %7585 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7586, align 16, !tbaa !2
  %7587 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 136
  %7588 = bitcast float* %7587 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7588, align 16, !tbaa !2
  %7589 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 140
  %7590 = bitcast float* %7589 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7590, align 16, !tbaa !2
  %7591 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 144
  %7592 = bitcast float* %7591 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7592, align 16, !tbaa !2
  %7593 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 148
  %7594 = bitcast float* %7593 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7594, align 16, !tbaa !2
  %7595 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 152
  %7596 = bitcast float* %7595 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7596, align 16, !tbaa !2
  %7597 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 156
  %7598 = bitcast float* %7597 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7598, align 16, !tbaa !2
  %7599 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 160
  %7600 = bitcast float* %7599 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7600, align 16, !tbaa !2
  %7601 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 164
  %7602 = bitcast float* %7601 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7602, align 16, !tbaa !2
  %7603 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 168
  %7604 = bitcast float* %7603 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7604, align 16, !tbaa !2
  %7605 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 172
  %7606 = bitcast float* %7605 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7606, align 16, !tbaa !2
  %7607 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 176
  %7608 = bitcast float* %7607 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7608, align 16, !tbaa !2
  %7609 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 180
  %7610 = bitcast float* %7609 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7610, align 16, !tbaa !2
  %7611 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 184
  %7612 = bitcast float* %7611 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7612, align 16, !tbaa !2
  %7613 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 188
  %7614 = bitcast float* %7613 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7614, align 16, !tbaa !2
  %7615 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 192
  %7616 = bitcast float* %7615 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7616, align 16, !tbaa !2
  %7617 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 196
  %7618 = bitcast float* %7617 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7618, align 16, !tbaa !2
  %7619 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 200
  %7620 = bitcast float* %7619 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7620, align 16, !tbaa !2
  %7621 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 204
  %7622 = bitcast float* %7621 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7622, align 16, !tbaa !2
  %7623 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 208
  %7624 = bitcast float* %7623 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7624, align 16, !tbaa !2
  %7625 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 212
  %7626 = bitcast float* %7625 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7626, align 16, !tbaa !2
  %7627 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 216
  %7628 = bitcast float* %7627 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7628, align 16, !tbaa !2
  %7629 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 220
  %7630 = bitcast float* %7629 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7630, align 16, !tbaa !2
  %7631 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 224
  %7632 = bitcast float* %7631 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7632, align 16, !tbaa !2
  %7633 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 228
  %7634 = bitcast float* %7633 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7634, align 16, !tbaa !2
  %7635 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 232
  %7636 = bitcast float* %7635 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7636, align 16, !tbaa !2
  %7637 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 236
  %7638 = bitcast float* %7637 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7638, align 16, !tbaa !2
  %7639 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 240
  %7640 = bitcast float* %7639 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7640, align 16, !tbaa !2
  %7641 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 244
  %7642 = bitcast float* %7641 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7642, align 16, !tbaa !2
  %7643 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 248
  %7644 = bitcast float* %7643 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7644, align 16, !tbaa !2
  %7645 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7518, i64 252
  %7646 = bitcast float* %7645 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %7646, align 16, !tbaa !2
  %7647 = add nuw nsw i64 %7518, 1
  %7648 = icmp eq i64 %7647, 256
  br i1 %7648, label %7649, label %7517

7649:                                             ; preds = %7517, %7649
  %7650 = phi i64 [ %7779, %7649 ], [ 0, %7517 ]
  %7651 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 0
  %7652 = bitcast float* %7651 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7652, align 16, !tbaa !2
  %7653 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 4
  %7654 = bitcast float* %7653 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7654, align 16, !tbaa !2
  %7655 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 8
  %7656 = bitcast float* %7655 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7656, align 16, !tbaa !2
  %7657 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 12
  %7658 = bitcast float* %7657 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7658, align 16, !tbaa !2
  %7659 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 16
  %7660 = bitcast float* %7659 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7660, align 16, !tbaa !2
  %7661 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 20
  %7662 = bitcast float* %7661 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7662, align 16, !tbaa !2
  %7663 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 24
  %7664 = bitcast float* %7663 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7664, align 16, !tbaa !2
  %7665 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 28
  %7666 = bitcast float* %7665 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7666, align 16, !tbaa !2
  %7667 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 32
  %7668 = bitcast float* %7667 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7668, align 16, !tbaa !2
  %7669 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 36
  %7670 = bitcast float* %7669 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7670, align 16, !tbaa !2
  %7671 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 40
  %7672 = bitcast float* %7671 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7672, align 16, !tbaa !2
  %7673 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 44
  %7674 = bitcast float* %7673 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7674, align 16, !tbaa !2
  %7675 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 48
  %7676 = bitcast float* %7675 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7676, align 16, !tbaa !2
  %7677 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 52
  %7678 = bitcast float* %7677 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7678, align 16, !tbaa !2
  %7679 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 56
  %7680 = bitcast float* %7679 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7680, align 16, !tbaa !2
  %7681 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 60
  %7682 = bitcast float* %7681 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7682, align 16, !tbaa !2
  %7683 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 64
  %7684 = bitcast float* %7683 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7684, align 16, !tbaa !2
  %7685 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 68
  %7686 = bitcast float* %7685 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7686, align 16, !tbaa !2
  %7687 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 72
  %7688 = bitcast float* %7687 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7688, align 16, !tbaa !2
  %7689 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 76
  %7690 = bitcast float* %7689 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7690, align 16, !tbaa !2
  %7691 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 80
  %7692 = bitcast float* %7691 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7692, align 16, !tbaa !2
  %7693 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 84
  %7694 = bitcast float* %7693 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7694, align 16, !tbaa !2
  %7695 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 88
  %7696 = bitcast float* %7695 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7696, align 16, !tbaa !2
  %7697 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 92
  %7698 = bitcast float* %7697 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7698, align 16, !tbaa !2
  %7699 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 96
  %7700 = bitcast float* %7699 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7700, align 16, !tbaa !2
  %7701 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 100
  %7702 = bitcast float* %7701 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7702, align 16, !tbaa !2
  %7703 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 104
  %7704 = bitcast float* %7703 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7704, align 16, !tbaa !2
  %7705 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 108
  %7706 = bitcast float* %7705 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7706, align 16, !tbaa !2
  %7707 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 112
  %7708 = bitcast float* %7707 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7708, align 16, !tbaa !2
  %7709 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 116
  %7710 = bitcast float* %7709 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7710, align 16, !tbaa !2
  %7711 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 120
  %7712 = bitcast float* %7711 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7712, align 16, !tbaa !2
  %7713 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 124
  %7714 = bitcast float* %7713 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7714, align 16, !tbaa !2
  %7715 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 128
  %7716 = bitcast float* %7715 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7716, align 16, !tbaa !2
  %7717 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 132
  %7718 = bitcast float* %7717 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7718, align 16, !tbaa !2
  %7719 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 136
  %7720 = bitcast float* %7719 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7720, align 16, !tbaa !2
  %7721 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 140
  %7722 = bitcast float* %7721 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7722, align 16, !tbaa !2
  %7723 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 144
  %7724 = bitcast float* %7723 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7724, align 16, !tbaa !2
  %7725 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 148
  %7726 = bitcast float* %7725 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7726, align 16, !tbaa !2
  %7727 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 152
  %7728 = bitcast float* %7727 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7728, align 16, !tbaa !2
  %7729 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 156
  %7730 = bitcast float* %7729 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7730, align 16, !tbaa !2
  %7731 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 160
  %7732 = bitcast float* %7731 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7732, align 16, !tbaa !2
  %7733 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 164
  %7734 = bitcast float* %7733 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7734, align 16, !tbaa !2
  %7735 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 168
  %7736 = bitcast float* %7735 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7736, align 16, !tbaa !2
  %7737 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 172
  %7738 = bitcast float* %7737 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7738, align 16, !tbaa !2
  %7739 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 176
  %7740 = bitcast float* %7739 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7740, align 16, !tbaa !2
  %7741 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 180
  %7742 = bitcast float* %7741 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7742, align 16, !tbaa !2
  %7743 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 184
  %7744 = bitcast float* %7743 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7744, align 16, !tbaa !2
  %7745 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 188
  %7746 = bitcast float* %7745 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7746, align 16, !tbaa !2
  %7747 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 192
  %7748 = bitcast float* %7747 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7748, align 16, !tbaa !2
  %7749 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 196
  %7750 = bitcast float* %7749 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7750, align 16, !tbaa !2
  %7751 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 200
  %7752 = bitcast float* %7751 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7752, align 16, !tbaa !2
  %7753 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 204
  %7754 = bitcast float* %7753 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7754, align 16, !tbaa !2
  %7755 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 208
  %7756 = bitcast float* %7755 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7756, align 16, !tbaa !2
  %7757 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 212
  %7758 = bitcast float* %7757 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7758, align 16, !tbaa !2
  %7759 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 216
  %7760 = bitcast float* %7759 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7760, align 16, !tbaa !2
  %7761 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 220
  %7762 = bitcast float* %7761 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7762, align 16, !tbaa !2
  %7763 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 224
  %7764 = bitcast float* %7763 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7764, align 16, !tbaa !2
  %7765 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 228
  %7766 = bitcast float* %7765 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7766, align 16, !tbaa !2
  %7767 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 232
  %7768 = bitcast float* %7767 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7768, align 16, !tbaa !2
  %7769 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 236
  %7770 = bitcast float* %7769 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7770, align 16, !tbaa !2
  %7771 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 240
  %7772 = bitcast float* %7771 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7772, align 16, !tbaa !2
  %7773 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 244
  %7774 = bitcast float* %7773 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7774, align 16, !tbaa !2
  %7775 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 248
  %7776 = bitcast float* %7775 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7776, align 16, !tbaa !2
  %7777 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7650, i64 252
  %7778 = bitcast float* %7777 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7778, align 16, !tbaa !2
  %7779 = add nuw nsw i64 %7650, 1
  %7780 = icmp eq i64 %7779, 256
  br i1 %7780, label %15603, label %7649

7781:                                             ; preds = %7471
  %7782 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0)) #15
  %7783 = icmp eq i32 %7782, 0
  br i1 %7783, label %7784, label %7982

7784:                                             ; preds = %7781, %7784
  %7785 = phi i64 [ %7800, %7784 ], [ 0, %7781 ]
  %7786 = phi <4 x i64> [ %7801, %7784 ], [ <i64 0, i64 1, i64 2, i64 3>, %7781 ]
  %7787 = trunc <4 x i64> %7786 to <4 x i32>
  %7788 = add <4 x i32> %7787, <i32 1, i32 1, i32 1, i32 1>
  %7789 = sitofp <4 x i32> %7788 to <4 x float>
  %7790 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %7789
  %7791 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7785
  %7792 = bitcast float* %7791 to <4 x float>*
  store <4 x float> %7790, <4 x float>* %7792, align 16, !tbaa !2
  %7793 = or i64 %7785, 4
  %7794 = trunc <4 x i64> %7786 to <4 x i32>
  %7795 = add <4 x i32> %7794, <i32 5, i32 5, i32 5, i32 5>
  %7796 = sitofp <4 x i32> %7795 to <4 x float>
  %7797 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %7796
  %7798 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7793
  %7799 = bitcast float* %7798 to <4 x float>*
  store <4 x float> %7797, <4 x float>* %7799, align 16, !tbaa !2
  %7800 = add nuw nsw i64 %7785, 8
  %7801 = add <4 x i64> %7786, <i64 8, i64 8, i64 8, i64 8>
  %7802 = icmp eq i64 %7800, 32000
  br i1 %7802, label %7803, label %7784, !llvm.loop !131

7803:                                             ; preds = %7784
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %7804

7804:                                             ; preds = %7804, %7803
  %7805 = phi i64 [ 0, %7803 ], [ %7820, %7804 ]
  %7806 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %7803 ], [ %7821, %7804 ]
  %7807 = trunc <4 x i64> %7806 to <4 x i32>
  %7808 = add <4 x i32> %7807, <i32 1, i32 1, i32 1, i32 1>
  %7809 = sitofp <4 x i32> %7808 to <4 x float>
  %7810 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %7809
  %7811 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7805
  %7812 = bitcast float* %7811 to <4 x float>*
  store <4 x float> %7810, <4 x float>* %7812, align 16, !tbaa !2
  %7813 = or i64 %7805, 4
  %7814 = trunc <4 x i64> %7806 to <4 x i32>
  %7815 = add <4 x i32> %7814, <i32 5, i32 5, i32 5, i32 5>
  %7816 = sitofp <4 x i32> %7815 to <4 x float>
  %7817 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %7816
  %7818 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7813
  %7819 = bitcast float* %7818 to <4 x float>*
  store <4 x float> %7817, <4 x float>* %7819, align 16, !tbaa !2
  %7820 = add nuw nsw i64 %7805, 8
  %7821 = add <4 x i64> %7806, <i64 8, i64 8, i64 8, i64 8>
  %7822 = icmp eq i64 %7820, 32000
  br i1 %7822, label %7823, label %7804, !llvm.loop !132

7823:                                             ; preds = %7804, %7823
  %7824 = phi i64 [ %7839, %7823 ], [ 0, %7804 ]
  %7825 = phi <4 x i64> [ %7840, %7823 ], [ <i64 0, i64 1, i64 2, i64 3>, %7804 ]
  %7826 = trunc <4 x i64> %7825 to <4 x i32>
  %7827 = add <4 x i32> %7826, <i32 1, i32 1, i32 1, i32 1>
  %7828 = sitofp <4 x i32> %7827 to <4 x float>
  %7829 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %7828
  %7830 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %7824
  %7831 = bitcast float* %7830 to <4 x float>*
  store <4 x float> %7829, <4 x float>* %7831, align 16, !tbaa !2
  %7832 = or i64 %7824, 4
  %7833 = trunc <4 x i64> %7825 to <4 x i32>
  %7834 = add <4 x i32> %7833, <i32 5, i32 5, i32 5, i32 5>
  %7835 = sitofp <4 x i32> %7834 to <4 x float>
  %7836 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %7835
  %7837 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %7832
  %7838 = bitcast float* %7837 to <4 x float>*
  store <4 x float> %7836, <4 x float>* %7838, align 16, !tbaa !2
  %7839 = add nuw nsw i64 %7824, 8
  %7840 = add <4 x i64> %7825, <i64 8, i64 8, i64 8, i64 8>
  %7841 = icmp eq i64 %7839, 32000
  br i1 %7841, label %7842, label %7823, !llvm.loop !133

7842:                                             ; preds = %7823
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @e to i8*), i8 0, i64 128000, i1 false)
  br label %7843

7843:                                             ; preds = %7842, %7843
  %7844 = phi i64 [ %7845, %7843 ], [ 0, %7842 ]
  %7845 = add nuw nsw i64 %7844, 1
  %7846 = trunc i64 %7845 to i32
  %7847 = sitofp i32 %7846 to float
  %7848 = fdiv float 1.000000e+00, %7847
  %7849 = insertelement <4 x float> undef, float %7848, i32 0
  %7850 = shufflevector <4 x float> %7849, <4 x float> undef, <4 x i32> zeroinitializer
  %7851 = insertelement <4 x float> undef, float %7848, i32 0
  %7852 = shufflevector <4 x float> %7851, <4 x float> undef, <4 x i32> zeroinitializer
  %7853 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 0
  %7854 = bitcast float* %7853 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7854, align 16, !tbaa !2
  %7855 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 4
  %7856 = bitcast float* %7855 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7856, align 16, !tbaa !2
  %7857 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 8
  %7858 = bitcast float* %7857 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7858, align 16, !tbaa !2
  %7859 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 12
  %7860 = bitcast float* %7859 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7860, align 16, !tbaa !2
  %7861 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 16
  %7862 = bitcast float* %7861 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7862, align 16, !tbaa !2
  %7863 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 20
  %7864 = bitcast float* %7863 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7864, align 16, !tbaa !2
  %7865 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 24
  %7866 = bitcast float* %7865 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7866, align 16, !tbaa !2
  %7867 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 28
  %7868 = bitcast float* %7867 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7868, align 16, !tbaa !2
  %7869 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 32
  %7870 = bitcast float* %7869 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7870, align 16, !tbaa !2
  %7871 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 36
  %7872 = bitcast float* %7871 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7872, align 16, !tbaa !2
  %7873 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 40
  %7874 = bitcast float* %7873 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7874, align 16, !tbaa !2
  %7875 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 44
  %7876 = bitcast float* %7875 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7876, align 16, !tbaa !2
  %7877 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 48
  %7878 = bitcast float* %7877 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7878, align 16, !tbaa !2
  %7879 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 52
  %7880 = bitcast float* %7879 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7880, align 16, !tbaa !2
  %7881 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 56
  %7882 = bitcast float* %7881 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7882, align 16, !tbaa !2
  %7883 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 60
  %7884 = bitcast float* %7883 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7884, align 16, !tbaa !2
  %7885 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 64
  %7886 = bitcast float* %7885 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7886, align 16, !tbaa !2
  %7887 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 68
  %7888 = bitcast float* %7887 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7888, align 16, !tbaa !2
  %7889 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 72
  %7890 = bitcast float* %7889 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7890, align 16, !tbaa !2
  %7891 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 76
  %7892 = bitcast float* %7891 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7892, align 16, !tbaa !2
  %7893 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 80
  %7894 = bitcast float* %7893 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7894, align 16, !tbaa !2
  %7895 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 84
  %7896 = bitcast float* %7895 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7896, align 16, !tbaa !2
  %7897 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 88
  %7898 = bitcast float* %7897 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7898, align 16, !tbaa !2
  %7899 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 92
  %7900 = bitcast float* %7899 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7900, align 16, !tbaa !2
  %7901 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 96
  %7902 = bitcast float* %7901 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7902, align 16, !tbaa !2
  %7903 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 100
  %7904 = bitcast float* %7903 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7904, align 16, !tbaa !2
  %7905 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 104
  %7906 = bitcast float* %7905 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7906, align 16, !tbaa !2
  %7907 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 108
  %7908 = bitcast float* %7907 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7908, align 16, !tbaa !2
  %7909 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 112
  %7910 = bitcast float* %7909 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7910, align 16, !tbaa !2
  %7911 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 116
  %7912 = bitcast float* %7911 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7912, align 16, !tbaa !2
  %7913 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 120
  %7914 = bitcast float* %7913 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7914, align 16, !tbaa !2
  %7915 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 124
  %7916 = bitcast float* %7915 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7916, align 16, !tbaa !2
  %7917 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 128
  %7918 = bitcast float* %7917 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7918, align 16, !tbaa !2
  %7919 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 132
  %7920 = bitcast float* %7919 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7920, align 16, !tbaa !2
  %7921 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 136
  %7922 = bitcast float* %7921 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7922, align 16, !tbaa !2
  %7923 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 140
  %7924 = bitcast float* %7923 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7924, align 16, !tbaa !2
  %7925 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 144
  %7926 = bitcast float* %7925 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7926, align 16, !tbaa !2
  %7927 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 148
  %7928 = bitcast float* %7927 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7928, align 16, !tbaa !2
  %7929 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 152
  %7930 = bitcast float* %7929 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7930, align 16, !tbaa !2
  %7931 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 156
  %7932 = bitcast float* %7931 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7932, align 16, !tbaa !2
  %7933 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 160
  %7934 = bitcast float* %7933 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7934, align 16, !tbaa !2
  %7935 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 164
  %7936 = bitcast float* %7935 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7936, align 16, !tbaa !2
  %7937 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 168
  %7938 = bitcast float* %7937 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7938, align 16, !tbaa !2
  %7939 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 172
  %7940 = bitcast float* %7939 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7940, align 16, !tbaa !2
  %7941 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 176
  %7942 = bitcast float* %7941 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7942, align 16, !tbaa !2
  %7943 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 180
  %7944 = bitcast float* %7943 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7944, align 16, !tbaa !2
  %7945 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 184
  %7946 = bitcast float* %7945 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7946, align 16, !tbaa !2
  %7947 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 188
  %7948 = bitcast float* %7947 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7948, align 16, !tbaa !2
  %7949 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 192
  %7950 = bitcast float* %7949 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7950, align 16, !tbaa !2
  %7951 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 196
  %7952 = bitcast float* %7951 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7952, align 16, !tbaa !2
  %7953 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 200
  %7954 = bitcast float* %7953 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7954, align 16, !tbaa !2
  %7955 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 204
  %7956 = bitcast float* %7955 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7956, align 16, !tbaa !2
  %7957 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 208
  %7958 = bitcast float* %7957 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7958, align 16, !tbaa !2
  %7959 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 212
  %7960 = bitcast float* %7959 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7960, align 16, !tbaa !2
  %7961 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 216
  %7962 = bitcast float* %7961 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7962, align 16, !tbaa !2
  %7963 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 220
  %7964 = bitcast float* %7963 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7964, align 16, !tbaa !2
  %7965 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 224
  %7966 = bitcast float* %7965 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7966, align 16, !tbaa !2
  %7967 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 228
  %7968 = bitcast float* %7967 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7968, align 16, !tbaa !2
  %7969 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 232
  %7970 = bitcast float* %7969 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7970, align 16, !tbaa !2
  %7971 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 236
  %7972 = bitcast float* %7971 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7972, align 16, !tbaa !2
  %7973 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 240
  %7974 = bitcast float* %7973 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7974, align 16, !tbaa !2
  %7975 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 244
  %7976 = bitcast float* %7975 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7976, align 16, !tbaa !2
  %7977 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 248
  %7978 = bitcast float* %7977 to <4 x float>*
  store <4 x float> %7850, <4 x float>* %7978, align 16, !tbaa !2
  %7979 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7844, i64 252
  %7980 = bitcast float* %7979 to <4 x float>*
  store <4 x float> %7852, <4 x float>* %7980, align 16, !tbaa !2
  %7981 = icmp eq i64 %7845, 256
  br i1 %7981, label %15603, label %7843

7982:                                             ; preds = %7781
  %7983 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #15
  %7984 = icmp eq i32 %7983, 0
  br i1 %7984, label %7985, label %8113

7985:                                             ; preds = %7982, %7985
  %7986 = phi i64 [ %8026, %7985 ], [ 0, %7982 ]
  %7987 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7986
  %7988 = bitcast float* %7987 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7988, align 16, !tbaa !2
  %7989 = getelementptr inbounds float, float* %7987, i64 4
  %7990 = bitcast float* %7989 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7990, align 16, !tbaa !2
  %7991 = or i64 %7986, 8
  %7992 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7991
  %7993 = bitcast float* %7992 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7993, align 16, !tbaa !2
  %7994 = getelementptr inbounds float, float* %7992, i64 4
  %7995 = bitcast float* %7994 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7995, align 16, !tbaa !2
  %7996 = or i64 %7986, 16
  %7997 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7996
  %7998 = bitcast float* %7997 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7998, align 16, !tbaa !2
  %7999 = getelementptr inbounds float, float* %7997, i64 4
  %8000 = bitcast float* %7999 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8000, align 16, !tbaa !2
  %8001 = or i64 %7986, 24
  %8002 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8001
  %8003 = bitcast float* %8002 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8003, align 16, !tbaa !2
  %8004 = getelementptr inbounds float, float* %8002, i64 4
  %8005 = bitcast float* %8004 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8005, align 16, !tbaa !2
  %8006 = or i64 %7986, 32
  %8007 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8006
  %8008 = bitcast float* %8007 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8008, align 16, !tbaa !2
  %8009 = getelementptr inbounds float, float* %8007, i64 4
  %8010 = bitcast float* %8009 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8010, align 16, !tbaa !2
  %8011 = or i64 %7986, 40
  %8012 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8011
  %8013 = bitcast float* %8012 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8013, align 16, !tbaa !2
  %8014 = getelementptr inbounds float, float* %8012, i64 4
  %8015 = bitcast float* %8014 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8015, align 16, !tbaa !2
  %8016 = or i64 %7986, 48
  %8017 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8016
  %8018 = bitcast float* %8017 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8018, align 16, !tbaa !2
  %8019 = getelementptr inbounds float, float* %8017, i64 4
  %8020 = bitcast float* %8019 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8020, align 16, !tbaa !2
  %8021 = or i64 %7986, 56
  %8022 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8021
  %8023 = bitcast float* %8022 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8023, align 16, !tbaa !2
  %8024 = getelementptr inbounds float, float* %8022, i64 4
  %8025 = bitcast float* %8024 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8025, align 16, !tbaa !2
  %8026 = add nuw nsw i64 %7986, 64
  %8027 = icmp eq i64 %8026, 32000
  br i1 %8027, label %8028, label %7985, !llvm.loop !134

8028:                                             ; preds = %7985, %8028
  %8029 = phi i64 [ %8046, %8028 ], [ 0, %7985 ]
  %8030 = phi <4 x i64> [ %8047, %8028 ], [ <i64 0, i64 1, i64 2, i64 3>, %7985 ]
  %8031 = add nuw nsw <4 x i64> %8030, <i64 1, i64 1, i64 1, i64 1>
  %8032 = mul nuw nsw <4 x i64> %8031, %8031
  %8033 = trunc <4 x i64> %8032 to <4 x i32>
  %8034 = sitofp <4 x i32> %8033 to <4 x float>
  %8035 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8034
  %8036 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8029
  %8037 = bitcast float* %8036 to <4 x float>*
  store <4 x float> %8035, <4 x float>* %8037, align 16, !tbaa !2
  %8038 = or i64 %8029, 4
  %8039 = add <4 x i64> %8030, <i64 5, i64 5, i64 5, i64 5>
  %8040 = mul nuw nsw <4 x i64> %8039, %8039
  %8041 = trunc <4 x i64> %8040 to <4 x i32>
  %8042 = sitofp <4 x i32> %8041 to <4 x float>
  %8043 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8042
  %8044 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8038
  %8045 = bitcast float* %8044 to <4 x float>*
  store <4 x float> %8043, <4 x float>* %8045, align 16, !tbaa !2
  %8046 = add nuw nsw i64 %8029, 8
  %8047 = add <4 x i64> %8030, <i64 8, i64 8, i64 8, i64 8>
  %8048 = icmp eq i64 %8046, 32000
  br i1 %8048, label %8049, label %8028, !llvm.loop !135

8049:                                             ; preds = %8028, %8049
  %8050 = phi i64 [ %8067, %8049 ], [ 0, %8028 ]
  %8051 = phi <4 x i64> [ %8068, %8049 ], [ <i64 0, i64 1, i64 2, i64 3>, %8028 ]
  %8052 = add nuw nsw <4 x i64> %8051, <i64 1, i64 1, i64 1, i64 1>
  %8053 = mul nuw nsw <4 x i64> %8052, %8052
  %8054 = trunc <4 x i64> %8053 to <4 x i32>
  %8055 = sitofp <4 x i32> %8054 to <4 x float>
  %8056 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8055
  %8057 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8050
  %8058 = bitcast float* %8057 to <4 x float>*
  store <4 x float> %8056, <4 x float>* %8058, align 16, !tbaa !2
  %8059 = or i64 %8050, 4
  %8060 = add <4 x i64> %8051, <i64 5, i64 5, i64 5, i64 5>
  %8061 = mul nuw nsw <4 x i64> %8060, %8060
  %8062 = trunc <4 x i64> %8061 to <4 x i32>
  %8063 = sitofp <4 x i32> %8062 to <4 x float>
  %8064 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8063
  %8065 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8059
  %8066 = bitcast float* %8065 to <4 x float>*
  store <4 x float> %8064, <4 x float>* %8066, align 16, !tbaa !2
  %8067 = add nuw nsw i64 %8050, 8
  %8068 = add <4 x i64> %8051, <i64 8, i64 8, i64 8, i64 8>
  %8069 = icmp eq i64 %8067, 32000
  br i1 %8069, label %8070, label %8049, !llvm.loop !136

8070:                                             ; preds = %8049, %8070
  %8071 = phi i64 [ %8111, %8070 ], [ 0, %8049 ]
  %8072 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8071
  %8073 = bitcast float* %8072 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8073, align 16, !tbaa !2
  %8074 = getelementptr inbounds float, float* %8072, i64 4
  %8075 = bitcast float* %8074 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8075, align 16, !tbaa !2
  %8076 = or i64 %8071, 8
  %8077 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8076
  %8078 = bitcast float* %8077 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8078, align 16, !tbaa !2
  %8079 = getelementptr inbounds float, float* %8077, i64 4
  %8080 = bitcast float* %8079 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8080, align 16, !tbaa !2
  %8081 = or i64 %8071, 16
  %8082 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8081
  %8083 = bitcast float* %8082 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8083, align 16, !tbaa !2
  %8084 = getelementptr inbounds float, float* %8082, i64 4
  %8085 = bitcast float* %8084 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8085, align 16, !tbaa !2
  %8086 = or i64 %8071, 24
  %8087 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8086
  %8088 = bitcast float* %8087 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8088, align 16, !tbaa !2
  %8089 = getelementptr inbounds float, float* %8087, i64 4
  %8090 = bitcast float* %8089 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8090, align 16, !tbaa !2
  %8091 = or i64 %8071, 32
  %8092 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8091
  %8093 = bitcast float* %8092 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8093, align 16, !tbaa !2
  %8094 = getelementptr inbounds float, float* %8092, i64 4
  %8095 = bitcast float* %8094 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8095, align 16, !tbaa !2
  %8096 = or i64 %8071, 40
  %8097 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8096
  %8098 = bitcast float* %8097 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8098, align 16, !tbaa !2
  %8099 = getelementptr inbounds float, float* %8097, i64 4
  %8100 = bitcast float* %8099 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8100, align 16, !tbaa !2
  %8101 = or i64 %8071, 48
  %8102 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8101
  %8103 = bitcast float* %8102 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8103, align 16, !tbaa !2
  %8104 = getelementptr inbounds float, float* %8102, i64 4
  %8105 = bitcast float* %8104 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8105, align 16, !tbaa !2
  %8106 = or i64 %8071, 56
  %8107 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8106
  %8108 = bitcast float* %8107 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8108, align 16, !tbaa !2
  %8109 = getelementptr inbounds float, float* %8107, i64 4
  %8110 = bitcast float* %8109 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8110, align 16, !tbaa !2
  %8111 = add nuw nsw i64 %8071, 64
  %8112 = icmp eq i64 %8111, 32000
  br i1 %8112, label %15603, label %8070, !llvm.loop !137

8113:                                             ; preds = %7982
  %8114 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0)) #15
  %8115 = icmp eq i32 %8114, 0
  br i1 %8115, label %8116, label %8197

8116:                                             ; preds = %8113, %8116
  %8117 = phi i64 [ %8157, %8116 ], [ 0, %8113 ]
  %8118 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8117
  %8119 = bitcast float* %8118 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8119, align 16, !tbaa !2
  %8120 = getelementptr inbounds float, float* %8118, i64 4
  %8121 = bitcast float* %8120 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8121, align 16, !tbaa !2
  %8122 = or i64 %8117, 8
  %8123 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8122
  %8124 = bitcast float* %8123 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8124, align 16, !tbaa !2
  %8125 = getelementptr inbounds float, float* %8123, i64 4
  %8126 = bitcast float* %8125 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8126, align 16, !tbaa !2
  %8127 = or i64 %8117, 16
  %8128 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8127
  %8129 = bitcast float* %8128 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8129, align 16, !tbaa !2
  %8130 = getelementptr inbounds float, float* %8128, i64 4
  %8131 = bitcast float* %8130 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8131, align 16, !tbaa !2
  %8132 = or i64 %8117, 24
  %8133 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8132
  %8134 = bitcast float* %8133 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8134, align 16, !tbaa !2
  %8135 = getelementptr inbounds float, float* %8133, i64 4
  %8136 = bitcast float* %8135 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8136, align 16, !tbaa !2
  %8137 = or i64 %8117, 32
  %8138 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8137
  %8139 = bitcast float* %8138 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8139, align 16, !tbaa !2
  %8140 = getelementptr inbounds float, float* %8138, i64 4
  %8141 = bitcast float* %8140 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8141, align 16, !tbaa !2
  %8142 = or i64 %8117, 40
  %8143 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8142
  %8144 = bitcast float* %8143 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8144, align 16, !tbaa !2
  %8145 = getelementptr inbounds float, float* %8143, i64 4
  %8146 = bitcast float* %8145 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8146, align 16, !tbaa !2
  %8147 = or i64 %8117, 48
  %8148 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8147
  %8149 = bitcast float* %8148 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8149, align 16, !tbaa !2
  %8150 = getelementptr inbounds float, float* %8148, i64 4
  %8151 = bitcast float* %8150 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8151, align 16, !tbaa !2
  %8152 = or i64 %8117, 56
  %8153 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8152
  %8154 = bitcast float* %8153 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8154, align 16, !tbaa !2
  %8155 = getelementptr inbounds float, float* %8153, i64 4
  %8156 = bitcast float* %8155 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8156, align 16, !tbaa !2
  %8157 = add nuw nsw i64 %8117, 64
  %8158 = icmp eq i64 %8157, 32000
  br i1 %8158, label %8159, label %8116, !llvm.loop !138

8159:                                             ; preds = %8116, %8159
  %8160 = phi i64 [ %8175, %8159 ], [ 0, %8116 ]
  %8161 = phi <4 x i64> [ %8176, %8159 ], [ <i64 0, i64 1, i64 2, i64 3>, %8116 ]
  %8162 = trunc <4 x i64> %8161 to <4 x i32>
  %8163 = add <4 x i32> %8162, <i32 1, i32 1, i32 1, i32 1>
  %8164 = sitofp <4 x i32> %8163 to <4 x float>
  %8165 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8164
  %8166 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8160
  %8167 = bitcast float* %8166 to <4 x float>*
  store <4 x float> %8165, <4 x float>* %8167, align 16, !tbaa !2
  %8168 = or i64 %8160, 4
  %8169 = trunc <4 x i64> %8161 to <4 x i32>
  %8170 = add <4 x i32> %8169, <i32 5, i32 5, i32 5, i32 5>
  %8171 = sitofp <4 x i32> %8170 to <4 x float>
  %8172 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8171
  %8173 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8168
  %8174 = bitcast float* %8173 to <4 x float>*
  store <4 x float> %8172, <4 x float>* %8174, align 16, !tbaa !2
  %8175 = add nuw nsw i64 %8160, 8
  %8176 = add <4 x i64> %8161, <i64 8, i64 8, i64 8, i64 8>
  %8177 = icmp eq i64 %8175, 32000
  br i1 %8177, label %8178, label %8159, !llvm.loop !139

8178:                                             ; preds = %8159, %8178
  %8179 = phi i64 [ %8194, %8178 ], [ 0, %8159 ]
  %8180 = phi <4 x i64> [ %8195, %8178 ], [ <i64 0, i64 1, i64 2, i64 3>, %8159 ]
  %8181 = trunc <4 x i64> %8180 to <4 x i32>
  %8182 = add <4 x i32> %8181, <i32 1, i32 1, i32 1, i32 1>
  %8183 = sitofp <4 x i32> %8182 to <4 x float>
  %8184 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8183
  %8185 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8179
  %8186 = bitcast float* %8185 to <4 x float>*
  store <4 x float> %8184, <4 x float>* %8186, align 16, !tbaa !2
  %8187 = or i64 %8179, 4
  %8188 = trunc <4 x i64> %8180 to <4 x i32>
  %8189 = add <4 x i32> %8188, <i32 5, i32 5, i32 5, i32 5>
  %8190 = sitofp <4 x i32> %8189 to <4 x float>
  %8191 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8190
  %8192 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8187
  %8193 = bitcast float* %8192 to <4 x float>*
  store <4 x float> %8191, <4 x float>* %8193, align 16, !tbaa !2
  %8194 = add nuw nsw i64 %8179, 8
  %8195 = add <4 x i64> %8180, <i64 8, i64 8, i64 8, i64 8>
  %8196 = icmp eq i64 %8194, 32000
  br i1 %8196, label %15603, label %8178, !llvm.loop !140

8197:                                             ; preds = %8113
  %8198 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0)) #15
  %8199 = icmp eq i32 %8198, 0
  br i1 %8199, label %8200, label %8367

8200:                                             ; preds = %8197, %8200
  %8201 = phi i64 [ %8241, %8200 ], [ 0, %8197 ]
  %8202 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8201
  %8203 = bitcast float* %8202 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8203, align 16, !tbaa !2
  %8204 = getelementptr inbounds float, float* %8202, i64 4
  %8205 = bitcast float* %8204 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8205, align 16, !tbaa !2
  %8206 = or i64 %8201, 8
  %8207 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8206
  %8208 = bitcast float* %8207 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8208, align 16, !tbaa !2
  %8209 = getelementptr inbounds float, float* %8207, i64 4
  %8210 = bitcast float* %8209 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8210, align 16, !tbaa !2
  %8211 = or i64 %8201, 16
  %8212 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8211
  %8213 = bitcast float* %8212 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8213, align 16, !tbaa !2
  %8214 = getelementptr inbounds float, float* %8212, i64 4
  %8215 = bitcast float* %8214 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8215, align 16, !tbaa !2
  %8216 = or i64 %8201, 24
  %8217 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8216
  %8218 = bitcast float* %8217 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8218, align 16, !tbaa !2
  %8219 = getelementptr inbounds float, float* %8217, i64 4
  %8220 = bitcast float* %8219 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8220, align 16, !tbaa !2
  %8221 = or i64 %8201, 32
  %8222 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8221
  %8223 = bitcast float* %8222 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8223, align 16, !tbaa !2
  %8224 = getelementptr inbounds float, float* %8222, i64 4
  %8225 = bitcast float* %8224 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8225, align 16, !tbaa !2
  %8226 = or i64 %8201, 40
  %8227 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8226
  %8228 = bitcast float* %8227 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8228, align 16, !tbaa !2
  %8229 = getelementptr inbounds float, float* %8227, i64 4
  %8230 = bitcast float* %8229 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8230, align 16, !tbaa !2
  %8231 = or i64 %8201, 48
  %8232 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8231
  %8233 = bitcast float* %8232 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8233, align 16, !tbaa !2
  %8234 = getelementptr inbounds float, float* %8232, i64 4
  %8235 = bitcast float* %8234 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8235, align 16, !tbaa !2
  %8236 = or i64 %8201, 56
  %8237 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8236
  %8238 = bitcast float* %8237 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8238, align 16, !tbaa !2
  %8239 = getelementptr inbounds float, float* %8237, i64 4
  %8240 = bitcast float* %8239 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8240, align 16, !tbaa !2
  %8241 = add nuw nsw i64 %8201, 64
  %8242 = icmp eq i64 %8241, 32000
  br i1 %8242, label %8243, label %8200, !llvm.loop !141

8243:                                             ; preds = %8200, %8243
  %8244 = phi i64 [ %8284, %8243 ], [ 0, %8200 ]
  %8245 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8244
  %8246 = bitcast float* %8245 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8246, align 16, !tbaa !2
  %8247 = getelementptr inbounds float, float* %8245, i64 4
  %8248 = bitcast float* %8247 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8248, align 16, !tbaa !2
  %8249 = or i64 %8244, 8
  %8250 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8249
  %8251 = bitcast float* %8250 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8251, align 16, !tbaa !2
  %8252 = getelementptr inbounds float, float* %8250, i64 4
  %8253 = bitcast float* %8252 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8253, align 16, !tbaa !2
  %8254 = or i64 %8244, 16
  %8255 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8254
  %8256 = bitcast float* %8255 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8256, align 16, !tbaa !2
  %8257 = getelementptr inbounds float, float* %8255, i64 4
  %8258 = bitcast float* %8257 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8258, align 16, !tbaa !2
  %8259 = or i64 %8244, 24
  %8260 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8259
  %8261 = bitcast float* %8260 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8261, align 16, !tbaa !2
  %8262 = getelementptr inbounds float, float* %8260, i64 4
  %8263 = bitcast float* %8262 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8263, align 16, !tbaa !2
  %8264 = or i64 %8244, 32
  %8265 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8264
  %8266 = bitcast float* %8265 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8266, align 16, !tbaa !2
  %8267 = getelementptr inbounds float, float* %8265, i64 4
  %8268 = bitcast float* %8267 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8268, align 16, !tbaa !2
  %8269 = or i64 %8244, 40
  %8270 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8269
  %8271 = bitcast float* %8270 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8271, align 16, !tbaa !2
  %8272 = getelementptr inbounds float, float* %8270, i64 4
  %8273 = bitcast float* %8272 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8273, align 16, !tbaa !2
  %8274 = or i64 %8244, 48
  %8275 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8274
  %8276 = bitcast float* %8275 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8276, align 16, !tbaa !2
  %8277 = getelementptr inbounds float, float* %8275, i64 4
  %8278 = bitcast float* %8277 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8278, align 16, !tbaa !2
  %8279 = or i64 %8244, 56
  %8280 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8279
  %8281 = bitcast float* %8280 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8281, align 16, !tbaa !2
  %8282 = getelementptr inbounds float, float* %8280, i64 4
  %8283 = bitcast float* %8282 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8283, align 16, !tbaa !2
  %8284 = add nuw nsw i64 %8244, 64
  %8285 = icmp eq i64 %8284, 32000
  br i1 %8285, label %8286, label %8243, !llvm.loop !142

8286:                                             ; preds = %8243, %8286
  %8287 = phi i64 [ %8302, %8286 ], [ 0, %8243 ]
  %8288 = phi <4 x i64> [ %8303, %8286 ], [ <i64 0, i64 1, i64 2, i64 3>, %8243 ]
  %8289 = trunc <4 x i64> %8288 to <4 x i32>
  %8290 = add <4 x i32> %8289, <i32 1, i32 1, i32 1, i32 1>
  %8291 = sitofp <4 x i32> %8290 to <4 x float>
  %8292 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8291
  %8293 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8287
  %8294 = bitcast float* %8293 to <4 x float>*
  store <4 x float> %8292, <4 x float>* %8294, align 16, !tbaa !2
  %8295 = or i64 %8287, 4
  %8296 = trunc <4 x i64> %8288 to <4 x i32>
  %8297 = add <4 x i32> %8296, <i32 5, i32 5, i32 5, i32 5>
  %8298 = sitofp <4 x i32> %8297 to <4 x float>
  %8299 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8298
  %8300 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8295
  %8301 = bitcast float* %8300 to <4 x float>*
  store <4 x float> %8299, <4 x float>* %8301, align 16, !tbaa !2
  %8302 = add nuw nsw i64 %8287, 8
  %8303 = add <4 x i64> %8288, <i64 8, i64 8, i64 8, i64 8>
  %8304 = icmp eq i64 %8302, 32000
  br i1 %8304, label %8305, label %8286, !llvm.loop !143

8305:                                             ; preds = %8286, %8305
  %8306 = phi i64 [ %8321, %8305 ], [ 0, %8286 ]
  %8307 = phi <4 x i64> [ %8322, %8305 ], [ <i64 0, i64 1, i64 2, i64 3>, %8286 ]
  %8308 = trunc <4 x i64> %8307 to <4 x i32>
  %8309 = add <4 x i32> %8308, <i32 1, i32 1, i32 1, i32 1>
  %8310 = sitofp <4 x i32> %8309 to <4 x float>
  %8311 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8310
  %8312 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8306
  %8313 = bitcast float* %8312 to <4 x float>*
  store <4 x float> %8311, <4 x float>* %8313, align 16, !tbaa !2
  %8314 = or i64 %8306, 4
  %8315 = trunc <4 x i64> %8307 to <4 x i32>
  %8316 = add <4 x i32> %8315, <i32 5, i32 5, i32 5, i32 5>
  %8317 = sitofp <4 x i32> %8316 to <4 x float>
  %8318 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8317
  %8319 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8314
  %8320 = bitcast float* %8319 to <4 x float>*
  store <4 x float> %8318, <4 x float>* %8320, align 16, !tbaa !2
  %8321 = add nuw nsw i64 %8306, 8
  %8322 = add <4 x i64> %8307, <i64 8, i64 8, i64 8, i64 8>
  %8323 = icmp eq i64 %8321, 32000
  br i1 %8323, label %8324, label %8305, !llvm.loop !144

8324:                                             ; preds = %8305, %8324
  %8325 = phi i64 [ %8365, %8324 ], [ 0, %8305 ]
  %8326 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8325
  %8327 = bitcast float* %8326 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8327, align 16, !tbaa !2
  %8328 = getelementptr inbounds float, float* %8326, i64 4
  %8329 = bitcast float* %8328 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8329, align 16, !tbaa !2
  %8330 = or i64 %8325, 8
  %8331 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8330
  %8332 = bitcast float* %8331 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8332, align 16, !tbaa !2
  %8333 = getelementptr inbounds float, float* %8331, i64 4
  %8334 = bitcast float* %8333 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8334, align 16, !tbaa !2
  %8335 = or i64 %8325, 16
  %8336 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8335
  %8337 = bitcast float* %8336 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8337, align 16, !tbaa !2
  %8338 = getelementptr inbounds float, float* %8336, i64 4
  %8339 = bitcast float* %8338 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8339, align 16, !tbaa !2
  %8340 = or i64 %8325, 24
  %8341 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8340
  %8342 = bitcast float* %8341 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8342, align 16, !tbaa !2
  %8343 = getelementptr inbounds float, float* %8341, i64 4
  %8344 = bitcast float* %8343 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8344, align 16, !tbaa !2
  %8345 = or i64 %8325, 32
  %8346 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8345
  %8347 = bitcast float* %8346 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8347, align 16, !tbaa !2
  %8348 = getelementptr inbounds float, float* %8346, i64 4
  %8349 = bitcast float* %8348 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8349, align 16, !tbaa !2
  %8350 = or i64 %8325, 40
  %8351 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8350
  %8352 = bitcast float* %8351 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8352, align 16, !tbaa !2
  %8353 = getelementptr inbounds float, float* %8351, i64 4
  %8354 = bitcast float* %8353 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8354, align 16, !tbaa !2
  %8355 = or i64 %8325, 48
  %8356 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8355
  %8357 = bitcast float* %8356 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8357, align 16, !tbaa !2
  %8358 = getelementptr inbounds float, float* %8356, i64 4
  %8359 = bitcast float* %8358 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8359, align 16, !tbaa !2
  %8360 = or i64 %8325, 56
  %8361 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8360
  %8362 = bitcast float* %8361 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8362, align 16, !tbaa !2
  %8363 = getelementptr inbounds float, float* %8361, i64 4
  %8364 = bitcast float* %8363 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %8364, align 16, !tbaa !2
  %8365 = add nuw nsw i64 %8325, 64
  %8366 = icmp eq i64 %8365, 32000
  br i1 %8366, label %15603, label %8324, !llvm.loop !145

8367:                                             ; preds = %8197
  %8368 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0)) #15
  %8369 = icmp eq i32 %8368, 0
  br i1 %8369, label %8370, label %8561

8370:                                             ; preds = %8367, %8370
  %8371 = phi i64 [ %8411, %8370 ], [ 0, %8367 ]
  %8372 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8371
  %8373 = bitcast float* %8372 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8373, align 16, !tbaa !2
  %8374 = getelementptr inbounds float, float* %8372, i64 4
  %8375 = bitcast float* %8374 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8375, align 16, !tbaa !2
  %8376 = or i64 %8371, 8
  %8377 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8376
  %8378 = bitcast float* %8377 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8378, align 16, !tbaa !2
  %8379 = getelementptr inbounds float, float* %8377, i64 4
  %8380 = bitcast float* %8379 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8380, align 16, !tbaa !2
  %8381 = or i64 %8371, 16
  %8382 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8381
  %8383 = bitcast float* %8382 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8383, align 16, !tbaa !2
  %8384 = getelementptr inbounds float, float* %8382, i64 4
  %8385 = bitcast float* %8384 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8385, align 16, !tbaa !2
  %8386 = or i64 %8371, 24
  %8387 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8386
  %8388 = bitcast float* %8387 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8388, align 16, !tbaa !2
  %8389 = getelementptr inbounds float, float* %8387, i64 4
  %8390 = bitcast float* %8389 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8390, align 16, !tbaa !2
  %8391 = or i64 %8371, 32
  %8392 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8391
  %8393 = bitcast float* %8392 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8393, align 16, !tbaa !2
  %8394 = getelementptr inbounds float, float* %8392, i64 4
  %8395 = bitcast float* %8394 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8395, align 16, !tbaa !2
  %8396 = or i64 %8371, 40
  %8397 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8396
  %8398 = bitcast float* %8397 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8398, align 16, !tbaa !2
  %8399 = getelementptr inbounds float, float* %8397, i64 4
  %8400 = bitcast float* %8399 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8400, align 16, !tbaa !2
  %8401 = or i64 %8371, 48
  %8402 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8401
  %8403 = bitcast float* %8402 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8403, align 16, !tbaa !2
  %8404 = getelementptr inbounds float, float* %8402, i64 4
  %8405 = bitcast float* %8404 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8405, align 16, !tbaa !2
  %8406 = or i64 %8371, 56
  %8407 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8406
  %8408 = bitcast float* %8407 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8408, align 16, !tbaa !2
  %8409 = getelementptr inbounds float, float* %8407, i64 4
  %8410 = bitcast float* %8409 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8410, align 16, !tbaa !2
  %8411 = add nuw nsw i64 %8371, 64
  %8412 = icmp eq i64 %8411, 32000
  br i1 %8412, label %8413, label %8370, !llvm.loop !146

8413:                                             ; preds = %8370, %8413
  %8414 = phi i64 [ %8454, %8413 ], [ 0, %8370 ]
  %8415 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8414
  %8416 = bitcast float* %8415 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8416, align 16, !tbaa !2
  %8417 = getelementptr inbounds float, float* %8415, i64 4
  %8418 = bitcast float* %8417 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8418, align 16, !tbaa !2
  %8419 = or i64 %8414, 8
  %8420 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8419
  %8421 = bitcast float* %8420 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8421, align 16, !tbaa !2
  %8422 = getelementptr inbounds float, float* %8420, i64 4
  %8423 = bitcast float* %8422 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8423, align 16, !tbaa !2
  %8424 = or i64 %8414, 16
  %8425 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8424
  %8426 = bitcast float* %8425 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8426, align 16, !tbaa !2
  %8427 = getelementptr inbounds float, float* %8425, i64 4
  %8428 = bitcast float* %8427 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8428, align 16, !tbaa !2
  %8429 = or i64 %8414, 24
  %8430 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8429
  %8431 = bitcast float* %8430 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8431, align 16, !tbaa !2
  %8432 = getelementptr inbounds float, float* %8430, i64 4
  %8433 = bitcast float* %8432 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8433, align 16, !tbaa !2
  %8434 = or i64 %8414, 32
  %8435 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8434
  %8436 = bitcast float* %8435 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8436, align 16, !tbaa !2
  %8437 = getelementptr inbounds float, float* %8435, i64 4
  %8438 = bitcast float* %8437 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8438, align 16, !tbaa !2
  %8439 = or i64 %8414, 40
  %8440 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8439
  %8441 = bitcast float* %8440 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8441, align 16, !tbaa !2
  %8442 = getelementptr inbounds float, float* %8440, i64 4
  %8443 = bitcast float* %8442 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8443, align 16, !tbaa !2
  %8444 = or i64 %8414, 48
  %8445 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8444
  %8446 = bitcast float* %8445 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8446, align 16, !tbaa !2
  %8447 = getelementptr inbounds float, float* %8445, i64 4
  %8448 = bitcast float* %8447 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8448, align 16, !tbaa !2
  %8449 = or i64 %8414, 56
  %8450 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8449
  %8451 = bitcast float* %8450 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8451, align 16, !tbaa !2
  %8452 = getelementptr inbounds float, float* %8450, i64 4
  %8453 = bitcast float* %8452 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8453, align 16, !tbaa !2
  %8454 = add nuw nsw i64 %8414, 64
  %8455 = icmp eq i64 %8454, 32000
  br i1 %8455, label %8456, label %8413, !llvm.loop !147

8456:                                             ; preds = %8413, %8456
  %8457 = phi i64 [ %8497, %8456 ], [ 0, %8413 ]
  %8458 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8457
  %8459 = bitcast float* %8458 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8459, align 16, !tbaa !2
  %8460 = getelementptr inbounds float, float* %8458, i64 4
  %8461 = bitcast float* %8460 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8461, align 16, !tbaa !2
  %8462 = or i64 %8457, 8
  %8463 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8462
  %8464 = bitcast float* %8463 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8464, align 16, !tbaa !2
  %8465 = getelementptr inbounds float, float* %8463, i64 4
  %8466 = bitcast float* %8465 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8466, align 16, !tbaa !2
  %8467 = or i64 %8457, 16
  %8468 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8467
  %8469 = bitcast float* %8468 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8469, align 16, !tbaa !2
  %8470 = getelementptr inbounds float, float* %8468, i64 4
  %8471 = bitcast float* %8470 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8471, align 16, !tbaa !2
  %8472 = or i64 %8457, 24
  %8473 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8472
  %8474 = bitcast float* %8473 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8474, align 16, !tbaa !2
  %8475 = getelementptr inbounds float, float* %8473, i64 4
  %8476 = bitcast float* %8475 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8476, align 16, !tbaa !2
  %8477 = or i64 %8457, 32
  %8478 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8477
  %8479 = bitcast float* %8478 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8479, align 16, !tbaa !2
  %8480 = getelementptr inbounds float, float* %8478, i64 4
  %8481 = bitcast float* %8480 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8481, align 16, !tbaa !2
  %8482 = or i64 %8457, 40
  %8483 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8482
  %8484 = bitcast float* %8483 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8484, align 16, !tbaa !2
  %8485 = getelementptr inbounds float, float* %8483, i64 4
  %8486 = bitcast float* %8485 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8486, align 16, !tbaa !2
  %8487 = or i64 %8457, 48
  %8488 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8487
  %8489 = bitcast float* %8488 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8489, align 16, !tbaa !2
  %8490 = getelementptr inbounds float, float* %8488, i64 4
  %8491 = bitcast float* %8490 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8491, align 16, !tbaa !2
  %8492 = or i64 %8457, 56
  %8493 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8492
  %8494 = bitcast float* %8493 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8494, align 16, !tbaa !2
  %8495 = getelementptr inbounds float, float* %8493, i64 4
  %8496 = bitcast float* %8495 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8496, align 16, !tbaa !2
  %8497 = add nuw nsw i64 %8457, 64
  %8498 = icmp eq i64 %8497, 32000
  br i1 %8498, label %8499, label %8456, !llvm.loop !148

8499:                                             ; preds = %8456, %8499
  %8500 = phi i64 [ %8540, %8499 ], [ 0, %8456 ]
  %8501 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8500
  %8502 = bitcast float* %8501 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8502, align 16, !tbaa !2
  %8503 = getelementptr inbounds float, float* %8501, i64 4
  %8504 = bitcast float* %8503 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8504, align 16, !tbaa !2
  %8505 = or i64 %8500, 8
  %8506 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8505
  %8507 = bitcast float* %8506 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8507, align 16, !tbaa !2
  %8508 = getelementptr inbounds float, float* %8506, i64 4
  %8509 = bitcast float* %8508 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8509, align 16, !tbaa !2
  %8510 = or i64 %8500, 16
  %8511 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8510
  %8512 = bitcast float* %8511 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8512, align 16, !tbaa !2
  %8513 = getelementptr inbounds float, float* %8511, i64 4
  %8514 = bitcast float* %8513 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8514, align 16, !tbaa !2
  %8515 = or i64 %8500, 24
  %8516 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8515
  %8517 = bitcast float* %8516 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8517, align 16, !tbaa !2
  %8518 = getelementptr inbounds float, float* %8516, i64 4
  %8519 = bitcast float* %8518 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8519, align 16, !tbaa !2
  %8520 = or i64 %8500, 32
  %8521 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8520
  %8522 = bitcast float* %8521 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8522, align 16, !tbaa !2
  %8523 = getelementptr inbounds float, float* %8521, i64 4
  %8524 = bitcast float* %8523 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8524, align 16, !tbaa !2
  %8525 = or i64 %8500, 40
  %8526 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8525
  %8527 = bitcast float* %8526 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8527, align 16, !tbaa !2
  %8528 = getelementptr inbounds float, float* %8526, i64 4
  %8529 = bitcast float* %8528 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8529, align 16, !tbaa !2
  %8530 = or i64 %8500, 48
  %8531 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8530
  %8532 = bitcast float* %8531 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8532, align 16, !tbaa !2
  %8533 = getelementptr inbounds float, float* %8531, i64 4
  %8534 = bitcast float* %8533 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8534, align 16, !tbaa !2
  %8535 = or i64 %8500, 56
  %8536 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8535
  %8537 = bitcast float* %8536 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8537, align 16, !tbaa !2
  %8538 = getelementptr inbounds float, float* %8536, i64 4
  %8539 = bitcast float* %8538 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8539, align 16, !tbaa !2
  %8540 = add nuw nsw i64 %8500, 64
  %8541 = icmp eq i64 %8540, 32000
  br i1 %8541, label %8542, label %8499, !llvm.loop !149

8542:                                             ; preds = %8499, %8542
  %8543 = phi i64 [ %8558, %8542 ], [ 0, %8499 ]
  %8544 = phi <4 x i64> [ %8559, %8542 ], [ <i64 0, i64 1, i64 2, i64 3>, %8499 ]
  %8545 = trunc <4 x i64> %8544 to <4 x i32>
  %8546 = add <4 x i32> %8545, <i32 1, i32 1, i32 1, i32 1>
  %8547 = sitofp <4 x i32> %8546 to <4 x float>
  %8548 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8547
  %8549 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8543
  %8550 = bitcast float* %8549 to <4 x float>*
  store <4 x float> %8548, <4 x float>* %8550, align 16, !tbaa !2
  %8551 = or i64 %8543, 4
  %8552 = trunc <4 x i64> %8544 to <4 x i32>
  %8553 = add <4 x i32> %8552, <i32 5, i32 5, i32 5, i32 5>
  %8554 = sitofp <4 x i32> %8553 to <4 x float>
  %8555 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8554
  %8556 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8551
  %8557 = bitcast float* %8556 to <4 x float>*
  store <4 x float> %8555, <4 x float>* %8557, align 16, !tbaa !2
  %8558 = add nuw nsw i64 %8543, 8
  %8559 = add <4 x i64> %8544, <i64 8, i64 8, i64 8, i64 8>
  %8560 = icmp eq i64 %8558, 32000
  br i1 %8560, label %15603, label %8542, !llvm.loop !150

8561:                                             ; preds = %8367
  %8562 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0)) #15
  %8563 = icmp eq i32 %8562, 0
  br i1 %8563, label %8564, label %8689

8564:                                             ; preds = %8561
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %8565

8565:                                             ; preds = %8565, %8564
  %8566 = phi i64 [ 0, %8564 ], [ %8606, %8565 ]
  %8567 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8566
  %8568 = bitcast float* %8567 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8568, align 16, !tbaa !2
  %8569 = getelementptr inbounds float, float* %8567, i64 4
  %8570 = bitcast float* %8569 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8570, align 16, !tbaa !2
  %8571 = or i64 %8566, 8
  %8572 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8571
  %8573 = bitcast float* %8572 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8573, align 16, !tbaa !2
  %8574 = getelementptr inbounds float, float* %8572, i64 4
  %8575 = bitcast float* %8574 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8575, align 16, !tbaa !2
  %8576 = or i64 %8566, 16
  %8577 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8576
  %8578 = bitcast float* %8577 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8578, align 16, !tbaa !2
  %8579 = getelementptr inbounds float, float* %8577, i64 4
  %8580 = bitcast float* %8579 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8580, align 16, !tbaa !2
  %8581 = or i64 %8566, 24
  %8582 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8581
  %8583 = bitcast float* %8582 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8583, align 16, !tbaa !2
  %8584 = getelementptr inbounds float, float* %8582, i64 4
  %8585 = bitcast float* %8584 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8585, align 16, !tbaa !2
  %8586 = or i64 %8566, 32
  %8587 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8586
  %8588 = bitcast float* %8587 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8588, align 16, !tbaa !2
  %8589 = getelementptr inbounds float, float* %8587, i64 4
  %8590 = bitcast float* %8589 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8590, align 16, !tbaa !2
  %8591 = or i64 %8566, 40
  %8592 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8591
  %8593 = bitcast float* %8592 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8593, align 16, !tbaa !2
  %8594 = getelementptr inbounds float, float* %8592, i64 4
  %8595 = bitcast float* %8594 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8595, align 16, !tbaa !2
  %8596 = or i64 %8566, 48
  %8597 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8596
  %8598 = bitcast float* %8597 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8598, align 16, !tbaa !2
  %8599 = getelementptr inbounds float, float* %8597, i64 4
  %8600 = bitcast float* %8599 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8600, align 16, !tbaa !2
  %8601 = or i64 %8566, 56
  %8602 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8601
  %8603 = bitcast float* %8602 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8603, align 16, !tbaa !2
  %8604 = getelementptr inbounds float, float* %8602, i64 4
  %8605 = bitcast float* %8604 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8605, align 16, !tbaa !2
  %8606 = add nuw nsw i64 %8566, 64
  %8607 = icmp eq i64 %8606, 32000
  br i1 %8607, label %8608, label %8565, !llvm.loop !151

8608:                                             ; preds = %8565, %8608
  %8609 = phi i64 [ %8649, %8608 ], [ 0, %8565 ]
  %8610 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8609
  %8611 = bitcast float* %8610 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8611, align 16, !tbaa !2
  %8612 = getelementptr inbounds float, float* %8610, i64 4
  %8613 = bitcast float* %8612 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8613, align 16, !tbaa !2
  %8614 = or i64 %8609, 8
  %8615 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8614
  %8616 = bitcast float* %8615 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8616, align 16, !tbaa !2
  %8617 = getelementptr inbounds float, float* %8615, i64 4
  %8618 = bitcast float* %8617 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8618, align 16, !tbaa !2
  %8619 = or i64 %8609, 16
  %8620 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8619
  %8621 = bitcast float* %8620 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8621, align 16, !tbaa !2
  %8622 = getelementptr inbounds float, float* %8620, i64 4
  %8623 = bitcast float* %8622 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8623, align 16, !tbaa !2
  %8624 = or i64 %8609, 24
  %8625 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8624
  %8626 = bitcast float* %8625 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8626, align 16, !tbaa !2
  %8627 = getelementptr inbounds float, float* %8625, i64 4
  %8628 = bitcast float* %8627 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8628, align 16, !tbaa !2
  %8629 = or i64 %8609, 32
  %8630 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8629
  %8631 = bitcast float* %8630 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8631, align 16, !tbaa !2
  %8632 = getelementptr inbounds float, float* %8630, i64 4
  %8633 = bitcast float* %8632 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8633, align 16, !tbaa !2
  %8634 = or i64 %8609, 40
  %8635 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8634
  %8636 = bitcast float* %8635 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8636, align 16, !tbaa !2
  %8637 = getelementptr inbounds float, float* %8635, i64 4
  %8638 = bitcast float* %8637 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8638, align 16, !tbaa !2
  %8639 = or i64 %8609, 48
  %8640 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8639
  %8641 = bitcast float* %8640 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8641, align 16, !tbaa !2
  %8642 = getelementptr inbounds float, float* %8640, i64 4
  %8643 = bitcast float* %8642 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8643, align 16, !tbaa !2
  %8644 = or i64 %8609, 56
  %8645 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8644
  %8646 = bitcast float* %8645 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8646, align 16, !tbaa !2
  %8647 = getelementptr inbounds float, float* %8645, i64 4
  %8648 = bitcast float* %8647 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8648, align 16, !tbaa !2
  %8649 = add nuw nsw i64 %8609, 64
  %8650 = icmp eq i64 %8649, 32000
  br i1 %8650, label %8651, label %8608, !llvm.loop !152

8651:                                             ; preds = %8608, %8651
  %8652 = phi i64 [ %8667, %8651 ], [ 0, %8608 ]
  %8653 = phi <4 x i64> [ %8668, %8651 ], [ <i64 0, i64 1, i64 2, i64 3>, %8608 ]
  %8654 = trunc <4 x i64> %8653 to <4 x i32>
  %8655 = add <4 x i32> %8654, <i32 1, i32 1, i32 1, i32 1>
  %8656 = sitofp <4 x i32> %8655 to <4 x float>
  %8657 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8656
  %8658 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8652
  %8659 = bitcast float* %8658 to <4 x float>*
  store <4 x float> %8657, <4 x float>* %8659, align 16, !tbaa !2
  %8660 = or i64 %8652, 4
  %8661 = trunc <4 x i64> %8653 to <4 x i32>
  %8662 = add <4 x i32> %8661, <i32 5, i32 5, i32 5, i32 5>
  %8663 = sitofp <4 x i32> %8662 to <4 x float>
  %8664 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8663
  %8665 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8660
  %8666 = bitcast float* %8665 to <4 x float>*
  store <4 x float> %8664, <4 x float>* %8666, align 16, !tbaa !2
  %8667 = add nuw nsw i64 %8652, 8
  %8668 = add <4 x i64> %8653, <i64 8, i64 8, i64 8, i64 8>
  %8669 = icmp eq i64 %8667, 32000
  br i1 %8669, label %8670, label %8651, !llvm.loop !153

8670:                                             ; preds = %8651, %8670
  %8671 = phi i64 [ %8686, %8670 ], [ 0, %8651 ]
  %8672 = phi <4 x i64> [ %8687, %8670 ], [ <i64 0, i64 1, i64 2, i64 3>, %8651 ]
  %8673 = trunc <4 x i64> %8672 to <4 x i32>
  %8674 = add <4 x i32> %8673, <i32 1, i32 1, i32 1, i32 1>
  %8675 = sitofp <4 x i32> %8674 to <4 x float>
  %8676 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8675
  %8677 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8671
  %8678 = bitcast float* %8677 to <4 x float>*
  store <4 x float> %8676, <4 x float>* %8678, align 16, !tbaa !2
  %8679 = or i64 %8671, 4
  %8680 = trunc <4 x i64> %8672 to <4 x i32>
  %8681 = add <4 x i32> %8680, <i32 5, i32 5, i32 5, i32 5>
  %8682 = sitofp <4 x i32> %8681 to <4 x float>
  %8683 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %8682
  %8684 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8679
  %8685 = bitcast float* %8684 to <4 x float>*
  store <4 x float> %8683, <4 x float>* %8685, align 16, !tbaa !2
  %8686 = add nuw nsw i64 %8671, 8
  %8687 = add <4 x i64> %8672, <i64 8, i64 8, i64 8, i64 8>
  %8688 = icmp eq i64 %8686, 32000
  br i1 %8688, label %15603, label %8670, !llvm.loop !154

8689:                                             ; preds = %8561
  %8690 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0)) #15
  %8691 = icmp eq i32 %8690, 0
  br i1 %8691, label %8692, label %9088

8692:                                             ; preds = %8689, %8692
  %8693 = phi i64 [ %8822, %8692 ], [ 0, %8689 ]
  %8694 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 0
  %8695 = bitcast float* %8694 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8695, align 16, !tbaa !2
  %8696 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 4
  %8697 = bitcast float* %8696 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8697, align 16, !tbaa !2
  %8698 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 8
  %8699 = bitcast float* %8698 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8699, align 16, !tbaa !2
  %8700 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 12
  %8701 = bitcast float* %8700 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8701, align 16, !tbaa !2
  %8702 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 16
  %8703 = bitcast float* %8702 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8703, align 16, !tbaa !2
  %8704 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 20
  %8705 = bitcast float* %8704 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8705, align 16, !tbaa !2
  %8706 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 24
  %8707 = bitcast float* %8706 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8707, align 16, !tbaa !2
  %8708 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 28
  %8709 = bitcast float* %8708 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8709, align 16, !tbaa !2
  %8710 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 32
  %8711 = bitcast float* %8710 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8711, align 16, !tbaa !2
  %8712 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 36
  %8713 = bitcast float* %8712 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8713, align 16, !tbaa !2
  %8714 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 40
  %8715 = bitcast float* %8714 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8715, align 16, !tbaa !2
  %8716 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 44
  %8717 = bitcast float* %8716 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8717, align 16, !tbaa !2
  %8718 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 48
  %8719 = bitcast float* %8718 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8719, align 16, !tbaa !2
  %8720 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 52
  %8721 = bitcast float* %8720 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8721, align 16, !tbaa !2
  %8722 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 56
  %8723 = bitcast float* %8722 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8723, align 16, !tbaa !2
  %8724 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 60
  %8725 = bitcast float* %8724 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8725, align 16, !tbaa !2
  %8726 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 64
  %8727 = bitcast float* %8726 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8727, align 16, !tbaa !2
  %8728 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 68
  %8729 = bitcast float* %8728 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8729, align 16, !tbaa !2
  %8730 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 72
  %8731 = bitcast float* %8730 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8731, align 16, !tbaa !2
  %8732 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 76
  %8733 = bitcast float* %8732 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8733, align 16, !tbaa !2
  %8734 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 80
  %8735 = bitcast float* %8734 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8735, align 16, !tbaa !2
  %8736 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 84
  %8737 = bitcast float* %8736 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8737, align 16, !tbaa !2
  %8738 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 88
  %8739 = bitcast float* %8738 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8739, align 16, !tbaa !2
  %8740 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 92
  %8741 = bitcast float* %8740 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8741, align 16, !tbaa !2
  %8742 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 96
  %8743 = bitcast float* %8742 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8743, align 16, !tbaa !2
  %8744 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 100
  %8745 = bitcast float* %8744 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8745, align 16, !tbaa !2
  %8746 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 104
  %8747 = bitcast float* %8746 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8747, align 16, !tbaa !2
  %8748 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 108
  %8749 = bitcast float* %8748 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8749, align 16, !tbaa !2
  %8750 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 112
  %8751 = bitcast float* %8750 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8751, align 16, !tbaa !2
  %8752 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 116
  %8753 = bitcast float* %8752 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8753, align 16, !tbaa !2
  %8754 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 120
  %8755 = bitcast float* %8754 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8755, align 16, !tbaa !2
  %8756 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 124
  %8757 = bitcast float* %8756 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8757, align 16, !tbaa !2
  %8758 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 128
  %8759 = bitcast float* %8758 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8759, align 16, !tbaa !2
  %8760 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 132
  %8761 = bitcast float* %8760 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8761, align 16, !tbaa !2
  %8762 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 136
  %8763 = bitcast float* %8762 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8763, align 16, !tbaa !2
  %8764 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 140
  %8765 = bitcast float* %8764 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8765, align 16, !tbaa !2
  %8766 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 144
  %8767 = bitcast float* %8766 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8767, align 16, !tbaa !2
  %8768 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 148
  %8769 = bitcast float* %8768 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8769, align 16, !tbaa !2
  %8770 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 152
  %8771 = bitcast float* %8770 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8771, align 16, !tbaa !2
  %8772 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 156
  %8773 = bitcast float* %8772 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8773, align 16, !tbaa !2
  %8774 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 160
  %8775 = bitcast float* %8774 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8775, align 16, !tbaa !2
  %8776 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 164
  %8777 = bitcast float* %8776 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8777, align 16, !tbaa !2
  %8778 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 168
  %8779 = bitcast float* %8778 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8779, align 16, !tbaa !2
  %8780 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 172
  %8781 = bitcast float* %8780 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8781, align 16, !tbaa !2
  %8782 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 176
  %8783 = bitcast float* %8782 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8783, align 16, !tbaa !2
  %8784 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 180
  %8785 = bitcast float* %8784 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8785, align 16, !tbaa !2
  %8786 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 184
  %8787 = bitcast float* %8786 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8787, align 16, !tbaa !2
  %8788 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 188
  %8789 = bitcast float* %8788 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8789, align 16, !tbaa !2
  %8790 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 192
  %8791 = bitcast float* %8790 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8791, align 16, !tbaa !2
  %8792 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 196
  %8793 = bitcast float* %8792 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8793, align 16, !tbaa !2
  %8794 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 200
  %8795 = bitcast float* %8794 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8795, align 16, !tbaa !2
  %8796 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 204
  %8797 = bitcast float* %8796 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8797, align 16, !tbaa !2
  %8798 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 208
  %8799 = bitcast float* %8798 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8799, align 16, !tbaa !2
  %8800 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 212
  %8801 = bitcast float* %8800 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8801, align 16, !tbaa !2
  %8802 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 216
  %8803 = bitcast float* %8802 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8803, align 16, !tbaa !2
  %8804 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 220
  %8805 = bitcast float* %8804 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8805, align 16, !tbaa !2
  %8806 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 224
  %8807 = bitcast float* %8806 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8807, align 16, !tbaa !2
  %8808 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 228
  %8809 = bitcast float* %8808 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8809, align 16, !tbaa !2
  %8810 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 232
  %8811 = bitcast float* %8810 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8811, align 16, !tbaa !2
  %8812 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 236
  %8813 = bitcast float* %8812 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8813, align 16, !tbaa !2
  %8814 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 240
  %8815 = bitcast float* %8814 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8815, align 16, !tbaa !2
  %8816 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 244
  %8817 = bitcast float* %8816 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8817, align 16, !tbaa !2
  %8818 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 248
  %8819 = bitcast float* %8818 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8819, align 16, !tbaa !2
  %8820 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %8693, i64 252
  %8821 = bitcast float* %8820 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %8821, align 16, !tbaa !2
  %8822 = add nuw nsw i64 %8693, 1
  %8823 = icmp eq i64 %8822, 256
  br i1 %8823, label %8824, label %8692

8824:                                             ; preds = %8692, %8824
  %8825 = phi i64 [ %8954, %8824 ], [ 0, %8692 ]
  %8826 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 0
  %8827 = bitcast float* %8826 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8827, align 16, !tbaa !2
  %8828 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 4
  %8829 = bitcast float* %8828 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8829, align 16, !tbaa !2
  %8830 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 8
  %8831 = bitcast float* %8830 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8831, align 16, !tbaa !2
  %8832 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 12
  %8833 = bitcast float* %8832 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8833, align 16, !tbaa !2
  %8834 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 16
  %8835 = bitcast float* %8834 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8835, align 16, !tbaa !2
  %8836 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 20
  %8837 = bitcast float* %8836 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8837, align 16, !tbaa !2
  %8838 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 24
  %8839 = bitcast float* %8838 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8839, align 16, !tbaa !2
  %8840 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 28
  %8841 = bitcast float* %8840 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8841, align 16, !tbaa !2
  %8842 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 32
  %8843 = bitcast float* %8842 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8843, align 16, !tbaa !2
  %8844 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 36
  %8845 = bitcast float* %8844 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8845, align 16, !tbaa !2
  %8846 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 40
  %8847 = bitcast float* %8846 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8847, align 16, !tbaa !2
  %8848 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 44
  %8849 = bitcast float* %8848 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8849, align 16, !tbaa !2
  %8850 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 48
  %8851 = bitcast float* %8850 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8851, align 16, !tbaa !2
  %8852 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 52
  %8853 = bitcast float* %8852 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8853, align 16, !tbaa !2
  %8854 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 56
  %8855 = bitcast float* %8854 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8855, align 16, !tbaa !2
  %8856 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 60
  %8857 = bitcast float* %8856 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8857, align 16, !tbaa !2
  %8858 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 64
  %8859 = bitcast float* %8858 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8859, align 16, !tbaa !2
  %8860 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 68
  %8861 = bitcast float* %8860 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8861, align 16, !tbaa !2
  %8862 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 72
  %8863 = bitcast float* %8862 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8863, align 16, !tbaa !2
  %8864 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 76
  %8865 = bitcast float* %8864 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8865, align 16, !tbaa !2
  %8866 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 80
  %8867 = bitcast float* %8866 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8867, align 16, !tbaa !2
  %8868 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 84
  %8869 = bitcast float* %8868 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8869, align 16, !tbaa !2
  %8870 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 88
  %8871 = bitcast float* %8870 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8871, align 16, !tbaa !2
  %8872 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 92
  %8873 = bitcast float* %8872 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8873, align 16, !tbaa !2
  %8874 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 96
  %8875 = bitcast float* %8874 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8875, align 16, !tbaa !2
  %8876 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 100
  %8877 = bitcast float* %8876 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8877, align 16, !tbaa !2
  %8878 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 104
  %8879 = bitcast float* %8878 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8879, align 16, !tbaa !2
  %8880 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 108
  %8881 = bitcast float* %8880 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8881, align 16, !tbaa !2
  %8882 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 112
  %8883 = bitcast float* %8882 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8883, align 16, !tbaa !2
  %8884 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 116
  %8885 = bitcast float* %8884 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8885, align 16, !tbaa !2
  %8886 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 120
  %8887 = bitcast float* %8886 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8887, align 16, !tbaa !2
  %8888 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 124
  %8889 = bitcast float* %8888 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8889, align 16, !tbaa !2
  %8890 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 128
  %8891 = bitcast float* %8890 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8891, align 16, !tbaa !2
  %8892 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 132
  %8893 = bitcast float* %8892 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8893, align 16, !tbaa !2
  %8894 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 136
  %8895 = bitcast float* %8894 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8895, align 16, !tbaa !2
  %8896 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 140
  %8897 = bitcast float* %8896 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8897, align 16, !tbaa !2
  %8898 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 144
  %8899 = bitcast float* %8898 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8899, align 16, !tbaa !2
  %8900 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 148
  %8901 = bitcast float* %8900 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8901, align 16, !tbaa !2
  %8902 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 152
  %8903 = bitcast float* %8902 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8903, align 16, !tbaa !2
  %8904 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 156
  %8905 = bitcast float* %8904 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8905, align 16, !tbaa !2
  %8906 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 160
  %8907 = bitcast float* %8906 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8907, align 16, !tbaa !2
  %8908 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 164
  %8909 = bitcast float* %8908 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8909, align 16, !tbaa !2
  %8910 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 168
  %8911 = bitcast float* %8910 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8911, align 16, !tbaa !2
  %8912 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 172
  %8913 = bitcast float* %8912 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8913, align 16, !tbaa !2
  %8914 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 176
  %8915 = bitcast float* %8914 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8915, align 16, !tbaa !2
  %8916 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 180
  %8917 = bitcast float* %8916 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8917, align 16, !tbaa !2
  %8918 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 184
  %8919 = bitcast float* %8918 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8919, align 16, !tbaa !2
  %8920 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 188
  %8921 = bitcast float* %8920 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8921, align 16, !tbaa !2
  %8922 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 192
  %8923 = bitcast float* %8922 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8923, align 16, !tbaa !2
  %8924 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 196
  %8925 = bitcast float* %8924 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8925, align 16, !tbaa !2
  %8926 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 200
  %8927 = bitcast float* %8926 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8927, align 16, !tbaa !2
  %8928 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 204
  %8929 = bitcast float* %8928 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8929, align 16, !tbaa !2
  %8930 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 208
  %8931 = bitcast float* %8930 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8931, align 16, !tbaa !2
  %8932 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 212
  %8933 = bitcast float* %8932 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8933, align 16, !tbaa !2
  %8934 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 216
  %8935 = bitcast float* %8934 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8935, align 16, !tbaa !2
  %8936 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 220
  %8937 = bitcast float* %8936 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8937, align 16, !tbaa !2
  %8938 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 224
  %8939 = bitcast float* %8938 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8939, align 16, !tbaa !2
  %8940 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 228
  %8941 = bitcast float* %8940 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8941, align 16, !tbaa !2
  %8942 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 232
  %8943 = bitcast float* %8942 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8943, align 16, !tbaa !2
  %8944 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 236
  %8945 = bitcast float* %8944 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8945, align 16, !tbaa !2
  %8946 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 240
  %8947 = bitcast float* %8946 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8947, align 16, !tbaa !2
  %8948 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 244
  %8949 = bitcast float* %8948 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8949, align 16, !tbaa !2
  %8950 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 248
  %8951 = bitcast float* %8950 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8951, align 16, !tbaa !2
  %8952 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %8825, i64 252
  %8953 = bitcast float* %8952 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8953, align 16, !tbaa !2
  %8954 = add nuw nsw i64 %8825, 1
  %8955 = icmp eq i64 %8954, 256
  br i1 %8955, label %8956, label %8824

8956:                                             ; preds = %8824, %8956
  %8957 = phi i64 [ %9086, %8956 ], [ 0, %8824 ]
  %8958 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 0
  %8959 = bitcast float* %8958 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8959, align 16, !tbaa !2
  %8960 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 4
  %8961 = bitcast float* %8960 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8961, align 16, !tbaa !2
  %8962 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 8
  %8963 = bitcast float* %8962 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8963, align 16, !tbaa !2
  %8964 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 12
  %8965 = bitcast float* %8964 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8965, align 16, !tbaa !2
  %8966 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 16
  %8967 = bitcast float* %8966 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8967, align 16, !tbaa !2
  %8968 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 20
  %8969 = bitcast float* %8968 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8969, align 16, !tbaa !2
  %8970 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 24
  %8971 = bitcast float* %8970 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8971, align 16, !tbaa !2
  %8972 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 28
  %8973 = bitcast float* %8972 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8973, align 16, !tbaa !2
  %8974 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 32
  %8975 = bitcast float* %8974 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8975, align 16, !tbaa !2
  %8976 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 36
  %8977 = bitcast float* %8976 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8977, align 16, !tbaa !2
  %8978 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 40
  %8979 = bitcast float* %8978 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8979, align 16, !tbaa !2
  %8980 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 44
  %8981 = bitcast float* %8980 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8981, align 16, !tbaa !2
  %8982 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 48
  %8983 = bitcast float* %8982 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8983, align 16, !tbaa !2
  %8984 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 52
  %8985 = bitcast float* %8984 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8985, align 16, !tbaa !2
  %8986 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 56
  %8987 = bitcast float* %8986 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8987, align 16, !tbaa !2
  %8988 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 60
  %8989 = bitcast float* %8988 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8989, align 16, !tbaa !2
  %8990 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 64
  %8991 = bitcast float* %8990 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8991, align 16, !tbaa !2
  %8992 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 68
  %8993 = bitcast float* %8992 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8993, align 16, !tbaa !2
  %8994 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 72
  %8995 = bitcast float* %8994 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8995, align 16, !tbaa !2
  %8996 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 76
  %8997 = bitcast float* %8996 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8997, align 16, !tbaa !2
  %8998 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 80
  %8999 = bitcast float* %8998 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %8999, align 16, !tbaa !2
  %9000 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 84
  %9001 = bitcast float* %9000 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9001, align 16, !tbaa !2
  %9002 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 88
  %9003 = bitcast float* %9002 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9003, align 16, !tbaa !2
  %9004 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 92
  %9005 = bitcast float* %9004 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9005, align 16, !tbaa !2
  %9006 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 96
  %9007 = bitcast float* %9006 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9007, align 16, !tbaa !2
  %9008 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 100
  %9009 = bitcast float* %9008 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9009, align 16, !tbaa !2
  %9010 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 104
  %9011 = bitcast float* %9010 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9011, align 16, !tbaa !2
  %9012 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 108
  %9013 = bitcast float* %9012 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9013, align 16, !tbaa !2
  %9014 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 112
  %9015 = bitcast float* %9014 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9015, align 16, !tbaa !2
  %9016 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 116
  %9017 = bitcast float* %9016 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9017, align 16, !tbaa !2
  %9018 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 120
  %9019 = bitcast float* %9018 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9019, align 16, !tbaa !2
  %9020 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 124
  %9021 = bitcast float* %9020 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9021, align 16, !tbaa !2
  %9022 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 128
  %9023 = bitcast float* %9022 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9023, align 16, !tbaa !2
  %9024 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 132
  %9025 = bitcast float* %9024 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9025, align 16, !tbaa !2
  %9026 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 136
  %9027 = bitcast float* %9026 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9027, align 16, !tbaa !2
  %9028 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 140
  %9029 = bitcast float* %9028 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9029, align 16, !tbaa !2
  %9030 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 144
  %9031 = bitcast float* %9030 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9031, align 16, !tbaa !2
  %9032 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 148
  %9033 = bitcast float* %9032 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9033, align 16, !tbaa !2
  %9034 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 152
  %9035 = bitcast float* %9034 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9035, align 16, !tbaa !2
  %9036 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 156
  %9037 = bitcast float* %9036 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9037, align 16, !tbaa !2
  %9038 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 160
  %9039 = bitcast float* %9038 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9039, align 16, !tbaa !2
  %9040 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 164
  %9041 = bitcast float* %9040 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9041, align 16, !tbaa !2
  %9042 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 168
  %9043 = bitcast float* %9042 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9043, align 16, !tbaa !2
  %9044 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 172
  %9045 = bitcast float* %9044 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9045, align 16, !tbaa !2
  %9046 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 176
  %9047 = bitcast float* %9046 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9047, align 16, !tbaa !2
  %9048 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 180
  %9049 = bitcast float* %9048 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9049, align 16, !tbaa !2
  %9050 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 184
  %9051 = bitcast float* %9050 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9051, align 16, !tbaa !2
  %9052 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 188
  %9053 = bitcast float* %9052 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9053, align 16, !tbaa !2
  %9054 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 192
  %9055 = bitcast float* %9054 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9055, align 16, !tbaa !2
  %9056 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 196
  %9057 = bitcast float* %9056 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9057, align 16, !tbaa !2
  %9058 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 200
  %9059 = bitcast float* %9058 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9059, align 16, !tbaa !2
  %9060 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 204
  %9061 = bitcast float* %9060 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9061, align 16, !tbaa !2
  %9062 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 208
  %9063 = bitcast float* %9062 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9063, align 16, !tbaa !2
  %9064 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 212
  %9065 = bitcast float* %9064 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9065, align 16, !tbaa !2
  %9066 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 216
  %9067 = bitcast float* %9066 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9067, align 16, !tbaa !2
  %9068 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 220
  %9069 = bitcast float* %9068 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9069, align 16, !tbaa !2
  %9070 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 224
  %9071 = bitcast float* %9070 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9071, align 16, !tbaa !2
  %9072 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 228
  %9073 = bitcast float* %9072 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9073, align 16, !tbaa !2
  %9074 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 232
  %9075 = bitcast float* %9074 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9075, align 16, !tbaa !2
  %9076 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 236
  %9077 = bitcast float* %9076 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9077, align 16, !tbaa !2
  %9078 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 240
  %9079 = bitcast float* %9078 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9079, align 16, !tbaa !2
  %9080 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 244
  %9081 = bitcast float* %9080 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9081, align 16, !tbaa !2
  %9082 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 248
  %9083 = bitcast float* %9082 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9083, align 16, !tbaa !2
  %9084 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %8957, i64 252
  %9085 = bitcast float* %9084 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %9085, align 16, !tbaa !2
  %9086 = add nuw nsw i64 %8957, 1
  %9087 = icmp eq i64 %9086, 256
  br i1 %9087, label %15603, label %8956

9088:                                             ; preds = %8689
  %9089 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0)) #15
  %9090 = icmp eq i32 %9089, 0
  br i1 %9090, label %9091, label %9191

9091:                                             ; preds = %9088, %9091
  %9092 = phi i64 [ %9132, %9091 ], [ 0, %9088 ]
  %9093 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9092
  %9094 = bitcast float* %9093 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9094, align 16, !tbaa !2
  %9095 = getelementptr inbounds float, float* %9093, i64 4
  %9096 = bitcast float* %9095 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9096, align 16, !tbaa !2
  %9097 = or i64 %9092, 8
  %9098 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9097
  %9099 = bitcast float* %9098 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9099, align 16, !tbaa !2
  %9100 = getelementptr inbounds float, float* %9098, i64 4
  %9101 = bitcast float* %9100 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9101, align 16, !tbaa !2
  %9102 = or i64 %9092, 16
  %9103 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9102
  %9104 = bitcast float* %9103 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9104, align 16, !tbaa !2
  %9105 = getelementptr inbounds float, float* %9103, i64 4
  %9106 = bitcast float* %9105 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9106, align 16, !tbaa !2
  %9107 = or i64 %9092, 24
  %9108 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9107
  %9109 = bitcast float* %9108 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9109, align 16, !tbaa !2
  %9110 = getelementptr inbounds float, float* %9108, i64 4
  %9111 = bitcast float* %9110 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9111, align 16, !tbaa !2
  %9112 = or i64 %9092, 32
  %9113 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9112
  %9114 = bitcast float* %9113 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9114, align 16, !tbaa !2
  %9115 = getelementptr inbounds float, float* %9113, i64 4
  %9116 = bitcast float* %9115 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9116, align 16, !tbaa !2
  %9117 = or i64 %9092, 40
  %9118 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9117
  %9119 = bitcast float* %9118 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9119, align 16, !tbaa !2
  %9120 = getelementptr inbounds float, float* %9118, i64 4
  %9121 = bitcast float* %9120 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9121, align 16, !tbaa !2
  %9122 = or i64 %9092, 48
  %9123 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9122
  %9124 = bitcast float* %9123 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9124, align 16, !tbaa !2
  %9125 = getelementptr inbounds float, float* %9123, i64 4
  %9126 = bitcast float* %9125 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9126, align 16, !tbaa !2
  %9127 = or i64 %9092, 56
  %9128 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9127
  %9129 = bitcast float* %9128 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9129, align 16, !tbaa !2
  %9130 = getelementptr inbounds float, float* %9128, i64 4
  %9131 = bitcast float* %9130 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9131, align 16, !tbaa !2
  %9132 = add nuw nsw i64 %9092, 64
  %9133 = icmp eq i64 %9132, 32000
  br i1 %9133, label %9134, label %9091, !llvm.loop !155

9134:                                             ; preds = %9091, %9134
  %9135 = phi i64 [ %9150, %9134 ], [ 0, %9091 ]
  %9136 = phi <4 x i64> [ %9151, %9134 ], [ <i64 0, i64 1, i64 2, i64 3>, %9091 ]
  %9137 = trunc <4 x i64> %9136 to <4 x i32>
  %9138 = add <4 x i32> %9137, <i32 1, i32 1, i32 1, i32 1>
  %9139 = sitofp <4 x i32> %9138 to <4 x float>
  %9140 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9139
  %9141 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9135
  %9142 = bitcast float* %9141 to <4 x float>*
  store <4 x float> %9140, <4 x float>* %9142, align 16, !tbaa !2
  %9143 = or i64 %9135, 4
  %9144 = trunc <4 x i64> %9136 to <4 x i32>
  %9145 = add <4 x i32> %9144, <i32 5, i32 5, i32 5, i32 5>
  %9146 = sitofp <4 x i32> %9145 to <4 x float>
  %9147 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9146
  %9148 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9143
  %9149 = bitcast float* %9148 to <4 x float>*
  store <4 x float> %9147, <4 x float>* %9149, align 16, !tbaa !2
  %9150 = add nuw nsw i64 %9135, 8
  %9151 = add <4 x i64> %9136, <i64 8, i64 8, i64 8, i64 8>
  %9152 = icmp eq i64 %9150, 32000
  br i1 %9152, label %9153, label %9134, !llvm.loop !156

9153:                                             ; preds = %9134, %9153
  %9154 = phi i64 [ %9169, %9153 ], [ 0, %9134 ]
  %9155 = phi <4 x i64> [ %9170, %9153 ], [ <i64 0, i64 1, i64 2, i64 3>, %9134 ]
  %9156 = trunc <4 x i64> %9155 to <4 x i32>
  %9157 = add <4 x i32> %9156, <i32 1, i32 1, i32 1, i32 1>
  %9158 = sitofp <4 x i32> %9157 to <4 x float>
  %9159 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9158
  %9160 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9154
  %9161 = bitcast float* %9160 to <4 x float>*
  store <4 x float> %9159, <4 x float>* %9161, align 16, !tbaa !2
  %9162 = or i64 %9154, 4
  %9163 = trunc <4 x i64> %9155 to <4 x i32>
  %9164 = add <4 x i32> %9163, <i32 5, i32 5, i32 5, i32 5>
  %9165 = sitofp <4 x i32> %9164 to <4 x float>
  %9166 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9165
  %9167 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9162
  %9168 = bitcast float* %9167 to <4 x float>*
  store <4 x float> %9166, <4 x float>* %9168, align 16, !tbaa !2
  %9169 = add nuw nsw i64 %9154, 8
  %9170 = add <4 x i64> %9155, <i64 8, i64 8, i64 8, i64 8>
  %9171 = icmp eq i64 %9169, 32000
  br i1 %9171, label %9172, label %9153, !llvm.loop !157

9172:                                             ; preds = %9153, %9172
  %9173 = phi i64 [ %9188, %9172 ], [ 0, %9153 ]
  %9174 = phi <4 x i64> [ %9189, %9172 ], [ <i64 0, i64 1, i64 2, i64 3>, %9153 ]
  %9175 = trunc <4 x i64> %9174 to <4 x i32>
  %9176 = add <4 x i32> %9175, <i32 1, i32 1, i32 1, i32 1>
  %9177 = sitofp <4 x i32> %9176 to <4 x float>
  %9178 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9177
  %9179 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9173
  %9180 = bitcast float* %9179 to <4 x float>*
  store <4 x float> %9178, <4 x float>* %9180, align 16, !tbaa !2
  %9181 = or i64 %9173, 4
  %9182 = trunc <4 x i64> %9174 to <4 x i32>
  %9183 = add <4 x i32> %9182, <i32 5, i32 5, i32 5, i32 5>
  %9184 = sitofp <4 x i32> %9183 to <4 x float>
  %9185 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9184
  %9186 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9181
  %9187 = bitcast float* %9186 to <4 x float>*
  store <4 x float> %9185, <4 x float>* %9187, align 16, !tbaa !2
  %9188 = add nuw nsw i64 %9173, 8
  %9189 = add <4 x i64> %9174, <i64 8, i64 8, i64 8, i64 8>
  %9190 = icmp eq i64 %9188, 32000
  br i1 %9190, label %15603, label %9172, !llvm.loop !158

9191:                                             ; preds = %9088
  %9192 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0)) #15
  %9193 = icmp eq i32 %9192, 0
  br i1 %9193, label %9194, label %9380

9194:                                             ; preds = %9191, %9194
  %9195 = phi i64 [ %9235, %9194 ], [ 0, %9191 ]
  %9196 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9195
  %9197 = bitcast float* %9196 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9197, align 16, !tbaa !2
  %9198 = getelementptr inbounds float, float* %9196, i64 4
  %9199 = bitcast float* %9198 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9199, align 16, !tbaa !2
  %9200 = or i64 %9195, 8
  %9201 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9200
  %9202 = bitcast float* %9201 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9202, align 16, !tbaa !2
  %9203 = getelementptr inbounds float, float* %9201, i64 4
  %9204 = bitcast float* %9203 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9204, align 16, !tbaa !2
  %9205 = or i64 %9195, 16
  %9206 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9205
  %9207 = bitcast float* %9206 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9207, align 16, !tbaa !2
  %9208 = getelementptr inbounds float, float* %9206, i64 4
  %9209 = bitcast float* %9208 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9209, align 16, !tbaa !2
  %9210 = or i64 %9195, 24
  %9211 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9210
  %9212 = bitcast float* %9211 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9212, align 16, !tbaa !2
  %9213 = getelementptr inbounds float, float* %9211, i64 4
  %9214 = bitcast float* %9213 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9214, align 16, !tbaa !2
  %9215 = or i64 %9195, 32
  %9216 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9215
  %9217 = bitcast float* %9216 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9217, align 16, !tbaa !2
  %9218 = getelementptr inbounds float, float* %9216, i64 4
  %9219 = bitcast float* %9218 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9219, align 16, !tbaa !2
  %9220 = or i64 %9195, 40
  %9221 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9220
  %9222 = bitcast float* %9221 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9222, align 16, !tbaa !2
  %9223 = getelementptr inbounds float, float* %9221, i64 4
  %9224 = bitcast float* %9223 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9224, align 16, !tbaa !2
  %9225 = or i64 %9195, 48
  %9226 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9225
  %9227 = bitcast float* %9226 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9227, align 16, !tbaa !2
  %9228 = getelementptr inbounds float, float* %9226, i64 4
  %9229 = bitcast float* %9228 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9229, align 16, !tbaa !2
  %9230 = or i64 %9195, 56
  %9231 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9230
  %9232 = bitcast float* %9231 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9232, align 16, !tbaa !2
  %9233 = getelementptr inbounds float, float* %9231, i64 4
  %9234 = bitcast float* %9233 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9234, align 16, !tbaa !2
  %9235 = add nuw nsw i64 %9195, 64
  %9236 = icmp eq i64 %9235, 32000
  br i1 %9236, label %9237, label %9194, !llvm.loop !159

9237:                                             ; preds = %9194, %9237
  %9238 = phi i64 [ %9278, %9237 ], [ 0, %9194 ]
  %9239 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9238
  %9240 = bitcast float* %9239 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9240, align 16, !tbaa !2
  %9241 = getelementptr inbounds float, float* %9239, i64 4
  %9242 = bitcast float* %9241 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9242, align 16, !tbaa !2
  %9243 = or i64 %9238, 8
  %9244 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9243
  %9245 = bitcast float* %9244 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9245, align 16, !tbaa !2
  %9246 = getelementptr inbounds float, float* %9244, i64 4
  %9247 = bitcast float* %9246 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9247, align 16, !tbaa !2
  %9248 = or i64 %9238, 16
  %9249 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9248
  %9250 = bitcast float* %9249 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9250, align 16, !tbaa !2
  %9251 = getelementptr inbounds float, float* %9249, i64 4
  %9252 = bitcast float* %9251 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9252, align 16, !tbaa !2
  %9253 = or i64 %9238, 24
  %9254 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9253
  %9255 = bitcast float* %9254 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9255, align 16, !tbaa !2
  %9256 = getelementptr inbounds float, float* %9254, i64 4
  %9257 = bitcast float* %9256 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9257, align 16, !tbaa !2
  %9258 = or i64 %9238, 32
  %9259 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9258
  %9260 = bitcast float* %9259 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9260, align 16, !tbaa !2
  %9261 = getelementptr inbounds float, float* %9259, i64 4
  %9262 = bitcast float* %9261 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9262, align 16, !tbaa !2
  %9263 = or i64 %9238, 40
  %9264 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9263
  %9265 = bitcast float* %9264 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9265, align 16, !tbaa !2
  %9266 = getelementptr inbounds float, float* %9264, i64 4
  %9267 = bitcast float* %9266 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9267, align 16, !tbaa !2
  %9268 = or i64 %9238, 48
  %9269 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9268
  %9270 = bitcast float* %9269 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9270, align 16, !tbaa !2
  %9271 = getelementptr inbounds float, float* %9269, i64 4
  %9272 = bitcast float* %9271 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9272, align 16, !tbaa !2
  %9273 = or i64 %9238, 56
  %9274 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9273
  %9275 = bitcast float* %9274 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9275, align 16, !tbaa !2
  %9276 = getelementptr inbounds float, float* %9274, i64 4
  %9277 = bitcast float* %9276 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9277, align 16, !tbaa !2
  %9278 = add nuw nsw i64 %9238, 64
  %9279 = icmp eq i64 %9278, 32000
  br i1 %9279, label %9280, label %9237, !llvm.loop !160

9280:                                             ; preds = %9237, %9280
  %9281 = phi i64 [ %9321, %9280 ], [ 0, %9237 ]
  %9282 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), i64 %9281
  %9283 = bitcast float* %9282 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9283, align 16, !tbaa !2
  %9284 = getelementptr inbounds float, float* %9282, i64 4
  %9285 = bitcast float* %9284 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9285, align 16, !tbaa !2
  %9286 = or i64 %9281, 8
  %9287 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), i64 %9286
  %9288 = bitcast float* %9287 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9288, align 16, !tbaa !2
  %9289 = getelementptr inbounds float, float* %9287, i64 4
  %9290 = bitcast float* %9289 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9290, align 16, !tbaa !2
  %9291 = or i64 %9281, 16
  %9292 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), i64 %9291
  %9293 = bitcast float* %9292 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9293, align 16, !tbaa !2
  %9294 = getelementptr inbounds float, float* %9292, i64 4
  %9295 = bitcast float* %9294 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9295, align 16, !tbaa !2
  %9296 = or i64 %9281, 24
  %9297 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), i64 %9296
  %9298 = bitcast float* %9297 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9298, align 16, !tbaa !2
  %9299 = getelementptr inbounds float, float* %9297, i64 4
  %9300 = bitcast float* %9299 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9300, align 16, !tbaa !2
  %9301 = or i64 %9281, 32
  %9302 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), i64 %9301
  %9303 = bitcast float* %9302 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9303, align 16, !tbaa !2
  %9304 = getelementptr inbounds float, float* %9302, i64 4
  %9305 = bitcast float* %9304 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9305, align 16, !tbaa !2
  %9306 = or i64 %9281, 40
  %9307 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), i64 %9306
  %9308 = bitcast float* %9307 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9308, align 16, !tbaa !2
  %9309 = getelementptr inbounds float, float* %9307, i64 4
  %9310 = bitcast float* %9309 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9310, align 16, !tbaa !2
  %9311 = or i64 %9281, 48
  %9312 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), i64 %9311
  %9313 = bitcast float* %9312 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9313, align 16, !tbaa !2
  %9314 = getelementptr inbounds float, float* %9312, i64 4
  %9315 = bitcast float* %9314 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9315, align 16, !tbaa !2
  %9316 = or i64 %9281, 56
  %9317 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), i64 %9316
  %9318 = bitcast float* %9317 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9318, align 16, !tbaa !2
  %9319 = getelementptr inbounds float, float* %9317, i64 4
  %9320 = bitcast float* %9319 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9320, align 16, !tbaa !2
  %9321 = add nuw nsw i64 %9281, 64
  %9322 = icmp eq i64 %9321, 32000
  br i1 %9322, label %9323, label %9280, !llvm.loop !161

9323:                                             ; preds = %9280, %9323
  %9324 = phi i64 [ %9339, %9323 ], [ 0, %9280 ]
  %9325 = phi <4 x i64> [ %9340, %9323 ], [ <i64 0, i64 1, i64 2, i64 3>, %9280 ]
  %9326 = trunc <4 x i64> %9325 to <4 x i32>
  %9327 = add <4 x i32> %9326, <i32 1, i32 1, i32 1, i32 1>
  %9328 = sitofp <4 x i32> %9327 to <4 x float>
  %9329 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9328
  %9330 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9324
  %9331 = bitcast float* %9330 to <4 x float>*
  store <4 x float> %9329, <4 x float>* %9331, align 16, !tbaa !2
  %9332 = or i64 %9324, 4
  %9333 = trunc <4 x i64> %9325 to <4 x i32>
  %9334 = add <4 x i32> %9333, <i32 5, i32 5, i32 5, i32 5>
  %9335 = sitofp <4 x i32> %9334 to <4 x float>
  %9336 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9335
  %9337 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9332
  %9338 = bitcast float* %9337 to <4 x float>*
  store <4 x float> %9336, <4 x float>* %9338, align 16, !tbaa !2
  %9339 = add nuw nsw i64 %9324, 8
  %9340 = add <4 x i64> %9325, <i64 8, i64 8, i64 8, i64 8>
  %9341 = icmp eq i64 %9339, 32000
  br i1 %9341, label %9342, label %9323, !llvm.loop !162

9342:                                             ; preds = %9323, %9342
  %9343 = phi i64 [ %9358, %9342 ], [ 0, %9323 ]
  %9344 = phi <4 x i64> [ %9359, %9342 ], [ <i64 0, i64 1, i64 2, i64 3>, %9323 ]
  %9345 = trunc <4 x i64> %9344 to <4 x i32>
  %9346 = add <4 x i32> %9345, <i32 1, i32 1, i32 1, i32 1>
  %9347 = sitofp <4 x i32> %9346 to <4 x float>
  %9348 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9347
  %9349 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9343
  %9350 = bitcast float* %9349 to <4 x float>*
  store <4 x float> %9348, <4 x float>* %9350, align 16, !tbaa !2
  %9351 = or i64 %9343, 4
  %9352 = trunc <4 x i64> %9344 to <4 x i32>
  %9353 = add <4 x i32> %9352, <i32 5, i32 5, i32 5, i32 5>
  %9354 = sitofp <4 x i32> %9353 to <4 x float>
  %9355 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9354
  %9356 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9351
  %9357 = bitcast float* %9356 to <4 x float>*
  store <4 x float> %9355, <4 x float>* %9357, align 16, !tbaa !2
  %9358 = add nuw nsw i64 %9343, 8
  %9359 = add <4 x i64> %9344, <i64 8, i64 8, i64 8, i64 8>
  %9360 = icmp eq i64 %9358, 32000
  br i1 %9360, label %9361, label %9342, !llvm.loop !163

9361:                                             ; preds = %9342, %9361
  %9362 = phi i64 [ %9377, %9361 ], [ 0, %9342 ]
  %9363 = phi <4 x i64> [ %9378, %9361 ], [ <i64 0, i64 1, i64 2, i64 3>, %9342 ]
  %9364 = trunc <4 x i64> %9363 to <4 x i32>
  %9365 = add <4 x i32> %9364, <i32 1, i32 1, i32 1, i32 1>
  %9366 = sitofp <4 x i32> %9365 to <4 x float>
  %9367 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9366
  %9368 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %9362
  %9369 = bitcast float* %9368 to <4 x float>*
  store <4 x float> %9367, <4 x float>* %9369, align 16, !tbaa !2
  %9370 = or i64 %9362, 4
  %9371 = trunc <4 x i64> %9363 to <4 x i32>
  %9372 = add <4 x i32> %9371, <i32 5, i32 5, i32 5, i32 5>
  %9373 = sitofp <4 x i32> %9372 to <4 x float>
  %9374 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9373
  %9375 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %9370
  %9376 = bitcast float* %9375 to <4 x float>*
  store <4 x float> %9374, <4 x float>* %9376, align 16, !tbaa !2
  %9377 = add nuw nsw i64 %9362, 8
  %9378 = add <4 x i64> %9363, <i64 8, i64 8, i64 8, i64 8>
  %9379 = icmp eq i64 %9377, 32000
  br i1 %9379, label %15603, label %9361, !llvm.loop !164

9380:                                             ; preds = %9191
  %9381 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0)) #15
  %9382 = icmp eq i32 %9381, 0
  br i1 %9382, label %9383, label %9569

9383:                                             ; preds = %9380, %9383
  %9384 = phi i64 [ %9424, %9383 ], [ 0, %9380 ]
  %9385 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9384
  %9386 = bitcast float* %9385 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9386, align 16, !tbaa !2
  %9387 = getelementptr inbounds float, float* %9385, i64 4
  %9388 = bitcast float* %9387 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9388, align 16, !tbaa !2
  %9389 = or i64 %9384, 8
  %9390 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9389
  %9391 = bitcast float* %9390 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9391, align 16, !tbaa !2
  %9392 = getelementptr inbounds float, float* %9390, i64 4
  %9393 = bitcast float* %9392 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9393, align 16, !tbaa !2
  %9394 = or i64 %9384, 16
  %9395 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9394
  %9396 = bitcast float* %9395 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9396, align 16, !tbaa !2
  %9397 = getelementptr inbounds float, float* %9395, i64 4
  %9398 = bitcast float* %9397 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9398, align 16, !tbaa !2
  %9399 = or i64 %9384, 24
  %9400 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9399
  %9401 = bitcast float* %9400 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9401, align 16, !tbaa !2
  %9402 = getelementptr inbounds float, float* %9400, i64 4
  %9403 = bitcast float* %9402 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9403, align 16, !tbaa !2
  %9404 = or i64 %9384, 32
  %9405 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9404
  %9406 = bitcast float* %9405 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9406, align 16, !tbaa !2
  %9407 = getelementptr inbounds float, float* %9405, i64 4
  %9408 = bitcast float* %9407 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9408, align 16, !tbaa !2
  %9409 = or i64 %9384, 40
  %9410 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9409
  %9411 = bitcast float* %9410 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9411, align 16, !tbaa !2
  %9412 = getelementptr inbounds float, float* %9410, i64 4
  %9413 = bitcast float* %9412 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9413, align 16, !tbaa !2
  %9414 = or i64 %9384, 48
  %9415 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9414
  %9416 = bitcast float* %9415 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9416, align 16, !tbaa !2
  %9417 = getelementptr inbounds float, float* %9415, i64 4
  %9418 = bitcast float* %9417 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9418, align 16, !tbaa !2
  %9419 = or i64 %9384, 56
  %9420 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9419
  %9421 = bitcast float* %9420 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9421, align 16, !tbaa !2
  %9422 = getelementptr inbounds float, float* %9420, i64 4
  %9423 = bitcast float* %9422 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9423, align 16, !tbaa !2
  %9424 = add nuw nsw i64 %9384, 64
  %9425 = icmp eq i64 %9424, 32000
  br i1 %9425, label %9426, label %9383, !llvm.loop !165

9426:                                             ; preds = %9383, %9426
  %9427 = phi i64 [ %9467, %9426 ], [ 0, %9383 ]
  %9428 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9427
  %9429 = bitcast float* %9428 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9429, align 16, !tbaa !2
  %9430 = getelementptr inbounds float, float* %9428, i64 4
  %9431 = bitcast float* %9430 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9431, align 16, !tbaa !2
  %9432 = or i64 %9427, 8
  %9433 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9432
  %9434 = bitcast float* %9433 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9434, align 16, !tbaa !2
  %9435 = getelementptr inbounds float, float* %9433, i64 4
  %9436 = bitcast float* %9435 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9436, align 16, !tbaa !2
  %9437 = or i64 %9427, 16
  %9438 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9437
  %9439 = bitcast float* %9438 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9439, align 16, !tbaa !2
  %9440 = getelementptr inbounds float, float* %9438, i64 4
  %9441 = bitcast float* %9440 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9441, align 16, !tbaa !2
  %9442 = or i64 %9427, 24
  %9443 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9442
  %9444 = bitcast float* %9443 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9444, align 16, !tbaa !2
  %9445 = getelementptr inbounds float, float* %9443, i64 4
  %9446 = bitcast float* %9445 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9446, align 16, !tbaa !2
  %9447 = or i64 %9427, 32
  %9448 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9447
  %9449 = bitcast float* %9448 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9449, align 16, !tbaa !2
  %9450 = getelementptr inbounds float, float* %9448, i64 4
  %9451 = bitcast float* %9450 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9451, align 16, !tbaa !2
  %9452 = or i64 %9427, 40
  %9453 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9452
  %9454 = bitcast float* %9453 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9454, align 16, !tbaa !2
  %9455 = getelementptr inbounds float, float* %9453, i64 4
  %9456 = bitcast float* %9455 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9456, align 16, !tbaa !2
  %9457 = or i64 %9427, 48
  %9458 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9457
  %9459 = bitcast float* %9458 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9459, align 16, !tbaa !2
  %9460 = getelementptr inbounds float, float* %9458, i64 4
  %9461 = bitcast float* %9460 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9461, align 16, !tbaa !2
  %9462 = or i64 %9427, 56
  %9463 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9462
  %9464 = bitcast float* %9463 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9464, align 16, !tbaa !2
  %9465 = getelementptr inbounds float, float* %9463, i64 4
  %9466 = bitcast float* %9465 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9466, align 16, !tbaa !2
  %9467 = add nuw nsw i64 %9427, 64
  %9468 = icmp eq i64 %9467, 32000
  br i1 %9468, label %9469, label %9426, !llvm.loop !166

9469:                                             ; preds = %9426, %9469
  %9470 = phi i64 [ %9510, %9469 ], [ 0, %9426 ]
  %9471 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9470
  %9472 = bitcast float* %9471 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9472, align 16, !tbaa !2
  %9473 = getelementptr inbounds float, float* %9471, i64 4
  %9474 = bitcast float* %9473 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9474, align 16, !tbaa !2
  %9475 = or i64 %9470, 8
  %9476 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9475
  %9477 = bitcast float* %9476 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9477, align 16, !tbaa !2
  %9478 = getelementptr inbounds float, float* %9476, i64 4
  %9479 = bitcast float* %9478 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9479, align 16, !tbaa !2
  %9480 = or i64 %9470, 16
  %9481 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9480
  %9482 = bitcast float* %9481 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9482, align 16, !tbaa !2
  %9483 = getelementptr inbounds float, float* %9481, i64 4
  %9484 = bitcast float* %9483 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9484, align 16, !tbaa !2
  %9485 = or i64 %9470, 24
  %9486 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9485
  %9487 = bitcast float* %9486 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9487, align 16, !tbaa !2
  %9488 = getelementptr inbounds float, float* %9486, i64 4
  %9489 = bitcast float* %9488 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9489, align 16, !tbaa !2
  %9490 = or i64 %9470, 32
  %9491 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9490
  %9492 = bitcast float* %9491 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9492, align 16, !tbaa !2
  %9493 = getelementptr inbounds float, float* %9491, i64 4
  %9494 = bitcast float* %9493 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9494, align 16, !tbaa !2
  %9495 = or i64 %9470, 40
  %9496 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9495
  %9497 = bitcast float* %9496 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9497, align 16, !tbaa !2
  %9498 = getelementptr inbounds float, float* %9496, i64 4
  %9499 = bitcast float* %9498 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9499, align 16, !tbaa !2
  %9500 = or i64 %9470, 48
  %9501 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9500
  %9502 = bitcast float* %9501 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9502, align 16, !tbaa !2
  %9503 = getelementptr inbounds float, float* %9501, i64 4
  %9504 = bitcast float* %9503 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9504, align 16, !tbaa !2
  %9505 = or i64 %9470, 56
  %9506 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9505
  %9507 = bitcast float* %9506 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9507, align 16, !tbaa !2
  %9508 = getelementptr inbounds float, float* %9506, i64 4
  %9509 = bitcast float* %9508 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9509, align 16, !tbaa !2
  %9510 = add nuw nsw i64 %9470, 64
  %9511 = icmp eq i64 %9510, 32000
  br i1 %9511, label %9512, label %9469, !llvm.loop !167

9512:                                             ; preds = %9469, %9512
  %9513 = phi i64 [ %9528, %9512 ], [ 0, %9469 ]
  %9514 = phi <4 x i64> [ %9529, %9512 ], [ <i64 0, i64 1, i64 2, i64 3>, %9469 ]
  %9515 = trunc <4 x i64> %9514 to <4 x i32>
  %9516 = add <4 x i32> %9515, <i32 1, i32 1, i32 1, i32 1>
  %9517 = sitofp <4 x i32> %9516 to <4 x float>
  %9518 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9517
  %9519 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9513
  %9520 = bitcast float* %9519 to <4 x float>*
  store <4 x float> %9518, <4 x float>* %9520, align 16, !tbaa !2
  %9521 = or i64 %9513, 4
  %9522 = trunc <4 x i64> %9514 to <4 x i32>
  %9523 = add <4 x i32> %9522, <i32 5, i32 5, i32 5, i32 5>
  %9524 = sitofp <4 x i32> %9523 to <4 x float>
  %9525 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9524
  %9526 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9521
  %9527 = bitcast float* %9526 to <4 x float>*
  store <4 x float> %9525, <4 x float>* %9527, align 16, !tbaa !2
  %9528 = add nuw nsw i64 %9513, 8
  %9529 = add <4 x i64> %9514, <i64 8, i64 8, i64 8, i64 8>
  %9530 = icmp eq i64 %9528, 32000
  br i1 %9530, label %9531, label %9512, !llvm.loop !168

9531:                                             ; preds = %9512, %9531
  %9532 = phi i64 [ %9547, %9531 ], [ 0, %9512 ]
  %9533 = phi <4 x i64> [ %9548, %9531 ], [ <i64 0, i64 1, i64 2, i64 3>, %9512 ]
  %9534 = trunc <4 x i64> %9533 to <4 x i32>
  %9535 = add <4 x i32> %9534, <i32 1, i32 1, i32 1, i32 1>
  %9536 = sitofp <4 x i32> %9535 to <4 x float>
  %9537 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9536
  %9538 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9532
  %9539 = bitcast float* %9538 to <4 x float>*
  store <4 x float> %9537, <4 x float>* %9539, align 16, !tbaa !2
  %9540 = or i64 %9532, 4
  %9541 = trunc <4 x i64> %9533 to <4 x i32>
  %9542 = add <4 x i32> %9541, <i32 5, i32 5, i32 5, i32 5>
  %9543 = sitofp <4 x i32> %9542 to <4 x float>
  %9544 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9543
  %9545 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9540
  %9546 = bitcast float* %9545 to <4 x float>*
  store <4 x float> %9544, <4 x float>* %9546, align 16, !tbaa !2
  %9547 = add nuw nsw i64 %9532, 8
  %9548 = add <4 x i64> %9533, <i64 8, i64 8, i64 8, i64 8>
  %9549 = icmp eq i64 %9547, 32000
  br i1 %9549, label %9550, label %9531, !llvm.loop !169

9550:                                             ; preds = %9531, %9550
  %9551 = phi i64 [ %9566, %9550 ], [ 0, %9531 ]
  %9552 = phi <4 x i64> [ %9567, %9550 ], [ <i64 0, i64 1, i64 2, i64 3>, %9531 ]
  %9553 = trunc <4 x i64> %9552 to <4 x i32>
  %9554 = add <4 x i32> %9553, <i32 1, i32 1, i32 1, i32 1>
  %9555 = sitofp <4 x i32> %9554 to <4 x float>
  %9556 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9555
  %9557 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %9551
  %9558 = bitcast float* %9557 to <4 x float>*
  store <4 x float> %9556, <4 x float>* %9558, align 16, !tbaa !2
  %9559 = or i64 %9551, 4
  %9560 = trunc <4 x i64> %9552 to <4 x i32>
  %9561 = add <4 x i32> %9560, <i32 5, i32 5, i32 5, i32 5>
  %9562 = sitofp <4 x i32> %9561 to <4 x float>
  %9563 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9562
  %9564 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %9559
  %9565 = bitcast float* %9564 to <4 x float>*
  store <4 x float> %9563, <4 x float>* %9565, align 16, !tbaa !2
  %9566 = add nuw nsw i64 %9551, 8
  %9567 = add <4 x i64> %9552, <i64 8, i64 8, i64 8, i64 8>
  %9568 = icmp eq i64 %9566, 32000
  br i1 %9568, label %15603, label %9550, !llvm.loop !170

9569:                                             ; preds = %9380
  %9570 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #15
  %9571 = icmp eq i32 %9570, 0
  br i1 %9571, label %9572, label %9758

9572:                                             ; preds = %9569, %9572
  %9573 = phi i64 [ %9613, %9572 ], [ 0, %9569 ]
  %9574 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9573
  %9575 = bitcast float* %9574 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9575, align 16, !tbaa !2
  %9576 = getelementptr inbounds float, float* %9574, i64 4
  %9577 = bitcast float* %9576 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9577, align 16, !tbaa !2
  %9578 = or i64 %9573, 8
  %9579 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9578
  %9580 = bitcast float* %9579 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9580, align 16, !tbaa !2
  %9581 = getelementptr inbounds float, float* %9579, i64 4
  %9582 = bitcast float* %9581 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9582, align 16, !tbaa !2
  %9583 = or i64 %9573, 16
  %9584 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9583
  %9585 = bitcast float* %9584 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9585, align 16, !tbaa !2
  %9586 = getelementptr inbounds float, float* %9584, i64 4
  %9587 = bitcast float* %9586 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9587, align 16, !tbaa !2
  %9588 = or i64 %9573, 24
  %9589 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9588
  %9590 = bitcast float* %9589 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9590, align 16, !tbaa !2
  %9591 = getelementptr inbounds float, float* %9589, i64 4
  %9592 = bitcast float* %9591 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9592, align 16, !tbaa !2
  %9593 = or i64 %9573, 32
  %9594 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9593
  %9595 = bitcast float* %9594 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9595, align 16, !tbaa !2
  %9596 = getelementptr inbounds float, float* %9594, i64 4
  %9597 = bitcast float* %9596 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9597, align 16, !tbaa !2
  %9598 = or i64 %9573, 40
  %9599 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9598
  %9600 = bitcast float* %9599 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9600, align 16, !tbaa !2
  %9601 = getelementptr inbounds float, float* %9599, i64 4
  %9602 = bitcast float* %9601 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9602, align 16, !tbaa !2
  %9603 = or i64 %9573, 48
  %9604 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9603
  %9605 = bitcast float* %9604 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9605, align 16, !tbaa !2
  %9606 = getelementptr inbounds float, float* %9604, i64 4
  %9607 = bitcast float* %9606 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9607, align 16, !tbaa !2
  %9608 = or i64 %9573, 56
  %9609 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9608
  %9610 = bitcast float* %9609 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9610, align 16, !tbaa !2
  %9611 = getelementptr inbounds float, float* %9609, i64 4
  %9612 = bitcast float* %9611 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %9612, align 16, !tbaa !2
  %9613 = add nuw nsw i64 %9573, 64
  %9614 = icmp eq i64 %9613, 32000
  br i1 %9614, label %9615, label %9572, !llvm.loop !171

9615:                                             ; preds = %9572, %9615
  %9616 = phi i64 [ %9656, %9615 ], [ 0, %9572 ]
  %9617 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9616
  %9618 = bitcast float* %9617 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9618, align 16, !tbaa !2
  %9619 = getelementptr inbounds float, float* %9617, i64 4
  %9620 = bitcast float* %9619 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9620, align 16, !tbaa !2
  %9621 = or i64 %9616, 8
  %9622 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9621
  %9623 = bitcast float* %9622 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9623, align 16, !tbaa !2
  %9624 = getelementptr inbounds float, float* %9622, i64 4
  %9625 = bitcast float* %9624 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9625, align 16, !tbaa !2
  %9626 = or i64 %9616, 16
  %9627 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9626
  %9628 = bitcast float* %9627 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9628, align 16, !tbaa !2
  %9629 = getelementptr inbounds float, float* %9627, i64 4
  %9630 = bitcast float* %9629 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9630, align 16, !tbaa !2
  %9631 = or i64 %9616, 24
  %9632 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9631
  %9633 = bitcast float* %9632 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9633, align 16, !tbaa !2
  %9634 = getelementptr inbounds float, float* %9632, i64 4
  %9635 = bitcast float* %9634 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9635, align 16, !tbaa !2
  %9636 = or i64 %9616, 32
  %9637 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9636
  %9638 = bitcast float* %9637 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9638, align 16, !tbaa !2
  %9639 = getelementptr inbounds float, float* %9637, i64 4
  %9640 = bitcast float* %9639 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9640, align 16, !tbaa !2
  %9641 = or i64 %9616, 40
  %9642 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9641
  %9643 = bitcast float* %9642 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9643, align 16, !tbaa !2
  %9644 = getelementptr inbounds float, float* %9642, i64 4
  %9645 = bitcast float* %9644 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9645, align 16, !tbaa !2
  %9646 = or i64 %9616, 48
  %9647 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9646
  %9648 = bitcast float* %9647 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9648, align 16, !tbaa !2
  %9649 = getelementptr inbounds float, float* %9647, i64 4
  %9650 = bitcast float* %9649 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9650, align 16, !tbaa !2
  %9651 = or i64 %9616, 56
  %9652 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), i64 %9651
  %9653 = bitcast float* %9652 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9653, align 16, !tbaa !2
  %9654 = getelementptr inbounds float, float* %9652, i64 4
  %9655 = bitcast float* %9654 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9655, align 16, !tbaa !2
  %9656 = add nuw nsw i64 %9616, 64
  %9657 = icmp eq i64 %9656, 32000
  br i1 %9657, label %9658, label %9615, !llvm.loop !172

9658:                                             ; preds = %9615, %9658
  %9659 = phi i64 [ %9699, %9658 ], [ 0, %9615 ]
  %9660 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9659
  %9661 = bitcast float* %9660 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9661, align 16, !tbaa !2
  %9662 = getelementptr inbounds float, float* %9660, i64 4
  %9663 = bitcast float* %9662 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9663, align 16, !tbaa !2
  %9664 = or i64 %9659, 8
  %9665 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9664
  %9666 = bitcast float* %9665 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9666, align 16, !tbaa !2
  %9667 = getelementptr inbounds float, float* %9665, i64 4
  %9668 = bitcast float* %9667 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9668, align 16, !tbaa !2
  %9669 = or i64 %9659, 16
  %9670 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9669
  %9671 = bitcast float* %9670 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9671, align 16, !tbaa !2
  %9672 = getelementptr inbounds float, float* %9670, i64 4
  %9673 = bitcast float* %9672 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9673, align 16, !tbaa !2
  %9674 = or i64 %9659, 24
  %9675 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9674
  %9676 = bitcast float* %9675 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9676, align 16, !tbaa !2
  %9677 = getelementptr inbounds float, float* %9675, i64 4
  %9678 = bitcast float* %9677 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9678, align 16, !tbaa !2
  %9679 = or i64 %9659, 32
  %9680 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9679
  %9681 = bitcast float* %9680 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9681, align 16, !tbaa !2
  %9682 = getelementptr inbounds float, float* %9680, i64 4
  %9683 = bitcast float* %9682 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9683, align 16, !tbaa !2
  %9684 = or i64 %9659, 40
  %9685 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9684
  %9686 = bitcast float* %9685 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9686, align 16, !tbaa !2
  %9687 = getelementptr inbounds float, float* %9685, i64 4
  %9688 = bitcast float* %9687 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9688, align 16, !tbaa !2
  %9689 = or i64 %9659, 48
  %9690 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9689
  %9691 = bitcast float* %9690 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9691, align 16, !tbaa !2
  %9692 = getelementptr inbounds float, float* %9690, i64 4
  %9693 = bitcast float* %9692 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9693, align 16, !tbaa !2
  %9694 = or i64 %9659, 56
  %9695 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9694
  %9696 = bitcast float* %9695 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9696, align 16, !tbaa !2
  %9697 = getelementptr inbounds float, float* %9695, i64 4
  %9698 = bitcast float* %9697 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9698, align 16, !tbaa !2
  %9699 = add nuw nsw i64 %9659, 64
  %9700 = icmp eq i64 %9699, 32000
  br i1 %9700, label %9701, label %9658, !llvm.loop !173

9701:                                             ; preds = %9658, %9701
  %9702 = phi i64 [ %9717, %9701 ], [ 0, %9658 ]
  %9703 = phi <4 x i64> [ %9718, %9701 ], [ <i64 0, i64 1, i64 2, i64 3>, %9658 ]
  %9704 = trunc <4 x i64> %9703 to <4 x i32>
  %9705 = add <4 x i32> %9704, <i32 1, i32 1, i32 1, i32 1>
  %9706 = sitofp <4 x i32> %9705 to <4 x float>
  %9707 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9706
  %9708 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9702
  %9709 = bitcast float* %9708 to <4 x float>*
  store <4 x float> %9707, <4 x float>* %9709, align 16, !tbaa !2
  %9710 = or i64 %9702, 4
  %9711 = trunc <4 x i64> %9703 to <4 x i32>
  %9712 = add <4 x i32> %9711, <i32 5, i32 5, i32 5, i32 5>
  %9713 = sitofp <4 x i32> %9712 to <4 x float>
  %9714 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9713
  %9715 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9710
  %9716 = bitcast float* %9715 to <4 x float>*
  store <4 x float> %9714, <4 x float>* %9716, align 16, !tbaa !2
  %9717 = add nuw nsw i64 %9702, 8
  %9718 = add <4 x i64> %9703, <i64 8, i64 8, i64 8, i64 8>
  %9719 = icmp eq i64 %9717, 32000
  br i1 %9719, label %9720, label %9701, !llvm.loop !174

9720:                                             ; preds = %9701, %9720
  %9721 = phi i64 [ %9736, %9720 ], [ 0, %9701 ]
  %9722 = phi <4 x i64> [ %9737, %9720 ], [ <i64 0, i64 1, i64 2, i64 3>, %9701 ]
  %9723 = trunc <4 x i64> %9722 to <4 x i32>
  %9724 = add <4 x i32> %9723, <i32 1, i32 1, i32 1, i32 1>
  %9725 = sitofp <4 x i32> %9724 to <4 x float>
  %9726 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9725
  %9727 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9721
  %9728 = bitcast float* %9727 to <4 x float>*
  store <4 x float> %9726, <4 x float>* %9728, align 16, !tbaa !2
  %9729 = or i64 %9721, 4
  %9730 = trunc <4 x i64> %9722 to <4 x i32>
  %9731 = add <4 x i32> %9730, <i32 5, i32 5, i32 5, i32 5>
  %9732 = sitofp <4 x i32> %9731 to <4 x float>
  %9733 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9732
  %9734 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9729
  %9735 = bitcast float* %9734 to <4 x float>*
  store <4 x float> %9733, <4 x float>* %9735, align 16, !tbaa !2
  %9736 = add nuw nsw i64 %9721, 8
  %9737 = add <4 x i64> %9722, <i64 8, i64 8, i64 8, i64 8>
  %9738 = icmp eq i64 %9736, 32000
  br i1 %9738, label %9739, label %9720, !llvm.loop !175

9739:                                             ; preds = %9720, %9739
  %9740 = phi i64 [ %9755, %9739 ], [ 0, %9720 ]
  %9741 = phi <4 x i64> [ %9756, %9739 ], [ <i64 0, i64 1, i64 2, i64 3>, %9720 ]
  %9742 = trunc <4 x i64> %9741 to <4 x i32>
  %9743 = add <4 x i32> %9742, <i32 1, i32 1, i32 1, i32 1>
  %9744 = sitofp <4 x i32> %9743 to <4 x float>
  %9745 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9744
  %9746 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %9740
  %9747 = bitcast float* %9746 to <4 x float>*
  store <4 x float> %9745, <4 x float>* %9747, align 16, !tbaa !2
  %9748 = or i64 %9740, 4
  %9749 = trunc <4 x i64> %9741 to <4 x i32>
  %9750 = add <4 x i32> %9749, <i32 5, i32 5, i32 5, i32 5>
  %9751 = sitofp <4 x i32> %9750 to <4 x float>
  %9752 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9751
  %9753 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %9748
  %9754 = bitcast float* %9753 to <4 x float>*
  store <4 x float> %9752, <4 x float>* %9754, align 16, !tbaa !2
  %9755 = add nuw nsw i64 %9740, 8
  %9756 = add <4 x i64> %9741, <i64 8, i64 8, i64 8, i64 8>
  %9757 = icmp eq i64 %9755, 32000
  br i1 %9757, label %15603, label %9739, !llvm.loop !176

9758:                                             ; preds = %9569
  %9759 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0)) #15
  %9760 = icmp eq i32 %9759, 0
  br i1 %9760, label %9761, label %9904

9761:                                             ; preds = %9758, %9761
  %9762 = phi i64 [ %9802, %9761 ], [ 0, %9758 ]
  %9763 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9762
  %9764 = bitcast float* %9763 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9764, align 16, !tbaa !2
  %9765 = getelementptr inbounds float, float* %9763, i64 4
  %9766 = bitcast float* %9765 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9766, align 16, !tbaa !2
  %9767 = or i64 %9762, 8
  %9768 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9767
  %9769 = bitcast float* %9768 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9769, align 16, !tbaa !2
  %9770 = getelementptr inbounds float, float* %9768, i64 4
  %9771 = bitcast float* %9770 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9771, align 16, !tbaa !2
  %9772 = or i64 %9762, 16
  %9773 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9772
  %9774 = bitcast float* %9773 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9774, align 16, !tbaa !2
  %9775 = getelementptr inbounds float, float* %9773, i64 4
  %9776 = bitcast float* %9775 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9776, align 16, !tbaa !2
  %9777 = or i64 %9762, 24
  %9778 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9777
  %9779 = bitcast float* %9778 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9779, align 16, !tbaa !2
  %9780 = getelementptr inbounds float, float* %9778, i64 4
  %9781 = bitcast float* %9780 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9781, align 16, !tbaa !2
  %9782 = or i64 %9762, 32
  %9783 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9782
  %9784 = bitcast float* %9783 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9784, align 16, !tbaa !2
  %9785 = getelementptr inbounds float, float* %9783, i64 4
  %9786 = bitcast float* %9785 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9786, align 16, !tbaa !2
  %9787 = or i64 %9762, 40
  %9788 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9787
  %9789 = bitcast float* %9788 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9789, align 16, !tbaa !2
  %9790 = getelementptr inbounds float, float* %9788, i64 4
  %9791 = bitcast float* %9790 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9791, align 16, !tbaa !2
  %9792 = or i64 %9762, 48
  %9793 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9792
  %9794 = bitcast float* %9793 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9794, align 16, !tbaa !2
  %9795 = getelementptr inbounds float, float* %9793, i64 4
  %9796 = bitcast float* %9795 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9796, align 16, !tbaa !2
  %9797 = or i64 %9762, 56
  %9798 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9797
  %9799 = bitcast float* %9798 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9799, align 16, !tbaa !2
  %9800 = getelementptr inbounds float, float* %9798, i64 4
  %9801 = bitcast float* %9800 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9801, align 16, !tbaa !2
  %9802 = add nuw nsw i64 %9762, 64
  %9803 = icmp eq i64 %9802, 32000
  br i1 %9803, label %9804, label %9761, !llvm.loop !177

9804:                                             ; preds = %9761, %9804
  %9805 = phi i64 [ %9845, %9804 ], [ 0, %9761 ]
  %9806 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9805
  %9807 = bitcast float* %9806 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9807, align 16, !tbaa !2
  %9808 = getelementptr inbounds float, float* %9806, i64 4
  %9809 = bitcast float* %9808 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9809, align 16, !tbaa !2
  %9810 = or i64 %9805, 8
  %9811 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9810
  %9812 = bitcast float* %9811 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9812, align 16, !tbaa !2
  %9813 = getelementptr inbounds float, float* %9811, i64 4
  %9814 = bitcast float* %9813 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9814, align 16, !tbaa !2
  %9815 = or i64 %9805, 16
  %9816 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9815
  %9817 = bitcast float* %9816 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9817, align 16, !tbaa !2
  %9818 = getelementptr inbounds float, float* %9816, i64 4
  %9819 = bitcast float* %9818 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9819, align 16, !tbaa !2
  %9820 = or i64 %9805, 24
  %9821 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9820
  %9822 = bitcast float* %9821 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9822, align 16, !tbaa !2
  %9823 = getelementptr inbounds float, float* %9821, i64 4
  %9824 = bitcast float* %9823 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9824, align 16, !tbaa !2
  %9825 = or i64 %9805, 32
  %9826 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9825
  %9827 = bitcast float* %9826 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9827, align 16, !tbaa !2
  %9828 = getelementptr inbounds float, float* %9826, i64 4
  %9829 = bitcast float* %9828 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9829, align 16, !tbaa !2
  %9830 = or i64 %9805, 40
  %9831 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9830
  %9832 = bitcast float* %9831 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9832, align 16, !tbaa !2
  %9833 = getelementptr inbounds float, float* %9831, i64 4
  %9834 = bitcast float* %9833 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9834, align 16, !tbaa !2
  %9835 = or i64 %9805, 48
  %9836 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9835
  %9837 = bitcast float* %9836 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9837, align 16, !tbaa !2
  %9838 = getelementptr inbounds float, float* %9836, i64 4
  %9839 = bitcast float* %9838 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9839, align 16, !tbaa !2
  %9840 = or i64 %9805, 56
  %9841 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9840
  %9842 = bitcast float* %9841 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9842, align 16, !tbaa !2
  %9843 = getelementptr inbounds float, float* %9841, i64 4
  %9844 = bitcast float* %9843 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9844, align 16, !tbaa !2
  %9845 = add nuw nsw i64 %9805, 64
  %9846 = icmp eq i64 %9845, 32000
  br i1 %9846, label %9847, label %9804, !llvm.loop !178

9847:                                             ; preds = %9804, %9847
  %9848 = phi i64 [ %9863, %9847 ], [ 0, %9804 ]
  %9849 = phi <4 x i64> [ %9864, %9847 ], [ <i64 0, i64 1, i64 2, i64 3>, %9804 ]
  %9850 = trunc <4 x i64> %9849 to <4 x i32>
  %9851 = add <4 x i32> %9850, <i32 1, i32 1, i32 1, i32 1>
  %9852 = sitofp <4 x i32> %9851 to <4 x float>
  %9853 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9852
  %9854 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9848
  %9855 = bitcast float* %9854 to <4 x float>*
  store <4 x float> %9853, <4 x float>* %9855, align 16, !tbaa !2
  %9856 = or i64 %9848, 4
  %9857 = trunc <4 x i64> %9849 to <4 x i32>
  %9858 = add <4 x i32> %9857, <i32 5, i32 5, i32 5, i32 5>
  %9859 = sitofp <4 x i32> %9858 to <4 x float>
  %9860 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9859
  %9861 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9856
  %9862 = bitcast float* %9861 to <4 x float>*
  store <4 x float> %9860, <4 x float>* %9862, align 16, !tbaa !2
  %9863 = add nuw nsw i64 %9848, 8
  %9864 = add <4 x i64> %9849, <i64 8, i64 8, i64 8, i64 8>
  %9865 = icmp eq i64 %9863, 32000
  br i1 %9865, label %9866, label %9847, !llvm.loop !179

9866:                                             ; preds = %9847, %9866
  %9867 = phi i64 [ %9882, %9866 ], [ 0, %9847 ]
  %9868 = phi <4 x i64> [ %9883, %9866 ], [ <i64 0, i64 1, i64 2, i64 3>, %9847 ]
  %9869 = trunc <4 x i64> %9868 to <4 x i32>
  %9870 = add <4 x i32> %9869, <i32 1, i32 1, i32 1, i32 1>
  %9871 = sitofp <4 x i32> %9870 to <4 x float>
  %9872 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9871
  %9873 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9867
  %9874 = bitcast float* %9873 to <4 x float>*
  store <4 x float> %9872, <4 x float>* %9874, align 16, !tbaa !2
  %9875 = or i64 %9867, 4
  %9876 = trunc <4 x i64> %9868 to <4 x i32>
  %9877 = add <4 x i32> %9876, <i32 5, i32 5, i32 5, i32 5>
  %9878 = sitofp <4 x i32> %9877 to <4 x float>
  %9879 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9878
  %9880 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %9875
  %9881 = bitcast float* %9880 to <4 x float>*
  store <4 x float> %9879, <4 x float>* %9881, align 16, !tbaa !2
  %9882 = add nuw nsw i64 %9867, 8
  %9883 = add <4 x i64> %9868, <i64 8, i64 8, i64 8, i64 8>
  %9884 = icmp eq i64 %9882, 32000
  br i1 %9884, label %9885, label %9866, !llvm.loop !180

9885:                                             ; preds = %9866, %9885
  %9886 = phi i64 [ %9901, %9885 ], [ 0, %9866 ]
  %9887 = phi <4 x i64> [ %9902, %9885 ], [ <i64 0, i64 1, i64 2, i64 3>, %9866 ]
  %9888 = trunc <4 x i64> %9887 to <4 x i32>
  %9889 = add <4 x i32> %9888, <i32 1, i32 1, i32 1, i32 1>
  %9890 = sitofp <4 x i32> %9889 to <4 x float>
  %9891 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9890
  %9892 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %9886
  %9893 = bitcast float* %9892 to <4 x float>*
  store <4 x float> %9891, <4 x float>* %9893, align 16, !tbaa !2
  %9894 = or i64 %9886, 4
  %9895 = trunc <4 x i64> %9887 to <4 x i32>
  %9896 = add <4 x i32> %9895, <i32 5, i32 5, i32 5, i32 5>
  %9897 = sitofp <4 x i32> %9896 to <4 x float>
  %9898 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9897
  %9899 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %9894
  %9900 = bitcast float* %9899 to <4 x float>*
  store <4 x float> %9898, <4 x float>* %9900, align 16, !tbaa !2
  %9901 = add nuw nsw i64 %9886, 8
  %9902 = add <4 x i64> %9887, <i64 8, i64 8, i64 8, i64 8>
  %9903 = icmp eq i64 %9901, 32000
  br i1 %9903, label %15603, label %9885, !llvm.loop !181

9904:                                             ; preds = %9758
  %9905 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0)) #15
  %9906 = icmp eq i32 %9905, 0
  br i1 %9906, label %9907, label %9988

9907:                                             ; preds = %9904, %9907
  %9908 = phi i64 [ %9948, %9907 ], [ 0, %9904 ]
  %9909 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9908
  %9910 = bitcast float* %9909 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9910, align 16, !tbaa !2
  %9911 = getelementptr inbounds float, float* %9909, i64 4
  %9912 = bitcast float* %9911 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9912, align 16, !tbaa !2
  %9913 = or i64 %9908, 8
  %9914 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9913
  %9915 = bitcast float* %9914 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9915, align 16, !tbaa !2
  %9916 = getelementptr inbounds float, float* %9914, i64 4
  %9917 = bitcast float* %9916 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9917, align 16, !tbaa !2
  %9918 = or i64 %9908, 16
  %9919 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9918
  %9920 = bitcast float* %9919 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9920, align 16, !tbaa !2
  %9921 = getelementptr inbounds float, float* %9919, i64 4
  %9922 = bitcast float* %9921 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9922, align 16, !tbaa !2
  %9923 = or i64 %9908, 24
  %9924 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9923
  %9925 = bitcast float* %9924 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9925, align 16, !tbaa !2
  %9926 = getelementptr inbounds float, float* %9924, i64 4
  %9927 = bitcast float* %9926 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9927, align 16, !tbaa !2
  %9928 = or i64 %9908, 32
  %9929 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9928
  %9930 = bitcast float* %9929 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9930, align 16, !tbaa !2
  %9931 = getelementptr inbounds float, float* %9929, i64 4
  %9932 = bitcast float* %9931 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9932, align 16, !tbaa !2
  %9933 = or i64 %9908, 40
  %9934 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9933
  %9935 = bitcast float* %9934 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9935, align 16, !tbaa !2
  %9936 = getelementptr inbounds float, float* %9934, i64 4
  %9937 = bitcast float* %9936 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9937, align 16, !tbaa !2
  %9938 = or i64 %9908, 48
  %9939 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9938
  %9940 = bitcast float* %9939 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9940, align 16, !tbaa !2
  %9941 = getelementptr inbounds float, float* %9939, i64 4
  %9942 = bitcast float* %9941 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9942, align 16, !tbaa !2
  %9943 = or i64 %9908, 56
  %9944 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9943
  %9945 = bitcast float* %9944 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9945, align 16, !tbaa !2
  %9946 = getelementptr inbounds float, float* %9944, i64 4
  %9947 = bitcast float* %9946 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9947, align 16, !tbaa !2
  %9948 = add nuw nsw i64 %9908, 64
  %9949 = icmp eq i64 %9948, 32000
  br i1 %9949, label %9950, label %9907, !llvm.loop !182

9950:                                             ; preds = %9907, %9950
  %9951 = phi i64 [ %9966, %9950 ], [ 0, %9907 ]
  %9952 = phi <4 x i64> [ %9967, %9950 ], [ <i64 0, i64 1, i64 2, i64 3>, %9907 ]
  %9953 = trunc <4 x i64> %9952 to <4 x i32>
  %9954 = add <4 x i32> %9953, <i32 1, i32 1, i32 1, i32 1>
  %9955 = sitofp <4 x i32> %9954 to <4 x float>
  %9956 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9955
  %9957 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9951
  %9958 = bitcast float* %9957 to <4 x float>*
  store <4 x float> %9956, <4 x float>* %9958, align 16, !tbaa !2
  %9959 = or i64 %9951, 4
  %9960 = trunc <4 x i64> %9952 to <4 x i32>
  %9961 = add <4 x i32> %9960, <i32 5, i32 5, i32 5, i32 5>
  %9962 = sitofp <4 x i32> %9961 to <4 x float>
  %9963 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9962
  %9964 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9959
  %9965 = bitcast float* %9964 to <4 x float>*
  store <4 x float> %9963, <4 x float>* %9965, align 16, !tbaa !2
  %9966 = add nuw nsw i64 %9951, 8
  %9967 = add <4 x i64> %9952, <i64 8, i64 8, i64 8, i64 8>
  %9968 = icmp eq i64 %9966, 32000
  br i1 %9968, label %9969, label %9950, !llvm.loop !183

9969:                                             ; preds = %9950, %9969
  %9970 = phi i64 [ %9985, %9969 ], [ 0, %9950 ]
  %9971 = phi <4 x i64> [ %9986, %9969 ], [ <i64 0, i64 1, i64 2, i64 3>, %9950 ]
  %9972 = trunc <4 x i64> %9971 to <4 x i32>
  %9973 = add <4 x i32> %9972, <i32 1, i32 1, i32 1, i32 1>
  %9974 = sitofp <4 x i32> %9973 to <4 x float>
  %9975 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9974
  %9976 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9970
  %9977 = bitcast float* %9976 to <4 x float>*
  store <4 x float> %9975, <4 x float>* %9977, align 16, !tbaa !2
  %9978 = or i64 %9970, 4
  %9979 = trunc <4 x i64> %9971 to <4 x i32>
  %9980 = add <4 x i32> %9979, <i32 5, i32 5, i32 5, i32 5>
  %9981 = sitofp <4 x i32> %9980 to <4 x float>
  %9982 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %9981
  %9983 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %9978
  %9984 = bitcast float* %9983 to <4 x float>*
  store <4 x float> %9982, <4 x float>* %9984, align 16, !tbaa !2
  %9985 = add nuw nsw i64 %9970, 8
  %9986 = add <4 x i64> %9971, <i64 8, i64 8, i64 8, i64 8>
  %9987 = icmp eq i64 %9985, 32000
  br i1 %9987, label %15603, label %9969, !llvm.loop !184

9988:                                             ; preds = %9904
  %9989 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0)) #15
  %9990 = icmp eq i32 %9989, 0
  br i1 %9990, label %9991, label %10072

9991:                                             ; preds = %9988, %9991
  %9992 = phi i64 [ %10032, %9991 ], [ 0, %9988 ]
  %9993 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9992
  %9994 = bitcast float* %9993 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9994, align 16, !tbaa !2
  %9995 = getelementptr inbounds float, float* %9993, i64 4
  %9996 = bitcast float* %9995 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9996, align 16, !tbaa !2
  %9997 = or i64 %9992, 8
  %9998 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9997
  %9999 = bitcast float* %9998 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9999, align 16, !tbaa !2
  %10000 = getelementptr inbounds float, float* %9998, i64 4
  %10001 = bitcast float* %10000 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10001, align 16, !tbaa !2
  %10002 = or i64 %9992, 16
  %10003 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10002
  %10004 = bitcast float* %10003 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10004, align 16, !tbaa !2
  %10005 = getelementptr inbounds float, float* %10003, i64 4
  %10006 = bitcast float* %10005 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10006, align 16, !tbaa !2
  %10007 = or i64 %9992, 24
  %10008 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10007
  %10009 = bitcast float* %10008 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10009, align 16, !tbaa !2
  %10010 = getelementptr inbounds float, float* %10008, i64 4
  %10011 = bitcast float* %10010 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10011, align 16, !tbaa !2
  %10012 = or i64 %9992, 32
  %10013 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10012
  %10014 = bitcast float* %10013 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10014, align 16, !tbaa !2
  %10015 = getelementptr inbounds float, float* %10013, i64 4
  %10016 = bitcast float* %10015 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10016, align 16, !tbaa !2
  %10017 = or i64 %9992, 40
  %10018 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10017
  %10019 = bitcast float* %10018 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10019, align 16, !tbaa !2
  %10020 = getelementptr inbounds float, float* %10018, i64 4
  %10021 = bitcast float* %10020 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10021, align 16, !tbaa !2
  %10022 = or i64 %9992, 48
  %10023 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10022
  %10024 = bitcast float* %10023 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10024, align 16, !tbaa !2
  %10025 = getelementptr inbounds float, float* %10023, i64 4
  %10026 = bitcast float* %10025 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10026, align 16, !tbaa !2
  %10027 = or i64 %9992, 56
  %10028 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10027
  %10029 = bitcast float* %10028 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10029, align 16, !tbaa !2
  %10030 = getelementptr inbounds float, float* %10028, i64 4
  %10031 = bitcast float* %10030 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10031, align 16, !tbaa !2
  %10032 = add nuw nsw i64 %9992, 64
  %10033 = icmp eq i64 %10032, 32000
  br i1 %10033, label %10034, label %9991, !llvm.loop !185

10034:                                            ; preds = %9991, %10034
  %10035 = phi i64 [ %10050, %10034 ], [ 0, %9991 ]
  %10036 = phi <4 x i64> [ %10051, %10034 ], [ <i64 0, i64 1, i64 2, i64 3>, %9991 ]
  %10037 = trunc <4 x i64> %10036 to <4 x i32>
  %10038 = add <4 x i32> %10037, <i32 1, i32 1, i32 1, i32 1>
  %10039 = sitofp <4 x i32> %10038 to <4 x float>
  %10040 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10039
  %10041 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10035
  %10042 = bitcast float* %10041 to <4 x float>*
  store <4 x float> %10040, <4 x float>* %10042, align 16, !tbaa !2
  %10043 = or i64 %10035, 4
  %10044 = trunc <4 x i64> %10036 to <4 x i32>
  %10045 = add <4 x i32> %10044, <i32 5, i32 5, i32 5, i32 5>
  %10046 = sitofp <4 x i32> %10045 to <4 x float>
  %10047 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10046
  %10048 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10043
  %10049 = bitcast float* %10048 to <4 x float>*
  store <4 x float> %10047, <4 x float>* %10049, align 16, !tbaa !2
  %10050 = add nuw nsw i64 %10035, 8
  %10051 = add <4 x i64> %10036, <i64 8, i64 8, i64 8, i64 8>
  %10052 = icmp eq i64 %10050, 32000
  br i1 %10052, label %10053, label %10034, !llvm.loop !186

10053:                                            ; preds = %10034, %10053
  %10054 = phi i64 [ %10069, %10053 ], [ 0, %10034 ]
  %10055 = phi <4 x i64> [ %10070, %10053 ], [ <i64 0, i64 1, i64 2, i64 3>, %10034 ]
  %10056 = trunc <4 x i64> %10055 to <4 x i32>
  %10057 = add <4 x i32> %10056, <i32 1, i32 1, i32 1, i32 1>
  %10058 = sitofp <4 x i32> %10057 to <4 x float>
  %10059 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10058
  %10060 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10054
  %10061 = bitcast float* %10060 to <4 x float>*
  store <4 x float> %10059, <4 x float>* %10061, align 16, !tbaa !2
  %10062 = or i64 %10054, 4
  %10063 = trunc <4 x i64> %10055 to <4 x i32>
  %10064 = add <4 x i32> %10063, <i32 5, i32 5, i32 5, i32 5>
  %10065 = sitofp <4 x i32> %10064 to <4 x float>
  %10066 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10065
  %10067 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10062
  %10068 = bitcast float* %10067 to <4 x float>*
  store <4 x float> %10066, <4 x float>* %10068, align 16, !tbaa !2
  %10069 = add nuw nsw i64 %10054, 8
  %10070 = add <4 x i64> %10055, <i64 8, i64 8, i64 8, i64 8>
  %10071 = icmp eq i64 %10069, 32000
  br i1 %10071, label %15603, label %10053, !llvm.loop !187

10072:                                            ; preds = %9988
  %10073 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0)) #15
  %10074 = icmp eq i32 %10073, 0
  br i1 %10074, label %10075, label %10162

10075:                                            ; preds = %10072
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %10076

10076:                                            ; preds = %10076, %10075
  %10077 = phi i64 [ 0, %10075 ], [ %10117, %10076 ]
  %10078 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10077
  %10079 = bitcast float* %10078 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10079, align 16, !tbaa !2
  %10080 = getelementptr inbounds float, float* %10078, i64 4
  %10081 = bitcast float* %10080 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10081, align 16, !tbaa !2
  %10082 = or i64 %10077, 8
  %10083 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10082
  %10084 = bitcast float* %10083 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10084, align 16, !tbaa !2
  %10085 = getelementptr inbounds float, float* %10083, i64 4
  %10086 = bitcast float* %10085 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10086, align 16, !tbaa !2
  %10087 = or i64 %10077, 16
  %10088 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10087
  %10089 = bitcast float* %10088 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10089, align 16, !tbaa !2
  %10090 = getelementptr inbounds float, float* %10088, i64 4
  %10091 = bitcast float* %10090 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10091, align 16, !tbaa !2
  %10092 = or i64 %10077, 24
  %10093 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10092
  %10094 = bitcast float* %10093 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10094, align 16, !tbaa !2
  %10095 = getelementptr inbounds float, float* %10093, i64 4
  %10096 = bitcast float* %10095 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10096, align 16, !tbaa !2
  %10097 = or i64 %10077, 32
  %10098 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10097
  %10099 = bitcast float* %10098 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10099, align 16, !tbaa !2
  %10100 = getelementptr inbounds float, float* %10098, i64 4
  %10101 = bitcast float* %10100 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10101, align 16, !tbaa !2
  %10102 = or i64 %10077, 40
  %10103 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10102
  %10104 = bitcast float* %10103 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10104, align 16, !tbaa !2
  %10105 = getelementptr inbounds float, float* %10103, i64 4
  %10106 = bitcast float* %10105 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10106, align 16, !tbaa !2
  %10107 = or i64 %10077, 48
  %10108 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10107
  %10109 = bitcast float* %10108 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10109, align 16, !tbaa !2
  %10110 = getelementptr inbounds float, float* %10108, i64 4
  %10111 = bitcast float* %10110 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10111, align 16, !tbaa !2
  %10112 = or i64 %10077, 56
  %10113 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10112
  %10114 = bitcast float* %10113 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10114, align 16, !tbaa !2
  %10115 = getelementptr inbounds float, float* %10113, i64 4
  %10116 = bitcast float* %10115 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10116, align 16, !tbaa !2
  %10117 = add nuw nsw i64 %10077, 64
  %10118 = icmp eq i64 %10117, 32000
  br i1 %10118, label %10119, label %10076, !llvm.loop !188

10119:                                            ; preds = %10076, %10119
  %10120 = phi i64 [ %10160, %10119 ], [ 0, %10076 ]
  %10121 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10120
  %10122 = bitcast float* %10121 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10122, align 16, !tbaa !2
  %10123 = getelementptr inbounds float, float* %10121, i64 4
  %10124 = bitcast float* %10123 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10124, align 16, !tbaa !2
  %10125 = or i64 %10120, 8
  %10126 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10125
  %10127 = bitcast float* %10126 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10127, align 16, !tbaa !2
  %10128 = getelementptr inbounds float, float* %10126, i64 4
  %10129 = bitcast float* %10128 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10129, align 16, !tbaa !2
  %10130 = or i64 %10120, 16
  %10131 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10130
  %10132 = bitcast float* %10131 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10132, align 16, !tbaa !2
  %10133 = getelementptr inbounds float, float* %10131, i64 4
  %10134 = bitcast float* %10133 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10134, align 16, !tbaa !2
  %10135 = or i64 %10120, 24
  %10136 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10135
  %10137 = bitcast float* %10136 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10137, align 16, !tbaa !2
  %10138 = getelementptr inbounds float, float* %10136, i64 4
  %10139 = bitcast float* %10138 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10139, align 16, !tbaa !2
  %10140 = or i64 %10120, 32
  %10141 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10140
  %10142 = bitcast float* %10141 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10142, align 16, !tbaa !2
  %10143 = getelementptr inbounds float, float* %10141, i64 4
  %10144 = bitcast float* %10143 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10144, align 16, !tbaa !2
  %10145 = or i64 %10120, 40
  %10146 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10145
  %10147 = bitcast float* %10146 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10147, align 16, !tbaa !2
  %10148 = getelementptr inbounds float, float* %10146, i64 4
  %10149 = bitcast float* %10148 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10149, align 16, !tbaa !2
  %10150 = or i64 %10120, 48
  %10151 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10150
  %10152 = bitcast float* %10151 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10152, align 16, !tbaa !2
  %10153 = getelementptr inbounds float, float* %10151, i64 4
  %10154 = bitcast float* %10153 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10154, align 16, !tbaa !2
  %10155 = or i64 %10120, 56
  %10156 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10155
  %10157 = bitcast float* %10156 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10157, align 16, !tbaa !2
  %10158 = getelementptr inbounds float, float* %10156, i64 4
  %10159 = bitcast float* %10158 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10159, align 16, !tbaa !2
  %10160 = add nuw nsw i64 %10120, 64
  %10161 = icmp eq i64 %10160, 32000
  br i1 %10161, label %15603, label %10119, !llvm.loop !189

10162:                                            ; preds = %10072
  %10163 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0)) #15
  %10164 = icmp eq i32 %10163, 0
  br i1 %10164, label %10165, label %10209

10165:                                            ; preds = %10162
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %10166

10166:                                            ; preds = %10166, %10165
  %10167 = phi i64 [ 0, %10165 ], [ %10207, %10166 ]
  %10168 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10167
  %10169 = bitcast float* %10168 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10169, align 16, !tbaa !2
  %10170 = getelementptr inbounds float, float* %10168, i64 4
  %10171 = bitcast float* %10170 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10171, align 16, !tbaa !2
  %10172 = or i64 %10167, 8
  %10173 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10172
  %10174 = bitcast float* %10173 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10174, align 16, !tbaa !2
  %10175 = getelementptr inbounds float, float* %10173, i64 4
  %10176 = bitcast float* %10175 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10176, align 16, !tbaa !2
  %10177 = or i64 %10167, 16
  %10178 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10177
  %10179 = bitcast float* %10178 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10179, align 16, !tbaa !2
  %10180 = getelementptr inbounds float, float* %10178, i64 4
  %10181 = bitcast float* %10180 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10181, align 16, !tbaa !2
  %10182 = or i64 %10167, 24
  %10183 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10182
  %10184 = bitcast float* %10183 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10184, align 16, !tbaa !2
  %10185 = getelementptr inbounds float, float* %10183, i64 4
  %10186 = bitcast float* %10185 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10186, align 16, !tbaa !2
  %10187 = or i64 %10167, 32
  %10188 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10187
  %10189 = bitcast float* %10188 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10189, align 16, !tbaa !2
  %10190 = getelementptr inbounds float, float* %10188, i64 4
  %10191 = bitcast float* %10190 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10191, align 16, !tbaa !2
  %10192 = or i64 %10167, 40
  %10193 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10192
  %10194 = bitcast float* %10193 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10194, align 16, !tbaa !2
  %10195 = getelementptr inbounds float, float* %10193, i64 4
  %10196 = bitcast float* %10195 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10196, align 16, !tbaa !2
  %10197 = or i64 %10167, 48
  %10198 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10197
  %10199 = bitcast float* %10198 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10199, align 16, !tbaa !2
  %10200 = getelementptr inbounds float, float* %10198, i64 4
  %10201 = bitcast float* %10200 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10201, align 16, !tbaa !2
  %10202 = or i64 %10167, 56
  %10203 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10202
  %10204 = bitcast float* %10203 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10204, align 16, !tbaa !2
  %10205 = getelementptr inbounds float, float* %10203, i64 4
  %10206 = bitcast float* %10205 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10206, align 16, !tbaa !2
  %10207 = add nuw nsw i64 %10167, 64
  %10208 = icmp eq i64 %10207, 32000
  br i1 %10208, label %15603, label %10166, !llvm.loop !190

10209:                                            ; preds = %10162
  %10210 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0)) #15
  %10211 = icmp eq i32 %10210, 0
  br i1 %10211, label %10212, label %10256

10212:                                            ; preds = %10209
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %10213

10213:                                            ; preds = %10213, %10212
  %10214 = phi i64 [ 0, %10212 ], [ %10254, %10213 ]
  %10215 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10214
  %10216 = bitcast float* %10215 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10216, align 16, !tbaa !2
  %10217 = getelementptr inbounds float, float* %10215, i64 4
  %10218 = bitcast float* %10217 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10218, align 16, !tbaa !2
  %10219 = or i64 %10214, 8
  %10220 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10219
  %10221 = bitcast float* %10220 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10221, align 16, !tbaa !2
  %10222 = getelementptr inbounds float, float* %10220, i64 4
  %10223 = bitcast float* %10222 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10223, align 16, !tbaa !2
  %10224 = or i64 %10214, 16
  %10225 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10224
  %10226 = bitcast float* %10225 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10226, align 16, !tbaa !2
  %10227 = getelementptr inbounds float, float* %10225, i64 4
  %10228 = bitcast float* %10227 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10228, align 16, !tbaa !2
  %10229 = or i64 %10214, 24
  %10230 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10229
  %10231 = bitcast float* %10230 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10231, align 16, !tbaa !2
  %10232 = getelementptr inbounds float, float* %10230, i64 4
  %10233 = bitcast float* %10232 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10233, align 16, !tbaa !2
  %10234 = or i64 %10214, 32
  %10235 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10234
  %10236 = bitcast float* %10235 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10236, align 16, !tbaa !2
  %10237 = getelementptr inbounds float, float* %10235, i64 4
  %10238 = bitcast float* %10237 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10238, align 16, !tbaa !2
  %10239 = or i64 %10214, 40
  %10240 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10239
  %10241 = bitcast float* %10240 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10241, align 16, !tbaa !2
  %10242 = getelementptr inbounds float, float* %10240, i64 4
  %10243 = bitcast float* %10242 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10243, align 16, !tbaa !2
  %10244 = or i64 %10214, 48
  %10245 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10244
  %10246 = bitcast float* %10245 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10246, align 16, !tbaa !2
  %10247 = getelementptr inbounds float, float* %10245, i64 4
  %10248 = bitcast float* %10247 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10248, align 16, !tbaa !2
  %10249 = or i64 %10214, 56
  %10250 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10249
  %10251 = bitcast float* %10250 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10251, align 16, !tbaa !2
  %10252 = getelementptr inbounds float, float* %10250, i64 4
  %10253 = bitcast float* %10252 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10253, align 16, !tbaa !2
  %10254 = add nuw nsw i64 %10214, 64
  %10255 = icmp eq i64 %10254, 32000
  br i1 %10255, label %15603, label %10213, !llvm.loop !191

10256:                                            ; preds = %10209
  %10257 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0)) #15
  %10258 = icmp eq i32 %10257, 0
  br i1 %10258, label %10259, label %10278

10259:                                            ; preds = %10256, %10259
  %10260 = phi i64 [ %10275, %10259 ], [ 0, %10256 ]
  %10261 = phi <4 x i64> [ %10276, %10259 ], [ <i64 0, i64 1, i64 2, i64 3>, %10256 ]
  %10262 = trunc <4 x i64> %10261 to <4 x i32>
  %10263 = add <4 x i32> %10262, <i32 1, i32 1, i32 1, i32 1>
  %10264 = sitofp <4 x i32> %10263 to <4 x float>
  %10265 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10264
  %10266 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10260
  %10267 = bitcast float* %10266 to <4 x float>*
  store <4 x float> %10265, <4 x float>* %10267, align 16, !tbaa !2
  %10268 = or i64 %10260, 4
  %10269 = trunc <4 x i64> %10261 to <4 x i32>
  %10270 = add <4 x i32> %10269, <i32 5, i32 5, i32 5, i32 5>
  %10271 = sitofp <4 x i32> %10270 to <4 x float>
  %10272 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10271
  %10273 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10268
  %10274 = bitcast float* %10273 to <4 x float>*
  store <4 x float> %10272, <4 x float>* %10274, align 16, !tbaa !2
  %10275 = add nuw nsw i64 %10260, 8
  %10276 = add <4 x i64> %10261, <i64 8, i64 8, i64 8, i64 8>
  %10277 = icmp eq i64 %10275, 32000
  br i1 %10277, label %15603, label %10259, !llvm.loop !192

10278:                                            ; preds = %10256
  %10279 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0)) #15
  %10280 = icmp eq i32 %10279, 0
  br i1 %10280, label %10281, label %10691

10281:                                            ; preds = %10278, %10281
  %10282 = phi i64 [ %10411, %10281 ], [ 0, %10278 ]
  %10283 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 0
  %10284 = bitcast float* %10283 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10284, align 16, !tbaa !2
  %10285 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 4
  %10286 = bitcast float* %10285 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10286, align 16, !tbaa !2
  %10287 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 8
  %10288 = bitcast float* %10287 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10288, align 16, !tbaa !2
  %10289 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 12
  %10290 = bitcast float* %10289 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10290, align 16, !tbaa !2
  %10291 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 16
  %10292 = bitcast float* %10291 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10292, align 16, !tbaa !2
  %10293 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 20
  %10294 = bitcast float* %10293 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10294, align 16, !tbaa !2
  %10295 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 24
  %10296 = bitcast float* %10295 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10296, align 16, !tbaa !2
  %10297 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 28
  %10298 = bitcast float* %10297 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10298, align 16, !tbaa !2
  %10299 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 32
  %10300 = bitcast float* %10299 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10300, align 16, !tbaa !2
  %10301 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 36
  %10302 = bitcast float* %10301 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10302, align 16, !tbaa !2
  %10303 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 40
  %10304 = bitcast float* %10303 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10304, align 16, !tbaa !2
  %10305 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 44
  %10306 = bitcast float* %10305 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10306, align 16, !tbaa !2
  %10307 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 48
  %10308 = bitcast float* %10307 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10308, align 16, !tbaa !2
  %10309 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 52
  %10310 = bitcast float* %10309 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10310, align 16, !tbaa !2
  %10311 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 56
  %10312 = bitcast float* %10311 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10312, align 16, !tbaa !2
  %10313 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 60
  %10314 = bitcast float* %10313 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10314, align 16, !tbaa !2
  %10315 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 64
  %10316 = bitcast float* %10315 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10316, align 16, !tbaa !2
  %10317 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 68
  %10318 = bitcast float* %10317 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10318, align 16, !tbaa !2
  %10319 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 72
  %10320 = bitcast float* %10319 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10320, align 16, !tbaa !2
  %10321 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 76
  %10322 = bitcast float* %10321 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10322, align 16, !tbaa !2
  %10323 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 80
  %10324 = bitcast float* %10323 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10324, align 16, !tbaa !2
  %10325 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 84
  %10326 = bitcast float* %10325 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10326, align 16, !tbaa !2
  %10327 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 88
  %10328 = bitcast float* %10327 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10328, align 16, !tbaa !2
  %10329 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 92
  %10330 = bitcast float* %10329 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10330, align 16, !tbaa !2
  %10331 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 96
  %10332 = bitcast float* %10331 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10332, align 16, !tbaa !2
  %10333 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 100
  %10334 = bitcast float* %10333 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10334, align 16, !tbaa !2
  %10335 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 104
  %10336 = bitcast float* %10335 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10336, align 16, !tbaa !2
  %10337 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 108
  %10338 = bitcast float* %10337 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10338, align 16, !tbaa !2
  %10339 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 112
  %10340 = bitcast float* %10339 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10340, align 16, !tbaa !2
  %10341 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 116
  %10342 = bitcast float* %10341 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10342, align 16, !tbaa !2
  %10343 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 120
  %10344 = bitcast float* %10343 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10344, align 16, !tbaa !2
  %10345 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 124
  %10346 = bitcast float* %10345 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10346, align 16, !tbaa !2
  %10347 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 128
  %10348 = bitcast float* %10347 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10348, align 16, !tbaa !2
  %10349 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 132
  %10350 = bitcast float* %10349 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10350, align 16, !tbaa !2
  %10351 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 136
  %10352 = bitcast float* %10351 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10352, align 16, !tbaa !2
  %10353 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 140
  %10354 = bitcast float* %10353 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10354, align 16, !tbaa !2
  %10355 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 144
  %10356 = bitcast float* %10355 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10356, align 16, !tbaa !2
  %10357 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 148
  %10358 = bitcast float* %10357 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10358, align 16, !tbaa !2
  %10359 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 152
  %10360 = bitcast float* %10359 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10360, align 16, !tbaa !2
  %10361 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 156
  %10362 = bitcast float* %10361 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10362, align 16, !tbaa !2
  %10363 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 160
  %10364 = bitcast float* %10363 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10364, align 16, !tbaa !2
  %10365 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 164
  %10366 = bitcast float* %10365 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10366, align 16, !tbaa !2
  %10367 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 168
  %10368 = bitcast float* %10367 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10368, align 16, !tbaa !2
  %10369 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 172
  %10370 = bitcast float* %10369 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10370, align 16, !tbaa !2
  %10371 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 176
  %10372 = bitcast float* %10371 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10372, align 16, !tbaa !2
  %10373 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 180
  %10374 = bitcast float* %10373 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10374, align 16, !tbaa !2
  %10375 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 184
  %10376 = bitcast float* %10375 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10376, align 16, !tbaa !2
  %10377 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 188
  %10378 = bitcast float* %10377 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10378, align 16, !tbaa !2
  %10379 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 192
  %10380 = bitcast float* %10379 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10380, align 16, !tbaa !2
  %10381 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 196
  %10382 = bitcast float* %10381 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10382, align 16, !tbaa !2
  %10383 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 200
  %10384 = bitcast float* %10383 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10384, align 16, !tbaa !2
  %10385 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 204
  %10386 = bitcast float* %10385 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10386, align 16, !tbaa !2
  %10387 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 208
  %10388 = bitcast float* %10387 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10388, align 16, !tbaa !2
  %10389 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 212
  %10390 = bitcast float* %10389 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10390, align 16, !tbaa !2
  %10391 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 216
  %10392 = bitcast float* %10391 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10392, align 16, !tbaa !2
  %10393 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 220
  %10394 = bitcast float* %10393 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10394, align 16, !tbaa !2
  %10395 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 224
  %10396 = bitcast float* %10395 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10396, align 16, !tbaa !2
  %10397 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 228
  %10398 = bitcast float* %10397 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10398, align 16, !tbaa !2
  %10399 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 232
  %10400 = bitcast float* %10399 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10400, align 16, !tbaa !2
  %10401 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 236
  %10402 = bitcast float* %10401 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10402, align 16, !tbaa !2
  %10403 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 240
  %10404 = bitcast float* %10403 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10404, align 16, !tbaa !2
  %10405 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 244
  %10406 = bitcast float* %10405 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10406, align 16, !tbaa !2
  %10407 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 248
  %10408 = bitcast float* %10407 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10408, align 16, !tbaa !2
  %10409 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10282, i64 252
  %10410 = bitcast float* %10409 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10410, align 16, !tbaa !2
  %10411 = add nuw nsw i64 %10282, 1
  %10412 = icmp eq i64 %10411, 256
  br i1 %10412, label %10413, label %10281

10413:                                            ; preds = %10281, %10413
  %10414 = phi i64 [ %10415, %10413 ], [ 0, %10281 ]
  %10415 = add nuw nsw i64 %10414, 1
  %10416 = trunc i64 %10415 to i32
  %10417 = sitofp i32 %10416 to float
  %10418 = fdiv float 1.000000e+00, %10417
  %10419 = insertelement <4 x float> undef, float %10418, i32 0
  %10420 = shufflevector <4 x float> %10419, <4 x float> undef, <4 x i32> zeroinitializer
  %10421 = insertelement <4 x float> undef, float %10418, i32 0
  %10422 = shufflevector <4 x float> %10421, <4 x float> undef, <4 x i32> zeroinitializer
  %10423 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 0
  %10424 = bitcast float* %10423 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10424, align 16, !tbaa !2
  %10425 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 4
  %10426 = bitcast float* %10425 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10426, align 16, !tbaa !2
  %10427 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 8
  %10428 = bitcast float* %10427 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10428, align 16, !tbaa !2
  %10429 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 12
  %10430 = bitcast float* %10429 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10430, align 16, !tbaa !2
  %10431 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 16
  %10432 = bitcast float* %10431 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10432, align 16, !tbaa !2
  %10433 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 20
  %10434 = bitcast float* %10433 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10434, align 16, !tbaa !2
  %10435 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 24
  %10436 = bitcast float* %10435 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10436, align 16, !tbaa !2
  %10437 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 28
  %10438 = bitcast float* %10437 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10438, align 16, !tbaa !2
  %10439 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 32
  %10440 = bitcast float* %10439 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10440, align 16, !tbaa !2
  %10441 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 36
  %10442 = bitcast float* %10441 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10442, align 16, !tbaa !2
  %10443 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 40
  %10444 = bitcast float* %10443 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10444, align 16, !tbaa !2
  %10445 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 44
  %10446 = bitcast float* %10445 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10446, align 16, !tbaa !2
  %10447 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 48
  %10448 = bitcast float* %10447 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10448, align 16, !tbaa !2
  %10449 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 52
  %10450 = bitcast float* %10449 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10450, align 16, !tbaa !2
  %10451 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 56
  %10452 = bitcast float* %10451 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10452, align 16, !tbaa !2
  %10453 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 60
  %10454 = bitcast float* %10453 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10454, align 16, !tbaa !2
  %10455 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 64
  %10456 = bitcast float* %10455 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10456, align 16, !tbaa !2
  %10457 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 68
  %10458 = bitcast float* %10457 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10458, align 16, !tbaa !2
  %10459 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 72
  %10460 = bitcast float* %10459 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10460, align 16, !tbaa !2
  %10461 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 76
  %10462 = bitcast float* %10461 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10462, align 16, !tbaa !2
  %10463 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 80
  %10464 = bitcast float* %10463 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10464, align 16, !tbaa !2
  %10465 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 84
  %10466 = bitcast float* %10465 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10466, align 16, !tbaa !2
  %10467 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 88
  %10468 = bitcast float* %10467 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10468, align 16, !tbaa !2
  %10469 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 92
  %10470 = bitcast float* %10469 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10470, align 16, !tbaa !2
  %10471 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 96
  %10472 = bitcast float* %10471 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10472, align 16, !tbaa !2
  %10473 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 100
  %10474 = bitcast float* %10473 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10474, align 16, !tbaa !2
  %10475 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 104
  %10476 = bitcast float* %10475 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10476, align 16, !tbaa !2
  %10477 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 108
  %10478 = bitcast float* %10477 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10478, align 16, !tbaa !2
  %10479 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 112
  %10480 = bitcast float* %10479 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10480, align 16, !tbaa !2
  %10481 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 116
  %10482 = bitcast float* %10481 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10482, align 16, !tbaa !2
  %10483 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 120
  %10484 = bitcast float* %10483 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10484, align 16, !tbaa !2
  %10485 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 124
  %10486 = bitcast float* %10485 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10486, align 16, !tbaa !2
  %10487 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 128
  %10488 = bitcast float* %10487 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10488, align 16, !tbaa !2
  %10489 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 132
  %10490 = bitcast float* %10489 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10490, align 16, !tbaa !2
  %10491 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 136
  %10492 = bitcast float* %10491 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10492, align 16, !tbaa !2
  %10493 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 140
  %10494 = bitcast float* %10493 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10494, align 16, !tbaa !2
  %10495 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 144
  %10496 = bitcast float* %10495 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10496, align 16, !tbaa !2
  %10497 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 148
  %10498 = bitcast float* %10497 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10498, align 16, !tbaa !2
  %10499 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 152
  %10500 = bitcast float* %10499 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10500, align 16, !tbaa !2
  %10501 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 156
  %10502 = bitcast float* %10501 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10502, align 16, !tbaa !2
  %10503 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 160
  %10504 = bitcast float* %10503 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10504, align 16, !tbaa !2
  %10505 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 164
  %10506 = bitcast float* %10505 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10506, align 16, !tbaa !2
  %10507 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 168
  %10508 = bitcast float* %10507 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10508, align 16, !tbaa !2
  %10509 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 172
  %10510 = bitcast float* %10509 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10510, align 16, !tbaa !2
  %10511 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 176
  %10512 = bitcast float* %10511 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10512, align 16, !tbaa !2
  %10513 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 180
  %10514 = bitcast float* %10513 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10514, align 16, !tbaa !2
  %10515 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 184
  %10516 = bitcast float* %10515 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10516, align 16, !tbaa !2
  %10517 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 188
  %10518 = bitcast float* %10517 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10518, align 16, !tbaa !2
  %10519 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 192
  %10520 = bitcast float* %10519 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10520, align 16, !tbaa !2
  %10521 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 196
  %10522 = bitcast float* %10521 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10522, align 16, !tbaa !2
  %10523 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 200
  %10524 = bitcast float* %10523 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10524, align 16, !tbaa !2
  %10525 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 204
  %10526 = bitcast float* %10525 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10526, align 16, !tbaa !2
  %10527 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 208
  %10528 = bitcast float* %10527 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10528, align 16, !tbaa !2
  %10529 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 212
  %10530 = bitcast float* %10529 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10530, align 16, !tbaa !2
  %10531 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 216
  %10532 = bitcast float* %10531 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10532, align 16, !tbaa !2
  %10533 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 220
  %10534 = bitcast float* %10533 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10534, align 16, !tbaa !2
  %10535 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 224
  %10536 = bitcast float* %10535 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10536, align 16, !tbaa !2
  %10537 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 228
  %10538 = bitcast float* %10537 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10538, align 16, !tbaa !2
  %10539 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 232
  %10540 = bitcast float* %10539 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10540, align 16, !tbaa !2
  %10541 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 236
  %10542 = bitcast float* %10541 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10542, align 16, !tbaa !2
  %10543 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 240
  %10544 = bitcast float* %10543 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10544, align 16, !tbaa !2
  %10545 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 244
  %10546 = bitcast float* %10545 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10546, align 16, !tbaa !2
  %10547 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 248
  %10548 = bitcast float* %10547 to <4 x float>*
  store <4 x float> %10420, <4 x float>* %10548, align 16, !tbaa !2
  %10549 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %10414, i64 252
  %10550 = bitcast float* %10549 to <4 x float>*
  store <4 x float> %10422, <4 x float>* %10550, align 16, !tbaa !2
  %10551 = icmp eq i64 %10415, 256
  br i1 %10551, label %10552, label %10413

10552:                                            ; preds = %10413, %10552
  %10553 = phi i64 [ %10554, %10552 ], [ 0, %10413 ]
  %10554 = add nuw nsw i64 %10553, 1
  %10555 = trunc i64 %10554 to i32
  %10556 = sitofp i32 %10555 to float
  %10557 = fdiv float 1.000000e+00, %10556
  %10558 = insertelement <4 x float> undef, float %10557, i32 0
  %10559 = shufflevector <4 x float> %10558, <4 x float> undef, <4 x i32> zeroinitializer
  %10560 = insertelement <4 x float> undef, float %10557, i32 0
  %10561 = shufflevector <4 x float> %10560, <4 x float> undef, <4 x i32> zeroinitializer
  %10562 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 0
  %10563 = bitcast float* %10562 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10563, align 16, !tbaa !2
  %10564 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 4
  %10565 = bitcast float* %10564 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10565, align 16, !tbaa !2
  %10566 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 8
  %10567 = bitcast float* %10566 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10567, align 16, !tbaa !2
  %10568 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 12
  %10569 = bitcast float* %10568 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10569, align 16, !tbaa !2
  %10570 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 16
  %10571 = bitcast float* %10570 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10571, align 16, !tbaa !2
  %10572 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 20
  %10573 = bitcast float* %10572 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10573, align 16, !tbaa !2
  %10574 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 24
  %10575 = bitcast float* %10574 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10575, align 16, !tbaa !2
  %10576 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 28
  %10577 = bitcast float* %10576 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10577, align 16, !tbaa !2
  %10578 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 32
  %10579 = bitcast float* %10578 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10579, align 16, !tbaa !2
  %10580 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 36
  %10581 = bitcast float* %10580 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10581, align 16, !tbaa !2
  %10582 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 40
  %10583 = bitcast float* %10582 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10583, align 16, !tbaa !2
  %10584 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 44
  %10585 = bitcast float* %10584 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10585, align 16, !tbaa !2
  %10586 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 48
  %10587 = bitcast float* %10586 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10587, align 16, !tbaa !2
  %10588 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 52
  %10589 = bitcast float* %10588 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10589, align 16, !tbaa !2
  %10590 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 56
  %10591 = bitcast float* %10590 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10591, align 16, !tbaa !2
  %10592 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 60
  %10593 = bitcast float* %10592 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10593, align 16, !tbaa !2
  %10594 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 64
  %10595 = bitcast float* %10594 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10595, align 16, !tbaa !2
  %10596 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 68
  %10597 = bitcast float* %10596 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10597, align 16, !tbaa !2
  %10598 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 72
  %10599 = bitcast float* %10598 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10599, align 16, !tbaa !2
  %10600 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 76
  %10601 = bitcast float* %10600 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10601, align 16, !tbaa !2
  %10602 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 80
  %10603 = bitcast float* %10602 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10603, align 16, !tbaa !2
  %10604 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 84
  %10605 = bitcast float* %10604 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10605, align 16, !tbaa !2
  %10606 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 88
  %10607 = bitcast float* %10606 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10607, align 16, !tbaa !2
  %10608 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 92
  %10609 = bitcast float* %10608 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10609, align 16, !tbaa !2
  %10610 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 96
  %10611 = bitcast float* %10610 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10611, align 16, !tbaa !2
  %10612 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 100
  %10613 = bitcast float* %10612 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10613, align 16, !tbaa !2
  %10614 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 104
  %10615 = bitcast float* %10614 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10615, align 16, !tbaa !2
  %10616 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 108
  %10617 = bitcast float* %10616 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10617, align 16, !tbaa !2
  %10618 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 112
  %10619 = bitcast float* %10618 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10619, align 16, !tbaa !2
  %10620 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 116
  %10621 = bitcast float* %10620 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10621, align 16, !tbaa !2
  %10622 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 120
  %10623 = bitcast float* %10622 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10623, align 16, !tbaa !2
  %10624 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 124
  %10625 = bitcast float* %10624 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10625, align 16, !tbaa !2
  %10626 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 128
  %10627 = bitcast float* %10626 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10627, align 16, !tbaa !2
  %10628 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 132
  %10629 = bitcast float* %10628 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10629, align 16, !tbaa !2
  %10630 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 136
  %10631 = bitcast float* %10630 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10631, align 16, !tbaa !2
  %10632 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 140
  %10633 = bitcast float* %10632 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10633, align 16, !tbaa !2
  %10634 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 144
  %10635 = bitcast float* %10634 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10635, align 16, !tbaa !2
  %10636 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 148
  %10637 = bitcast float* %10636 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10637, align 16, !tbaa !2
  %10638 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 152
  %10639 = bitcast float* %10638 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10639, align 16, !tbaa !2
  %10640 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 156
  %10641 = bitcast float* %10640 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10641, align 16, !tbaa !2
  %10642 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 160
  %10643 = bitcast float* %10642 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10643, align 16, !tbaa !2
  %10644 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 164
  %10645 = bitcast float* %10644 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10645, align 16, !tbaa !2
  %10646 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 168
  %10647 = bitcast float* %10646 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10647, align 16, !tbaa !2
  %10648 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 172
  %10649 = bitcast float* %10648 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10649, align 16, !tbaa !2
  %10650 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 176
  %10651 = bitcast float* %10650 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10651, align 16, !tbaa !2
  %10652 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 180
  %10653 = bitcast float* %10652 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10653, align 16, !tbaa !2
  %10654 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 184
  %10655 = bitcast float* %10654 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10655, align 16, !tbaa !2
  %10656 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 188
  %10657 = bitcast float* %10656 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10657, align 16, !tbaa !2
  %10658 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 192
  %10659 = bitcast float* %10658 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10659, align 16, !tbaa !2
  %10660 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 196
  %10661 = bitcast float* %10660 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10661, align 16, !tbaa !2
  %10662 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 200
  %10663 = bitcast float* %10662 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10663, align 16, !tbaa !2
  %10664 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 204
  %10665 = bitcast float* %10664 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10665, align 16, !tbaa !2
  %10666 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 208
  %10667 = bitcast float* %10666 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10667, align 16, !tbaa !2
  %10668 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 212
  %10669 = bitcast float* %10668 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10669, align 16, !tbaa !2
  %10670 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 216
  %10671 = bitcast float* %10670 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10671, align 16, !tbaa !2
  %10672 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 220
  %10673 = bitcast float* %10672 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10673, align 16, !tbaa !2
  %10674 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 224
  %10675 = bitcast float* %10674 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10675, align 16, !tbaa !2
  %10676 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 228
  %10677 = bitcast float* %10676 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10677, align 16, !tbaa !2
  %10678 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 232
  %10679 = bitcast float* %10678 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10679, align 16, !tbaa !2
  %10680 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 236
  %10681 = bitcast float* %10680 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10681, align 16, !tbaa !2
  %10682 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 240
  %10683 = bitcast float* %10682 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10683, align 16, !tbaa !2
  %10684 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 244
  %10685 = bitcast float* %10684 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10685, align 16, !tbaa !2
  %10686 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 248
  %10687 = bitcast float* %10686 to <4 x float>*
  store <4 x float> %10559, <4 x float>* %10687, align 16, !tbaa !2
  %10688 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %10553, i64 252
  %10689 = bitcast float* %10688 to <4 x float>*
  store <4 x float> %10561, <4 x float>* %10689, align 16, !tbaa !2
  %10690 = icmp eq i64 %10554, 256
  br i1 %10690, label %15603, label %10552

10691:                                            ; preds = %10278
  %10692 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0)) #15
  %10693 = icmp eq i32 %10692, 0
  br i1 %10693, label %10694, label %10695

10694:                                            ; preds = %10691
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(262144) bitcast ([256 x [256 x float]]* @aa to i8*), i8 0, i64 262144, i1 false)
  br label %15603

10695:                                            ; preds = %10691
  %10696 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0)) #15
  %10697 = icmp eq i32 %10696, 0
  br i1 %10697, label %10698, label %10699

10698:                                            ; preds = %10695
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(262144) bitcast ([256 x [256 x float]]* @aa to i8*), i8 0, i64 262144, i1 false)
  br label %15603

10699:                                            ; preds = %10695
  %10700 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0)) #15
  %10701 = icmp eq i32 %10700, 0
  br i1 %10701, label %10702, label %10721

10702:                                            ; preds = %10699, %10702
  %10703 = phi i64 [ %10718, %10702 ], [ 0, %10699 ]
  %10704 = phi <4 x i64> [ %10719, %10702 ], [ <i64 0, i64 1, i64 2, i64 3>, %10699 ]
  %10705 = trunc <4 x i64> %10704 to <4 x i32>
  %10706 = add <4 x i32> %10705, <i32 1, i32 1, i32 1, i32 1>
  %10707 = sitofp <4 x i32> %10706 to <4 x float>
  %10708 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10707
  %10709 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10703
  %10710 = bitcast float* %10709 to <4 x float>*
  store <4 x float> %10708, <4 x float>* %10710, align 16, !tbaa !2
  %10711 = or i64 %10703, 4
  %10712 = trunc <4 x i64> %10704 to <4 x i32>
  %10713 = add <4 x i32> %10712, <i32 5, i32 5, i32 5, i32 5>
  %10714 = sitofp <4 x i32> %10713 to <4 x float>
  %10715 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10714
  %10716 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10711
  %10717 = bitcast float* %10716 to <4 x float>*
  store <4 x float> %10715, <4 x float>* %10717, align 16, !tbaa !2
  %10718 = add nuw nsw i64 %10703, 8
  %10719 = add <4 x i64> %10704, <i64 8, i64 8, i64 8, i64 8>
  %10720 = icmp eq i64 %10718, 32000
  br i1 %10720, label %15603, label %10702, !llvm.loop !193

10721:                                            ; preds = %10699
  %10722 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0)) #15
  %10723 = icmp eq i32 %10722, 0
  br i1 %10723, label %10724, label %10767

10724:                                            ; preds = %10721, %10724
  %10725 = phi i64 [ %10765, %10724 ], [ 0, %10721 ]
  %10726 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10725
  %10727 = bitcast float* %10726 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10727, align 16, !tbaa !2
  %10728 = getelementptr inbounds float, float* %10726, i64 4
  %10729 = bitcast float* %10728 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10729, align 16, !tbaa !2
  %10730 = or i64 %10725, 8
  %10731 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10730
  %10732 = bitcast float* %10731 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10732, align 16, !tbaa !2
  %10733 = getelementptr inbounds float, float* %10731, i64 4
  %10734 = bitcast float* %10733 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10734, align 16, !tbaa !2
  %10735 = or i64 %10725, 16
  %10736 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10735
  %10737 = bitcast float* %10736 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10737, align 16, !tbaa !2
  %10738 = getelementptr inbounds float, float* %10736, i64 4
  %10739 = bitcast float* %10738 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10739, align 16, !tbaa !2
  %10740 = or i64 %10725, 24
  %10741 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10740
  %10742 = bitcast float* %10741 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10742, align 16, !tbaa !2
  %10743 = getelementptr inbounds float, float* %10741, i64 4
  %10744 = bitcast float* %10743 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10744, align 16, !tbaa !2
  %10745 = or i64 %10725, 32
  %10746 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10745
  %10747 = bitcast float* %10746 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10747, align 16, !tbaa !2
  %10748 = getelementptr inbounds float, float* %10746, i64 4
  %10749 = bitcast float* %10748 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10749, align 16, !tbaa !2
  %10750 = or i64 %10725, 40
  %10751 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10750
  %10752 = bitcast float* %10751 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10752, align 16, !tbaa !2
  %10753 = getelementptr inbounds float, float* %10751, i64 4
  %10754 = bitcast float* %10753 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10754, align 16, !tbaa !2
  %10755 = or i64 %10725, 48
  %10756 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10755
  %10757 = bitcast float* %10756 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10757, align 16, !tbaa !2
  %10758 = getelementptr inbounds float, float* %10756, i64 4
  %10759 = bitcast float* %10758 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10759, align 16, !tbaa !2
  %10760 = or i64 %10725, 56
  %10761 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10760
  %10762 = bitcast float* %10761 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10762, align 16, !tbaa !2
  %10763 = getelementptr inbounds float, float* %10761, i64 4
  %10764 = bitcast float* %10763 to <4 x float>*
  store <4 x float> <float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000>, <4 x float>* %10764, align 16, !tbaa !2
  %10765 = add nuw nsw i64 %10725, 64
  %10766 = icmp eq i64 %10765, 32000
  br i1 %10766, label %15603, label %10724, !llvm.loop !194

10767:                                            ; preds = %10721
  %10768 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0)) #15
  %10769 = icmp eq i32 %10768, 0
  br i1 %10769, label %10770, label %10808

10770:                                            ; preds = %10767, %10770
  %10771 = phi i64 [ %10786, %10770 ], [ 0, %10767 ]
  %10772 = phi <4 x i64> [ %10787, %10770 ], [ <i64 0, i64 1, i64 2, i64 3>, %10767 ]
  %10773 = trunc <4 x i64> %10772 to <4 x i32>
  %10774 = add <4 x i32> %10773, <i32 1, i32 1, i32 1, i32 1>
  %10775 = sitofp <4 x i32> %10774 to <4 x float>
  %10776 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10775
  %10777 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10771
  %10778 = bitcast float* %10777 to <4 x float>*
  store <4 x float> %10776, <4 x float>* %10778, align 16, !tbaa !2
  %10779 = or i64 %10771, 4
  %10780 = trunc <4 x i64> %10772 to <4 x i32>
  %10781 = add <4 x i32> %10780, <i32 5, i32 5, i32 5, i32 5>
  %10782 = sitofp <4 x i32> %10781 to <4 x float>
  %10783 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10782
  %10784 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10779
  %10785 = bitcast float* %10784 to <4 x float>*
  store <4 x float> %10783, <4 x float>* %10785, align 16, !tbaa !2
  %10786 = add nuw nsw i64 %10771, 8
  %10787 = add <4 x i64> %10772, <i64 8, i64 8, i64 8, i64 8>
  %10788 = icmp eq i64 %10786, 32000
  br i1 %10788, label %10789, label %10770, !llvm.loop !195

10789:                                            ; preds = %10770, %10789
  %10790 = phi i64 [ %10805, %10789 ], [ 0, %10770 ]
  %10791 = phi <4 x i64> [ %10806, %10789 ], [ <i64 0, i64 1, i64 2, i64 3>, %10770 ]
  %10792 = trunc <4 x i64> %10791 to <4 x i32>
  %10793 = add <4 x i32> %10792, <i32 1, i32 1, i32 1, i32 1>
  %10794 = sitofp <4 x i32> %10793 to <4 x float>
  %10795 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10794
  %10796 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10790
  %10797 = bitcast float* %10796 to <4 x float>*
  store <4 x float> %10795, <4 x float>* %10797, align 16, !tbaa !2
  %10798 = or i64 %10790, 4
  %10799 = trunc <4 x i64> %10791 to <4 x i32>
  %10800 = add <4 x i32> %10799, <i32 5, i32 5, i32 5, i32 5>
  %10801 = sitofp <4 x i32> %10800 to <4 x float>
  %10802 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10801
  %10803 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10798
  %10804 = bitcast float* %10803 to <4 x float>*
  store <4 x float> %10802, <4 x float>* %10804, align 16, !tbaa !2
  %10805 = add nuw nsw i64 %10790, 8
  %10806 = add <4 x i64> %10791, <i64 8, i64 8, i64 8, i64 8>
  %10807 = icmp eq i64 %10805, 32000
  br i1 %10807, label %15603, label %10789, !llvm.loop !196

10808:                                            ; preds = %10767
  %10809 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0)) #15
  %10810 = icmp eq i32 %10809, 0
  br i1 %10810, label %10811, label %10830

10811:                                            ; preds = %10808, %10811
  %10812 = phi i64 [ %10827, %10811 ], [ 0, %10808 ]
  %10813 = phi <4 x i64> [ %10828, %10811 ], [ <i64 0, i64 1, i64 2, i64 3>, %10808 ]
  %10814 = trunc <4 x i64> %10813 to <4 x i32>
  %10815 = add <4 x i32> %10814, <i32 1, i32 1, i32 1, i32 1>
  %10816 = sitofp <4 x i32> %10815 to <4 x float>
  %10817 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10816
  %10818 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10812
  %10819 = bitcast float* %10818 to <4 x float>*
  store <4 x float> %10817, <4 x float>* %10819, align 16, !tbaa !2
  %10820 = or i64 %10812, 4
  %10821 = trunc <4 x i64> %10813 to <4 x i32>
  %10822 = add <4 x i32> %10821, <i32 5, i32 5, i32 5, i32 5>
  %10823 = sitofp <4 x i32> %10822 to <4 x float>
  %10824 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10823
  %10825 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10820
  %10826 = bitcast float* %10825 to <4 x float>*
  store <4 x float> %10824, <4 x float>* %10826, align 16, !tbaa !2
  %10827 = add nuw nsw i64 %10812, 8
  %10828 = add <4 x i64> %10813, <i64 8, i64 8, i64 8, i64 8>
  %10829 = icmp eq i64 %10827, 32000
  br i1 %10829, label %15603, label %10811, !llvm.loop !197

10830:                                            ; preds = %10808
  %10831 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0)) #15
  %10832 = icmp eq i32 %10831, 0
  br i1 %10832, label %10833, label %10852

10833:                                            ; preds = %10830, %10833
  %10834 = phi i64 [ %10849, %10833 ], [ 0, %10830 ]
  %10835 = phi <4 x i64> [ %10850, %10833 ], [ <i64 0, i64 1, i64 2, i64 3>, %10830 ]
  %10836 = trunc <4 x i64> %10835 to <4 x i32>
  %10837 = add <4 x i32> %10836, <i32 1, i32 1, i32 1, i32 1>
  %10838 = sitofp <4 x i32> %10837 to <4 x float>
  %10839 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10838
  %10840 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10834
  %10841 = bitcast float* %10840 to <4 x float>*
  store <4 x float> %10839, <4 x float>* %10841, align 16, !tbaa !2
  %10842 = or i64 %10834, 4
  %10843 = trunc <4 x i64> %10835 to <4 x i32>
  %10844 = add <4 x i32> %10843, <i32 5, i32 5, i32 5, i32 5>
  %10845 = sitofp <4 x i32> %10844 to <4 x float>
  %10846 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10845
  %10847 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10842
  %10848 = bitcast float* %10847 to <4 x float>*
  store <4 x float> %10846, <4 x float>* %10848, align 16, !tbaa !2
  %10849 = add nuw nsw i64 %10834, 8
  %10850 = add <4 x i64> %10835, <i64 8, i64 8, i64 8, i64 8>
  %10851 = icmp eq i64 %10849, 32000
  br i1 %10851, label %15603, label %10833, !llvm.loop !198

10852:                                            ; preds = %10830
  %10853 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0)) #15
  %10854 = icmp eq i32 %10853, 0
  br i1 %10854, label %10855, label %10874

10855:                                            ; preds = %10852, %10855
  %10856 = phi i64 [ %10871, %10855 ], [ 0, %10852 ]
  %10857 = phi <4 x i64> [ %10872, %10855 ], [ <i64 0, i64 1, i64 2, i64 3>, %10852 ]
  %10858 = trunc <4 x i64> %10857 to <4 x i32>
  %10859 = add <4 x i32> %10858, <i32 1, i32 1, i32 1, i32 1>
  %10860 = sitofp <4 x i32> %10859 to <4 x float>
  %10861 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10860
  %10862 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10856
  %10863 = bitcast float* %10862 to <4 x float>*
  store <4 x float> %10861, <4 x float>* %10863, align 16, !tbaa !2
  %10864 = or i64 %10856, 4
  %10865 = trunc <4 x i64> %10857 to <4 x i32>
  %10866 = add <4 x i32> %10865, <i32 5, i32 5, i32 5, i32 5>
  %10867 = sitofp <4 x i32> %10866 to <4 x float>
  %10868 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10867
  %10869 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10864
  %10870 = bitcast float* %10869 to <4 x float>*
  store <4 x float> %10868, <4 x float>* %10870, align 16, !tbaa !2
  %10871 = add nuw nsw i64 %10856, 8
  %10872 = add <4 x i64> %10857, <i64 8, i64 8, i64 8, i64 8>
  %10873 = icmp eq i64 %10871, 32000
  br i1 %10873, label %15603, label %10855, !llvm.loop !199

10874:                                            ; preds = %10852
  %10875 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0)) #15
  %10876 = icmp eq i32 %10875, 0
  br i1 %10876, label %15603, label %10877

10877:                                            ; preds = %10874
  %10878 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0)) #15
  %10879 = icmp eq i32 %10878, 0
  br i1 %10879, label %10880, label %10900

10880:                                            ; preds = %10877, %10880
  %10881 = phi i64 [ %10896, %10880 ], [ 0, %10877 ]
  %10882 = phi <4 x i64> [ %10897, %10880 ], [ <i64 0, i64 1, i64 2, i64 3>, %10877 ]
  %10883 = trunc <4 x i64> %10882 to <4 x i32>
  %10884 = add <4 x i32> %10883, <i32 1, i32 1, i32 1, i32 1>
  %10885 = sitofp <4 x i32> %10884 to <4 x float>
  %10886 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10885
  %10887 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10881
  %10888 = bitcast float* %10887 to <4 x float>*
  store <4 x float> %10886, <4 x float>* %10888, align 16, !tbaa !2
  %10889 = or i64 %10881, 4
  %10890 = trunc <4 x i64> %10882 to <4 x i32>
  %10891 = add <4 x i32> %10890, <i32 5, i32 5, i32 5, i32 5>
  %10892 = sitofp <4 x i32> %10891 to <4 x float>
  %10893 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10892
  %10894 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10889
  %10895 = bitcast float* %10894 to <4 x float>*
  store <4 x float> %10893, <4 x float>* %10895, align 16, !tbaa !2
  %10896 = add nuw nsw i64 %10881, 8
  %10897 = add <4 x i64> %10882, <i64 8, i64 8, i64 8, i64 8>
  %10898 = icmp eq i64 %10896, 32000
  br i1 %10898, label %10899, label %10880, !llvm.loop !200

10899:                                            ; preds = %10880
  store float -2.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  br label %15603

10900:                                            ; preds = %10877
  %10901 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0)) #15
  %10902 = icmp eq i32 %10901, 0
  br i1 %10902, label %10903, label %10961

10903:                                            ; preds = %10900
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %10904

10904:                                            ; preds = %10904, %10903
  %10905 = phi i64 [ 0, %10903 ], [ %10920, %10904 ]
  %10906 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %10903 ], [ %10921, %10904 ]
  %10907 = trunc <4 x i64> %10906 to <4 x i32>
  %10908 = add <4 x i32> %10907, <i32 1, i32 1, i32 1, i32 1>
  %10909 = sitofp <4 x i32> %10908 to <4 x float>
  %10910 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10909
  %10911 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10905
  %10912 = bitcast float* %10911 to <4 x float>*
  store <4 x float> %10910, <4 x float>* %10912, align 16, !tbaa !2
  %10913 = or i64 %10905, 4
  %10914 = trunc <4 x i64> %10906 to <4 x i32>
  %10915 = add <4 x i32> %10914, <i32 5, i32 5, i32 5, i32 5>
  %10916 = sitofp <4 x i32> %10915 to <4 x float>
  %10917 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10916
  %10918 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %10913
  %10919 = bitcast float* %10918 to <4 x float>*
  store <4 x float> %10917, <4 x float>* %10919, align 16, !tbaa !2
  %10920 = add nuw nsw i64 %10905, 8
  %10921 = add <4 x i64> %10906, <i64 8, i64 8, i64 8, i64 8>
  %10922 = icmp eq i64 %10920, 32000
  br i1 %10922, label %10923, label %10904, !llvm.loop !201

10923:                                            ; preds = %10904, %10923
  %10924 = phi i64 [ %10939, %10923 ], [ 0, %10904 ]
  %10925 = phi <4 x i64> [ %10940, %10923 ], [ <i64 0, i64 1, i64 2, i64 3>, %10904 ]
  %10926 = trunc <4 x i64> %10925 to <4 x i32>
  %10927 = add <4 x i32> %10926, <i32 1, i32 1, i32 1, i32 1>
  %10928 = sitofp <4 x i32> %10927 to <4 x float>
  %10929 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10928
  %10930 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %10924
  %10931 = bitcast float* %10930 to <4 x float>*
  store <4 x float> %10929, <4 x float>* %10931, align 16, !tbaa !2
  %10932 = or i64 %10924, 4
  %10933 = trunc <4 x i64> %10925 to <4 x i32>
  %10934 = add <4 x i32> %10933, <i32 5, i32 5, i32 5, i32 5>
  %10935 = sitofp <4 x i32> %10934 to <4 x float>
  %10936 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10935
  %10937 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %10932
  %10938 = bitcast float* %10937 to <4 x float>*
  store <4 x float> %10936, <4 x float>* %10938, align 16, !tbaa !2
  %10939 = add nuw nsw i64 %10924, 8
  %10940 = add <4 x i64> %10925, <i64 8, i64 8, i64 8, i64 8>
  %10941 = icmp eq i64 %10939, 32000
  br i1 %10941, label %10942, label %10923, !llvm.loop !202

10942:                                            ; preds = %10923, %10942
  %10943 = phi i64 [ %10958, %10942 ], [ 0, %10923 ]
  %10944 = phi <4 x i64> [ %10959, %10942 ], [ <i64 0, i64 1, i64 2, i64 3>, %10923 ]
  %10945 = trunc <4 x i64> %10944 to <4 x i32>
  %10946 = add <4 x i32> %10945, <i32 1, i32 1, i32 1, i32 1>
  %10947 = sitofp <4 x i32> %10946 to <4 x float>
  %10948 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10947
  %10949 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %10943
  %10950 = bitcast float* %10949 to <4 x float>*
  store <4 x float> %10948, <4 x float>* %10950, align 16, !tbaa !2
  %10951 = or i64 %10943, 4
  %10952 = trunc <4 x i64> %10944 to <4 x i32>
  %10953 = add <4 x i32> %10952, <i32 5, i32 5, i32 5, i32 5>
  %10954 = sitofp <4 x i32> %10953 to <4 x float>
  %10955 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10954
  %10956 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %10951
  %10957 = bitcast float* %10956 to <4 x float>*
  store <4 x float> %10955, <4 x float>* %10957, align 16, !tbaa !2
  %10958 = add nuw nsw i64 %10943, 8
  %10959 = add <4 x i64> %10944, <i64 8, i64 8, i64 8, i64 8>
  %10960 = icmp eq i64 %10958, 32000
  br i1 %10960, label %15603, label %10942, !llvm.loop !203

10961:                                            ; preds = %10900
  %10962 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0)) #15
  %10963 = icmp eq i32 %10962, 0
  br i1 %10963, label %10964, label %11104

10964:                                            ; preds = %10961, %10964
  %10965 = phi i64 [ %10966, %10964 ], [ 0, %10961 ]
  %10966 = add nuw nsw i64 %10965, 1
  %10967 = trunc i64 %10966 to i32
  %10968 = sitofp i32 %10967 to float
  %10969 = fdiv float 1.000000e+00, %10968
  %10970 = insertelement <4 x float> undef, float %10969, i32 0
  %10971 = shufflevector <4 x float> %10970, <4 x float> undef, <4 x i32> zeroinitializer
  %10972 = insertelement <4 x float> undef, float %10969, i32 0
  %10973 = shufflevector <4 x float> %10972, <4 x float> undef, <4 x i32> zeroinitializer
  %10974 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 0
  %10975 = bitcast float* %10974 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %10975, align 16, !tbaa !2
  %10976 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 4
  %10977 = bitcast float* %10976 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %10977, align 16, !tbaa !2
  %10978 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 8
  %10979 = bitcast float* %10978 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %10979, align 16, !tbaa !2
  %10980 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 12
  %10981 = bitcast float* %10980 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %10981, align 16, !tbaa !2
  %10982 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 16
  %10983 = bitcast float* %10982 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %10983, align 16, !tbaa !2
  %10984 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 20
  %10985 = bitcast float* %10984 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %10985, align 16, !tbaa !2
  %10986 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 24
  %10987 = bitcast float* %10986 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %10987, align 16, !tbaa !2
  %10988 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 28
  %10989 = bitcast float* %10988 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %10989, align 16, !tbaa !2
  %10990 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 32
  %10991 = bitcast float* %10990 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %10991, align 16, !tbaa !2
  %10992 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 36
  %10993 = bitcast float* %10992 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %10993, align 16, !tbaa !2
  %10994 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 40
  %10995 = bitcast float* %10994 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %10995, align 16, !tbaa !2
  %10996 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 44
  %10997 = bitcast float* %10996 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %10997, align 16, !tbaa !2
  %10998 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 48
  %10999 = bitcast float* %10998 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %10999, align 16, !tbaa !2
  %11000 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 52
  %11001 = bitcast float* %11000 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11001, align 16, !tbaa !2
  %11002 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 56
  %11003 = bitcast float* %11002 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11003, align 16, !tbaa !2
  %11004 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 60
  %11005 = bitcast float* %11004 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11005, align 16, !tbaa !2
  %11006 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 64
  %11007 = bitcast float* %11006 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11007, align 16, !tbaa !2
  %11008 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 68
  %11009 = bitcast float* %11008 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11009, align 16, !tbaa !2
  %11010 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 72
  %11011 = bitcast float* %11010 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11011, align 16, !tbaa !2
  %11012 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 76
  %11013 = bitcast float* %11012 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11013, align 16, !tbaa !2
  %11014 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 80
  %11015 = bitcast float* %11014 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11015, align 16, !tbaa !2
  %11016 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 84
  %11017 = bitcast float* %11016 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11017, align 16, !tbaa !2
  %11018 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 88
  %11019 = bitcast float* %11018 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11019, align 16, !tbaa !2
  %11020 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 92
  %11021 = bitcast float* %11020 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11021, align 16, !tbaa !2
  %11022 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 96
  %11023 = bitcast float* %11022 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11023, align 16, !tbaa !2
  %11024 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 100
  %11025 = bitcast float* %11024 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11025, align 16, !tbaa !2
  %11026 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 104
  %11027 = bitcast float* %11026 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11027, align 16, !tbaa !2
  %11028 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 108
  %11029 = bitcast float* %11028 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11029, align 16, !tbaa !2
  %11030 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 112
  %11031 = bitcast float* %11030 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11031, align 16, !tbaa !2
  %11032 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 116
  %11033 = bitcast float* %11032 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11033, align 16, !tbaa !2
  %11034 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 120
  %11035 = bitcast float* %11034 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11035, align 16, !tbaa !2
  %11036 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 124
  %11037 = bitcast float* %11036 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11037, align 16, !tbaa !2
  %11038 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 128
  %11039 = bitcast float* %11038 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11039, align 16, !tbaa !2
  %11040 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 132
  %11041 = bitcast float* %11040 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11041, align 16, !tbaa !2
  %11042 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 136
  %11043 = bitcast float* %11042 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11043, align 16, !tbaa !2
  %11044 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 140
  %11045 = bitcast float* %11044 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11045, align 16, !tbaa !2
  %11046 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 144
  %11047 = bitcast float* %11046 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11047, align 16, !tbaa !2
  %11048 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 148
  %11049 = bitcast float* %11048 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11049, align 16, !tbaa !2
  %11050 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 152
  %11051 = bitcast float* %11050 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11051, align 16, !tbaa !2
  %11052 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 156
  %11053 = bitcast float* %11052 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11053, align 16, !tbaa !2
  %11054 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 160
  %11055 = bitcast float* %11054 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11055, align 16, !tbaa !2
  %11056 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 164
  %11057 = bitcast float* %11056 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11057, align 16, !tbaa !2
  %11058 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 168
  %11059 = bitcast float* %11058 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11059, align 16, !tbaa !2
  %11060 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 172
  %11061 = bitcast float* %11060 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11061, align 16, !tbaa !2
  %11062 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 176
  %11063 = bitcast float* %11062 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11063, align 16, !tbaa !2
  %11064 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 180
  %11065 = bitcast float* %11064 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11065, align 16, !tbaa !2
  %11066 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 184
  %11067 = bitcast float* %11066 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11067, align 16, !tbaa !2
  %11068 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 188
  %11069 = bitcast float* %11068 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11069, align 16, !tbaa !2
  %11070 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 192
  %11071 = bitcast float* %11070 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11071, align 16, !tbaa !2
  %11072 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 196
  %11073 = bitcast float* %11072 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11073, align 16, !tbaa !2
  %11074 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 200
  %11075 = bitcast float* %11074 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11075, align 16, !tbaa !2
  %11076 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 204
  %11077 = bitcast float* %11076 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11077, align 16, !tbaa !2
  %11078 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 208
  %11079 = bitcast float* %11078 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11079, align 16, !tbaa !2
  %11080 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 212
  %11081 = bitcast float* %11080 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11081, align 16, !tbaa !2
  %11082 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 216
  %11083 = bitcast float* %11082 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11083, align 16, !tbaa !2
  %11084 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 220
  %11085 = bitcast float* %11084 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11085, align 16, !tbaa !2
  %11086 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 224
  %11087 = bitcast float* %11086 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11087, align 16, !tbaa !2
  %11088 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 228
  %11089 = bitcast float* %11088 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11089, align 16, !tbaa !2
  %11090 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 232
  %11091 = bitcast float* %11090 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11091, align 16, !tbaa !2
  %11092 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 236
  %11093 = bitcast float* %11092 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11093, align 16, !tbaa !2
  %11094 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 240
  %11095 = bitcast float* %11094 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11095, align 16, !tbaa !2
  %11096 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 244
  %11097 = bitcast float* %11096 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11097, align 16, !tbaa !2
  %11098 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 248
  %11099 = bitcast float* %11098 to <4 x float>*
  store <4 x float> %10971, <4 x float>* %11099, align 16, !tbaa !2
  %11100 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %10965, i64 252
  %11101 = bitcast float* %11100 to <4 x float>*
  store <4 x float> %10973, <4 x float>* %11101, align 16, !tbaa !2
  %11102 = icmp eq i64 %10966, 256
  br i1 %11102, label %11103, label %10964

11103:                                            ; preds = %10964
  store float 2.000000e+00, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 255, i64 255), align 4, !tbaa !2
  br label %15603

11104:                                            ; preds = %10961
  %11105 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0)) #15
  %11106 = icmp eq i32 %11105, 0
  br i1 %11106, label %11107, label %11126

11107:                                            ; preds = %11104, %11107
  %11108 = phi i64 [ %11123, %11107 ], [ 0, %11104 ]
  %11109 = phi <4 x i64> [ %11124, %11107 ], [ <i64 0, i64 1, i64 2, i64 3>, %11104 ]
  %11110 = trunc <4 x i64> %11109 to <4 x i32>
  %11111 = add <4 x i32> %11110, <i32 1, i32 1, i32 1, i32 1>
  %11112 = sitofp <4 x i32> %11111 to <4 x float>
  %11113 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11112
  %11114 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11108
  %11115 = bitcast float* %11114 to <4 x float>*
  store <4 x float> %11113, <4 x float>* %11115, align 16, !tbaa !2
  %11116 = or i64 %11108, 4
  %11117 = trunc <4 x i64> %11109 to <4 x i32>
  %11118 = add <4 x i32> %11117, <i32 5, i32 5, i32 5, i32 5>
  %11119 = sitofp <4 x i32> %11118 to <4 x float>
  %11120 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11119
  %11121 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11116
  %11122 = bitcast float* %11121 to <4 x float>*
  store <4 x float> %11120, <4 x float>* %11122, align 16, !tbaa !2
  %11123 = add nuw nsw i64 %11108, 8
  %11124 = add <4 x i64> %11109, <i64 8, i64 8, i64 8, i64 8>
  %11125 = icmp eq i64 %11123, 32000
  br i1 %11125, label %15603, label %11107, !llvm.loop !204

11126:                                            ; preds = %11104
  %11127 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #15
  %11128 = icmp eq i32 %11127, 0
  br i1 %11128, label %11129, label %11151

11129:                                            ; preds = %11126, %11129
  %11130 = phi i64 [ %11147, %11129 ], [ 0, %11126 ]
  %11131 = phi <4 x i64> [ %11148, %11129 ], [ <i64 0, i64 1, i64 2, i64 3>, %11126 ]
  %11132 = add nuw nsw <4 x i64> %11131, <i64 1, i64 1, i64 1, i64 1>
  %11133 = mul nuw nsw <4 x i64> %11132, %11132
  %11134 = trunc <4 x i64> %11133 to <4 x i32>
  %11135 = sitofp <4 x i32> %11134 to <4 x float>
  %11136 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11135
  %11137 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11130
  %11138 = bitcast float* %11137 to <4 x float>*
  store <4 x float> %11136, <4 x float>* %11138, align 16, !tbaa !2
  %11139 = or i64 %11130, 4
  %11140 = add <4 x i64> %11131, <i64 5, i64 5, i64 5, i64 5>
  %11141 = mul nuw nsw <4 x i64> %11140, %11140
  %11142 = trunc <4 x i64> %11141 to <4 x i32>
  %11143 = sitofp <4 x i32> %11142 to <4 x float>
  %11144 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11143
  %11145 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11139
  %11146 = bitcast float* %11145 to <4 x float>*
  store <4 x float> %11144, <4 x float>* %11146, align 16, !tbaa !2
  %11147 = add nuw nsw i64 %11130, 8
  %11148 = add <4 x i64> %11131, <i64 8, i64 8, i64 8, i64 8>
  %11149 = icmp eq i64 %11147, 32000
  br i1 %11149, label %11150, label %11129, !llvm.loop !205

11150:                                            ; preds = %11129
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %15603

11151:                                            ; preds = %11126
  %11152 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0)) #15
  %11153 = icmp eq i32 %11152, 0
  br i1 %11153, label %11154, label %11174

11154:                                            ; preds = %11151, %11154
  %11155 = phi i64 [ %11170, %11154 ], [ 0, %11151 ]
  %11156 = phi <4 x i64> [ %11171, %11154 ], [ <i64 0, i64 1, i64 2, i64 3>, %11151 ]
  %11157 = trunc <4 x i64> %11156 to <4 x i32>
  %11158 = add <4 x i32> %11157, <i32 1, i32 1, i32 1, i32 1>
  %11159 = sitofp <4 x i32> %11158 to <4 x float>
  %11160 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11159
  %11161 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11155
  %11162 = bitcast float* %11161 to <4 x float>*
  store <4 x float> %11160, <4 x float>* %11162, align 16, !tbaa !2
  %11163 = or i64 %11155, 4
  %11164 = trunc <4 x i64> %11156 to <4 x i32>
  %11165 = add <4 x i32> %11164, <i32 5, i32 5, i32 5, i32 5>
  %11166 = sitofp <4 x i32> %11165 to <4 x float>
  %11167 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11166
  %11168 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11163
  %11169 = bitcast float* %11168 to <4 x float>*
  store <4 x float> %11167, <4 x float>* %11169, align 16, !tbaa !2
  %11170 = add nuw nsw i64 %11155, 8
  %11171 = add <4 x i64> %11156, <i64 8, i64 8, i64 8, i64 8>
  %11172 = icmp eq i64 %11170, 32000
  br i1 %11172, label %11173, label %11154, !llvm.loop !206

11173:                                            ; preds = %11154
  store float -2.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  br label %15603

11174:                                            ; preds = %11151
  %11175 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0)) #15
  %11176 = icmp eq i32 %11175, 0
  br i1 %11176, label %11177, label %11221

11177:                                            ; preds = %11174, %11177
  %11178 = phi i64 [ %11218, %11177 ], [ 0, %11174 ]
  %11179 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11178
  %11180 = bitcast float* %11179 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11180, align 16, !tbaa !2
  %11181 = getelementptr inbounds float, float* %11179, i64 4
  %11182 = bitcast float* %11181 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11182, align 16, !tbaa !2
  %11183 = or i64 %11178, 8
  %11184 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11183
  %11185 = bitcast float* %11184 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11185, align 16, !tbaa !2
  %11186 = getelementptr inbounds float, float* %11184, i64 4
  %11187 = bitcast float* %11186 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11187, align 16, !tbaa !2
  %11188 = or i64 %11178, 16
  %11189 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11188
  %11190 = bitcast float* %11189 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11190, align 16, !tbaa !2
  %11191 = getelementptr inbounds float, float* %11189, i64 4
  %11192 = bitcast float* %11191 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11192, align 16, !tbaa !2
  %11193 = or i64 %11178, 24
  %11194 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11193
  %11195 = bitcast float* %11194 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11195, align 16, !tbaa !2
  %11196 = getelementptr inbounds float, float* %11194, i64 4
  %11197 = bitcast float* %11196 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11197, align 16, !tbaa !2
  %11198 = or i64 %11178, 32
  %11199 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11198
  %11200 = bitcast float* %11199 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11200, align 16, !tbaa !2
  %11201 = getelementptr inbounds float, float* %11199, i64 4
  %11202 = bitcast float* %11201 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11202, align 16, !tbaa !2
  %11203 = or i64 %11178, 40
  %11204 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11203
  %11205 = bitcast float* %11204 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11205, align 16, !tbaa !2
  %11206 = getelementptr inbounds float, float* %11204, i64 4
  %11207 = bitcast float* %11206 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11207, align 16, !tbaa !2
  %11208 = or i64 %11178, 48
  %11209 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11208
  %11210 = bitcast float* %11209 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11210, align 16, !tbaa !2
  %11211 = getelementptr inbounds float, float* %11209, i64 4
  %11212 = bitcast float* %11211 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11212, align 16, !tbaa !2
  %11213 = or i64 %11178, 56
  %11214 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11213
  %11215 = bitcast float* %11214 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11215, align 16, !tbaa !2
  %11216 = getelementptr inbounds float, float* %11214, i64 4
  %11217 = bitcast float* %11216 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11217, align 16, !tbaa !2
  %11218 = add nuw nsw i64 %11178, 64
  %11219 = icmp eq i64 %11218, 32000
  br i1 %11219, label %11220, label %11177, !llvm.loop !207

11220:                                            ; preds = %11177
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %15603

11221:                                            ; preds = %11174
  %11222 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #15
  %11223 = icmp eq i32 %11222, 0
  br i1 %11223, label %11224, label %11268

11224:                                            ; preds = %11221, %11224
  %11225 = phi i64 [ %11265, %11224 ], [ 0, %11221 ]
  %11226 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11225
  %11227 = bitcast float* %11226 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11227, align 16, !tbaa !2
  %11228 = getelementptr inbounds float, float* %11226, i64 4
  %11229 = bitcast float* %11228 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11229, align 16, !tbaa !2
  %11230 = or i64 %11225, 8
  %11231 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11230
  %11232 = bitcast float* %11231 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11232, align 16, !tbaa !2
  %11233 = getelementptr inbounds float, float* %11231, i64 4
  %11234 = bitcast float* %11233 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11234, align 16, !tbaa !2
  %11235 = or i64 %11225, 16
  %11236 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11235
  %11237 = bitcast float* %11236 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11237, align 16, !tbaa !2
  %11238 = getelementptr inbounds float, float* %11236, i64 4
  %11239 = bitcast float* %11238 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11239, align 16, !tbaa !2
  %11240 = or i64 %11225, 24
  %11241 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11240
  %11242 = bitcast float* %11241 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11242, align 16, !tbaa !2
  %11243 = getelementptr inbounds float, float* %11241, i64 4
  %11244 = bitcast float* %11243 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11244, align 16, !tbaa !2
  %11245 = or i64 %11225, 32
  %11246 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11245
  %11247 = bitcast float* %11246 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11247, align 16, !tbaa !2
  %11248 = getelementptr inbounds float, float* %11246, i64 4
  %11249 = bitcast float* %11248 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11249, align 16, !tbaa !2
  %11250 = or i64 %11225, 40
  %11251 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11250
  %11252 = bitcast float* %11251 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11252, align 16, !tbaa !2
  %11253 = getelementptr inbounds float, float* %11251, i64 4
  %11254 = bitcast float* %11253 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11254, align 16, !tbaa !2
  %11255 = or i64 %11225, 48
  %11256 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11255
  %11257 = bitcast float* %11256 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11257, align 16, !tbaa !2
  %11258 = getelementptr inbounds float, float* %11256, i64 4
  %11259 = bitcast float* %11258 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11259, align 16, !tbaa !2
  %11260 = or i64 %11225, 56
  %11261 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11260
  %11262 = bitcast float* %11261 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11262, align 16, !tbaa !2
  %11263 = getelementptr inbounds float, float* %11261, i64 4
  %11264 = bitcast float* %11263 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11264, align 16, !tbaa !2
  %11265 = add nuw nsw i64 %11225, 64
  %11266 = icmp eq i64 %11265, 32000
  br i1 %11266, label %11267, label %11224, !llvm.loop !208

11267:                                            ; preds = %11224
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @c to i8*), i8 0, i64 128000, i1 false)
  br label %15603

11268:                                            ; preds = %11221
  %11269 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i64 0, i64 0)) #15
  %11270 = icmp eq i32 %11269, 0
  br i1 %11270, label %11271, label %11414

11271:                                            ; preds = %11268, %11271
  %11272 = phi i64 [ %11312, %11271 ], [ 0, %11268 ]
  %11273 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11272
  %11274 = bitcast float* %11273 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11274, align 16, !tbaa !2
  %11275 = getelementptr inbounds float, float* %11273, i64 4
  %11276 = bitcast float* %11275 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11276, align 16, !tbaa !2
  %11277 = or i64 %11272, 8
  %11278 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11277
  %11279 = bitcast float* %11278 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11279, align 16, !tbaa !2
  %11280 = getelementptr inbounds float, float* %11278, i64 4
  %11281 = bitcast float* %11280 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11281, align 16, !tbaa !2
  %11282 = or i64 %11272, 16
  %11283 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11282
  %11284 = bitcast float* %11283 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11284, align 16, !tbaa !2
  %11285 = getelementptr inbounds float, float* %11283, i64 4
  %11286 = bitcast float* %11285 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11286, align 16, !tbaa !2
  %11287 = or i64 %11272, 24
  %11288 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11287
  %11289 = bitcast float* %11288 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11289, align 16, !tbaa !2
  %11290 = getelementptr inbounds float, float* %11288, i64 4
  %11291 = bitcast float* %11290 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11291, align 16, !tbaa !2
  %11292 = or i64 %11272, 32
  %11293 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11292
  %11294 = bitcast float* %11293 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11294, align 16, !tbaa !2
  %11295 = getelementptr inbounds float, float* %11293, i64 4
  %11296 = bitcast float* %11295 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11296, align 16, !tbaa !2
  %11297 = or i64 %11272, 40
  %11298 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11297
  %11299 = bitcast float* %11298 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11299, align 16, !tbaa !2
  %11300 = getelementptr inbounds float, float* %11298, i64 4
  %11301 = bitcast float* %11300 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11301, align 16, !tbaa !2
  %11302 = or i64 %11272, 48
  %11303 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11302
  %11304 = bitcast float* %11303 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11304, align 16, !tbaa !2
  %11305 = getelementptr inbounds float, float* %11303, i64 4
  %11306 = bitcast float* %11305 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11306, align 16, !tbaa !2
  %11307 = or i64 %11272, 56
  %11308 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11307
  %11309 = bitcast float* %11308 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11309, align 16, !tbaa !2
  %11310 = getelementptr inbounds float, float* %11308, i64 4
  %11311 = bitcast float* %11310 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11311, align 16, !tbaa !2
  %11312 = add nuw nsw i64 %11272, 64
  %11313 = icmp eq i64 %11312, 32000
  br i1 %11313, label %11314, label %11271, !llvm.loop !209

11314:                                            ; preds = %11271, %11314
  %11315 = phi i64 [ %11355, %11314 ], [ 0, %11271 ]
  %11316 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11315
  %11317 = bitcast float* %11316 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11317, align 16, !tbaa !2
  %11318 = getelementptr inbounds float, float* %11316, i64 4
  %11319 = bitcast float* %11318 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11319, align 16, !tbaa !2
  %11320 = or i64 %11315, 8
  %11321 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11320
  %11322 = bitcast float* %11321 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11322, align 16, !tbaa !2
  %11323 = getelementptr inbounds float, float* %11321, i64 4
  %11324 = bitcast float* %11323 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11324, align 16, !tbaa !2
  %11325 = or i64 %11315, 16
  %11326 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11325
  %11327 = bitcast float* %11326 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11327, align 16, !tbaa !2
  %11328 = getelementptr inbounds float, float* %11326, i64 4
  %11329 = bitcast float* %11328 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11329, align 16, !tbaa !2
  %11330 = or i64 %11315, 24
  %11331 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11330
  %11332 = bitcast float* %11331 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11332, align 16, !tbaa !2
  %11333 = getelementptr inbounds float, float* %11331, i64 4
  %11334 = bitcast float* %11333 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11334, align 16, !tbaa !2
  %11335 = or i64 %11315, 32
  %11336 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11335
  %11337 = bitcast float* %11336 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11337, align 16, !tbaa !2
  %11338 = getelementptr inbounds float, float* %11336, i64 4
  %11339 = bitcast float* %11338 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11339, align 16, !tbaa !2
  %11340 = or i64 %11315, 40
  %11341 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11340
  %11342 = bitcast float* %11341 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11342, align 16, !tbaa !2
  %11343 = getelementptr inbounds float, float* %11341, i64 4
  %11344 = bitcast float* %11343 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11344, align 16, !tbaa !2
  %11345 = or i64 %11315, 48
  %11346 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11345
  %11347 = bitcast float* %11346 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11347, align 16, !tbaa !2
  %11348 = getelementptr inbounds float, float* %11346, i64 4
  %11349 = bitcast float* %11348 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11349, align 16, !tbaa !2
  %11350 = or i64 %11315, 56
  %11351 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11350
  %11352 = bitcast float* %11351 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11352, align 16, !tbaa !2
  %11353 = getelementptr inbounds float, float* %11351, i64 4
  %11354 = bitcast float* %11353 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11354, align 16, !tbaa !2
  %11355 = add nuw nsw i64 %11315, 64
  %11356 = icmp eq i64 %11355, 32000
  br i1 %11356, label %11357, label %11314, !llvm.loop !210

11357:                                            ; preds = %11314, %11357
  %11358 = phi i64 [ %11373, %11357 ], [ 0, %11314 ]
  %11359 = phi <4 x i64> [ %11374, %11357 ], [ <i64 0, i64 1, i64 2, i64 3>, %11314 ]
  %11360 = trunc <4 x i64> %11359 to <4 x i32>
  %11361 = add <4 x i32> %11360, <i32 1, i32 1, i32 1, i32 1>
  %11362 = sitofp <4 x i32> %11361 to <4 x float>
  %11363 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11362
  %11364 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %11358
  %11365 = bitcast float* %11364 to <4 x float>*
  store <4 x float> %11363, <4 x float>* %11365, align 16, !tbaa !2
  %11366 = or i64 %11358, 4
  %11367 = trunc <4 x i64> %11359 to <4 x i32>
  %11368 = add <4 x i32> %11367, <i32 5, i32 5, i32 5, i32 5>
  %11369 = sitofp <4 x i32> %11368 to <4 x float>
  %11370 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11369
  %11371 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %11366
  %11372 = bitcast float* %11371 to <4 x float>*
  store <4 x float> %11370, <4 x float>* %11372, align 16, !tbaa !2
  %11373 = add nuw nsw i64 %11358, 8
  %11374 = add <4 x i64> %11359, <i64 8, i64 8, i64 8, i64 8>
  %11375 = icmp eq i64 %11373, 32000
  br i1 %11375, label %11376, label %11357, !llvm.loop !211

11376:                                            ; preds = %11357, %11376
  %11377 = phi i64 [ %11392, %11376 ], [ 0, %11357 ]
  %11378 = phi <4 x i64> [ %11393, %11376 ], [ <i64 0, i64 1, i64 2, i64 3>, %11357 ]
  %11379 = trunc <4 x i64> %11378 to <4 x i32>
  %11380 = add <4 x i32> %11379, <i32 1, i32 1, i32 1, i32 1>
  %11381 = sitofp <4 x i32> %11380 to <4 x float>
  %11382 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11381
  %11383 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %11377
  %11384 = bitcast float* %11383 to <4 x float>*
  store <4 x float> %11382, <4 x float>* %11384, align 16, !tbaa !2
  %11385 = or i64 %11377, 4
  %11386 = trunc <4 x i64> %11378 to <4 x i32>
  %11387 = add <4 x i32> %11386, <i32 5, i32 5, i32 5, i32 5>
  %11388 = sitofp <4 x i32> %11387 to <4 x float>
  %11389 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11388
  %11390 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %11385
  %11391 = bitcast float* %11390 to <4 x float>*
  store <4 x float> %11389, <4 x float>* %11391, align 16, !tbaa !2
  %11392 = add nuw nsw i64 %11377, 8
  %11393 = add <4 x i64> %11378, <i64 8, i64 8, i64 8, i64 8>
  %11394 = icmp eq i64 %11392, 32000
  br i1 %11394, label %11395, label %11376, !llvm.loop !212

11395:                                            ; preds = %11376, %11395
  %11396 = phi i64 [ %11411, %11395 ], [ 0, %11376 ]
  %11397 = phi <4 x i64> [ %11412, %11395 ], [ <i64 0, i64 1, i64 2, i64 3>, %11376 ]
  %11398 = trunc <4 x i64> %11397 to <4 x i32>
  %11399 = add <4 x i32> %11398, <i32 1, i32 1, i32 1, i32 1>
  %11400 = sitofp <4 x i32> %11399 to <4 x float>
  %11401 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11400
  %11402 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %11396
  %11403 = bitcast float* %11402 to <4 x float>*
  store <4 x float> %11401, <4 x float>* %11403, align 16, !tbaa !2
  %11404 = or i64 %11396, 4
  %11405 = trunc <4 x i64> %11397 to <4 x i32>
  %11406 = add <4 x i32> %11405, <i32 5, i32 5, i32 5, i32 5>
  %11407 = sitofp <4 x i32> %11406 to <4 x float>
  %11408 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11407
  %11409 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %11404
  %11410 = bitcast float* %11409 to <4 x float>*
  store <4 x float> %11408, <4 x float>* %11410, align 16, !tbaa !2
  %11411 = add nuw nsw i64 %11396, 8
  %11412 = add <4 x i64> %11397, <i64 8, i64 8, i64 8, i64 8>
  %11413 = icmp eq i64 %11411, 32000
  br i1 %11413, label %15603, label %11395, !llvm.loop !213

11414:                                            ; preds = %11268
  %11415 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0)) #15
  %11416 = icmp eq i32 %11415, 0
  br i1 %11416, label %11417, label %11437

11417:                                            ; preds = %11414, %11417
  %11418 = phi i64 [ %11433, %11417 ], [ 0, %11414 ]
  %11419 = phi <4 x i64> [ %11434, %11417 ], [ <i64 0, i64 1, i64 2, i64 3>, %11414 ]
  %11420 = trunc <4 x i64> %11419 to <4 x i32>
  %11421 = add <4 x i32> %11420, <i32 1, i32 1, i32 1, i32 1>
  %11422 = sitofp <4 x i32> %11421 to <4 x float>
  %11423 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11422
  %11424 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11418
  %11425 = bitcast float* %11424 to <4 x float>*
  store <4 x float> %11423, <4 x float>* %11425, align 16, !tbaa !2
  %11426 = or i64 %11418, 4
  %11427 = trunc <4 x i64> %11419 to <4 x i32>
  %11428 = add <4 x i32> %11427, <i32 5, i32 5, i32 5, i32 5>
  %11429 = sitofp <4 x i32> %11428 to <4 x float>
  %11430 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11429
  %11431 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11426
  %11432 = bitcast float* %11431 to <4 x float>*
  store <4 x float> %11430, <4 x float>* %11432, align 16, !tbaa !2
  %11433 = add nuw nsw i64 %11418, 8
  %11434 = add <4 x i64> %11419, <i64 8, i64 8, i64 8, i64 8>
  %11435 = icmp eq i64 %11433, 32000
  br i1 %11435, label %11436, label %11417, !llvm.loop !214

11436:                                            ; preds = %11417
  store float -1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  br label %15603

11437:                                            ; preds = %11414
  %11438 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0)) #15
  %11439 = icmp eq i32 %11438, 0
  br i1 %11439, label %11440, label %11462

11440:                                            ; preds = %11437, %11440
  %11441 = phi i64 [ %11458, %11440 ], [ 0, %11437 ]
  %11442 = phi <4 x i64> [ %11459, %11440 ], [ <i64 0, i64 1, i64 2, i64 3>, %11437 ]
  %11443 = add nuw nsw <4 x i64> %11442, <i64 1, i64 1, i64 1, i64 1>
  %11444 = mul nuw nsw <4 x i64> %11443, %11443
  %11445 = trunc <4 x i64> %11444 to <4 x i32>
  %11446 = sitofp <4 x i32> %11445 to <4 x float>
  %11447 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11446
  %11448 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11441
  %11449 = bitcast float* %11448 to <4 x float>*
  store <4 x float> %11447, <4 x float>* %11449, align 16, !tbaa !2
  %11450 = or i64 %11441, 4
  %11451 = add <4 x i64> %11442, <i64 5, i64 5, i64 5, i64 5>
  %11452 = mul nuw nsw <4 x i64> %11451, %11451
  %11453 = trunc <4 x i64> %11452 to <4 x i32>
  %11454 = sitofp <4 x i32> %11453 to <4 x float>
  %11455 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11454
  %11456 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11450
  %11457 = bitcast float* %11456 to <4 x float>*
  store <4 x float> %11455, <4 x float>* %11457, align 16, !tbaa !2
  %11458 = add nuw nsw i64 %11441, 8
  %11459 = add <4 x i64> %11442, <i64 8, i64 8, i64 8, i64 8>
  %11460 = icmp eq i64 %11458, 32000
  br i1 %11460, label %11461, label %11440, !llvm.loop !215

11461:                                            ; preds = %11440
  store float 2.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  br label %15603

11462:                                            ; preds = %11437
  %11463 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0)) #15
  %11464 = icmp eq i32 %11463, 0
  br i1 %11464, label %11465, label %11485

11465:                                            ; preds = %11462
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %11466

11466:                                            ; preds = %11466, %11465
  %11467 = phi i64 [ 0, %11465 ], [ %11482, %11466 ]
  %11468 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %11465 ], [ %11483, %11466 ]
  %11469 = trunc <4 x i64> %11468 to <4 x i32>
  %11470 = add <4 x i32> %11469, <i32 1, i32 1, i32 1, i32 1>
  %11471 = sitofp <4 x i32> %11470 to <4 x float>
  %11472 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11471
  %11473 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11467
  %11474 = bitcast float* %11473 to <4 x float>*
  store <4 x float> %11472, <4 x float>* %11474, align 16, !tbaa !2
  %11475 = or i64 %11467, 4
  %11476 = trunc <4 x i64> %11468 to <4 x i32>
  %11477 = add <4 x i32> %11476, <i32 5, i32 5, i32 5, i32 5>
  %11478 = sitofp <4 x i32> %11477 to <4 x float>
  %11479 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11478
  %11480 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11475
  %11481 = bitcast float* %11480 to <4 x float>*
  store <4 x float> %11479, <4 x float>* %11481, align 16, !tbaa !2
  %11482 = add nuw nsw i64 %11467, 8
  %11483 = add <4 x i64> %11468, <i64 8, i64 8, i64 8, i64 8>
  %11484 = icmp eq i64 %11482, 32000
  br i1 %11484, label %15603, label %11466, !llvm.loop !216

11485:                                            ; preds = %11462
  %11486 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #15
  %11487 = icmp eq i32 %11486, 0
  br i1 %11487, label %11488, label %11526

11488:                                            ; preds = %11485, %11488
  %11489 = phi i64 [ %11504, %11488 ], [ 0, %11485 ]
  %11490 = phi <4 x i64> [ %11505, %11488 ], [ <i64 0, i64 1, i64 2, i64 3>, %11485 ]
  %11491 = trunc <4 x i64> %11490 to <4 x i32>
  %11492 = add <4 x i32> %11491, <i32 1, i32 1, i32 1, i32 1>
  %11493 = sitofp <4 x i32> %11492 to <4 x float>
  %11494 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11493
  %11495 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11489
  %11496 = bitcast float* %11495 to <4 x float>*
  store <4 x float> %11494, <4 x float>* %11496, align 16, !tbaa !2
  %11497 = or i64 %11489, 4
  %11498 = trunc <4 x i64> %11490 to <4 x i32>
  %11499 = add <4 x i32> %11498, <i32 5, i32 5, i32 5, i32 5>
  %11500 = sitofp <4 x i32> %11499 to <4 x float>
  %11501 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11500
  %11502 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11497
  %11503 = bitcast float* %11502 to <4 x float>*
  store <4 x float> %11501, <4 x float>* %11503, align 16, !tbaa !2
  %11504 = add nuw nsw i64 %11489, 8
  %11505 = add <4 x i64> %11490, <i64 8, i64 8, i64 8, i64 8>
  %11506 = icmp eq i64 %11504, 32000
  br i1 %11506, label %11507, label %11488, !llvm.loop !217

11507:                                            ; preds = %11488, %11507
  %11508 = phi i64 [ %11523, %11507 ], [ 0, %11488 ]
  %11509 = phi <4 x i64> [ %11524, %11507 ], [ <i64 0, i64 1, i64 2, i64 3>, %11488 ]
  %11510 = trunc <4 x i64> %11509 to <4 x i32>
  %11511 = add <4 x i32> %11510, <i32 1, i32 1, i32 1, i32 1>
  %11512 = sitofp <4 x i32> %11511 to <4 x float>
  %11513 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11512
  %11514 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11508
  %11515 = bitcast float* %11514 to <4 x float>*
  store <4 x float> %11513, <4 x float>* %11515, align 16, !tbaa !2
  %11516 = or i64 %11508, 4
  %11517 = trunc <4 x i64> %11509 to <4 x i32>
  %11518 = add <4 x i32> %11517, <i32 5, i32 5, i32 5, i32 5>
  %11519 = sitofp <4 x i32> %11518 to <4 x float>
  %11520 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11519
  %11521 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11516
  %11522 = bitcast float* %11521 to <4 x float>*
  store <4 x float> %11520, <4 x float>* %11522, align 16, !tbaa !2
  %11523 = add nuw nsw i64 %11508, 8
  %11524 = add <4 x i64> %11509, <i64 8, i64 8, i64 8, i64 8>
  %11525 = icmp eq i64 %11523, 32000
  br i1 %11525, label %15603, label %11507, !llvm.loop !218

11526:                                            ; preds = %11485
  %11527 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #15
  %11528 = icmp eq i32 %11527, 0
  br i1 %11528, label %11529, label %11800

11529:                                            ; preds = %11526, %11529
  %11530 = phi i64 [ %11531, %11529 ], [ 0, %11526 ]
  %11531 = add nuw nsw i64 %11530, 1
  %11532 = trunc i64 %11531 to i32
  %11533 = sitofp i32 %11532 to float
  %11534 = fdiv float 1.000000e+00, %11533
  %11535 = insertelement <4 x float> undef, float %11534, i32 0
  %11536 = shufflevector <4 x float> %11535, <4 x float> undef, <4 x i32> zeroinitializer
  %11537 = insertelement <4 x float> undef, float %11534, i32 0
  %11538 = shufflevector <4 x float> %11537, <4 x float> undef, <4 x i32> zeroinitializer
  %11539 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 0
  %11540 = bitcast float* %11539 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11540, align 16, !tbaa !2
  %11541 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 4
  %11542 = bitcast float* %11541 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11542, align 16, !tbaa !2
  %11543 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 8
  %11544 = bitcast float* %11543 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11544, align 16, !tbaa !2
  %11545 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 12
  %11546 = bitcast float* %11545 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11546, align 16, !tbaa !2
  %11547 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 16
  %11548 = bitcast float* %11547 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11548, align 16, !tbaa !2
  %11549 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 20
  %11550 = bitcast float* %11549 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11550, align 16, !tbaa !2
  %11551 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 24
  %11552 = bitcast float* %11551 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11552, align 16, !tbaa !2
  %11553 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 28
  %11554 = bitcast float* %11553 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11554, align 16, !tbaa !2
  %11555 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 32
  %11556 = bitcast float* %11555 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11556, align 16, !tbaa !2
  %11557 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 36
  %11558 = bitcast float* %11557 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11558, align 16, !tbaa !2
  %11559 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 40
  %11560 = bitcast float* %11559 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11560, align 16, !tbaa !2
  %11561 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 44
  %11562 = bitcast float* %11561 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11562, align 16, !tbaa !2
  %11563 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 48
  %11564 = bitcast float* %11563 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11564, align 16, !tbaa !2
  %11565 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 52
  %11566 = bitcast float* %11565 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11566, align 16, !tbaa !2
  %11567 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 56
  %11568 = bitcast float* %11567 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11568, align 16, !tbaa !2
  %11569 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 60
  %11570 = bitcast float* %11569 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11570, align 16, !tbaa !2
  %11571 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 64
  %11572 = bitcast float* %11571 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11572, align 16, !tbaa !2
  %11573 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 68
  %11574 = bitcast float* %11573 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11574, align 16, !tbaa !2
  %11575 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 72
  %11576 = bitcast float* %11575 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11576, align 16, !tbaa !2
  %11577 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 76
  %11578 = bitcast float* %11577 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11578, align 16, !tbaa !2
  %11579 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 80
  %11580 = bitcast float* %11579 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11580, align 16, !tbaa !2
  %11581 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 84
  %11582 = bitcast float* %11581 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11582, align 16, !tbaa !2
  %11583 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 88
  %11584 = bitcast float* %11583 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11584, align 16, !tbaa !2
  %11585 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 92
  %11586 = bitcast float* %11585 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11586, align 16, !tbaa !2
  %11587 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 96
  %11588 = bitcast float* %11587 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11588, align 16, !tbaa !2
  %11589 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 100
  %11590 = bitcast float* %11589 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11590, align 16, !tbaa !2
  %11591 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 104
  %11592 = bitcast float* %11591 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11592, align 16, !tbaa !2
  %11593 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 108
  %11594 = bitcast float* %11593 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11594, align 16, !tbaa !2
  %11595 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 112
  %11596 = bitcast float* %11595 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11596, align 16, !tbaa !2
  %11597 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 116
  %11598 = bitcast float* %11597 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11598, align 16, !tbaa !2
  %11599 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 120
  %11600 = bitcast float* %11599 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11600, align 16, !tbaa !2
  %11601 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 124
  %11602 = bitcast float* %11601 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11602, align 16, !tbaa !2
  %11603 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 128
  %11604 = bitcast float* %11603 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11604, align 16, !tbaa !2
  %11605 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 132
  %11606 = bitcast float* %11605 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11606, align 16, !tbaa !2
  %11607 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 136
  %11608 = bitcast float* %11607 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11608, align 16, !tbaa !2
  %11609 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 140
  %11610 = bitcast float* %11609 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11610, align 16, !tbaa !2
  %11611 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 144
  %11612 = bitcast float* %11611 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11612, align 16, !tbaa !2
  %11613 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 148
  %11614 = bitcast float* %11613 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11614, align 16, !tbaa !2
  %11615 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 152
  %11616 = bitcast float* %11615 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11616, align 16, !tbaa !2
  %11617 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 156
  %11618 = bitcast float* %11617 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11618, align 16, !tbaa !2
  %11619 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 160
  %11620 = bitcast float* %11619 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11620, align 16, !tbaa !2
  %11621 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 164
  %11622 = bitcast float* %11621 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11622, align 16, !tbaa !2
  %11623 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 168
  %11624 = bitcast float* %11623 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11624, align 16, !tbaa !2
  %11625 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 172
  %11626 = bitcast float* %11625 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11626, align 16, !tbaa !2
  %11627 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 176
  %11628 = bitcast float* %11627 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11628, align 16, !tbaa !2
  %11629 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 180
  %11630 = bitcast float* %11629 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11630, align 16, !tbaa !2
  %11631 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 184
  %11632 = bitcast float* %11631 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11632, align 16, !tbaa !2
  %11633 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 188
  %11634 = bitcast float* %11633 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11634, align 16, !tbaa !2
  %11635 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 192
  %11636 = bitcast float* %11635 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11636, align 16, !tbaa !2
  %11637 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 196
  %11638 = bitcast float* %11637 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11638, align 16, !tbaa !2
  %11639 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 200
  %11640 = bitcast float* %11639 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11640, align 16, !tbaa !2
  %11641 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 204
  %11642 = bitcast float* %11641 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11642, align 16, !tbaa !2
  %11643 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 208
  %11644 = bitcast float* %11643 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11644, align 16, !tbaa !2
  %11645 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 212
  %11646 = bitcast float* %11645 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11646, align 16, !tbaa !2
  %11647 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 216
  %11648 = bitcast float* %11647 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11648, align 16, !tbaa !2
  %11649 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 220
  %11650 = bitcast float* %11649 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11650, align 16, !tbaa !2
  %11651 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 224
  %11652 = bitcast float* %11651 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11652, align 16, !tbaa !2
  %11653 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 228
  %11654 = bitcast float* %11653 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11654, align 16, !tbaa !2
  %11655 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 232
  %11656 = bitcast float* %11655 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11656, align 16, !tbaa !2
  %11657 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 236
  %11658 = bitcast float* %11657 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11658, align 16, !tbaa !2
  %11659 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 240
  %11660 = bitcast float* %11659 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11660, align 16, !tbaa !2
  %11661 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 244
  %11662 = bitcast float* %11661 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11662, align 16, !tbaa !2
  %11663 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 248
  %11664 = bitcast float* %11663 to <4 x float>*
  store <4 x float> %11536, <4 x float>* %11664, align 16, !tbaa !2
  %11665 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %11530, i64 252
  %11666 = bitcast float* %11665 to <4 x float>*
  store <4 x float> %11538, <4 x float>* %11666, align 16, !tbaa !2
  %11667 = icmp eq i64 %11531, 256
  br i1 %11667, label %11668, label %11529

11668:                                            ; preds = %11529, %11668
  %11669 = phi i64 [ %11798, %11668 ], [ 0, %11529 ]
  %11670 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 0
  %11671 = bitcast float* %11670 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11671, align 16, !tbaa !2
  %11672 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 4
  %11673 = bitcast float* %11672 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11673, align 16, !tbaa !2
  %11674 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 8
  %11675 = bitcast float* %11674 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11675, align 16, !tbaa !2
  %11676 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 12
  %11677 = bitcast float* %11676 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11677, align 16, !tbaa !2
  %11678 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 16
  %11679 = bitcast float* %11678 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11679, align 16, !tbaa !2
  %11680 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 20
  %11681 = bitcast float* %11680 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11681, align 16, !tbaa !2
  %11682 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 24
  %11683 = bitcast float* %11682 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11683, align 16, !tbaa !2
  %11684 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 28
  %11685 = bitcast float* %11684 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11685, align 16, !tbaa !2
  %11686 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 32
  %11687 = bitcast float* %11686 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11687, align 16, !tbaa !2
  %11688 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 36
  %11689 = bitcast float* %11688 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11689, align 16, !tbaa !2
  %11690 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 40
  %11691 = bitcast float* %11690 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11691, align 16, !tbaa !2
  %11692 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 44
  %11693 = bitcast float* %11692 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11693, align 16, !tbaa !2
  %11694 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 48
  %11695 = bitcast float* %11694 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11695, align 16, !tbaa !2
  %11696 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 52
  %11697 = bitcast float* %11696 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11697, align 16, !tbaa !2
  %11698 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 56
  %11699 = bitcast float* %11698 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11699, align 16, !tbaa !2
  %11700 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 60
  %11701 = bitcast float* %11700 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11701, align 16, !tbaa !2
  %11702 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 64
  %11703 = bitcast float* %11702 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11703, align 16, !tbaa !2
  %11704 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 68
  %11705 = bitcast float* %11704 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11705, align 16, !tbaa !2
  %11706 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 72
  %11707 = bitcast float* %11706 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11707, align 16, !tbaa !2
  %11708 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 76
  %11709 = bitcast float* %11708 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11709, align 16, !tbaa !2
  %11710 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 80
  %11711 = bitcast float* %11710 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11711, align 16, !tbaa !2
  %11712 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 84
  %11713 = bitcast float* %11712 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11713, align 16, !tbaa !2
  %11714 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 88
  %11715 = bitcast float* %11714 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11715, align 16, !tbaa !2
  %11716 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 92
  %11717 = bitcast float* %11716 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11717, align 16, !tbaa !2
  %11718 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 96
  %11719 = bitcast float* %11718 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11719, align 16, !tbaa !2
  %11720 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 100
  %11721 = bitcast float* %11720 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11721, align 16, !tbaa !2
  %11722 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 104
  %11723 = bitcast float* %11722 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11723, align 16, !tbaa !2
  %11724 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 108
  %11725 = bitcast float* %11724 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11725, align 16, !tbaa !2
  %11726 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 112
  %11727 = bitcast float* %11726 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11727, align 16, !tbaa !2
  %11728 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 116
  %11729 = bitcast float* %11728 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11729, align 16, !tbaa !2
  %11730 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 120
  %11731 = bitcast float* %11730 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11731, align 16, !tbaa !2
  %11732 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 124
  %11733 = bitcast float* %11732 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11733, align 16, !tbaa !2
  %11734 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 128
  %11735 = bitcast float* %11734 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11735, align 16, !tbaa !2
  %11736 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 132
  %11737 = bitcast float* %11736 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11737, align 16, !tbaa !2
  %11738 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 136
  %11739 = bitcast float* %11738 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11739, align 16, !tbaa !2
  %11740 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 140
  %11741 = bitcast float* %11740 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11741, align 16, !tbaa !2
  %11742 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 144
  %11743 = bitcast float* %11742 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11743, align 16, !tbaa !2
  %11744 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 148
  %11745 = bitcast float* %11744 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11745, align 16, !tbaa !2
  %11746 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 152
  %11747 = bitcast float* %11746 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11747, align 16, !tbaa !2
  %11748 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 156
  %11749 = bitcast float* %11748 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11749, align 16, !tbaa !2
  %11750 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 160
  %11751 = bitcast float* %11750 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11751, align 16, !tbaa !2
  %11752 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 164
  %11753 = bitcast float* %11752 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11753, align 16, !tbaa !2
  %11754 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 168
  %11755 = bitcast float* %11754 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11755, align 16, !tbaa !2
  %11756 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 172
  %11757 = bitcast float* %11756 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11757, align 16, !tbaa !2
  %11758 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 176
  %11759 = bitcast float* %11758 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11759, align 16, !tbaa !2
  %11760 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 180
  %11761 = bitcast float* %11760 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11761, align 16, !tbaa !2
  %11762 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 184
  %11763 = bitcast float* %11762 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11763, align 16, !tbaa !2
  %11764 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 188
  %11765 = bitcast float* %11764 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11765, align 16, !tbaa !2
  %11766 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 192
  %11767 = bitcast float* %11766 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11767, align 16, !tbaa !2
  %11768 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 196
  %11769 = bitcast float* %11768 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11769, align 16, !tbaa !2
  %11770 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 200
  %11771 = bitcast float* %11770 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11771, align 16, !tbaa !2
  %11772 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 204
  %11773 = bitcast float* %11772 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11773, align 16, !tbaa !2
  %11774 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 208
  %11775 = bitcast float* %11774 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11775, align 16, !tbaa !2
  %11776 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 212
  %11777 = bitcast float* %11776 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11777, align 16, !tbaa !2
  %11778 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 216
  %11779 = bitcast float* %11778 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11779, align 16, !tbaa !2
  %11780 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 220
  %11781 = bitcast float* %11780 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11781, align 16, !tbaa !2
  %11782 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 224
  %11783 = bitcast float* %11782 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11783, align 16, !tbaa !2
  %11784 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 228
  %11785 = bitcast float* %11784 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11785, align 16, !tbaa !2
  %11786 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 232
  %11787 = bitcast float* %11786 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11787, align 16, !tbaa !2
  %11788 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 236
  %11789 = bitcast float* %11788 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11789, align 16, !tbaa !2
  %11790 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 240
  %11791 = bitcast float* %11790 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11791, align 16, !tbaa !2
  %11792 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 244
  %11793 = bitcast float* %11792 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11793, align 16, !tbaa !2
  %11794 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 248
  %11795 = bitcast float* %11794 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11795, align 16, !tbaa !2
  %11796 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %11669, i64 252
  %11797 = bitcast float* %11796 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11797, align 16, !tbaa !2
  %11798 = add nuw nsw i64 %11669, 1
  %11799 = icmp eq i64 %11798, 256
  br i1 %11799, label %15603, label %11668

11800:                                            ; preds = %11526
  %11801 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #15
  %11802 = icmp eq i32 %11801, 0
  br i1 %11802, label %11803, label %11890

11803:                                            ; preds = %11800, %11803
  %11804 = phi i64 [ %11844, %11803 ], [ 0, %11800 ]
  %11805 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11804
  %11806 = bitcast float* %11805 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11806, align 16, !tbaa !2
  %11807 = getelementptr inbounds float, float* %11805, i64 4
  %11808 = bitcast float* %11807 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11808, align 16, !tbaa !2
  %11809 = or i64 %11804, 8
  %11810 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11809
  %11811 = bitcast float* %11810 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11811, align 16, !tbaa !2
  %11812 = getelementptr inbounds float, float* %11810, i64 4
  %11813 = bitcast float* %11812 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11813, align 16, !tbaa !2
  %11814 = or i64 %11804, 16
  %11815 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11814
  %11816 = bitcast float* %11815 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11816, align 16, !tbaa !2
  %11817 = getelementptr inbounds float, float* %11815, i64 4
  %11818 = bitcast float* %11817 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11818, align 16, !tbaa !2
  %11819 = or i64 %11804, 24
  %11820 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11819
  %11821 = bitcast float* %11820 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11821, align 16, !tbaa !2
  %11822 = getelementptr inbounds float, float* %11820, i64 4
  %11823 = bitcast float* %11822 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11823, align 16, !tbaa !2
  %11824 = or i64 %11804, 32
  %11825 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11824
  %11826 = bitcast float* %11825 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11826, align 16, !tbaa !2
  %11827 = getelementptr inbounds float, float* %11825, i64 4
  %11828 = bitcast float* %11827 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11828, align 16, !tbaa !2
  %11829 = or i64 %11804, 40
  %11830 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11829
  %11831 = bitcast float* %11830 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11831, align 16, !tbaa !2
  %11832 = getelementptr inbounds float, float* %11830, i64 4
  %11833 = bitcast float* %11832 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11833, align 16, !tbaa !2
  %11834 = or i64 %11804, 48
  %11835 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11834
  %11836 = bitcast float* %11835 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11836, align 16, !tbaa !2
  %11837 = getelementptr inbounds float, float* %11835, i64 4
  %11838 = bitcast float* %11837 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11838, align 16, !tbaa !2
  %11839 = or i64 %11804, 56
  %11840 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11839
  %11841 = bitcast float* %11840 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11841, align 16, !tbaa !2
  %11842 = getelementptr inbounds float, float* %11840, i64 4
  %11843 = bitcast float* %11842 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11843, align 16, !tbaa !2
  %11844 = add nuw nsw i64 %11804, 64
  %11845 = icmp eq i64 %11844, 32000
  br i1 %11845, label %11846, label %11803, !llvm.loop !219

11846:                                            ; preds = %11803, %11846
  %11847 = phi i64 [ %11887, %11846 ], [ 0, %11803 ]
  %11848 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11847
  %11849 = bitcast float* %11848 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11849, align 16, !tbaa !2
  %11850 = getelementptr inbounds float, float* %11848, i64 4
  %11851 = bitcast float* %11850 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11851, align 16, !tbaa !2
  %11852 = or i64 %11847, 8
  %11853 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11852
  %11854 = bitcast float* %11853 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11854, align 16, !tbaa !2
  %11855 = getelementptr inbounds float, float* %11853, i64 4
  %11856 = bitcast float* %11855 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11856, align 16, !tbaa !2
  %11857 = or i64 %11847, 16
  %11858 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11857
  %11859 = bitcast float* %11858 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11859, align 16, !tbaa !2
  %11860 = getelementptr inbounds float, float* %11858, i64 4
  %11861 = bitcast float* %11860 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11861, align 16, !tbaa !2
  %11862 = or i64 %11847, 24
  %11863 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11862
  %11864 = bitcast float* %11863 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11864, align 16, !tbaa !2
  %11865 = getelementptr inbounds float, float* %11863, i64 4
  %11866 = bitcast float* %11865 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11866, align 16, !tbaa !2
  %11867 = or i64 %11847, 32
  %11868 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11867
  %11869 = bitcast float* %11868 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11869, align 16, !tbaa !2
  %11870 = getelementptr inbounds float, float* %11868, i64 4
  %11871 = bitcast float* %11870 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11871, align 16, !tbaa !2
  %11872 = or i64 %11847, 40
  %11873 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11872
  %11874 = bitcast float* %11873 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11874, align 16, !tbaa !2
  %11875 = getelementptr inbounds float, float* %11873, i64 4
  %11876 = bitcast float* %11875 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11876, align 16, !tbaa !2
  %11877 = or i64 %11847, 48
  %11878 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11877
  %11879 = bitcast float* %11878 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11879, align 16, !tbaa !2
  %11880 = getelementptr inbounds float, float* %11878, i64 4
  %11881 = bitcast float* %11880 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11881, align 16, !tbaa !2
  %11882 = or i64 %11847, 56
  %11883 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11882
  %11884 = bitcast float* %11883 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11884, align 16, !tbaa !2
  %11885 = getelementptr inbounds float, float* %11883, i64 4
  %11886 = bitcast float* %11885 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11886, align 16, !tbaa !2
  %11887 = add nuw nsw i64 %11847, 64
  %11888 = icmp eq i64 %11887, 32000
  br i1 %11888, label %11889, label %11846, !llvm.loop !220

11889:                                            ; preds = %11846
  store float 1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !2
  br label %15603

11890:                                            ; preds = %11800
  %11891 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0)) #15
  %11892 = icmp eq i32 %11891, 0
  br i1 %11892, label %11893, label %11931

11893:                                            ; preds = %11890, %11893
  %11894 = phi i64 [ %11909, %11893 ], [ 0, %11890 ]
  %11895 = phi <4 x i64> [ %11910, %11893 ], [ <i64 0, i64 1, i64 2, i64 3>, %11890 ]
  %11896 = trunc <4 x i64> %11895 to <4 x i32>
  %11897 = add <4 x i32> %11896, <i32 1, i32 1, i32 1, i32 1>
  %11898 = sitofp <4 x i32> %11897 to <4 x float>
  %11899 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11898
  %11900 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11894
  %11901 = bitcast float* %11900 to <4 x float>*
  store <4 x float> %11899, <4 x float>* %11901, align 16, !tbaa !2
  %11902 = or i64 %11894, 4
  %11903 = trunc <4 x i64> %11895 to <4 x i32>
  %11904 = add <4 x i32> %11903, <i32 5, i32 5, i32 5, i32 5>
  %11905 = sitofp <4 x i32> %11904 to <4 x float>
  %11906 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11905
  %11907 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11902
  %11908 = bitcast float* %11907 to <4 x float>*
  store <4 x float> %11906, <4 x float>* %11908, align 16, !tbaa !2
  %11909 = add nuw nsw i64 %11894, 8
  %11910 = add <4 x i64> %11895, <i64 8, i64 8, i64 8, i64 8>
  %11911 = icmp eq i64 %11909, 32000
  br i1 %11911, label %11912, label %11893, !llvm.loop !221

11912:                                            ; preds = %11893, %11912
  %11913 = phi i64 [ %11928, %11912 ], [ 0, %11893 ]
  %11914 = phi <4 x i64> [ %11929, %11912 ], [ <i64 0, i64 1, i64 2, i64 3>, %11893 ]
  %11915 = trunc <4 x i64> %11914 to <4 x i32>
  %11916 = add <4 x i32> %11915, <i32 1, i32 1, i32 1, i32 1>
  %11917 = sitofp <4 x i32> %11916 to <4 x float>
  %11918 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11917
  %11919 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11913
  %11920 = bitcast float* %11919 to <4 x float>*
  store <4 x float> %11918, <4 x float>* %11920, align 16, !tbaa !2
  %11921 = or i64 %11913, 4
  %11922 = trunc <4 x i64> %11914 to <4 x i32>
  %11923 = add <4 x i32> %11922, <i32 5, i32 5, i32 5, i32 5>
  %11924 = sitofp <4 x i32> %11923 to <4 x float>
  %11925 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11924
  %11926 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11921
  %11927 = bitcast float* %11926 to <4 x float>*
  store <4 x float> %11925, <4 x float>* %11927, align 16, !tbaa !2
  %11928 = add nuw nsw i64 %11913, 8
  %11929 = add <4 x i64> %11914, <i64 8, i64 8, i64 8, i64 8>
  %11930 = icmp eq i64 %11928, 32000
  br i1 %11930, label %15603, label %11912, !llvm.loop !222

11931:                                            ; preds = %11890
  %11932 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i64 0, i64 0)) #15
  %11933 = icmp eq i32 %11932, 0
  br i1 %11933, label %11934, label %12021

11934:                                            ; preds = %11931, %11934
  %11935 = phi i64 [ %11975, %11934 ], [ 0, %11931 ]
  %11936 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11935
  %11937 = bitcast float* %11936 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11937, align 16, !tbaa !2
  %11938 = getelementptr inbounds float, float* %11936, i64 4
  %11939 = bitcast float* %11938 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11939, align 16, !tbaa !2
  %11940 = or i64 %11935, 8
  %11941 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11940
  %11942 = bitcast float* %11941 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11942, align 16, !tbaa !2
  %11943 = getelementptr inbounds float, float* %11941, i64 4
  %11944 = bitcast float* %11943 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11944, align 16, !tbaa !2
  %11945 = or i64 %11935, 16
  %11946 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11945
  %11947 = bitcast float* %11946 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11947, align 16, !tbaa !2
  %11948 = getelementptr inbounds float, float* %11946, i64 4
  %11949 = bitcast float* %11948 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11949, align 16, !tbaa !2
  %11950 = or i64 %11935, 24
  %11951 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11950
  %11952 = bitcast float* %11951 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11952, align 16, !tbaa !2
  %11953 = getelementptr inbounds float, float* %11951, i64 4
  %11954 = bitcast float* %11953 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11954, align 16, !tbaa !2
  %11955 = or i64 %11935, 32
  %11956 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11955
  %11957 = bitcast float* %11956 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11957, align 16, !tbaa !2
  %11958 = getelementptr inbounds float, float* %11956, i64 4
  %11959 = bitcast float* %11958 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11959, align 16, !tbaa !2
  %11960 = or i64 %11935, 40
  %11961 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11960
  %11962 = bitcast float* %11961 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11962, align 16, !tbaa !2
  %11963 = getelementptr inbounds float, float* %11961, i64 4
  %11964 = bitcast float* %11963 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11964, align 16, !tbaa !2
  %11965 = or i64 %11935, 48
  %11966 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11965
  %11967 = bitcast float* %11966 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11967, align 16, !tbaa !2
  %11968 = getelementptr inbounds float, float* %11966, i64 4
  %11969 = bitcast float* %11968 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11969, align 16, !tbaa !2
  %11970 = or i64 %11935, 56
  %11971 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11970
  %11972 = bitcast float* %11971 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11972, align 16, !tbaa !2
  %11973 = getelementptr inbounds float, float* %11971, i64 4
  %11974 = bitcast float* %11973 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11974, align 16, !tbaa !2
  %11975 = add nuw nsw i64 %11935, 64
  %11976 = icmp eq i64 %11975, 32000
  br i1 %11976, label %11977, label %11934, !llvm.loop !223

11977:                                            ; preds = %11934, %11977
  %11978 = phi i64 [ %12018, %11977 ], [ 0, %11934 ]
  %11979 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11978
  %11980 = bitcast float* %11979 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11980, align 16, !tbaa !2
  %11981 = getelementptr inbounds float, float* %11979, i64 4
  %11982 = bitcast float* %11981 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11982, align 16, !tbaa !2
  %11983 = or i64 %11978, 8
  %11984 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11983
  %11985 = bitcast float* %11984 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11985, align 16, !tbaa !2
  %11986 = getelementptr inbounds float, float* %11984, i64 4
  %11987 = bitcast float* %11986 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11987, align 16, !tbaa !2
  %11988 = or i64 %11978, 16
  %11989 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11988
  %11990 = bitcast float* %11989 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11990, align 16, !tbaa !2
  %11991 = getelementptr inbounds float, float* %11989, i64 4
  %11992 = bitcast float* %11991 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11992, align 16, !tbaa !2
  %11993 = or i64 %11978, 24
  %11994 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11993
  %11995 = bitcast float* %11994 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11995, align 16, !tbaa !2
  %11996 = getelementptr inbounds float, float* %11994, i64 4
  %11997 = bitcast float* %11996 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11997, align 16, !tbaa !2
  %11998 = or i64 %11978, 32
  %11999 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11998
  %12000 = bitcast float* %11999 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12000, align 16, !tbaa !2
  %12001 = getelementptr inbounds float, float* %11999, i64 4
  %12002 = bitcast float* %12001 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12002, align 16, !tbaa !2
  %12003 = or i64 %11978, 40
  %12004 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12003
  %12005 = bitcast float* %12004 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12005, align 16, !tbaa !2
  %12006 = getelementptr inbounds float, float* %12004, i64 4
  %12007 = bitcast float* %12006 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12007, align 16, !tbaa !2
  %12008 = or i64 %11978, 48
  %12009 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12008
  %12010 = bitcast float* %12009 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12010, align 16, !tbaa !2
  %12011 = getelementptr inbounds float, float* %12009, i64 4
  %12012 = bitcast float* %12011 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12012, align 16, !tbaa !2
  %12013 = or i64 %11978, 56
  %12014 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12013
  %12015 = bitcast float* %12014 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12015, align 16, !tbaa !2
  %12016 = getelementptr inbounds float, float* %12014, i64 4
  %12017 = bitcast float* %12016 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12017, align 16, !tbaa !2
  %12018 = add nuw nsw i64 %11978, 64
  %12019 = icmp eq i64 %12018, 32000
  br i1 %12019, label %12020, label %11977, !llvm.loop !224

12020:                                            ; preds = %11977
  store float 1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !2
  br label %15603

12021:                                            ; preds = %11931
  %12022 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i64 0, i64 0)) #15
  %12023 = icmp eq i32 %12022, 0
  br i1 %12023, label %12024, label %12105

12024:                                            ; preds = %12021, %12024
  %12025 = phi i64 [ %12065, %12024 ], [ 0, %12021 ]
  %12026 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12025
  %12027 = bitcast float* %12026 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12027, align 16, !tbaa !2
  %12028 = getelementptr inbounds float, float* %12026, i64 4
  %12029 = bitcast float* %12028 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12029, align 16, !tbaa !2
  %12030 = or i64 %12025, 8
  %12031 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12030
  %12032 = bitcast float* %12031 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12032, align 16, !tbaa !2
  %12033 = getelementptr inbounds float, float* %12031, i64 4
  %12034 = bitcast float* %12033 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12034, align 16, !tbaa !2
  %12035 = or i64 %12025, 16
  %12036 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12035
  %12037 = bitcast float* %12036 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12037, align 16, !tbaa !2
  %12038 = getelementptr inbounds float, float* %12036, i64 4
  %12039 = bitcast float* %12038 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12039, align 16, !tbaa !2
  %12040 = or i64 %12025, 24
  %12041 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12040
  %12042 = bitcast float* %12041 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12042, align 16, !tbaa !2
  %12043 = getelementptr inbounds float, float* %12041, i64 4
  %12044 = bitcast float* %12043 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12044, align 16, !tbaa !2
  %12045 = or i64 %12025, 32
  %12046 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12045
  %12047 = bitcast float* %12046 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12047, align 16, !tbaa !2
  %12048 = getelementptr inbounds float, float* %12046, i64 4
  %12049 = bitcast float* %12048 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12049, align 16, !tbaa !2
  %12050 = or i64 %12025, 40
  %12051 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12050
  %12052 = bitcast float* %12051 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12052, align 16, !tbaa !2
  %12053 = getelementptr inbounds float, float* %12051, i64 4
  %12054 = bitcast float* %12053 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12054, align 16, !tbaa !2
  %12055 = or i64 %12025, 48
  %12056 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12055
  %12057 = bitcast float* %12056 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12057, align 16, !tbaa !2
  %12058 = getelementptr inbounds float, float* %12056, i64 4
  %12059 = bitcast float* %12058 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12059, align 16, !tbaa !2
  %12060 = or i64 %12025, 56
  %12061 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12060
  %12062 = bitcast float* %12061 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12062, align 16, !tbaa !2
  %12063 = getelementptr inbounds float, float* %12061, i64 4
  %12064 = bitcast float* %12063 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12064, align 16, !tbaa !2
  %12065 = add nuw nsw i64 %12025, 64
  %12066 = icmp eq i64 %12065, 32000
  br i1 %12066, label %12067, label %12024, !llvm.loop !225

12067:                                            ; preds = %12024, %12067
  %12068 = phi i64 [ %12083, %12067 ], [ 0, %12024 ]
  %12069 = phi <4 x i64> [ %12084, %12067 ], [ <i64 0, i64 1, i64 2, i64 3>, %12024 ]
  %12070 = trunc <4 x i64> %12069 to <4 x i32>
  %12071 = add <4 x i32> %12070, <i32 1, i32 1, i32 1, i32 1>
  %12072 = sitofp <4 x i32> %12071 to <4 x float>
  %12073 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12072
  %12074 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12068
  %12075 = bitcast float* %12074 to <4 x float>*
  store <4 x float> %12073, <4 x float>* %12075, align 16, !tbaa !2
  %12076 = or i64 %12068, 4
  %12077 = trunc <4 x i64> %12069 to <4 x i32>
  %12078 = add <4 x i32> %12077, <i32 5, i32 5, i32 5, i32 5>
  %12079 = sitofp <4 x i32> %12078 to <4 x float>
  %12080 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12079
  %12081 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12076
  %12082 = bitcast float* %12081 to <4 x float>*
  store <4 x float> %12080, <4 x float>* %12082, align 16, !tbaa !2
  %12083 = add nuw nsw i64 %12068, 8
  %12084 = add <4 x i64> %12069, <i64 8, i64 8, i64 8, i64 8>
  %12085 = icmp eq i64 %12083, 32000
  br i1 %12085, label %12086, label %12067, !llvm.loop !226

12086:                                            ; preds = %12067, %12086
  %12087 = phi i64 [ %12102, %12086 ], [ 0, %12067 ]
  %12088 = phi <4 x i64> [ %12103, %12086 ], [ <i64 0, i64 1, i64 2, i64 3>, %12067 ]
  %12089 = trunc <4 x i64> %12088 to <4 x i32>
  %12090 = add <4 x i32> %12089, <i32 1, i32 1, i32 1, i32 1>
  %12091 = sitofp <4 x i32> %12090 to <4 x float>
  %12092 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12091
  %12093 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12087
  %12094 = bitcast float* %12093 to <4 x float>*
  store <4 x float> %12092, <4 x float>* %12094, align 16, !tbaa !2
  %12095 = or i64 %12087, 4
  %12096 = trunc <4 x i64> %12088 to <4 x i32>
  %12097 = add <4 x i32> %12096, <i32 5, i32 5, i32 5, i32 5>
  %12098 = sitofp <4 x i32> %12097 to <4 x float>
  %12099 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12098
  %12100 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12095
  %12101 = bitcast float* %12100 to <4 x float>*
  store <4 x float> %12099, <4 x float>* %12101, align 16, !tbaa !2
  %12102 = add nuw nsw i64 %12087, 8
  %12103 = add <4 x i64> %12088, <i64 8, i64 8, i64 8, i64 8>
  %12104 = icmp eq i64 %12102, 32000
  br i1 %12104, label %15603, label %12086, !llvm.loop !227

12105:                                            ; preds = %12021
  %12106 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i64 0, i64 0)) #15
  %12107 = icmp eq i32 %12106, 0
  br i1 %12107, label %12108, label %12189

12108:                                            ; preds = %12105, %12108
  %12109 = phi i64 [ %12149, %12108 ], [ 0, %12105 ]
  %12110 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12109
  %12111 = bitcast float* %12110 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12111, align 16, !tbaa !2
  %12112 = getelementptr inbounds float, float* %12110, i64 4
  %12113 = bitcast float* %12112 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12113, align 16, !tbaa !2
  %12114 = or i64 %12109, 8
  %12115 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12114
  %12116 = bitcast float* %12115 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12116, align 16, !tbaa !2
  %12117 = getelementptr inbounds float, float* %12115, i64 4
  %12118 = bitcast float* %12117 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12118, align 16, !tbaa !2
  %12119 = or i64 %12109, 16
  %12120 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12119
  %12121 = bitcast float* %12120 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12121, align 16, !tbaa !2
  %12122 = getelementptr inbounds float, float* %12120, i64 4
  %12123 = bitcast float* %12122 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12123, align 16, !tbaa !2
  %12124 = or i64 %12109, 24
  %12125 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12124
  %12126 = bitcast float* %12125 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12126, align 16, !tbaa !2
  %12127 = getelementptr inbounds float, float* %12125, i64 4
  %12128 = bitcast float* %12127 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12128, align 16, !tbaa !2
  %12129 = or i64 %12109, 32
  %12130 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12129
  %12131 = bitcast float* %12130 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12131, align 16, !tbaa !2
  %12132 = getelementptr inbounds float, float* %12130, i64 4
  %12133 = bitcast float* %12132 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12133, align 16, !tbaa !2
  %12134 = or i64 %12109, 40
  %12135 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12134
  %12136 = bitcast float* %12135 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12136, align 16, !tbaa !2
  %12137 = getelementptr inbounds float, float* %12135, i64 4
  %12138 = bitcast float* %12137 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12138, align 16, !tbaa !2
  %12139 = or i64 %12109, 48
  %12140 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12139
  %12141 = bitcast float* %12140 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12141, align 16, !tbaa !2
  %12142 = getelementptr inbounds float, float* %12140, i64 4
  %12143 = bitcast float* %12142 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12143, align 16, !tbaa !2
  %12144 = or i64 %12109, 56
  %12145 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12144
  %12146 = bitcast float* %12145 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12146, align 16, !tbaa !2
  %12147 = getelementptr inbounds float, float* %12145, i64 4
  %12148 = bitcast float* %12147 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12148, align 16, !tbaa !2
  %12149 = add nuw nsw i64 %12109, 64
  %12150 = icmp eq i64 %12149, 32000
  br i1 %12150, label %12151, label %12108, !llvm.loop !228

12151:                                            ; preds = %12108, %12151
  %12152 = phi i64 [ %12167, %12151 ], [ 0, %12108 ]
  %12153 = phi <4 x i64> [ %12168, %12151 ], [ <i64 0, i64 1, i64 2, i64 3>, %12108 ]
  %12154 = trunc <4 x i64> %12153 to <4 x i32>
  %12155 = add <4 x i32> %12154, <i32 1, i32 1, i32 1, i32 1>
  %12156 = sitofp <4 x i32> %12155 to <4 x float>
  %12157 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12156
  %12158 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12152
  %12159 = bitcast float* %12158 to <4 x float>*
  store <4 x float> %12157, <4 x float>* %12159, align 16, !tbaa !2
  %12160 = or i64 %12152, 4
  %12161 = trunc <4 x i64> %12153 to <4 x i32>
  %12162 = add <4 x i32> %12161, <i32 5, i32 5, i32 5, i32 5>
  %12163 = sitofp <4 x i32> %12162 to <4 x float>
  %12164 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12163
  %12165 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12160
  %12166 = bitcast float* %12165 to <4 x float>*
  store <4 x float> %12164, <4 x float>* %12166, align 16, !tbaa !2
  %12167 = add nuw nsw i64 %12152, 8
  %12168 = add <4 x i64> %12153, <i64 8, i64 8, i64 8, i64 8>
  %12169 = icmp eq i64 %12167, 32000
  br i1 %12169, label %12170, label %12151, !llvm.loop !229

12170:                                            ; preds = %12151, %12170
  %12171 = phi i64 [ %12186, %12170 ], [ 0, %12151 ]
  %12172 = phi <4 x i64> [ %12187, %12170 ], [ <i64 0, i64 1, i64 2, i64 3>, %12151 ]
  %12173 = trunc <4 x i64> %12172 to <4 x i32>
  %12174 = add <4 x i32> %12173, <i32 1, i32 1, i32 1, i32 1>
  %12175 = sitofp <4 x i32> %12174 to <4 x float>
  %12176 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12175
  %12177 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12171
  %12178 = bitcast float* %12177 to <4 x float>*
  store <4 x float> %12176, <4 x float>* %12178, align 16, !tbaa !2
  %12179 = or i64 %12171, 4
  %12180 = trunc <4 x i64> %12172 to <4 x i32>
  %12181 = add <4 x i32> %12180, <i32 5, i32 5, i32 5, i32 5>
  %12182 = sitofp <4 x i32> %12181 to <4 x float>
  %12183 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12182
  %12184 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12179
  %12185 = bitcast float* %12184 to <4 x float>*
  store <4 x float> %12183, <4 x float>* %12185, align 16, !tbaa !2
  %12186 = add nuw nsw i64 %12171, 8
  %12187 = add <4 x i64> %12172, <i64 8, i64 8, i64 8, i64 8>
  %12188 = icmp eq i64 %12186, 32000
  br i1 %12188, label %15603, label %12170, !llvm.loop !230

12189:                                            ; preds = %12105
  %12190 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i64 0, i64 0)) #15
  %12191 = icmp eq i32 %12190, 0
  br i1 %12191, label %12192, label %12317

12192:                                            ; preds = %12189
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %12193

12193:                                            ; preds = %12193, %12192
  %12194 = phi i64 [ 0, %12192 ], [ %12234, %12193 ]
  %12195 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12194
  %12196 = bitcast float* %12195 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12196, align 16, !tbaa !2
  %12197 = getelementptr inbounds float, float* %12195, i64 4
  %12198 = bitcast float* %12197 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12198, align 16, !tbaa !2
  %12199 = or i64 %12194, 8
  %12200 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12199
  %12201 = bitcast float* %12200 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12201, align 16, !tbaa !2
  %12202 = getelementptr inbounds float, float* %12200, i64 4
  %12203 = bitcast float* %12202 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12203, align 16, !tbaa !2
  %12204 = or i64 %12194, 16
  %12205 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12204
  %12206 = bitcast float* %12205 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12206, align 16, !tbaa !2
  %12207 = getelementptr inbounds float, float* %12205, i64 4
  %12208 = bitcast float* %12207 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12208, align 16, !tbaa !2
  %12209 = or i64 %12194, 24
  %12210 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12209
  %12211 = bitcast float* %12210 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12211, align 16, !tbaa !2
  %12212 = getelementptr inbounds float, float* %12210, i64 4
  %12213 = bitcast float* %12212 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12213, align 16, !tbaa !2
  %12214 = or i64 %12194, 32
  %12215 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12214
  %12216 = bitcast float* %12215 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12216, align 16, !tbaa !2
  %12217 = getelementptr inbounds float, float* %12215, i64 4
  %12218 = bitcast float* %12217 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12218, align 16, !tbaa !2
  %12219 = or i64 %12194, 40
  %12220 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12219
  %12221 = bitcast float* %12220 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12221, align 16, !tbaa !2
  %12222 = getelementptr inbounds float, float* %12220, i64 4
  %12223 = bitcast float* %12222 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12223, align 16, !tbaa !2
  %12224 = or i64 %12194, 48
  %12225 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12224
  %12226 = bitcast float* %12225 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12226, align 16, !tbaa !2
  %12227 = getelementptr inbounds float, float* %12225, i64 4
  %12228 = bitcast float* %12227 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12228, align 16, !tbaa !2
  %12229 = or i64 %12194, 56
  %12230 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12229
  %12231 = bitcast float* %12230 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12231, align 16, !tbaa !2
  %12232 = getelementptr inbounds float, float* %12230, i64 4
  %12233 = bitcast float* %12232 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12233, align 16, !tbaa !2
  %12234 = add nuw nsw i64 %12194, 64
  %12235 = icmp eq i64 %12234, 32000
  br i1 %12235, label %12236, label %12193, !llvm.loop !231

12236:                                            ; preds = %12193, %12236
  %12237 = phi i64 [ %12277, %12236 ], [ 0, %12193 ]
  %12238 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12237
  %12239 = bitcast float* %12238 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12239, align 16, !tbaa !2
  %12240 = getelementptr inbounds float, float* %12238, i64 4
  %12241 = bitcast float* %12240 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12241, align 16, !tbaa !2
  %12242 = or i64 %12237, 8
  %12243 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12242
  %12244 = bitcast float* %12243 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12244, align 16, !tbaa !2
  %12245 = getelementptr inbounds float, float* %12243, i64 4
  %12246 = bitcast float* %12245 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12246, align 16, !tbaa !2
  %12247 = or i64 %12237, 16
  %12248 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12247
  %12249 = bitcast float* %12248 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12249, align 16, !tbaa !2
  %12250 = getelementptr inbounds float, float* %12248, i64 4
  %12251 = bitcast float* %12250 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12251, align 16, !tbaa !2
  %12252 = or i64 %12237, 24
  %12253 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12252
  %12254 = bitcast float* %12253 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12254, align 16, !tbaa !2
  %12255 = getelementptr inbounds float, float* %12253, i64 4
  %12256 = bitcast float* %12255 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12256, align 16, !tbaa !2
  %12257 = or i64 %12237, 32
  %12258 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12257
  %12259 = bitcast float* %12258 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12259, align 16, !tbaa !2
  %12260 = getelementptr inbounds float, float* %12258, i64 4
  %12261 = bitcast float* %12260 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12261, align 16, !tbaa !2
  %12262 = or i64 %12237, 40
  %12263 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12262
  %12264 = bitcast float* %12263 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12264, align 16, !tbaa !2
  %12265 = getelementptr inbounds float, float* %12263, i64 4
  %12266 = bitcast float* %12265 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12266, align 16, !tbaa !2
  %12267 = or i64 %12237, 48
  %12268 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12267
  %12269 = bitcast float* %12268 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12269, align 16, !tbaa !2
  %12270 = getelementptr inbounds float, float* %12268, i64 4
  %12271 = bitcast float* %12270 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12271, align 16, !tbaa !2
  %12272 = or i64 %12237, 56
  %12273 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12272
  %12274 = bitcast float* %12273 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12274, align 16, !tbaa !2
  %12275 = getelementptr inbounds float, float* %12273, i64 4
  %12276 = bitcast float* %12275 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12276, align 16, !tbaa !2
  %12277 = add nuw nsw i64 %12237, 64
  %12278 = icmp eq i64 %12277, 32000
  br i1 %12278, label %12279, label %12236, !llvm.loop !232

12279:                                            ; preds = %12236, %12279
  %12280 = phi i64 [ %12295, %12279 ], [ 0, %12236 ]
  %12281 = phi <4 x i64> [ %12296, %12279 ], [ <i64 0, i64 1, i64 2, i64 3>, %12236 ]
  %12282 = trunc <4 x i64> %12281 to <4 x i32>
  %12283 = add <4 x i32> %12282, <i32 1, i32 1, i32 1, i32 1>
  %12284 = sitofp <4 x i32> %12283 to <4 x float>
  %12285 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12284
  %12286 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %12280
  %12287 = bitcast float* %12286 to <4 x float>*
  store <4 x float> %12285, <4 x float>* %12287, align 16, !tbaa !2
  %12288 = or i64 %12280, 4
  %12289 = trunc <4 x i64> %12281 to <4 x i32>
  %12290 = add <4 x i32> %12289, <i32 5, i32 5, i32 5, i32 5>
  %12291 = sitofp <4 x i32> %12290 to <4 x float>
  %12292 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12291
  %12293 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %12288
  %12294 = bitcast float* %12293 to <4 x float>*
  store <4 x float> %12292, <4 x float>* %12294, align 16, !tbaa !2
  %12295 = add nuw nsw i64 %12280, 8
  %12296 = add <4 x i64> %12281, <i64 8, i64 8, i64 8, i64 8>
  %12297 = icmp eq i64 %12295, 32000
  br i1 %12297, label %12298, label %12279, !llvm.loop !233

12298:                                            ; preds = %12279, %12298
  %12299 = phi i64 [ %12314, %12298 ], [ 0, %12279 ]
  %12300 = phi <4 x i64> [ %12315, %12298 ], [ <i64 0, i64 1, i64 2, i64 3>, %12279 ]
  %12301 = trunc <4 x i64> %12300 to <4 x i32>
  %12302 = add <4 x i32> %12301, <i32 1, i32 1, i32 1, i32 1>
  %12303 = sitofp <4 x i32> %12302 to <4 x float>
  %12304 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12303
  %12305 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %12299
  %12306 = bitcast float* %12305 to <4 x float>*
  store <4 x float> %12304, <4 x float>* %12306, align 16, !tbaa !2
  %12307 = or i64 %12299, 4
  %12308 = trunc <4 x i64> %12300 to <4 x i32>
  %12309 = add <4 x i32> %12308, <i32 5, i32 5, i32 5, i32 5>
  %12310 = sitofp <4 x i32> %12309 to <4 x float>
  %12311 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12310
  %12312 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %12307
  %12313 = bitcast float* %12312 to <4 x float>*
  store <4 x float> %12311, <4 x float>* %12313, align 16, !tbaa !2
  %12314 = add nuw nsw i64 %12299, 8
  %12315 = add <4 x i64> %12300, <i64 8, i64 8, i64 8, i64 8>
  %12316 = icmp eq i64 %12314, 32000
  br i1 %12316, label %15603, label %12298, !llvm.loop !234

12317:                                            ; preds = %12189
  %12318 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i64 0, i64 0)) #15
  %12319 = icmp eq i32 %12318, 0
  br i1 %12319, label %12320, label %12730

12320:                                            ; preds = %12317, %12320
  %12321 = phi i64 [ %12450, %12320 ], [ 0, %12317 ]
  %12322 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 0
  %12323 = bitcast float* %12322 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12323, align 16, !tbaa !2
  %12324 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 4
  %12325 = bitcast float* %12324 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12325, align 16, !tbaa !2
  %12326 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 8
  %12327 = bitcast float* %12326 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12327, align 16, !tbaa !2
  %12328 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 12
  %12329 = bitcast float* %12328 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12329, align 16, !tbaa !2
  %12330 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 16
  %12331 = bitcast float* %12330 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12331, align 16, !tbaa !2
  %12332 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 20
  %12333 = bitcast float* %12332 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12333, align 16, !tbaa !2
  %12334 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 24
  %12335 = bitcast float* %12334 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12335, align 16, !tbaa !2
  %12336 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 28
  %12337 = bitcast float* %12336 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12337, align 16, !tbaa !2
  %12338 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 32
  %12339 = bitcast float* %12338 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12339, align 16, !tbaa !2
  %12340 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 36
  %12341 = bitcast float* %12340 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12341, align 16, !tbaa !2
  %12342 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 40
  %12343 = bitcast float* %12342 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12343, align 16, !tbaa !2
  %12344 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 44
  %12345 = bitcast float* %12344 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12345, align 16, !tbaa !2
  %12346 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 48
  %12347 = bitcast float* %12346 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12347, align 16, !tbaa !2
  %12348 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 52
  %12349 = bitcast float* %12348 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12349, align 16, !tbaa !2
  %12350 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 56
  %12351 = bitcast float* %12350 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12351, align 16, !tbaa !2
  %12352 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 60
  %12353 = bitcast float* %12352 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12353, align 16, !tbaa !2
  %12354 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 64
  %12355 = bitcast float* %12354 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12355, align 16, !tbaa !2
  %12356 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 68
  %12357 = bitcast float* %12356 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12357, align 16, !tbaa !2
  %12358 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 72
  %12359 = bitcast float* %12358 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12359, align 16, !tbaa !2
  %12360 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 76
  %12361 = bitcast float* %12360 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12361, align 16, !tbaa !2
  %12362 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 80
  %12363 = bitcast float* %12362 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12363, align 16, !tbaa !2
  %12364 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 84
  %12365 = bitcast float* %12364 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12365, align 16, !tbaa !2
  %12366 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 88
  %12367 = bitcast float* %12366 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12367, align 16, !tbaa !2
  %12368 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 92
  %12369 = bitcast float* %12368 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12369, align 16, !tbaa !2
  %12370 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 96
  %12371 = bitcast float* %12370 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12371, align 16, !tbaa !2
  %12372 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 100
  %12373 = bitcast float* %12372 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12373, align 16, !tbaa !2
  %12374 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 104
  %12375 = bitcast float* %12374 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12375, align 16, !tbaa !2
  %12376 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 108
  %12377 = bitcast float* %12376 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12377, align 16, !tbaa !2
  %12378 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 112
  %12379 = bitcast float* %12378 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12379, align 16, !tbaa !2
  %12380 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 116
  %12381 = bitcast float* %12380 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12381, align 16, !tbaa !2
  %12382 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 120
  %12383 = bitcast float* %12382 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12383, align 16, !tbaa !2
  %12384 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 124
  %12385 = bitcast float* %12384 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12385, align 16, !tbaa !2
  %12386 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 128
  %12387 = bitcast float* %12386 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12387, align 16, !tbaa !2
  %12388 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 132
  %12389 = bitcast float* %12388 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12389, align 16, !tbaa !2
  %12390 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 136
  %12391 = bitcast float* %12390 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12391, align 16, !tbaa !2
  %12392 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 140
  %12393 = bitcast float* %12392 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12393, align 16, !tbaa !2
  %12394 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 144
  %12395 = bitcast float* %12394 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12395, align 16, !tbaa !2
  %12396 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 148
  %12397 = bitcast float* %12396 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12397, align 16, !tbaa !2
  %12398 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 152
  %12399 = bitcast float* %12398 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12399, align 16, !tbaa !2
  %12400 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 156
  %12401 = bitcast float* %12400 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12401, align 16, !tbaa !2
  %12402 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 160
  %12403 = bitcast float* %12402 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12403, align 16, !tbaa !2
  %12404 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 164
  %12405 = bitcast float* %12404 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12405, align 16, !tbaa !2
  %12406 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 168
  %12407 = bitcast float* %12406 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12407, align 16, !tbaa !2
  %12408 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 172
  %12409 = bitcast float* %12408 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12409, align 16, !tbaa !2
  %12410 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 176
  %12411 = bitcast float* %12410 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12411, align 16, !tbaa !2
  %12412 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 180
  %12413 = bitcast float* %12412 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12413, align 16, !tbaa !2
  %12414 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 184
  %12415 = bitcast float* %12414 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12415, align 16, !tbaa !2
  %12416 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 188
  %12417 = bitcast float* %12416 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12417, align 16, !tbaa !2
  %12418 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 192
  %12419 = bitcast float* %12418 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12419, align 16, !tbaa !2
  %12420 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 196
  %12421 = bitcast float* %12420 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12421, align 16, !tbaa !2
  %12422 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 200
  %12423 = bitcast float* %12422 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12423, align 16, !tbaa !2
  %12424 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 204
  %12425 = bitcast float* %12424 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12425, align 16, !tbaa !2
  %12426 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 208
  %12427 = bitcast float* %12426 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12427, align 16, !tbaa !2
  %12428 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 212
  %12429 = bitcast float* %12428 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12429, align 16, !tbaa !2
  %12430 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 216
  %12431 = bitcast float* %12430 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12431, align 16, !tbaa !2
  %12432 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 220
  %12433 = bitcast float* %12432 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12433, align 16, !tbaa !2
  %12434 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 224
  %12435 = bitcast float* %12434 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12435, align 16, !tbaa !2
  %12436 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 228
  %12437 = bitcast float* %12436 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12437, align 16, !tbaa !2
  %12438 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 232
  %12439 = bitcast float* %12438 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12439, align 16, !tbaa !2
  %12440 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 236
  %12441 = bitcast float* %12440 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12441, align 16, !tbaa !2
  %12442 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 240
  %12443 = bitcast float* %12442 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12443, align 16, !tbaa !2
  %12444 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 244
  %12445 = bitcast float* %12444 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12445, align 16, !tbaa !2
  %12446 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 248
  %12447 = bitcast float* %12446 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12447, align 16, !tbaa !2
  %12448 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12321, i64 252
  %12449 = bitcast float* %12448 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12449, align 16, !tbaa !2
  %12450 = add nuw nsw i64 %12321, 1
  %12451 = icmp eq i64 %12450, 256
  br i1 %12451, label %12452, label %12320

12452:                                            ; preds = %12320, %12452
  %12453 = phi i64 [ %12454, %12452 ], [ 0, %12320 ]
  %12454 = add nuw nsw i64 %12453, 1
  %12455 = trunc i64 %12454 to i32
  %12456 = sitofp i32 %12455 to float
  %12457 = fdiv float 1.000000e+00, %12456
  %12458 = insertelement <4 x float> undef, float %12457, i32 0
  %12459 = shufflevector <4 x float> %12458, <4 x float> undef, <4 x i32> zeroinitializer
  %12460 = insertelement <4 x float> undef, float %12457, i32 0
  %12461 = shufflevector <4 x float> %12460, <4 x float> undef, <4 x i32> zeroinitializer
  %12462 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 0
  %12463 = bitcast float* %12462 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12463, align 16, !tbaa !2
  %12464 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 4
  %12465 = bitcast float* %12464 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12465, align 16, !tbaa !2
  %12466 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 8
  %12467 = bitcast float* %12466 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12467, align 16, !tbaa !2
  %12468 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 12
  %12469 = bitcast float* %12468 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12469, align 16, !tbaa !2
  %12470 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 16
  %12471 = bitcast float* %12470 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12471, align 16, !tbaa !2
  %12472 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 20
  %12473 = bitcast float* %12472 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12473, align 16, !tbaa !2
  %12474 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 24
  %12475 = bitcast float* %12474 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12475, align 16, !tbaa !2
  %12476 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 28
  %12477 = bitcast float* %12476 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12477, align 16, !tbaa !2
  %12478 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 32
  %12479 = bitcast float* %12478 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12479, align 16, !tbaa !2
  %12480 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 36
  %12481 = bitcast float* %12480 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12481, align 16, !tbaa !2
  %12482 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 40
  %12483 = bitcast float* %12482 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12483, align 16, !tbaa !2
  %12484 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 44
  %12485 = bitcast float* %12484 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12485, align 16, !tbaa !2
  %12486 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 48
  %12487 = bitcast float* %12486 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12487, align 16, !tbaa !2
  %12488 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 52
  %12489 = bitcast float* %12488 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12489, align 16, !tbaa !2
  %12490 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 56
  %12491 = bitcast float* %12490 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12491, align 16, !tbaa !2
  %12492 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 60
  %12493 = bitcast float* %12492 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12493, align 16, !tbaa !2
  %12494 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 64
  %12495 = bitcast float* %12494 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12495, align 16, !tbaa !2
  %12496 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 68
  %12497 = bitcast float* %12496 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12497, align 16, !tbaa !2
  %12498 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 72
  %12499 = bitcast float* %12498 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12499, align 16, !tbaa !2
  %12500 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 76
  %12501 = bitcast float* %12500 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12501, align 16, !tbaa !2
  %12502 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 80
  %12503 = bitcast float* %12502 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12503, align 16, !tbaa !2
  %12504 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 84
  %12505 = bitcast float* %12504 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12505, align 16, !tbaa !2
  %12506 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 88
  %12507 = bitcast float* %12506 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12507, align 16, !tbaa !2
  %12508 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 92
  %12509 = bitcast float* %12508 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12509, align 16, !tbaa !2
  %12510 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 96
  %12511 = bitcast float* %12510 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12511, align 16, !tbaa !2
  %12512 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 100
  %12513 = bitcast float* %12512 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12513, align 16, !tbaa !2
  %12514 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 104
  %12515 = bitcast float* %12514 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12515, align 16, !tbaa !2
  %12516 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 108
  %12517 = bitcast float* %12516 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12517, align 16, !tbaa !2
  %12518 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 112
  %12519 = bitcast float* %12518 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12519, align 16, !tbaa !2
  %12520 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 116
  %12521 = bitcast float* %12520 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12521, align 16, !tbaa !2
  %12522 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 120
  %12523 = bitcast float* %12522 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12523, align 16, !tbaa !2
  %12524 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 124
  %12525 = bitcast float* %12524 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12525, align 16, !tbaa !2
  %12526 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 128
  %12527 = bitcast float* %12526 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12527, align 16, !tbaa !2
  %12528 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 132
  %12529 = bitcast float* %12528 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12529, align 16, !tbaa !2
  %12530 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 136
  %12531 = bitcast float* %12530 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12531, align 16, !tbaa !2
  %12532 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 140
  %12533 = bitcast float* %12532 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12533, align 16, !tbaa !2
  %12534 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 144
  %12535 = bitcast float* %12534 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12535, align 16, !tbaa !2
  %12536 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 148
  %12537 = bitcast float* %12536 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12537, align 16, !tbaa !2
  %12538 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 152
  %12539 = bitcast float* %12538 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12539, align 16, !tbaa !2
  %12540 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 156
  %12541 = bitcast float* %12540 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12541, align 16, !tbaa !2
  %12542 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 160
  %12543 = bitcast float* %12542 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12543, align 16, !tbaa !2
  %12544 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 164
  %12545 = bitcast float* %12544 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12545, align 16, !tbaa !2
  %12546 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 168
  %12547 = bitcast float* %12546 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12547, align 16, !tbaa !2
  %12548 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 172
  %12549 = bitcast float* %12548 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12549, align 16, !tbaa !2
  %12550 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 176
  %12551 = bitcast float* %12550 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12551, align 16, !tbaa !2
  %12552 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 180
  %12553 = bitcast float* %12552 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12553, align 16, !tbaa !2
  %12554 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 184
  %12555 = bitcast float* %12554 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12555, align 16, !tbaa !2
  %12556 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 188
  %12557 = bitcast float* %12556 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12557, align 16, !tbaa !2
  %12558 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 192
  %12559 = bitcast float* %12558 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12559, align 16, !tbaa !2
  %12560 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 196
  %12561 = bitcast float* %12560 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12561, align 16, !tbaa !2
  %12562 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 200
  %12563 = bitcast float* %12562 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12563, align 16, !tbaa !2
  %12564 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 204
  %12565 = bitcast float* %12564 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12565, align 16, !tbaa !2
  %12566 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 208
  %12567 = bitcast float* %12566 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12567, align 16, !tbaa !2
  %12568 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 212
  %12569 = bitcast float* %12568 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12569, align 16, !tbaa !2
  %12570 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 216
  %12571 = bitcast float* %12570 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12571, align 16, !tbaa !2
  %12572 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 220
  %12573 = bitcast float* %12572 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12573, align 16, !tbaa !2
  %12574 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 224
  %12575 = bitcast float* %12574 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12575, align 16, !tbaa !2
  %12576 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 228
  %12577 = bitcast float* %12576 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12577, align 16, !tbaa !2
  %12578 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 232
  %12579 = bitcast float* %12578 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12579, align 16, !tbaa !2
  %12580 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 236
  %12581 = bitcast float* %12580 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12581, align 16, !tbaa !2
  %12582 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 240
  %12583 = bitcast float* %12582 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12583, align 16, !tbaa !2
  %12584 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 244
  %12585 = bitcast float* %12584 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12585, align 16, !tbaa !2
  %12586 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 248
  %12587 = bitcast float* %12586 to <4 x float>*
  store <4 x float> %12459, <4 x float>* %12587, align 16, !tbaa !2
  %12588 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12453, i64 252
  %12589 = bitcast float* %12588 to <4 x float>*
  store <4 x float> %12461, <4 x float>* %12589, align 16, !tbaa !2
  %12590 = icmp eq i64 %12454, 256
  br i1 %12590, label %12591, label %12452

12591:                                            ; preds = %12452, %12591
  %12592 = phi i64 [ %12593, %12591 ], [ 0, %12452 ]
  %12593 = add nuw nsw i64 %12592, 1
  %12594 = trunc i64 %12593 to i32
  %12595 = sitofp i32 %12594 to float
  %12596 = fdiv float 1.000000e+00, %12595
  %12597 = insertelement <4 x float> undef, float %12596, i32 0
  %12598 = shufflevector <4 x float> %12597, <4 x float> undef, <4 x i32> zeroinitializer
  %12599 = insertelement <4 x float> undef, float %12596, i32 0
  %12600 = shufflevector <4 x float> %12599, <4 x float> undef, <4 x i32> zeroinitializer
  %12601 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 0
  %12602 = bitcast float* %12601 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12602, align 16, !tbaa !2
  %12603 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 4
  %12604 = bitcast float* %12603 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12604, align 16, !tbaa !2
  %12605 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 8
  %12606 = bitcast float* %12605 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12606, align 16, !tbaa !2
  %12607 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 12
  %12608 = bitcast float* %12607 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12608, align 16, !tbaa !2
  %12609 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 16
  %12610 = bitcast float* %12609 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12610, align 16, !tbaa !2
  %12611 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 20
  %12612 = bitcast float* %12611 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12612, align 16, !tbaa !2
  %12613 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 24
  %12614 = bitcast float* %12613 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12614, align 16, !tbaa !2
  %12615 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 28
  %12616 = bitcast float* %12615 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12616, align 16, !tbaa !2
  %12617 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 32
  %12618 = bitcast float* %12617 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12618, align 16, !tbaa !2
  %12619 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 36
  %12620 = bitcast float* %12619 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12620, align 16, !tbaa !2
  %12621 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 40
  %12622 = bitcast float* %12621 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12622, align 16, !tbaa !2
  %12623 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 44
  %12624 = bitcast float* %12623 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12624, align 16, !tbaa !2
  %12625 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 48
  %12626 = bitcast float* %12625 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12626, align 16, !tbaa !2
  %12627 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 52
  %12628 = bitcast float* %12627 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12628, align 16, !tbaa !2
  %12629 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 56
  %12630 = bitcast float* %12629 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12630, align 16, !tbaa !2
  %12631 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 60
  %12632 = bitcast float* %12631 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12632, align 16, !tbaa !2
  %12633 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 64
  %12634 = bitcast float* %12633 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12634, align 16, !tbaa !2
  %12635 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 68
  %12636 = bitcast float* %12635 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12636, align 16, !tbaa !2
  %12637 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 72
  %12638 = bitcast float* %12637 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12638, align 16, !tbaa !2
  %12639 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 76
  %12640 = bitcast float* %12639 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12640, align 16, !tbaa !2
  %12641 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 80
  %12642 = bitcast float* %12641 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12642, align 16, !tbaa !2
  %12643 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 84
  %12644 = bitcast float* %12643 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12644, align 16, !tbaa !2
  %12645 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 88
  %12646 = bitcast float* %12645 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12646, align 16, !tbaa !2
  %12647 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 92
  %12648 = bitcast float* %12647 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12648, align 16, !tbaa !2
  %12649 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 96
  %12650 = bitcast float* %12649 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12650, align 16, !tbaa !2
  %12651 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 100
  %12652 = bitcast float* %12651 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12652, align 16, !tbaa !2
  %12653 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 104
  %12654 = bitcast float* %12653 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12654, align 16, !tbaa !2
  %12655 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 108
  %12656 = bitcast float* %12655 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12656, align 16, !tbaa !2
  %12657 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 112
  %12658 = bitcast float* %12657 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12658, align 16, !tbaa !2
  %12659 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 116
  %12660 = bitcast float* %12659 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12660, align 16, !tbaa !2
  %12661 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 120
  %12662 = bitcast float* %12661 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12662, align 16, !tbaa !2
  %12663 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 124
  %12664 = bitcast float* %12663 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12664, align 16, !tbaa !2
  %12665 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 128
  %12666 = bitcast float* %12665 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12666, align 16, !tbaa !2
  %12667 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 132
  %12668 = bitcast float* %12667 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12668, align 16, !tbaa !2
  %12669 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 136
  %12670 = bitcast float* %12669 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12670, align 16, !tbaa !2
  %12671 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 140
  %12672 = bitcast float* %12671 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12672, align 16, !tbaa !2
  %12673 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 144
  %12674 = bitcast float* %12673 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12674, align 16, !tbaa !2
  %12675 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 148
  %12676 = bitcast float* %12675 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12676, align 16, !tbaa !2
  %12677 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 152
  %12678 = bitcast float* %12677 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12678, align 16, !tbaa !2
  %12679 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 156
  %12680 = bitcast float* %12679 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12680, align 16, !tbaa !2
  %12681 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 160
  %12682 = bitcast float* %12681 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12682, align 16, !tbaa !2
  %12683 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 164
  %12684 = bitcast float* %12683 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12684, align 16, !tbaa !2
  %12685 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 168
  %12686 = bitcast float* %12685 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12686, align 16, !tbaa !2
  %12687 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 172
  %12688 = bitcast float* %12687 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12688, align 16, !tbaa !2
  %12689 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 176
  %12690 = bitcast float* %12689 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12690, align 16, !tbaa !2
  %12691 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 180
  %12692 = bitcast float* %12691 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12692, align 16, !tbaa !2
  %12693 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 184
  %12694 = bitcast float* %12693 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12694, align 16, !tbaa !2
  %12695 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 188
  %12696 = bitcast float* %12695 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12696, align 16, !tbaa !2
  %12697 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 192
  %12698 = bitcast float* %12697 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12698, align 16, !tbaa !2
  %12699 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 196
  %12700 = bitcast float* %12699 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12700, align 16, !tbaa !2
  %12701 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 200
  %12702 = bitcast float* %12701 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12702, align 16, !tbaa !2
  %12703 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 204
  %12704 = bitcast float* %12703 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12704, align 16, !tbaa !2
  %12705 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 208
  %12706 = bitcast float* %12705 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12706, align 16, !tbaa !2
  %12707 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 212
  %12708 = bitcast float* %12707 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12708, align 16, !tbaa !2
  %12709 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 216
  %12710 = bitcast float* %12709 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12710, align 16, !tbaa !2
  %12711 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 220
  %12712 = bitcast float* %12711 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12712, align 16, !tbaa !2
  %12713 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 224
  %12714 = bitcast float* %12713 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12714, align 16, !tbaa !2
  %12715 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 228
  %12716 = bitcast float* %12715 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12716, align 16, !tbaa !2
  %12717 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 232
  %12718 = bitcast float* %12717 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12718, align 16, !tbaa !2
  %12719 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 236
  %12720 = bitcast float* %12719 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12720, align 16, !tbaa !2
  %12721 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 240
  %12722 = bitcast float* %12721 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12722, align 16, !tbaa !2
  %12723 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 244
  %12724 = bitcast float* %12723 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12724, align 16, !tbaa !2
  %12725 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 248
  %12726 = bitcast float* %12725 to <4 x float>*
  store <4 x float> %12598, <4 x float>* %12726, align 16, !tbaa !2
  %12727 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %12592, i64 252
  %12728 = bitcast float* %12727 to <4 x float>*
  store <4 x float> %12600, <4 x float>* %12728, align 16, !tbaa !2
  %12729 = icmp eq i64 %12593, 256
  br i1 %12729, label %15603, label %12591

12730:                                            ; preds = %12317
  %12731 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0)) #15
  %12732 = icmp eq i32 %12731, 0
  br i1 %12732, label %12733, label %12815

12733:                                            ; preds = %12730, %12733
  %12734 = phi i64 [ %12774, %12733 ], [ 0, %12730 ]
  %12735 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12734
  %12736 = bitcast float* %12735 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12736, align 16, !tbaa !2
  %12737 = getelementptr inbounds float, float* %12735, i64 4
  %12738 = bitcast float* %12737 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12738, align 16, !tbaa !2
  %12739 = or i64 %12734, 8
  %12740 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12739
  %12741 = bitcast float* %12740 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12741, align 16, !tbaa !2
  %12742 = getelementptr inbounds float, float* %12740, i64 4
  %12743 = bitcast float* %12742 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12743, align 16, !tbaa !2
  %12744 = or i64 %12734, 16
  %12745 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12744
  %12746 = bitcast float* %12745 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12746, align 16, !tbaa !2
  %12747 = getelementptr inbounds float, float* %12745, i64 4
  %12748 = bitcast float* %12747 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12748, align 16, !tbaa !2
  %12749 = or i64 %12734, 24
  %12750 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12749
  %12751 = bitcast float* %12750 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12751, align 16, !tbaa !2
  %12752 = getelementptr inbounds float, float* %12750, i64 4
  %12753 = bitcast float* %12752 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12753, align 16, !tbaa !2
  %12754 = or i64 %12734, 32
  %12755 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12754
  %12756 = bitcast float* %12755 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12756, align 16, !tbaa !2
  %12757 = getelementptr inbounds float, float* %12755, i64 4
  %12758 = bitcast float* %12757 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12758, align 16, !tbaa !2
  %12759 = or i64 %12734, 40
  %12760 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12759
  %12761 = bitcast float* %12760 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12761, align 16, !tbaa !2
  %12762 = getelementptr inbounds float, float* %12760, i64 4
  %12763 = bitcast float* %12762 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12763, align 16, !tbaa !2
  %12764 = or i64 %12734, 48
  %12765 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12764
  %12766 = bitcast float* %12765 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12766, align 16, !tbaa !2
  %12767 = getelementptr inbounds float, float* %12765, i64 4
  %12768 = bitcast float* %12767 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12768, align 16, !tbaa !2
  %12769 = or i64 %12734, 56
  %12770 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12769
  %12771 = bitcast float* %12770 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12771, align 16, !tbaa !2
  %12772 = getelementptr inbounds float, float* %12770, i64 4
  %12773 = bitcast float* %12772 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12773, align 16, !tbaa !2
  %12774 = add nuw nsw i64 %12734, 64
  %12775 = icmp eq i64 %12774, 32000
  br i1 %12775, label %12776, label %12733, !llvm.loop !235

12776:                                            ; preds = %12733, %12776
  %12777 = phi i64 [ %12792, %12776 ], [ 0, %12733 ]
  %12778 = phi <4 x i64> [ %12793, %12776 ], [ <i64 0, i64 1, i64 2, i64 3>, %12733 ]
  %12779 = trunc <4 x i64> %12778 to <4 x i32>
  %12780 = add <4 x i32> %12779, <i32 1, i32 1, i32 1, i32 1>
  %12781 = sitofp <4 x i32> %12780 to <4 x float>
  %12782 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12781
  %12783 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12777
  %12784 = bitcast float* %12783 to <4 x float>*
  store <4 x float> %12782, <4 x float>* %12784, align 16, !tbaa !2
  %12785 = or i64 %12777, 4
  %12786 = trunc <4 x i64> %12778 to <4 x i32>
  %12787 = add <4 x i32> %12786, <i32 5, i32 5, i32 5, i32 5>
  %12788 = sitofp <4 x i32> %12787 to <4 x float>
  %12789 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12788
  %12790 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12785
  %12791 = bitcast float* %12790 to <4 x float>*
  store <4 x float> %12789, <4 x float>* %12791, align 16, !tbaa !2
  %12792 = add nuw nsw i64 %12777, 8
  %12793 = add <4 x i64> %12778, <i64 8, i64 8, i64 8, i64 8>
  %12794 = icmp eq i64 %12792, 32000
  br i1 %12794, label %12795, label %12776, !llvm.loop !236

12795:                                            ; preds = %12776, %12795
  %12796 = phi i64 [ %12811, %12795 ], [ 0, %12776 ]
  %12797 = phi <4 x i64> [ %12812, %12795 ], [ <i64 0, i64 1, i64 2, i64 3>, %12776 ]
  %12798 = trunc <4 x i64> %12797 to <4 x i32>
  %12799 = add <4 x i32> %12798, <i32 1, i32 1, i32 1, i32 1>
  %12800 = sitofp <4 x i32> %12799 to <4 x float>
  %12801 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12800
  %12802 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12796
  %12803 = bitcast float* %12802 to <4 x float>*
  store <4 x float> %12801, <4 x float>* %12803, align 16, !tbaa !2
  %12804 = or i64 %12796, 4
  %12805 = trunc <4 x i64> %12797 to <4 x i32>
  %12806 = add <4 x i32> %12805, <i32 5, i32 5, i32 5, i32 5>
  %12807 = sitofp <4 x i32> %12806 to <4 x float>
  %12808 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12807
  %12809 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12804
  %12810 = bitcast float* %12809 to <4 x float>*
  store <4 x float> %12808, <4 x float>* %12810, align 16, !tbaa !2
  %12811 = add nuw nsw i64 %12796, 8
  %12812 = add <4 x i64> %12797, <i64 8, i64 8, i64 8, i64 8>
  %12813 = icmp eq i64 %12811, 32000
  br i1 %12813, label %12814, label %12795, !llvm.loop !237

12814:                                            ; preds = %12795
  store float -1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  br label %15603

12815:                                            ; preds = %12730
  %12816 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0)) #15
  %12817 = icmp eq i32 %12816, 0
  br i1 %12817, label %12818, label %12839

12818:                                            ; preds = %12815, %12818
  %12819 = phi i64 [ %12836, %12818 ], [ 0, %12815 ]
  %12820 = phi <4 x i64> [ %12837, %12818 ], [ <i64 0, i64 1, i64 2, i64 3>, %12815 ]
  %12821 = add nuw nsw <4 x i64> %12820, <i64 1, i64 1, i64 1, i64 1>
  %12822 = mul nuw nsw <4 x i64> %12821, %12821
  %12823 = trunc <4 x i64> %12822 to <4 x i32>
  %12824 = sitofp <4 x i32> %12823 to <4 x float>
  %12825 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12824
  %12826 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12819
  %12827 = bitcast float* %12826 to <4 x float>*
  store <4 x float> %12825, <4 x float>* %12827, align 16, !tbaa !2
  %12828 = or i64 %12819, 4
  %12829 = add <4 x i64> %12820, <i64 5, i64 5, i64 5, i64 5>
  %12830 = mul nuw nsw <4 x i64> %12829, %12829
  %12831 = trunc <4 x i64> %12830 to <4 x i32>
  %12832 = sitofp <4 x i32> %12831 to <4 x float>
  %12833 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12832
  %12834 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12828
  %12835 = bitcast float* %12834 to <4 x float>*
  store <4 x float> %12833, <4 x float>* %12835, align 16, !tbaa !2
  %12836 = add nuw nsw i64 %12819, 8
  %12837 = add <4 x i64> %12820, <i64 8, i64 8, i64 8, i64 8>
  %12838 = icmp eq i64 %12836, 32000
  br i1 %12838, label %15603, label %12818, !llvm.loop !238

12839:                                            ; preds = %12815
  %12840 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0)) #15
  %12841 = icmp eq i32 %12840, 0
  br i1 %12841, label %12842, label %12906

12842:                                            ; preds = %12839, %12842
  %12843 = phi i64 [ %12883, %12842 ], [ 0, %12839 ]
  %12844 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12843
  %12845 = bitcast float* %12844 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12845, align 16, !tbaa !2
  %12846 = getelementptr inbounds float, float* %12844, i64 4
  %12847 = bitcast float* %12846 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12847, align 16, !tbaa !2
  %12848 = or i64 %12843, 8
  %12849 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12848
  %12850 = bitcast float* %12849 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12850, align 16, !tbaa !2
  %12851 = getelementptr inbounds float, float* %12849, i64 4
  %12852 = bitcast float* %12851 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12852, align 16, !tbaa !2
  %12853 = or i64 %12843, 16
  %12854 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12853
  %12855 = bitcast float* %12854 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12855, align 16, !tbaa !2
  %12856 = getelementptr inbounds float, float* %12854, i64 4
  %12857 = bitcast float* %12856 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12857, align 16, !tbaa !2
  %12858 = or i64 %12843, 24
  %12859 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12858
  %12860 = bitcast float* %12859 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12860, align 16, !tbaa !2
  %12861 = getelementptr inbounds float, float* %12859, i64 4
  %12862 = bitcast float* %12861 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12862, align 16, !tbaa !2
  %12863 = or i64 %12843, 32
  %12864 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12863
  %12865 = bitcast float* %12864 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12865, align 16, !tbaa !2
  %12866 = getelementptr inbounds float, float* %12864, i64 4
  %12867 = bitcast float* %12866 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12867, align 16, !tbaa !2
  %12868 = or i64 %12843, 40
  %12869 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12868
  %12870 = bitcast float* %12869 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12870, align 16, !tbaa !2
  %12871 = getelementptr inbounds float, float* %12869, i64 4
  %12872 = bitcast float* %12871 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12872, align 16, !tbaa !2
  %12873 = or i64 %12843, 48
  %12874 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12873
  %12875 = bitcast float* %12874 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12875, align 16, !tbaa !2
  %12876 = getelementptr inbounds float, float* %12874, i64 4
  %12877 = bitcast float* %12876 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12877, align 16, !tbaa !2
  %12878 = or i64 %12843, 56
  %12879 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12878
  %12880 = bitcast float* %12879 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12880, align 16, !tbaa !2
  %12881 = getelementptr inbounds float, float* %12879, i64 4
  %12882 = bitcast float* %12881 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12882, align 16, !tbaa !2
  %12883 = add nuw nsw i64 %12843, 64
  %12884 = icmp eq i64 %12883, 32000
  br i1 %12884, label %12885, label %12842, !llvm.loop !239

12885:                                            ; preds = %12842, %12885
  %12886 = phi i64 [ %12903, %12885 ], [ 0, %12842 ]
  %12887 = phi <4 x i64> [ %12904, %12885 ], [ <i64 0, i64 1, i64 2, i64 3>, %12842 ]
  %12888 = add nuw nsw <4 x i64> %12887, <i64 1, i64 1, i64 1, i64 1>
  %12889 = mul nuw nsw <4 x i64> %12888, %12888
  %12890 = trunc <4 x i64> %12889 to <4 x i32>
  %12891 = sitofp <4 x i32> %12890 to <4 x float>
  %12892 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12891
  %12893 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12886
  %12894 = bitcast float* %12893 to <4 x float>*
  store <4 x float> %12892, <4 x float>* %12894, align 16, !tbaa !2
  %12895 = or i64 %12886, 4
  %12896 = add <4 x i64> %12887, <i64 5, i64 5, i64 5, i64 5>
  %12897 = mul nuw nsw <4 x i64> %12896, %12896
  %12898 = trunc <4 x i64> %12897 to <4 x i32>
  %12899 = sitofp <4 x i32> %12898 to <4 x float>
  %12900 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12899
  %12901 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12895
  %12902 = bitcast float* %12901 to <4 x float>*
  store <4 x float> %12900, <4 x float>* %12902, align 16, !tbaa !2
  %12903 = add nuw nsw i64 %12886, 8
  %12904 = add <4 x i64> %12887, <i64 8, i64 8, i64 8, i64 8>
  %12905 = icmp eq i64 %12903, 32000
  br i1 %12905, label %15603, label %12885, !llvm.loop !240

12906:                                            ; preds = %12839
  %12907 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0)) #15
  %12908 = icmp eq i32 %12907, 0
  br i1 %12908, label %12909, label %12931

12909:                                            ; preds = %12906
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([65536 x float]* @array to i8*), i8 0, i64 128000, i1 false)
  br label %12910

12910:                                            ; preds = %12910, %12909
  %12911 = phi i64 [ 0, %12909 ], [ %12928, %12910 ]
  %12912 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %12909 ], [ %12929, %12910 ]
  %12913 = add nuw nsw <4 x i64> %12912, <i64 1, i64 1, i64 1, i64 1>
  %12914 = mul nuw nsw <4 x i64> %12913, %12913
  %12915 = trunc <4 x i64> %12914 to <4 x i32>
  %12916 = sitofp <4 x i32> %12915 to <4 x float>
  %12917 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12916
  %12918 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12911
  %12919 = bitcast float* %12918 to <4 x float>*
  store <4 x float> %12917, <4 x float>* %12919, align 16, !tbaa !2
  %12920 = or i64 %12911, 4
  %12921 = add <4 x i64> %12912, <i64 5, i64 5, i64 5, i64 5>
  %12922 = mul nuw nsw <4 x i64> %12921, %12921
  %12923 = trunc <4 x i64> %12922 to <4 x i32>
  %12924 = sitofp <4 x i32> %12923 to <4 x float>
  %12925 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12924
  %12926 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12920
  %12927 = bitcast float* %12926 to <4 x float>*
  store <4 x float> %12925, <4 x float>* %12927, align 16, !tbaa !2
  %12928 = add nuw nsw i64 %12911, 8
  %12929 = add <4 x i64> %12912, <i64 8, i64 8, i64 8, i64 8>
  %12930 = icmp eq i64 %12928, 32000
  br i1 %12930, label %15603, label %12910, !llvm.loop !241

12931:                                            ; preds = %12906
  %12932 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0)) #15
  %12933 = icmp eq i32 %12932, 0
  br i1 %12933, label %12934, label %12998

12934:                                            ; preds = %12931, %12934
  %12935 = phi i64 [ %12975, %12934 ], [ 0, %12931 ]
  %12936 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12935
  %12937 = bitcast float* %12936 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12937, align 16, !tbaa !2
  %12938 = getelementptr inbounds float, float* %12936, i64 4
  %12939 = bitcast float* %12938 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12939, align 16, !tbaa !2
  %12940 = or i64 %12935, 8
  %12941 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12940
  %12942 = bitcast float* %12941 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12942, align 16, !tbaa !2
  %12943 = getelementptr inbounds float, float* %12941, i64 4
  %12944 = bitcast float* %12943 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12944, align 16, !tbaa !2
  %12945 = or i64 %12935, 16
  %12946 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12945
  %12947 = bitcast float* %12946 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12947, align 16, !tbaa !2
  %12948 = getelementptr inbounds float, float* %12946, i64 4
  %12949 = bitcast float* %12948 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12949, align 16, !tbaa !2
  %12950 = or i64 %12935, 24
  %12951 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12950
  %12952 = bitcast float* %12951 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12952, align 16, !tbaa !2
  %12953 = getelementptr inbounds float, float* %12951, i64 4
  %12954 = bitcast float* %12953 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12954, align 16, !tbaa !2
  %12955 = or i64 %12935, 32
  %12956 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12955
  %12957 = bitcast float* %12956 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12957, align 16, !tbaa !2
  %12958 = getelementptr inbounds float, float* %12956, i64 4
  %12959 = bitcast float* %12958 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12959, align 16, !tbaa !2
  %12960 = or i64 %12935, 40
  %12961 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12960
  %12962 = bitcast float* %12961 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12962, align 16, !tbaa !2
  %12963 = getelementptr inbounds float, float* %12961, i64 4
  %12964 = bitcast float* %12963 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12964, align 16, !tbaa !2
  %12965 = or i64 %12935, 48
  %12966 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12965
  %12967 = bitcast float* %12966 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12967, align 16, !tbaa !2
  %12968 = getelementptr inbounds float, float* %12966, i64 4
  %12969 = bitcast float* %12968 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12969, align 16, !tbaa !2
  %12970 = or i64 %12935, 56
  %12971 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12970
  %12972 = bitcast float* %12971 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12972, align 16, !tbaa !2
  %12973 = getelementptr inbounds float, float* %12971, i64 4
  %12974 = bitcast float* %12973 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12974, align 16, !tbaa !2
  %12975 = add nuw nsw i64 %12935, 64
  %12976 = icmp eq i64 %12975, 32000
  br i1 %12976, label %12977, label %12934, !llvm.loop !242

12977:                                            ; preds = %12934, %12977
  %12978 = phi i64 [ %12995, %12977 ], [ 0, %12934 ]
  %12979 = phi <4 x i64> [ %12996, %12977 ], [ <i64 0, i64 1, i64 2, i64 3>, %12934 ]
  %12980 = add nuw nsw <4 x i64> %12979, <i64 1, i64 1, i64 1, i64 1>
  %12981 = mul nuw nsw <4 x i64> %12980, %12980
  %12982 = trunc <4 x i64> %12981 to <4 x i32>
  %12983 = sitofp <4 x i32> %12982 to <4 x float>
  %12984 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12983
  %12985 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12978
  %12986 = bitcast float* %12985 to <4 x float>*
  store <4 x float> %12984, <4 x float>* %12986, align 16, !tbaa !2
  %12987 = or i64 %12978, 4
  %12988 = add <4 x i64> %12979, <i64 5, i64 5, i64 5, i64 5>
  %12989 = mul nuw nsw <4 x i64> %12988, %12988
  %12990 = trunc <4 x i64> %12989 to <4 x i32>
  %12991 = sitofp <4 x i32> %12990 to <4 x float>
  %12992 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %12991
  %12993 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12987
  %12994 = bitcast float* %12993 to <4 x float>*
  store <4 x float> %12992, <4 x float>* %12994, align 16, !tbaa !2
  %12995 = add nuw nsw i64 %12978, 8
  %12996 = add <4 x i64> %12979, <i64 8, i64 8, i64 8, i64 8>
  %12997 = icmp eq i64 %12995, 32000
  br i1 %12997, label %15603, label %12977, !llvm.loop !243

12998:                                            ; preds = %12931
  %12999 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #15
  %13000 = icmp eq i32 %12999, 0
  br i1 %13000, label %13001, label %13065

13001:                                            ; preds = %12998, %13001
  %13002 = phi i64 [ %13042, %13001 ], [ 0, %12998 ]
  %13003 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13002
  %13004 = bitcast float* %13003 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13004, align 16, !tbaa !2
  %13005 = getelementptr inbounds float, float* %13003, i64 4
  %13006 = bitcast float* %13005 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13006, align 16, !tbaa !2
  %13007 = or i64 %13002, 8
  %13008 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13007
  %13009 = bitcast float* %13008 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13009, align 16, !tbaa !2
  %13010 = getelementptr inbounds float, float* %13008, i64 4
  %13011 = bitcast float* %13010 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13011, align 16, !tbaa !2
  %13012 = or i64 %13002, 16
  %13013 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13012
  %13014 = bitcast float* %13013 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13014, align 16, !tbaa !2
  %13015 = getelementptr inbounds float, float* %13013, i64 4
  %13016 = bitcast float* %13015 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13016, align 16, !tbaa !2
  %13017 = or i64 %13002, 24
  %13018 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13017
  %13019 = bitcast float* %13018 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13019, align 16, !tbaa !2
  %13020 = getelementptr inbounds float, float* %13018, i64 4
  %13021 = bitcast float* %13020 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13021, align 16, !tbaa !2
  %13022 = or i64 %13002, 32
  %13023 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13022
  %13024 = bitcast float* %13023 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13024, align 16, !tbaa !2
  %13025 = getelementptr inbounds float, float* %13023, i64 4
  %13026 = bitcast float* %13025 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13026, align 16, !tbaa !2
  %13027 = or i64 %13002, 40
  %13028 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13027
  %13029 = bitcast float* %13028 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13029, align 16, !tbaa !2
  %13030 = getelementptr inbounds float, float* %13028, i64 4
  %13031 = bitcast float* %13030 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13031, align 16, !tbaa !2
  %13032 = or i64 %13002, 48
  %13033 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13032
  %13034 = bitcast float* %13033 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13034, align 16, !tbaa !2
  %13035 = getelementptr inbounds float, float* %13033, i64 4
  %13036 = bitcast float* %13035 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13036, align 16, !tbaa !2
  %13037 = or i64 %13002, 56
  %13038 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13037
  %13039 = bitcast float* %13038 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13039, align 16, !tbaa !2
  %13040 = getelementptr inbounds float, float* %13038, i64 4
  %13041 = bitcast float* %13040 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13041, align 16, !tbaa !2
  %13042 = add nuw nsw i64 %13002, 64
  %13043 = icmp eq i64 %13042, 32000
  br i1 %13043, label %13044, label %13001, !llvm.loop !244

13044:                                            ; preds = %13001, %13044
  %13045 = phi i64 [ %13062, %13044 ], [ 0, %13001 ]
  %13046 = phi <4 x i64> [ %13063, %13044 ], [ <i64 0, i64 1, i64 2, i64 3>, %13001 ]
  %13047 = add nuw nsw <4 x i64> %13046, <i64 1, i64 1, i64 1, i64 1>
  %13048 = mul nuw nsw <4 x i64> %13047, %13047
  %13049 = trunc <4 x i64> %13048 to <4 x i32>
  %13050 = sitofp <4 x i32> %13049 to <4 x float>
  %13051 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13050
  %13052 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13045
  %13053 = bitcast float* %13052 to <4 x float>*
  store <4 x float> %13051, <4 x float>* %13053, align 16, !tbaa !2
  %13054 = or i64 %13045, 4
  %13055 = add <4 x i64> %13046, <i64 5, i64 5, i64 5, i64 5>
  %13056 = mul nuw nsw <4 x i64> %13055, %13055
  %13057 = trunc <4 x i64> %13056 to <4 x i32>
  %13058 = sitofp <4 x i32> %13057 to <4 x float>
  %13059 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13058
  %13060 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13054
  %13061 = bitcast float* %13060 to <4 x float>*
  store <4 x float> %13059, <4 x float>* %13061, align 16, !tbaa !2
  %13062 = add nuw nsw i64 %13045, 8
  %13063 = add <4 x i64> %13046, <i64 8, i64 8, i64 8, i64 8>
  %13064 = icmp eq i64 %13062, 32000
  br i1 %13064, label %15603, label %13044, !llvm.loop !245

13065:                                            ; preds = %12998
  %13066 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i64 0, i64 0)) #15
  %13067 = icmp eq i32 %13066, 0
  br i1 %13067, label %13068, label %13132

13068:                                            ; preds = %13065, %13068
  %13069 = phi i64 [ %13109, %13068 ], [ 0, %13065 ]
  %13070 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13069
  %13071 = bitcast float* %13070 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13071, align 16, !tbaa !2
  %13072 = getelementptr inbounds float, float* %13070, i64 4
  %13073 = bitcast float* %13072 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13073, align 16, !tbaa !2
  %13074 = or i64 %13069, 8
  %13075 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13074
  %13076 = bitcast float* %13075 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13076, align 16, !tbaa !2
  %13077 = getelementptr inbounds float, float* %13075, i64 4
  %13078 = bitcast float* %13077 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13078, align 16, !tbaa !2
  %13079 = or i64 %13069, 16
  %13080 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13079
  %13081 = bitcast float* %13080 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13081, align 16, !tbaa !2
  %13082 = getelementptr inbounds float, float* %13080, i64 4
  %13083 = bitcast float* %13082 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13083, align 16, !tbaa !2
  %13084 = or i64 %13069, 24
  %13085 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13084
  %13086 = bitcast float* %13085 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13086, align 16, !tbaa !2
  %13087 = getelementptr inbounds float, float* %13085, i64 4
  %13088 = bitcast float* %13087 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13088, align 16, !tbaa !2
  %13089 = or i64 %13069, 32
  %13090 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13089
  %13091 = bitcast float* %13090 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13091, align 16, !tbaa !2
  %13092 = getelementptr inbounds float, float* %13090, i64 4
  %13093 = bitcast float* %13092 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13093, align 16, !tbaa !2
  %13094 = or i64 %13069, 40
  %13095 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13094
  %13096 = bitcast float* %13095 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13096, align 16, !tbaa !2
  %13097 = getelementptr inbounds float, float* %13095, i64 4
  %13098 = bitcast float* %13097 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13098, align 16, !tbaa !2
  %13099 = or i64 %13069, 48
  %13100 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13099
  %13101 = bitcast float* %13100 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13101, align 16, !tbaa !2
  %13102 = getelementptr inbounds float, float* %13100, i64 4
  %13103 = bitcast float* %13102 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13103, align 16, !tbaa !2
  %13104 = or i64 %13069, 56
  %13105 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13104
  %13106 = bitcast float* %13105 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13106, align 16, !tbaa !2
  %13107 = getelementptr inbounds float, float* %13105, i64 4
  %13108 = bitcast float* %13107 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13108, align 16, !tbaa !2
  %13109 = add nuw nsw i64 %13069, 64
  %13110 = icmp eq i64 %13109, 32000
  br i1 %13110, label %13111, label %13068, !llvm.loop !246

13111:                                            ; preds = %13068, %13111
  %13112 = phi i64 [ %13129, %13111 ], [ 0, %13068 ]
  %13113 = phi <4 x i64> [ %13130, %13111 ], [ <i64 0, i64 1, i64 2, i64 3>, %13068 ]
  %13114 = add nuw nsw <4 x i64> %13113, <i64 1, i64 1, i64 1, i64 1>
  %13115 = mul nuw nsw <4 x i64> %13114, %13114
  %13116 = trunc <4 x i64> %13115 to <4 x i32>
  %13117 = sitofp <4 x i32> %13116 to <4 x float>
  %13118 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13117
  %13119 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13112
  %13120 = bitcast float* %13119 to <4 x float>*
  store <4 x float> %13118, <4 x float>* %13120, align 16, !tbaa !2
  %13121 = or i64 %13112, 4
  %13122 = add <4 x i64> %13113, <i64 5, i64 5, i64 5, i64 5>
  %13123 = mul nuw nsw <4 x i64> %13122, %13122
  %13124 = trunc <4 x i64> %13123 to <4 x i32>
  %13125 = sitofp <4 x i32> %13124 to <4 x float>
  %13126 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13125
  %13127 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13121
  %13128 = bitcast float* %13127 to <4 x float>*
  store <4 x float> %13126, <4 x float>* %13128, align 16, !tbaa !2
  %13129 = add nuw nsw i64 %13112, 8
  %13130 = add <4 x i64> %13113, <i64 8, i64 8, i64 8, i64 8>
  %13131 = icmp eq i64 %13129, 32000
  br i1 %13131, label %15603, label %13111, !llvm.loop !247

13132:                                            ; preds = %13065
  %13133 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0)) #15
  %13134 = icmp eq i32 %13133, 0
  br i1 %13134, label %13135, label %13303

13135:                                            ; preds = %13132, %13135
  %13136 = phi i64 [ %13176, %13135 ], [ 0, %13132 ]
  %13137 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13136
  %13138 = bitcast float* %13137 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13138, align 16, !tbaa !2
  %13139 = getelementptr inbounds float, float* %13137, i64 4
  %13140 = bitcast float* %13139 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13140, align 16, !tbaa !2
  %13141 = or i64 %13136, 8
  %13142 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13141
  %13143 = bitcast float* %13142 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13143, align 16, !tbaa !2
  %13144 = getelementptr inbounds float, float* %13142, i64 4
  %13145 = bitcast float* %13144 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13145, align 16, !tbaa !2
  %13146 = or i64 %13136, 16
  %13147 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13146
  %13148 = bitcast float* %13147 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13148, align 16, !tbaa !2
  %13149 = getelementptr inbounds float, float* %13147, i64 4
  %13150 = bitcast float* %13149 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13150, align 16, !tbaa !2
  %13151 = or i64 %13136, 24
  %13152 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13151
  %13153 = bitcast float* %13152 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13153, align 16, !tbaa !2
  %13154 = getelementptr inbounds float, float* %13152, i64 4
  %13155 = bitcast float* %13154 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13155, align 16, !tbaa !2
  %13156 = or i64 %13136, 32
  %13157 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13156
  %13158 = bitcast float* %13157 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13158, align 16, !tbaa !2
  %13159 = getelementptr inbounds float, float* %13157, i64 4
  %13160 = bitcast float* %13159 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13160, align 16, !tbaa !2
  %13161 = or i64 %13136, 40
  %13162 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13161
  %13163 = bitcast float* %13162 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13163, align 16, !tbaa !2
  %13164 = getelementptr inbounds float, float* %13162, i64 4
  %13165 = bitcast float* %13164 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13165, align 16, !tbaa !2
  %13166 = or i64 %13136, 48
  %13167 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13166
  %13168 = bitcast float* %13167 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13168, align 16, !tbaa !2
  %13169 = getelementptr inbounds float, float* %13167, i64 4
  %13170 = bitcast float* %13169 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13170, align 16, !tbaa !2
  %13171 = or i64 %13136, 56
  %13172 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13171
  %13173 = bitcast float* %13172 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13173, align 16, !tbaa !2
  %13174 = getelementptr inbounds float, float* %13172, i64 4
  %13175 = bitcast float* %13174 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13175, align 16, !tbaa !2
  %13176 = add nuw nsw i64 %13136, 64
  %13177 = icmp eq i64 %13176, 32000
  br i1 %13177, label %13178, label %13135, !llvm.loop !248

13178:                                            ; preds = %13135, %13178
  %13179 = phi i64 [ %13194, %13178 ], [ 0, %13135 ]
  %13180 = phi <4 x i64> [ %13195, %13178 ], [ <i64 0, i64 1, i64 2, i64 3>, %13135 ]
  %13181 = trunc <4 x i64> %13180 to <4 x i32>
  %13182 = add <4 x i32> %13181, <i32 1, i32 1, i32 1, i32 1>
  %13183 = sitofp <4 x i32> %13182 to <4 x float>
  %13184 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13183
  %13185 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13179
  %13186 = bitcast float* %13185 to <4 x float>*
  store <4 x float> %13184, <4 x float>* %13186, align 16, !tbaa !2
  %13187 = or i64 %13179, 4
  %13188 = trunc <4 x i64> %13180 to <4 x i32>
  %13189 = add <4 x i32> %13188, <i32 5, i32 5, i32 5, i32 5>
  %13190 = sitofp <4 x i32> %13189 to <4 x float>
  %13191 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13190
  %13192 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13187
  %13193 = bitcast float* %13192 to <4 x float>*
  store <4 x float> %13191, <4 x float>* %13193, align 16, !tbaa !2
  %13194 = add nuw nsw i64 %13179, 8
  %13195 = add <4 x i64> %13180, <i64 8, i64 8, i64 8, i64 8>
  %13196 = icmp eq i64 %13194, 32000
  br i1 %13196, label %13197, label %13178, !llvm.loop !249

13197:                                            ; preds = %13178, %13197
  %13198 = phi i64 [ %13213, %13197 ], [ 0, %13178 ]
  %13199 = phi <4 x i64> [ %13214, %13197 ], [ <i64 0, i64 1, i64 2, i64 3>, %13178 ]
  %13200 = trunc <4 x i64> %13199 to <4 x i32>
  %13201 = add <4 x i32> %13200, <i32 1, i32 1, i32 1, i32 1>
  %13202 = sitofp <4 x i32> %13201 to <4 x float>
  %13203 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13202
  %13204 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13198
  %13205 = bitcast float* %13204 to <4 x float>*
  store <4 x float> %13203, <4 x float>* %13205, align 16, !tbaa !2
  %13206 = or i64 %13198, 4
  %13207 = trunc <4 x i64> %13199 to <4 x i32>
  %13208 = add <4 x i32> %13207, <i32 5, i32 5, i32 5, i32 5>
  %13209 = sitofp <4 x i32> %13208 to <4 x float>
  %13210 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13209
  %13211 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13206
  %13212 = bitcast float* %13211 to <4 x float>*
  store <4 x float> %13210, <4 x float>* %13212, align 16, !tbaa !2
  %13213 = add nuw nsw i64 %13198, 8
  %13214 = add <4 x i64> %13199, <i64 8, i64 8, i64 8, i64 8>
  %13215 = icmp eq i64 %13213, 32000
  br i1 %13215, label %13216, label %13197, !llvm.loop !250

13216:                                            ; preds = %13197, %13216
  %13217 = phi i64 [ %13257, %13216 ], [ 0, %13197 ]
  %13218 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13217
  %13219 = bitcast float* %13218 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13219, align 16, !tbaa !2
  %13220 = getelementptr inbounds float, float* %13218, i64 4
  %13221 = bitcast float* %13220 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13221, align 16, !tbaa !2
  %13222 = or i64 %13217, 8
  %13223 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13222
  %13224 = bitcast float* %13223 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13224, align 16, !tbaa !2
  %13225 = getelementptr inbounds float, float* %13223, i64 4
  %13226 = bitcast float* %13225 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13226, align 16, !tbaa !2
  %13227 = or i64 %13217, 16
  %13228 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13227
  %13229 = bitcast float* %13228 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13229, align 16, !tbaa !2
  %13230 = getelementptr inbounds float, float* %13228, i64 4
  %13231 = bitcast float* %13230 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13231, align 16, !tbaa !2
  %13232 = or i64 %13217, 24
  %13233 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13232
  %13234 = bitcast float* %13233 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13234, align 16, !tbaa !2
  %13235 = getelementptr inbounds float, float* %13233, i64 4
  %13236 = bitcast float* %13235 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13236, align 16, !tbaa !2
  %13237 = or i64 %13217, 32
  %13238 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13237
  %13239 = bitcast float* %13238 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13239, align 16, !tbaa !2
  %13240 = getelementptr inbounds float, float* %13238, i64 4
  %13241 = bitcast float* %13240 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13241, align 16, !tbaa !2
  %13242 = or i64 %13217, 40
  %13243 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13242
  %13244 = bitcast float* %13243 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13244, align 16, !tbaa !2
  %13245 = getelementptr inbounds float, float* %13243, i64 4
  %13246 = bitcast float* %13245 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13246, align 16, !tbaa !2
  %13247 = or i64 %13217, 48
  %13248 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13247
  %13249 = bitcast float* %13248 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13249, align 16, !tbaa !2
  %13250 = getelementptr inbounds float, float* %13248, i64 4
  %13251 = bitcast float* %13250 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13251, align 16, !tbaa !2
  %13252 = or i64 %13217, 56
  %13253 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13252
  %13254 = bitcast float* %13253 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13254, align 16, !tbaa !2
  %13255 = getelementptr inbounds float, float* %13253, i64 4
  %13256 = bitcast float* %13255 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13256, align 16, !tbaa !2
  %13257 = add nuw nsw i64 %13217, 64
  %13258 = icmp eq i64 %13257, 32000
  br i1 %13258, label %13259, label %13216, !llvm.loop !251

13259:                                            ; preds = %13216
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(128000) bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 10666) to i8*), i8 0, i64 128000, i1 false)
  br label %13260

13260:                                            ; preds = %13260, %13259
  %13261 = phi i64 [ 0, %13259 ], [ %13301, %13260 ]
  %13262 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333), i64 %13261
  %13263 = bitcast float* %13262 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13263, align 4, !tbaa !2
  %13264 = getelementptr inbounds float, float* %13262, i64 4
  %13265 = bitcast float* %13264 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13265, align 4, !tbaa !2
  %13266 = or i64 %13261, 8
  %13267 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333), i64 %13266
  %13268 = bitcast float* %13267 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13268, align 4, !tbaa !2
  %13269 = getelementptr inbounds float, float* %13267, i64 4
  %13270 = bitcast float* %13269 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13270, align 4, !tbaa !2
  %13271 = or i64 %13261, 16
  %13272 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333), i64 %13271
  %13273 = bitcast float* %13272 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13273, align 4, !tbaa !2
  %13274 = getelementptr inbounds float, float* %13272, i64 4
  %13275 = bitcast float* %13274 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13275, align 4, !tbaa !2
  %13276 = or i64 %13261, 24
  %13277 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333), i64 %13276
  %13278 = bitcast float* %13277 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13278, align 4, !tbaa !2
  %13279 = getelementptr inbounds float, float* %13277, i64 4
  %13280 = bitcast float* %13279 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13280, align 4, !tbaa !2
  %13281 = or i64 %13261, 32
  %13282 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333), i64 %13281
  %13283 = bitcast float* %13282 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13283, align 4, !tbaa !2
  %13284 = getelementptr inbounds float, float* %13282, i64 4
  %13285 = bitcast float* %13284 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13285, align 4, !tbaa !2
  %13286 = or i64 %13261, 40
  %13287 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333), i64 %13286
  %13288 = bitcast float* %13287 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13288, align 4, !tbaa !2
  %13289 = getelementptr inbounds float, float* %13287, i64 4
  %13290 = bitcast float* %13289 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13290, align 4, !tbaa !2
  %13291 = or i64 %13261, 48
  %13292 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333), i64 %13291
  %13293 = bitcast float* %13292 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13293, align 4, !tbaa !2
  %13294 = getelementptr inbounds float, float* %13292, i64 4
  %13295 = bitcast float* %13294 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13295, align 4, !tbaa !2
  %13296 = or i64 %13261, 56
  %13297 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333), i64 %13296
  %13298 = bitcast float* %13297 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13298, align 4, !tbaa !2
  %13299 = getelementptr inbounds float, float* %13297, i64 4
  %13300 = bitcast float* %13299 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13300, align 4, !tbaa !2
  %13301 = add nuw nsw i64 %13261, 64
  %13302 = icmp eq i64 %13301, 32000
  br i1 %13302, label %15603, label %13260, !llvm.loop !252

13303:                                            ; preds = %13132
  %13304 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0)) #15
  %13305 = icmp eq i32 %13304, 0
  br i1 %13305, label %13306, label %13425

13306:                                            ; preds = %13303, %13306
  %13307 = phi i64 [ %13347, %13306 ], [ 0, %13303 ]
  %13308 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13307
  %13309 = bitcast float* %13308 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13309, align 16, !tbaa !2
  %13310 = getelementptr inbounds float, float* %13308, i64 4
  %13311 = bitcast float* %13310 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13311, align 16, !tbaa !2
  %13312 = or i64 %13307, 8
  %13313 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13312
  %13314 = bitcast float* %13313 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13314, align 16, !tbaa !2
  %13315 = getelementptr inbounds float, float* %13313, i64 4
  %13316 = bitcast float* %13315 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13316, align 16, !tbaa !2
  %13317 = or i64 %13307, 16
  %13318 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13317
  %13319 = bitcast float* %13318 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13319, align 16, !tbaa !2
  %13320 = getelementptr inbounds float, float* %13318, i64 4
  %13321 = bitcast float* %13320 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13321, align 16, !tbaa !2
  %13322 = or i64 %13307, 24
  %13323 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13322
  %13324 = bitcast float* %13323 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13324, align 16, !tbaa !2
  %13325 = getelementptr inbounds float, float* %13323, i64 4
  %13326 = bitcast float* %13325 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13326, align 16, !tbaa !2
  %13327 = or i64 %13307, 32
  %13328 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13327
  %13329 = bitcast float* %13328 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13329, align 16, !tbaa !2
  %13330 = getelementptr inbounds float, float* %13328, i64 4
  %13331 = bitcast float* %13330 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13331, align 16, !tbaa !2
  %13332 = or i64 %13307, 40
  %13333 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13332
  %13334 = bitcast float* %13333 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13334, align 16, !tbaa !2
  %13335 = getelementptr inbounds float, float* %13333, i64 4
  %13336 = bitcast float* %13335 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13336, align 16, !tbaa !2
  %13337 = or i64 %13307, 48
  %13338 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13337
  %13339 = bitcast float* %13338 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13339, align 16, !tbaa !2
  %13340 = getelementptr inbounds float, float* %13338, i64 4
  %13341 = bitcast float* %13340 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13341, align 16, !tbaa !2
  %13342 = or i64 %13307, 56
  %13343 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13342
  %13344 = bitcast float* %13343 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13344, align 16, !tbaa !2
  %13345 = getelementptr inbounds float, float* %13343, i64 4
  %13346 = bitcast float* %13345 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13346, align 16, !tbaa !2
  %13347 = add nuw nsw i64 %13307, 64
  %13348 = icmp eq i64 %13347, 32000
  br i1 %13348, label %13349, label %13306, !llvm.loop !253

13349:                                            ; preds = %13306, %13349
  %13350 = phi i64 [ %13365, %13349 ], [ 0, %13306 ]
  %13351 = phi <4 x i64> [ %13366, %13349 ], [ <i64 0, i64 1, i64 2, i64 3>, %13306 ]
  %13352 = trunc <4 x i64> %13351 to <4 x i32>
  %13353 = add <4 x i32> %13352, <i32 1, i32 1, i32 1, i32 1>
  %13354 = sitofp <4 x i32> %13353 to <4 x float>
  %13355 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13354
  %13356 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13350
  %13357 = bitcast float* %13356 to <4 x float>*
  store <4 x float> %13355, <4 x float>* %13357, align 16, !tbaa !2
  %13358 = or i64 %13350, 4
  %13359 = trunc <4 x i64> %13351 to <4 x i32>
  %13360 = add <4 x i32> %13359, <i32 5, i32 5, i32 5, i32 5>
  %13361 = sitofp <4 x i32> %13360 to <4 x float>
  %13362 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13361
  %13363 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13358
  %13364 = bitcast float* %13363 to <4 x float>*
  store <4 x float> %13362, <4 x float>* %13364, align 16, !tbaa !2
  %13365 = add nuw nsw i64 %13350, 8
  %13366 = add <4 x i64> %13351, <i64 8, i64 8, i64 8, i64 8>
  %13367 = icmp eq i64 %13365, 32000
  br i1 %13367, label %13368, label %13349, !llvm.loop !254

13368:                                            ; preds = %13349, %13368
  %13369 = phi i64 [ %13384, %13368 ], [ 0, %13349 ]
  %13370 = phi <4 x i64> [ %13385, %13368 ], [ <i64 0, i64 1, i64 2, i64 3>, %13349 ]
  %13371 = trunc <4 x i64> %13370 to <4 x i32>
  %13372 = add <4 x i32> %13371, <i32 1, i32 1, i32 1, i32 1>
  %13373 = sitofp <4 x i32> %13372 to <4 x float>
  %13374 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13373
  %13375 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13369
  %13376 = bitcast float* %13375 to <4 x float>*
  store <4 x float> %13374, <4 x float>* %13376, align 16, !tbaa !2
  %13377 = or i64 %13369, 4
  %13378 = trunc <4 x i64> %13370 to <4 x i32>
  %13379 = add <4 x i32> %13378, <i32 5, i32 5, i32 5, i32 5>
  %13380 = sitofp <4 x i32> %13379 to <4 x float>
  %13381 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13380
  %13382 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13377
  %13383 = bitcast float* %13382 to <4 x float>*
  store <4 x float> %13381, <4 x float>* %13383, align 16, !tbaa !2
  %13384 = add nuw nsw i64 %13369, 8
  %13385 = add <4 x i64> %13370, <i64 8, i64 8, i64 8, i64 8>
  %13386 = icmp eq i64 %13384, 32000
  br i1 %13386, label %13387, label %13368, !llvm.loop !255

13387:                                            ; preds = %13368, %13387
  %13388 = phi i64 [ %13403, %13387 ], [ 0, %13368 ]
  %13389 = phi <4 x i64> [ %13404, %13387 ], [ <i64 0, i64 1, i64 2, i64 3>, %13368 ]
  %13390 = trunc <4 x i64> %13389 to <4 x i32>
  %13391 = add <4 x i32> %13390, <i32 1, i32 1, i32 1, i32 1>
  %13392 = sitofp <4 x i32> %13391 to <4 x float>
  %13393 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13392
  %13394 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13388
  %13395 = bitcast float* %13394 to <4 x float>*
  store <4 x float> %13393, <4 x float>* %13395, align 16, !tbaa !2
  %13396 = or i64 %13388, 4
  %13397 = trunc <4 x i64> %13389 to <4 x i32>
  %13398 = add <4 x i32> %13397, <i32 5, i32 5, i32 5, i32 5>
  %13399 = sitofp <4 x i32> %13398 to <4 x float>
  %13400 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13399
  %13401 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13396
  %13402 = bitcast float* %13401 to <4 x float>*
  store <4 x float> %13400, <4 x float>* %13402, align 16, !tbaa !2
  %13403 = add nuw nsw i64 %13388, 8
  %13404 = add <4 x i64> %13389, <i64 8, i64 8, i64 8, i64 8>
  %13405 = icmp eq i64 %13403, 32000
  br i1 %13405, label %13406, label %13387, !llvm.loop !256

13406:                                            ; preds = %13387, %13406
  %13407 = phi i64 [ %13422, %13406 ], [ 0, %13387 ]
  %13408 = phi <4 x i64> [ %13423, %13406 ], [ <i64 0, i64 1, i64 2, i64 3>, %13387 ]
  %13409 = trunc <4 x i64> %13408 to <4 x i32>
  %13410 = add <4 x i32> %13409, <i32 1, i32 1, i32 1, i32 1>
  %13411 = sitofp <4 x i32> %13410 to <4 x float>
  %13412 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13411
  %13413 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %13407
  %13414 = bitcast float* %13413 to <4 x float>*
  store <4 x float> %13412, <4 x float>* %13414, align 16, !tbaa !2
  %13415 = or i64 %13407, 4
  %13416 = trunc <4 x i64> %13408 to <4 x i32>
  %13417 = add <4 x i32> %13416, <i32 5, i32 5, i32 5, i32 5>
  %13418 = sitofp <4 x i32> %13417 to <4 x float>
  %13419 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13418
  %13420 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %13415
  %13421 = bitcast float* %13420 to <4 x float>*
  store <4 x float> %13419, <4 x float>* %13421, align 16, !tbaa !2
  %13422 = add nuw nsw i64 %13407, 8
  %13423 = add <4 x i64> %13408, <i64 8, i64 8, i64 8, i64 8>
  %13424 = icmp eq i64 %13422, 32000
  br i1 %13424, label %15603, label %13406, !llvm.loop !257

13425:                                            ; preds = %13303
  %13426 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0)) #15
  %13427 = icmp eq i32 %13426, 0
  br i1 %13427, label %13428, label %13509

13428:                                            ; preds = %13425, %13428
  %13429 = phi i64 [ %13469, %13428 ], [ 0, %13425 ]
  %13430 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13429
  %13431 = bitcast float* %13430 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13431, align 16, !tbaa !2
  %13432 = getelementptr inbounds float, float* %13430, i64 4
  %13433 = bitcast float* %13432 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13433, align 16, !tbaa !2
  %13434 = or i64 %13429, 8
  %13435 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13434
  %13436 = bitcast float* %13435 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13436, align 16, !tbaa !2
  %13437 = getelementptr inbounds float, float* %13435, i64 4
  %13438 = bitcast float* %13437 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13438, align 16, !tbaa !2
  %13439 = or i64 %13429, 16
  %13440 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13439
  %13441 = bitcast float* %13440 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13441, align 16, !tbaa !2
  %13442 = getelementptr inbounds float, float* %13440, i64 4
  %13443 = bitcast float* %13442 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13443, align 16, !tbaa !2
  %13444 = or i64 %13429, 24
  %13445 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13444
  %13446 = bitcast float* %13445 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13446, align 16, !tbaa !2
  %13447 = getelementptr inbounds float, float* %13445, i64 4
  %13448 = bitcast float* %13447 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13448, align 16, !tbaa !2
  %13449 = or i64 %13429, 32
  %13450 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13449
  %13451 = bitcast float* %13450 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13451, align 16, !tbaa !2
  %13452 = getelementptr inbounds float, float* %13450, i64 4
  %13453 = bitcast float* %13452 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13453, align 16, !tbaa !2
  %13454 = or i64 %13429, 40
  %13455 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13454
  %13456 = bitcast float* %13455 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13456, align 16, !tbaa !2
  %13457 = getelementptr inbounds float, float* %13455, i64 4
  %13458 = bitcast float* %13457 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13458, align 16, !tbaa !2
  %13459 = or i64 %13429, 48
  %13460 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13459
  %13461 = bitcast float* %13460 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13461, align 16, !tbaa !2
  %13462 = getelementptr inbounds float, float* %13460, i64 4
  %13463 = bitcast float* %13462 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13463, align 16, !tbaa !2
  %13464 = or i64 %13429, 56
  %13465 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13464
  %13466 = bitcast float* %13465 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13466, align 16, !tbaa !2
  %13467 = getelementptr inbounds float, float* %13465, i64 4
  %13468 = bitcast float* %13467 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13468, align 16, !tbaa !2
  %13469 = add nuw nsw i64 %13429, 64
  %13470 = icmp eq i64 %13469, 32000
  br i1 %13470, label %13471, label %13428, !llvm.loop !258

13471:                                            ; preds = %13428, %13471
  %13472 = phi i64 [ %13487, %13471 ], [ 0, %13428 ]
  %13473 = phi <4 x i64> [ %13488, %13471 ], [ <i64 0, i64 1, i64 2, i64 3>, %13428 ]
  %13474 = trunc <4 x i64> %13473 to <4 x i32>
  %13475 = add <4 x i32> %13474, <i32 1, i32 1, i32 1, i32 1>
  %13476 = sitofp <4 x i32> %13475 to <4 x float>
  %13477 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13476
  %13478 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13472
  %13479 = bitcast float* %13478 to <4 x float>*
  store <4 x float> %13477, <4 x float>* %13479, align 16, !tbaa !2
  %13480 = or i64 %13472, 4
  %13481 = trunc <4 x i64> %13473 to <4 x i32>
  %13482 = add <4 x i32> %13481, <i32 5, i32 5, i32 5, i32 5>
  %13483 = sitofp <4 x i32> %13482 to <4 x float>
  %13484 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13483
  %13485 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13480
  %13486 = bitcast float* %13485 to <4 x float>*
  store <4 x float> %13484, <4 x float>* %13486, align 16, !tbaa !2
  %13487 = add nuw nsw i64 %13472, 8
  %13488 = add <4 x i64> %13473, <i64 8, i64 8, i64 8, i64 8>
  %13489 = icmp eq i64 %13487, 32000
  br i1 %13489, label %13490, label %13471, !llvm.loop !259

13490:                                            ; preds = %13471, %13490
  %13491 = phi i64 [ %13506, %13490 ], [ 0, %13471 ]
  %13492 = phi <4 x i64> [ %13507, %13490 ], [ <i64 0, i64 1, i64 2, i64 3>, %13471 ]
  %13493 = trunc <4 x i64> %13492 to <4 x i32>
  %13494 = add <4 x i32> %13493, <i32 1, i32 1, i32 1, i32 1>
  %13495 = sitofp <4 x i32> %13494 to <4 x float>
  %13496 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13495
  %13497 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13491
  %13498 = bitcast float* %13497 to <4 x float>*
  store <4 x float> %13496, <4 x float>* %13498, align 16, !tbaa !2
  %13499 = or i64 %13491, 4
  %13500 = trunc <4 x i64> %13492 to <4 x i32>
  %13501 = add <4 x i32> %13500, <i32 5, i32 5, i32 5, i32 5>
  %13502 = sitofp <4 x i32> %13501 to <4 x float>
  %13503 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13502
  %13504 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13499
  %13505 = bitcast float* %13504 to <4 x float>*
  store <4 x float> %13503, <4 x float>* %13505, align 16, !tbaa !2
  %13506 = add nuw nsw i64 %13491, 8
  %13507 = add <4 x i64> %13492, <i64 8, i64 8, i64 8, i64 8>
  %13508 = icmp eq i64 %13506, 32000
  br i1 %13508, label %15603, label %13490, !llvm.loop !260

13509:                                            ; preds = %13425
  %13510 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0)) #15
  %13511 = icmp eq i32 %13510, 0
  br i1 %13511, label %13512, label %13550

13512:                                            ; preds = %13509, %13512
  %13513 = phi i64 [ %13528, %13512 ], [ 0, %13509 ]
  %13514 = phi <4 x i64> [ %13529, %13512 ], [ <i64 0, i64 1, i64 2, i64 3>, %13509 ]
  %13515 = trunc <4 x i64> %13514 to <4 x i32>
  %13516 = add <4 x i32> %13515, <i32 1, i32 1, i32 1, i32 1>
  %13517 = sitofp <4 x i32> %13516 to <4 x float>
  %13518 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13517
  %13519 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13513
  %13520 = bitcast float* %13519 to <4 x float>*
  store <4 x float> %13518, <4 x float>* %13520, align 16, !tbaa !2
  %13521 = or i64 %13513, 4
  %13522 = trunc <4 x i64> %13514 to <4 x i32>
  %13523 = add <4 x i32> %13522, <i32 5, i32 5, i32 5, i32 5>
  %13524 = sitofp <4 x i32> %13523 to <4 x float>
  %13525 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13524
  %13526 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13521
  %13527 = bitcast float* %13526 to <4 x float>*
  store <4 x float> %13525, <4 x float>* %13527, align 16, !tbaa !2
  %13528 = add nuw nsw i64 %13513, 8
  %13529 = add <4 x i64> %13514, <i64 8, i64 8, i64 8, i64 8>
  %13530 = icmp eq i64 %13528, 32000
  br i1 %13530, label %13531, label %13512, !llvm.loop !261

13531:                                            ; preds = %13512, %13531
  %13532 = phi i64 [ %13547, %13531 ], [ 0, %13512 ]
  %13533 = phi <4 x i64> [ %13548, %13531 ], [ <i64 0, i64 1, i64 2, i64 3>, %13512 ]
  %13534 = trunc <4 x i64> %13533 to <4 x i32>
  %13535 = add <4 x i32> %13534, <i32 1, i32 1, i32 1, i32 1>
  %13536 = sitofp <4 x i32> %13535 to <4 x float>
  %13537 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13536
  %13538 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13532
  %13539 = bitcast float* %13538 to <4 x float>*
  store <4 x float> %13537, <4 x float>* %13539, align 16, !tbaa !2
  %13540 = or i64 %13532, 4
  %13541 = trunc <4 x i64> %13533 to <4 x i32>
  %13542 = add <4 x i32> %13541, <i32 5, i32 5, i32 5, i32 5>
  %13543 = sitofp <4 x i32> %13542 to <4 x float>
  %13544 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13543
  %13545 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13540
  %13546 = bitcast float* %13545 to <4 x float>*
  store <4 x float> %13544, <4 x float>* %13546, align 16, !tbaa !2
  %13547 = add nuw nsw i64 %13532, 8
  %13548 = add <4 x i64> %13533, <i64 8, i64 8, i64 8, i64 8>
  %13549 = icmp eq i64 %13547, 32000
  br i1 %13549, label %15603, label %13531, !llvm.loop !262

13550:                                            ; preds = %13509
  %13551 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i64 0, i64 0)) #15
  %13552 = icmp eq i32 %13551, 0
  br i1 %13552, label %13553, label %13640

13553:                                            ; preds = %13550
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %13554

13554:                                            ; preds = %13554, %13553
  %13555 = phi i64 [ 0, %13553 ], [ %13595, %13554 ]
  %13556 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13555
  %13557 = bitcast float* %13556 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13557, align 16, !tbaa !2
  %13558 = getelementptr inbounds float, float* %13556, i64 4
  %13559 = bitcast float* %13558 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13559, align 16, !tbaa !2
  %13560 = or i64 %13555, 8
  %13561 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13560
  %13562 = bitcast float* %13561 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13562, align 16, !tbaa !2
  %13563 = getelementptr inbounds float, float* %13561, i64 4
  %13564 = bitcast float* %13563 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13564, align 16, !tbaa !2
  %13565 = or i64 %13555, 16
  %13566 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13565
  %13567 = bitcast float* %13566 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13567, align 16, !tbaa !2
  %13568 = getelementptr inbounds float, float* %13566, i64 4
  %13569 = bitcast float* %13568 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13569, align 16, !tbaa !2
  %13570 = or i64 %13555, 24
  %13571 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13570
  %13572 = bitcast float* %13571 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13572, align 16, !tbaa !2
  %13573 = getelementptr inbounds float, float* %13571, i64 4
  %13574 = bitcast float* %13573 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13574, align 16, !tbaa !2
  %13575 = or i64 %13555, 32
  %13576 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13575
  %13577 = bitcast float* %13576 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13577, align 16, !tbaa !2
  %13578 = getelementptr inbounds float, float* %13576, i64 4
  %13579 = bitcast float* %13578 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13579, align 16, !tbaa !2
  %13580 = or i64 %13555, 40
  %13581 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13580
  %13582 = bitcast float* %13581 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13582, align 16, !tbaa !2
  %13583 = getelementptr inbounds float, float* %13581, i64 4
  %13584 = bitcast float* %13583 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13584, align 16, !tbaa !2
  %13585 = or i64 %13555, 48
  %13586 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13585
  %13587 = bitcast float* %13586 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13587, align 16, !tbaa !2
  %13588 = getelementptr inbounds float, float* %13586, i64 4
  %13589 = bitcast float* %13588 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13589, align 16, !tbaa !2
  %13590 = or i64 %13555, 56
  %13591 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13590
  %13592 = bitcast float* %13591 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13592, align 16, !tbaa !2
  %13593 = getelementptr inbounds float, float* %13591, i64 4
  %13594 = bitcast float* %13593 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13594, align 16, !tbaa !2
  %13595 = add nuw nsw i64 %13555, 64
  %13596 = icmp eq i64 %13595, 32000
  br i1 %13596, label %13597, label %13554, !llvm.loop !263

13597:                                            ; preds = %13554, %13597
  %13598 = phi i64 [ %13638, %13597 ], [ 0, %13554 ]
  %13599 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13598
  %13600 = bitcast float* %13599 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13600, align 16, !tbaa !2
  %13601 = getelementptr inbounds float, float* %13599, i64 4
  %13602 = bitcast float* %13601 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13602, align 16, !tbaa !2
  %13603 = or i64 %13598, 8
  %13604 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13603
  %13605 = bitcast float* %13604 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13605, align 16, !tbaa !2
  %13606 = getelementptr inbounds float, float* %13604, i64 4
  %13607 = bitcast float* %13606 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13607, align 16, !tbaa !2
  %13608 = or i64 %13598, 16
  %13609 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13608
  %13610 = bitcast float* %13609 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13610, align 16, !tbaa !2
  %13611 = getelementptr inbounds float, float* %13609, i64 4
  %13612 = bitcast float* %13611 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13612, align 16, !tbaa !2
  %13613 = or i64 %13598, 24
  %13614 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13613
  %13615 = bitcast float* %13614 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13615, align 16, !tbaa !2
  %13616 = getelementptr inbounds float, float* %13614, i64 4
  %13617 = bitcast float* %13616 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13617, align 16, !tbaa !2
  %13618 = or i64 %13598, 32
  %13619 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13618
  %13620 = bitcast float* %13619 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13620, align 16, !tbaa !2
  %13621 = getelementptr inbounds float, float* %13619, i64 4
  %13622 = bitcast float* %13621 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13622, align 16, !tbaa !2
  %13623 = or i64 %13598, 40
  %13624 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13623
  %13625 = bitcast float* %13624 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13625, align 16, !tbaa !2
  %13626 = getelementptr inbounds float, float* %13624, i64 4
  %13627 = bitcast float* %13626 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13627, align 16, !tbaa !2
  %13628 = or i64 %13598, 48
  %13629 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13628
  %13630 = bitcast float* %13629 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13630, align 16, !tbaa !2
  %13631 = getelementptr inbounds float, float* %13629, i64 4
  %13632 = bitcast float* %13631 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13632, align 16, !tbaa !2
  %13633 = or i64 %13598, 56
  %13634 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13633
  %13635 = bitcast float* %13634 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13635, align 16, !tbaa !2
  %13636 = getelementptr inbounds float, float* %13634, i64 4
  %13637 = bitcast float* %13636 to <4 x float>*
  store <4 x float> <float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000>, <4 x float>* %13637, align 16, !tbaa !2
  %13638 = add nuw nsw i64 %13598, 64
  %13639 = icmp eq i64 %13638, 32000
  br i1 %13639, label %15603, label %13597, !llvm.loop !264

13640:                                            ; preds = %13550
  %13641 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0)) #15
  %13642 = icmp eq i32 %13641, 0
  br i1 %13642, label %13643, label %13665

13643:                                            ; preds = %13640
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %13644

13644:                                            ; preds = %13644, %13643
  %13645 = phi i64 [ 0, %13643 ], [ %13662, %13644 ]
  %13646 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %13643 ], [ %13663, %13644 ]
  %13647 = add nuw nsw <4 x i64> %13646, <i64 1, i64 1, i64 1, i64 1>
  %13648 = mul nuw nsw <4 x i64> %13647, %13647
  %13649 = trunc <4 x i64> %13648 to <4 x i32>
  %13650 = sitofp <4 x i32> %13649 to <4 x float>
  %13651 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13650
  %13652 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13645
  %13653 = bitcast float* %13652 to <4 x float>*
  store <4 x float> %13651, <4 x float>* %13653, align 16, !tbaa !2
  %13654 = or i64 %13645, 4
  %13655 = add <4 x i64> %13646, <i64 5, i64 5, i64 5, i64 5>
  %13656 = mul nuw nsw <4 x i64> %13655, %13655
  %13657 = trunc <4 x i64> %13656 to <4 x i32>
  %13658 = sitofp <4 x i32> %13657 to <4 x float>
  %13659 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13658
  %13660 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13654
  %13661 = bitcast float* %13660 to <4 x float>*
  store <4 x float> %13659, <4 x float>* %13661, align 16, !tbaa !2
  %13662 = add nuw nsw i64 %13645, 8
  %13663 = add <4 x i64> %13646, <i64 8, i64 8, i64 8, i64 8>
  %13664 = icmp eq i64 %13662, 32000
  br i1 %13664, label %15603, label %13644, !llvm.loop !265

13665:                                            ; preds = %13640
  %13666 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i64 0, i64 0)) #15
  %13667 = icmp eq i32 %13666, 0
  br i1 %13667, label %13668, label %13835

13668:                                            ; preds = %13665, %13668
  %13669 = phi i64 [ %13709, %13668 ], [ 0, %13665 ]
  %13670 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13669
  %13671 = bitcast float* %13670 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13671, align 16, !tbaa !2
  %13672 = getelementptr inbounds float, float* %13670, i64 4
  %13673 = bitcast float* %13672 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13673, align 16, !tbaa !2
  %13674 = or i64 %13669, 8
  %13675 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13674
  %13676 = bitcast float* %13675 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13676, align 16, !tbaa !2
  %13677 = getelementptr inbounds float, float* %13675, i64 4
  %13678 = bitcast float* %13677 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13678, align 16, !tbaa !2
  %13679 = or i64 %13669, 16
  %13680 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13679
  %13681 = bitcast float* %13680 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13681, align 16, !tbaa !2
  %13682 = getelementptr inbounds float, float* %13680, i64 4
  %13683 = bitcast float* %13682 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13683, align 16, !tbaa !2
  %13684 = or i64 %13669, 24
  %13685 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13684
  %13686 = bitcast float* %13685 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13686, align 16, !tbaa !2
  %13687 = getelementptr inbounds float, float* %13685, i64 4
  %13688 = bitcast float* %13687 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13688, align 16, !tbaa !2
  %13689 = or i64 %13669, 32
  %13690 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13689
  %13691 = bitcast float* %13690 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13691, align 16, !tbaa !2
  %13692 = getelementptr inbounds float, float* %13690, i64 4
  %13693 = bitcast float* %13692 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13693, align 16, !tbaa !2
  %13694 = or i64 %13669, 40
  %13695 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13694
  %13696 = bitcast float* %13695 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13696, align 16, !tbaa !2
  %13697 = getelementptr inbounds float, float* %13695, i64 4
  %13698 = bitcast float* %13697 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13698, align 16, !tbaa !2
  %13699 = or i64 %13669, 48
  %13700 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13699
  %13701 = bitcast float* %13700 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13701, align 16, !tbaa !2
  %13702 = getelementptr inbounds float, float* %13700, i64 4
  %13703 = bitcast float* %13702 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13703, align 16, !tbaa !2
  %13704 = or i64 %13669, 56
  %13705 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13704
  %13706 = bitcast float* %13705 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13706, align 16, !tbaa !2
  %13707 = getelementptr inbounds float, float* %13705, i64 4
  %13708 = bitcast float* %13707 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13708, align 16, !tbaa !2
  %13709 = add nuw nsw i64 %13669, 64
  %13710 = icmp eq i64 %13709, 32000
  br i1 %13710, label %13711, label %13668, !llvm.loop !266

13711:                                            ; preds = %13668, %13711
  %13712 = phi i64 [ %13752, %13711 ], [ 0, %13668 ]
  %13713 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13712
  %13714 = bitcast float* %13713 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13714, align 16, !tbaa !2
  %13715 = getelementptr inbounds float, float* %13713, i64 4
  %13716 = bitcast float* %13715 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13716, align 16, !tbaa !2
  %13717 = or i64 %13712, 8
  %13718 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13717
  %13719 = bitcast float* %13718 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13719, align 16, !tbaa !2
  %13720 = getelementptr inbounds float, float* %13718, i64 4
  %13721 = bitcast float* %13720 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13721, align 16, !tbaa !2
  %13722 = or i64 %13712, 16
  %13723 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13722
  %13724 = bitcast float* %13723 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13724, align 16, !tbaa !2
  %13725 = getelementptr inbounds float, float* %13723, i64 4
  %13726 = bitcast float* %13725 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13726, align 16, !tbaa !2
  %13727 = or i64 %13712, 24
  %13728 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13727
  %13729 = bitcast float* %13728 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13729, align 16, !tbaa !2
  %13730 = getelementptr inbounds float, float* %13728, i64 4
  %13731 = bitcast float* %13730 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13731, align 16, !tbaa !2
  %13732 = or i64 %13712, 32
  %13733 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13732
  %13734 = bitcast float* %13733 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13734, align 16, !tbaa !2
  %13735 = getelementptr inbounds float, float* %13733, i64 4
  %13736 = bitcast float* %13735 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13736, align 16, !tbaa !2
  %13737 = or i64 %13712, 40
  %13738 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13737
  %13739 = bitcast float* %13738 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13739, align 16, !tbaa !2
  %13740 = getelementptr inbounds float, float* %13738, i64 4
  %13741 = bitcast float* %13740 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13741, align 16, !tbaa !2
  %13742 = or i64 %13712, 48
  %13743 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13742
  %13744 = bitcast float* %13743 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13744, align 16, !tbaa !2
  %13745 = getelementptr inbounds float, float* %13743, i64 4
  %13746 = bitcast float* %13745 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13746, align 16, !tbaa !2
  %13747 = or i64 %13712, 56
  %13748 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13747
  %13749 = bitcast float* %13748 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13749, align 16, !tbaa !2
  %13750 = getelementptr inbounds float, float* %13748, i64 4
  %13751 = bitcast float* %13750 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13751, align 16, !tbaa !2
  %13752 = add nuw nsw i64 %13712, 64
  %13753 = icmp eq i64 %13752, 32000
  br i1 %13753, label %13754, label %13711, !llvm.loop !267

13754:                                            ; preds = %13711, %13754
  %13755 = phi i64 [ %13795, %13754 ], [ 0, %13711 ]
  %13756 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13755
  %13757 = bitcast float* %13756 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13757, align 16, !tbaa !2
  %13758 = getelementptr inbounds float, float* %13756, i64 4
  %13759 = bitcast float* %13758 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13759, align 16, !tbaa !2
  %13760 = or i64 %13755, 8
  %13761 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13760
  %13762 = bitcast float* %13761 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13762, align 16, !tbaa !2
  %13763 = getelementptr inbounds float, float* %13761, i64 4
  %13764 = bitcast float* %13763 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13764, align 16, !tbaa !2
  %13765 = or i64 %13755, 16
  %13766 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13765
  %13767 = bitcast float* %13766 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13767, align 16, !tbaa !2
  %13768 = getelementptr inbounds float, float* %13766, i64 4
  %13769 = bitcast float* %13768 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13769, align 16, !tbaa !2
  %13770 = or i64 %13755, 24
  %13771 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13770
  %13772 = bitcast float* %13771 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13772, align 16, !tbaa !2
  %13773 = getelementptr inbounds float, float* %13771, i64 4
  %13774 = bitcast float* %13773 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13774, align 16, !tbaa !2
  %13775 = or i64 %13755, 32
  %13776 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13775
  %13777 = bitcast float* %13776 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13777, align 16, !tbaa !2
  %13778 = getelementptr inbounds float, float* %13776, i64 4
  %13779 = bitcast float* %13778 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13779, align 16, !tbaa !2
  %13780 = or i64 %13755, 40
  %13781 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13780
  %13782 = bitcast float* %13781 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13782, align 16, !tbaa !2
  %13783 = getelementptr inbounds float, float* %13781, i64 4
  %13784 = bitcast float* %13783 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13784, align 16, !tbaa !2
  %13785 = or i64 %13755, 48
  %13786 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13785
  %13787 = bitcast float* %13786 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13787, align 16, !tbaa !2
  %13788 = getelementptr inbounds float, float* %13786, i64 4
  %13789 = bitcast float* %13788 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13789, align 16, !tbaa !2
  %13790 = or i64 %13755, 56
  %13791 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13790
  %13792 = bitcast float* %13791 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13792, align 16, !tbaa !2
  %13793 = getelementptr inbounds float, float* %13791, i64 4
  %13794 = bitcast float* %13793 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13794, align 16, !tbaa !2
  %13795 = add nuw nsw i64 %13755, 64
  %13796 = icmp eq i64 %13795, 32000
  br i1 %13796, label %13797, label %13754, !llvm.loop !268

13797:                                            ; preds = %13754, %13797
  %13798 = phi i64 [ %13813, %13797 ], [ 0, %13754 ]
  %13799 = phi <4 x i64> [ %13814, %13797 ], [ <i64 0, i64 1, i64 2, i64 3>, %13754 ]
  %13800 = trunc <4 x i64> %13799 to <4 x i32>
  %13801 = add <4 x i32> %13800, <i32 1, i32 1, i32 1, i32 1>
  %13802 = sitofp <4 x i32> %13801 to <4 x float>
  %13803 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13802
  %13804 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13798
  %13805 = bitcast float* %13804 to <4 x float>*
  store <4 x float> %13803, <4 x float>* %13805, align 16, !tbaa !2
  %13806 = or i64 %13798, 4
  %13807 = trunc <4 x i64> %13799 to <4 x i32>
  %13808 = add <4 x i32> %13807, <i32 5, i32 5, i32 5, i32 5>
  %13809 = sitofp <4 x i32> %13808 to <4 x float>
  %13810 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13809
  %13811 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13806
  %13812 = bitcast float* %13811 to <4 x float>*
  store <4 x float> %13810, <4 x float>* %13812, align 16, !tbaa !2
  %13813 = add nuw nsw i64 %13798, 8
  %13814 = add <4 x i64> %13799, <i64 8, i64 8, i64 8, i64 8>
  %13815 = icmp eq i64 %13813, 32000
  br i1 %13815, label %13816, label %13797, !llvm.loop !269

13816:                                            ; preds = %13797, %13816
  %13817 = phi i64 [ %13832, %13816 ], [ 0, %13797 ]
  %13818 = phi <4 x i64> [ %13833, %13816 ], [ <i64 0, i64 1, i64 2, i64 3>, %13797 ]
  %13819 = trunc <4 x i64> %13818 to <4 x i32>
  %13820 = add <4 x i32> %13819, <i32 1, i32 1, i32 1, i32 1>
  %13821 = sitofp <4 x i32> %13820 to <4 x float>
  %13822 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13821
  %13823 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %13817
  %13824 = bitcast float* %13823 to <4 x float>*
  store <4 x float> %13822, <4 x float>* %13824, align 16, !tbaa !2
  %13825 = or i64 %13817, 4
  %13826 = trunc <4 x i64> %13818 to <4 x i32>
  %13827 = add <4 x i32> %13826, <i32 5, i32 5, i32 5, i32 5>
  %13828 = sitofp <4 x i32> %13827 to <4 x float>
  %13829 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13828
  %13830 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %13825
  %13831 = bitcast float* %13830 to <4 x float>*
  store <4 x float> %13829, <4 x float>* %13831, align 16, !tbaa !2
  %13832 = add nuw nsw i64 %13817, 8
  %13833 = add <4 x i64> %13818, <i64 8, i64 8, i64 8, i64 8>
  %13834 = icmp eq i64 %13832, 32000
  br i1 %13834, label %15603, label %13816, !llvm.loop !270

13835:                                            ; preds = %13665
  %13836 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0)) #15
  %13837 = icmp eq i32 %13836, 0
  br i1 %13837, label %13838, label %13938

13838:                                            ; preds = %13835, %13838
  %13839 = phi i64 [ %13879, %13838 ], [ 0, %13835 ]
  %13840 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13839
  %13841 = bitcast float* %13840 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13841, align 16, !tbaa !2
  %13842 = getelementptr inbounds float, float* %13840, i64 4
  %13843 = bitcast float* %13842 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13843, align 16, !tbaa !2
  %13844 = or i64 %13839, 8
  %13845 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13844
  %13846 = bitcast float* %13845 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13846, align 16, !tbaa !2
  %13847 = getelementptr inbounds float, float* %13845, i64 4
  %13848 = bitcast float* %13847 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13848, align 16, !tbaa !2
  %13849 = or i64 %13839, 16
  %13850 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13849
  %13851 = bitcast float* %13850 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13851, align 16, !tbaa !2
  %13852 = getelementptr inbounds float, float* %13850, i64 4
  %13853 = bitcast float* %13852 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13853, align 16, !tbaa !2
  %13854 = or i64 %13839, 24
  %13855 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13854
  %13856 = bitcast float* %13855 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13856, align 16, !tbaa !2
  %13857 = getelementptr inbounds float, float* %13855, i64 4
  %13858 = bitcast float* %13857 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13858, align 16, !tbaa !2
  %13859 = or i64 %13839, 32
  %13860 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13859
  %13861 = bitcast float* %13860 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13861, align 16, !tbaa !2
  %13862 = getelementptr inbounds float, float* %13860, i64 4
  %13863 = bitcast float* %13862 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13863, align 16, !tbaa !2
  %13864 = or i64 %13839, 40
  %13865 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13864
  %13866 = bitcast float* %13865 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13866, align 16, !tbaa !2
  %13867 = getelementptr inbounds float, float* %13865, i64 4
  %13868 = bitcast float* %13867 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13868, align 16, !tbaa !2
  %13869 = or i64 %13839, 48
  %13870 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13869
  %13871 = bitcast float* %13870 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13871, align 16, !tbaa !2
  %13872 = getelementptr inbounds float, float* %13870, i64 4
  %13873 = bitcast float* %13872 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13873, align 16, !tbaa !2
  %13874 = or i64 %13839, 56
  %13875 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13874
  %13876 = bitcast float* %13875 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13876, align 16, !tbaa !2
  %13877 = getelementptr inbounds float, float* %13875, i64 4
  %13878 = bitcast float* %13877 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13878, align 16, !tbaa !2
  %13879 = add nuw nsw i64 %13839, 64
  %13880 = icmp eq i64 %13879, 32000
  br i1 %13880, label %13881, label %13838, !llvm.loop !271

13881:                                            ; preds = %13838, %13881
  %13882 = phi i64 [ %13897, %13881 ], [ 0, %13838 ]
  %13883 = phi <4 x i64> [ %13898, %13881 ], [ <i64 0, i64 1, i64 2, i64 3>, %13838 ]
  %13884 = trunc <4 x i64> %13883 to <4 x i32>
  %13885 = add <4 x i32> %13884, <i32 1, i32 1, i32 1, i32 1>
  %13886 = sitofp <4 x i32> %13885 to <4 x float>
  %13887 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13886
  %13888 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13882
  %13889 = bitcast float* %13888 to <4 x float>*
  store <4 x float> %13887, <4 x float>* %13889, align 16, !tbaa !2
  %13890 = or i64 %13882, 4
  %13891 = trunc <4 x i64> %13883 to <4 x i32>
  %13892 = add <4 x i32> %13891, <i32 5, i32 5, i32 5, i32 5>
  %13893 = sitofp <4 x i32> %13892 to <4 x float>
  %13894 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13893
  %13895 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13890
  %13896 = bitcast float* %13895 to <4 x float>*
  store <4 x float> %13894, <4 x float>* %13896, align 16, !tbaa !2
  %13897 = add nuw nsw i64 %13882, 8
  %13898 = add <4 x i64> %13883, <i64 8, i64 8, i64 8, i64 8>
  %13899 = icmp eq i64 %13897, 32000
  br i1 %13899, label %13900, label %13881, !llvm.loop !272

13900:                                            ; preds = %13881, %13900
  %13901 = phi i64 [ %13916, %13900 ], [ 0, %13881 ]
  %13902 = phi <4 x i64> [ %13917, %13900 ], [ <i64 0, i64 1, i64 2, i64 3>, %13881 ]
  %13903 = trunc <4 x i64> %13902 to <4 x i32>
  %13904 = add <4 x i32> %13903, <i32 1, i32 1, i32 1, i32 1>
  %13905 = sitofp <4 x i32> %13904 to <4 x float>
  %13906 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13905
  %13907 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13901
  %13908 = bitcast float* %13907 to <4 x float>*
  store <4 x float> %13906, <4 x float>* %13908, align 16, !tbaa !2
  %13909 = or i64 %13901, 4
  %13910 = trunc <4 x i64> %13902 to <4 x i32>
  %13911 = add <4 x i32> %13910, <i32 5, i32 5, i32 5, i32 5>
  %13912 = sitofp <4 x i32> %13911 to <4 x float>
  %13913 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13912
  %13914 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13909
  %13915 = bitcast float* %13914 to <4 x float>*
  store <4 x float> %13913, <4 x float>* %13915, align 16, !tbaa !2
  %13916 = add nuw nsw i64 %13901, 8
  %13917 = add <4 x i64> %13902, <i64 8, i64 8, i64 8, i64 8>
  %13918 = icmp eq i64 %13916, 32000
  br i1 %13918, label %13919, label %13900, !llvm.loop !273

13919:                                            ; preds = %13900, %13919
  %13920 = phi i64 [ %13935, %13919 ], [ 0, %13900 ]
  %13921 = phi <4 x i64> [ %13936, %13919 ], [ <i64 0, i64 1, i64 2, i64 3>, %13900 ]
  %13922 = trunc <4 x i64> %13921 to <4 x i32>
  %13923 = add <4 x i32> %13922, <i32 1, i32 1, i32 1, i32 1>
  %13924 = sitofp <4 x i32> %13923 to <4 x float>
  %13925 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13924
  %13926 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13920
  %13927 = bitcast float* %13926 to <4 x float>*
  store <4 x float> %13925, <4 x float>* %13927, align 16, !tbaa !2
  %13928 = or i64 %13920, 4
  %13929 = trunc <4 x i64> %13921 to <4 x i32>
  %13930 = add <4 x i32> %13929, <i32 5, i32 5, i32 5, i32 5>
  %13931 = sitofp <4 x i32> %13930 to <4 x float>
  %13932 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13931
  %13933 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %13928
  %13934 = bitcast float* %13933 to <4 x float>*
  store <4 x float> %13932, <4 x float>* %13934, align 16, !tbaa !2
  %13935 = add nuw nsw i64 %13920, 8
  %13936 = add <4 x i64> %13921, <i64 8, i64 8, i64 8, i64 8>
  %13937 = icmp eq i64 %13935, 32000
  br i1 %13937, label %15603, label %13919, !llvm.loop !274

13938:                                            ; preds = %13835
  %13939 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i64 0, i64 0)) #15
  %13940 = icmp eq i32 %13939, 0
  br i1 %13940, label %13941, label %14022

13941:                                            ; preds = %13938, %13941
  %13942 = phi i64 [ %13982, %13941 ], [ 0, %13938 ]
  %13943 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13942
  %13944 = bitcast float* %13943 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13944, align 16, !tbaa !2
  %13945 = getelementptr inbounds float, float* %13943, i64 4
  %13946 = bitcast float* %13945 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13946, align 16, !tbaa !2
  %13947 = or i64 %13942, 8
  %13948 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13947
  %13949 = bitcast float* %13948 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13949, align 16, !tbaa !2
  %13950 = getelementptr inbounds float, float* %13948, i64 4
  %13951 = bitcast float* %13950 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13951, align 16, !tbaa !2
  %13952 = or i64 %13942, 16
  %13953 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13952
  %13954 = bitcast float* %13953 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13954, align 16, !tbaa !2
  %13955 = getelementptr inbounds float, float* %13953, i64 4
  %13956 = bitcast float* %13955 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13956, align 16, !tbaa !2
  %13957 = or i64 %13942, 24
  %13958 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13957
  %13959 = bitcast float* %13958 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13959, align 16, !tbaa !2
  %13960 = getelementptr inbounds float, float* %13958, i64 4
  %13961 = bitcast float* %13960 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13961, align 16, !tbaa !2
  %13962 = or i64 %13942, 32
  %13963 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13962
  %13964 = bitcast float* %13963 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13964, align 16, !tbaa !2
  %13965 = getelementptr inbounds float, float* %13963, i64 4
  %13966 = bitcast float* %13965 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13966, align 16, !tbaa !2
  %13967 = or i64 %13942, 40
  %13968 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13967
  %13969 = bitcast float* %13968 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13969, align 16, !tbaa !2
  %13970 = getelementptr inbounds float, float* %13968, i64 4
  %13971 = bitcast float* %13970 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13971, align 16, !tbaa !2
  %13972 = or i64 %13942, 48
  %13973 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13972
  %13974 = bitcast float* %13973 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13974, align 16, !tbaa !2
  %13975 = getelementptr inbounds float, float* %13973, i64 4
  %13976 = bitcast float* %13975 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13976, align 16, !tbaa !2
  %13977 = or i64 %13942, 56
  %13978 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13977
  %13979 = bitcast float* %13978 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13979, align 16, !tbaa !2
  %13980 = getelementptr inbounds float, float* %13978, i64 4
  %13981 = bitcast float* %13980 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13981, align 16, !tbaa !2
  %13982 = add nuw nsw i64 %13942, 64
  %13983 = icmp eq i64 %13982, 32000
  br i1 %13983, label %13984, label %13941, !llvm.loop !275

13984:                                            ; preds = %13941, %13984
  %13985 = phi i64 [ %14000, %13984 ], [ 0, %13941 ]
  %13986 = phi <4 x i64> [ %14001, %13984 ], [ <i64 0, i64 1, i64 2, i64 3>, %13941 ]
  %13987 = trunc <4 x i64> %13986 to <4 x i32>
  %13988 = add <4 x i32> %13987, <i32 1, i32 1, i32 1, i32 1>
  %13989 = sitofp <4 x i32> %13988 to <4 x float>
  %13990 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13989
  %13991 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13985
  %13992 = bitcast float* %13991 to <4 x float>*
  store <4 x float> %13990, <4 x float>* %13992, align 16, !tbaa !2
  %13993 = or i64 %13985, 4
  %13994 = trunc <4 x i64> %13986 to <4 x i32>
  %13995 = add <4 x i32> %13994, <i32 5, i32 5, i32 5, i32 5>
  %13996 = sitofp <4 x i32> %13995 to <4 x float>
  %13997 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %13996
  %13998 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13993
  %13999 = bitcast float* %13998 to <4 x float>*
  store <4 x float> %13997, <4 x float>* %13999, align 16, !tbaa !2
  %14000 = add nuw nsw i64 %13985, 8
  %14001 = add <4 x i64> %13986, <i64 8, i64 8, i64 8, i64 8>
  %14002 = icmp eq i64 %14000, 32000
  br i1 %14002, label %14003, label %13984, !llvm.loop !276

14003:                                            ; preds = %13984, %14003
  %14004 = phi i64 [ %14019, %14003 ], [ 0, %13984 ]
  %14005 = phi <4 x i64> [ %14020, %14003 ], [ <i64 0, i64 1, i64 2, i64 3>, %13984 ]
  %14006 = trunc <4 x i64> %14005 to <4 x i32>
  %14007 = add <4 x i32> %14006, <i32 1, i32 1, i32 1, i32 1>
  %14008 = sitofp <4 x i32> %14007 to <4 x float>
  %14009 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14008
  %14010 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14004
  %14011 = bitcast float* %14010 to <4 x float>*
  store <4 x float> %14009, <4 x float>* %14011, align 16, !tbaa !2
  %14012 = or i64 %14004, 4
  %14013 = trunc <4 x i64> %14005 to <4 x i32>
  %14014 = add <4 x i32> %14013, <i32 5, i32 5, i32 5, i32 5>
  %14015 = sitofp <4 x i32> %14014 to <4 x float>
  %14016 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14015
  %14017 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14012
  %14018 = bitcast float* %14017 to <4 x float>*
  store <4 x float> %14016, <4 x float>* %14018, align 16, !tbaa !2
  %14019 = add nuw nsw i64 %14004, 8
  %14020 = add <4 x i64> %14005, <i64 8, i64 8, i64 8, i64 8>
  %14021 = icmp eq i64 %14019, 32000
  br i1 %14021, label %15603, label %14003, !llvm.loop !277

14022:                                            ; preds = %13938
  %14023 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0)) #15
  %14024 = icmp eq i32 %14023, 0
  br i1 %14024, label %14025, label %14107

14025:                                            ; preds = %14022
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %14026

14026:                                            ; preds = %14026, %14025
  %14027 = phi i64 [ 0, %14025 ], [ %14067, %14026 ]
  %14028 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14027
  %14029 = bitcast float* %14028 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14029, align 16, !tbaa !2
  %14030 = getelementptr inbounds float, float* %14028, i64 4
  %14031 = bitcast float* %14030 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14031, align 16, !tbaa !2
  %14032 = or i64 %14027, 8
  %14033 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14032
  %14034 = bitcast float* %14033 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14034, align 16, !tbaa !2
  %14035 = getelementptr inbounds float, float* %14033, i64 4
  %14036 = bitcast float* %14035 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14036, align 16, !tbaa !2
  %14037 = or i64 %14027, 16
  %14038 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14037
  %14039 = bitcast float* %14038 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14039, align 16, !tbaa !2
  %14040 = getelementptr inbounds float, float* %14038, i64 4
  %14041 = bitcast float* %14040 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14041, align 16, !tbaa !2
  %14042 = or i64 %14027, 24
  %14043 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14042
  %14044 = bitcast float* %14043 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14044, align 16, !tbaa !2
  %14045 = getelementptr inbounds float, float* %14043, i64 4
  %14046 = bitcast float* %14045 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14046, align 16, !tbaa !2
  %14047 = or i64 %14027, 32
  %14048 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14047
  %14049 = bitcast float* %14048 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14049, align 16, !tbaa !2
  %14050 = getelementptr inbounds float, float* %14048, i64 4
  %14051 = bitcast float* %14050 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14051, align 16, !tbaa !2
  %14052 = or i64 %14027, 40
  %14053 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14052
  %14054 = bitcast float* %14053 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14054, align 16, !tbaa !2
  %14055 = getelementptr inbounds float, float* %14053, i64 4
  %14056 = bitcast float* %14055 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14056, align 16, !tbaa !2
  %14057 = or i64 %14027, 48
  %14058 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14057
  %14059 = bitcast float* %14058 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14059, align 16, !tbaa !2
  %14060 = getelementptr inbounds float, float* %14058, i64 4
  %14061 = bitcast float* %14060 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14061, align 16, !tbaa !2
  %14062 = or i64 %14027, 56
  %14063 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14062
  %14064 = bitcast float* %14063 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14064, align 16, !tbaa !2
  %14065 = getelementptr inbounds float, float* %14063, i64 4
  %14066 = bitcast float* %14065 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14066, align 16, !tbaa !2
  %14067 = add nuw nsw i64 %14027, 64
  %14068 = icmp eq i64 %14067, 32000
  br i1 %14068, label %14069, label %14026, !llvm.loop !278

14069:                                            ; preds = %14026, %14069
  %14070 = phi i64 [ %14085, %14069 ], [ 0, %14026 ]
  %14071 = phi <4 x i64> [ %14086, %14069 ], [ <i64 0, i64 1, i64 2, i64 3>, %14026 ]
  %14072 = trunc <4 x i64> %14071 to <4 x i32>
  %14073 = add <4 x i32> %14072, <i32 1, i32 1, i32 1, i32 1>
  %14074 = sitofp <4 x i32> %14073 to <4 x float>
  %14075 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14074
  %14076 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14070
  %14077 = bitcast float* %14076 to <4 x float>*
  store <4 x float> %14075, <4 x float>* %14077, align 16, !tbaa !2
  %14078 = or i64 %14070, 4
  %14079 = trunc <4 x i64> %14071 to <4 x i32>
  %14080 = add <4 x i32> %14079, <i32 5, i32 5, i32 5, i32 5>
  %14081 = sitofp <4 x i32> %14080 to <4 x float>
  %14082 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14081
  %14083 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14078
  %14084 = bitcast float* %14083 to <4 x float>*
  store <4 x float> %14082, <4 x float>* %14084, align 16, !tbaa !2
  %14085 = add nuw nsw i64 %14070, 8
  %14086 = add <4 x i64> %14071, <i64 8, i64 8, i64 8, i64 8>
  %14087 = icmp eq i64 %14085, 32000
  br i1 %14087, label %14088, label %14069, !llvm.loop !279

14088:                                            ; preds = %14069, %14088
  %14089 = phi i64 [ %14104, %14088 ], [ 0, %14069 ]
  %14090 = phi <4 x i64> [ %14105, %14088 ], [ <i64 0, i64 1, i64 2, i64 3>, %14069 ]
  %14091 = trunc <4 x i64> %14090 to <4 x i32>
  %14092 = add <4 x i32> %14091, <i32 1, i32 1, i32 1, i32 1>
  %14093 = sitofp <4 x i32> %14092 to <4 x float>
  %14094 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14093
  %14095 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %14089
  %14096 = bitcast float* %14095 to <4 x float>*
  store <4 x float> %14094, <4 x float>* %14096, align 16, !tbaa !2
  %14097 = or i64 %14089, 4
  %14098 = trunc <4 x i64> %14090 to <4 x i32>
  %14099 = add <4 x i32> %14098, <i32 5, i32 5, i32 5, i32 5>
  %14100 = sitofp <4 x i32> %14099 to <4 x float>
  %14101 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14100
  %14102 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %14097
  %14103 = bitcast float* %14102 to <4 x float>*
  store <4 x float> %14101, <4 x float>* %14103, align 16, !tbaa !2
  %14104 = add nuw nsw i64 %14089, 8
  %14105 = add <4 x i64> %14090, <i64 8, i64 8, i64 8, i64 8>
  %14106 = icmp eq i64 %14104, 32000
  br i1 %14106, label %15603, label %14088, !llvm.loop !280

14107:                                            ; preds = %14022
  %14108 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i64 0, i64 0)) #15
  %14109 = icmp eq i32 %14108, 0
  br i1 %14109, label %14110, label %14172

14110:                                            ; preds = %14107, %14110
  %14111 = phi i64 [ %14151, %14110 ], [ 0, %14107 ]
  %14112 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14111
  %14113 = bitcast float* %14112 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14113, align 16, !tbaa !2
  %14114 = getelementptr inbounds float, float* %14112, i64 4
  %14115 = bitcast float* %14114 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14115, align 16, !tbaa !2
  %14116 = or i64 %14111, 8
  %14117 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14116
  %14118 = bitcast float* %14117 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14118, align 16, !tbaa !2
  %14119 = getelementptr inbounds float, float* %14117, i64 4
  %14120 = bitcast float* %14119 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14120, align 16, !tbaa !2
  %14121 = or i64 %14111, 16
  %14122 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14121
  %14123 = bitcast float* %14122 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14123, align 16, !tbaa !2
  %14124 = getelementptr inbounds float, float* %14122, i64 4
  %14125 = bitcast float* %14124 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14125, align 16, !tbaa !2
  %14126 = or i64 %14111, 24
  %14127 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14126
  %14128 = bitcast float* %14127 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14128, align 16, !tbaa !2
  %14129 = getelementptr inbounds float, float* %14127, i64 4
  %14130 = bitcast float* %14129 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14130, align 16, !tbaa !2
  %14131 = or i64 %14111, 32
  %14132 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14131
  %14133 = bitcast float* %14132 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14133, align 16, !tbaa !2
  %14134 = getelementptr inbounds float, float* %14132, i64 4
  %14135 = bitcast float* %14134 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14135, align 16, !tbaa !2
  %14136 = or i64 %14111, 40
  %14137 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14136
  %14138 = bitcast float* %14137 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14138, align 16, !tbaa !2
  %14139 = getelementptr inbounds float, float* %14137, i64 4
  %14140 = bitcast float* %14139 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14140, align 16, !tbaa !2
  %14141 = or i64 %14111, 48
  %14142 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14141
  %14143 = bitcast float* %14142 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14143, align 16, !tbaa !2
  %14144 = getelementptr inbounds float, float* %14142, i64 4
  %14145 = bitcast float* %14144 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14145, align 16, !tbaa !2
  %14146 = or i64 %14111, 56
  %14147 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14146
  %14148 = bitcast float* %14147 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14148, align 16, !tbaa !2
  %14149 = getelementptr inbounds float, float* %14147, i64 4
  %14150 = bitcast float* %14149 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14150, align 16, !tbaa !2
  %14151 = add nuw nsw i64 %14111, 64
  %14152 = icmp eq i64 %14151, 32000
  br i1 %14152, label %14153, label %14110, !llvm.loop !281

14153:                                            ; preds = %14110, %14153
  %14154 = phi i64 [ %14169, %14153 ], [ 0, %14110 ]
  %14155 = phi <4 x i64> [ %14170, %14153 ], [ <i64 0, i64 1, i64 2, i64 3>, %14110 ]
  %14156 = trunc <4 x i64> %14155 to <4 x i32>
  %14157 = add <4 x i32> %14156, <i32 1, i32 1, i32 1, i32 1>
  %14158 = sitofp <4 x i32> %14157 to <4 x float>
  %14159 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14158
  %14160 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14154
  %14161 = bitcast float* %14160 to <4 x float>*
  store <4 x float> %14159, <4 x float>* %14161, align 16, !tbaa !2
  %14162 = or i64 %14154, 4
  %14163 = trunc <4 x i64> %14155 to <4 x i32>
  %14164 = add <4 x i32> %14163, <i32 5, i32 5, i32 5, i32 5>
  %14165 = sitofp <4 x i32> %14164 to <4 x float>
  %14166 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14165
  %14167 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14162
  %14168 = bitcast float* %14167 to <4 x float>*
  store <4 x float> %14166, <4 x float>* %14168, align 16, !tbaa !2
  %14169 = add nuw nsw i64 %14154, 8
  %14170 = add <4 x i64> %14155, <i64 8, i64 8, i64 8, i64 8>
  %14171 = icmp eq i64 %14169, 32000
  br i1 %14171, label %15603, label %14153, !llvm.loop !282

14172:                                            ; preds = %14107
  %14173 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i64 0, i64 0)) #15
  %14174 = icmp eq i32 %14173, 0
  br i1 %14174, label %14175, label %14240

14175:                                            ; preds = %14172
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %14176

14176:                                            ; preds = %14176, %14175
  %14177 = phi i64 [ 0, %14175 ], [ %14217, %14176 ]
  %14178 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14177
  %14179 = bitcast float* %14178 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14179, align 16, !tbaa !2
  %14180 = getelementptr inbounds float, float* %14178, i64 4
  %14181 = bitcast float* %14180 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14181, align 16, !tbaa !2
  %14182 = or i64 %14177, 8
  %14183 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14182
  %14184 = bitcast float* %14183 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14184, align 16, !tbaa !2
  %14185 = getelementptr inbounds float, float* %14183, i64 4
  %14186 = bitcast float* %14185 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14186, align 16, !tbaa !2
  %14187 = or i64 %14177, 16
  %14188 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14187
  %14189 = bitcast float* %14188 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14189, align 16, !tbaa !2
  %14190 = getelementptr inbounds float, float* %14188, i64 4
  %14191 = bitcast float* %14190 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14191, align 16, !tbaa !2
  %14192 = or i64 %14177, 24
  %14193 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14192
  %14194 = bitcast float* %14193 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14194, align 16, !tbaa !2
  %14195 = getelementptr inbounds float, float* %14193, i64 4
  %14196 = bitcast float* %14195 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14196, align 16, !tbaa !2
  %14197 = or i64 %14177, 32
  %14198 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14197
  %14199 = bitcast float* %14198 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14199, align 16, !tbaa !2
  %14200 = getelementptr inbounds float, float* %14198, i64 4
  %14201 = bitcast float* %14200 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14201, align 16, !tbaa !2
  %14202 = or i64 %14177, 40
  %14203 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14202
  %14204 = bitcast float* %14203 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14204, align 16, !tbaa !2
  %14205 = getelementptr inbounds float, float* %14203, i64 4
  %14206 = bitcast float* %14205 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14206, align 16, !tbaa !2
  %14207 = or i64 %14177, 48
  %14208 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14207
  %14209 = bitcast float* %14208 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14209, align 16, !tbaa !2
  %14210 = getelementptr inbounds float, float* %14208, i64 4
  %14211 = bitcast float* %14210 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14211, align 16, !tbaa !2
  %14212 = or i64 %14177, 56
  %14213 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14212
  %14214 = bitcast float* %14213 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14214, align 16, !tbaa !2
  %14215 = getelementptr inbounds float, float* %14213, i64 4
  %14216 = bitcast float* %14215 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14216, align 16, !tbaa !2
  %14217 = add nuw nsw i64 %14177, 64
  %14218 = icmp eq i64 %14217, 32000
  br i1 %14218, label %14219, label %14176, !llvm.loop !283

14219:                                            ; preds = %14176, %14219
  %14220 = phi i64 [ %14237, %14219 ], [ 0, %14176 ]
  %14221 = phi <4 x i64> [ %14238, %14219 ], [ <i64 0, i64 1, i64 2, i64 3>, %14176 ]
  %14222 = add nuw nsw <4 x i64> %14221, <i64 1, i64 1, i64 1, i64 1>
  %14223 = mul nuw nsw <4 x i64> %14222, %14222
  %14224 = trunc <4 x i64> %14223 to <4 x i32>
  %14225 = sitofp <4 x i32> %14224 to <4 x float>
  %14226 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14225
  %14227 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14220
  %14228 = bitcast float* %14227 to <4 x float>*
  store <4 x float> %14226, <4 x float>* %14228, align 16, !tbaa !2
  %14229 = or i64 %14220, 4
  %14230 = add <4 x i64> %14221, <i64 5, i64 5, i64 5, i64 5>
  %14231 = mul nuw nsw <4 x i64> %14230, %14230
  %14232 = trunc <4 x i64> %14231 to <4 x i32>
  %14233 = sitofp <4 x i32> %14232 to <4 x float>
  %14234 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14233
  %14235 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14229
  %14236 = bitcast float* %14235 to <4 x float>*
  store <4 x float> %14234, <4 x float>* %14236, align 16, !tbaa !2
  %14237 = add nuw nsw i64 %14220, 8
  %14238 = add <4 x i64> %14221, <i64 8, i64 8, i64 8, i64 8>
  %14239 = icmp eq i64 %14237, 32000
  br i1 %14239, label %15603, label %14219, !llvm.loop !284

14240:                                            ; preds = %14172
  %14241 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0)) #15
  %14242 = icmp eq i32 %14241, 0
  br i1 %14242, label %14243, label %14325

14243:                                            ; preds = %14240
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %14244

14244:                                            ; preds = %14244, %14243
  %14245 = phi i64 [ 0, %14243 ], [ %14285, %14244 ]
  %14246 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14245
  %14247 = bitcast float* %14246 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14247, align 16, !tbaa !2
  %14248 = getelementptr inbounds float, float* %14246, i64 4
  %14249 = bitcast float* %14248 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14249, align 16, !tbaa !2
  %14250 = or i64 %14245, 8
  %14251 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14250
  %14252 = bitcast float* %14251 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14252, align 16, !tbaa !2
  %14253 = getelementptr inbounds float, float* %14251, i64 4
  %14254 = bitcast float* %14253 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14254, align 16, !tbaa !2
  %14255 = or i64 %14245, 16
  %14256 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14255
  %14257 = bitcast float* %14256 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14257, align 16, !tbaa !2
  %14258 = getelementptr inbounds float, float* %14256, i64 4
  %14259 = bitcast float* %14258 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14259, align 16, !tbaa !2
  %14260 = or i64 %14245, 24
  %14261 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14260
  %14262 = bitcast float* %14261 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14262, align 16, !tbaa !2
  %14263 = getelementptr inbounds float, float* %14261, i64 4
  %14264 = bitcast float* %14263 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14264, align 16, !tbaa !2
  %14265 = or i64 %14245, 32
  %14266 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14265
  %14267 = bitcast float* %14266 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14267, align 16, !tbaa !2
  %14268 = getelementptr inbounds float, float* %14266, i64 4
  %14269 = bitcast float* %14268 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14269, align 16, !tbaa !2
  %14270 = or i64 %14245, 40
  %14271 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14270
  %14272 = bitcast float* %14271 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14272, align 16, !tbaa !2
  %14273 = getelementptr inbounds float, float* %14271, i64 4
  %14274 = bitcast float* %14273 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14274, align 16, !tbaa !2
  %14275 = or i64 %14245, 48
  %14276 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14275
  %14277 = bitcast float* %14276 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14277, align 16, !tbaa !2
  %14278 = getelementptr inbounds float, float* %14276, i64 4
  %14279 = bitcast float* %14278 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14279, align 16, !tbaa !2
  %14280 = or i64 %14245, 56
  %14281 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14280
  %14282 = bitcast float* %14281 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14282, align 16, !tbaa !2
  %14283 = getelementptr inbounds float, float* %14281, i64 4
  %14284 = bitcast float* %14283 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14284, align 16, !tbaa !2
  %14285 = add nuw nsw i64 %14245, 64
  %14286 = icmp eq i64 %14285, 32000
  br i1 %14286, label %14287, label %14244, !llvm.loop !285

14287:                                            ; preds = %14244, %14287
  %14288 = phi i64 [ %14303, %14287 ], [ 0, %14244 ]
  %14289 = phi <4 x i64> [ %14304, %14287 ], [ <i64 0, i64 1, i64 2, i64 3>, %14244 ]
  %14290 = trunc <4 x i64> %14289 to <4 x i32>
  %14291 = add <4 x i32> %14290, <i32 1, i32 1, i32 1, i32 1>
  %14292 = sitofp <4 x i32> %14291 to <4 x float>
  %14293 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14292
  %14294 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14288
  %14295 = bitcast float* %14294 to <4 x float>*
  store <4 x float> %14293, <4 x float>* %14295, align 16, !tbaa !2
  %14296 = or i64 %14288, 4
  %14297 = trunc <4 x i64> %14289 to <4 x i32>
  %14298 = add <4 x i32> %14297, <i32 5, i32 5, i32 5, i32 5>
  %14299 = sitofp <4 x i32> %14298 to <4 x float>
  %14300 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14299
  %14301 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14296
  %14302 = bitcast float* %14301 to <4 x float>*
  store <4 x float> %14300, <4 x float>* %14302, align 16, !tbaa !2
  %14303 = add nuw nsw i64 %14288, 8
  %14304 = add <4 x i64> %14289, <i64 8, i64 8, i64 8, i64 8>
  %14305 = icmp eq i64 %14303, 32000
  br i1 %14305, label %14306, label %14287, !llvm.loop !286

14306:                                            ; preds = %14287, %14306
  %14307 = phi i64 [ %14322, %14306 ], [ 0, %14287 ]
  %14308 = phi <4 x i64> [ %14323, %14306 ], [ <i64 0, i64 1, i64 2, i64 3>, %14287 ]
  %14309 = trunc <4 x i64> %14308 to <4 x i32>
  %14310 = add <4 x i32> %14309, <i32 1, i32 1, i32 1, i32 1>
  %14311 = sitofp <4 x i32> %14310 to <4 x float>
  %14312 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14311
  %14313 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %14307
  %14314 = bitcast float* %14313 to <4 x float>*
  store <4 x float> %14312, <4 x float>* %14314, align 16, !tbaa !2
  %14315 = or i64 %14307, 4
  %14316 = trunc <4 x i64> %14308 to <4 x i32>
  %14317 = add <4 x i32> %14316, <i32 5, i32 5, i32 5, i32 5>
  %14318 = sitofp <4 x i32> %14317 to <4 x float>
  %14319 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14318
  %14320 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %14315
  %14321 = bitcast float* %14320 to <4 x float>*
  store <4 x float> %14319, <4 x float>* %14321, align 16, !tbaa !2
  %14322 = add nuw nsw i64 %14307, 8
  %14323 = add <4 x i64> %14308, <i64 8, i64 8, i64 8, i64 8>
  %14324 = icmp eq i64 %14322, 32000
  br i1 %14324, label %15603, label %14306, !llvm.loop !287

14325:                                            ; preds = %14240
  %14326 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i64 0, i64 0)) #15
  %14327 = icmp eq i32 %14326, 0
  br i1 %14327, label %14328, label %14366

14328:                                            ; preds = %14325, %14328
  %14329 = phi i64 [ %14344, %14328 ], [ 0, %14325 ]
  %14330 = phi <4 x i64> [ %14345, %14328 ], [ <i64 0, i64 1, i64 2, i64 3>, %14325 ]
  %14331 = trunc <4 x i64> %14330 to <4 x i32>
  %14332 = add <4 x i32> %14331, <i32 1, i32 1, i32 1, i32 1>
  %14333 = sitofp <4 x i32> %14332 to <4 x float>
  %14334 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14333
  %14335 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14329
  %14336 = bitcast float* %14335 to <4 x float>*
  store <4 x float> %14334, <4 x float>* %14336, align 16, !tbaa !2
  %14337 = or i64 %14329, 4
  %14338 = trunc <4 x i64> %14330 to <4 x i32>
  %14339 = add <4 x i32> %14338, <i32 5, i32 5, i32 5, i32 5>
  %14340 = sitofp <4 x i32> %14339 to <4 x float>
  %14341 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14340
  %14342 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14337
  %14343 = bitcast float* %14342 to <4 x float>*
  store <4 x float> %14341, <4 x float>* %14343, align 16, !tbaa !2
  %14344 = add nuw nsw i64 %14329, 8
  %14345 = add <4 x i64> %14330, <i64 8, i64 8, i64 8, i64 8>
  %14346 = icmp eq i64 %14344, 32000
  br i1 %14346, label %14347, label %14328, !llvm.loop !288

14347:                                            ; preds = %14328, %14347
  %14348 = phi i64 [ %14363, %14347 ], [ 0, %14328 ]
  %14349 = phi <4 x i64> [ %14364, %14347 ], [ <i64 0, i64 1, i64 2, i64 3>, %14328 ]
  %14350 = trunc <4 x i64> %14349 to <4 x i32>
  %14351 = add <4 x i32> %14350, <i32 1, i32 1, i32 1, i32 1>
  %14352 = sitofp <4 x i32> %14351 to <4 x float>
  %14353 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14352
  %14354 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14348
  %14355 = bitcast float* %14354 to <4 x float>*
  store <4 x float> %14353, <4 x float>* %14355, align 16, !tbaa !2
  %14356 = or i64 %14348, 4
  %14357 = trunc <4 x i64> %14349 to <4 x i32>
  %14358 = add <4 x i32> %14357, <i32 5, i32 5, i32 5, i32 5>
  %14359 = sitofp <4 x i32> %14358 to <4 x float>
  %14360 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14359
  %14361 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14356
  %14362 = bitcast float* %14361 to <4 x float>*
  store <4 x float> %14360, <4 x float>* %14362, align 16, !tbaa !2
  %14363 = add nuw nsw i64 %14348, 8
  %14364 = add <4 x i64> %14349, <i64 8, i64 8, i64 8, i64 8>
  %14365 = icmp eq i64 %14363, 32000
  br i1 %14365, label %15603, label %14347, !llvm.loop !289

14366:                                            ; preds = %14325
  %14367 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i64 0, i64 0)) #15
  %14368 = icmp eq i32 %14367, 0
  br i1 %14368, label %14369, label %14527

14369:                                            ; preds = %14366, %14369
  %14370 = phi i64 [ %14385, %14369 ], [ 0, %14366 ]
  %14371 = phi <4 x i64> [ %14386, %14369 ], [ <i64 0, i64 1, i64 2, i64 3>, %14366 ]
  %14372 = trunc <4 x i64> %14371 to <4 x i32>
  %14373 = add <4 x i32> %14372, <i32 1, i32 1, i32 1, i32 1>
  %14374 = sitofp <4 x i32> %14373 to <4 x float>
  %14375 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14374
  %14376 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14370
  %14377 = bitcast float* %14376 to <4 x float>*
  store <4 x float> %14375, <4 x float>* %14377, align 16, !tbaa !2
  %14378 = or i64 %14370, 4
  %14379 = trunc <4 x i64> %14371 to <4 x i32>
  %14380 = add <4 x i32> %14379, <i32 5, i32 5, i32 5, i32 5>
  %14381 = sitofp <4 x i32> %14380 to <4 x float>
  %14382 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14381
  %14383 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14378
  %14384 = bitcast float* %14383 to <4 x float>*
  store <4 x float> %14382, <4 x float>* %14384, align 16, !tbaa !2
  %14385 = add nuw nsw i64 %14370, 8
  %14386 = add <4 x i64> %14371, <i64 8, i64 8, i64 8, i64 8>
  %14387 = icmp eq i64 %14385, 32000
  br i1 %14387, label %14388, label %14369, !llvm.loop !290

14388:                                            ; preds = %14369, %14388
  %14389 = phi i64 [ %14390, %14388 ], [ 0, %14369 ]
  %14390 = add nuw nsw i64 %14389, 1
  %14391 = trunc i64 %14390 to i32
  %14392 = sitofp i32 %14391 to float
  %14393 = fdiv float 1.000000e+00, %14392
  %14394 = insertelement <4 x float> undef, float %14393, i32 0
  %14395 = shufflevector <4 x float> %14394, <4 x float> undef, <4 x i32> zeroinitializer
  %14396 = insertelement <4 x float> undef, float %14393, i32 0
  %14397 = shufflevector <4 x float> %14396, <4 x float> undef, <4 x i32> zeroinitializer
  %14398 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 0
  %14399 = bitcast float* %14398 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14399, align 16, !tbaa !2
  %14400 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 4
  %14401 = bitcast float* %14400 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14401, align 16, !tbaa !2
  %14402 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 8
  %14403 = bitcast float* %14402 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14403, align 16, !tbaa !2
  %14404 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 12
  %14405 = bitcast float* %14404 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14405, align 16, !tbaa !2
  %14406 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 16
  %14407 = bitcast float* %14406 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14407, align 16, !tbaa !2
  %14408 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 20
  %14409 = bitcast float* %14408 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14409, align 16, !tbaa !2
  %14410 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 24
  %14411 = bitcast float* %14410 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14411, align 16, !tbaa !2
  %14412 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 28
  %14413 = bitcast float* %14412 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14413, align 16, !tbaa !2
  %14414 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 32
  %14415 = bitcast float* %14414 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14415, align 16, !tbaa !2
  %14416 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 36
  %14417 = bitcast float* %14416 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14417, align 16, !tbaa !2
  %14418 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 40
  %14419 = bitcast float* %14418 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14419, align 16, !tbaa !2
  %14420 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 44
  %14421 = bitcast float* %14420 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14421, align 16, !tbaa !2
  %14422 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 48
  %14423 = bitcast float* %14422 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14423, align 16, !tbaa !2
  %14424 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 52
  %14425 = bitcast float* %14424 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14425, align 16, !tbaa !2
  %14426 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 56
  %14427 = bitcast float* %14426 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14427, align 16, !tbaa !2
  %14428 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 60
  %14429 = bitcast float* %14428 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14429, align 16, !tbaa !2
  %14430 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 64
  %14431 = bitcast float* %14430 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14431, align 16, !tbaa !2
  %14432 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 68
  %14433 = bitcast float* %14432 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14433, align 16, !tbaa !2
  %14434 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 72
  %14435 = bitcast float* %14434 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14435, align 16, !tbaa !2
  %14436 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 76
  %14437 = bitcast float* %14436 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14437, align 16, !tbaa !2
  %14438 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 80
  %14439 = bitcast float* %14438 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14439, align 16, !tbaa !2
  %14440 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 84
  %14441 = bitcast float* %14440 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14441, align 16, !tbaa !2
  %14442 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 88
  %14443 = bitcast float* %14442 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14443, align 16, !tbaa !2
  %14444 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 92
  %14445 = bitcast float* %14444 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14445, align 16, !tbaa !2
  %14446 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 96
  %14447 = bitcast float* %14446 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14447, align 16, !tbaa !2
  %14448 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 100
  %14449 = bitcast float* %14448 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14449, align 16, !tbaa !2
  %14450 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 104
  %14451 = bitcast float* %14450 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14451, align 16, !tbaa !2
  %14452 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 108
  %14453 = bitcast float* %14452 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14453, align 16, !tbaa !2
  %14454 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 112
  %14455 = bitcast float* %14454 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14455, align 16, !tbaa !2
  %14456 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 116
  %14457 = bitcast float* %14456 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14457, align 16, !tbaa !2
  %14458 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 120
  %14459 = bitcast float* %14458 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14459, align 16, !tbaa !2
  %14460 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 124
  %14461 = bitcast float* %14460 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14461, align 16, !tbaa !2
  %14462 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 128
  %14463 = bitcast float* %14462 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14463, align 16, !tbaa !2
  %14464 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 132
  %14465 = bitcast float* %14464 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14465, align 16, !tbaa !2
  %14466 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 136
  %14467 = bitcast float* %14466 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14467, align 16, !tbaa !2
  %14468 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 140
  %14469 = bitcast float* %14468 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14469, align 16, !tbaa !2
  %14470 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 144
  %14471 = bitcast float* %14470 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14471, align 16, !tbaa !2
  %14472 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 148
  %14473 = bitcast float* %14472 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14473, align 16, !tbaa !2
  %14474 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 152
  %14475 = bitcast float* %14474 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14475, align 16, !tbaa !2
  %14476 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 156
  %14477 = bitcast float* %14476 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14477, align 16, !tbaa !2
  %14478 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 160
  %14479 = bitcast float* %14478 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14479, align 16, !tbaa !2
  %14480 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 164
  %14481 = bitcast float* %14480 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14481, align 16, !tbaa !2
  %14482 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 168
  %14483 = bitcast float* %14482 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14483, align 16, !tbaa !2
  %14484 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 172
  %14485 = bitcast float* %14484 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14485, align 16, !tbaa !2
  %14486 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 176
  %14487 = bitcast float* %14486 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14487, align 16, !tbaa !2
  %14488 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 180
  %14489 = bitcast float* %14488 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14489, align 16, !tbaa !2
  %14490 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 184
  %14491 = bitcast float* %14490 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14491, align 16, !tbaa !2
  %14492 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 188
  %14493 = bitcast float* %14492 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14493, align 16, !tbaa !2
  %14494 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 192
  %14495 = bitcast float* %14494 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14495, align 16, !tbaa !2
  %14496 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 196
  %14497 = bitcast float* %14496 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14497, align 16, !tbaa !2
  %14498 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 200
  %14499 = bitcast float* %14498 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14499, align 16, !tbaa !2
  %14500 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 204
  %14501 = bitcast float* %14500 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14501, align 16, !tbaa !2
  %14502 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 208
  %14503 = bitcast float* %14502 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14503, align 16, !tbaa !2
  %14504 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 212
  %14505 = bitcast float* %14504 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14505, align 16, !tbaa !2
  %14506 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 216
  %14507 = bitcast float* %14506 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14507, align 16, !tbaa !2
  %14508 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 220
  %14509 = bitcast float* %14508 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14509, align 16, !tbaa !2
  %14510 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 224
  %14511 = bitcast float* %14510 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14511, align 16, !tbaa !2
  %14512 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 228
  %14513 = bitcast float* %14512 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14513, align 16, !tbaa !2
  %14514 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 232
  %14515 = bitcast float* %14514 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14515, align 16, !tbaa !2
  %14516 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 236
  %14517 = bitcast float* %14516 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14517, align 16, !tbaa !2
  %14518 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 240
  %14519 = bitcast float* %14518 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14519, align 16, !tbaa !2
  %14520 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 244
  %14521 = bitcast float* %14520 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14521, align 16, !tbaa !2
  %14522 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 248
  %14523 = bitcast float* %14522 to <4 x float>*
  store <4 x float> %14395, <4 x float>* %14523, align 16, !tbaa !2
  %14524 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %14389, i64 252
  %14525 = bitcast float* %14524 to <4 x float>*
  store <4 x float> %14397, <4 x float>* %14525, align 16, !tbaa !2
  %14526 = icmp eq i64 %14390, 256
  br i1 %14526, label %15603, label %14388

14527:                                            ; preds = %14366
  %14528 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0)) #15
  %14529 = icmp eq i32 %14528, 0
  br i1 %14529, label %14530, label %14612

14530:                                            ; preds = %14527
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %14531

14531:                                            ; preds = %14531, %14530
  %14532 = phi i64 [ 0, %14530 ], [ %14572, %14531 ]
  %14533 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14532
  %14534 = bitcast float* %14533 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14534, align 16, !tbaa !2
  %14535 = getelementptr inbounds float, float* %14533, i64 4
  %14536 = bitcast float* %14535 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14536, align 16, !tbaa !2
  %14537 = or i64 %14532, 8
  %14538 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14537
  %14539 = bitcast float* %14538 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14539, align 16, !tbaa !2
  %14540 = getelementptr inbounds float, float* %14538, i64 4
  %14541 = bitcast float* %14540 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14541, align 16, !tbaa !2
  %14542 = or i64 %14532, 16
  %14543 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14542
  %14544 = bitcast float* %14543 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14544, align 16, !tbaa !2
  %14545 = getelementptr inbounds float, float* %14543, i64 4
  %14546 = bitcast float* %14545 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14546, align 16, !tbaa !2
  %14547 = or i64 %14532, 24
  %14548 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14547
  %14549 = bitcast float* %14548 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14549, align 16, !tbaa !2
  %14550 = getelementptr inbounds float, float* %14548, i64 4
  %14551 = bitcast float* %14550 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14551, align 16, !tbaa !2
  %14552 = or i64 %14532, 32
  %14553 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14552
  %14554 = bitcast float* %14553 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14554, align 16, !tbaa !2
  %14555 = getelementptr inbounds float, float* %14553, i64 4
  %14556 = bitcast float* %14555 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14556, align 16, !tbaa !2
  %14557 = or i64 %14532, 40
  %14558 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14557
  %14559 = bitcast float* %14558 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14559, align 16, !tbaa !2
  %14560 = getelementptr inbounds float, float* %14558, i64 4
  %14561 = bitcast float* %14560 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14561, align 16, !tbaa !2
  %14562 = or i64 %14532, 48
  %14563 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14562
  %14564 = bitcast float* %14563 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14564, align 16, !tbaa !2
  %14565 = getelementptr inbounds float, float* %14563, i64 4
  %14566 = bitcast float* %14565 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14566, align 16, !tbaa !2
  %14567 = or i64 %14532, 56
  %14568 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14567
  %14569 = bitcast float* %14568 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14569, align 16, !tbaa !2
  %14570 = getelementptr inbounds float, float* %14568, i64 4
  %14571 = bitcast float* %14570 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14571, align 16, !tbaa !2
  %14572 = add nuw nsw i64 %14532, 64
  %14573 = icmp eq i64 %14572, 32000
  br i1 %14573, label %14574, label %14531, !llvm.loop !291

14574:                                            ; preds = %14531, %14574
  %14575 = phi i64 [ %14590, %14574 ], [ 0, %14531 ]
  %14576 = phi <4 x i64> [ %14591, %14574 ], [ <i64 0, i64 1, i64 2, i64 3>, %14531 ]
  %14577 = trunc <4 x i64> %14576 to <4 x i32>
  %14578 = add <4 x i32> %14577, <i32 1, i32 1, i32 1, i32 1>
  %14579 = sitofp <4 x i32> %14578 to <4 x float>
  %14580 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14579
  %14581 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14575
  %14582 = bitcast float* %14581 to <4 x float>*
  store <4 x float> %14580, <4 x float>* %14582, align 16, !tbaa !2
  %14583 = or i64 %14575, 4
  %14584 = trunc <4 x i64> %14576 to <4 x i32>
  %14585 = add <4 x i32> %14584, <i32 5, i32 5, i32 5, i32 5>
  %14586 = sitofp <4 x i32> %14585 to <4 x float>
  %14587 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14586
  %14588 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14583
  %14589 = bitcast float* %14588 to <4 x float>*
  store <4 x float> %14587, <4 x float>* %14589, align 16, !tbaa !2
  %14590 = add nuw nsw i64 %14575, 8
  %14591 = add <4 x i64> %14576, <i64 8, i64 8, i64 8, i64 8>
  %14592 = icmp eq i64 %14590, 32000
  br i1 %14592, label %14593, label %14574, !llvm.loop !292

14593:                                            ; preds = %14574, %14593
  %14594 = phi i64 [ %14609, %14593 ], [ 0, %14574 ]
  %14595 = phi <4 x i64> [ %14610, %14593 ], [ <i64 0, i64 1, i64 2, i64 3>, %14574 ]
  %14596 = trunc <4 x i64> %14595 to <4 x i32>
  %14597 = add <4 x i32> %14596, <i32 1, i32 1, i32 1, i32 1>
  %14598 = sitofp <4 x i32> %14597 to <4 x float>
  %14599 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14598
  %14600 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %14594
  %14601 = bitcast float* %14600 to <4 x float>*
  store <4 x float> %14599, <4 x float>* %14601, align 16, !tbaa !2
  %14602 = or i64 %14594, 4
  %14603 = trunc <4 x i64> %14595 to <4 x i32>
  %14604 = add <4 x i32> %14603, <i32 5, i32 5, i32 5, i32 5>
  %14605 = sitofp <4 x i32> %14604 to <4 x float>
  %14606 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14605
  %14607 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %14602
  %14608 = bitcast float* %14607 to <4 x float>*
  store <4 x float> %14606, <4 x float>* %14608, align 16, !tbaa !2
  %14609 = add nuw nsw i64 %14594, 8
  %14610 = add <4 x i64> %14595, <i64 8, i64 8, i64 8, i64 8>
  %14611 = icmp eq i64 %14609, 32000
  br i1 %14611, label %15603, label %14593, !llvm.loop !293

14612:                                            ; preds = %14527
  %14613 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i64 0, i64 0)) #15
  %14614 = icmp eq i32 %14613, 0
  br i1 %14614, label %14615, label %14696

14615:                                            ; preds = %14612, %14615
  %14616 = phi i64 [ %14656, %14615 ], [ 0, %14612 ]
  %14617 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14616
  %14618 = bitcast float* %14617 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14618, align 16, !tbaa !2
  %14619 = getelementptr inbounds float, float* %14617, i64 4
  %14620 = bitcast float* %14619 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14620, align 16, !tbaa !2
  %14621 = or i64 %14616, 8
  %14622 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14621
  %14623 = bitcast float* %14622 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14623, align 16, !tbaa !2
  %14624 = getelementptr inbounds float, float* %14622, i64 4
  %14625 = bitcast float* %14624 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14625, align 16, !tbaa !2
  %14626 = or i64 %14616, 16
  %14627 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14626
  %14628 = bitcast float* %14627 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14628, align 16, !tbaa !2
  %14629 = getelementptr inbounds float, float* %14627, i64 4
  %14630 = bitcast float* %14629 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14630, align 16, !tbaa !2
  %14631 = or i64 %14616, 24
  %14632 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14631
  %14633 = bitcast float* %14632 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14633, align 16, !tbaa !2
  %14634 = getelementptr inbounds float, float* %14632, i64 4
  %14635 = bitcast float* %14634 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14635, align 16, !tbaa !2
  %14636 = or i64 %14616, 32
  %14637 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14636
  %14638 = bitcast float* %14637 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14638, align 16, !tbaa !2
  %14639 = getelementptr inbounds float, float* %14637, i64 4
  %14640 = bitcast float* %14639 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14640, align 16, !tbaa !2
  %14641 = or i64 %14616, 40
  %14642 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14641
  %14643 = bitcast float* %14642 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14643, align 16, !tbaa !2
  %14644 = getelementptr inbounds float, float* %14642, i64 4
  %14645 = bitcast float* %14644 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14645, align 16, !tbaa !2
  %14646 = or i64 %14616, 48
  %14647 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14646
  %14648 = bitcast float* %14647 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14648, align 16, !tbaa !2
  %14649 = getelementptr inbounds float, float* %14647, i64 4
  %14650 = bitcast float* %14649 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14650, align 16, !tbaa !2
  %14651 = or i64 %14616, 56
  %14652 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14651
  %14653 = bitcast float* %14652 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14653, align 16, !tbaa !2
  %14654 = getelementptr inbounds float, float* %14652, i64 4
  %14655 = bitcast float* %14654 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14655, align 16, !tbaa !2
  %14656 = add nuw nsw i64 %14616, 64
  %14657 = icmp eq i64 %14656, 32000
  br i1 %14657, label %14658, label %14615, !llvm.loop !294

14658:                                            ; preds = %14615, %14658
  %14659 = phi i64 [ %14674, %14658 ], [ 0, %14615 ]
  %14660 = phi <4 x i64> [ %14675, %14658 ], [ <i64 0, i64 1, i64 2, i64 3>, %14615 ]
  %14661 = trunc <4 x i64> %14660 to <4 x i32>
  %14662 = add <4 x i32> %14661, <i32 1, i32 1, i32 1, i32 1>
  %14663 = sitofp <4 x i32> %14662 to <4 x float>
  %14664 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14663
  %14665 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14659
  %14666 = bitcast float* %14665 to <4 x float>*
  store <4 x float> %14664, <4 x float>* %14666, align 16, !tbaa !2
  %14667 = or i64 %14659, 4
  %14668 = trunc <4 x i64> %14660 to <4 x i32>
  %14669 = add <4 x i32> %14668, <i32 5, i32 5, i32 5, i32 5>
  %14670 = sitofp <4 x i32> %14669 to <4 x float>
  %14671 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14670
  %14672 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14667
  %14673 = bitcast float* %14672 to <4 x float>*
  store <4 x float> %14671, <4 x float>* %14673, align 16, !tbaa !2
  %14674 = add nuw nsw i64 %14659, 8
  %14675 = add <4 x i64> %14660, <i64 8, i64 8, i64 8, i64 8>
  %14676 = icmp eq i64 %14674, 32000
  br i1 %14676, label %14677, label %14658, !llvm.loop !295

14677:                                            ; preds = %14658, %14677
  %14678 = phi i64 [ %14693, %14677 ], [ 0, %14658 ]
  %14679 = phi <4 x i64> [ %14694, %14677 ], [ <i64 0, i64 1, i64 2, i64 3>, %14658 ]
  %14680 = trunc <4 x i64> %14679 to <4 x i32>
  %14681 = add <4 x i32> %14680, <i32 1, i32 1, i32 1, i32 1>
  %14682 = sitofp <4 x i32> %14681 to <4 x float>
  %14683 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14682
  %14684 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14678
  %14685 = bitcast float* %14684 to <4 x float>*
  store <4 x float> %14683, <4 x float>* %14685, align 16, !tbaa !2
  %14686 = or i64 %14678, 4
  %14687 = trunc <4 x i64> %14679 to <4 x i32>
  %14688 = add <4 x i32> %14687, <i32 5, i32 5, i32 5, i32 5>
  %14689 = sitofp <4 x i32> %14688 to <4 x float>
  %14690 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14689
  %14691 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14686
  %14692 = bitcast float* %14691 to <4 x float>*
  store <4 x float> %14690, <4 x float>* %14692, align 16, !tbaa !2
  %14693 = add nuw nsw i64 %14678, 8
  %14694 = add <4 x i64> %14679, <i64 8, i64 8, i64 8, i64 8>
  %14695 = icmp eq i64 %14693, 32000
  br i1 %14695, label %15603, label %14677, !llvm.loop !296

14696:                                            ; preds = %14612
  %14697 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0)) #15
  %14698 = icmp eq i32 %14697, 0
  br i1 %14698, label %14699, label %14721

14699:                                            ; preds = %14696
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %14700

14700:                                            ; preds = %14700, %14699
  %14701 = phi i64 [ 0, %14699 ], [ %14718, %14700 ]
  %14702 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %14699 ], [ %14719, %14700 ]
  %14703 = add nuw nsw <4 x i64> %14702, <i64 1, i64 1, i64 1, i64 1>
  %14704 = mul nuw nsw <4 x i64> %14703, %14703
  %14705 = trunc <4 x i64> %14704 to <4 x i32>
  %14706 = sitofp <4 x i32> %14705 to <4 x float>
  %14707 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14706
  %14708 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14701
  %14709 = bitcast float* %14708 to <4 x float>*
  store <4 x float> %14707, <4 x float>* %14709, align 16, !tbaa !2
  %14710 = or i64 %14701, 4
  %14711 = add <4 x i64> %14702, <i64 5, i64 5, i64 5, i64 5>
  %14712 = mul nuw nsw <4 x i64> %14711, %14711
  %14713 = trunc <4 x i64> %14712 to <4 x i32>
  %14714 = sitofp <4 x i32> %14713 to <4 x float>
  %14715 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14714
  %14716 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14710
  %14717 = bitcast float* %14716 to <4 x float>*
  store <4 x float> %14715, <4 x float>* %14717, align 16, !tbaa !2
  %14718 = add nuw nsw i64 %14701, 8
  %14719 = add <4 x i64> %14702, <i64 8, i64 8, i64 8, i64 8>
  %14720 = icmp eq i64 %14718, 32000
  br i1 %14720, label %15603, label %14700, !llvm.loop !297

14721:                                            ; preds = %14696
  %14722 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i64 0, i64 0)) #15
  %14723 = icmp eq i32 %14722, 0
  br i1 %14723, label %14724, label %14746

14724:                                            ; preds = %14721
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %14725

14725:                                            ; preds = %14725, %14724
  %14726 = phi i64 [ 0, %14724 ], [ %14743, %14725 ]
  %14727 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %14724 ], [ %14744, %14725 ]
  %14728 = add nuw nsw <4 x i64> %14727, <i64 1, i64 1, i64 1, i64 1>
  %14729 = mul nuw nsw <4 x i64> %14728, %14728
  %14730 = trunc <4 x i64> %14729 to <4 x i32>
  %14731 = sitofp <4 x i32> %14730 to <4 x float>
  %14732 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14731
  %14733 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14726
  %14734 = bitcast float* %14733 to <4 x float>*
  store <4 x float> %14732, <4 x float>* %14734, align 16, !tbaa !2
  %14735 = or i64 %14726, 4
  %14736 = add <4 x i64> %14727, <i64 5, i64 5, i64 5, i64 5>
  %14737 = mul nuw nsw <4 x i64> %14736, %14736
  %14738 = trunc <4 x i64> %14737 to <4 x i32>
  %14739 = sitofp <4 x i32> %14738 to <4 x float>
  %14740 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14739
  %14741 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14735
  %14742 = bitcast float* %14741 to <4 x float>*
  store <4 x float> %14740, <4 x float>* %14742, align 16, !tbaa !2
  %14743 = add nuw nsw i64 %14726, 8
  %14744 = add <4 x i64> %14727, <i64 8, i64 8, i64 8, i64 8>
  %14745 = icmp eq i64 %14743, 32000
  br i1 %14745, label %15603, label %14725, !llvm.loop !298

14746:                                            ; preds = %14721
  %14747 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i64 0, i64 0)) #15
  %14748 = icmp eq i32 %14747, 0
  br i1 %14748, label %14749, label %14771

14749:                                            ; preds = %14746
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %14750

14750:                                            ; preds = %14750, %14749
  %14751 = phi i64 [ 0, %14749 ], [ %14768, %14750 ]
  %14752 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %14749 ], [ %14769, %14750 ]
  %14753 = add nuw nsw <4 x i64> %14752, <i64 1, i64 1, i64 1, i64 1>
  %14754 = mul nuw nsw <4 x i64> %14753, %14753
  %14755 = trunc <4 x i64> %14754 to <4 x i32>
  %14756 = sitofp <4 x i32> %14755 to <4 x float>
  %14757 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14756
  %14758 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14751
  %14759 = bitcast float* %14758 to <4 x float>*
  store <4 x float> %14757, <4 x float>* %14759, align 16, !tbaa !2
  %14760 = or i64 %14751, 4
  %14761 = add <4 x i64> %14752, <i64 5, i64 5, i64 5, i64 5>
  %14762 = mul nuw nsw <4 x i64> %14761, %14761
  %14763 = trunc <4 x i64> %14762 to <4 x i32>
  %14764 = sitofp <4 x i32> %14763 to <4 x float>
  %14765 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14764
  %14766 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14760
  %14767 = bitcast float* %14766 to <4 x float>*
  store <4 x float> %14765, <4 x float>* %14767, align 16, !tbaa !2
  %14768 = add nuw nsw i64 %14751, 8
  %14769 = add <4 x i64> %14752, <i64 8, i64 8, i64 8, i64 8>
  %14770 = icmp eq i64 %14768, 32000
  br i1 %14770, label %15603, label %14750, !llvm.loop !299

14771:                                            ; preds = %14746
  %14772 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i64 0, i64 0)) #15
  %14773 = icmp eq i32 %14772, 0
  br i1 %14773, label %14774, label %14796

14774:                                            ; preds = %14771
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %14775

14775:                                            ; preds = %14775, %14774
  %14776 = phi i64 [ 0, %14774 ], [ %14793, %14775 ]
  %14777 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %14774 ], [ %14794, %14775 ]
  %14778 = add nuw nsw <4 x i64> %14777, <i64 1, i64 1, i64 1, i64 1>
  %14779 = mul nuw nsw <4 x i64> %14778, %14778
  %14780 = trunc <4 x i64> %14779 to <4 x i32>
  %14781 = sitofp <4 x i32> %14780 to <4 x float>
  %14782 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14781
  %14783 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14776
  %14784 = bitcast float* %14783 to <4 x float>*
  store <4 x float> %14782, <4 x float>* %14784, align 16, !tbaa !2
  %14785 = or i64 %14776, 4
  %14786 = add <4 x i64> %14777, <i64 5, i64 5, i64 5, i64 5>
  %14787 = mul nuw nsw <4 x i64> %14786, %14786
  %14788 = trunc <4 x i64> %14787 to <4 x i32>
  %14789 = sitofp <4 x i32> %14788 to <4 x float>
  %14790 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14789
  %14791 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14785
  %14792 = bitcast float* %14791 to <4 x float>*
  store <4 x float> %14790, <4 x float>* %14792, align 16, !tbaa !2
  %14793 = add nuw nsw i64 %14776, 8
  %14794 = add <4 x i64> %14777, <i64 8, i64 8, i64 8, i64 8>
  %14795 = icmp eq i64 %14793, 32000
  br i1 %14795, label %15603, label %14775, !llvm.loop !300

14796:                                            ; preds = %14771
  %14797 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i64 0, i64 0)) #15
  %14798 = icmp eq i32 %14797, 0
  br i1 %14798, label %14799, label %14821

14799:                                            ; preds = %14796
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %14800

14800:                                            ; preds = %14800, %14799
  %14801 = phi i64 [ 0, %14799 ], [ %14818, %14800 ]
  %14802 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %14799 ], [ %14819, %14800 ]
  %14803 = add nuw nsw <4 x i64> %14802, <i64 1, i64 1, i64 1, i64 1>
  %14804 = mul nuw nsw <4 x i64> %14803, %14803
  %14805 = trunc <4 x i64> %14804 to <4 x i32>
  %14806 = sitofp <4 x i32> %14805 to <4 x float>
  %14807 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14806
  %14808 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14801
  %14809 = bitcast float* %14808 to <4 x float>*
  store <4 x float> %14807, <4 x float>* %14809, align 16, !tbaa !2
  %14810 = or i64 %14801, 4
  %14811 = add <4 x i64> %14802, <i64 5, i64 5, i64 5, i64 5>
  %14812 = mul nuw nsw <4 x i64> %14811, %14811
  %14813 = trunc <4 x i64> %14812 to <4 x i32>
  %14814 = sitofp <4 x i32> %14813 to <4 x float>
  %14815 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14814
  %14816 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14810
  %14817 = bitcast float* %14816 to <4 x float>*
  store <4 x float> %14815, <4 x float>* %14817, align 16, !tbaa !2
  %14818 = add nuw nsw i64 %14801, 8
  %14819 = add <4 x i64> %14802, <i64 8, i64 8, i64 8, i64 8>
  %14820 = icmp eq i64 %14818, 32000
  br i1 %14820, label %15603, label %14800, !llvm.loop !301

14821:                                            ; preds = %14796
  %14822 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i64 0, i64 0)) #15
  %14823 = icmp eq i32 %14822, 0
  br i1 %14823, label %14824, label %14910

14824:                                            ; preds = %14821, %14824
  %14825 = phi i64 [ %14865, %14824 ], [ 0, %14821 ]
  %14826 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14825
  %14827 = bitcast float* %14826 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14827, align 16, !tbaa !2
  %14828 = getelementptr inbounds float, float* %14826, i64 4
  %14829 = bitcast float* %14828 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14829, align 16, !tbaa !2
  %14830 = or i64 %14825, 8
  %14831 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14830
  %14832 = bitcast float* %14831 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14832, align 16, !tbaa !2
  %14833 = getelementptr inbounds float, float* %14831, i64 4
  %14834 = bitcast float* %14833 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14834, align 16, !tbaa !2
  %14835 = or i64 %14825, 16
  %14836 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14835
  %14837 = bitcast float* %14836 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14837, align 16, !tbaa !2
  %14838 = getelementptr inbounds float, float* %14836, i64 4
  %14839 = bitcast float* %14838 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14839, align 16, !tbaa !2
  %14840 = or i64 %14825, 24
  %14841 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14840
  %14842 = bitcast float* %14841 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14842, align 16, !tbaa !2
  %14843 = getelementptr inbounds float, float* %14841, i64 4
  %14844 = bitcast float* %14843 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14844, align 16, !tbaa !2
  %14845 = or i64 %14825, 32
  %14846 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14845
  %14847 = bitcast float* %14846 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14847, align 16, !tbaa !2
  %14848 = getelementptr inbounds float, float* %14846, i64 4
  %14849 = bitcast float* %14848 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14849, align 16, !tbaa !2
  %14850 = or i64 %14825, 40
  %14851 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14850
  %14852 = bitcast float* %14851 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14852, align 16, !tbaa !2
  %14853 = getelementptr inbounds float, float* %14851, i64 4
  %14854 = bitcast float* %14853 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14854, align 16, !tbaa !2
  %14855 = or i64 %14825, 48
  %14856 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14855
  %14857 = bitcast float* %14856 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14857, align 16, !tbaa !2
  %14858 = getelementptr inbounds float, float* %14856, i64 4
  %14859 = bitcast float* %14858 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14859, align 16, !tbaa !2
  %14860 = or i64 %14825, 56
  %14861 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14860
  %14862 = bitcast float* %14861 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14862, align 16, !tbaa !2
  %14863 = getelementptr inbounds float, float* %14861, i64 4
  %14864 = bitcast float* %14863 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14864, align 16, !tbaa !2
  %14865 = add nuw nsw i64 %14825, 64
  %14866 = icmp eq i64 %14865, 32000
  br i1 %14866, label %14867, label %14824, !llvm.loop !302

14867:                                            ; preds = %14824, %14867
  %14868 = phi i64 [ %14908, %14867 ], [ 0, %14824 ]
  %14869 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14868
  %14870 = bitcast float* %14869 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14870, align 16, !tbaa !2
  %14871 = getelementptr inbounds float, float* %14869, i64 4
  %14872 = bitcast float* %14871 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14872, align 16, !tbaa !2
  %14873 = or i64 %14868, 8
  %14874 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14873
  %14875 = bitcast float* %14874 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14875, align 16, !tbaa !2
  %14876 = getelementptr inbounds float, float* %14874, i64 4
  %14877 = bitcast float* %14876 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14877, align 16, !tbaa !2
  %14878 = or i64 %14868, 16
  %14879 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14878
  %14880 = bitcast float* %14879 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14880, align 16, !tbaa !2
  %14881 = getelementptr inbounds float, float* %14879, i64 4
  %14882 = bitcast float* %14881 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14882, align 16, !tbaa !2
  %14883 = or i64 %14868, 24
  %14884 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14883
  %14885 = bitcast float* %14884 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14885, align 16, !tbaa !2
  %14886 = getelementptr inbounds float, float* %14884, i64 4
  %14887 = bitcast float* %14886 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14887, align 16, !tbaa !2
  %14888 = or i64 %14868, 32
  %14889 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14888
  %14890 = bitcast float* %14889 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14890, align 16, !tbaa !2
  %14891 = getelementptr inbounds float, float* %14889, i64 4
  %14892 = bitcast float* %14891 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14892, align 16, !tbaa !2
  %14893 = or i64 %14868, 40
  %14894 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14893
  %14895 = bitcast float* %14894 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14895, align 16, !tbaa !2
  %14896 = getelementptr inbounds float, float* %14894, i64 4
  %14897 = bitcast float* %14896 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14897, align 16, !tbaa !2
  %14898 = or i64 %14868, 48
  %14899 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14898
  %14900 = bitcast float* %14899 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14900, align 16, !tbaa !2
  %14901 = getelementptr inbounds float, float* %14899, i64 4
  %14902 = bitcast float* %14901 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14902, align 16, !tbaa !2
  %14903 = or i64 %14868, 56
  %14904 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14903
  %14905 = bitcast float* %14904 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14905, align 16, !tbaa !2
  %14906 = getelementptr inbounds float, float* %14904, i64 4
  %14907 = bitcast float* %14906 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14907, align 16, !tbaa !2
  %14908 = add nuw nsw i64 %14868, 64
  %14909 = icmp eq i64 %14908, 32000
  br i1 %14909, label %15603, label %14867, !llvm.loop !303

14910:                                            ; preds = %14821
  %14911 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0)) #15
  %14912 = icmp eq i32 %14911, 0
  br i1 %14912, label %14913, label %14994

14913:                                            ; preds = %14910, %14913
  %14914 = phi i64 [ %14954, %14913 ], [ 0, %14910 ]
  %14915 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14914
  %14916 = bitcast float* %14915 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14916, align 16, !tbaa !2
  %14917 = getelementptr inbounds float, float* %14915, i64 4
  %14918 = bitcast float* %14917 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14918, align 16, !tbaa !2
  %14919 = or i64 %14914, 8
  %14920 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14919
  %14921 = bitcast float* %14920 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14921, align 16, !tbaa !2
  %14922 = getelementptr inbounds float, float* %14920, i64 4
  %14923 = bitcast float* %14922 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14923, align 16, !tbaa !2
  %14924 = or i64 %14914, 16
  %14925 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14924
  %14926 = bitcast float* %14925 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14926, align 16, !tbaa !2
  %14927 = getelementptr inbounds float, float* %14925, i64 4
  %14928 = bitcast float* %14927 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14928, align 16, !tbaa !2
  %14929 = or i64 %14914, 24
  %14930 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14929
  %14931 = bitcast float* %14930 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14931, align 16, !tbaa !2
  %14932 = getelementptr inbounds float, float* %14930, i64 4
  %14933 = bitcast float* %14932 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14933, align 16, !tbaa !2
  %14934 = or i64 %14914, 32
  %14935 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14934
  %14936 = bitcast float* %14935 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14936, align 16, !tbaa !2
  %14937 = getelementptr inbounds float, float* %14935, i64 4
  %14938 = bitcast float* %14937 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14938, align 16, !tbaa !2
  %14939 = or i64 %14914, 40
  %14940 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14939
  %14941 = bitcast float* %14940 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14941, align 16, !tbaa !2
  %14942 = getelementptr inbounds float, float* %14940, i64 4
  %14943 = bitcast float* %14942 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14943, align 16, !tbaa !2
  %14944 = or i64 %14914, 48
  %14945 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14944
  %14946 = bitcast float* %14945 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14946, align 16, !tbaa !2
  %14947 = getelementptr inbounds float, float* %14945, i64 4
  %14948 = bitcast float* %14947 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14948, align 16, !tbaa !2
  %14949 = or i64 %14914, 56
  %14950 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14949
  %14951 = bitcast float* %14950 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14951, align 16, !tbaa !2
  %14952 = getelementptr inbounds float, float* %14950, i64 4
  %14953 = bitcast float* %14952 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14953, align 16, !tbaa !2
  %14954 = add nuw nsw i64 %14914, 64
  %14955 = icmp eq i64 %14954, 32000
  br i1 %14955, label %14956, label %14913, !llvm.loop !304

14956:                                            ; preds = %14913, %14956
  %14957 = phi i64 [ %14972, %14956 ], [ 0, %14913 ]
  %14958 = phi <4 x i64> [ %14973, %14956 ], [ <i64 0, i64 1, i64 2, i64 3>, %14913 ]
  %14959 = trunc <4 x i64> %14958 to <4 x i32>
  %14960 = add <4 x i32> %14959, <i32 1, i32 1, i32 1, i32 1>
  %14961 = sitofp <4 x i32> %14960 to <4 x float>
  %14962 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14961
  %14963 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14957
  %14964 = bitcast float* %14963 to <4 x float>*
  store <4 x float> %14962, <4 x float>* %14964, align 16, !tbaa !2
  %14965 = or i64 %14957, 4
  %14966 = trunc <4 x i64> %14958 to <4 x i32>
  %14967 = add <4 x i32> %14966, <i32 5, i32 5, i32 5, i32 5>
  %14968 = sitofp <4 x i32> %14967 to <4 x float>
  %14969 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14968
  %14970 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14965
  %14971 = bitcast float* %14970 to <4 x float>*
  store <4 x float> %14969, <4 x float>* %14971, align 16, !tbaa !2
  %14972 = add nuw nsw i64 %14957, 8
  %14973 = add <4 x i64> %14958, <i64 8, i64 8, i64 8, i64 8>
  %14974 = icmp eq i64 %14972, 32000
  br i1 %14974, label %14975, label %14956, !llvm.loop !305

14975:                                            ; preds = %14956, %14975
  %14976 = phi i64 [ %14991, %14975 ], [ 0, %14956 ]
  %14977 = phi <4 x i64> [ %14992, %14975 ], [ <i64 0, i64 1, i64 2, i64 3>, %14956 ]
  %14978 = trunc <4 x i64> %14977 to <4 x i32>
  %14979 = add <4 x i32> %14978, <i32 1, i32 1, i32 1, i32 1>
  %14980 = sitofp <4 x i32> %14979 to <4 x float>
  %14981 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14980
  %14982 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14976
  %14983 = bitcast float* %14982 to <4 x float>*
  store <4 x float> %14981, <4 x float>* %14983, align 16, !tbaa !2
  %14984 = or i64 %14976, 4
  %14985 = trunc <4 x i64> %14977 to <4 x i32>
  %14986 = add <4 x i32> %14985, <i32 5, i32 5, i32 5, i32 5>
  %14987 = sitofp <4 x i32> %14986 to <4 x float>
  %14988 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %14987
  %14989 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %14984
  %14990 = bitcast float* %14989 to <4 x float>*
  store <4 x float> %14988, <4 x float>* %14990, align 16, !tbaa !2
  %14991 = add nuw nsw i64 %14976, 8
  %14992 = add <4 x i64> %14977, <i64 8, i64 8, i64 8, i64 8>
  %14993 = icmp eq i64 %14991, 32000
  br i1 %14993, label %15603, label %14975, !llvm.loop !306

14994:                                            ; preds = %14910
  %14995 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i64 0, i64 0)) #15
  %14996 = icmp eq i32 %14995, 0
  br i1 %14996, label %14997, label %15061

14997:                                            ; preds = %14994, %14997
  %14998 = phi i64 [ %15038, %14997 ], [ 0, %14994 ]
  %14999 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14998
  %15000 = bitcast float* %14999 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15000, align 16, !tbaa !2
  %15001 = getelementptr inbounds float, float* %14999, i64 4
  %15002 = bitcast float* %15001 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15002, align 16, !tbaa !2
  %15003 = or i64 %14998, 8
  %15004 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15003
  %15005 = bitcast float* %15004 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15005, align 16, !tbaa !2
  %15006 = getelementptr inbounds float, float* %15004, i64 4
  %15007 = bitcast float* %15006 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15007, align 16, !tbaa !2
  %15008 = or i64 %14998, 16
  %15009 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15008
  %15010 = bitcast float* %15009 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15010, align 16, !tbaa !2
  %15011 = getelementptr inbounds float, float* %15009, i64 4
  %15012 = bitcast float* %15011 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15012, align 16, !tbaa !2
  %15013 = or i64 %14998, 24
  %15014 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15013
  %15015 = bitcast float* %15014 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15015, align 16, !tbaa !2
  %15016 = getelementptr inbounds float, float* %15014, i64 4
  %15017 = bitcast float* %15016 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15017, align 16, !tbaa !2
  %15018 = or i64 %14998, 32
  %15019 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15018
  %15020 = bitcast float* %15019 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15020, align 16, !tbaa !2
  %15021 = getelementptr inbounds float, float* %15019, i64 4
  %15022 = bitcast float* %15021 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15022, align 16, !tbaa !2
  %15023 = or i64 %14998, 40
  %15024 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15023
  %15025 = bitcast float* %15024 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15025, align 16, !tbaa !2
  %15026 = getelementptr inbounds float, float* %15024, i64 4
  %15027 = bitcast float* %15026 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15027, align 16, !tbaa !2
  %15028 = or i64 %14998, 48
  %15029 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15028
  %15030 = bitcast float* %15029 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15030, align 16, !tbaa !2
  %15031 = getelementptr inbounds float, float* %15029, i64 4
  %15032 = bitcast float* %15031 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15032, align 16, !tbaa !2
  %15033 = or i64 %14998, 56
  %15034 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15033
  %15035 = bitcast float* %15034 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15035, align 16, !tbaa !2
  %15036 = getelementptr inbounds float, float* %15034, i64 4
  %15037 = bitcast float* %15036 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15037, align 16, !tbaa !2
  %15038 = add nuw nsw i64 %14998, 64
  %15039 = icmp eq i64 %15038, 32000
  br i1 %15039, label %15040, label %14997, !llvm.loop !307

15040:                                            ; preds = %14997, %15040
  %15041 = phi i64 [ %15058, %15040 ], [ 0, %14997 ]
  %15042 = phi <4 x i64> [ %15059, %15040 ], [ <i64 0, i64 1, i64 2, i64 3>, %14997 ]
  %15043 = add nuw nsw <4 x i64> %15042, <i64 1, i64 1, i64 1, i64 1>
  %15044 = mul nuw nsw <4 x i64> %15043, %15043
  %15045 = trunc <4 x i64> %15044 to <4 x i32>
  %15046 = sitofp <4 x i32> %15045 to <4 x float>
  %15047 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15046
  %15048 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15041
  %15049 = bitcast float* %15048 to <4 x float>*
  store <4 x float> %15047, <4 x float>* %15049, align 16, !tbaa !2
  %15050 = or i64 %15041, 4
  %15051 = add <4 x i64> %15042, <i64 5, i64 5, i64 5, i64 5>
  %15052 = mul nuw nsw <4 x i64> %15051, %15051
  %15053 = trunc <4 x i64> %15052 to <4 x i32>
  %15054 = sitofp <4 x i32> %15053 to <4 x float>
  %15055 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15054
  %15056 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15050
  %15057 = bitcast float* %15056 to <4 x float>*
  store <4 x float> %15055, <4 x float>* %15057, align 16, !tbaa !2
  %15058 = add nuw nsw i64 %15041, 8
  %15059 = add <4 x i64> %15042, <i64 8, i64 8, i64 8, i64 8>
  %15060 = icmp eq i64 %15058, 32000
  br i1 %15060, label %15603, label %15040, !llvm.loop !308

15061:                                            ; preds = %14994
  %15062 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0)) #15
  %15063 = icmp eq i32 %15062, 0
  br i1 %15063, label %15064, label %15171

15064:                                            ; preds = %15061, %15064
  %15065 = phi i64 [ %15082, %15064 ], [ 0, %15061 ]
  %15066 = phi <4 x i64> [ %15083, %15064 ], [ <i64 0, i64 1, i64 2, i64 3>, %15061 ]
  %15067 = add nuw nsw <4 x i64> %15066, <i64 1, i64 1, i64 1, i64 1>
  %15068 = mul nuw nsw <4 x i64> %15067, %15067
  %15069 = trunc <4 x i64> %15068 to <4 x i32>
  %15070 = sitofp <4 x i32> %15069 to <4 x float>
  %15071 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15070
  %15072 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15065
  %15073 = bitcast float* %15072 to <4 x float>*
  store <4 x float> %15071, <4 x float>* %15073, align 16, !tbaa !2
  %15074 = or i64 %15065, 4
  %15075 = add <4 x i64> %15066, <i64 5, i64 5, i64 5, i64 5>
  %15076 = mul nuw nsw <4 x i64> %15075, %15075
  %15077 = trunc <4 x i64> %15076 to <4 x i32>
  %15078 = sitofp <4 x i32> %15077 to <4 x float>
  %15079 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15078
  %15080 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15074
  %15081 = bitcast float* %15080 to <4 x float>*
  store <4 x float> %15079, <4 x float>* %15081, align 16, !tbaa !2
  %15082 = add nuw nsw i64 %15065, 8
  %15083 = add <4 x i64> %15066, <i64 8, i64 8, i64 8, i64 8>
  %15084 = icmp eq i64 %15082, 32000
  br i1 %15084, label %15085, label %15064, !llvm.loop !309

15085:                                            ; preds = %15064, %15085
  %15086 = phi i64 [ %15126, %15085 ], [ 0, %15064 ]
  %15087 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15086
  %15088 = bitcast float* %15087 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15088, align 16, !tbaa !2
  %15089 = getelementptr inbounds float, float* %15087, i64 4
  %15090 = bitcast float* %15089 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15090, align 16, !tbaa !2
  %15091 = or i64 %15086, 8
  %15092 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15091
  %15093 = bitcast float* %15092 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15093, align 16, !tbaa !2
  %15094 = getelementptr inbounds float, float* %15092, i64 4
  %15095 = bitcast float* %15094 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15095, align 16, !tbaa !2
  %15096 = or i64 %15086, 16
  %15097 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15096
  %15098 = bitcast float* %15097 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15098, align 16, !tbaa !2
  %15099 = getelementptr inbounds float, float* %15097, i64 4
  %15100 = bitcast float* %15099 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15100, align 16, !tbaa !2
  %15101 = or i64 %15086, 24
  %15102 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15101
  %15103 = bitcast float* %15102 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15103, align 16, !tbaa !2
  %15104 = getelementptr inbounds float, float* %15102, i64 4
  %15105 = bitcast float* %15104 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15105, align 16, !tbaa !2
  %15106 = or i64 %15086, 32
  %15107 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15106
  %15108 = bitcast float* %15107 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15108, align 16, !tbaa !2
  %15109 = getelementptr inbounds float, float* %15107, i64 4
  %15110 = bitcast float* %15109 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15110, align 16, !tbaa !2
  %15111 = or i64 %15086, 40
  %15112 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15111
  %15113 = bitcast float* %15112 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15113, align 16, !tbaa !2
  %15114 = getelementptr inbounds float, float* %15112, i64 4
  %15115 = bitcast float* %15114 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15115, align 16, !tbaa !2
  %15116 = or i64 %15086, 48
  %15117 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15116
  %15118 = bitcast float* %15117 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15118, align 16, !tbaa !2
  %15119 = getelementptr inbounds float, float* %15117, i64 4
  %15120 = bitcast float* %15119 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15120, align 16, !tbaa !2
  %15121 = or i64 %15086, 56
  %15122 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15121
  %15123 = bitcast float* %15122 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15123, align 16, !tbaa !2
  %15124 = getelementptr inbounds float, float* %15122, i64 4
  %15125 = bitcast float* %15124 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15125, align 16, !tbaa !2
  %15126 = add nuw nsw i64 %15086, 64
  %15127 = icmp eq i64 %15126, 32000
  br i1 %15127, label %15128, label %15085, !llvm.loop !310

15128:                                            ; preds = %15085, %15128
  %15129 = phi i64 [ %15169, %15128 ], [ 0, %15085 ]
  %15130 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15129
  %15131 = bitcast float* %15130 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15131, align 16, !tbaa !2
  %15132 = getelementptr inbounds float, float* %15130, i64 4
  %15133 = bitcast float* %15132 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15133, align 16, !tbaa !2
  %15134 = or i64 %15129, 8
  %15135 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15134
  %15136 = bitcast float* %15135 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15136, align 16, !tbaa !2
  %15137 = getelementptr inbounds float, float* %15135, i64 4
  %15138 = bitcast float* %15137 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15138, align 16, !tbaa !2
  %15139 = or i64 %15129, 16
  %15140 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15139
  %15141 = bitcast float* %15140 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15141, align 16, !tbaa !2
  %15142 = getelementptr inbounds float, float* %15140, i64 4
  %15143 = bitcast float* %15142 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15143, align 16, !tbaa !2
  %15144 = or i64 %15129, 24
  %15145 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15144
  %15146 = bitcast float* %15145 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15146, align 16, !tbaa !2
  %15147 = getelementptr inbounds float, float* %15145, i64 4
  %15148 = bitcast float* %15147 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15148, align 16, !tbaa !2
  %15149 = or i64 %15129, 32
  %15150 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15149
  %15151 = bitcast float* %15150 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15151, align 16, !tbaa !2
  %15152 = getelementptr inbounds float, float* %15150, i64 4
  %15153 = bitcast float* %15152 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15153, align 16, !tbaa !2
  %15154 = or i64 %15129, 40
  %15155 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15154
  %15156 = bitcast float* %15155 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15156, align 16, !tbaa !2
  %15157 = getelementptr inbounds float, float* %15155, i64 4
  %15158 = bitcast float* %15157 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15158, align 16, !tbaa !2
  %15159 = or i64 %15129, 48
  %15160 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15159
  %15161 = bitcast float* %15160 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15161, align 16, !tbaa !2
  %15162 = getelementptr inbounds float, float* %15160, i64 4
  %15163 = bitcast float* %15162 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15163, align 16, !tbaa !2
  %15164 = or i64 %15129, 56
  %15165 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15164
  %15166 = bitcast float* %15165 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15166, align 16, !tbaa !2
  %15167 = getelementptr inbounds float, float* %15165, i64 4
  %15168 = bitcast float* %15167 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %15168, align 16, !tbaa !2
  %15169 = add nuw nsw i64 %15129, 64
  %15170 = icmp eq i64 %15169, 32000
  br i1 %15170, label %15603, label %15128, !llvm.loop !311

15171:                                            ; preds = %15061
  %15172 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i64 0, i64 0)) #15
  %15173 = icmp eq i32 %15172, 0
  br i1 %15173, label %15174, label %15303

15174:                                            ; preds = %15171, %15174
  %15175 = phi i64 [ %15215, %15174 ], [ 0, %15171 ]
  %15176 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15175
  %15177 = bitcast float* %15176 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15177, align 16, !tbaa !2
  %15178 = getelementptr inbounds float, float* %15176, i64 4
  %15179 = bitcast float* %15178 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15179, align 16, !tbaa !2
  %15180 = or i64 %15175, 8
  %15181 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15180
  %15182 = bitcast float* %15181 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15182, align 16, !tbaa !2
  %15183 = getelementptr inbounds float, float* %15181, i64 4
  %15184 = bitcast float* %15183 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15184, align 16, !tbaa !2
  %15185 = or i64 %15175, 16
  %15186 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15185
  %15187 = bitcast float* %15186 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15187, align 16, !tbaa !2
  %15188 = getelementptr inbounds float, float* %15186, i64 4
  %15189 = bitcast float* %15188 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15189, align 16, !tbaa !2
  %15190 = or i64 %15175, 24
  %15191 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15190
  %15192 = bitcast float* %15191 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15192, align 16, !tbaa !2
  %15193 = getelementptr inbounds float, float* %15191, i64 4
  %15194 = bitcast float* %15193 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15194, align 16, !tbaa !2
  %15195 = or i64 %15175, 32
  %15196 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15195
  %15197 = bitcast float* %15196 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15197, align 16, !tbaa !2
  %15198 = getelementptr inbounds float, float* %15196, i64 4
  %15199 = bitcast float* %15198 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15199, align 16, !tbaa !2
  %15200 = or i64 %15175, 40
  %15201 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15200
  %15202 = bitcast float* %15201 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15202, align 16, !tbaa !2
  %15203 = getelementptr inbounds float, float* %15201, i64 4
  %15204 = bitcast float* %15203 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15204, align 16, !tbaa !2
  %15205 = or i64 %15175, 48
  %15206 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15205
  %15207 = bitcast float* %15206 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15207, align 16, !tbaa !2
  %15208 = getelementptr inbounds float, float* %15206, i64 4
  %15209 = bitcast float* %15208 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15209, align 16, !tbaa !2
  %15210 = or i64 %15175, 56
  %15211 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15210
  %15212 = bitcast float* %15211 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15212, align 16, !tbaa !2
  %15213 = getelementptr inbounds float, float* %15211, i64 4
  %15214 = bitcast float* %15213 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15214, align 16, !tbaa !2
  %15215 = add nuw nsw i64 %15175, 64
  %15216 = icmp eq i64 %15215, 32000
  br i1 %15216, label %15217, label %15174, !llvm.loop !312

15217:                                            ; preds = %15174, %15217
  %15218 = phi i64 [ %15258, %15217 ], [ 0, %15174 ]
  %15219 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15218
  %15220 = bitcast float* %15219 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15220, align 16, !tbaa !2
  %15221 = getelementptr inbounds float, float* %15219, i64 4
  %15222 = bitcast float* %15221 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15222, align 16, !tbaa !2
  %15223 = or i64 %15218, 8
  %15224 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15223
  %15225 = bitcast float* %15224 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15225, align 16, !tbaa !2
  %15226 = getelementptr inbounds float, float* %15224, i64 4
  %15227 = bitcast float* %15226 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15227, align 16, !tbaa !2
  %15228 = or i64 %15218, 16
  %15229 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15228
  %15230 = bitcast float* %15229 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15230, align 16, !tbaa !2
  %15231 = getelementptr inbounds float, float* %15229, i64 4
  %15232 = bitcast float* %15231 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15232, align 16, !tbaa !2
  %15233 = or i64 %15218, 24
  %15234 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15233
  %15235 = bitcast float* %15234 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15235, align 16, !tbaa !2
  %15236 = getelementptr inbounds float, float* %15234, i64 4
  %15237 = bitcast float* %15236 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15237, align 16, !tbaa !2
  %15238 = or i64 %15218, 32
  %15239 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15238
  %15240 = bitcast float* %15239 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15240, align 16, !tbaa !2
  %15241 = getelementptr inbounds float, float* %15239, i64 4
  %15242 = bitcast float* %15241 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15242, align 16, !tbaa !2
  %15243 = or i64 %15218, 40
  %15244 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15243
  %15245 = bitcast float* %15244 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15245, align 16, !tbaa !2
  %15246 = getelementptr inbounds float, float* %15244, i64 4
  %15247 = bitcast float* %15246 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15247, align 16, !tbaa !2
  %15248 = or i64 %15218, 48
  %15249 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15248
  %15250 = bitcast float* %15249 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15250, align 16, !tbaa !2
  %15251 = getelementptr inbounds float, float* %15249, i64 4
  %15252 = bitcast float* %15251 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15252, align 16, !tbaa !2
  %15253 = or i64 %15218, 56
  %15254 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15253
  %15255 = bitcast float* %15254 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15255, align 16, !tbaa !2
  %15256 = getelementptr inbounds float, float* %15254, i64 4
  %15257 = bitcast float* %15256 to <4 x float>*
  store <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <4 x float>* %15257, align 16, !tbaa !2
  %15258 = add nuw nsw i64 %15218, 64
  %15259 = icmp eq i64 %15258, 32000
  br i1 %15259, label %15260, label %15217, !llvm.loop !313

15260:                                            ; preds = %15217, %15260
  %15261 = phi i64 [ %15301, %15260 ], [ 0, %15217 ]
  %15262 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15261
  %15263 = bitcast float* %15262 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15263, align 16, !tbaa !2
  %15264 = getelementptr inbounds float, float* %15262, i64 4
  %15265 = bitcast float* %15264 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15265, align 16, !tbaa !2
  %15266 = or i64 %15261, 8
  %15267 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15266
  %15268 = bitcast float* %15267 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15268, align 16, !tbaa !2
  %15269 = getelementptr inbounds float, float* %15267, i64 4
  %15270 = bitcast float* %15269 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15270, align 16, !tbaa !2
  %15271 = or i64 %15261, 16
  %15272 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15271
  %15273 = bitcast float* %15272 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15273, align 16, !tbaa !2
  %15274 = getelementptr inbounds float, float* %15272, i64 4
  %15275 = bitcast float* %15274 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15275, align 16, !tbaa !2
  %15276 = or i64 %15261, 24
  %15277 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15276
  %15278 = bitcast float* %15277 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15278, align 16, !tbaa !2
  %15279 = getelementptr inbounds float, float* %15277, i64 4
  %15280 = bitcast float* %15279 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15280, align 16, !tbaa !2
  %15281 = or i64 %15261, 32
  %15282 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15281
  %15283 = bitcast float* %15282 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15283, align 16, !tbaa !2
  %15284 = getelementptr inbounds float, float* %15282, i64 4
  %15285 = bitcast float* %15284 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15285, align 16, !tbaa !2
  %15286 = or i64 %15261, 40
  %15287 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15286
  %15288 = bitcast float* %15287 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15288, align 16, !tbaa !2
  %15289 = getelementptr inbounds float, float* %15287, i64 4
  %15290 = bitcast float* %15289 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15290, align 16, !tbaa !2
  %15291 = or i64 %15261, 48
  %15292 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15291
  %15293 = bitcast float* %15292 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15293, align 16, !tbaa !2
  %15294 = getelementptr inbounds float, float* %15292, i64 4
  %15295 = bitcast float* %15294 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15295, align 16, !tbaa !2
  %15296 = or i64 %15261, 56
  %15297 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15296
  %15298 = bitcast float* %15297 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15298, align 16, !tbaa !2
  %15299 = getelementptr inbounds float, float* %15297, i64 4
  %15300 = bitcast float* %15299 to <4 x float>*
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %15300, align 16, !tbaa !2
  %15301 = add nuw nsw i64 %15261, 64
  %15302 = icmp eq i64 %15301, 32000
  br i1 %15302, label %15603, label %15260, !llvm.loop !314

15303:                                            ; preds = %15171
  %15304 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i64 0, i64 0)) #15
  %15305 = icmp eq i32 %15304, 0
  br i1 %15305, label %15306, label %15325

15306:                                            ; preds = %15303, %15306
  %15307 = phi i64 [ %15322, %15306 ], [ 0, %15303 ]
  %15308 = phi <4 x i64> [ %15323, %15306 ], [ <i64 0, i64 1, i64 2, i64 3>, %15303 ]
  %15309 = trunc <4 x i64> %15308 to <4 x i32>
  %15310 = add <4 x i32> %15309, <i32 1, i32 1, i32 1, i32 1>
  %15311 = sitofp <4 x i32> %15310 to <4 x float>
  %15312 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15311
  %15313 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15307
  %15314 = bitcast float* %15313 to <4 x float>*
  store <4 x float> %15312, <4 x float>* %15314, align 16, !tbaa !2
  %15315 = or i64 %15307, 4
  %15316 = trunc <4 x i64> %15308 to <4 x i32>
  %15317 = add <4 x i32> %15316, <i32 5, i32 5, i32 5, i32 5>
  %15318 = sitofp <4 x i32> %15317 to <4 x float>
  %15319 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15318
  %15320 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15315
  %15321 = bitcast float* %15320 to <4 x float>*
  store <4 x float> %15319, <4 x float>* %15321, align 16, !tbaa !2
  %15322 = add nuw nsw i64 %15307, 8
  %15323 = add <4 x i64> %15308, <i64 8, i64 8, i64 8, i64 8>
  %15324 = icmp eq i64 %15322, 32000
  br i1 %15324, label %15603, label %15306, !llvm.loop !315

15325:                                            ; preds = %15303
  %15326 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i64 0, i64 0)) #15
  %15327 = icmp eq i32 %15326, 0
  br i1 %15327, label %15328, label %15366

15328:                                            ; preds = %15325, %15328
  %15329 = phi i64 [ %15344, %15328 ], [ 0, %15325 ]
  %15330 = phi <4 x i64> [ %15345, %15328 ], [ <i64 0, i64 1, i64 2, i64 3>, %15325 ]
  %15331 = trunc <4 x i64> %15330 to <4 x i32>
  %15332 = add <4 x i32> %15331, <i32 1, i32 1, i32 1, i32 1>
  %15333 = sitofp <4 x i32> %15332 to <4 x float>
  %15334 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15333
  %15335 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15329
  %15336 = bitcast float* %15335 to <4 x float>*
  store <4 x float> %15334, <4 x float>* %15336, align 16, !tbaa !2
  %15337 = or i64 %15329, 4
  %15338 = trunc <4 x i64> %15330 to <4 x i32>
  %15339 = add <4 x i32> %15338, <i32 5, i32 5, i32 5, i32 5>
  %15340 = sitofp <4 x i32> %15339 to <4 x float>
  %15341 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15340
  %15342 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15337
  %15343 = bitcast float* %15342 to <4 x float>*
  store <4 x float> %15341, <4 x float>* %15343, align 16, !tbaa !2
  %15344 = add nuw nsw i64 %15329, 8
  %15345 = add <4 x i64> %15330, <i64 8, i64 8, i64 8, i64 8>
  %15346 = icmp eq i64 %15344, 32000
  br i1 %15346, label %15347, label %15328, !llvm.loop !316

15347:                                            ; preds = %15328, %15347
  %15348 = phi i64 [ %15363, %15347 ], [ 0, %15328 ]
  %15349 = phi <4 x i64> [ %15364, %15347 ], [ <i64 0, i64 1, i64 2, i64 3>, %15328 ]
  %15350 = trunc <4 x i64> %15349 to <4 x i32>
  %15351 = add <4 x i32> %15350, <i32 1, i32 1, i32 1, i32 1>
  %15352 = sitofp <4 x i32> %15351 to <4 x float>
  %15353 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15352
  %15354 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15348
  %15355 = bitcast float* %15354 to <4 x float>*
  store <4 x float> %15353, <4 x float>* %15355, align 16, !tbaa !2
  %15356 = or i64 %15348, 4
  %15357 = trunc <4 x i64> %15349 to <4 x i32>
  %15358 = add <4 x i32> %15357, <i32 5, i32 5, i32 5, i32 5>
  %15359 = sitofp <4 x i32> %15358 to <4 x float>
  %15360 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15359
  %15361 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15356
  %15362 = bitcast float* %15361 to <4 x float>*
  store <4 x float> %15360, <4 x float>* %15362, align 16, !tbaa !2
  %15363 = add nuw nsw i64 %15348, 8
  %15364 = add <4 x i64> %15349, <i64 8, i64 8, i64 8, i64 8>
  %15365 = icmp eq i64 %15363, 32000
  br i1 %15365, label %15603, label %15347, !llvm.loop !317

15366:                                            ; preds = %15325
  %15367 = tail call i32 @strcmp(i8* nonnull dereferenceable(1) %0, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i64 0, i64 0)) #15
  %15368 = icmp eq i32 %15367, 0
  br i1 %15368, label %15369, label %15603

15369:                                            ; preds = %15366, %15369
  %15370 = phi i64 [ %15385, %15369 ], [ 0, %15366 ]
  %15371 = phi <4 x i64> [ %15386, %15369 ], [ <i64 0, i64 1, i64 2, i64 3>, %15366 ]
  %15372 = trunc <4 x i64> %15371 to <4 x i32>
  %15373 = add <4 x i32> %15372, <i32 1, i32 1, i32 1, i32 1>
  %15374 = sitofp <4 x i32> %15373 to <4 x float>
  %15375 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15374
  %15376 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15370
  %15377 = bitcast float* %15376 to <4 x float>*
  store <4 x float> %15375, <4 x float>* %15377, align 16, !tbaa !2
  %15378 = or i64 %15370, 4
  %15379 = trunc <4 x i64> %15371 to <4 x i32>
  %15380 = add <4 x i32> %15379, <i32 5, i32 5, i32 5, i32 5>
  %15381 = sitofp <4 x i32> %15380 to <4 x float>
  %15382 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15381
  %15383 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15378
  %15384 = bitcast float* %15383 to <4 x float>*
  store <4 x float> %15382, <4 x float>* %15384, align 16, !tbaa !2
  %15385 = add nuw nsw i64 %15370, 8
  %15386 = add <4 x i64> %15371, <i64 8, i64 8, i64 8, i64 8>
  %15387 = icmp eq i64 %15385, 32000
  br i1 %15387, label %15388, label %15369, !llvm.loop !318

15388:                                            ; preds = %15369, %15388
  %15389 = phi i64 [ %15404, %15388 ], [ 0, %15369 ]
  %15390 = phi <4 x i64> [ %15405, %15388 ], [ <i64 0, i64 1, i64 2, i64 3>, %15369 ]
  %15391 = trunc <4 x i64> %15390 to <4 x i32>
  %15392 = add <4 x i32> %15391, <i32 1, i32 1, i32 1, i32 1>
  %15393 = sitofp <4 x i32> %15392 to <4 x float>
  %15394 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15393
  %15395 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15389
  %15396 = bitcast float* %15395 to <4 x float>*
  store <4 x float> %15394, <4 x float>* %15396, align 16, !tbaa !2
  %15397 = or i64 %15389, 4
  %15398 = trunc <4 x i64> %15390 to <4 x i32>
  %15399 = add <4 x i32> %15398, <i32 5, i32 5, i32 5, i32 5>
  %15400 = sitofp <4 x i32> %15399 to <4 x float>
  %15401 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15400
  %15402 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %15397
  %15403 = bitcast float* %15402 to <4 x float>*
  store <4 x float> %15401, <4 x float>* %15403, align 16, !tbaa !2
  %15404 = add nuw nsw i64 %15389, 8
  %15405 = add <4 x i64> %15390, <i64 8, i64 8, i64 8, i64 8>
  %15406 = icmp eq i64 %15404, 32000
  br i1 %15406, label %15407, label %15388, !llvm.loop !319

15407:                                            ; preds = %15388, %15407
  %15408 = phi i64 [ %15423, %15407 ], [ 0, %15388 ]
  %15409 = phi <4 x i64> [ %15424, %15407 ], [ <i64 0, i64 1, i64 2, i64 3>, %15388 ]
  %15410 = trunc <4 x i64> %15409 to <4 x i32>
  %15411 = add <4 x i32> %15410, <i32 1, i32 1, i32 1, i32 1>
  %15412 = sitofp <4 x i32> %15411 to <4 x float>
  %15413 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15412
  %15414 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15408
  %15415 = bitcast float* %15414 to <4 x float>*
  store <4 x float> %15413, <4 x float>* %15415, align 16, !tbaa !2
  %15416 = or i64 %15408, 4
  %15417 = trunc <4 x i64> %15409 to <4 x i32>
  %15418 = add <4 x i32> %15417, <i32 5, i32 5, i32 5, i32 5>
  %15419 = sitofp <4 x i32> %15418 to <4 x float>
  %15420 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15419
  %15421 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15416
  %15422 = bitcast float* %15421 to <4 x float>*
  store <4 x float> %15420, <4 x float>* %15422, align 16, !tbaa !2
  %15423 = add nuw nsw i64 %15408, 8
  %15424 = add <4 x i64> %15409, <i64 8, i64 8, i64 8, i64 8>
  %15425 = icmp eq i64 %15423, 32000
  br i1 %15425, label %15426, label %15407, !llvm.loop !320

15426:                                            ; preds = %15407, %15426
  %15427 = phi i64 [ %15442, %15426 ], [ 0, %15407 ]
  %15428 = phi <4 x i64> [ %15443, %15426 ], [ <i64 0, i64 1, i64 2, i64 3>, %15407 ]
  %15429 = trunc <4 x i64> %15428 to <4 x i32>
  %15430 = add <4 x i32> %15429, <i32 1, i32 1, i32 1, i32 1>
  %15431 = sitofp <4 x i32> %15430 to <4 x float>
  %15432 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15431
  %15433 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %15427
  %15434 = bitcast float* %15433 to <4 x float>*
  store <4 x float> %15432, <4 x float>* %15434, align 16, !tbaa !2
  %15435 = or i64 %15427, 4
  %15436 = trunc <4 x i64> %15428 to <4 x i32>
  %15437 = add <4 x i32> %15436, <i32 5, i32 5, i32 5, i32 5>
  %15438 = sitofp <4 x i32> %15437 to <4 x float>
  %15439 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15438
  %15440 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %15435
  %15441 = bitcast float* %15440 to <4 x float>*
  store <4 x float> %15439, <4 x float>* %15441, align 16, !tbaa !2
  %15442 = add nuw nsw i64 %15427, 8
  %15443 = add <4 x i64> %15428, <i64 8, i64 8, i64 8, i64 8>
  %15444 = icmp eq i64 %15442, 32000
  br i1 %15444, label %15445, label %15426, !llvm.loop !321

15445:                                            ; preds = %15426, %15445
  %15446 = phi i64 [ %15461, %15445 ], [ 0, %15426 ]
  %15447 = phi <4 x i64> [ %15462, %15445 ], [ <i64 0, i64 1, i64 2, i64 3>, %15426 ]
  %15448 = trunc <4 x i64> %15447 to <4 x i32>
  %15449 = add <4 x i32> %15448, <i32 1, i32 1, i32 1, i32 1>
  %15450 = sitofp <4 x i32> %15449 to <4 x float>
  %15451 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15450
  %15452 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %15446
  %15453 = bitcast float* %15452 to <4 x float>*
  store <4 x float> %15451, <4 x float>* %15453, align 16, !tbaa !2
  %15454 = or i64 %15446, 4
  %15455 = trunc <4 x i64> %15447 to <4 x i32>
  %15456 = add <4 x i32> %15455, <i32 5, i32 5, i32 5, i32 5>
  %15457 = sitofp <4 x i32> %15456 to <4 x float>
  %15458 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %15457
  %15459 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %15454
  %15460 = bitcast float* %15459 to <4 x float>*
  store <4 x float> %15458, <4 x float>* %15460, align 16, !tbaa !2
  %15461 = add nuw nsw i64 %15446, 8
  %15462 = add <4 x i64> %15447, <i64 8, i64 8, i64 8, i64 8>
  %15463 = icmp eq i64 %15461, 32000
  br i1 %15463, label %15464, label %15445, !llvm.loop !322

15464:                                            ; preds = %15445, %15464
  %15465 = phi i64 [ %15466, %15464 ], [ 0, %15445 ]
  %15466 = add nuw nsw i64 %15465, 1
  %15467 = trunc i64 %15466 to i32
  %15468 = sitofp i32 %15467 to float
  %15469 = fdiv float 1.000000e+00, %15468
  %15470 = insertelement <4 x float> undef, float %15469, i32 0
  %15471 = shufflevector <4 x float> %15470, <4 x float> undef, <4 x i32> zeroinitializer
  %15472 = insertelement <4 x float> undef, float %15469, i32 0
  %15473 = shufflevector <4 x float> %15472, <4 x float> undef, <4 x i32> zeroinitializer
  %15474 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 0
  %15475 = bitcast float* %15474 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15475, align 16, !tbaa !2
  %15476 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 4
  %15477 = bitcast float* %15476 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15477, align 16, !tbaa !2
  %15478 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 8
  %15479 = bitcast float* %15478 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15479, align 16, !tbaa !2
  %15480 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 12
  %15481 = bitcast float* %15480 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15481, align 16, !tbaa !2
  %15482 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 16
  %15483 = bitcast float* %15482 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15483, align 16, !tbaa !2
  %15484 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 20
  %15485 = bitcast float* %15484 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15485, align 16, !tbaa !2
  %15486 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 24
  %15487 = bitcast float* %15486 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15487, align 16, !tbaa !2
  %15488 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 28
  %15489 = bitcast float* %15488 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15489, align 16, !tbaa !2
  %15490 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 32
  %15491 = bitcast float* %15490 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15491, align 16, !tbaa !2
  %15492 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 36
  %15493 = bitcast float* %15492 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15493, align 16, !tbaa !2
  %15494 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 40
  %15495 = bitcast float* %15494 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15495, align 16, !tbaa !2
  %15496 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 44
  %15497 = bitcast float* %15496 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15497, align 16, !tbaa !2
  %15498 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 48
  %15499 = bitcast float* %15498 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15499, align 16, !tbaa !2
  %15500 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 52
  %15501 = bitcast float* %15500 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15501, align 16, !tbaa !2
  %15502 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 56
  %15503 = bitcast float* %15502 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15503, align 16, !tbaa !2
  %15504 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 60
  %15505 = bitcast float* %15504 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15505, align 16, !tbaa !2
  %15506 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 64
  %15507 = bitcast float* %15506 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15507, align 16, !tbaa !2
  %15508 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 68
  %15509 = bitcast float* %15508 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15509, align 16, !tbaa !2
  %15510 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 72
  %15511 = bitcast float* %15510 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15511, align 16, !tbaa !2
  %15512 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 76
  %15513 = bitcast float* %15512 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15513, align 16, !tbaa !2
  %15514 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 80
  %15515 = bitcast float* %15514 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15515, align 16, !tbaa !2
  %15516 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 84
  %15517 = bitcast float* %15516 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15517, align 16, !tbaa !2
  %15518 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 88
  %15519 = bitcast float* %15518 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15519, align 16, !tbaa !2
  %15520 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 92
  %15521 = bitcast float* %15520 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15521, align 16, !tbaa !2
  %15522 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 96
  %15523 = bitcast float* %15522 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15523, align 16, !tbaa !2
  %15524 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 100
  %15525 = bitcast float* %15524 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15525, align 16, !tbaa !2
  %15526 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 104
  %15527 = bitcast float* %15526 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15527, align 16, !tbaa !2
  %15528 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 108
  %15529 = bitcast float* %15528 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15529, align 16, !tbaa !2
  %15530 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 112
  %15531 = bitcast float* %15530 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15531, align 16, !tbaa !2
  %15532 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 116
  %15533 = bitcast float* %15532 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15533, align 16, !tbaa !2
  %15534 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 120
  %15535 = bitcast float* %15534 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15535, align 16, !tbaa !2
  %15536 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 124
  %15537 = bitcast float* %15536 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15537, align 16, !tbaa !2
  %15538 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 128
  %15539 = bitcast float* %15538 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15539, align 16, !tbaa !2
  %15540 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 132
  %15541 = bitcast float* %15540 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15541, align 16, !tbaa !2
  %15542 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 136
  %15543 = bitcast float* %15542 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15543, align 16, !tbaa !2
  %15544 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 140
  %15545 = bitcast float* %15544 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15545, align 16, !tbaa !2
  %15546 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 144
  %15547 = bitcast float* %15546 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15547, align 16, !tbaa !2
  %15548 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 148
  %15549 = bitcast float* %15548 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15549, align 16, !tbaa !2
  %15550 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 152
  %15551 = bitcast float* %15550 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15551, align 16, !tbaa !2
  %15552 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 156
  %15553 = bitcast float* %15552 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15553, align 16, !tbaa !2
  %15554 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 160
  %15555 = bitcast float* %15554 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15555, align 16, !tbaa !2
  %15556 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 164
  %15557 = bitcast float* %15556 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15557, align 16, !tbaa !2
  %15558 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 168
  %15559 = bitcast float* %15558 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15559, align 16, !tbaa !2
  %15560 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 172
  %15561 = bitcast float* %15560 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15561, align 16, !tbaa !2
  %15562 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 176
  %15563 = bitcast float* %15562 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15563, align 16, !tbaa !2
  %15564 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 180
  %15565 = bitcast float* %15564 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15565, align 16, !tbaa !2
  %15566 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 184
  %15567 = bitcast float* %15566 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15567, align 16, !tbaa !2
  %15568 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 188
  %15569 = bitcast float* %15568 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15569, align 16, !tbaa !2
  %15570 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 192
  %15571 = bitcast float* %15570 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15571, align 16, !tbaa !2
  %15572 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 196
  %15573 = bitcast float* %15572 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15573, align 16, !tbaa !2
  %15574 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 200
  %15575 = bitcast float* %15574 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15575, align 16, !tbaa !2
  %15576 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 204
  %15577 = bitcast float* %15576 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15577, align 16, !tbaa !2
  %15578 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 208
  %15579 = bitcast float* %15578 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15579, align 16, !tbaa !2
  %15580 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 212
  %15581 = bitcast float* %15580 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15581, align 16, !tbaa !2
  %15582 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 216
  %15583 = bitcast float* %15582 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15583, align 16, !tbaa !2
  %15584 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 220
  %15585 = bitcast float* %15584 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15585, align 16, !tbaa !2
  %15586 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 224
  %15587 = bitcast float* %15586 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15587, align 16, !tbaa !2
  %15588 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 228
  %15589 = bitcast float* %15588 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15589, align 16, !tbaa !2
  %15590 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 232
  %15591 = bitcast float* %15590 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15591, align 16, !tbaa !2
  %15592 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 236
  %15593 = bitcast float* %15592 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15593, align 16, !tbaa !2
  %15594 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 240
  %15595 = bitcast float* %15594 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15595, align 16, !tbaa !2
  %15596 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 244
  %15597 = bitcast float* %15596 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15597, align 16, !tbaa !2
  %15598 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 248
  %15599 = bitcast float* %15598 to <4 x float>*
  store <4 x float> %15471, <4 x float>* %15599, align 16, !tbaa !2
  %15600 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15465, i64 252
  %15601 = bitcast float* %15600 to <4 x float>*
  store <4 x float> %15473, <4 x float>* %15601, align 16, !tbaa !2
  %15602 = icmp eq i64 %15466, 256
  br i1 %15602, label %15603, label %15464

15603:                                            ; preds = %15464, %15347, %15306, %15260, %15128, %15040, %14975, %14867, %14800, %14775, %14750, %14725, %14700, %14677, %14593, %14388, %14347, %14306, %14219, %14153, %14088, %14003, %13919, %13816, %13644, %13597, %13531, %13490, %13406, %13260, %13111, %13044, %12977, %12910, %12885, %12818, %12591, %12298, %12170, %12086, %11912, %11668, %11507, %11466, %11395, %11107, %10942, %10855, %10833, %10811, %10789, %10724, %10702, %10552, %10259, %10213, %10166, %10119, %10053, %9969, %9885, %9739, %9550, %9361, %9172, %8956, %8670, %8542, %8324, %8178, %8070, %7843, %7649, %7339, %7118, %7071, %7048, %6873, %6807, %6679, %6570, %6442, %6267, %5995, %5640, %5227, %4670, %4492, %4426, %4323, %4196, %4092, %4006, %3939, %3872, %3805, %3738, %3673, %3589, %3424, %3318, %3132, %3067, %2892, %2803, %2694, %2470, %2184, %1897, %1769, %1639, %1572, %1386, %1119, %1030, %895, %445, %282, %215, %148, %4, %11267, %11220, %11150, %10698, %10694, %4945, %15366, %10874, %11173, %11436, %12814, %12020, %11889, %11461, %11103, %10899
  ret i32 0
}

; Function Attrs: nofree nounwind readonly
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define dso_local i32 @s000() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %79
  %4 = phi i32 [ 0, %0 ], [ %81, %79 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %32, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @Y, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fadd <4 x float> %9, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %14 = fadd <4 x float> %12, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @X, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %13, <4 x float>* %16, align 16, !tbaa !2
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> %14, <4 x float>* %18, align 16, !tbaa !2
  %19 = or i64 %6, 8
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @Y, i64 0, i64 %19
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !2
  %23 = getelementptr inbounds float, float* %20, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 16, !tbaa !2
  %26 = fadd <4 x float> %22, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %27 = fadd <4 x float> %25, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @X, i64 0, i64 %19
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> %26, <4 x float>* %29, align 16, !tbaa !2
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %27, <4 x float>* %31, align 16, !tbaa !2
  %32 = add nuw nsw i64 %6, 16
  %33 = icmp eq i64 %32, 32000
  br i1 %33, label %79, label %5, !llvm.loop !323

34:                                               ; preds = %79
  %35 = tail call i64 @clock() #16
  %36 = sub nsw i64 %35, %2
  %37 = sitofp i64 %36 to double
  %38 = fdiv double %37, 1.000000e+06
  %39 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.137, i64 0, i64 0), double %38)
  br label %40

40:                                               ; preds = %40, %34
  %41 = phi i64 [ 0, %34 ], [ %74, %40 ]
  %42 = phi float [ 0.000000e+00, %34 ], [ %73, %40 ]
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %44 = load float, float* %43, align 16, !tbaa !2
  %45 = fadd float %42, %44
  %46 = or i64 %41, 1
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %45, %48
  %50 = or i64 %41, 2
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %52 = load float, float* %51, align 8, !tbaa !2
  %53 = fadd float %49, %52
  %54 = or i64 %41, 3
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !2
  %57 = fadd float %53, %56
  %58 = or i64 %41, 4
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = load float, float* %59, align 16, !tbaa !2
  %61 = fadd float %57, %60
  %62 = or i64 %41, 5
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %61, %64
  %66 = or i64 %41, 6
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 8, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %41, 7
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = add nuw nsw i64 %41, 8
  %75 = icmp eq i64 %74, 32000
  br i1 %75, label %76, label %40

76:                                               ; preds = %40
  %77 = fpext float %73 to double
  %78 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %77) #16
  ret i32 0

79:                                               ; preds = %5
  %80 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @X, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @Y, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @Z, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @U, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @V, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %81 = add nuw nsw i32 %4, 1
  %82 = icmp eq i32 %81, 100000
  br i1 %82, label %34, label %3
}

; Function Attrs: nounwind
declare dso_local i64 @clock() local_unnamed_addr #8

declare dso_local i32 @dummy(float*, float*, float*, float*, float*, [256 x float]*, [256 x float]*, [256 x float]*, float) local_unnamed_addr #9

; Function Attrs: nounwind uwtable
define dso_local i32 @s111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 100000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 1, %3 ], [ %71, %54 ]
  %56 = add nsw i64 %55, -1
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = fadd float %58, %60
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %61, float* %62, align 4, !tbaa !2
  %63 = add nuw nsw i64 %55, 2
  %64 = add nuw nsw i64 %55, 1
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %63
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fadd float %66, %68
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  store float %69, float* %70, align 4, !tbaa !2
  %71 = add nuw nsw i64 %55, 4
  %72 = icmp ult i64 %55, 31996
  br i1 %72, label %54, label %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %86
  %4 = phi i32 [ 0, %0 ], [ %88, %86 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %38, %5 ]
  %7 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3 ], [ %39, %5 ]
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 16, !tbaa !2
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !2
  %14 = fmul <4 x float> %10, %13
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !2
  %18 = fmul <4 x float> %13, %17
  %19 = fadd <4 x float> %14, %18
  %20 = fmul <4 x float> %10, %10
  %21 = fadd <4 x float> %20, %19
  %22 = fadd <4 x float> %18, %21
  %23 = fmul <4 x float> %10, %17
  %24 = fadd <4 x float> %23, %22
  %25 = shl nuw nsw <4 x i64> %7, <i64 1, i64 1, i64 1, i64 1>
  %26 = extractelement <4 x i64> %25, i32 0
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = extractelement <4 x i64> %25, i32 1
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = extractelement <4 x i64> %25, i32 2
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = extractelement <4 x i64> %25, i32 3
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = extractelement <4 x float> %24, i32 0
  store float %34, float* %27, align 8, !tbaa !2
  %35 = extractelement <4 x float> %24, i32 1
  store float %35, float* %29, align 8, !tbaa !2
  %36 = extractelement <4 x float> %24, i32 2
  store float %36, float* %31, align 8, !tbaa !2
  %37 = extractelement <4 x float> %24, i32 3
  store float %37, float* %33, align 8, !tbaa !2
  %38 = add i64 %6, 4
  %39 = add <4 x i64> %7, <i64 4, i64 4, i64 4, i64 4>
  %40 = icmp eq i64 %38, 16000
  br i1 %40, label %86, label %5, !llvm.loop !324

41:                                               ; preds = %86
  %42 = tail call i64 @clock() #16
  %43 = sub nsw i64 %42, %2
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  %46 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.139, i64 0, i64 0), double %45)
  br label %47

47:                                               ; preds = %47, %41
  %48 = phi i64 [ 0, %41 ], [ %81, %47 ]
  %49 = phi float [ 0.000000e+00, %41 ], [ %80, %47 ]
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %51 = load float, float* %50, align 16, !tbaa !2
  %52 = fadd float %49, %51
  %53 = or i64 %48, 1
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fadd float %52, %55
  %57 = or i64 %48, 2
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = fadd float %56, %59
  %61 = or i64 %48, 3
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fadd float %60, %63
  %65 = or i64 %48, 4
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %67 = load float, float* %66, align 16, !tbaa !2
  %68 = fadd float %64, %67
  %69 = or i64 %48, 5
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fadd float %68, %71
  %73 = or i64 %48, 6
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  %75 = load float, float* %74, align 8, !tbaa !2
  %76 = fadd float %72, %75
  %77 = or i64 %48, 7
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %77
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fadd float %76, %79
  %81 = add nuw nsw i64 %48, 8
  %82 = icmp eq i64 %81, 32000
  br i1 %82, label %83, label %47

83:                                               ; preds = %47
  %84 = fpext float %80 to double
  %85 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %84) #16
  ret i32 0

86:                                               ; preds = %5
  %87 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %88 = add nuw nsw i32 %4, 1
  %89 = icmp eq i32 %88, 100000
  br i1 %89, label %41, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s112() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 150000
  br i1 %53, label %5, label %3

54:                                               ; preds = %65, %3
  %55 = phi i64 [ 31998, %3 ], [ %72, %65 ]
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 8, !tbaa !2
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = fadd float %57, %59
  %61 = or i64 %55, 1
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  store float %60, float* %62, align 4, !tbaa !2
  %63 = add nsw i64 %55, -1
  %64 = icmp eq i64 %55, 0
  br i1 %64, label %50, label %65, !llvm.loop !325

65:                                               ; preds = %54
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %63
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %67, %69
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %70, float* %71, align 8, !tbaa !2
  %72 = add nsw i64 %55, -2
  br label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s112p() local_unnamed_addr #7 {
  %1 = alloca [32000 x float], align 16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %3 = bitcast [32000 x float]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128000, i8* nonnull %3) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) %3, i8 0, i64 128000, i1 false)
  %4 = tail call i64 @clock() #16
  br label %50

5:                                                ; preds = %93
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %4
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.141, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  call void @llvm.lifetime.end.p0i8(i64 128000, i8* nonnull %3) #16
  ret i32 0

50:                                               ; preds = %93, %0
  %51 = phi i32 [ 0, %0 ], [ %95, %93 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) %3, i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i64 128000, i1 false)
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %91, %52 ]
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = bitcast float* %54 to <4 x float>*
  %56 = load <4 x float>, <4 x float>* %55, align 16, !tbaa !2
  %57 = getelementptr inbounds float, float* %54, i64 4
  %58 = bitcast float* %57 to <4 x float>*
  %59 = load <4 x float>, <4 x float>* %58, align 16, !tbaa !2
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %53
  %61 = bitcast float* %60 to <4 x float>*
  %62 = load <4 x float>, <4 x float>* %61, align 16, !tbaa !2
  %63 = getelementptr inbounds float, float* %60, i64 4
  %64 = bitcast float* %63 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %64, align 16, !tbaa !2
  %66 = fadd <4 x float> %56, %62
  %67 = fadd <4 x float> %59, %65
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* %1, i64 0, i64 %53
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> %66, <4 x float>* %69, align 16, !tbaa !2
  %70 = getelementptr inbounds float, float* %68, i64 4
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> %67, <4 x float>* %71, align 16, !tbaa !2
  %72 = or i64 %53, 8
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %74 = bitcast float* %73 to <4 x float>*
  %75 = load <4 x float>, <4 x float>* %74, align 16, !tbaa !2
  %76 = getelementptr inbounds float, float* %73, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  %78 = load <4 x float>, <4 x float>* %77, align 16, !tbaa !2
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %72
  %80 = bitcast float* %79 to <4 x float>*
  %81 = load <4 x float>, <4 x float>* %80, align 16, !tbaa !2
  %82 = getelementptr inbounds float, float* %79, i64 4
  %83 = bitcast float* %82 to <4 x float>*
  %84 = load <4 x float>, <4 x float>* %83, align 16, !tbaa !2
  %85 = fadd <4 x float> %75, %81
  %86 = fadd <4 x float> %78, %84
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* %1, i64 0, i64 %72
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> %85, <4 x float>* %88, align 16, !tbaa !2
  %89 = getelementptr inbounds float, float* %87, i64 4
  %90 = bitcast float* %89 to <4 x float>*
  store <4 x float> %86, <4 x float>* %90, align 16, !tbaa !2
  %91 = add nuw nsw i64 %53, 16
  %92 = icmp eq i64 %91, 32000
  br i1 %92, label %93, label %52, !llvm.loop !327

93:                                               ; preds = %52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(127996) bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 1) to i8*), i8* nonnull align 16 dereferenceable(127996) %3, i64 127996, i1 false)
  %94 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %95 = add nuw nsw i32 %51, 1
  %96 = icmp eq i32 %95, 150000
  br i1 %96, label %5, label %50
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind uwtable
define dso_local i32 @s1112() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %84
  %4 = phi i32 [ 0, %0 ], [ %86, %84 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %37, %5 ]
  %7 = sub nuw nsw i64 31999, %6
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7
  %9 = getelementptr inbounds float, float* %8, i64 -3
  %10 = bitcast float* %9 to <4 x float>*
  %11 = load <4 x float>, <4 x float>* %10, align 4, !tbaa !2
  %12 = getelementptr inbounds float, float* %8, i64 -7
  %13 = bitcast float* %12 to <4 x float>*
  %14 = load <4 x float>, <4 x float>* %13, align 4, !tbaa !2
  %15 = fadd <4 x float> %11, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %16 = fadd <4 x float> %14, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %18 = getelementptr inbounds float, float* %17, i64 -3
  %19 = bitcast float* %18 to <4 x float>*
  store <4 x float> %15, <4 x float>* %19, align 4, !tbaa !2
  %20 = getelementptr inbounds float, float* %17, i64 -7
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> %16, <4 x float>* %21, align 4, !tbaa !2
  %22 = sub nsw i64 31991, %6
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = getelementptr inbounds float, float* %23, i64 -3
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !2
  %27 = getelementptr inbounds float, float* %23, i64 -7
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !2
  %30 = fadd <4 x float> %26, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %31 = fadd <4 x float> %29, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %33 = getelementptr inbounds float, float* %32, i64 -3
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %30, <4 x float>* %34, align 4, !tbaa !2
  %35 = getelementptr inbounds float, float* %32, i64 -7
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %31, <4 x float>* %36, align 4, !tbaa !2
  %37 = add nuw nsw i64 %6, 16
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %84, label %5, !llvm.loop !328

39:                                               ; preds = %84
  %40 = tail call i64 @clock() #16
  %41 = sub nsw i64 %40, %2
  %42 = sitofp i64 %41 to double
  %43 = fdiv double %42, 1.000000e+06
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.142, i64 0, i64 0), double %43)
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i64 [ 0, %39 ], [ %79, %45 ]
  %47 = phi float [ 0.000000e+00, %39 ], [ %78, %45 ]
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %49 = load float, float* %48, align 16, !tbaa !2
  %50 = fadd float %47, %49
  %51 = or i64 %46, 1
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = fadd float %50, %53
  %55 = or i64 %46, 2
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 8, !tbaa !2
  %58 = fadd float %54, %57
  %59 = or i64 %46, 3
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = fadd float %58, %61
  %63 = or i64 %46, 4
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = load float, float* %64, align 16, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %46, 5
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %46, 6
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 8, !tbaa !2
  %74 = fadd float %70, %73
  %75 = or i64 %46, 7
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fadd float %74, %77
  %79 = add nuw nsw i64 %46, 8
  %80 = icmp eq i64 %79, 32000
  br i1 %80, label %81, label %45

81:                                               ; preds = %45
  %82 = fpext float %78 to double
  %83 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %82) #16
  ret i32 0

84:                                               ; preds = %5
  %85 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %86 = add nuw nsw i32 %4, 1
  %87 = icmp eq i32 %86, 250000
  br i1 %87, label %39, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1112p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %79
  %4 = phi i32 [ 0, %0 ], [ %81, %79 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %32, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fadd <4 x float> %9, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %14 = fadd <4 x float> %12, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %13, <4 x float>* %16, align 16, !tbaa !2
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> %14, <4 x float>* %18, align 16, !tbaa !2
  %19 = or i64 %6, 8
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !2
  %23 = getelementptr inbounds float, float* %20, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 16, !tbaa !2
  %26 = fadd <4 x float> %22, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %27 = fadd <4 x float> %25, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> %26, <4 x float>* %29, align 16, !tbaa !2
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %27, <4 x float>* %31, align 16, !tbaa !2
  %32 = add nuw nsw i64 %6, 16
  %33 = icmp eq i64 %32, 32000
  br i1 %33, label %79, label %5, !llvm.loop !329

34:                                               ; preds = %79
  %35 = tail call i64 @clock() #16
  %36 = sub nsw i64 %35, %2
  %37 = sitofp i64 %36 to double
  %38 = fdiv double %37, 1.000000e+06
  %39 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.143, i64 0, i64 0), double %38)
  br label %40

40:                                               ; preds = %40, %34
  %41 = phi i64 [ 0, %34 ], [ %74, %40 ]
  %42 = phi float [ 0.000000e+00, %34 ], [ %73, %40 ]
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %44 = load float, float* %43, align 16, !tbaa !2
  %45 = fadd float %42, %44
  %46 = or i64 %41, 1
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %45, %48
  %50 = or i64 %41, 2
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %52 = load float, float* %51, align 8, !tbaa !2
  %53 = fadd float %49, %52
  %54 = or i64 %41, 3
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !2
  %57 = fadd float %53, %56
  %58 = or i64 %41, 4
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = load float, float* %59, align 16, !tbaa !2
  %61 = fadd float %57, %60
  %62 = or i64 %41, 5
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %61, %64
  %66 = or i64 %41, 6
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 8, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %41, 7
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = add nuw nsw i64 %41, 8
  %75 = icmp eq i64 %74, 32000
  br i1 %75, label %76, label %40

76:                                               ; preds = %40
  %77 = fpext float %73 to double
  %78 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %77) #16
  ret i32 0

79:                                               ; preds = %5
  %80 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %81 = add nuw nsw i32 %4, 1
  %82 = icmp eq i32 %81, 250000
  br i1 %82, label %34, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s113() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.144, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 200000
  br i1 %53, label %5, label %3

54:                                               ; preds = %75, %3
  %55 = phi i64 [ 1, %3 ], [ %81, %75 ]
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %56, %58
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %59, float* %60, align 4, !tbaa !2
  %61 = add nuw nsw i64 %55, 1
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %61
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %62, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  store float %65, float* %66, align 4, !tbaa !2
  %67 = add nuw nsw i64 %55, 2
  %68 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = fadd float %68, %70
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  store float %71, float* %72, align 4, !tbaa !2
  %73 = add nuw nsw i64 %55, 3
  %74 = icmp eq i64 %73, 32000
  br i1 %74, label %50, label %75

75:                                               ; preds = %54
  %76 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %73
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fadd float %76, %78
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  store float %79, float* %80, align 4, !tbaa !2
  %81 = add nuw nsw i64 %55, 4
  br label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1113() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.145, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 100000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %79, %54 ]
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), align 16, !tbaa !2
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %58 = load float, float* %57, align 16, !tbaa !2
  %59 = fadd float %56, %58
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %59, float* %60, align 16, !tbaa !2
  %61 = or i64 %55, 1
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), align 16, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %61
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %62, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  store float %65, float* %66, align 4, !tbaa !2
  %67 = or i64 %55, 2
  %68 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), align 16, !tbaa !2
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  %70 = load float, float* %69, align 8, !tbaa !2
  %71 = fadd float %68, %70
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  store float %71, float* %72, align 8, !tbaa !2
  %73 = or i64 %55, 3
  %74 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), align 16, !tbaa !2
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %73
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fadd float %74, %76
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  store float %77, float* %78, align 4, !tbaa !2
  %79 = add nuw nsw i64 %55, 4
  %80 = icmp eq i64 %79, 32000
  br i1 %80, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s114() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %48, %0
  %4 = phi i32 [ 0, %0 ], [ %50, %48 ]
  br label %40

5:                                                ; preds = %48
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %62, %3
  %41 = phi i64 [ 0, %3 ], [ %63, %62 ]
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %62, label %43

43:                                               ; preds = %40
  %44 = and i64 %41, 1
  %45 = icmp eq i64 %41, 1
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = sub nsw i64 %41, %44
  br label %65

48:                                               ; preds = %62
  %49 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %50 = add nuw nsw i32 %4, 1
  %51 = icmp eq i32 %50, 39000
  br i1 %51, label %5, label %3

52:                                               ; preds = %65, %43
  %53 = phi i64 [ 0, %43 ], [ %81, %65 ]
  %54 = icmp eq i64 %44, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %53, i64 %41
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %53
  %59 = load float, float* %58, align 4, !tbaa !2
  %60 = fadd float %57, %59
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %53
  store float %60, float* %61, align 4, !tbaa !2
  br label %62

62:                                               ; preds = %55, %52, %40
  %63 = add nuw nsw i64 %41, 1
  %64 = icmp eq i64 %63, 256
  br i1 %64, label %48, label %40

65:                                               ; preds = %65, %46
  %66 = phi i64 [ 0, %46 ], [ %81, %65 ]
  %67 = phi i64 [ %47, %46 ], [ %82, %65 ]
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %66, i64 %41
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %66
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fadd float %69, %71
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %66
  store float %72, float* %73, align 8, !tbaa !2
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %74, i64 %41
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %74
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fadd float %76, %78
  %80 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %74
  store float %79, float* %80, align 4, !tbaa !2
  %81 = add nuw nsw i64 %66, 2
  %82 = add i64 %67, -2
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %52, label %65
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s115() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %53, %0
  %4 = phi i32 [ 0, %0 ], [ %55, %53 ]
  br label %57

5:                                                ; preds = %53
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %76, %79, %57
  %51 = add nuw nsw i64 %59, 1
  %52 = icmp eq i64 %60, 256
  br i1 %52, label %53, label %57

53:                                               ; preds = %50
  %54 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %55 = add nuw nsw i32 %4, 1
  %56 = icmp eq i32 %55, 195000
  br i1 %56, label %5, label %3

57:                                               ; preds = %50, %3
  %58 = phi i64 [ 0, %3 ], [ %60, %50 ]
  %59 = phi i64 [ 1, %3 ], [ %51, %50 ]
  %60 = add nuw nsw i64 %58, 1
  %61 = icmp ult i64 %58, 255
  br i1 %61, label %62, label %50

62:                                               ; preds = %57
  %63 = sub nsw i64 1, %58
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %65 = and i64 %63, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %76, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %58, i64 %59
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = load float, float* %64, align 4, !tbaa !2
  %71 = fmul float %69, %70
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fsub float %73, %71
  store float %74, float* %72, align 4, !tbaa !2
  %75 = add nuw nsw i64 %59, 1
  br label %76

76:                                               ; preds = %67, %62
  %77 = phi i64 [ %75, %67 ], [ %59, %62 ]
  %78 = icmp eq i64 %58, 254
  br i1 %78, label %50, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %96, %79 ], [ %77, %76 ]
  %81 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %58, i64 %80
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = load float, float* %64, align 4, !tbaa !2
  %84 = fmul float %82, %83
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fsub float %86, %84
  store float %87, float* %85, align 4, !tbaa !2
  %88 = add nuw nsw i64 %80, 1
  %89 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %58, i64 %88
  %90 = load float, float* %89, align 4, !tbaa !2
  %91 = load float, float* %64, align 4, !tbaa !2
  %92 = fmul float %90, %91
  %93 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %88
  %94 = load float, float* %93, align 4, !tbaa !2
  %95 = fsub float %94, %92
  store float %95, float* %93, align 4, !tbaa !2
  %96 = add nuw nsw i64 %80, 2
  %97 = icmp eq i64 %96, 256
  br i1 %97, label %50, label %79
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1115() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %70, %0
  %4 = phi i32 [ 0, %0 ], [ %72, %70 ]
  br label %40

5:                                                ; preds = %70
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.148, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %3, %74
  %41 = phi i64 [ 0, %3 ], [ %75, %74 ]
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %68, %42 ]
  %44 = or i64 %43, 1
  %45 = or i64 %43, 2
  %46 = or i64 %43, 3
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %43
  %48 = bitcast float* %47 to <4 x float>*
  %49 = load <4 x float>, <4 x float>* %48, align 16, !tbaa !2
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %43, i64 %41
  %51 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %44, i64 %41
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %45, i64 %41
  %53 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %46, i64 %41
  %54 = load float, float* %50, align 4, !tbaa !2
  %55 = load float, float* %51, align 4, !tbaa !2
  %56 = load float, float* %52, align 4, !tbaa !2
  %57 = load float, float* %53, align 4, !tbaa !2
  %58 = insertelement <4 x float> undef, float %54, i32 0
  %59 = insertelement <4 x float> %58, float %55, i32 1
  %60 = insertelement <4 x float> %59, float %56, i32 2
  %61 = insertelement <4 x float> %60, float %57, i32 3
  %62 = fmul <4 x float> %49, %61
  %63 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %43
  %64 = bitcast float* %63 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %64, align 16, !tbaa !2
  %66 = fadd <4 x float> %62, %65
  %67 = bitcast float* %47 to <4 x float>*
  store <4 x float> %66, <4 x float>* %67, align 16, !tbaa !2
  %68 = add i64 %43, 4
  %69 = icmp eq i64 %68, 256
  br i1 %69, label %74, label %42, !llvm.loop !330

70:                                               ; preds = %74
  %71 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %72 = add nuw nsw i32 %4, 1
  %73 = icmp eq i32 %72, 19500
  br i1 %73, label %5, label %3

74:                                               ; preds = %42
  %75 = add nuw nsw i64 %41, 1
  %76 = icmp eq i64 %75, 256
  br i1 %76, label %70, label %40
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s116() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %51, %0
  %4 = phi i32 [ 0, %0 ], [ %53, %51 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %4, 1
  %54 = icmp eq i32 %53, 500000
  br i1 %54, label %6, label %3

55:                                               ; preds = %75, %3
  %56 = phi float [ %5, %3 ], [ %89, %75 ]
  %57 = phi i64 [ 0, %3 ], [ %87, %75 ]
  %58 = or i64 %57, 1
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %61 = add nuw nsw i64 %57, 4
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = bitcast float* %59 to <4 x float>*
  %64 = load <4 x float>, <4 x float>* %63, align 4, !tbaa !2
  %65 = insertelement <4 x float> undef, float %56, i32 0
  %66 = shufflevector <4 x float> %65, <4 x float> %64, <4 x i32> <i32 0, i32 4, i32 5, i32 6>
  %67 = fmul <4 x float> %64, %66
  %68 = bitcast float* %60 to <4 x float>*
  store <4 x float> %67, <4 x float>* %68, align 8, !tbaa !2
  %69 = add nuw nsw i64 %57, 5
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = extractelement <4 x float> %64, i32 3
  %73 = fmul float %72, %71
  store float %73, float* %62, align 8, !tbaa !2
  %74 = icmp ult i64 %57, 31990
  br i1 %74, label %75, label %51

75:                                               ; preds = %55
  %76 = add nuw nsw i64 %57, 6
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %76
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %79 = add nuw nsw i64 %57, 9
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = bitcast float* %77 to <4 x float>*
  %82 = load <4 x float>, <4 x float>* %81, align 8, !tbaa !2
  %83 = insertelement <4 x float> undef, float %71, i32 0
  %84 = shufflevector <4 x float> %83, <4 x float> %82, <4 x i32> <i32 0, i32 4, i32 5, i32 6>
  %85 = fmul <4 x float> %82, %84
  %86 = bitcast float* %78 to <4 x float>*
  store <4 x float> %85, <4 x float>* %86, align 4, !tbaa !2
  %87 = add nuw nsw i64 %57, 10
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %87
  %89 = load float, float* %88, align 8, !tbaa !2
  %90 = extractelement <4 x float> %82, i32 3
  %91 = fmul float %90, %89
  store float %91, float* %80, align 4, !tbaa !2
  br label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s118() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %60, %0
  %4 = phi i32 [ 0, %0 ], [ %62, %60 ]
  br label %50

5:                                                ; preds = %60
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.150, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %77, %3
  %51 = phi i64 [ %80, %77 ], [ 0, %3 ]
  %52 = phi i64 [ %78, %77 ], [ 1, %3 ]
  %53 = add i64 %51, 1
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = and i64 %53, 1
  %57 = icmp eq i64 %51, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %50
  %59 = sub i64 %53, %56
  br label %81

60:                                               ; preds = %77
  %61 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %62 = add nuw nsw i32 %4, 1
  %63 = icmp eq i32 %62, 39000
  br i1 %63, label %5, label %3

64:                                               ; preds = %81, %50
  %65 = phi float [ %55, %50 ], [ %101, %81 ]
  %66 = phi i64 [ 0, %50 ], [ %102, %81 ]
  %67 = icmp eq i64 %56, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %66, i64 %52
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = xor i64 %66, -1
  %72 = add nsw i64 %52, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fmul float %70, %74
  %76 = fadd float %65, %75
  store float %76, float* %54, align 4, !tbaa !2
  br label %77

77:                                               ; preds = %64, %68
  %78 = add nuw nsw i64 %52, 1
  %79 = icmp eq i64 %78, 256
  %80 = add i64 %51, 1
  br i1 %79, label %60, label %50

81:                                               ; preds = %81, %58
  %82 = phi float [ %55, %58 ], [ %101, %81 ]
  %83 = phi i64 [ 0, %58 ], [ %102, %81 ]
  %84 = phi i64 [ %59, %58 ], [ %103, %81 ]
  %85 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %83, i64 %52
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = xor i64 %83, -1
  %88 = add nsw i64 %52, %87
  %89 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %88
  %90 = load float, float* %89, align 4, !tbaa !2
  %91 = fmul float %86, %90
  %92 = fadd float %82, %91
  store float %92, float* %54, align 4, !tbaa !2
  %93 = or i64 %83, 1
  %94 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %93, i64 %52
  %95 = load float, float* %94, align 4, !tbaa !2
  %96 = sub nuw nsw i64 -2, %83
  %97 = add nsw i64 %52, %96
  %98 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %97
  %99 = load float, float* %98, align 4, !tbaa !2
  %100 = fmul float %95, %99
  %101 = fadd float %92, %100
  store float %101, float* %54, align 4, !tbaa !2
  %102 = add nuw nsw i64 %83, 2
  %103 = add i64 %84, -2
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %64, label %81
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s119() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %57, %0
  %4 = phi i32 [ 0, %0 ], [ %59, %57 ]
  br label %40

5:                                                ; preds = %57
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.151, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %61, %3
  %41 = phi i64 [ 1, %3 ], [ %80, %61 ]
  %42 = add nsw i64 %41, -1
  br label %43

43:                                               ; preds = %82, %40
  %44 = phi i64 [ 0, %40 ], [ %93, %82 ]
  %45 = or i64 %44, 1
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %44
  %47 = bitcast float* %46 to <4 x float>*
  %48 = load <4 x float>, <4 x float>* %47, align 16, !tbaa !2
  %49 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %45
  %50 = bitcast float* %49 to <4 x float>*
  %51 = load <4 x float>, <4 x float>* %50, align 4, !tbaa !2
  %52 = fadd <4 x float> %48, %51
  %53 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %45
  %54 = bitcast float* %53 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 4, !tbaa !2
  %55 = or i64 %44, 4
  %56 = icmp eq i64 %55, 252
  br i1 %56, label %61, label %82, !llvm.loop !331

57:                                               ; preds = %61
  %58 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %59 = add nuw nsw i32 %4, 1
  %60 = icmp eq i32 %59, 39000
  br i1 %60, label %5, label %3

61:                                               ; preds = %43
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 252
  %63 = load float, float* %62, align 16, !tbaa !2
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 253
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %63, %65
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 253
  store float %66, float* %67, align 4, !tbaa !2
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 253
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 254
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fadd float %69, %71
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 254
  store float %72, float* %73, align 8, !tbaa !2
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 254
  %75 = load float, float* %74, align 8, !tbaa !2
  %76 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 255
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fadd float %75, %77
  %79 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 255
  store float %78, float* %79, align 4, !tbaa !2
  %80 = add nuw nsw i64 %41, 1
  %81 = icmp eq i64 %80, 256
  br i1 %81, label %57, label %40

82:                                               ; preds = %43
  %83 = or i64 %44, 5
  %84 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %55
  %85 = bitcast float* %84 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 16, !tbaa !2
  %87 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %83
  %88 = bitcast float* %87 to <4 x float>*
  %89 = load <4 x float>, <4 x float>* %88, align 4, !tbaa !2
  %90 = fadd <4 x float> %86, %89
  %91 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %83
  %92 = bitcast float* %91 to <4 x float>*
  store <4 x float> %90, <4 x float>* %92, align 4, !tbaa !2
  %93 = add nuw nsw i64 %44, 8
  br label %43
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s119p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %43, %0
  %4 = phi i32 [ 0, %0 ], [ %45, %43 ]
  br label %40

5:                                                ; preds = %43
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.152, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %47, %3
  %41 = phi i64 [ 1, %3 ], [ %48, %47 ]
  %42 = add nsw i64 %41, -1
  br label %50

43:                                               ; preds = %47
  %44 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %45 = add nuw nsw i32 %4, 1
  %46 = icmp eq i32 %45, 39000
  br i1 %46, label %5, label %3

47:                                               ; preds = %50
  %48 = add nuw nsw i64 %41, 1
  %49 = icmp eq i64 %48, 256
  br i1 %49, label %43, label %40

50:                                               ; preds = %50, %40
  %51 = phi i64 [ 1, %40 ], [ %73, %50 ]
  %52 = add nsw i64 %51, -1
  %53 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %52
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %51
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %51
  %56 = bitcast float* %53 to <4 x float>*
  %57 = load <4 x float>, <4 x float>* %56, align 4, !tbaa !2
  %58 = bitcast float* %54 to <4 x float>*
  %59 = load <4 x float>, <4 x float>* %58, align 4, !tbaa !2
  %60 = fadd <4 x float> %57, %59
  %61 = bitcast float* %55 to <4 x float>*
  store <4 x float> %60, <4 x float>* %61, align 4, !tbaa !2
  %62 = add nuw nsw i64 %51, 4
  %63 = add nuw nsw i64 %51, 3
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %63
  %65 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %62
  %66 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %62
  %67 = bitcast float* %64 to <4 x float>*
  %68 = load <4 x float>, <4 x float>* %67, align 4, !tbaa !2
  %69 = bitcast float* %65 to <4 x float>*
  %70 = load <4 x float>, <4 x float>* %69, align 4, !tbaa !2
  %71 = fadd <4 x float> %68, %70
  %72 = bitcast float* %66 to <4 x float>*
  store <4 x float> %71, <4 x float>* %72, align 4, !tbaa !2
  %73 = add nuw nsw i64 %51, 8
  %74 = icmp ult i64 %51, 248
  br i1 %74, label %50, label %47
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1119() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %66, %0
  %4 = phi i32 [ 0, %0 ], [ %68, %66 ]
  br label %40

5:                                                ; preds = %66
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.153, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %70, %3
  %41 = phi i64 [ 1, %3 ], [ %71, %70 ]
  %42 = add nsw i64 %41, -1
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i64 [ 0, %40 ], [ %64, %43 ]
  %45 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %44
  %46 = bitcast float* %45 to <4 x float>*
  %47 = load <4 x float>, <4 x float>* %46, align 16, !tbaa !2
  %48 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %44
  %49 = bitcast float* %48 to <4 x float>*
  %50 = load <4 x float>, <4 x float>* %49, align 16, !tbaa !2
  %51 = fadd <4 x float> %47, %50
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %44
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> %51, <4 x float>* %53, align 16, !tbaa !2
  %54 = or i64 %44, 4
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %54
  %56 = bitcast float* %55 to <4 x float>*
  %57 = load <4 x float>, <4 x float>* %56, align 16, !tbaa !2
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %54
  %59 = bitcast float* %58 to <4 x float>*
  %60 = load <4 x float>, <4 x float>* %59, align 16, !tbaa !2
  %61 = fadd <4 x float> %57, %60
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %54
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> %61, <4 x float>* %63, align 16, !tbaa !2
  %64 = add nuw nsw i64 %44, 8
  %65 = icmp eq i64 %64, 256
  br i1 %65, label %70, label %43, !llvm.loop !332

66:                                               ; preds = %70
  %67 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %68 = add nuw nsw i32 %4, 1
  %69 = icmp eq i32 %68, 39000
  br i1 %69, label %5, label %3

70:                                               ; preds = %43
  %71 = add nuw nsw i64 %41, 1
  %72 = icmp eq i64 %71, 256
  br i1 %72, label %66, label %40
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1119p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %69, %0
  %4 = phi i32 [ 0, %0 ], [ %71, %69 ]
  br label %40

5:                                                ; preds = %69
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.154, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %73, %3
  %41 = phi i64 [ 1, %3 ], [ %74, %73 ]
  %42 = add nsw i64 %41, -1
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i64 [ 0, %40 ], [ %67, %43 ]
  %45 = shl i64 %44, 2
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %45
  %47 = bitcast float* %46 to <16 x float>*
  %48 = load <16 x float>, <16 x float>* %47, align 16, !tbaa !2
  %49 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %45
  %50 = bitcast float* %49 to <16 x float>*
  %51 = load <16 x float>, <16 x float>* %50, align 16, !tbaa !2
  %52 = fadd <16 x float> %48, %51
  %53 = shufflevector <16 x float> %52, <16 x float> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %54 = fadd <16 x float> %48, %51
  %55 = shufflevector <16 x float> %54, <16 x float> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %56 = fadd <16 x float> %48, %51
  %57 = shufflevector <16 x float> %56, <16 x float> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %58 = or i64 %45, 3
  %59 = fadd <16 x float> %48, %51
  %60 = shufflevector <16 x float> %59, <16 x float> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %58
  %62 = getelementptr inbounds float, float* %61, i64 -3
  %63 = bitcast float* %62 to <16 x float>*
  %64 = shufflevector <4 x float> %53, <4 x float> %55, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %65 = shufflevector <4 x float> %57, <4 x float> %60, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %66 = shufflevector <8 x float> %64, <8 x float> %65, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %66, <16 x float>* %63, align 4, !tbaa !2
  %67 = add i64 %44, 4
  %68 = icmp eq i64 %67, 64
  br i1 %68, label %73, label %43, !llvm.loop !333

69:                                               ; preds = %73
  %70 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %71 = add nuw nsw i32 %4, 1
  %72 = icmp eq i32 %71, 39000
  br i1 %72, label %5, label %3

73:                                               ; preds = %43
  %74 = add nuw nsw i64 %41, 1
  %75 = icmp eq i64 %74, 256
  br i1 %75, label %69, label %40
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s121() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %73
  %4 = phi i32 [ 0, %0 ], [ %96, %73 ]
  br label %5

5:                                                ; preds = %98, %3
  %6 = phi i64 [ 0, %3 ], [ %118, %98 ]
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 4, !tbaa !2
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4, !tbaa !2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fadd <4 x float> %10, %16
  %21 = fadd <4 x float> %13, %19
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !2
  %26 = or i64 %6, 8
  %27 = icmp eq i64 %26, 31992
  br i1 %27, label %73, label %98, !llvm.loop !334

28:                                               ; preds = %73
  %29 = tail call i64 @clock() #16
  %30 = sub nsw i64 %29, %2
  %31 = sitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %68, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %67, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 16, !tbaa !2
  %39 = fadd float %36, %38
  %40 = or i64 %35, 1
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = fadd float %39, %42
  %44 = or i64 %35, 2
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 8, !tbaa !2
  %47 = fadd float %43, %46
  %48 = or i64 %35, 3
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = fadd float %47, %50
  %52 = or i64 %35, 4
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 16, !tbaa !2
  %55 = fadd float %51, %54
  %56 = or i64 %35, 5
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %55, %58
  %60 = or i64 %35, 6
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %35, 7
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = add nuw nsw i64 %35, 8
  %69 = icmp eq i64 %68, 32000
  br i1 %69, label %70, label %34

70:                                               ; preds = %34
  %71 = fpext float %67 to double
  %72 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %71) #16
  ret i32 0

73:                                               ; preds = %5
  %74 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !2
  %75 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31992), align 16, !tbaa !2
  %76 = fadd float %74, %75
  store float %76, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31992), align 16, !tbaa !2
  %77 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !2
  %78 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !2
  %79 = fadd float %77, %78
  store float %79, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !2
  %80 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !2
  %81 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !2
  %82 = fadd float %80, %81
  store float %82, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !2
  %83 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !2
  %85 = fadd float %83, %84
  store float %85, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !2
  %86 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %88 = fadd float %86, %87
  store float %88, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %90 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %91 = fadd float %89, %90
  store float %91, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %92 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %94 = fadd float %92, %93
  store float %94, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %95 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %96 = add nuw nsw i32 %4, 1
  %97 = icmp eq i32 %96, 150000
  br i1 %97, label %28, label %3

98:                                               ; preds = %5
  %99 = or i64 %6, 9
  %100 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %99
  %101 = bitcast float* %100 to <4 x float>*
  %102 = load <4 x float>, <4 x float>* %101, align 4, !tbaa !2
  %103 = getelementptr inbounds float, float* %100, i64 4
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 4, !tbaa !2
  %106 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %107 = bitcast float* %106 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 16, !tbaa !2
  %109 = getelementptr inbounds float, float* %106, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %111 = load <4 x float>, <4 x float>* %110, align 16, !tbaa !2
  %112 = fadd <4 x float> %102, %108
  %113 = fadd <4 x float> %105, %111
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %112, <4 x float>* %115, align 16, !tbaa !2
  %116 = getelementptr inbounds float, float* %114, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  store <4 x float> %113, <4 x float>* %117, align 16, !tbaa !2
  %118 = add nuw nsw i64 %6, 16
  br label %5
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s121p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %73
  %4 = phi i32 [ 0, %0 ], [ %96, %73 ]
  br label %5

5:                                                ; preds = %98, %3
  %6 = phi i64 [ 0, %3 ], [ %118, %98 ]
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 4, !tbaa !2
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4, !tbaa !2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fadd <4 x float> %10, %16
  %21 = fadd <4 x float> %13, %19
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !2
  %26 = or i64 %6, 8
  %27 = icmp eq i64 %26, 31992
  br i1 %27, label %73, label %98, !llvm.loop !335

28:                                               ; preds = %73
  %29 = tail call i64 @clock() #16
  %30 = sub nsw i64 %29, %2
  %31 = sitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.156, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %68, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %67, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 16, !tbaa !2
  %39 = fadd float %36, %38
  %40 = or i64 %35, 1
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = fadd float %39, %42
  %44 = or i64 %35, 2
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 8, !tbaa !2
  %47 = fadd float %43, %46
  %48 = or i64 %35, 3
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = fadd float %47, %50
  %52 = or i64 %35, 4
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 16, !tbaa !2
  %55 = fadd float %51, %54
  %56 = or i64 %35, 5
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %55, %58
  %60 = or i64 %35, 6
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %35, 7
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = add nuw nsw i64 %35, 8
  %69 = icmp eq i64 %68, 32000
  br i1 %69, label %70, label %34

70:                                               ; preds = %34
  %71 = fpext float %67 to double
  %72 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %71) #16
  ret i32 0

73:                                               ; preds = %5
  %74 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !2
  %75 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31992), align 16, !tbaa !2
  %76 = fadd float %74, %75
  store float %76, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31992), align 16, !tbaa !2
  %77 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !2
  %78 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !2
  %79 = fadd float %77, %78
  store float %79, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !2
  %80 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !2
  %81 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !2
  %82 = fadd float %80, %81
  store float %82, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !2
  %83 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !2
  %85 = fadd float %83, %84
  store float %85, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !2
  %86 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %88 = fadd float %86, %87
  store float %88, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %90 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %91 = fadd float %89, %90
  store float %91, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %92 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %94 = fadd float %92, %93
  store float %94, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %95 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %96 = add nuw nsw i32 %4, 1
  %97 = icmp eq i32 %96, 150000
  br i1 %97, label %28, label %3

98:                                               ; preds = %5
  %99 = or i64 %6, 9
  %100 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %99
  %101 = bitcast float* %100 to <4 x float>*
  %102 = load <4 x float>, <4 x float>* %101, align 4, !tbaa !2
  %103 = getelementptr inbounds float, float* %100, i64 4
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 4, !tbaa !2
  %106 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %107 = bitcast float* %106 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 16, !tbaa !2
  %109 = getelementptr inbounds float, float* %106, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %111 = load <4 x float>, <4 x float>* %110, align 16, !tbaa !2
  %112 = fadd <4 x float> %102, %108
  %113 = fadd <4 x float> %105, %111
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %112, <4 x float>* %115, align 16, !tbaa !2
  %116 = getelementptr inbounds float, float* %114, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  store <4 x float> %113, <4 x float>* %117, align 16, !tbaa !2
  %118 = add nuw nsw i64 %6, 16
  br label %5
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s122(i32 %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0))
  %4 = tail call i64 @clock() #16
  %5 = icmp slt i32 %0, 32001
  br i1 %5, label %6, label %73

6:                                                ; preds = %2
  %7 = add i32 %0, -1
  %8 = sext i32 %7 to i64
  %9 = sext i32 %1 to i64
  br label %10

10:                                               ; preds = %24, %6
  %11 = phi i32 [ %26, %24 ], [ 0, %6 ]
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi i64 [ 0, %10 ], [ %15, %12 ]
  %14 = phi i64 [ %8, %10 ], [ %22, %12 ]
  %15 = add nuw nsw i64 %13, 1
  %16 = sub nsw i64 31999, %13
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %16
  %18 = load float, float* %17, align 4, !tbaa !2
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %18, %20
  store float %21, float* %19, align 4, !tbaa !2
  %22 = add i64 %14, %9
  %23 = icmp slt i64 %22, 32000
  br i1 %23, label %12, label %24

24:                                               ; preds = %12
  %25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %26 = add nuw nsw i32 %11, 1
  %27 = icmp eq i32 %26, 50000
  br i1 %27, label %28, label %10

28:                                               ; preds = %73, %24
  %29 = tail call i64 @clock() #16
  %30 = sub nsw i64 %29, %4
  %31 = sitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %68, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %67, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 16, !tbaa !2
  %39 = fadd float %36, %38
  %40 = or i64 %35, 1
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = fadd float %39, %42
  %44 = or i64 %35, 2
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 8, !tbaa !2
  %47 = fadd float %43, %46
  %48 = or i64 %35, 3
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = fadd float %47, %50
  %52 = or i64 %35, 4
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 16, !tbaa !2
  %55 = fadd float %51, %54
  %56 = or i64 %35, 5
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %55, %58
  %60 = or i64 %35, 6
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %35, 7
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = add nuw nsw i64 %35, 8
  %69 = icmp eq i64 %68, 32000
  br i1 %69, label %70, label %34

70:                                               ; preds = %34
  %71 = fpext float %67 to double
  %72 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %71) #16
  ret i32 0

73:                                               ; preds = %2, %73
  %74 = phi i32 [ %76, %73 ], [ 0, %2 ]
  %75 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %76 = add nuw nsw i32 %74, 1
  %77 = icmp eq i32 %76, 50000
  br i1 %77, label %28, label %73
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s122p(i32 %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0))
  %4 = tail call i64 @clock() #16
  %5 = icmp slt i32 %0, 32001
  br i1 %5, label %6, label %73

6:                                                ; preds = %2
  %7 = add i32 %0, -1
  %8 = sext i32 %7 to i64
  %9 = sext i32 %1 to i64
  br label %10

10:                                               ; preds = %24, %6
  %11 = phi i32 [ %26, %24 ], [ 0, %6 ]
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi i64 [ 0, %10 ], [ %15, %12 ]
  %14 = phi i64 [ %8, %10 ], [ %22, %12 ]
  %15 = add nuw nsw i64 %13, 1
  %16 = sub nsw i64 31999, %13
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %16
  %18 = load float, float* %17, align 4, !tbaa !2
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %18, %20
  store float %21, float* %19, align 4, !tbaa !2
  %22 = add i64 %14, %9
  %23 = icmp slt i64 %22, 32000
  br i1 %23, label %12, label %24

24:                                               ; preds = %12
  %25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %26 = add nuw nsw i32 %11, 1
  %27 = icmp eq i32 %26, 50000
  br i1 %27, label %28, label %10

28:                                               ; preds = %73, %24
  %29 = tail call i64 @clock() #16
  %30 = sub nsw i64 %29, %4
  %31 = sitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.158, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %68, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %67, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 16, !tbaa !2
  %39 = fadd float %36, %38
  %40 = or i64 %35, 1
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = fadd float %39, %42
  %44 = or i64 %35, 2
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 8, !tbaa !2
  %47 = fadd float %43, %46
  %48 = or i64 %35, 3
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = fadd float %47, %50
  %52 = or i64 %35, 4
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 16, !tbaa !2
  %55 = fadd float %51, %54
  %56 = or i64 %35, 5
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %55, %58
  %60 = or i64 %35, 6
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %35, 7
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = add nuw nsw i64 %35, 8
  %69 = icmp eq i64 %68, 32000
  br i1 %69, label %70, label %34

70:                                               ; preds = %34
  %71 = fpext float %67 to double
  %72 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %71) #16
  ret i32 0

73:                                               ; preds = %2, %73
  %74 = phi i32 [ %76, %73 ], [ 0, %2 ]
  %75 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %76 = add nuw nsw i32 %74, 1
  %77 = icmp eq i32 %76, 50000
  br i1 %77, label %28, label %73
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s123() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %76
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 50000
  br i1 %53, label %5, label %3

54:                                               ; preds = %76, %3
  %55 = phi i64 [ 0, %3 ], [ %78, %76 ]
  %56 = phi i32 [ -1, %3 ], [ %77, %76 ]
  %57 = add nsw i32 %56, 1
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %59 = load float, float* %58, align 4, !tbaa !2
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %55
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %55
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fmul float %61, %63
  %65 = fadd float %59, %64
  %66 = sext i32 %57 to i64
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  store float %65, float* %67, align 4, !tbaa !2
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fcmp ogt float %69, 0.000000e+00
  br i1 %70, label %71, label %76

71:                                               ; preds = %54
  %72 = add nsw i32 %56, 2
  %73 = fadd float %64, %69
  %74 = sext i32 %72 to i64
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  store float %73, float* %75, align 4, !tbaa !2
  br label %76

76:                                               ; preds = %54, %71
  %77 = phi i32 [ %72, %71 ], [ %57, %54 ]
  %78 = add nuw nsw i64 %55, 1
  %79 = icmp eq i64 %78, 16000
  br i1 %79, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s124() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %99
  %4 = phi i32 [ 0, %0 ], [ %101, %99 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %52, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = fcmp ule <4 x float> %9, zeroinitializer
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fmul <4 x float> %16, %19
  %21 = fadd <4 x float> %13, %20
  %22 = bitcast float* %14 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !2
  %24 = fmul <4 x float> %23, %19
  %25 = fadd <4 x float> %9, %24
  %26 = select <4 x i1> %10, <4 x float> %21, <4 x float> %25
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 16
  %29 = or i64 %6, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !2
  %33 = fcmp ule <4 x float> %32, zeroinitializer
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %29
  %35 = bitcast float* %34 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 16, !tbaa !2
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %29
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 16, !tbaa !2
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %29
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16, !tbaa !2
  %43 = fmul <4 x float> %39, %42
  %44 = fadd <4 x float> %36, %43
  %45 = bitcast float* %37 to <4 x float>*
  %46 = load <4 x float>, <4 x float>* %45, align 16, !tbaa !2
  %47 = fmul <4 x float> %46, %42
  %48 = fadd <4 x float> %32, %47
  %49 = select <4 x i1> %33, <4 x float> %44, <4 x float> %48
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> %49, <4 x float>* %51, align 16
  %52 = add nuw nsw i64 %6, 8
  %53 = icmp eq i64 %52, 32000
  br i1 %53, label %99, label %5, !llvm.loop !336

54:                                               ; preds = %99
  %55 = tail call i64 @clock() #16
  %56 = sub nsw i64 %55, %2
  %57 = sitofp i64 %56 to double
  %58 = fdiv double %57, 1.000000e+06
  %59 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.160, i64 0, i64 0), double %58)
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi i64 [ 0, %54 ], [ %94, %60 ]
  %62 = phi float [ 0.000000e+00, %54 ], [ %93, %60 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %64 = load float, float* %63, align 16, !tbaa !2
  %65 = fadd float %62, %64
  %66 = or i64 %61, 1
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %61, 2
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 8, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %61, 3
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %61, 4
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 16, !tbaa !2
  %81 = fadd float %77, %80
  %82 = or i64 %61, 5
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = fadd float %81, %84
  %86 = or i64 %61, 6
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  %88 = load float, float* %87, align 8, !tbaa !2
  %89 = fadd float %85, %88
  %90 = or i64 %61, 7
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %90
  %92 = load float, float* %91, align 4, !tbaa !2
  %93 = fadd float %89, %92
  %94 = add nuw nsw i64 %61, 8
  %95 = icmp eq i64 %94, 32000
  br i1 %95, label %96, label %60

96:                                               ; preds = %60
  %97 = fpext float %93 to double
  %98 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %97) #16
  ret i32 0

99:                                               ; preds = %5
  %100 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %101 = add nuw nsw i32 %4, 1
  %102 = icmp eq i32 %101, 50000
  br i1 %102, label %54, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s125() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %88, %0
  %4 = phi i32 [ 0, %0 ], [ %90, %88 ]
  br label %50

5:                                                ; preds = %88
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.161, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 65536
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %92, %3
  %51 = phi i64 [ 0, %3 ], [ %93, %92 ]
  %52 = phi i64 [ -1, %3 ], [ %55, %92 ]
  %53 = shl i64 %52, 32
  %54 = ashr exact i64 %53, 32
  %55 = add nsw i64 %54, 256
  br label %56

56:                                               ; preds = %56, %50
  %57 = phi i64 [ 0, %50 ], [ %86, %56 ]
  %58 = add i64 %54, %57
  %59 = add nsw i64 %58, 1
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %51, i64 %57
  %61 = bitcast float* %60 to <4 x float>*
  %62 = load <4 x float>, <4 x float>* %61, align 16, !tbaa !2
  %63 = getelementptr inbounds float, float* %60, i64 4
  %64 = bitcast float* %63 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %64, align 16, !tbaa !2
  %66 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %51, i64 %57
  %67 = bitcast float* %66 to <4 x float>*
  %68 = load <4 x float>, <4 x float>* %67, align 16, !tbaa !2
  %69 = getelementptr inbounds float, float* %66, i64 4
  %70 = bitcast float* %69 to <4 x float>*
  %71 = load <4 x float>, <4 x float>* %70, align 16, !tbaa !2
  %72 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %51, i64 %57
  %73 = bitcast float* %72 to <4 x float>*
  %74 = load <4 x float>, <4 x float>* %73, align 16, !tbaa !2
  %75 = getelementptr inbounds float, float* %72, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  %77 = load <4 x float>, <4 x float>* %76, align 16, !tbaa !2
  %78 = fmul <4 x float> %68, %74
  %79 = fmul <4 x float> %71, %77
  %80 = fadd <4 x float> %62, %78
  %81 = fadd <4 x float> %65, %79
  %82 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %59
  %83 = bitcast float* %82 to <4 x float>*
  store <4 x float> %80, <4 x float>* %83, align 4, !tbaa !2
  %84 = getelementptr inbounds float, float* %82, i64 4
  %85 = bitcast float* %84 to <4 x float>*
  store <4 x float> %81, <4 x float>* %85, align 4, !tbaa !2
  %86 = add i64 %57, 8
  %87 = icmp eq i64 %86, 256
  br i1 %87, label %92, label %56, !llvm.loop !337

88:                                               ; preds = %92
  %89 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %90 = add nuw nsw i32 %4, 1
  %91 = icmp eq i32 %90, 19500
  br i1 %91, label %5, label %3

92:                                               ; preds = %56
  %93 = add nuw nsw i64 %51, 1
  %94 = icmp eq i64 %93, 256
  br i1 %94, label %88, label %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s125p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %84, %0
  %4 = phi i32 [ 0, %0 ], [ %86, %84 ]
  br label %50

5:                                                ; preds = %84
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.162, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 65536
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %88, %3
  %51 = phi i64 [ 0, %3 ], [ %89, %88 ]
  %52 = shl i64 %51, 8
  br label %53

53:                                               ; preds = %53, %50
  %54 = phi i64 [ 0, %50 ], [ %82, %53 ]
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %51, i64 %54
  %56 = bitcast float* %55 to <4 x float>*
  %57 = load <4 x float>, <4 x float>* %56, align 16, !tbaa !2
  %58 = getelementptr inbounds float, float* %55, i64 4
  %59 = bitcast float* %58 to <4 x float>*
  %60 = load <4 x float>, <4 x float>* %59, align 16, !tbaa !2
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %51, i64 %54
  %62 = bitcast float* %61 to <4 x float>*
  %63 = load <4 x float>, <4 x float>* %62, align 16, !tbaa !2
  %64 = getelementptr inbounds float, float* %61, i64 4
  %65 = bitcast float* %64 to <4 x float>*
  %66 = load <4 x float>, <4 x float>* %65, align 16, !tbaa !2
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %51, i64 %54
  %68 = bitcast float* %67 to <4 x float>*
  %69 = load <4 x float>, <4 x float>* %68, align 16, !tbaa !2
  %70 = getelementptr inbounds float, float* %67, i64 4
  %71 = bitcast float* %70 to <4 x float>*
  %72 = load <4 x float>, <4 x float>* %71, align 16, !tbaa !2
  %73 = fmul <4 x float> %63, %69
  %74 = fmul <4 x float> %66, %72
  %75 = fadd <4 x float> %57, %73
  %76 = fadd <4 x float> %60, %74
  %77 = add nuw nsw i64 %54, %52
  %78 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %77
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> %75, <4 x float>* %79, align 16, !tbaa !2
  %80 = getelementptr inbounds float, float* %78, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  store <4 x float> %76, <4 x float>* %81, align 16, !tbaa !2
  %82 = add i64 %54, 8
  %83 = icmp eq i64 %82, 256
  br i1 %83, label %88, label %53, !llvm.loop !338

84:                                               ; preds = %88
  %85 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %86 = add nuw nsw i32 %4, 1
  %87 = icmp eq i32 %86, 19500
  br i1 %87, label %5, label %3

88:                                               ; preds = %53
  %89 = add nuw nsw i64 %51, 1
  %90 = icmp eq i64 %89, 256
  br i1 %90, label %84, label %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s126() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %47, %0
  %4 = phi i32 [ 0, %0 ], [ %49, %47 ]
  br label %40

5:                                                ; preds = %47
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.163, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %51, %3
  %41 = phi i64 [ 0, %3 ], [ %54, %51 ]
  %42 = phi i32 [ 1, %3 ], [ %53, %51 ]
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0, i64 %41
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = add nsw i32 %42, 254
  br label %56

47:                                               ; preds = %51
  %48 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %49 = add nuw nsw i32 %4, 1
  %50 = icmp eq i32 %49, 1950
  br i1 %50, label %5, label %3

51:                                               ; preds = %56
  %52 = trunc i64 %58 to i32
  %53 = add nsw i32 %52, 2
  %54 = add nuw nsw i64 %41, 1
  %55 = icmp eq i64 %54, 256
  br i1 %55, label %47, label %40

56:                                               ; preds = %71, %40
  %57 = phi float [ %45, %40 ], [ %77, %71 ]
  %58 = phi i64 [ %43, %40 ], [ %79, %71 ]
  %59 = phi i64 [ 1, %40 ], [ %80, %71 ]
  %60 = add nsw i64 %58, -1
  %61 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %59, i64 %41
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fmul float %62, %64
  %66 = fadd float %57, %65
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %59, i64 %41
  store float %66, float* %67, align 4, !tbaa !2
  %68 = add nuw nsw i64 %59, 1
  %69 = trunc i64 %58 to i32
  %70 = icmp eq i32 %46, %69
  br i1 %70, label %51, label %71

71:                                               ; preds = %56
  %72 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %58
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %68, i64 %41
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fmul float %73, %75
  %77 = fadd float %66, %76
  %78 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %68, i64 %41
  store float %77, float* %78, align 4, !tbaa !2
  %79 = add nsw i64 %58, 2
  %80 = add nuw nsw i64 %59, 2
  br label %56
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s126p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %45, %0
  %4 = phi i32 [ 0, %0 ], [ %47, %45 ]
  br label %40

5:                                                ; preds = %45
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.164, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %49, %3
  %41 = phi i64 [ 0, %3 ], [ %50, %49 ]
  %42 = shl i64 %41, 8
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0, i64 %41
  %44 = load float, float* %43, align 4, !tbaa !2
  br label %52

45:                                               ; preds = %49
  %46 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %47 = add nuw nsw i32 %4, 1
  %48 = icmp eq i32 %47, 1950
  br i1 %48, label %5, label %3

49:                                               ; preds = %52
  %50 = add nuw nsw i64 %41, 1
  %51 = icmp eq i64 %50, 256
  br i1 %51, label %45, label %40

52:                                               ; preds = %66, %40
  %53 = phi float [ %44, %40 ], [ %73, %66 ]
  %54 = phi i64 [ 1, %40 ], [ %75, %66 ]
  %55 = add nsw i64 %54, -1
  %56 = add nuw nsw i64 %55, %42
  %57 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %54, i64 %41
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = fmul float %58, %60
  %62 = fadd float %53, %61
  %63 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %54, i64 %41
  store float %62, float* %63, align 4, !tbaa !2
  %64 = add nuw nsw i64 %54, 1
  %65 = icmp eq i64 %64, 256
  br i1 %65, label %49, label %66

66:                                               ; preds = %52
  %67 = add nuw nsw i64 %54, %42
  %68 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %64, i64 %41
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fmul float %69, %71
  %73 = fadd float %62, %72
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %64, i64 %41
  store float %73, float* %74, align 4, !tbaa !2
  %75 = add nuw nsw i64 %54, 2
  br label %52
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s126pp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %43, %0
  %4 = phi i32 [ 0, %0 ], [ %45, %43 ]
  br label %40

5:                                                ; preds = %43
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.165, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %47, %3
  %41 = phi i64 [ 1, %3 ], [ %48, %47 ]
  %42 = add nsw i64 %41, -1
  br label %50

43:                                               ; preds = %47
  %44 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %45 = add nuw nsw i32 %4, 1
  %46 = icmp eq i32 %45, 1950
  br i1 %46, label %5, label %3

47:                                               ; preds = %50
  %48 = add nuw nsw i64 %41, 1
  %49 = icmp eq i64 %48, 256
  br i1 %49, label %43, label %40

50:                                               ; preds = %50, %40
  %51 = phi i64 [ 0, %40 ], [ %75, %50 ]
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %51
  %53 = load float, float* %52, align 8, !tbaa !2
  %54 = shl nuw nsw i64 %51, 8
  %55 = add nuw nsw i64 %42, %54
  %56 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %41, i64 %51
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = fmul float %57, %59
  %61 = fadd float %53, %60
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %51
  store float %61, float* %62, align 8, !tbaa !2
  %63 = or i64 %51, 1
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = shl nuw nsw i64 %63, 8
  %67 = add nuw nsw i64 %42, %66
  %68 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %41, i64 %63
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fmul float %69, %71
  %73 = fadd float %65, %72
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %63
  store float %73, float* %74, align 4, !tbaa !2
  %75 = add nuw nsw i64 %51, 2
  %76 = icmp eq i64 %75, 256
  br i1 %76, label %47, label %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s127() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %99
  %4 = phi i32 [ 0, %0 ], [ %101, %99 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %52, %5 ]
  %7 = shl nuw i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 16, !tbaa !2
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = fmul <4 x float> %13, %16
  %18 = fadd <4 x float> %10, %17
  %19 = or i64 %7, 1
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !2
  %23 = fmul <4 x float> %16, %22
  %24 = fadd <4 x float> %10, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %26 = getelementptr inbounds float, float* %25, i64 -1
  %27 = bitcast float* %26 to <8 x float>*
  %28 = shufflevector <4 x float> %18, <4 x float> %24, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x float> %28, <8 x float>* %27, align 4, !tbaa !2
  %29 = or i64 %6, 4
  %30 = shl nuw i64 %29, 1
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %32 = bitcast float* %31 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 16, !tbaa !2
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %29
  %35 = bitcast float* %34 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 16, !tbaa !2
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %29
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 16, !tbaa !2
  %40 = fmul <4 x float> %36, %39
  %41 = fadd <4 x float> %33, %40
  %42 = or i64 %30, 1
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %29
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 16, !tbaa !2
  %46 = fmul <4 x float> %39, %45
  %47 = fadd <4 x float> %33, %46
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %49 = getelementptr inbounds float, float* %48, i64 -1
  %50 = bitcast float* %49 to <8 x float>*
  %51 = shufflevector <4 x float> %41, <4 x float> %47, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x float> %51, <8 x float>* %50, align 4, !tbaa !2
  %52 = add nuw nsw i64 %6, 8
  %53 = icmp eq i64 %52, 16000
  br i1 %53, label %99, label %5, !llvm.loop !339

54:                                               ; preds = %99
  %55 = tail call i64 @clock() #16
  %56 = sub nsw i64 %55, %2
  %57 = sitofp i64 %56 to double
  %58 = fdiv double %57, 1.000000e+06
  %59 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), double %58)
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi i64 [ 0, %54 ], [ %94, %60 ]
  %62 = phi float [ 0.000000e+00, %54 ], [ %93, %60 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %64 = load float, float* %63, align 16, !tbaa !2
  %65 = fadd float %62, %64
  %66 = or i64 %61, 1
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %61, 2
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 8, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %61, 3
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %61, 4
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 16, !tbaa !2
  %81 = fadd float %77, %80
  %82 = or i64 %61, 5
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = fadd float %81, %84
  %86 = or i64 %61, 6
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  %88 = load float, float* %87, align 8, !tbaa !2
  %89 = fadd float %85, %88
  %90 = or i64 %61, 7
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %90
  %92 = load float, float* %91, align 4, !tbaa !2
  %93 = fadd float %89, %92
  %94 = add nuw nsw i64 %61, 8
  %95 = icmp eq i64 %94, 32000
  br i1 %95, label %96, label %60

96:                                               ; preds = %60
  %97 = fpext float %93 to double
  %98 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %97) #16
  ret i32 0

99:                                               ; preds = %5
  %100 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %101 = add nuw nsw i32 %4, 1
  %102 = icmp eq i32 %101, 100000
  br i1 %102, label %54, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s127p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %87
  %4 = phi i32 [ 0, %0 ], [ %89, %87 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %40, %5 ]
  %7 = shl i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7
  %9 = bitcast float* %8 to <8 x float>*
  %10 = load <8 x float>, <8 x float>* %9, align 16, !tbaa !2
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7
  %12 = bitcast float* %11 to <8 x float>*
  %13 = load <8 x float>, <8 x float>* %12, align 16, !tbaa !2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %7
  %15 = bitcast float* %14 to <8 x float>*
  %16 = load <8 x float>, <8 x float>* %15, align 16, !tbaa !2
  %17 = fmul <8 x float> %13, %16
  %18 = fadd <8 x float> %10, %17
  %19 = shufflevector <8 x float> %18, <8 x float> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %20 = shl i64 %6, 2
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %7
  %22 = bitcast float* %21 to <8 x float>*
  %23 = load <8 x float>, <8 x float>* %22, align 16, !tbaa !2
  %24 = fmul <8 x float> %16, %23
  %25 = fadd <8 x float> %10, %24
  %26 = shufflevector <8 x float> %25, <8 x float> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %27 = fmul <8 x float> %13, %16
  %28 = fadd <8 x float> %10, %27
  %29 = shufflevector <8 x float> %28, <8 x float> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %30 = fmul <8 x float> %16, %23
  %31 = fadd <8 x float> %10, %30
  %32 = shufflevector <8 x float> %31, <8 x float> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %33 = or i64 %20, 3
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = getelementptr inbounds float, float* %34, i64 -3
  %36 = bitcast float* %35 to <16 x float>*
  %37 = shufflevector <4 x float> %19, <4 x float> %26, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %38 = shufflevector <4 x float> %29, <4 x float> %32, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %39 = shufflevector <8 x float> %37, <8 x float> %38, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %39, <16 x float>* %36, align 4, !tbaa !2
  %40 = add i64 %6, 4
  %41 = icmp eq i64 %40, 8000
  br i1 %41, label %87, label %5, !llvm.loop !340

42:                                               ; preds = %87
  %43 = tail call i64 @clock() #16
  %44 = sub nsw i64 %43, %2
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.167, i64 0, i64 0), double %46)
  br label %48

48:                                               ; preds = %48, %42
  %49 = phi i64 [ 0, %42 ], [ %82, %48 ]
  %50 = phi float [ 0.000000e+00, %42 ], [ %81, %48 ]
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %52 = load float, float* %51, align 16, !tbaa !2
  %53 = fadd float %50, %52
  %54 = or i64 %49, 1
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !2
  %57 = fadd float %53, %56
  %58 = or i64 %49, 2
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = load float, float* %59, align 8, !tbaa !2
  %61 = fadd float %57, %60
  %62 = or i64 %49, 3
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %61, %64
  %66 = or i64 %49, 4
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 16, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %49, 5
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %49, 6
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 8, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %49, 7
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %77, %80
  %82 = add nuw nsw i64 %49, 8
  %83 = icmp eq i64 %82, 32000
  br i1 %83, label %84, label %48

84:                                               ; preds = %48
  %85 = fpext float %81 to double
  %86 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %85) #16
  ret i32 0

87:                                               ; preds = %5
  %88 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %89 = add nuw nsw i32 %4, 1
  %90 = icmp eq i32 %89, 100000
  br i1 %90, label %42, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s128() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %59
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 100000
  br i1 %58, label %5, label %3

59:                                               ; preds = %59, %3
  %60 = phi i64 [ -1, %3 ], [ %80, %59 ]
  %61 = phi i64 [ 0, %3 ], [ %84, %59 ]
  %62 = add nsw i64 %60, 1
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %61
  %66 = load float, float* %65, align 8, !tbaa !2
  %67 = fsub float %64, %66
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  store float %67, float* %68, align 8, !tbaa !2
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = fadd float %67, %70
  store float %71, float* %63, align 4, !tbaa !2
  %72 = or i64 %61, 1
  %73 = add nsw i64 %60, 3
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %73
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %72
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fsub float %75, %77
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  store float %78, float* %79, align 4, !tbaa !2
  %80 = add nsw i64 %60, 4
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %73
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = fadd float %78, %82
  store float %83, float* %74, align 4, !tbaa !2
  %84 = add nuw nsw i64 %61, 2
  %85 = icmp eq i64 %84, 16000
  br i1 %85, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s128p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.169, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %59
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 100000
  br i1 %58, label %5, label %3

59:                                               ; preds = %3, %59
  %60 = phi i64 [ 0, %3 ], [ %100, %59 ]
  %61 = shl nuw nsw i64 %60, 1
  %62 = or i64 %61, 1
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = or i64 %61, 3
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = or i64 %61, 5
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %72
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = or i64 %61, 7
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %75
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = bitcast float* %65 to <4 x float>*
  %79 = load <4 x float>, <4 x float>* %78, align 16, !tbaa !2
  %80 = insertelement <4 x float> undef, float %64, i32 0
  %81 = insertelement <4 x float> %80, float %71, i32 1
  %82 = insertelement <4 x float> %81, float %74, i32 2
  %83 = insertelement <4 x float> %82, float %77, i32 3
  %84 = fsub <4 x float> %83, %79
  %85 = extractelement <4 x float> %84, i32 0
  %86 = fadd float %85, %68
  store float %86, float* %63, align 4, !tbaa !2
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %69
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = extractelement <4 x float> %84, i32 1
  %90 = fadd float %89, %88
  store float %90, float* %70, align 4, !tbaa !2
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %72
  %92 = load float, float* %91, align 4, !tbaa !2
  %93 = extractelement <4 x float> %84, i32 2
  %94 = fadd float %93, %92
  store float %94, float* %73, align 4, !tbaa !2
  %95 = bitcast float* %66 to <4 x float>*
  store <4 x float> %84, <4 x float>* %95, align 16, !tbaa !2
  %96 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %75
  %97 = load float, float* %96, align 4, !tbaa !2
  %98 = extractelement <4 x float> %84, i32 3
  %99 = fadd float %98, %97
  store float %99, float* %76, align 4, !tbaa !2
  %100 = add nuw nsw i64 %60, 4
  %101 = icmp ult i64 %60, 15996
  br i1 %101, label %59, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s131() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %73
  %4 = phi i32 [ 0, %0 ], [ %96, %73 ]
  br label %5

5:                                                ; preds = %98, %3
  %6 = phi i64 [ 0, %3 ], [ %118, %98 ]
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 4, !tbaa !2
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4, !tbaa !2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fadd <4 x float> %10, %16
  %21 = fadd <4 x float> %13, %19
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !2
  %26 = or i64 %6, 8
  %27 = icmp eq i64 %26, 31992
  br i1 %27, label %73, label %98, !llvm.loop !341

28:                                               ; preds = %73
  %29 = tail call i64 @clock() #16
  %30 = sub nsw i64 %29, %2
  %31 = sitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.170, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %68, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %67, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 16, !tbaa !2
  %39 = fadd float %36, %38
  %40 = or i64 %35, 1
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = fadd float %39, %42
  %44 = or i64 %35, 2
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 8, !tbaa !2
  %47 = fadd float %43, %46
  %48 = or i64 %35, 3
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = fadd float %47, %50
  %52 = or i64 %35, 4
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 16, !tbaa !2
  %55 = fadd float %51, %54
  %56 = or i64 %35, 5
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %55, %58
  %60 = or i64 %35, 6
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %35, 7
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = add nuw nsw i64 %35, 8
  %69 = icmp eq i64 %68, 32000
  br i1 %69, label %70, label %34

70:                                               ; preds = %34
  %71 = fpext float %67 to double
  %72 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %71) #16
  ret i32 0

73:                                               ; preds = %5
  %74 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !2
  %75 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31992), align 16, !tbaa !2
  %76 = fadd float %74, %75
  store float %76, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31992), align 16, !tbaa !2
  %77 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !2
  %78 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !2
  %79 = fadd float %77, %78
  store float %79, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !2
  %80 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !2
  %81 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !2
  %82 = fadd float %80, %81
  store float %82, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !2
  %83 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !2
  %85 = fadd float %83, %84
  store float %85, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !2
  %86 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %88 = fadd float %86, %87
  store float %88, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %90 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %91 = fadd float %89, %90
  store float %91, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %92 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %94 = fadd float %92, %93
  store float %94, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %95 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %96 = add nuw nsw i32 %4, 1
  %97 = icmp eq i32 %96, 250000
  br i1 %97, label %28, label %3

98:                                               ; preds = %5
  %99 = or i64 %6, 9
  %100 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %99
  %101 = bitcast float* %100 to <4 x float>*
  %102 = load <4 x float>, <4 x float>* %101, align 4, !tbaa !2
  %103 = getelementptr inbounds float, float* %100, i64 4
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 4, !tbaa !2
  %106 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %107 = bitcast float* %106 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 16, !tbaa !2
  %109 = getelementptr inbounds float, float* %106, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %111 = load <4 x float>, <4 x float>* %110, align 16, !tbaa !2
  %112 = fadd <4 x float> %102, %108
  %113 = fadd <4 x float> %105, %111
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %112, <4 x float>* %115, align 16, !tbaa !2
  %116 = getelementptr inbounds float, float* %114, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  store <4 x float> %113, <4 x float>* %117, align 16, !tbaa !2
  %118 = add nuw nsw i64 %6, 16
  br label %5
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s131p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %86, %0
  %4 = phi i32 [ 0, %0 ], [ %97, %86 ]
  br label %50

5:                                                ; preds = %86
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.171, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %99, %3
  %51 = phi i64 [ 0, %3 ], [ %104, %99 ]
  %52 = or i64 %51, 1
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %51
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %51
  %56 = or i64 %51, 4
  %57 = bitcast float* %53 to <4 x float>*
  %58 = load <4 x float>, <4 x float>* %57, align 4, !tbaa !2
  %59 = bitcast float* %54 to <4 x float>*
  %60 = load <4 x float>, <4 x float>* %59, align 16, !tbaa !2
  %61 = fadd <4 x float> %58, %60
  %62 = bitcast float* %55 to <4 x float>*
  store <4 x float> %61, <4 x float>* %62, align 16, !tbaa !2
  %63 = or i64 %51, 5
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %67 = or i64 %51, 8
  %68 = bitcast float* %64 to <4 x float>*
  %69 = load <4 x float>, <4 x float>* %68, align 4, !tbaa !2
  %70 = bitcast float* %65 to <4 x float>*
  %71 = load <4 x float>, <4 x float>* %70, align 16, !tbaa !2
  %72 = fadd <4 x float> %69, %71
  %73 = bitcast float* %66 to <4 x float>*
  store <4 x float> %72, <4 x float>* %73, align 16, !tbaa !2
  %74 = or i64 %51, 9
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %78 = or i64 %51, 12
  %79 = bitcast float* %75 to <4 x float>*
  %80 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !2
  %81 = bitcast float* %76 to <4 x float>*
  %82 = load <4 x float>, <4 x float>* %81, align 16, !tbaa !2
  %83 = fadd <4 x float> %80, %82
  %84 = bitcast float* %77 to <4 x float>*
  store <4 x float> %83, <4 x float>* %84, align 16, !tbaa !2
  %85 = icmp ult i64 %51, 31984
  br i1 %85, label %99, label %86

86:                                               ; preds = %50
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %88 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %89 = fadd float %87, %88
  store float %89, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %90 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %91 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %92 = fadd float %90, %91
  store float %92, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %94 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %95 = fadd float %93, %94
  store float %95, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %96 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %97 = add nuw nsw i32 %4, 1
  %98 = icmp eq i32 %97, 250000
  br i1 %98, label %5, label %3

99:                                               ; preds = %50
  %100 = or i64 %51, 13
  %101 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %100
  %102 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %78
  %103 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %104 = add nuw nsw i64 %51, 16
  %105 = bitcast float* %101 to <4 x float>*
  %106 = load <4 x float>, <4 x float>* %105, align 4, !tbaa !2
  %107 = bitcast float* %102 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 16, !tbaa !2
  %109 = fadd <4 x float> %106, %108
  %110 = bitcast float* %103 to <4 x float>*
  store <4 x float> %109, <4 x float>* %110, align 16, !tbaa !2
  br label %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s132() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %70, %0
  %4 = phi i32 [ 0, %0 ], [ %100, %70 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 1), align 4, !tbaa !2
  %6 = insertelement <4 x float> undef, float %5, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> undef, <4 x i32> zeroinitializer
  %8 = insertelement <4 x float> undef, float %5, i32 0
  %9 = shufflevector <4 x float> %8, <4 x float> undef, <4 x i32> zeroinitializer
  br label %10

10:                                               ; preds = %102, %3
  %11 = phi i64 [ 0, %3 ], [ %124, %102 ]
  %12 = or i64 %11, 1
  %13 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 %11
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !2
  %22 = getelementptr inbounds float, float* %19, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !2
  %25 = fmul <4 x float> %21, %7
  %26 = fmul <4 x float> %24, %9
  %27 = fadd <4 x float> %15, %25
  %28 = fadd <4 x float> %18, %26
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %12
  %30 = bitcast float* %29 to <4 x float>*
  store <4 x float> %27, <4 x float>* %30, align 4, !tbaa !2
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %28, <4 x float>* %32, align 4, !tbaa !2
  %33 = or i64 %11, 8
  %34 = icmp eq i64 %33, 248
  br i1 %34, label %70, label %102, !llvm.loop !342

35:                                               ; preds = %70
  %36 = tail call i64 @clock() #16
  %37 = sub nsw i64 %36, %2
  %38 = sitofp i64 %37 to double
  %39 = fdiv double %38, 1.000000e+06
  %40 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i64 0, i64 0), double %39)
  br label %41

41:                                               ; preds = %35, %44
  %42 = phi i64 [ %45, %44 ], [ 0, %35 ]
  %43 = phi float [ %67, %44 ], [ 0.000000e+00, %35 ]
  br label %50

44:                                               ; preds = %50
  %45 = add nuw nsw i64 %42, 1
  %46 = icmp eq i64 %45, 256
  br i1 %46, label %47, label %41

47:                                               ; preds = %44
  %48 = fpext float %67 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %50, %41
  %51 = phi i64 [ 0, %41 ], [ %68, %50 ]
  %52 = phi float [ %43, %41 ], [ %67, %50 ]
  %53 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %51
  %54 = load float, float* %53, align 16, !tbaa !2
  %55 = fadd float %52, %54
  %56 = or i64 %51, 1
  %57 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %55, %58
  %60 = or i64 %51, 2
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %60
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %51, 3
  %65 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = add nuw nsw i64 %51, 4
  %69 = icmp eq i64 %68, 256
  br i1 %69, label %44, label %50

70:                                               ; preds = %10
  %71 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 248), align 16, !tbaa !2
  %72 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 249), align 4, !tbaa !2
  %73 = fmul float %72, %5
  %74 = fadd float %71, %73
  store float %74, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 249), align 4, !tbaa !2
  %75 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 249), align 4, !tbaa !2
  %76 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 250), align 8, !tbaa !2
  %77 = fmul float %76, %5
  %78 = fadd float %75, %77
  store float %78, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 250), align 8, !tbaa !2
  %79 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 250), align 8, !tbaa !2
  %80 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 251), align 4, !tbaa !2
  %81 = fmul float %80, %5
  %82 = fadd float %79, %81
  store float %82, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 251), align 4, !tbaa !2
  %83 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 251), align 4, !tbaa !2
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 252), align 16, !tbaa !2
  %85 = fmul float %84, %5
  %86 = fadd float %83, %85
  store float %86, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 252), align 16, !tbaa !2
  %87 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 252), align 16, !tbaa !2
  %88 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 253), align 4, !tbaa !2
  %89 = fmul float %88, %5
  %90 = fadd float %87, %89
  store float %90, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 253), align 4, !tbaa !2
  %91 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 253), align 4, !tbaa !2
  %92 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 254), align 8, !tbaa !2
  %93 = fmul float %92, %5
  %94 = fadd float %91, %93
  store float %94, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 254), align 8, !tbaa !2
  %95 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 254), align 8, !tbaa !2
  %96 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 255), align 4, !tbaa !2
  %97 = fmul float %96, %5
  %98 = fadd float %95, %97
  store float %98, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 255), align 4, !tbaa !2
  %99 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %100 = add nuw nsw i32 %4, 1
  %101 = icmp eq i32 %100, 20000000
  br i1 %101, label %35, label %3

102:                                              ; preds = %10
  %103 = or i64 %11, 9
  %104 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 %33
  %105 = bitcast float* %104 to <4 x float>*
  %106 = load <4 x float>, <4 x float>* %105, align 16, !tbaa !2
  %107 = getelementptr inbounds float, float* %104, i64 4
  %108 = bitcast float* %107 to <4 x float>*
  %109 = load <4 x float>, <4 x float>* %108, align 16, !tbaa !2
  %110 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %103
  %111 = bitcast float* %110 to <4 x float>*
  %112 = load <4 x float>, <4 x float>* %111, align 4, !tbaa !2
  %113 = getelementptr inbounds float, float* %110, i64 4
  %114 = bitcast float* %113 to <4 x float>*
  %115 = load <4 x float>, <4 x float>* %114, align 4, !tbaa !2
  %116 = fmul <4 x float> %112, %7
  %117 = fmul <4 x float> %115, %9
  %118 = fadd <4 x float> %106, %116
  %119 = fadd <4 x float> %109, %117
  %120 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %103
  %121 = bitcast float* %120 to <4 x float>*
  store <4 x float> %118, <4 x float>* %121, align 4, !tbaa !2
  %122 = getelementptr inbounds float, float* %120, i64 4
  %123 = bitcast float* %122 to <4 x float>*
  store <4 x float> %119, <4 x float>* %123, align 4, !tbaa !2
  %124 = add nuw nsw i64 %11, 16
  br label %10
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s132p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %43, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %43 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 1), align 4, !tbaa !2
  %6 = insertelement <4 x float> undef, float %5, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> undef, <4 x i32> zeroinitializer
  br label %59

8:                                                ; preds = %43
  %9 = tail call i64 @clock() #16
  %10 = sub nsw i64 %9, %2
  %11 = sitofp i64 %10 to double
  %12 = fdiv double %11, 1.000000e+06
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.173, i64 0, i64 0), double %12)
  br label %14

14:                                               ; preds = %8, %17
  %15 = phi i64 [ %18, %17 ], [ 0, %8 ]
  %16 = phi float [ %40, %17 ], [ 0.000000e+00, %8 ]
  br label %23

17:                                               ; preds = %23
  %18 = add nuw nsw i64 %15, 1
  %19 = icmp eq i64 %18, 256
  br i1 %19, label %20, label %14

20:                                               ; preds = %17
  %21 = fpext float %40 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #16
  ret i32 0

23:                                               ; preds = %23, %14
  %24 = phi i64 [ 0, %14 ], [ %41, %23 ]
  %25 = phi float [ %16, %14 ], [ %40, %23 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15, i64 %24
  %27 = load float, float* %26, align 16, !tbaa !2
  %28 = fadd float %25, %27
  %29 = or i64 %24, 1
  %30 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %24, 2
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15, i64 %33
  %35 = load float, float* %34, align 8, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %24, 3
  %38 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = fadd float %36, %39
  %41 = add nuw nsw i64 %24, 4
  %42 = icmp eq i64 %41, 256
  br i1 %42, label %17, label %23

43:                                               ; preds = %59
  %44 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 252), align 16, !tbaa !2
  %45 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 253), align 4, !tbaa !2
  %46 = fmul float %45, %5
  %47 = fadd float %44, %46
  store float %47, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 253), align 4, !tbaa !2
  %48 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 253), align 4, !tbaa !2
  %49 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 254), align 8, !tbaa !2
  %50 = fmul float %49, %5
  %51 = fadd float %48, %50
  store float %51, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 254), align 8, !tbaa !2
  %52 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 254), align 8, !tbaa !2
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 255), align 4, !tbaa !2
  %54 = fmul float %53, %5
  %55 = fadd float %52, %54
  store float %55, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 255), align 4, !tbaa !2
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 20000000
  br i1 %58, label %8, label %3

59:                                               ; preds = %59, %3
  %60 = phi i64 [ 0, %3 ], [ %91, %59 ]
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 %60
  %62 = or i64 %60, 1
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %62
  %65 = bitcast float* %61 to <4 x float>*
  %66 = load <4 x float>, <4 x float>* %65, align 16, !tbaa !2
  %67 = add nuw nsw i64 %60, 4
  %68 = bitcast float* %63 to <4 x float>*
  %69 = load <4 x float>, <4 x float>* %68, align 4, !tbaa !2
  %70 = fmul <4 x float> %69, %7
  %71 = fadd <4 x float> %66, %70
  %72 = bitcast float* %64 to <4 x float>*
  store <4 x float> %71, <4 x float>* %72, align 4, !tbaa !2
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 %67
  %74 = or i64 %67, 1
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %74
  %76 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %74
  %77 = bitcast float* %73 to <4 x float>*
  %78 = load <4 x float>, <4 x float>* %77, align 16, !tbaa !2
  %79 = add nuw nsw i64 %60, 8
  %80 = bitcast float* %75 to <4 x float>*
  %81 = load <4 x float>, <4 x float>* %80, align 4, !tbaa !2
  %82 = fmul <4 x float> %81, %7
  %83 = fadd <4 x float> %78, %82
  %84 = bitcast float* %76 to <4 x float>*
  store <4 x float> %83, <4 x float>* %84, align 4, !tbaa !2
  %85 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 %79
  %86 = or i64 %79, 1
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %86
  %88 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %86
  %89 = bitcast float* %85 to <4 x float>*
  %90 = load <4 x float>, <4 x float>* %89, align 16, !tbaa !2
  %91 = add nuw nsw i64 %60, 12
  %92 = bitcast float* %87 to <4 x float>*
  %93 = load <4 x float>, <4 x float>* %92, align 4, !tbaa !2
  %94 = fmul <4 x float> %93, %7
  %95 = fadd <4 x float> %90, %94
  %96 = bitcast float* %88 to <4 x float>*
  store <4 x float> %95, <4 x float>* %96, align 4, !tbaa !2
  %97 = icmp ult i64 %60, 240
  br i1 %97, label %59, label %43
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s141() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %52, %0
  %4 = phi i32 [ 0, %0 ], [ %54, %52 ]
  br label %56

5:                                                ; preds = %52
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.174, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 65536
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %80, %76
  %51 = icmp eq i64 %58, 256
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %54 = add nuw nsw i32 %4, 1
  %55 = icmp eq i32 %54, 39000
  br i1 %55, label %5, label %3

56:                                               ; preds = %3, %50
  %57 = phi i64 [ 0, %3 ], [ %58, %50 ]
  %58 = add nuw nsw i64 %57, 1
  %59 = mul nuw nsw i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = lshr i32 %60, 1
  %62 = trunc i64 %57 to i32
  %63 = add nuw nsw i32 %61, %62
  %64 = and i64 %57, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %57, i64 %57
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = zext i32 %63 to i64
  %70 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fadd float %68, %71
  store float %72, float* %70, align 4, !tbaa !2
  %73 = add nuw nsw i64 %57, 1
  %74 = trunc i64 %73 to i32
  %75 = add nuw nsw i32 %63, %74
  br label %76

76:                                               ; preds = %66, %56
  %77 = phi i64 [ %73, %66 ], [ %57, %56 ]
  %78 = phi i32 [ %75, %66 ], [ %63, %56 ]
  %79 = icmp eq i64 %57, 255
  br i1 %79, label %50, label %80

80:                                               ; preds = %76, %80
  %81 = phi i64 [ %98, %80 ], [ %77, %76 ]
  %82 = phi i32 [ %100, %80 ], [ %78, %76 ]
  %83 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %81, i64 %57
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = zext i32 %82 to i64
  %86 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %85
  %87 = load float, float* %86, align 4, !tbaa !2
  %88 = fadd float %84, %87
  store float %88, float* %86, align 4, !tbaa !2
  %89 = add nuw nsw i64 %81, 1
  %90 = trunc i64 %89 to i32
  %91 = add nuw nsw i32 %82, %90
  %92 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %89, i64 %57
  %93 = load float, float* %92, align 4, !tbaa !2
  %94 = zext i32 %91 to i64
  %95 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %94
  %96 = load float, float* %95, align 4, !tbaa !2
  %97 = fadd float %93, %96
  store float %97, float* %95, align 4, !tbaa !2
  %98 = add nuw nsw i64 %81, 2
  %99 = trunc i64 %98 to i32
  %100 = add nuw nsw i32 %91, %99
  %101 = icmp eq i64 %98, 256
  br i1 %101, label %50, label %80
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s141p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %52, %0
  %4 = phi i32 [ 0, %0 ], [ %54, %52 ]
  br label %56

5:                                                ; preds = %52
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.175, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 65536
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %80, %76
  %51 = icmp eq i64 %58, 256
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %54 = add nuw nsw i32 %4, 1
  %55 = icmp eq i32 %54, 39000
  br i1 %55, label %5, label %3

56:                                               ; preds = %3, %50
  %57 = phi i64 [ 0, %3 ], [ %58, %50 ]
  %58 = add nuw nsw i64 %57, 1
  %59 = mul nuw nsw i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = lshr i32 %60, 1
  %62 = trunc i64 %57 to i32
  %63 = add nuw nsw i32 %61, %62
  %64 = and i64 %57, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %57, i64 %57
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = zext i32 %63 to i64
  %70 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fadd float %68, %71
  store float %72, float* %70, align 4, !tbaa !2
  %73 = add nuw nsw i64 %57, 1
  %74 = trunc i64 %73 to i32
  %75 = add nuw nsw i32 %63, %74
  br label %76

76:                                               ; preds = %66, %56
  %77 = phi i64 [ %73, %66 ], [ %57, %56 ]
  %78 = phi i32 [ %75, %66 ], [ %63, %56 ]
  %79 = icmp eq i64 %57, 255
  br i1 %79, label %50, label %80

80:                                               ; preds = %76, %80
  %81 = phi i64 [ %98, %80 ], [ %77, %76 ]
  %82 = phi i32 [ %100, %80 ], [ %78, %76 ]
  %83 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %81, i64 %57
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = zext i32 %82 to i64
  %86 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %85
  %87 = load float, float* %86, align 4, !tbaa !2
  %88 = fadd float %84, %87
  store float %88, float* %86, align 4, !tbaa !2
  %89 = add nuw nsw i64 %81, 1
  %90 = trunc i64 %89 to i32
  %91 = add nuw nsw i32 %82, %90
  %92 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %89, i64 %57
  %93 = load float, float* %92, align 4, !tbaa !2
  %94 = zext i32 %91 to i64
  %95 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %94
  %96 = load float, float* %95, align 4, !tbaa !2
  %97 = fadd float %93, %96
  store float %97, float* %95, align 4, !tbaa !2
  %98 = add nuw nsw i64 %81, 2
  %99 = trunc i64 %98 to i32
  %100 = add nuw nsw i32 %91, %99
  %101 = icmp eq i64 %98, 256
  br i1 %101, label %50, label %80
}

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local i32 @s151s(float* nocapture %0, float* nocapture readonly %1, i32 %2) local_unnamed_addr #10 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr float, float* %0, i64 31999
  %6 = getelementptr float, float* %0, i64 %4
  %7 = add nsw i64 %4, 31999
  %8 = getelementptr float, float* %0, i64 %7
  %9 = getelementptr float, float* %1, i64 31999
  %10 = icmp ugt float* %8, %0
  %11 = icmp ult float* %6, %5
  %12 = and i1 %10, %11
  %13 = icmp ugt float* %9, %0
  %14 = icmp ugt float* %5, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %17, label %27

17:                                               ; preds = %27, %3
  %18 = phi i64 [ 0, %3 ], [ 31992, %27 ]
  %19 = add nsw i64 %18, %4
  %20 = getelementptr inbounds float, float* %0, i64 %19
  %21 = load float, float* %20, align 4, !tbaa !2
  %22 = getelementptr inbounds float, float* %1, i64 %18
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %21, %23
  %25 = getelementptr inbounds float, float* %0, i64 %18
  store float %24, float* %25, align 4, !tbaa !2
  %26 = or i64 %18, 1
  br label %51

27:                                               ; preds = %3, %70
  %28 = phi i64 [ %90, %70 ], [ 0, %3 ]
  %29 = add nsw i64 %28, %4
  %30 = getelementptr inbounds float, float* %0, i64 %29
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !2, !alias.scope !343
  %33 = getelementptr inbounds float, float* %30, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !2, !alias.scope !343
  %36 = getelementptr inbounds float, float* %1, i64 %28
  %37 = bitcast float* %36 to <4 x float>*
  %38 = load <4 x float>, <4 x float>* %37, align 4, !tbaa !2, !alias.scope !346
  %39 = getelementptr inbounds float, float* %36, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  %41 = load <4 x float>, <4 x float>* %40, align 4, !tbaa !2, !alias.scope !346
  %42 = fadd <4 x float> %32, %38
  %43 = fadd <4 x float> %35, %41
  %44 = getelementptr inbounds float, float* %0, i64 %28
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> %42, <4 x float>* %45, align 4, !tbaa !2, !alias.scope !348, !noalias !350
  %46 = getelementptr inbounds float, float* %44, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> %43, <4 x float>* %47, align 4, !tbaa !2, !alias.scope !348, !noalias !350
  %48 = or i64 %28, 8
  %49 = icmp eq i64 %48, 31992
  br i1 %49, label %17, label %70, !llvm.loop !351

50:                                               ; preds = %51
  ret i32 0

51:                                               ; preds = %51, %17
  %52 = phi i64 [ %26, %17 ], [ %68, %51 ]
  %53 = add nsw i64 %52, %4
  %54 = getelementptr inbounds float, float* %0, i64 %53
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = getelementptr inbounds float, float* %1, i64 %52
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fadd float %55, %57
  %59 = getelementptr inbounds float, float* %0, i64 %52
  store float %58, float* %59, align 4, !tbaa !2
  %60 = add nuw nsw i64 %52, 1
  %61 = add nsw i64 %60, %4
  %62 = getelementptr inbounds float, float* %0, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = getelementptr inbounds float, float* %1, i64 %60
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %63, %65
  %67 = getelementptr inbounds float, float* %0, i64 %60
  store float %66, float* %67, align 4, !tbaa !2
  %68 = add nuw nsw i64 %52, 2
  %69 = icmp eq i64 %68, 31999
  br i1 %69, label %50, label %51, !llvm.loop !352

70:                                               ; preds = %27
  %71 = add nsw i64 %48, %4
  %72 = getelementptr inbounds float, float* %0, i64 %71
  %73 = bitcast float* %72 to <4 x float>*
  %74 = load <4 x float>, <4 x float>* %73, align 4, !tbaa !2, !alias.scope !343
  %75 = getelementptr inbounds float, float* %72, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  %77 = load <4 x float>, <4 x float>* %76, align 4, !tbaa !2, !alias.scope !343
  %78 = getelementptr inbounds float, float* %1, i64 %48
  %79 = bitcast float* %78 to <4 x float>*
  %80 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !2, !alias.scope !346
  %81 = getelementptr inbounds float, float* %78, i64 4
  %82 = bitcast float* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 4, !tbaa !2, !alias.scope !346
  %84 = fadd <4 x float> %74, %80
  %85 = fadd <4 x float> %77, %83
  %86 = getelementptr inbounds float, float* %0, i64 %48
  %87 = bitcast float* %86 to <4 x float>*
  store <4 x float> %84, <4 x float>* %87, align 4, !tbaa !2, !alias.scope !348, !noalias !350
  %88 = getelementptr inbounds float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> %85, <4 x float>* %89, align 4, !tbaa !2, !alias.scope !348, !noalias !350
  %90 = add nuw nsw i64 %28, 16
  br label %27
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s151() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %73
  %4 = phi i32 [ 0, %0 ], [ %96, %73 ]
  br label %5

5:                                                ; preds = %98, %3
  %6 = phi i64 [ 0, %3 ], [ %118, %98 ]
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 4, !tbaa !2
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4, !tbaa !2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fadd <4 x float> %10, %16
  %21 = fadd <4 x float> %13, %19
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !2
  %26 = or i64 %6, 8
  %27 = icmp eq i64 %26, 31992
  br i1 %27, label %73, label %98, !llvm.loop !353

28:                                               ; preds = %73
  %29 = tail call i64 @clock() #16
  %30 = sub nsw i64 %29, %2
  %31 = sitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.176, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %68, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %67, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 16, !tbaa !2
  %39 = fadd float %36, %38
  %40 = or i64 %35, 1
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = fadd float %39, %42
  %44 = or i64 %35, 2
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 8, !tbaa !2
  %47 = fadd float %43, %46
  %48 = or i64 %35, 3
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = fadd float %47, %50
  %52 = or i64 %35, 4
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 16, !tbaa !2
  %55 = fadd float %51, %54
  %56 = or i64 %35, 5
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %55, %58
  %60 = or i64 %35, 6
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %35, 7
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = add nuw nsw i64 %35, 8
  %69 = icmp eq i64 %68, 32000
  br i1 %69, label %70, label %34

70:                                               ; preds = %34
  %71 = fpext float %67 to double
  %72 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %71) #16
  ret i32 0

73:                                               ; preds = %5
  %74 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !2
  %75 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31992), align 16, !tbaa !2
  %76 = fadd float %74, %75
  store float %76, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31992), align 16, !tbaa !2
  %77 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !2
  %78 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !2
  %79 = fadd float %77, %78
  store float %79, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !2
  %80 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !2
  %81 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !2
  %82 = fadd float %80, %81
  store float %82, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !2
  %83 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !2
  %85 = fadd float %83, %84
  store float %85, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !2
  %86 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %88 = fadd float %86, %87
  store float %88, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %90 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %91 = fadd float %89, %90
  store float %91, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %92 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %94 = fadd float %92, %93
  store float %94, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %95 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %96 = add nuw nsw i32 %4, 1
  %97 = icmp eq i32 %96, 250000
  br i1 %97, label %28, label %3

98:                                               ; preds = %5
  %99 = or i64 %6, 9
  %100 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %99
  %101 = bitcast float* %100 to <4 x float>*
  %102 = load <4 x float>, <4 x float>* %101, align 4, !tbaa !2
  %103 = getelementptr inbounds float, float* %100, i64 4
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 4, !tbaa !2
  %106 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %107 = bitcast float* %106 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 16, !tbaa !2
  %109 = getelementptr inbounds float, float* %106, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %111 = load <4 x float>, <4 x float>* %110, align 16, !tbaa !2
  %112 = fadd <4 x float> %102, %108
  %113 = fadd <4 x float> %105, %111
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %112, <4 x float>* %115, align 16, !tbaa !2
  %116 = getelementptr inbounds float, float* %114, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  store <4 x float> %113, <4 x float>* %117, align 16, !tbaa !2
  %118 = add nuw nsw i64 %6, 16
  br label %5
}

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local i32 @s152s(float* nocapture %0, float* nocapture readonly %1, float* nocapture readonly %2, i32 %3) local_unnamed_addr #10 {
  %5 = sext i32 %3 to i64
  %6 = getelementptr inbounds float, float* %1, i64 %5
  %7 = load float, float* %6, align 4, !tbaa !2
  %8 = getelementptr inbounds float, float* %2, i64 %5
  %9 = load float, float* %8, align 4, !tbaa !2
  %10 = fmul float %7, %9
  %11 = getelementptr inbounds float, float* %0, i64 %5
  %12 = load float, float* %11, align 4, !tbaa !2
  %13 = fadd float %12, %10
  store float %13, float* %11, align 4, !tbaa !2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s152() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %91
  %4 = phi i32 [ 0, %0 ], [ %93, %91 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %44, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fmul <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> %13, <4 x float>* %15, align 16, !tbaa !2
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fmul <4 x float> %13, %18
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !2
  %23 = fadd <4 x float> %22, %19
  %24 = bitcast float* %20 to <4 x float>*
  store <4 x float> %23, <4 x float>* %24, align 16, !tbaa !2
  %25 = or i64 %6, 4
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %25
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 16, !tbaa !2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %25
  %30 = bitcast float* %29 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 16, !tbaa !2
  %32 = fmul <4 x float> %28, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 16, !tbaa !2
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %25
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !2
  %38 = fmul <4 x float> %32, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %40 = bitcast float* %39 to <4 x float>*
  %41 = load <4 x float>, <4 x float>* %40, align 16, !tbaa !2
  %42 = fadd <4 x float> %41, %38
  %43 = bitcast float* %39 to <4 x float>*
  store <4 x float> %42, <4 x float>* %43, align 16, !tbaa !2
  %44 = add nuw nsw i64 %6, 8
  %45 = icmp eq i64 %44, 32000
  br i1 %45, label %91, label %5, !llvm.loop !354

46:                                               ; preds = %91
  %47 = tail call i64 @clock() #16
  %48 = sub nsw i64 %47, %2
  %49 = sitofp i64 %48 to double
  %50 = fdiv double %49, 1.000000e+06
  %51 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.177, i64 0, i64 0), double %50)
  br label %52

52:                                               ; preds = %52, %46
  %53 = phi i64 [ 0, %46 ], [ %86, %52 ]
  %54 = phi float [ 0.000000e+00, %46 ], [ %85, %52 ]
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %56 = load float, float* %55, align 16, !tbaa !2
  %57 = fadd float %54, %56
  %58 = or i64 %53, 1
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = fadd float %57, %60
  %62 = or i64 %53, 2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 8, !tbaa !2
  %65 = fadd float %61, %64
  %66 = or i64 %53, 3
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %53, 4
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 16, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %53, 5
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %53, 6
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 8, !tbaa !2
  %81 = fadd float %77, %80
  %82 = or i64 %53, 7
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = fadd float %81, %84
  %86 = add nuw nsw i64 %53, 8
  %87 = icmp eq i64 %86, 32000
  br i1 %87, label %88, label %52

88:                                               ; preds = %52
  %89 = fpext float %85 to double
  %90 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %89) #16
  ret i32 0

91:                                               ; preds = %5
  %92 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %93 = add nuw nsw i32 %4, 1
  %94 = icmp eq i32 %93, 50000
  br i1 %94, label %46, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s161() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.178, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %84
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 25000
  br i1 %58, label %5, label %3

59:                                               ; preds = %84, %3
  %60 = phi i64 [ 0, %3 ], [ %85, %84 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fcmp olt float %62, 0.000000e+00
  br i1 %63, label %75, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %60
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = fmul float %68, %70
  %72 = fadd float %66, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  store float %72, float* %73, align 4, !tbaa !2
  %74 = add nuw nsw i64 %60, 1
  br label %84

75:                                               ; preds = %59
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fmul float %79, %79
  %81 = fadd float %77, %80
  %82 = add nuw nsw i64 %60, 1
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %82
  store float %81, float* %83, align 4, !tbaa !2
  br label %84

84:                                               ; preds = %64, %75
  %85 = phi i64 [ %74, %64 ], [ %82, %75 ]
  %86 = icmp eq i64 %85, 31999
  br i1 %86, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1161() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.179, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %76
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 50000
  br i1 %58, label %5, label %3

59:                                               ; preds = %76, %3
  %60 = phi i64 [ 0, %3 ], [ %82, %76 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fcmp olt float %62, 0.000000e+00
  br i1 %63, label %70, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %60
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fmul float %66, %68
  br label %76

70:                                               ; preds = %59
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fmul float %74, %74
  br label %76

76:                                               ; preds = %64, %70
  %77 = phi float [ %69, %64 ], [ %75, %70 ]
  %78 = phi float [ %62, %64 ], [ %72, %70 ]
  %79 = phi [32000 x float]* [ @a, %64 ], [ @b, %70 ]
  %80 = fadd float %78, %77
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* %79, i64 0, i64 %60
  store float %80, float* %81, align 4, !tbaa !2
  %82 = add nuw nsw i64 %60, 1
  %83 = icmp eq i64 %82, 31999
  br i1 %83, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s162(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = icmp sgt i32 %0, 0
  br i1 %4, label %5, label %133

5:                                                ; preds = %1
  %6 = zext i32 %0 to i64
  %7 = getelementptr [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = add nuw nsw i64 %6, 31999
  %9 = getelementptr [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %10 = icmp ugt float* %9, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0)
  %11 = icmp ult float* %7, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999)
  %12 = and i1 %10, %11
  br label %13

13:                                               ; preds = %5, %84
  %14 = phi i32 [ %86, %84 ], [ 0, %5 ]
  br i1 %12, label %46, label %15

15:                                               ; preds = %13, %15
  %16 = phi i64 [ %44, %15 ], [ 0, %13 ]
  %17 = add nuw nsw i64 %16, %6
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !2, !alias.scope !355
  %21 = getelementptr inbounds float, float* %18, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !2, !alias.scope !355
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %16
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2, !alias.scope !358
  %27 = getelementptr inbounds float, float* %24, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !2, !alias.scope !358
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %16
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !2, !alias.scope !360
  %33 = getelementptr inbounds float, float* %30, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 16, !tbaa !2, !alias.scope !360
  %36 = fmul <4 x float> %26, %32
  %37 = fmul <4 x float> %29, %35
  %38 = fadd <4 x float> %20, %36
  %39 = fadd <4 x float> %23, %37
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %16
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %38, <4 x float>* %41, align 16, !tbaa !2, !alias.scope !362, !noalias !355
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %39, <4 x float>* %43, align 16, !tbaa !2, !alias.scope !362, !noalias !355
  %44 = add i64 %16, 8
  %45 = icmp eq i64 %44, 31992
  br i1 %45, label %46, label %15, !llvm.loop !364

46:                                               ; preds = %15, %13
  %47 = phi i64 [ 0, %13 ], [ 31992, %15 ]
  %48 = add nuw nsw i64 %47, %6
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %52 = load float, float* %51, align 16, !tbaa !2
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %54 = load float, float* %53, align 16, !tbaa !2
  %55 = fmul float %52, %54
  %56 = fadd float %50, %55
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  store float %56, float* %57, align 16, !tbaa !2
  %58 = or i64 %47, 1
  br label %59

59:                                               ; preds = %59, %46
  %60 = phi i64 [ %58, %46 ], [ %82, %59 ]
  %61 = add nuw nsw i64 %60, %6
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fmul float %65, %67
  %69 = fadd float %63, %68
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  store float %69, float* %70, align 4, !tbaa !2
  %71 = add nuw nsw i64 %60, 1
  %72 = add nuw nsw i64 %71, %6
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %71
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %71
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fmul float %76, %78
  %80 = fadd float %74, %79
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  store float %80, float* %81, align 4, !tbaa !2
  %82 = add nuw nsw i64 %60, 2
  %83 = icmp eq i64 %82, 31999
  br i1 %83, label %84, label %59, !llvm.loop !365

84:                                               ; preds = %59
  %85 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %86 = add nuw nsw i32 %14, 1
  %87 = icmp eq i32 %86, 50000
  br i1 %87, label %88, label %13

88:                                               ; preds = %133, %84
  %89 = tail call i64 @clock() #16
  %90 = sub nsw i64 %89, %3
  %91 = sitofp i64 %90 to double
  %92 = fdiv double %91, 1.000000e+06
  %93 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.180, i64 0, i64 0), double %92)
  br label %94

94:                                               ; preds = %94, %88
  %95 = phi i64 [ 0, %88 ], [ %128, %94 ]
  %96 = phi float [ 0.000000e+00, %88 ], [ %127, %94 ]
  %97 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %95
  %98 = load float, float* %97, align 16, !tbaa !2
  %99 = fadd float %96, %98
  %100 = or i64 %95, 1
  %101 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %100
  %102 = load float, float* %101, align 4, !tbaa !2
  %103 = fadd float %99, %102
  %104 = or i64 %95, 2
  %105 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %104
  %106 = load float, float* %105, align 8, !tbaa !2
  %107 = fadd float %103, %106
  %108 = or i64 %95, 3
  %109 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %108
  %110 = load float, float* %109, align 4, !tbaa !2
  %111 = fadd float %107, %110
  %112 = or i64 %95, 4
  %113 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %112
  %114 = load float, float* %113, align 16, !tbaa !2
  %115 = fadd float %111, %114
  %116 = or i64 %95, 5
  %117 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %116
  %118 = load float, float* %117, align 4, !tbaa !2
  %119 = fadd float %115, %118
  %120 = or i64 %95, 6
  %121 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %120
  %122 = load float, float* %121, align 8, !tbaa !2
  %123 = fadd float %119, %122
  %124 = or i64 %95, 7
  %125 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %124
  %126 = load float, float* %125, align 4, !tbaa !2
  %127 = fadd float %123, %126
  %128 = add nuw nsw i64 %95, 8
  %129 = icmp eq i64 %128, 32000
  br i1 %129, label %130, label %94

130:                                              ; preds = %94
  %131 = fpext float %127 to double
  %132 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %131) #16
  ret i32 0

133:                                              ; preds = %1, %133
  %134 = phi i32 [ %136, %133 ], [ 0, %1 ]
  %135 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %136 = add nuw nsw i32 %134, 1
  %137 = icmp eq i32 %136, 50000
  br i1 %137, label %88, label %133
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s171(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = sext i32 %0 to i64
  %5 = icmp eq i32 %0, 1
  br label %6

6:                                                ; preds = %1, %92
  %7 = phi i32 [ 0, %1 ], [ %94, %92 ]
  br i1 %5, label %8, label %96

8:                                                ; preds = %6, %8
  %9 = phi i64 [ %45, %8 ], [ 0, %6 ]
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds float, float* %10, i64 4
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = mul nsw i64 %9, %4
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %16
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = getelementptr inbounds float, float* %17, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !2
  %23 = fadd <4 x float> %12, %19
  %24 = fadd <4 x float> %15, %22
  %25 = bitcast float* %17 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 16, !tbaa !2
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 16, !tbaa !2
  %27 = or i64 %9, 8
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %29 = bitcast float* %28 to <4 x float>*
  %30 = load <4 x float>, <4 x float>* %29, align 16, !tbaa !2
  %31 = getelementptr inbounds float, float* %28, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 16, !tbaa !2
  %34 = mul nsw i64 %27, %4
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !2
  %38 = getelementptr inbounds float, float* %35, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 16, !tbaa !2
  %41 = fadd <4 x float> %30, %37
  %42 = fadd <4 x float> %33, %40
  %43 = bitcast float* %35 to <4 x float>*
  store <4 x float> %41, <4 x float>* %43, align 16, !tbaa !2
  %44 = bitcast float* %38 to <4 x float>*
  store <4 x float> %42, <4 x float>* %44, align 16, !tbaa !2
  %45 = add nuw nsw i64 %9, 16
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %92, label %8, !llvm.loop !366

47:                                               ; preds = %92
  %48 = tail call i64 @clock() #16
  %49 = sub nsw i64 %48, %3
  %50 = sitofp i64 %49 to double
  %51 = fdiv double %50, 1.000000e+06
  %52 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.181, i64 0, i64 0), double %51)
  br label %53

53:                                               ; preds = %53, %47
  %54 = phi i64 [ 0, %47 ], [ %87, %53 ]
  %55 = phi float [ 0.000000e+00, %47 ], [ %86, %53 ]
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %57 = load float, float* %56, align 16, !tbaa !2
  %58 = fadd float %55, %57
  %59 = or i64 %54, 1
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = fadd float %58, %61
  %63 = or i64 %54, 2
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = load float, float* %64, align 8, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %54, 3
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %54, 4
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 16, !tbaa !2
  %74 = fadd float %70, %73
  %75 = or i64 %54, 5
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fadd float %74, %77
  %79 = or i64 %54, 6
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 8, !tbaa !2
  %82 = fadd float %78, %81
  %83 = or i64 %54, 7
  %84 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %83
  %85 = load float, float* %84, align 4, !tbaa !2
  %86 = fadd float %82, %85
  %87 = add nuw nsw i64 %54, 8
  %88 = icmp eq i64 %87, 32000
  br i1 %88, label %89, label %53

89:                                               ; preds = %53
  %90 = fpext float %86 to double
  %91 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %90) #16
  ret i32 0

92:                                               ; preds = %96, %8
  %93 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %94 = add nuw nsw i32 %7, 1
  %95 = icmp eq i32 %94, 50000
  br i1 %95, label %47, label %6

96:                                               ; preds = %6, %96
  %97 = phi i64 [ %111, %96 ], [ 0, %6 ]
  %98 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %97
  %99 = load float, float* %98, align 8, !tbaa !2
  %100 = mul nsw i64 %97, %4
  %101 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %100
  %102 = load float, float* %101, align 8, !tbaa !2
  %103 = fadd float %99, %102
  store float %103, float* %101, align 8, !tbaa !2
  %104 = or i64 %97, 1
  %105 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %104
  %106 = load float, float* %105, align 4, !tbaa !2
  %107 = mul nsw i64 %104, %4
  %108 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %107
  %109 = load float, float* %108, align 4, !tbaa !2
  %110 = fadd float %106, %109
  store float %110, float* %108, align 4, !tbaa !2
  %111 = add nuw nsw i64 %97, 2
  %112 = icmp eq i64 %111, 32000
  br i1 %112, label %92, label %96, !llvm.loop !367
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s172(i32 %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0))
  %4 = tail call i64 @clock() #16
  %5 = icmp slt i32 %0, 32001
  br i1 %5, label %6, label %70

6:                                                ; preds = %2
  %7 = add i32 %0, -1
  %8 = sext i32 %7 to i64
  %9 = sext i32 %1 to i64
  br label %10

10:                                               ; preds = %21, %6
  %11 = phi i32 [ %23, %21 ], [ 0, %6 ]
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi i64 [ %8, %10 ], [ %19, %12 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !2
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  store float %18, float* %16, align 4, !tbaa !2
  %19 = add i64 %13, %9
  %20 = icmp slt i64 %19, 32000
  br i1 %20, label %12, label %21

21:                                               ; preds = %12
  %22 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %23 = add nuw nsw i32 %11, 1
  %24 = icmp eq i32 %23, 50000
  br i1 %24, label %25, label %10

25:                                               ; preds = %70, %21
  %26 = tail call i64 @clock() #16
  %27 = sub nsw i64 %26, %4
  %28 = sitofp i64 %27 to double
  %29 = fdiv double %28, 1.000000e+06
  %30 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.182, i64 0, i64 0), double %29)
  br label %31

31:                                               ; preds = %31, %25
  %32 = phi i64 [ 0, %25 ], [ %65, %31 ]
  %33 = phi float [ 0.000000e+00, %25 ], [ %64, %31 ]
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %35 = load float, float* %34, align 16, !tbaa !2
  %36 = fadd float %33, %35
  %37 = or i64 %32, 1
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %32, 2
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 8, !tbaa !2
  %44 = fadd float %40, %43
  %45 = or i64 %32, 3
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %44, %47
  %49 = or i64 %32, 4
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %51 = load float, float* %50, align 16, !tbaa !2
  %52 = fadd float %48, %51
  %53 = or i64 %32, 5
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fadd float %52, %55
  %57 = or i64 %32, 6
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = fadd float %56, %59
  %61 = or i64 %32, 7
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fadd float %60, %63
  %65 = add nuw nsw i64 %32, 8
  %66 = icmp eq i64 %65, 32000
  br i1 %66, label %67, label %31

67:                                               ; preds = %31
  %68 = fpext float %64 to double
  %69 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %68) #16
  ret i32 0

70:                                               ; preds = %2, %70
  %71 = phi i32 [ %73, %70 ], [ 0, %2 ]
  %72 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %73 = add nuw nsw i32 %71, 1
  %74 = icmp eq i32 %73, 50000
  br i1 %74, label %25, label %70
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s172p(i32 %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0))
  %4 = tail call i64 @clock() #16
  %5 = icmp slt i32 %0, 32001
  br i1 %5, label %6, label %70

6:                                                ; preds = %2
  %7 = add i32 %0, -1
  %8 = sext i32 %7 to i64
  %9 = sext i32 %1 to i64
  br label %10

10:                                               ; preds = %21, %6
  %11 = phi i32 [ %23, %21 ], [ 0, %6 ]
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi i64 [ %8, %10 ], [ %19, %12 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !2
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  store float %18, float* %16, align 4, !tbaa !2
  %19 = add i64 %13, %9
  %20 = icmp slt i64 %19, 32000
  br i1 %20, label %12, label %21

21:                                               ; preds = %12
  %22 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %23 = add nuw nsw i32 %11, 1
  %24 = icmp eq i32 %23, 50000
  br i1 %24, label %25, label %10

25:                                               ; preds = %70, %21
  %26 = tail call i64 @clock() #16
  %27 = sub nsw i64 %26, %4
  %28 = sitofp i64 %27 to double
  %29 = fdiv double %28, 1.000000e+06
  %30 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.183, i64 0, i64 0), double %29)
  br label %31

31:                                               ; preds = %31, %25
  %32 = phi i64 [ 0, %25 ], [ %65, %31 ]
  %33 = phi float [ 0.000000e+00, %25 ], [ %64, %31 ]
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %35 = load float, float* %34, align 16, !tbaa !2
  %36 = fadd float %33, %35
  %37 = or i64 %32, 1
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %32, 2
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 8, !tbaa !2
  %44 = fadd float %40, %43
  %45 = or i64 %32, 3
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %44, %47
  %49 = or i64 %32, 4
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %51 = load float, float* %50, align 16, !tbaa !2
  %52 = fadd float %48, %51
  %53 = or i64 %32, 5
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fadd float %52, %55
  %57 = or i64 %32, 6
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = fadd float %56, %59
  %61 = or i64 %32, 7
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fadd float %60, %63
  %65 = add nuw nsw i64 %32, 8
  %66 = icmp eq i64 %65, 32000
  br i1 %66, label %67, label %31

67:                                               ; preds = %31
  %68 = fpext float %64 to double
  %69 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %68) #16
  ret i32 0

70:                                               ; preds = %2, %70
  %71 = phi i32 [ %73, %70 ], [ 0, %2 ]
  %72 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %73 = add nuw nsw i32 %71, 1
  %74 = icmp eq i32 %73, 50000
  br i1 %74, label %25, label %70
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s173() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %97
  %4 = phi i32 [ 0, %0 ], [ %99, %97 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %50, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fadd <4 x float> %9, %12
  %14 = add nuw nsw i64 %6, 16000
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %13, <4 x float>* %16, align 16, !tbaa !2
  %17 = or i64 %6, 4
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 16, !tbaa !2
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %17
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !2
  %24 = fadd <4 x float> %20, %23
  %25 = add nuw nsw i64 %6, 16004
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %24, <4 x float>* %27, align 16, !tbaa !2
  %28 = or i64 %6, 8
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = bitcast float* %29 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 16, !tbaa !2
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !2
  %35 = fadd <4 x float> %31, %34
  %36 = add nuw nsw i64 %6, 16008
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = bitcast float* %37 to <4 x float>*
  store <4 x float> %35, <4 x float>* %38, align 16, !tbaa !2
  %39 = or i64 %6, 12
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16, !tbaa !2
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %39
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 16, !tbaa !2
  %46 = fadd <4 x float> %42, %45
  %47 = add nuw nsw i64 %6, 16012
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = bitcast float* %48 to <4 x float>*
  store <4 x float> %46, <4 x float>* %49, align 16, !tbaa !2
  %50 = add nuw nsw i64 %6, 16
  %51 = icmp eq i64 %50, 16000
  br i1 %51, label %97, label %5, !llvm.loop !368

52:                                               ; preds = %97
  %53 = tail call i64 @clock() #16
  %54 = sub nsw i64 %53, %2
  %55 = sitofp i64 %54 to double
  %56 = fdiv double %55, 1.000000e+06
  %57 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.184, i64 0, i64 0), double %56)
  br label %58

58:                                               ; preds = %58, %52
  %59 = phi i64 [ 0, %52 ], [ %92, %58 ]
  %60 = phi float [ 0.000000e+00, %52 ], [ %91, %58 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %62 = load float, float* %61, align 16, !tbaa !2
  %63 = fadd float %60, %62
  %64 = or i64 %59, 1
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = or i64 %59, 2
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  %70 = load float, float* %69, align 8, !tbaa !2
  %71 = fadd float %67, %70
  %72 = or i64 %59, 3
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fadd float %71, %74
  %76 = or i64 %59, 4
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %76
  %78 = load float, float* %77, align 16, !tbaa !2
  %79 = fadd float %75, %78
  %80 = or i64 %59, 5
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = fadd float %79, %82
  %84 = or i64 %59, 6
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %86 = load float, float* %85, align 8, !tbaa !2
  %87 = fadd float %83, %86
  %88 = or i64 %59, 7
  %89 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %88
  %90 = load float, float* %89, align 4, !tbaa !2
  %91 = fadd float %87, %90
  %92 = add nuw nsw i64 %59, 8
  %93 = icmp eq i64 %92, 32000
  br i1 %93, label %94, label %58

94:                                               ; preds = %58
  %95 = fpext float %91 to double
  %96 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %95) #16
  ret i32 0

97:                                               ; preds = %5
  %98 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %99 = add nuw nsw i32 %4, 1
  %100 = icmp eq i32 %99, 500000
  br i1 %100, label %52, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s174(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = icmp sgt i32 %0, 0
  br i1 %4, label %5, label %107

5:                                                ; preds = %1
  %6 = zext i32 %0 to i64
  %7 = zext i32 %0 to i64
  %8 = and i64 %7, 4294967288
  %9 = add nsw i64 %8, -8
  %10 = lshr exact i64 %9, 3
  %11 = add nuw nsw i64 %10, 1
  %12 = icmp ult i32 %0, 8
  %13 = and i64 %7, 4294967288
  %14 = and i64 %11, 1
  %15 = icmp eq i64 %9, 0
  %16 = sub nuw nsw i64 %11, %14
  %17 = icmp eq i64 %14, 0
  %18 = icmp eq i64 %13, %7
  br label %19

19:                                               ; preds = %103, %5
  %20 = phi i32 [ %105, %103 ], [ 0, %5 ]
  br i1 %12, label %90, label %21

21:                                               ; preds = %19
  br i1 %15, label %67, label %22

22:                                               ; preds = %21, %22
  %23 = phi i64 [ %64, %22 ], [ 0, %21 ]
  %24 = phi i64 [ %65, %22 ], [ %16, %21 ]
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %26 = bitcast float* %25 to <4 x float>*
  %27 = load <4 x float>, <4 x float>* %26, align 16, !tbaa !2
  %28 = getelementptr inbounds float, float* %25, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  %30 = load <4 x float>, <4 x float>* %29, align 16, !tbaa !2
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %32 = bitcast float* %31 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 16, !tbaa !2
  %34 = getelementptr inbounds float, float* %31, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 16, !tbaa !2
  %37 = fadd <4 x float> %27, %33
  %38 = fadd <4 x float> %30, %36
  %39 = add nuw nsw i64 %23, %6
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %37, <4 x float>* %41, align 4, !tbaa !2
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %38, <4 x float>* %43, align 4, !tbaa !2
  %44 = or i64 %23, 8
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = bitcast float* %45 to <4 x float>*
  %47 = load <4 x float>, <4 x float>* %46, align 16, !tbaa !2
  %48 = getelementptr inbounds float, float* %45, i64 4
  %49 = bitcast float* %48 to <4 x float>*
  %50 = load <4 x float>, <4 x float>* %49, align 16, !tbaa !2
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %44
  %52 = bitcast float* %51 to <4 x float>*
  %53 = load <4 x float>, <4 x float>* %52, align 16, !tbaa !2
  %54 = getelementptr inbounds float, float* %51, i64 4
  %55 = bitcast float* %54 to <4 x float>*
  %56 = load <4 x float>, <4 x float>* %55, align 16, !tbaa !2
  %57 = fadd <4 x float> %47, %53
  %58 = fadd <4 x float> %50, %56
  %59 = add nuw nsw i64 %44, %6
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = bitcast float* %60 to <4 x float>*
  store <4 x float> %57, <4 x float>* %61, align 4, !tbaa !2
  %62 = getelementptr inbounds float, float* %60, i64 4
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> %58, <4 x float>* %63, align 4, !tbaa !2
  %64 = add i64 %23, 16
  %65 = add i64 %24, -2
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %22, !llvm.loop !369

67:                                               ; preds = %22, %21
  %68 = phi i64 [ 0, %21 ], [ %64, %22 ]
  br i1 %17, label %89, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  %71 = bitcast float* %70 to <4 x float>*
  %72 = load <4 x float>, <4 x float>* %71, align 16, !tbaa !2
  %73 = getelementptr inbounds float, float* %70, i64 4
  %74 = bitcast float* %73 to <4 x float>*
  %75 = load <4 x float>, <4 x float>* %74, align 16, !tbaa !2
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %68
  %77 = bitcast float* %76 to <4 x float>*
  %78 = load <4 x float>, <4 x float>* %77, align 16, !tbaa !2
  %79 = getelementptr inbounds float, float* %76, i64 4
  %80 = bitcast float* %79 to <4 x float>*
  %81 = load <4 x float>, <4 x float>* %80, align 16, !tbaa !2
  %82 = fadd <4 x float> %72, %78
  %83 = fadd <4 x float> %75, %81
  %84 = add nuw nsw i64 %68, %6
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %86 = bitcast float* %85 to <4 x float>*
  store <4 x float> %82, <4 x float>* %86, align 4, !tbaa !2
  %87 = getelementptr inbounds float, float* %85, i64 4
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> %83, <4 x float>* %88, align 4, !tbaa !2
  br label %89

89:                                               ; preds = %67, %69
  br i1 %18, label %103, label %90

90:                                               ; preds = %89, %19
  %91 = phi i64 [ 0, %19 ], [ %13, %89 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %101, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %93
  %95 = load float, float* %94, align 4, !tbaa !2
  %96 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %93
  %97 = load float, float* %96, align 4, !tbaa !2
  %98 = fadd float %95, %97
  %99 = add nuw nsw i64 %93, %6
  %100 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %99
  store float %98, float* %100, align 4, !tbaa !2
  %101 = add nuw nsw i64 %93, 1
  %102 = icmp eq i64 %101, %7
  br i1 %102, label %103, label %92, !llvm.loop !370

103:                                              ; preds = %92, %89
  %104 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %105 = add nuw nsw i32 %20, 1
  %106 = icmp eq i32 %105, 500000
  br i1 %106, label %112, label %19

107:                                              ; preds = %1, %107
  %108 = phi i32 [ %110, %107 ], [ 0, %1 ]
  %109 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %110 = add nuw nsw i32 %108, 1
  %111 = icmp eq i32 %110, 500000
  br i1 %111, label %112, label %107

112:                                              ; preds = %107, %103
  %113 = tail call i64 @clock() #16
  %114 = sub nsw i64 %113, %3
  %115 = sitofp i64 %114 to double
  %116 = fdiv double %115, 1.000000e+06
  %117 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.185, i64 0, i64 0), double %116)
  br label %118

118:                                              ; preds = %118, %112
  %119 = phi i64 [ 0, %112 ], [ %152, %118 ]
  %120 = phi float [ 0.000000e+00, %112 ], [ %151, %118 ]
  %121 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %119
  %122 = load float, float* %121, align 16, !tbaa !2
  %123 = fadd float %120, %122
  %124 = or i64 %119, 1
  %125 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %124
  %126 = load float, float* %125, align 4, !tbaa !2
  %127 = fadd float %123, %126
  %128 = or i64 %119, 2
  %129 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %128
  %130 = load float, float* %129, align 8, !tbaa !2
  %131 = fadd float %127, %130
  %132 = or i64 %119, 3
  %133 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %132
  %134 = load float, float* %133, align 4, !tbaa !2
  %135 = fadd float %131, %134
  %136 = or i64 %119, 4
  %137 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %136
  %138 = load float, float* %137, align 16, !tbaa !2
  %139 = fadd float %135, %138
  %140 = or i64 %119, 5
  %141 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %140
  %142 = load float, float* %141, align 4, !tbaa !2
  %143 = fadd float %139, %142
  %144 = or i64 %119, 6
  %145 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %144
  %146 = load float, float* %145, align 8, !tbaa !2
  %147 = fadd float %143, %146
  %148 = or i64 %119, 7
  %149 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %148
  %150 = load float, float* %149, align 4, !tbaa !2
  %151 = fadd float %147, %150
  %152 = add nuw nsw i64 %119, 8
  %153 = icmp eq i64 %152, 32000
  br i1 %153, label %154, label %118

154:                                              ; preds = %118
  %155 = fpext float %151 to double
  %156 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %155) #16
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s175(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = sext i32 %0 to i64
  %5 = udiv i64 31998, %4
  %6 = add nuw nsw i64 %5, 1
  %7 = icmp eq i32 %0, 1
  %8 = and i64 %6, 65528
  %9 = mul nsw i64 %8, %4
  %10 = add nsw i64 %8, -8
  %11 = lshr exact i64 %10, 3
  %12 = add nuw nsw i64 %11, 1
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %10, 0
  %15 = sub nuw nsw i64 %12, %13
  %16 = icmp eq i64 %13, 0
  %17 = icmp eq i64 %6, %8
  br label %18

18:                                               ; preds = %139, %1
  %19 = phi i32 [ 0, %1 ], [ %141, %139 ]
  br i1 %7, label %20, label %92

20:                                               ; preds = %18
  br i1 %14, label %68, label %21

21:                                               ; preds = %20, %21
  %22 = phi i64 [ %65, %21 ], [ 0, %20 ]
  %23 = phi i64 [ %66, %21 ], [ %15, %20 ]
  %24 = mul i64 %22, %4
  %25 = add nsw i64 %24, %4
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !2
  %29 = getelementptr inbounds float, float* %26, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !2
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !2
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !2
  %38 = fadd <4 x float> %28, %34
  %39 = fadd <4 x float> %31, %37
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %38, <4 x float>* %41, align 16, !tbaa !2
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %39, <4 x float>* %43, align 16, !tbaa !2
  %44 = or i64 %22, 8
  %45 = mul i64 %44, %4
  %46 = add nsw i64 %45, %4
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %48 = bitcast float* %47 to <4 x float>*
  %49 = load <4 x float>, <4 x float>* %48, align 4, !tbaa !2
  %50 = getelementptr inbounds float, float* %47, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  %52 = load <4 x float>, <4 x float>* %51, align 4, !tbaa !2
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %45
  %54 = bitcast float* %53 to <4 x float>*
  %55 = load <4 x float>, <4 x float>* %54, align 16, !tbaa !2
  %56 = getelementptr inbounds float, float* %53, i64 4
  %57 = bitcast float* %56 to <4 x float>*
  %58 = load <4 x float>, <4 x float>* %57, align 16, !tbaa !2
  %59 = fadd <4 x float> %49, %55
  %60 = fadd <4 x float> %52, %58
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %45
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> %59, <4 x float>* %62, align 16, !tbaa !2
  %63 = getelementptr inbounds float, float* %61, i64 4
  %64 = bitcast float* %63 to <4 x float>*
  store <4 x float> %60, <4 x float>* %64, align 16, !tbaa !2
  %65 = add i64 %22, 16
  %66 = add i64 %23, -2
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %21, !llvm.loop !372

68:                                               ; preds = %21, %20
  %69 = phi i64 [ 0, %20 ], [ %65, %21 ]
  br i1 %16, label %91, label %70

70:                                               ; preds = %68
  %71 = mul i64 %69, %4
  %72 = add nsw i64 %71, %4
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %74 = bitcast float* %73 to <4 x float>*
  %75 = load <4 x float>, <4 x float>* %74, align 4, !tbaa !2
  %76 = getelementptr inbounds float, float* %73, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  %78 = load <4 x float>, <4 x float>* %77, align 4, !tbaa !2
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %71
  %80 = bitcast float* %79 to <4 x float>*
  %81 = load <4 x float>, <4 x float>* %80, align 16, !tbaa !2
  %82 = getelementptr inbounds float, float* %79, i64 4
  %83 = bitcast float* %82 to <4 x float>*
  %84 = load <4 x float>, <4 x float>* %83, align 16, !tbaa !2
  %85 = fadd <4 x float> %75, %81
  %86 = fadd <4 x float> %78, %84
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> %85, <4 x float>* %88, align 16, !tbaa !2
  %89 = getelementptr inbounds float, float* %87, i64 4
  %90 = bitcast float* %89 to <4 x float>*
  store <4 x float> %86, <4 x float>* %90, align 16, !tbaa !2
  br label %91

91:                                               ; preds = %68, %70
  br i1 %17, label %139, label %92

92:                                               ; preds = %18, %91
  %93 = phi i64 [ 0, %18 ], [ %9, %91 ]
  br label %143

94:                                               ; preds = %139
  %95 = tail call i64 @clock() #16
  %96 = sub nsw i64 %95, %3
  %97 = sitofp i64 %96 to double
  %98 = fdiv double %97, 1.000000e+06
  %99 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.186, i64 0, i64 0), double %98)
  br label %100

100:                                              ; preds = %100, %94
  %101 = phi i64 [ 0, %94 ], [ %134, %100 ]
  %102 = phi float [ 0.000000e+00, %94 ], [ %133, %100 ]
  %103 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %101
  %104 = load float, float* %103, align 16, !tbaa !2
  %105 = fadd float %102, %104
  %106 = or i64 %101, 1
  %107 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %106
  %108 = load float, float* %107, align 4, !tbaa !2
  %109 = fadd float %105, %108
  %110 = or i64 %101, 2
  %111 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %110
  %112 = load float, float* %111, align 8, !tbaa !2
  %113 = fadd float %109, %112
  %114 = or i64 %101, 3
  %115 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %114
  %116 = load float, float* %115, align 4, !tbaa !2
  %117 = fadd float %113, %116
  %118 = or i64 %101, 4
  %119 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %118
  %120 = load float, float* %119, align 16, !tbaa !2
  %121 = fadd float %117, %120
  %122 = or i64 %101, 5
  %123 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %122
  %124 = load float, float* %123, align 4, !tbaa !2
  %125 = fadd float %121, %124
  %126 = or i64 %101, 6
  %127 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %126
  %128 = load float, float* %127, align 8, !tbaa !2
  %129 = fadd float %125, %128
  %130 = or i64 %101, 7
  %131 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %130
  %132 = load float, float* %131, align 4, !tbaa !2
  %133 = fadd float %129, %132
  %134 = add nuw nsw i64 %101, 8
  %135 = icmp eq i64 %134, 32000
  br i1 %135, label %136, label %100

136:                                              ; preds = %100
  %137 = fpext float %133 to double
  %138 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %137) #16
  ret i32 0

139:                                              ; preds = %143, %91
  %140 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %141 = add nuw nsw i32 %19, 1
  %142 = icmp eq i32 %141, 50000
  br i1 %142, label %94, label %18

143:                                              ; preds = %92, %143
  %144 = phi i64 [ %145, %143 ], [ %93, %92 ]
  %145 = add nsw i64 %144, %4
  %146 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %145
  %147 = load float, float* %146, align 4, !tbaa !2
  %148 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %144
  %149 = load float, float* %148, align 4, !tbaa !2
  %150 = fadd float %147, %149
  %151 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %144
  store float %150, float* %151, align 4, !tbaa !2
  %152 = icmp slt i64 %145, 31999
  br i1 %152, label %143, label %139, !llvm.loop !373
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s176() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %42

3:                                                ; preds = %3, %268
  %4 = phi i64 [ 0, %268 ], [ %37, %3 ]
  %5 = phi float [ 0.000000e+00, %268 ], [ %36, %3 ]
  %6 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4
  %7 = load float, float* %6, align 16, !tbaa !2
  %8 = fadd float %5, %7
  %9 = or i64 %4, 1
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9
  %11 = load float, float* %10, align 4, !tbaa !2
  %12 = fadd float %8, %11
  %13 = or i64 %4, 2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %15 = load float, float* %14, align 8, !tbaa !2
  %16 = fadd float %12, %15
  %17 = or i64 %4, 3
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %4, 4
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 16, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %4, 5
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %4, 6
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 8, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %4, 7
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = add nuw nsw i64 %4, 8
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %39, label %3

39:                                               ; preds = %3
  %40 = fpext float %36 to double
  %41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %40) #16
  ret i32 0

42:                                               ; preds = %96, %0
  %43 = phi i64 [ 0, %0 ], [ %97, %96 ]
  %44 = sub nuw nsw i64 15999, %43
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %43
  %46 = load float, float* %45, align 4, !tbaa !2
  %47 = insertelement <4 x float> undef, float %46, i32 0
  %48 = shufflevector <4 x float> %47, <4 x float> undef, <4 x i32> zeroinitializer
  %49 = insertelement <4 x float> undef, float %46, i32 0
  %50 = shufflevector <4 x float> %49, <4 x float> undef, <4 x i32> zeroinitializer
  br label %51

51:                                               ; preds = %51, %42
  %52 = phi i64 [ 0, %42 ], [ %92, %51 ]
  %53 = add nuw nsw i64 %44, %52
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %53
  %55 = bitcast float* %54 to <4 x float>*
  %56 = load <4 x float>, <4 x float>* %55, align 4, !tbaa !2
  %57 = getelementptr inbounds float, float* %54, i64 4
  %58 = bitcast float* %57 to <4 x float>*
  %59 = load <4 x float>, <4 x float>* %58, align 4, !tbaa !2
  %60 = fmul <4 x float> %56, %48
  %61 = fmul <4 x float> %59, %50
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %63 = bitcast float* %62 to <4 x float>*
  %64 = load <4 x float>, <4 x float>* %63, align 16, !tbaa !2
  %65 = getelementptr inbounds float, float* %62, i64 4
  %66 = bitcast float* %65 to <4 x float>*
  %67 = load <4 x float>, <4 x float>* %66, align 16, !tbaa !2
  %68 = fadd <4 x float> %64, %60
  %69 = fadd <4 x float> %67, %61
  %70 = bitcast float* %62 to <4 x float>*
  store <4 x float> %68, <4 x float>* %70, align 16, !tbaa !2
  %71 = bitcast float* %65 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 16, !tbaa !2
  %72 = or i64 %52, 8
  %73 = add nuw nsw i64 %44, %72
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %73
  %75 = bitcast float* %74 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 4, !tbaa !2
  %77 = getelementptr inbounds float, float* %74, i64 4
  %78 = bitcast float* %77 to <4 x float>*
  %79 = load <4 x float>, <4 x float>* %78, align 4, !tbaa !2
  %80 = fmul <4 x float> %76, %48
  %81 = fmul <4 x float> %79, %50
  %82 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %83 = bitcast float* %82 to <4 x float>*
  %84 = load <4 x float>, <4 x float>* %83, align 16, !tbaa !2
  %85 = getelementptr inbounds float, float* %82, i64 4
  %86 = bitcast float* %85 to <4 x float>*
  %87 = load <4 x float>, <4 x float>* %86, align 16, !tbaa !2
  %88 = fadd <4 x float> %84, %80
  %89 = fadd <4 x float> %87, %81
  %90 = bitcast float* %82 to <4 x float>*
  store <4 x float> %88, <4 x float>* %90, align 16, !tbaa !2
  %91 = bitcast float* %85 to <4 x float>*
  store <4 x float> %89, <4 x float>* %91, align 16, !tbaa !2
  %92 = add nuw nsw i64 %52, 16
  %93 = icmp eq i64 %92, 16000
  br i1 %93, label %96, label %51, !llvm.loop !374

94:                                               ; preds = %96
  %95 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  br label %99

96:                                               ; preds = %51
  %97 = add nuw nsw i64 %43, 1
  %98 = icmp eq i64 %97, 16000
  br i1 %98, label %94, label %42

99:                                               ; preds = %151, %94
  %100 = phi i64 [ 0, %94 ], [ %152, %151 ]
  %101 = sub nuw nsw i64 15999, %100
  %102 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %100
  %103 = load float, float* %102, align 4, !tbaa !2
  %104 = insertelement <4 x float> undef, float %103, i32 0
  %105 = shufflevector <4 x float> %104, <4 x float> undef, <4 x i32> zeroinitializer
  %106 = insertelement <4 x float> undef, float %103, i32 0
  %107 = shufflevector <4 x float> %106, <4 x float> undef, <4 x i32> zeroinitializer
  br label %108

108:                                              ; preds = %108, %99
  %109 = phi i64 [ 0, %99 ], [ %149, %108 ]
  %110 = add nuw nsw i64 %101, %109
  %111 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %110
  %112 = bitcast float* %111 to <4 x float>*
  %113 = load <4 x float>, <4 x float>* %112, align 4, !tbaa !2
  %114 = getelementptr inbounds float, float* %111, i64 4
  %115 = bitcast float* %114 to <4 x float>*
  %116 = load <4 x float>, <4 x float>* %115, align 4, !tbaa !2
  %117 = fmul <4 x float> %113, %105
  %118 = fmul <4 x float> %116, %107
  %119 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %109
  %120 = bitcast float* %119 to <4 x float>*
  %121 = load <4 x float>, <4 x float>* %120, align 16, !tbaa !2
  %122 = getelementptr inbounds float, float* %119, i64 4
  %123 = bitcast float* %122 to <4 x float>*
  %124 = load <4 x float>, <4 x float>* %123, align 16, !tbaa !2
  %125 = fadd <4 x float> %121, %117
  %126 = fadd <4 x float> %124, %118
  %127 = bitcast float* %119 to <4 x float>*
  store <4 x float> %125, <4 x float>* %127, align 16, !tbaa !2
  %128 = bitcast float* %122 to <4 x float>*
  store <4 x float> %126, <4 x float>* %128, align 16, !tbaa !2
  %129 = or i64 %109, 8
  %130 = add nuw nsw i64 %101, %129
  %131 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %130
  %132 = bitcast float* %131 to <4 x float>*
  %133 = load <4 x float>, <4 x float>* %132, align 4, !tbaa !2
  %134 = getelementptr inbounds float, float* %131, i64 4
  %135 = bitcast float* %134 to <4 x float>*
  %136 = load <4 x float>, <4 x float>* %135, align 4, !tbaa !2
  %137 = fmul <4 x float> %133, %105
  %138 = fmul <4 x float> %136, %107
  %139 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %129
  %140 = bitcast float* %139 to <4 x float>*
  %141 = load <4 x float>, <4 x float>* %140, align 16, !tbaa !2
  %142 = getelementptr inbounds float, float* %139, i64 4
  %143 = bitcast float* %142 to <4 x float>*
  %144 = load <4 x float>, <4 x float>* %143, align 16, !tbaa !2
  %145 = fadd <4 x float> %141, %137
  %146 = fadd <4 x float> %144, %138
  %147 = bitcast float* %139 to <4 x float>*
  store <4 x float> %145, <4 x float>* %147, align 16, !tbaa !2
  %148 = bitcast float* %142 to <4 x float>*
  store <4 x float> %146, <4 x float>* %148, align 16, !tbaa !2
  %149 = add nuw nsw i64 %109, 16
  %150 = icmp eq i64 %149, 16000
  br i1 %150, label %151, label %108, !llvm.loop !375

151:                                              ; preds = %108
  %152 = add nuw nsw i64 %100, 1
  %153 = icmp eq i64 %152, 16000
  br i1 %153, label %154, label %99

154:                                              ; preds = %151
  %155 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  br label %156

156:                                              ; preds = %208, %154
  %157 = phi i64 [ 0, %154 ], [ %209, %208 ]
  %158 = sub nuw nsw i64 15999, %157
  %159 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %157
  %160 = load float, float* %159, align 4, !tbaa !2
  %161 = insertelement <4 x float> undef, float %160, i32 0
  %162 = shufflevector <4 x float> %161, <4 x float> undef, <4 x i32> zeroinitializer
  %163 = insertelement <4 x float> undef, float %160, i32 0
  %164 = shufflevector <4 x float> %163, <4 x float> undef, <4 x i32> zeroinitializer
  br label %165

165:                                              ; preds = %165, %156
  %166 = phi i64 [ 0, %156 ], [ %206, %165 ]
  %167 = add nuw nsw i64 %158, %166
  %168 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %167
  %169 = bitcast float* %168 to <4 x float>*
  %170 = load <4 x float>, <4 x float>* %169, align 4, !tbaa !2
  %171 = getelementptr inbounds float, float* %168, i64 4
  %172 = bitcast float* %171 to <4 x float>*
  %173 = load <4 x float>, <4 x float>* %172, align 4, !tbaa !2
  %174 = fmul <4 x float> %170, %162
  %175 = fmul <4 x float> %173, %164
  %176 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %166
  %177 = bitcast float* %176 to <4 x float>*
  %178 = load <4 x float>, <4 x float>* %177, align 16, !tbaa !2
  %179 = getelementptr inbounds float, float* %176, i64 4
  %180 = bitcast float* %179 to <4 x float>*
  %181 = load <4 x float>, <4 x float>* %180, align 16, !tbaa !2
  %182 = fadd <4 x float> %178, %174
  %183 = fadd <4 x float> %181, %175
  %184 = bitcast float* %176 to <4 x float>*
  store <4 x float> %182, <4 x float>* %184, align 16, !tbaa !2
  %185 = bitcast float* %179 to <4 x float>*
  store <4 x float> %183, <4 x float>* %185, align 16, !tbaa !2
  %186 = or i64 %166, 8
  %187 = add nuw nsw i64 %158, %186
  %188 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %187
  %189 = bitcast float* %188 to <4 x float>*
  %190 = load <4 x float>, <4 x float>* %189, align 4, !tbaa !2
  %191 = getelementptr inbounds float, float* %188, i64 4
  %192 = bitcast float* %191 to <4 x float>*
  %193 = load <4 x float>, <4 x float>* %192, align 4, !tbaa !2
  %194 = fmul <4 x float> %190, %162
  %195 = fmul <4 x float> %193, %164
  %196 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %186
  %197 = bitcast float* %196 to <4 x float>*
  %198 = load <4 x float>, <4 x float>* %197, align 16, !tbaa !2
  %199 = getelementptr inbounds float, float* %196, i64 4
  %200 = bitcast float* %199 to <4 x float>*
  %201 = load <4 x float>, <4 x float>* %200, align 16, !tbaa !2
  %202 = fadd <4 x float> %198, %194
  %203 = fadd <4 x float> %201, %195
  %204 = bitcast float* %196 to <4 x float>*
  store <4 x float> %202, <4 x float>* %204, align 16, !tbaa !2
  %205 = bitcast float* %199 to <4 x float>*
  store <4 x float> %203, <4 x float>* %205, align 16, !tbaa !2
  %206 = add nuw nsw i64 %166, 16
  %207 = icmp eq i64 %206, 16000
  br i1 %207, label %208, label %165, !llvm.loop !376

208:                                              ; preds = %165
  %209 = add nuw nsw i64 %157, 1
  %210 = icmp eq i64 %209, 16000
  br i1 %210, label %211, label %156

211:                                              ; preds = %208
  %212 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  br label %213

213:                                              ; preds = %265, %211
  %214 = phi i64 [ 0, %211 ], [ %266, %265 ]
  %215 = sub nuw nsw i64 15999, %214
  %216 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %214
  %217 = load float, float* %216, align 4, !tbaa !2
  %218 = insertelement <4 x float> undef, float %217, i32 0
  %219 = shufflevector <4 x float> %218, <4 x float> undef, <4 x i32> zeroinitializer
  %220 = insertelement <4 x float> undef, float %217, i32 0
  %221 = shufflevector <4 x float> %220, <4 x float> undef, <4 x i32> zeroinitializer
  br label %222

222:                                              ; preds = %222, %213
  %223 = phi i64 [ 0, %213 ], [ %263, %222 ]
  %224 = add nuw nsw i64 %215, %223
  %225 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %224
  %226 = bitcast float* %225 to <4 x float>*
  %227 = load <4 x float>, <4 x float>* %226, align 4, !tbaa !2
  %228 = getelementptr inbounds float, float* %225, i64 4
  %229 = bitcast float* %228 to <4 x float>*
  %230 = load <4 x float>, <4 x float>* %229, align 4, !tbaa !2
  %231 = fmul <4 x float> %227, %219
  %232 = fmul <4 x float> %230, %221
  %233 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %223
  %234 = bitcast float* %233 to <4 x float>*
  %235 = load <4 x float>, <4 x float>* %234, align 16, !tbaa !2
  %236 = getelementptr inbounds float, float* %233, i64 4
  %237 = bitcast float* %236 to <4 x float>*
  %238 = load <4 x float>, <4 x float>* %237, align 16, !tbaa !2
  %239 = fadd <4 x float> %235, %231
  %240 = fadd <4 x float> %238, %232
  %241 = bitcast float* %233 to <4 x float>*
  store <4 x float> %239, <4 x float>* %241, align 16, !tbaa !2
  %242 = bitcast float* %236 to <4 x float>*
  store <4 x float> %240, <4 x float>* %242, align 16, !tbaa !2
  %243 = or i64 %223, 8
  %244 = add nuw nsw i64 %215, %243
  %245 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %244
  %246 = bitcast float* %245 to <4 x float>*
  %247 = load <4 x float>, <4 x float>* %246, align 4, !tbaa !2
  %248 = getelementptr inbounds float, float* %245, i64 4
  %249 = bitcast float* %248 to <4 x float>*
  %250 = load <4 x float>, <4 x float>* %249, align 4, !tbaa !2
  %251 = fmul <4 x float> %247, %219
  %252 = fmul <4 x float> %250, %221
  %253 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %243
  %254 = bitcast float* %253 to <4 x float>*
  %255 = load <4 x float>, <4 x float>* %254, align 16, !tbaa !2
  %256 = getelementptr inbounds float, float* %253, i64 4
  %257 = bitcast float* %256 to <4 x float>*
  %258 = load <4 x float>, <4 x float>* %257, align 16, !tbaa !2
  %259 = fadd <4 x float> %255, %251
  %260 = fadd <4 x float> %258, %252
  %261 = bitcast float* %253 to <4 x float>*
  store <4 x float> %259, <4 x float>* %261, align 16, !tbaa !2
  %262 = bitcast float* %256 to <4 x float>*
  store <4 x float> %260, <4 x float>* %262, align 16, !tbaa !2
  %263 = add nuw nsw i64 %223, 16
  %264 = icmp eq i64 %263, 16000
  br i1 %264, label %265, label %222, !llvm.loop !377

265:                                              ; preds = %222
  %266 = add nuw nsw i64 %214, 1
  %267 = icmp eq i64 %266, 16000
  br i1 %267, label %268, label %213

268:                                              ; preds = %265
  %269 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %270 = tail call i64 @clock() #16
  %271 = sub nsw i64 %270, %2
  %272 = sitofp i64 %271 to double
  %273 = fdiv double %272, 1.000000e+06
  %274 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.187, i64 0, i64 0), double %273)
  br label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s211() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %56, %0
  %4 = phi i32 [ 0, %0 ], [ %58, %56 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !2
  br label %60

6:                                                ; preds = %56
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %50, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %49, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %46, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %21, %27
  %29 = add nuw nsw i64 %13, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = add nuw nsw i64 %13, 3
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %35, %41
  %43 = add nuw nsw i64 %13, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %43
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %13, 5
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %12

52:                                               ; preds = %12
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #16
  ret i32 0

56:                                               ; preds = %60
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %58 = add nuw nsw i32 %4, 1
  %59 = icmp eq i32 %58, 50000
  br i1 %59, label %6, label %3

60:                                               ; preds = %60, %3
  %61 = phi float [ %5, %3 ], [ %91, %60 ]
  %62 = phi i64 [ 1, %3 ], [ %85, %60 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %62
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fmul float %64, %66
  %68 = fadd float %61, %67
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  store float %68, float* %69, align 4, !tbaa !2
  %70 = add nuw nsw i64 %62, 1
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %62
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fmul float %66, %74
  %76 = fsub float %72, %75
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  store float %76, float* %77, align 4, !tbaa !2
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %70
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %70
  %81 = load float, float* %80, align 4, !tbaa !2
  %82 = fmul float %79, %81
  %83 = fadd float %76, %82
  %84 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  store float %83, float* %84, align 4, !tbaa !2
  %85 = add nuw nsw i64 %62, 2
  %86 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %85
  %87 = load float, float* %86, align 4, !tbaa !2
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %70
  %89 = load float, float* %88, align 4, !tbaa !2
  %90 = fmul float %81, %89
  %91 = fsub float %87, %90
  %92 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %70
  store float %91, float* %92, align 4, !tbaa !2
  %93 = icmp eq i64 %85, 31999
  br i1 %93, label %56, label %60
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s211p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %53

3:                                                ; preds = %90
  %4 = tail call i64 @clock() #16
  %5 = sub nsw i64 %4, %2
  %6 = sitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.189, i64 0, i64 0), double %7)
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i64 [ 0, %3 ], [ %47, %9 ]
  %11 = phi float [ 0.000000e+00, %3 ], [ %46, %9 ]
  %12 = phi float [ 0.000000e+00, %3 ], [ %43, %9 ]
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10
  %14 = load float, float* %13, align 4, !tbaa !2
  %15 = fadd float %12, %14
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %11, %17
  %19 = add nuw nsw i64 %10, 1
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4, !tbaa !2
  %22 = fadd float %15, %21
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = add nuw nsw i64 %10, 2
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %22, %28
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = add nuw nsw i64 %10, 3
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %29, %35
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %33
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = add nuw nsw i64 %10, 4
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = fadd float %36, %42
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = add nuw nsw i64 %10, 5
  %48 = icmp eq i64 %47, 32000
  br i1 %48, label %49, label %9

49:                                               ; preds = %9
  %50 = fadd float %43, %46
  %51 = fpext float %50 to double
  %52 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %51) #16
  ret i32 0

53:                                               ; preds = %90, %0
  %54 = phi i32 [ 0, %0 ], [ %100, %90 ]
  %55 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !2
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 1), align 4, !tbaa !2
  %57 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 1), align 4, !tbaa !2
  %58 = fmul float %56, %57
  %59 = fadd float %55, %58
  store float %59, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 1), align 4, !tbaa !2
  %60 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 2), align 8, !tbaa !2
  %61 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 1), align 4, !tbaa !2
  %62 = fmul float %57, %61
  %63 = fsub float %60, %62
  store float %63, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), align 4, !tbaa !2
  br label %64

64:                                               ; preds = %102, %53
  %65 = phi i64 [ 0, %53 ], [ %125, %102 ]
  %66 = or i64 %65, 2
  %67 = or i64 %65, 3
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  %69 = bitcast float* %68 to <4 x float>*
  %70 = load <4 x float>, <4 x float>* %69, align 4, !tbaa !2
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %66
  %72 = bitcast float* %71 to <4 x float>*
  %73 = load <4 x float>, <4 x float>* %72, align 8, !tbaa !2
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %66
  %75 = bitcast float* %74 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 8, !tbaa !2
  %77 = fmul <4 x float> %73, %76
  %78 = fsub <4 x float> %70, %77
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %66
  %80 = bitcast float* %79 to <4 x float>*
  store <4 x float> %78, <4 x float>* %80, align 8, !tbaa !2
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %66
  %82 = bitcast float* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 8, !tbaa !2
  %84 = fmul <4 x float> %76, %83
  %85 = fadd <4 x float> %78, %84
  %86 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %87 = bitcast float* %86 to <4 x float>*
  store <4 x float> %85, <4 x float>* %87, align 8, !tbaa !2
  %88 = or i64 %65, 4
  %89 = icmp eq i64 %88, 31996
  br i1 %89, label %90, label %102, !llvm.loop !378

90:                                               ; preds = %64
  %91 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !2
  %92 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31998), align 8, !tbaa !2
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31998), align 8, !tbaa !2
  %94 = fmul float %92, %93
  %95 = fsub float %91, %94
  store float %95, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %96 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31998), align 8, !tbaa !2
  %97 = fmul float %93, %96
  %98 = fadd float %95, %97
  store float %98, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %99 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %100 = add nuw nsw i32 %54, 1
  %101 = icmp eq i32 %100, 50000
  br i1 %101, label %3, label %53

102:                                              ; preds = %64
  %103 = or i64 %65, 6
  %104 = or i64 %65, 7
  %105 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %104
  %106 = bitcast float* %105 to <4 x float>*
  %107 = load <4 x float>, <4 x float>* %106, align 4, !tbaa !2
  %108 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %103
  %109 = bitcast float* %108 to <4 x float>*
  %110 = load <4 x float>, <4 x float>* %109, align 8, !tbaa !2
  %111 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %103
  %112 = bitcast float* %111 to <4 x float>*
  %113 = load <4 x float>, <4 x float>* %112, align 8, !tbaa !2
  %114 = fmul <4 x float> %110, %113
  %115 = fsub <4 x float> %107, %114
  %116 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %103
  %117 = bitcast float* %116 to <4 x float>*
  store <4 x float> %115, <4 x float>* %117, align 8, !tbaa !2
  %118 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %103
  %119 = bitcast float* %118 to <4 x float>*
  %120 = load <4 x float>, <4 x float>* %119, align 8, !tbaa !2
  %121 = fmul <4 x float> %113, %120
  %122 = fadd <4 x float> %115, %121
  %123 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %103
  %124 = bitcast float* %123 to <4 x float>*
  store <4 x float> %122, <4 x float>* %124, align 8, !tbaa !2
  %125 = add nuw nsw i64 %65, 8
  br label %64
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s212() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %56, %0
  %4 = phi i32 [ 0, %0 ], [ %58, %56 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  br label %60

6:                                                ; preds = %56
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.190, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %50, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %49, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %46, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %21, %27
  %29 = add nuw nsw i64 %13, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = add nuw nsw i64 %13, 3
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %35, %41
  %43 = add nuw nsw i64 %13, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %43
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %13, 5
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %12

52:                                               ; preds = %12
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #16
  ret i32 0

56:                                               ; preds = %60
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %58 = add nuw nsw i32 %4, 1
  %59 = icmp eq i32 %58, 50000
  br i1 %59, label %6, label %3

60:                                               ; preds = %77, %3
  %61 = phi float [ %5, %3 ], [ %84, %77 ]
  %62 = phi i64 [ 0, %3 ], [ %82, %77 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %64 = load float, float* %63, align 8, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %66 = fmul float %64, %61
  store float %66, float* %65, align 8, !tbaa !2
  %67 = or i64 %62, 1
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %62
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fmul float %69, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %74 = load float, float* %73, align 8, !tbaa !2
  %75 = fadd float %74, %72
  store float %75, float* %73, align 8, !tbaa !2
  %76 = icmp eq i64 %67, 31999
  br i1 %76, label %56, label %77

77:                                               ; preds = %60
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %67
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %81 = fmul float %79, %69
  store float %81, float* %80, align 4, !tbaa !2
  %82 = add nuw nsw i64 %62, 2
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 8, !tbaa !2
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %67
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fmul float %84, %86
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  %89 = load float, float* %88, align 4, !tbaa !2
  %90 = fadd float %89, %87
  store float %90, float* %88, align 4, !tbaa !2
  br label %60
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1213() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %56, %0
  %4 = phi i32 [ 0, %0 ], [ %58, %56 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !2
  br label %60

6:                                                ; preds = %56
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.191, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %50, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %49, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %46, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %21, %27
  %29 = add nuw nsw i64 %13, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = add nuw nsw i64 %13, 3
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %35, %41
  %43 = add nuw nsw i64 %13, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %43
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %13, 5
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %12

52:                                               ; preds = %12
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #16
  ret i32 0

56:                                               ; preds = %60
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %58 = add nuw nsw i32 %4, 1
  %59 = icmp eq i32 %58, 50000
  br i1 %59, label %6, label %3

60:                                               ; preds = %60, %3
  %61 = phi float [ %5, %3 ], [ %83, %60 ]
  %62 = phi i64 [ 1, %3 ], [ %78, %60 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %61, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  store float %65, float* %66, align 4, !tbaa !2
  %67 = add nuw nsw i64 %62, 1
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %62
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fmul float %69, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  store float %72, float* %73, align 4, !tbaa !2
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %67
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fadd float %72, %75
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  store float %76, float* %77, align 4, !tbaa !2
  %78 = add nuw nsw i64 %62, 2
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %67
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = fmul float %80, %82
  %84 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  store float %83, float* %84, align 4, !tbaa !2
  %85 = icmp eq i64 %78, 31999
  br i1 %85, label %56, label %60
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s221() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %56, %0
  %4 = phi i32 [ 0, %0 ], [ %58, %56 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !2
  br label %60

6:                                                ; preds = %56
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.192, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %50, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %49, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %46, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %21, %27
  %29 = add nuw nsw i64 %13, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = add nuw nsw i64 %13, 3
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %35, %41
  %43 = add nuw nsw i64 %13, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %43
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %13, 5
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %12

52:                                               ; preds = %12
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #16
  ret i32 0

56:                                               ; preds = %60
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %58 = add nuw nsw i32 %4, 1
  %59 = icmp eq i32 %58, 25000
  br i1 %59, label %6, label %3

60:                                               ; preds = %76, %3
  %61 = phi float [ %5, %3 ], [ %86, %76 ]
  %62 = phi i64 [ 1, %3 ], [ %88, %76 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %62
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fmul float %64, %66
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %69, %67
  store float %70, float* %68, align 4, !tbaa !2
  %71 = fadd float %70, %61
  %72 = fadd float %66, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  store float %72, float* %73, align 4, !tbaa !2
  %74 = add nuw nsw i64 %62, 1
  %75 = icmp eq i64 %74, 32000
  br i1 %75, label %56, label %76

76:                                               ; preds = %60
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %74
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %74
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fmul float %78, %80
  %82 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %83 = load float, float* %82, align 4, !tbaa !2
  %84 = fadd float %83, %81
  store float %84, float* %82, align 4, !tbaa !2
  %85 = fadd float %84, %72
  %86 = fadd float %80, %85
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %74
  store float %86, float* %87, align 4, !tbaa !2
  %88 = add nuw nsw i64 %62, 2
  br label %60
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s221p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %89
  %4 = phi i32 [ 0, %0 ], [ %91, %89 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %35, %5 ]
  %7 = shl i64 %6, 2
  %8 = or i64 %7, 1
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %10 = bitcast float* %9 to <16 x float>*
  %11 = load <16 x float>, <16 x float>* %10, align 4, !tbaa !2
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %13 = bitcast float* %12 to <16 x float>*
  %14 = load <16 x float>, <16 x float>* %13, align 4, !tbaa !2
  %15 = fmul <16 x float> %11, %14
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %17 = bitcast float* %16 to <16 x float>*
  %18 = load <16 x float>, <16 x float>* %17, align 4, !tbaa !2
  %19 = fadd <16 x float> %18, %15
  %20 = shufflevector <16 x float> %19, <16 x float> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %21 = fmul <16 x float> %11, %14
  %22 = fadd <16 x float> %18, %21
  %23 = shufflevector <16 x float> %22, <16 x float> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %24 = fmul <16 x float> %11, %14
  %25 = fadd <16 x float> %18, %24
  %26 = shufflevector <16 x float> %25, <16 x float> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %27 = fmul <16 x float> %11, %14
  %28 = fadd <16 x float> %18, %27
  %29 = shufflevector <16 x float> %28, <16 x float> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %31 = bitcast float* %30 to <16 x float>*
  %32 = shufflevector <4 x float> %20, <4 x float> %23, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %33 = shufflevector <4 x float> %26, <4 x float> %29, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %34 = shufflevector <8 x float> %32, <8 x float> %33, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %34, <16 x float>* %31, align 4, !tbaa !2
  %35 = add i64 %6, 4
  %36 = icmp eq i64 %35, 8000
  br i1 %36, label %87, label %5, !llvm.loop !379

37:                                               ; preds = %89
  %38 = tail call i64 @clock() #16
  %39 = sub nsw i64 %38, %2
  %40 = sitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  %42 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.193, i64 0, i64 0), double %41)
  br label %43

43:                                               ; preds = %43, %37
  %44 = phi i64 [ 0, %37 ], [ %81, %43 ]
  %45 = phi float [ 0.000000e+00, %37 ], [ %80, %43 ]
  %46 = phi float [ 0.000000e+00, %37 ], [ %77, %43 ]
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %46, %48
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %44
  %51 = load float, float* %50, align 4, !tbaa !2
  %52 = fadd float %45, %51
  %53 = add nuw nsw i64 %44, 1
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fadd float %49, %55
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %53
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %52, %58
  %60 = add nuw nsw i64 %44, 2
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fadd float %56, %62
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %59, %65
  %67 = add nuw nsw i64 %44, 3
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %63, %69
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %66, %72
  %74 = add nuw nsw i64 %44, 4
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fadd float %70, %76
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %74
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fadd float %73, %79
  %81 = add nuw nsw i64 %44, 5
  %82 = icmp eq i64 %81, 32000
  br i1 %82, label %83, label %43

83:                                               ; preds = %43
  %84 = fadd float %77, %80
  %85 = fpext float %84 to double
  %86 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %85) #16
  ret i32 0

87:                                               ; preds = %5
  %88 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !2
  br label %93

89:                                               ; preds = %93
  %90 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %91 = add nuw nsw i32 %4, 1
  %92 = icmp eq i32 %91, 25000
  br i1 %92, label %37, label %3

93:                                               ; preds = %105, %87
  %94 = phi float [ %88, %87 ], [ %111, %105 ]
  %95 = phi i64 [ 1, %87 ], [ %113, %105 ]
  %96 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %95
  %97 = load float, float* %96, align 4, !tbaa !2
  %98 = fadd float %94, %97
  %99 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %95
  %100 = load float, float* %99, align 4, !tbaa !2
  %101 = fadd float %98, %100
  %102 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %95
  store float %101, float* %102, align 4, !tbaa !2
  %103 = add nuw nsw i64 %95, 1
  %104 = icmp eq i64 %103, 32000
  br i1 %104, label %89, label %105

105:                                              ; preds = %93
  %106 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %103
  %107 = load float, float* %106, align 4, !tbaa !2
  %108 = fadd float %101, %107
  %109 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %103
  %110 = load float, float* %109, align 4, !tbaa !2
  %111 = fadd float %108, %110
  %112 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %103
  store float %111, float* %112, align 4, !tbaa !2
  %113 = add nuw nsw i64 %95, 2
  br label %93
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1221() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %82
  %4 = phi i32 [ 0, %0 ], [ %84, %82 ]
  %5 = load <4 x float>, <4 x float>* bitcast ([32000 x float]* @b to <4 x float>*), align 16
  br label %6

6:                                                ; preds = %86, %3
  %7 = phi <4 x float> [ %5, %3 ], [ %91, %86 ]
  %8 = phi i64 [ 0, %3 ], [ %94, %86 ]
  %9 = or i64 %8, 4
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fadd <4 x float> %7, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> %13, <4 x float>* %15, align 16, !tbaa !2
  %16 = or i64 %8, 8
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %16
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fadd <4 x float> %13, %19
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %16
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 16, !tbaa !2
  %23 = or i64 %8, 12
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = fadd <4 x float> %20, %26
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !2
  %30 = or i64 %8, 12
  %31 = icmp eq i64 %30, 31996
  br i1 %31, label %82, label %86, !llvm.loop !380

32:                                               ; preds = %82
  %33 = tail call i64 @clock() #16
  %34 = sub nsw i64 %33, %2
  %35 = sitofp i64 %34 to double
  %36 = fdiv double %35, 1.000000e+06
  %37 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.194, i64 0, i64 0), double %36)
  br label %38

38:                                               ; preds = %38, %32
  %39 = phi i64 [ 0, %32 ], [ %76, %38 ]
  %40 = phi float [ 0.000000e+00, %32 ], [ %75, %38 ]
  %41 = phi float [ 0.000000e+00, %32 ], [ %72, %38 ]
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %41, %43
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %39
  %46 = load float, float* %45, align 4, !tbaa !2
  %47 = fadd float %40, %46
  %48 = add nuw nsw i64 %39, 1
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = fadd float %44, %50
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %48
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = fadd float %47, %53
  %55 = add nuw nsw i64 %39, 2
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fadd float %51, %57
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = fadd float %54, %60
  %62 = add nuw nsw i64 %39, 3
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %58, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fadd float %61, %67
  %69 = add nuw nsw i64 %39, 4
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fadd float %65, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fadd float %68, %74
  %76 = add nuw nsw i64 %39, 5
  %77 = icmp eq i64 %76, 32000
  br i1 %77, label %78, label %38

78:                                               ; preds = %38
  %79 = fadd float %72, %75
  %80 = fpext float %79 to double
  %81 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %80) #16
  ret i32 0

82:                                               ; preds = %6
  %83 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %84 = add nuw nsw i32 %4, 1
  %85 = icmp eq i32 %84, 50000
  br i1 %85, label %32, label %3

86:                                               ; preds = %6
  %87 = add nuw nsw i64 %8, 16
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %87
  %89 = bitcast float* %88 to <4 x float>*
  %90 = load <4 x float>, <4 x float>* %89, align 16, !tbaa !2
  %91 = fadd <4 x float> %27, %90
  %92 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %87
  %93 = bitcast float* %92 to <4 x float>*
  store <4 x float> %91, <4 x float>* %93, align 16, !tbaa !2
  %94 = add nuw nsw i64 %8, 16
  br label %6
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s222() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %56, %0
  %4 = phi i32 [ 0, %0 ], [ %58, %56 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), align 16, !tbaa !2
  br label %60

6:                                                ; preds = %56
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %50, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %49, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %46, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %21, %27
  %29 = add nuw nsw i64 %13, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = add nuw nsw i64 %13, 3
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %35, %41
  %43 = add nuw nsw i64 %13, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %43
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %13, 5
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %12

52:                                               ; preds = %12
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #16
  ret i32 0

56:                                               ; preds = %60
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %58 = add nuw nsw i32 %4, 1
  %59 = icmp eq i32 %58, 25000
  br i1 %59, label %6, label %3

60:                                               ; preds = %76, %3
  %61 = phi float [ %5, %3 ], [ %85, %76 ]
  %62 = phi i64 [ 1, %3 ], [ %88, %76 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fmul float %64, %66
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %69, %67
  %71 = fmul float %61, %61
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %62
  store float %71, float* %72, align 4, !tbaa !2
  %73 = fsub float %70, %67
  store float %73, float* %68, align 4, !tbaa !2
  %74 = add nuw nsw i64 %62, 1
  %75 = icmp eq i64 %74, 32000
  br i1 %75, label %56, label %76

76:                                               ; preds = %60
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %74
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %74
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fmul float %78, %80
  %82 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %83 = load float, float* %82, align 4, !tbaa !2
  %84 = fadd float %83, %81
  %85 = fmul float %71, %71
  %86 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %74
  store float %85, float* %86, align 4, !tbaa !2
  %87 = fsub float %84, %81
  store float %87, float* %82, align 4, !tbaa !2
  %88 = add nuw nsw i64 %62, 2
  br label %60
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s222p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %56, %0
  %4 = phi i32 [ 0, %0 ], [ %58, %56 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), align 16, !tbaa !2
  br label %60

6:                                                ; preds = %56
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.196, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %50, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %49, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %46, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %21, %27
  %29 = add nuw nsw i64 %13, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = add nuw nsw i64 %13, 3
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %35, %41
  %43 = add nuw nsw i64 %13, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %43
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %13, 5
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %12

52:                                               ; preds = %12
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #16
  ret i32 0

56:                                               ; preds = %60
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %58 = add nuw nsw i32 %4, 1
  %59 = icmp eq i32 %58, 25000
  br i1 %59, label %6, label %3

60:                                               ; preds = %73, %3
  %61 = phi float [ %5, %3 ], [ %74, %73 ]
  %62 = phi i64 [ 1, %3 ], [ %76, %73 ]
  %63 = fmul float %61, %61
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %62
  store float %63, float* %64, align 4, !tbaa !2
  %65 = add nuw nsw i64 %62, 1
  %66 = fmul float %63, %63
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %65
  store float %66, float* %67, align 4, !tbaa !2
  %68 = add nuw nsw i64 %62, 2
  %69 = fmul float %66, %66
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %68
  store float %69, float* %70, align 4, !tbaa !2
  %71 = add nuw nsw i64 %62, 3
  %72 = icmp eq i64 %71, 32000
  br i1 %72, label %56, label %73

73:                                               ; preds = %60
  %74 = fmul float %69, %69
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %71
  store float %74, float* %75, align 4, !tbaa !2
  %76 = add nuw nsw i64 %62, 4
  br label %60
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s231() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %44, %0
  %4 = phi i32 [ 0, %0 ], [ %46, %44 ]
  br label %40

5:                                                ; preds = %44
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.197, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %48, %3
  %41 = phi i64 [ 0, %3 ], [ %49, %48 ]
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  br label %51

44:                                               ; preds = %48
  %45 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %46 = add nuw nsw i32 %4, 1
  %47 = icmp eq i32 %46, 19500
  br i1 %47, label %5, label %3

48:                                               ; preds = %51
  %49 = add nuw nsw i64 %41, 1
  %50 = icmp eq i64 %49, 256
  br i1 %50, label %44, label %40

51:                                               ; preds = %51, %40
  %52 = phi float [ %43, %40 ], [ %66, %51 ]
  %53 = phi i64 [ 1, %40 ], [ %68, %51 ]
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %53, i64 %41
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fadd float %52, %55
  %57 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %53, i64 %41
  store float %56, float* %57, align 4, !tbaa !2
  %58 = add nuw nsw i64 %53, 1
  %59 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %58, i64 %41
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = fadd float %56, %60
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %58, i64 %41
  store float %61, float* %62, align 4, !tbaa !2
  %63 = add nuw nsw i64 %53, 2
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %63, i64 %41
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %61, %65
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %63, i64 %41
  store float %66, float* %67, align 4, !tbaa !2
  %68 = add nuw nsw i64 %53, 3
  %69 = icmp eq i64 %68, 256
  br i1 %69, label %48, label %51
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s231p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %45, %0
  %4 = phi i32 [ 0, %0 ], [ %47, %45 ]
  br label %40

5:                                                ; preds = %45
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.198, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %3, %49
  %41 = phi i64 [ 0, %3 ], [ %50, %49 ]
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %41
  %43 = bitcast float* %42 to <4 x float>*
  %44 = load <4 x float>, <4 x float>* %43, align 16, !tbaa !2
  br label %52

45:                                               ; preds = %49
  %46 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %47 = add nuw nsw i32 %4, 1
  %48 = icmp eq i32 %47, 19500
  br i1 %48, label %5, label %3

49:                                               ; preds = %52
  %50 = add nuw nsw i64 %41, 4
  %51 = icmp ult i64 %41, 252
  br i1 %51, label %40, label %45

52:                                               ; preds = %52, %40
  %53 = phi i64 [ 1, %40 ], [ %75, %52 ]
  %54 = phi <4 x float> [ %44, %40 ], [ %73, %52 ]
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %53, i64 %41
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %53, i64 %41
  %57 = bitcast float* %55 to <4 x float>*
  %58 = load <4 x float>, <4 x float>* %57, align 16, !tbaa !2
  %59 = fadd <4 x float> %54, %58
  %60 = bitcast float* %56 to <4 x float>*
  store <4 x float> %59, <4 x float>* %60, align 16, !tbaa !2
  %61 = add nuw nsw i64 %53, 1
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %61, i64 %41
  %63 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %61, i64 %41
  %64 = bitcast float* %62 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %64, align 16, !tbaa !2
  %66 = fadd <4 x float> %59, %65
  %67 = bitcast float* %63 to <4 x float>*
  store <4 x float> %66, <4 x float>* %67, align 16, !tbaa !2
  %68 = add nuw nsw i64 %53, 2
  %69 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %68, i64 %41
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %68, i64 %41
  %71 = bitcast float* %69 to <4 x float>*
  %72 = load <4 x float>, <4 x float>* %71, align 16, !tbaa !2
  %73 = fadd <4 x float> %66, %72
  %74 = bitcast float* %70 to <4 x float>*
  store <4 x float> %73, <4 x float>* %74, align 16, !tbaa !2
  %75 = add nuw nsw i64 %53, 3
  %76 = icmp eq i64 %75, 256
  br i1 %76, label %49, label %52
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s231pp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %66, %0
  %4 = phi i32 [ 0, %0 ], [ %68, %66 ]
  br label %40

5:                                                ; preds = %66
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.199, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %70, %3
  %41 = phi i64 [ 1, %3 ], [ %71, %70 ]
  %42 = add nsw i64 %41, -1
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i64 [ 0, %40 ], [ %64, %43 ]
  %45 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %44
  %46 = bitcast float* %45 to <4 x float>*
  %47 = load <4 x float>, <4 x float>* %46, align 16, !tbaa !2
  %48 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %44
  %49 = bitcast float* %48 to <4 x float>*
  %50 = load <4 x float>, <4 x float>* %49, align 16, !tbaa !2
  %51 = fadd <4 x float> %47, %50
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %44
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> %51, <4 x float>* %53, align 16, !tbaa !2
  %54 = or i64 %44, 4
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %54
  %56 = bitcast float* %55 to <4 x float>*
  %57 = load <4 x float>, <4 x float>* %56, align 16, !tbaa !2
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %54
  %59 = bitcast float* %58 to <4 x float>*
  %60 = load <4 x float>, <4 x float>* %59, align 16, !tbaa !2
  %61 = fadd <4 x float> %57, %60
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %54
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> %61, <4 x float>* %63, align 16, !tbaa !2
  %64 = add nuw nsw i64 %44, 8
  %65 = icmp eq i64 %64, 256
  br i1 %65, label %70, label %43, !llvm.loop !381

66:                                               ; preds = %70
  %67 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %68 = add nuw nsw i32 %4, 1
  %69 = icmp eq i32 %68, 19500
  br i1 %69, label %5, label %3

70:                                               ; preds = %43
  %71 = add nuw nsw i64 %41, 1
  %72 = icmp eq i64 %71, 256
  br i1 %72, label %66, label %40
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s231ppp() local_unnamed_addr #7 {
  %1 = alloca [256 x [256 x float]], align 16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = bitcast [256 x [256 x float]]* %1 to i8*
  br label %40

5:                                                ; preds = %120
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %3
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.200, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %120, %0
  %41 = phi i32 [ 0, %0 ], [ %122, %120 ]
  call void @llvm.lifetime.start.p0i8(i64 262144, i8* nonnull %4) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(262144) %4, i8 0, i64 262144, i1 false)
  br label %42

42:                                               ; preds = %68, %40
  %43 = phi i64 [ 1, %40 ], [ %69, %68 ]
  %44 = add nsw i64 %43, -1
  br label %45

45:                                               ; preds = %45, %42
  %46 = phi i64 [ 0, %42 ], [ %66, %45 ]
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %44, i64 %46
  %48 = bitcast float* %47 to <4 x float>*
  %49 = load <4 x float>, <4 x float>* %48, align 16, !tbaa !2
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %43, i64 %46
  %51 = bitcast float* %50 to <4 x float>*
  %52 = load <4 x float>, <4 x float>* %51, align 16, !tbaa !2
  %53 = fadd <4 x float> %49, %52
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %43, i64 %46
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 16, !tbaa !2
  %56 = or i64 %46, 4
  %57 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %44, i64 %56
  %58 = bitcast float* %57 to <4 x float>*
  %59 = load <4 x float>, <4 x float>* %58, align 16, !tbaa !2
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %43, i64 %56
  %61 = bitcast float* %60 to <4 x float>*
  %62 = load <4 x float>, <4 x float>* %61, align 16, !tbaa !2
  %63 = fadd <4 x float> %59, %62
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %43, i64 %56
  %65 = bitcast float* %64 to <4 x float>*
  store <4 x float> %63, <4 x float>* %65, align 16, !tbaa !2
  %66 = add nuw nsw i64 %46, 8
  %67 = icmp eq i64 %66, 256
  br i1 %67, label %68, label %45, !llvm.loop !382

68:                                               ; preds = %45
  %69 = add nuw nsw i64 %43, 1
  %70 = icmp eq i64 %69, 256
  br i1 %70, label %71, label %42

71:                                               ; preds = %68, %124
  %72 = phi i64 [ %125, %124 ], [ 0, %68 ]
  %73 = add nuw i64 %72, 1
  %74 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %73, i64 0
  %75 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %72, i64 0
  %76 = icmp ult float* %75, getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 0)
  %77 = icmp ugt float* %74, getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 0)
  %78 = and i1 %76, %77
  br i1 %78, label %127, label %79

79:                                               ; preds = %71, %79
  %80 = phi i64 [ %118, %79 ], [ 0, %71 ]
  %81 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %80
  %82 = bitcast float* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 16, !tbaa !2, !alias.scope !383
  %84 = getelementptr inbounds float, float* %81, i64 4
  %85 = bitcast float* %84 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 16, !tbaa !2, !alias.scope !383
  %87 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %72, i64 %80
  %88 = bitcast float* %87 to <4 x float>*
  %89 = load <4 x float>, <4 x float>* %88, align 16, !tbaa !2, !alias.scope !386
  %90 = getelementptr inbounds float, float* %87, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  %92 = load <4 x float>, <4 x float>* %91, align 16, !tbaa !2, !alias.scope !386
  %93 = fadd <4 x float> %83, %89
  %94 = fadd <4 x float> %86, %92
  %95 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %72, i64 %80
  %96 = bitcast float* %95 to <4 x float>*
  store <4 x float> %93, <4 x float>* %96, align 16, !tbaa !2, !alias.scope !388, !noalias !383
  %97 = getelementptr inbounds float, float* %95, i64 4
  %98 = bitcast float* %97 to <4 x float>*
  store <4 x float> %94, <4 x float>* %98, align 16, !tbaa !2, !alias.scope !388, !noalias !383
  %99 = or i64 %80, 8
  %100 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %99
  %101 = bitcast float* %100 to <4 x float>*
  %102 = load <4 x float>, <4 x float>* %101, align 16, !tbaa !2, !alias.scope !383
  %103 = getelementptr inbounds float, float* %100, i64 4
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 16, !tbaa !2, !alias.scope !383
  %106 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %72, i64 %99
  %107 = bitcast float* %106 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 16, !tbaa !2, !alias.scope !386
  %109 = getelementptr inbounds float, float* %106, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %111 = load <4 x float>, <4 x float>* %110, align 16, !tbaa !2, !alias.scope !386
  %112 = fadd <4 x float> %102, %108
  %113 = fadd <4 x float> %105, %111
  %114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %72, i64 %99
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %112, <4 x float>* %115, align 16, !tbaa !2, !alias.scope !388, !noalias !383
  %116 = getelementptr inbounds float, float* %114, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  store <4 x float> %113, <4 x float>* %117, align 16, !tbaa !2, !alias.scope !388, !noalias !383
  %118 = add nuw nsw i64 %80, 16
  %119 = icmp eq i64 %118, 256
  br i1 %119, label %124, label %79, !llvm.loop !390

120:                                              ; preds = %124
  %121 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  call void @llvm.lifetime.end.p0i8(i64 262144, i8* nonnull %4) #16
  %122 = add nuw nsw i32 %41, 1
  %123 = icmp eq i32 %122, 19500
  br i1 %123, label %5, label %40

124:                                              ; preds = %79, %127
  %125 = add nuw nsw i64 %72, 1
  %126 = icmp eq i64 %125, 256
  br i1 %126, label %120, label %71

127:                                              ; preds = %71, %127
  %128 = phi i64 [ %142, %127 ], [ 0, %71 ]
  %129 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %128
  %130 = load float, float* %129, align 8, !tbaa !2
  %131 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %72, i64 %128
  %132 = load float, float* %131, align 8, !tbaa !2
  %133 = fadd float %130, %132
  %134 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %72, i64 %128
  store float %133, float* %134, align 8, !tbaa !2
  %135 = or i64 %128, 1
  %136 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %135
  %137 = load float, float* %136, align 4, !tbaa !2
  %138 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %72, i64 %135
  %139 = load float, float* %138, align 4, !tbaa !2
  %140 = fadd float %137, %139
  %141 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %72, i64 %135
  store float %140, float* %141, align 4, !tbaa !2
  %142 = add nuw nsw i64 %128, 2
  %143 = icmp eq i64 %142, 256
  br i1 %143, label %124, label %127, !llvm.loop !391
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s232() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %40

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.201, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %64, %3
  %41 = phi i64 [ %67, %64 ], [ 0, %3 ]
  %42 = phi i64 [ %65, %64 ], [ 1, %3 ]
  %43 = add i64 %41, 1
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 0
  %45 = load float, float* %44, align 16, !tbaa !2
  %46 = and i64 %43, 1
  %47 = icmp eq i64 %41, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %40
  %49 = sub i64 %43, %46
  br label %68

50:                                               ; preds = %64
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 19500
  br i1 %53, label %5, label %3

54:                                               ; preds = %68, %40
  %55 = phi float [ %45, %40 ], [ %81, %68 ]
  %56 = phi i64 [ 1, %40 ], [ %83, %68 ]
  %57 = icmp eq i64 %46, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %54
  %59 = fmul float %55, %55
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %56
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = fadd float %59, %61
  %63 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %56
  store float %62, float* %63, align 4, !tbaa !2
  br label %64

64:                                               ; preds = %54, %58
  %65 = add nuw nsw i64 %42, 1
  %66 = icmp eq i64 %65, 256
  %67 = add i64 %41, 1
  br i1 %66, label %50, label %40

68:                                               ; preds = %68, %48
  %69 = phi float [ %45, %48 ], [ %81, %68 ]
  %70 = phi i64 [ 1, %48 ], [ %83, %68 ]
  %71 = phi i64 [ %49, %48 ], [ %84, %68 ]
  %72 = fmul float %69, %69
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %70
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fadd float %72, %74
  %76 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %70
  store float %75, float* %76, align 4, !tbaa !2
  %77 = add nuw nsw i64 %70, 1
  %78 = fmul float %75, %75
  %79 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %77
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %78, %80
  %82 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %77
  store float %81, float* %82, align 4, !tbaa !2
  %83 = add nuw nsw i64 %70, 2
  %84 = add i64 %71, -2
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %54, label %68
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1232() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %40

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.202, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %3, %59
  %41 = phi i64 [ 0, %3 ], [ %60, %59 ]
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %41
  %46 = load float, float* %45, align 4, !tbaa !2
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %41, i64 %41
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %46, %48
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %41
  store float %49, float* %50, align 4, !tbaa !2
  %51 = add nuw nsw i64 %41, 1
  br label %52

52:                                               ; preds = %44, %40
  %53 = phi i64 [ %51, %44 ], [ %41, %40 ]
  %54 = icmp eq i64 %41, 255
  br i1 %54, label %59, label %62

55:                                               ; preds = %59
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 19500
  br i1 %58, label %5, label %3

59:                                               ; preds = %62, %52
  %60 = add nuw nsw i64 %41, 1
  %61 = icmp eq i64 %60, 256
  br i1 %61, label %55, label %40

62:                                               ; preds = %52, %62
  %63 = phi i64 [ %77, %62 ], [ %53, %52 ]
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %63, i64 %41
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %63, i64 %41
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fadd float %65, %67
  %69 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %63, i64 %41
  store float %68, float* %69, align 4, !tbaa !2
  %70 = add nuw nsw i64 %63, 1
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %70, i64 %41
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %70, i64 %41
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fadd float %72, %74
  %76 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %70, i64 %41
  store float %75, float* %76, align 4, !tbaa !2
  %77 = add nuw nsw i64 %63, 2
  %78 = icmp eq i64 %77, 256
  br i1 %78, label %59, label %62
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s233() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %45, %0
  %4 = phi i32 [ 0, %0 ], [ %47, %45 ]
  br label %41

5:                                                ; preds = %45
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.203, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %16, %15 ], [ 0, %5 ]
  %13 = phi float [ %38, %15 ], [ 0.000000e+00, %5 ]
  %14 = phi float [ %35, %15 ], [ 0.000000e+00, %5 ]
  br label %22

15:                                               ; preds = %22
  %16 = add nuw nsw i64 %12, 1
  %17 = icmp eq i64 %16, 256
  br i1 %17, label %18, label %11

18:                                               ; preds = %15
  %19 = fadd float %35, %38
  %20 = fpext float %19 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #16
  ret i32 0

22:                                               ; preds = %22, %11
  %23 = phi i64 [ 0, %11 ], [ %39, %22 ]
  %24 = phi float [ %13, %11 ], [ %38, %22 ]
  %25 = phi float [ %14, %11 ], [ %35, %22 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %23
  %27 = load float, float* %26, align 8, !tbaa !2
  %28 = fadd float %25, %27
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %23
  %30 = load float, float* %29, align 8, !tbaa !2
  %31 = fadd float %24, %30
  %32 = or i64 %23, 1
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %32
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = add nuw nsw i64 %23, 2
  %40 = icmp eq i64 %39, 256
  br i1 %40, label %15, label %22

41:                                               ; preds = %70, %3
  %42 = phi i64 [ 1, %3 ], [ %71, %70 ]
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  br label %51

45:                                               ; preds = %70
  %46 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %47 = add nuw nsw i32 %4, 1
  %48 = icmp eq i32 %47, 19500
  br i1 %48, label %5, label %3

49:                                               ; preds = %51
  %50 = add nsw i64 %42, -1
  br label %73

51:                                               ; preds = %51, %41
  %52 = phi float [ %44, %41 ], [ %66, %51 ]
  %53 = phi i64 [ 1, %41 ], [ %68, %51 ]
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %53, i64 %42
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fadd float %52, %55
  %57 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %53, i64 %42
  store float %56, float* %57, align 4, !tbaa !2
  %58 = add nuw nsw i64 %53, 1
  %59 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %58, i64 %42
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = fadd float %56, %60
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %58, i64 %42
  store float %61, float* %62, align 4, !tbaa !2
  %63 = add nuw nsw i64 %53, 2
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %63, i64 %42
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %61, %65
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %63, i64 %42
  store float %66, float* %67, align 4, !tbaa !2
  %68 = add nuw nsw i64 %53, 3
  %69 = icmp eq i64 %68, 256
  br i1 %69, label %49, label %51

70:                                               ; preds = %73
  %71 = add nuw nsw i64 %42, 1
  %72 = icmp eq i64 %71, 256
  br i1 %72, label %45, label %41

73:                                               ; preds = %83, %49
  %74 = phi i64 [ 1, %49 ], [ %90, %83 ]
  %75 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %74, i64 %50
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %74, i64 %42
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fadd float %76, %78
  %80 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %74, i64 %42
  store float %79, float* %80, align 4, !tbaa !2
  %81 = add nuw nsw i64 %74, 1
  %82 = icmp eq i64 %81, 256
  br i1 %82, label %70, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %81, i64 %50
  %85 = load float, float* %84, align 4, !tbaa !2
  %86 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %81, i64 %42
  %87 = load float, float* %86, align 4, !tbaa !2
  %88 = fadd float %85, %87
  %89 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %81, i64 %42
  store float %88, float* %89, align 4, !tbaa !2
  %90 = add nuw nsw i64 %74, 2
  br label %73
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s233p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %58, %0
  %4 = phi i32 [ 0, %0 ], [ %60, %58 ]
  br label %41

5:                                                ; preds = %58
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.204, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %16, %15 ], [ 0, %5 ]
  %13 = phi float [ %38, %15 ], [ 0.000000e+00, %5 ]
  %14 = phi float [ %35, %15 ], [ 0.000000e+00, %5 ]
  br label %22

15:                                               ; preds = %22
  %16 = add nuw nsw i64 %12, 1
  %17 = icmp eq i64 %16, 256
  br i1 %17, label %18, label %11

18:                                               ; preds = %15
  %19 = fadd float %35, %38
  %20 = fpext float %19 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #16
  ret i32 0

22:                                               ; preds = %22, %11
  %23 = phi i64 [ 0, %11 ], [ %39, %22 ]
  %24 = phi float [ %13, %11 ], [ %38, %22 ]
  %25 = phi float [ %14, %11 ], [ %35, %22 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %23
  %27 = load float, float* %26, align 8, !tbaa !2
  %28 = fadd float %25, %27
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %23
  %30 = load float, float* %29, align 8, !tbaa !2
  %31 = fadd float %24, %30
  %32 = or i64 %23, 1
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %32
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = add nuw nsw i64 %23, 2
  %40 = icmp eq i64 %39, 256
  br i1 %40, label %15, label %22

41:                                               ; preds = %83, %3
  %42 = phi i64 [ 1, %3 ], [ %84, %83 ]
  %43 = add nsw i64 %42, -1
  br label %44

44:                                               ; preds = %105, %41
  %45 = phi i64 [ 0, %41 ], [ %116, %105 ]
  %46 = or i64 %45, 1
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 %46
  %48 = bitcast float* %47 to <4 x float>*
  %49 = load <4 x float>, <4 x float>* %48, align 4, !tbaa !2
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 %46
  %51 = bitcast float* %50 to <4 x float>*
  %52 = load <4 x float>, <4 x float>* %51, align 4, !tbaa !2
  %53 = fadd <4 x float> %49, %52
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %46
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 4, !tbaa !2
  %56 = or i64 %45, 4
  %57 = icmp eq i64 %56, 252
  br i1 %57, label %62, label %105, !llvm.loop !392

58:                                               ; preds = %83
  %59 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %60 = add nuw nsw i32 %4, 1
  %61 = icmp eq i32 %60, 19500
  br i1 %61, label %5, label %3

62:                                               ; preds = %44
  %63 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 253
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 253
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %64, %66
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 253
  store float %67, float* %68, align 4, !tbaa !2
  %69 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 254
  %70 = load float, float* %69, align 8, !tbaa !2
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 254
  %72 = load float, float* %71, align 8, !tbaa !2
  %73 = fadd float %70, %72
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 254
  store float %73, float* %74, align 8, !tbaa !2
  %75 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 255
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 255
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fadd float %76, %78
  %80 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 255
  store float %79, float* %80, align 4, !tbaa !2
  %81 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 0
  %82 = load float, float* %81, align 16, !tbaa !2
  br label %86

83:                                               ; preds = %86
  %84 = add nuw nsw i64 %42, 1
  %85 = icmp eq i64 %84, 256
  br i1 %85, label %58, label %41

86:                                               ; preds = %86, %62
  %87 = phi float [ %82, %62 ], [ %101, %86 ]
  %88 = phi i64 [ 1, %62 ], [ %103, %86 ]
  %89 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 %88
  %90 = load float, float* %89, align 4, !tbaa !2
  %91 = fadd float %87, %90
  %92 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %88
  store float %91, float* %92, align 4, !tbaa !2
  %93 = add nuw nsw i64 %88, 1
  %94 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 %93
  %95 = load float, float* %94, align 4, !tbaa !2
  %96 = fadd float %91, %95
  %97 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %93
  store float %96, float* %97, align 4, !tbaa !2
  %98 = add nuw nsw i64 %88, 2
  %99 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 %98
  %100 = load float, float* %99, align 4, !tbaa !2
  %101 = fadd float %96, %100
  %102 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %98
  store float %101, float* %102, align 4, !tbaa !2
  %103 = add nuw nsw i64 %88, 3
  %104 = icmp eq i64 %103, 256
  br i1 %104, label %83, label %86

105:                                              ; preds = %44
  %106 = or i64 %45, 5
  %107 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 %106
  %108 = bitcast float* %107 to <4 x float>*
  %109 = load <4 x float>, <4 x float>* %108, align 4, !tbaa !2
  %110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 %106
  %111 = bitcast float* %110 to <4 x float>*
  %112 = load <4 x float>, <4 x float>* %111, align 4, !tbaa !2
  %113 = fadd <4 x float> %109, %112
  %114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %106
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %113, <4 x float>* %115, align 4, !tbaa !2
  %116 = add nuw nsw i64 %45, 8
  br label %44
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2233() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %45, %0
  %4 = phi i32 [ 0, %0 ], [ %47, %45 ]
  br label %41

5:                                                ; preds = %45
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.205, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %16, %15 ], [ 0, %5 ]
  %13 = phi float [ %38, %15 ], [ 0.000000e+00, %5 ]
  %14 = phi float [ %35, %15 ], [ 0.000000e+00, %5 ]
  br label %22

15:                                               ; preds = %22
  %16 = add nuw nsw i64 %12, 1
  %17 = icmp eq i64 %16, 256
  br i1 %17, label %18, label %11

18:                                               ; preds = %15
  %19 = fadd float %35, %38
  %20 = fpext float %19 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #16
  ret i32 0

22:                                               ; preds = %22, %11
  %23 = phi i64 [ 0, %11 ], [ %39, %22 ]
  %24 = phi float [ %13, %11 ], [ %38, %22 ]
  %25 = phi float [ %14, %11 ], [ %35, %22 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %23
  %27 = load float, float* %26, align 8, !tbaa !2
  %28 = fadd float %25, %27
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %23
  %30 = load float, float* %29, align 8, !tbaa !2
  %31 = fadd float %24, %30
  %32 = or i64 %23, 1
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %32
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = add nuw nsw i64 %23, 2
  %40 = icmp eq i64 %39, 256
  br i1 %40, label %15, label %22

41:                                               ; preds = %84, %3
  %42 = phi i64 [ 1, %3 ], [ %103, %84 ]
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  br label %65

45:                                               ; preds = %84
  %46 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %47 = add nuw nsw i32 %4, 1
  %48 = icmp eq i32 %47, 19500
  br i1 %48, label %5, label %3

49:                                               ; preds = %65
  %50 = add nsw i64 %42, -1
  br label %51

51:                                               ; preds = %105, %49
  %52 = phi i64 [ 0, %49 ], [ %116, %105 ]
  %53 = or i64 %52, 1
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %50, i64 %53
  %55 = bitcast float* %54 to <4 x float>*
  %56 = load <4 x float>, <4 x float>* %55, align 4, !tbaa !2
  %57 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 %53
  %58 = bitcast float* %57 to <4 x float>*
  %59 = load <4 x float>, <4 x float>* %58, align 4, !tbaa !2
  %60 = fadd <4 x float> %56, %59
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %53
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> %60, <4 x float>* %62, align 4, !tbaa !2
  %63 = or i64 %52, 4
  %64 = icmp eq i64 %63, 252
  br i1 %64, label %84, label %105, !llvm.loop !393

65:                                               ; preds = %65, %41
  %66 = phi float [ %44, %41 ], [ %80, %65 ]
  %67 = phi i64 [ 1, %41 ], [ %82, %65 ]
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %67, i64 %42
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %66, %69
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %67, i64 %42
  store float %70, float* %71, align 4, !tbaa !2
  %72 = add nuw nsw i64 %67, 1
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %72, i64 %42
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fadd float %70, %74
  %76 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %72, i64 %42
  store float %75, float* %76, align 4, !tbaa !2
  %77 = add nuw nsw i64 %67, 2
  %78 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %77, i64 %42
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fadd float %75, %79
  %81 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %77, i64 %42
  store float %80, float* %81, align 4, !tbaa !2
  %82 = add nuw nsw i64 %67, 3
  %83 = icmp eq i64 %82, 256
  br i1 %83, label %49, label %65

84:                                               ; preds = %51
  %85 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %50, i64 253
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 253
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = fadd float %86, %88
  %90 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 253
  store float %89, float* %90, align 4, !tbaa !2
  %91 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %50, i64 254
  %92 = load float, float* %91, align 8, !tbaa !2
  %93 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 254
  %94 = load float, float* %93, align 8, !tbaa !2
  %95 = fadd float %92, %94
  %96 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 254
  store float %95, float* %96, align 8, !tbaa !2
  %97 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %50, i64 255
  %98 = load float, float* %97, align 4, !tbaa !2
  %99 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 255
  %100 = load float, float* %99, align 4, !tbaa !2
  %101 = fadd float %98, %100
  %102 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 255
  store float %101, float* %102, align 4, !tbaa !2
  %103 = add nuw nsw i64 %42, 1
  %104 = icmp eq i64 %103, 256
  br i1 %104, label %45, label %41

105:                                              ; preds = %51
  %106 = or i64 %52, 5
  %107 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %50, i64 %106
  %108 = bitcast float* %107 to <4 x float>*
  %109 = load <4 x float>, <4 x float>* %108, align 4, !tbaa !2
  %110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 %106
  %111 = bitcast float* %110 to <4 x float>*
  %112 = load <4 x float>, <4 x float>* %111, align 4, !tbaa !2
  %113 = fadd <4 x float> %109, %112
  %114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %106
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %113, <4 x float>* %115, align 4, !tbaa !2
  %116 = add nuw nsw i64 %52, 8
  br label %51
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s235() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %77, %0
  %4 = phi i32 [ 0, %0 ], [ %79, %77 ]
  br label %81

5:                                                ; preds = %77
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.206, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11, %50
  %48 = phi i64 [ %51, %50 ], [ 0, %11 ]
  %49 = phi float [ %74, %50 ], [ 0.000000e+00, %11 ]
  br label %57

50:                                               ; preds = %57
  %51 = add nuw nsw i64 %48, 1
  %52 = icmp eq i64 %51, 256
  br i1 %52, label %53, label %47

53:                                               ; preds = %50
  %54 = fadd float %44, %74
  %55 = fpext float %54 to double
  %56 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %55) #16
  ret i32 0

57:                                               ; preds = %57, %47
  %58 = phi i64 [ 0, %47 ], [ %75, %57 ]
  %59 = phi float [ %49, %47 ], [ %74, %57 ]
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %58
  %61 = load float, float* %60, align 16, !tbaa !2
  %62 = fadd float %59, %61
  %63 = or i64 %58, 1
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %58, 2
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %67
  %69 = load float, float* %68, align 8, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %58, 3
  %72 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %70, %73
  %75 = add nuw nsw i64 %58, 4
  %76 = icmp eq i64 %75, 256
  br i1 %76, label %50, label %57

77:                                               ; preds = %93
  %78 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %79 = add nuw nsw i32 %4, 1
  %80 = icmp eq i32 %79, 39000
  br i1 %80, label %5, label %3

81:                                               ; preds = %93, %3
  %82 = phi i64 [ 0, %3 ], [ %94, %93 ]
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %82
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %82
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fmul float %84, %86
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %89 = load float, float* %88, align 4, !tbaa !2
  %90 = fadd float %89, %87
  store float %90, float* %88, align 4, !tbaa !2
  %91 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %82
  %92 = load float, float* %91, align 4, !tbaa !2
  br label %96

93:                                               ; preds = %96
  %94 = add nuw nsw i64 %82, 1
  %95 = icmp eq i64 %94, 256
  br i1 %95, label %77, label %81

96:                                               ; preds = %96, %81
  %97 = phi float [ %92, %81 ], [ %114, %96 ]
  %98 = phi i64 [ 1, %81 ], [ %116, %96 ]
  %99 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %98, i64 %82
  %100 = load float, float* %99, align 4, !tbaa !2
  %101 = fmul float %90, %100
  %102 = fadd float %97, %101
  %103 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %98, i64 %82
  store float %102, float* %103, align 4, !tbaa !2
  %104 = add nuw nsw i64 %98, 1
  %105 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %104, i64 %82
  %106 = load float, float* %105, align 4, !tbaa !2
  %107 = fmul float %90, %106
  %108 = fadd float %102, %107
  %109 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %104, i64 %82
  store float %108, float* %109, align 4, !tbaa !2
  %110 = add nuw nsw i64 %98, 2
  %111 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %110, i64 %82
  %112 = load float, float* %111, align 4, !tbaa !2
  %113 = fmul float %90, %112
  %114 = fadd float %108, %113
  %115 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %110, i64 %82
  store float %114, float* %115, align 4, !tbaa !2
  %116 = add nuw nsw i64 %98, 3
  %117 = icmp eq i64 %116, 256
  br i1 %117, label %93, label %96
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s241() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.207, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %59
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 100000
  br i1 %58, label %5, label %3

59:                                               ; preds = %76, %3
  %60 = phi i64 [ 0, %3 ], [ %86, %76 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %64 = load float, float* %63, align 8, !tbaa !2
  %65 = fmul float %62, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %67 = load float, float* %66, align 8, !tbaa !2
  %68 = fmul float %65, %67
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  store float %68, float* %69, align 8, !tbaa !2
  %70 = or i64 %60, 1
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fmul float %68, %72
  %74 = fmul float %67, %73
  store float %74, float* %61, align 8, !tbaa !2
  %75 = icmp eq i64 %70, 31999
  br i1 %75, label %55, label %76

76:                                               ; preds = %59
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %70
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %70
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fmul float %78, %80
  %82 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %70
  %83 = load float, float* %82, align 4, !tbaa !2
  %84 = fmul float %81, %83
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  store float %84, float* %85, align 4, !tbaa !2
  %86 = add nuw nsw i64 %60, 2
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  %88 = load float, float* %87, align 8, !tbaa !2
  %89 = fmul float %84, %88
  %90 = fmul float %83, %89
  store float %90, float* %77, align 4, !tbaa !2
  br label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s242(float %0, float %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0))
  %4 = tail call i64 @clock() #16
  br label %5

5:                                                ; preds = %53, %2
  %6 = phi i32 [ 0, %2 ], [ %55, %53 ]
  %7 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  br label %57

8:                                                ; preds = %53
  %9 = tail call i64 @clock() #16
  %10 = sub nsw i64 %9, %4
  %11 = sitofp i64 %10 to double
  %12 = fdiv double %11, 1.000000e+06
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.208, i64 0, i64 0), double %12)
  br label %14

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %48, %14 ]
  %16 = phi float [ 0.000000e+00, %8 ], [ %47, %14 ]
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15
  %18 = load float, float* %17, align 16, !tbaa !2
  %19 = fadd float %16, %18
  %20 = or i64 %15, 1
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %20
  %22 = load float, float* %21, align 4, !tbaa !2
  %23 = fadd float %19, %22
  %24 = or i64 %15, 2
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  %26 = load float, float* %25, align 8, !tbaa !2
  %27 = fadd float %23, %26
  %28 = or i64 %15, 3
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %27, %30
  %32 = or i64 %15, 4
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 16, !tbaa !2
  %35 = fadd float %31, %34
  %36 = or i64 %15, 5
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %35, %38
  %40 = or i64 %15, 6
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 8, !tbaa !2
  %43 = fadd float %39, %42
  %44 = or i64 %15, 7
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 4, !tbaa !2
  %47 = fadd float %43, %46
  %48 = add nuw nsw i64 %15, 8
  %49 = icmp eq i64 %48, 32000
  br i1 %49, label %50, label %14

50:                                               ; preds = %14
  %51 = fpext float %47 to double
  %52 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %51) #16
  ret i32 0

53:                                               ; preds = %57
  %54 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %55 = add nuw nsw i32 %6, 1
  %56 = icmp eq i32 %55, 10000
  br i1 %56, label %8, label %5

57:                                               ; preds = %74, %5
  %58 = phi float [ %7, %5 ], [ %85, %74 ]
  %59 = phi i64 [ 1, %5 ], [ %87, %74 ]
  %60 = fadd float %58, %0
  %61 = fadd float %60, %1
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %59
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fadd float %63, %61
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %59
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %66, %64
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %59
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %69, %67
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  store float %70, float* %71, align 4, !tbaa !2
  %72 = add nuw nsw i64 %59, 1
  %73 = icmp eq i64 %72, 32000
  br i1 %73, label %53, label %74

74:                                               ; preds = %57
  %75 = fadd float %70, %0
  %76 = fadd float %75, %1
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %72
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fadd float %78, %76
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %72
  %81 = load float, float* %80, align 4, !tbaa !2
  %82 = fadd float %81, %79
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %72
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = fadd float %84, %82
  %86 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  store float %85, float* %86, align 4, !tbaa !2
  %87 = add nuw nsw i64 %59, 2
  br label %57
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s243() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %84
  %4 = phi i32 [ 0, %0 ], [ %119, %84 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %32, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = fmul <4 x float> %12, %15
  %17 = fadd <4 x float> %9, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !2
  %22 = fmul <4 x float> %15, %21
  %23 = fadd <4 x float> %17, %22
  %24 = bitcast float* %7 to <4 x float>*
  store <4 x float> %23, <4 x float>* %24, align 16, !tbaa !2
  %25 = or i64 %6, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !2
  %29 = fmul <4 x float> %15, %28
  %30 = fadd <4 x float> %23, %29
  %31 = bitcast float* %18 to <4 x float>*
  store <4 x float> %30, <4 x float>* %31, align 16, !tbaa !2
  %32 = add i64 %6, 4
  %33 = icmp eq i64 %32, 31996
  br i1 %33, label %84, label %5, !llvm.loop !394

34:                                               ; preds = %84
  %35 = tail call i64 @clock() #16
  %36 = sub nsw i64 %35, %2
  %37 = sitofp i64 %36 to double
  %38 = fdiv double %37, 1.000000e+06
  %39 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.209, i64 0, i64 0), double %38)
  br label %40

40:                                               ; preds = %40, %34
  %41 = phi i64 [ 0, %34 ], [ %78, %40 ]
  %42 = phi float [ 0.000000e+00, %34 ], [ %77, %40 ]
  %43 = phi float [ 0.000000e+00, %34 ], [ %74, %40 ]
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %43, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %41, 1
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %52 = load float, float* %51, align 4, !tbaa !2
  %53 = fadd float %46, %52
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %50
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fadd float %49, %55
  %57 = add nuw nsw i64 %41, 2
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 4, !tbaa !2
  %60 = fadd float %53, %59
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %57
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fadd float %56, %62
  %64 = add nuw nsw i64 %41, 3
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %60, %66
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %64
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %63, %69
  %71 = add nuw nsw i64 %41, 4
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %67, %73
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %71
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fadd float %70, %76
  %78 = add nuw nsw i64 %41, 5
  %79 = icmp eq i64 %78, 32000
  br i1 %79, label %80, label %40

80:                                               ; preds = %40
  %81 = fadd float %74, %77
  %82 = fpext float %81 to double
  %83 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %82) #16
  ret i32 0

84:                                               ; preds = %5
  %85 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %86 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31996), align 16, !tbaa !2
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31996), align 16, !tbaa !2
  %88 = fmul float %86, %87
  %89 = fadd float %85, %88
  %90 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31996), align 16, !tbaa !2
  %91 = fmul float %87, %90
  %92 = fadd float %89, %91
  store float %92, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %94 = fmul float %87, %93
  %95 = fadd float %92, %94
  store float %95, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %96 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %97 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31997), align 4, !tbaa !2
  %98 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31997), align 4, !tbaa !2
  %99 = fmul float %97, %98
  %100 = fadd float %96, %99
  %101 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31997), align 4, !tbaa !2
  %102 = fmul float %98, %101
  %103 = fadd float %100, %102
  store float %103, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %104 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %105 = fmul float %98, %104
  %106 = fadd float %103, %105
  store float %106, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %107 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %108 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31998), align 8, !tbaa !2
  %109 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31998), align 8, !tbaa !2
  %110 = fmul float %108, %109
  %111 = fadd float %107, %110
  %112 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31998), align 8, !tbaa !2
  %113 = fmul float %109, %112
  %114 = fadd float %111, %113
  store float %114, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %115 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %116 = fmul float %109, %115
  %117 = fadd float %114, %116
  store float %117, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %118 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %119 = add nuw nsw i32 %4, 1
  %120 = icmp eq i32 %119, 50000
  br i1 %120, label %34, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s244() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.210, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %59
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 50000
  br i1 %58, label %5, label %3

59:                                               ; preds = %59, %3
  %60 = phi i64 [ 0, %3 ], [ %71, %59 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fmul float %64, %66
  %68 = fadd float %62, %67
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  store float %68, float* %69, align 4, !tbaa !2
  %70 = fadd float %62, %64
  store float %70, float* %61, align 4, !tbaa !2
  %71 = add nuw nsw i64 %60, 1
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fmul float %66, %73
  %75 = fadd float %70, %74
  store float %75, float* %72, align 4, !tbaa !2
  %76 = icmp eq i64 %71, 31999
  br i1 %76, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1244() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.211, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %59
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 50000
  br i1 %58, label %5, label %3

59:                                               ; preds = %59, %3
  %60 = phi i64 [ 0, %3 ], [ %71, %59 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fmul float %64, %64
  %66 = fadd float %62, %65
  %67 = fmul float %62, %62
  %68 = fadd float %67, %66
  %69 = fadd float %64, %68
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  store float %69, float* %70, align 4, !tbaa !2
  %71 = add nuw nsw i64 %60, 1
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %73, %69
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  store float %74, float* %75, align 4, !tbaa !2
  %76 = icmp eq i64 %71, 31999
  br i1 %76, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2244() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %75
  %4 = phi i32 [ 0, %0 ], [ %92, %75 ]
  br label %5

5:                                                ; preds = %94, %3
  %6 = phi i64 [ 0, %3 ], [ %111, %94 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fadd <4 x float> %9, %12
  %14 = or i64 %6, 1
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %13, <4 x float>* %16, align 4, !tbaa !2
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fadd <4 x float> %9, %19
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 16, !tbaa !2
  %23 = or i64 %6, 4
  %24 = icmp eq i64 %23, 31996
  br i1 %24, label %75, label %94, !llvm.loop !395

25:                                               ; preds = %75
  %26 = tail call i64 @clock() #16
  %27 = sub nsw i64 %26, %2
  %28 = sitofp i64 %27 to double
  %29 = fdiv double %28, 1.000000e+06
  %30 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.212, i64 0, i64 0), double %29)
  br label %31

31:                                               ; preds = %31, %25
  %32 = phi i64 [ 0, %25 ], [ %69, %31 ]
  %33 = phi float [ 0.000000e+00, %25 ], [ %68, %31 ]
  %34 = phi float [ 0.000000e+00, %25 ], [ %65, %31 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = fadd float %33, %39
  %41 = add nuw nsw i64 %32, 1
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %37, %43
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  %46 = load float, float* %45, align 4, !tbaa !2
  %47 = fadd float %40, %46
  %48 = add nuw nsw i64 %32, 2
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = fadd float %44, %50
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %48
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = fadd float %47, %53
  %55 = add nuw nsw i64 %32, 3
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fadd float %51, %57
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = fadd float %54, %60
  %62 = add nuw nsw i64 %32, 4
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %58, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fadd float %61, %67
  %69 = add nuw nsw i64 %32, 5
  %70 = icmp eq i64 %69, 32000
  br i1 %70, label %71, label %31

71:                                               ; preds = %31
  %72 = fadd float %65, %68
  %73 = fpext float %72 to double
  %74 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %73) #16
  ret i32 0

75:                                               ; preds = %5
  %76 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %77 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31996), align 16, !tbaa !2
  %78 = fadd float %76, %77
  store float %78, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %79 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31996), align 16, !tbaa !2
  %80 = fadd float %76, %79
  store float %80, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !2
  %81 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %82 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31997), align 4, !tbaa !2
  %83 = fadd float %81, %82
  store float %83, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31997), align 4, !tbaa !2
  %85 = fadd float %81, %84
  store float %85, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %86 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31998), align 8, !tbaa !2
  %88 = fadd float %86, %87
  store float %88, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31998), align 8, !tbaa !2
  %90 = fadd float %86, %89
  store float %90, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %91 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %92 = add nuw nsw i32 %4, 1
  %93 = icmp eq i32 %92, 50000
  br i1 %93, label %25, label %3

94:                                               ; preds = %5
  %95 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %96 = bitcast float* %95 to <4 x float>*
  %97 = load <4 x float>, <4 x float>* %96, align 16, !tbaa !2
  %98 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %23
  %99 = bitcast float* %98 to <4 x float>*
  %100 = load <4 x float>, <4 x float>* %99, align 16, !tbaa !2
  %101 = fadd <4 x float> %97, %100
  %102 = or i64 %6, 5
  %103 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %102
  %104 = bitcast float* %103 to <4 x float>*
  store <4 x float> %101, <4 x float>* %104, align 4, !tbaa !2
  %105 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %106 = bitcast float* %105 to <4 x float>*
  %107 = load <4 x float>, <4 x float>* %106, align 16, !tbaa !2
  %108 = fadd <4 x float> %97, %107
  %109 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %110 = bitcast float* %109 to <4 x float>*
  store <4 x float> %108, <4 x float>* %110, align 16, !tbaa !2
  %111 = add nuw nsw i64 %6, 8
  br label %5
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s251() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %82
  %4 = phi i32 [ 0, %0 ], [ %84, %82 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %35, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !2
  %22 = getelementptr inbounds float, float* %19, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !2
  %25 = fmul <4 x float> %15, %21
  %26 = fmul <4 x float> %18, %24
  %27 = fadd <4 x float> %9, %25
  %28 = fadd <4 x float> %12, %26
  %29 = fmul <4 x float> %27, %27
  %30 = fmul <4 x float> %28, %28
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %29, <4 x float>* %32, align 16, !tbaa !2
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %30, <4 x float>* %34, align 16, !tbaa !2
  %35 = add i64 %6, 8
  %36 = icmp eq i64 %35, 32000
  br i1 %36, label %82, label %5, !llvm.loop !396

37:                                               ; preds = %82
  %38 = tail call i64 @clock() #16
  %39 = sub nsw i64 %38, %2
  %40 = sitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  %42 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.213, i64 0, i64 0), double %41)
  br label %43

43:                                               ; preds = %43, %37
  %44 = phi i64 [ 0, %37 ], [ %77, %43 ]
  %45 = phi float [ 0.000000e+00, %37 ], [ %76, %43 ]
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %47 = load float, float* %46, align 16, !tbaa !2
  %48 = fadd float %45, %47
  %49 = or i64 %44, 1
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !2
  %52 = fadd float %48, %51
  %53 = or i64 %44, 2
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = load float, float* %54, align 8, !tbaa !2
  %56 = fadd float %52, %55
  %57 = or i64 %44, 3
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 4, !tbaa !2
  %60 = fadd float %56, %59
  %61 = or i64 %44, 4
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 16, !tbaa !2
  %64 = fadd float %60, %63
  %65 = or i64 %44, 5
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fadd float %64, %67
  %69 = or i64 %44, 6
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fadd float %68, %71
  %73 = or i64 %44, 7
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fadd float %72, %75
  %77 = add nuw nsw i64 %44, 8
  %78 = icmp eq i64 %77, 32000
  br i1 %78, label %79, label %43

79:                                               ; preds = %43
  %80 = fpext float %76 to double
  %81 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %80) #16
  ret i32 0

82:                                               ; preds = %5
  %83 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %84 = add nuw nsw i32 %4, 1
  %85 = icmp eq i32 %84, 200000
  br i1 %85, label %37, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1251() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %95
  %4 = phi i32 [ 0, %0 ], [ %97, %95 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %48, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fadd <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fadd <4 x float> %16, %19
  %21 = bitcast float* %7 to <4 x float>*
  store <4 x float> %20, <4 x float>* %21, align 16, !tbaa !2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !2
  %25 = fmul <4 x float> %13, %24
  %26 = bitcast float* %14 to <4 x float>*
  store <4 x float> %25, <4 x float>* %26, align 16, !tbaa !2
  %27 = or i64 %6, 4
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %29 = bitcast float* %28 to <4 x float>*
  %30 = load <4 x float>, <4 x float>* %29, align 16, !tbaa !2
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %27
  %32 = bitcast float* %31 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 16, !tbaa !2
  %34 = fadd <4 x float> %30, %33
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !2
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 16, !tbaa !2
  %41 = fadd <4 x float> %37, %40
  %42 = bitcast float* %28 to <4 x float>*
  store <4 x float> %41, <4 x float>* %42, align 16, !tbaa !2
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %27
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 16, !tbaa !2
  %46 = fmul <4 x float> %34, %45
  %47 = bitcast float* %35 to <4 x float>*
  store <4 x float> %46, <4 x float>* %47, align 16, !tbaa !2
  %48 = add nuw nsw i64 %6, 8
  %49 = icmp eq i64 %48, 32000
  br i1 %49, label %95, label %5, !llvm.loop !397

50:                                               ; preds = %95
  %51 = tail call i64 @clock() #16
  %52 = sub nsw i64 %51, %2
  %53 = sitofp i64 %52 to double
  %54 = fdiv double %53, 1.000000e+06
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.214, i64 0, i64 0), double %54)
  br label %56

56:                                               ; preds = %56, %50
  %57 = phi i64 [ 0, %50 ], [ %90, %56 ]
  %58 = phi float [ 0.000000e+00, %50 ], [ %89, %56 ]
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %60 = load float, float* %59, align 16, !tbaa !2
  %61 = fadd float %58, %60
  %62 = or i64 %57, 1
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %61, %64
  %66 = or i64 %57, 2
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 8, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %57, 3
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %57, 4
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 16, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %57, 5
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %77, %80
  %82 = or i64 %57, 6
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 8, !tbaa !2
  %85 = fadd float %81, %84
  %86 = or i64 %57, 7
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = fadd float %85, %88
  %90 = add nuw nsw i64 %57, 8
  %91 = icmp eq i64 %90, 32000
  br i1 %91, label %92, label %56

92:                                               ; preds = %56
  %93 = fpext float %89 to double
  %94 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %93) #16
  ret i32 0

95:                                               ; preds = %5
  %96 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %97 = add nuw nsw i32 %4, 1
  %98 = icmp eq i32 %97, 200000
  br i1 %98, label %50, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2251() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.215, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 50000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %82, %54 ]
  %56 = phi float [ 0.000000e+00, %3 ], [ %78, %54 ]
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %55
  %58 = load float, float* %57, align 8, !tbaa !2
  %59 = fmul float %56, %58
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %59, float* %60, align 8, !tbaa !2
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %64 = load float, float* %63, align 8, !tbaa !2
  %65 = fadd float %62, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %55
  %67 = load float, float* %66, align 8, !tbaa !2
  %68 = fadd float %59, %67
  store float %68, float* %61, align 8, !tbaa !2
  %69 = or i64 %55, 1
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fmul float %65, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  store float %72, float* %73, align 4, !tbaa !2
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %69
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fadd float %75, %77
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %69
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %72, %80
  store float %81, float* %74, align 4, !tbaa !2
  %82 = add nuw nsw i64 %55, 2
  %83 = icmp eq i64 %82, 32000
  br i1 %83, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s3251() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %76, %0
  %4 = phi i32 [ 0, %0 ], [ %97, %76 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %6 = insertelement <4 x float> undef, float %5, i32 3
  br label %7

7:                                                ; preds = %99, %3
  %8 = phi i64 [ 0, %3 ], [ %119, %99 ]
  %9 = phi <4 x float> [ %6, %3 ], [ %106, %99 ]
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = fadd <4 x float> %12, %15
  %17 = shufflevector <4 x float> %9, <4 x float> %16, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %18 = or i64 %8, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = bitcast float* %19 to <4 x float>*
  store <4 x float> %16, <4 x float>* %20, align 4, !tbaa !2
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !2
  %24 = fmul <4 x float> %15, %23
  %25 = bitcast float* %10 to <4 x float>*
  store <4 x float> %24, <4 x float>* %25, align 16, !tbaa !2
  %26 = fmul <4 x float> %23, %17
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 16, !tbaa !2
  %29 = or i64 %8, 4
  %30 = icmp eq i64 %29, 31996
  br i1 %30, label %76, label %99, !llvm.loop !398

31:                                               ; preds = %76
  %32 = tail call i64 @clock() #16
  %33 = sub nsw i64 %32, %2
  %34 = sitofp i64 %33 to double
  %35 = fdiv double %34, 1.000000e+06
  %36 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.216, i64 0, i64 0), double %35)
  br label %37

37:                                               ; preds = %37, %31
  %38 = phi i64 [ 0, %31 ], [ %71, %37 ]
  %39 = phi float [ 0.000000e+00, %31 ], [ %70, %37 ]
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %41 = load float, float* %40, align 16, !tbaa !2
  %42 = fadd float %39, %41
  %43 = or i64 %38, 1
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %42, %45
  %47 = or i64 %38, 2
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 8, !tbaa !2
  %50 = fadd float %46, %49
  %51 = or i64 %38, 3
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = fadd float %50, %53
  %55 = or i64 %38, 4
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 16, !tbaa !2
  %58 = fadd float %54, %57
  %59 = or i64 %38, 5
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = fadd float %58, %61
  %63 = or i64 %38, 6
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = load float, float* %64, align 8, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %38, 7
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %66, %69
  %71 = add nuw nsw i64 %38, 8
  %72 = icmp eq i64 %71, 32000
  br i1 %72, label %73, label %37

73:                                               ; preds = %37
  %74 = fpext float %70 to double
  %75 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %74) #16
  ret i32 0

76:                                               ; preds = %7
  %77 = extractelement <4 x float> %16, i32 3
  %78 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %79 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31996), align 16, !tbaa !2
  %80 = fadd float %78, %79
  store float %80, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !2
  %81 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31996), align 16, !tbaa !2
  %82 = fmul float %79, %81
  store float %82, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !2
  %83 = fmul float %81, %77
  store float %83, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31996), align 16, !tbaa !2
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %85 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31997), align 4, !tbaa !2
  %86 = fadd float %84, %85
  store float %86, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !2
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31997), align 4, !tbaa !2
  %88 = fmul float %85, %87
  store float %88, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !2
  %89 = fmul float %87, %80
  store float %89, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31997), align 4, !tbaa !2
  %90 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %91 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31998), align 8, !tbaa !2
  %92 = fadd float %90, %91
  store float %92, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31998), align 8, !tbaa !2
  %94 = fmul float %91, %93
  store float %94, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %95 = fmul float %93, %86
  store float %95, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31998), align 8, !tbaa !2
  %96 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %97 = add nuw nsw i32 %4, 1
  %98 = icmp eq i32 %97, 50000
  br i1 %98, label %31, label %3

99:                                               ; preds = %7
  %100 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %101 = bitcast float* %100 to <4 x float>*
  %102 = load <4 x float>, <4 x float>* %101, align 16, !tbaa !2
  %103 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %29
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 16, !tbaa !2
  %106 = fadd <4 x float> %102, %105
  %107 = shufflevector <4 x float> %16, <4 x float> %106, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %108 = or i64 %8, 5
  %109 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %108
  %110 = bitcast float* %109 to <4 x float>*
  store <4 x float> %106, <4 x float>* %110, align 4, !tbaa !2
  %111 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %29
  %112 = bitcast float* %111 to <4 x float>*
  %113 = load <4 x float>, <4 x float>* %112, align 16, !tbaa !2
  %114 = fmul <4 x float> %105, %113
  %115 = bitcast float* %100 to <4 x float>*
  store <4 x float> %114, <4 x float>* %115, align 16, !tbaa !2
  %116 = fmul <4 x float> %113, %107
  %117 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %29
  %118 = bitcast float* %117 to <4 x float>*
  store <4 x float> %116, <4 x float>* %118, align 16, !tbaa !2
  %119 = add nuw nsw i64 %8, 8
  br label %7
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s252() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %100
  %4 = phi i32 [ 0, %0 ], [ %102, %100 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %53, %5 ]
  %7 = phi <4 x float> [ <float undef, float undef, float undef, float 0.000000e+00>, %3 ], [ %44, %5 ]
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 16, !tbaa !2
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fmul <4 x float> %10, %16
  %21 = fmul <4 x float> %13, %19
  %22 = shufflevector <4 x float> %7, <4 x float> %20, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %23 = shufflevector <4 x float> %20, <4 x float> %21, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %24 = fadd <4 x float> %22, %20
  %25 = fadd <4 x float> %23, %21
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %24, <4 x float>* %27, align 16, !tbaa !2
  %28 = getelementptr inbounds float, float* %26, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> %25, <4 x float>* %29, align 16, !tbaa !2
  %30 = or i64 %6, 8
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  %32 = bitcast float* %31 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 16, !tbaa !2
  %34 = getelementptr inbounds float, float* %31, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 16, !tbaa !2
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %30
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 16, !tbaa !2
  %40 = getelementptr inbounds float, float* %37, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16, !tbaa !2
  %43 = fmul <4 x float> %33, %39
  %44 = fmul <4 x float> %36, %42
  %45 = shufflevector <4 x float> %21, <4 x float> %43, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %46 = shufflevector <4 x float> %43, <4 x float> %44, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %47 = fadd <4 x float> %45, %43
  %48 = fadd <4 x float> %46, %44
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %50 = bitcast float* %49 to <4 x float>*
  store <4 x float> %47, <4 x float>* %50, align 16, !tbaa !2
  %51 = getelementptr inbounds float, float* %49, i64 4
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> %48, <4 x float>* %52, align 16, !tbaa !2
  %53 = add nuw nsw i64 %6, 16
  %54 = icmp eq i64 %53, 32000
  br i1 %54, label %100, label %5, !llvm.loop !399

55:                                               ; preds = %100
  %56 = tail call i64 @clock() #16
  %57 = sub nsw i64 %56, %2
  %58 = sitofp i64 %57 to double
  %59 = fdiv double %58, 1.000000e+06
  %60 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.217, i64 0, i64 0), double %59)
  br label %61

61:                                               ; preds = %61, %55
  %62 = phi i64 [ 0, %55 ], [ %95, %61 ]
  %63 = phi float [ 0.000000e+00, %55 ], [ %94, %61 ]
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %65 = load float, float* %64, align 16, !tbaa !2
  %66 = fadd float %63, %65
  %67 = or i64 %62, 1
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %62, 2
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 8, !tbaa !2
  %74 = fadd float %70, %73
  %75 = or i64 %62, 3
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fadd float %74, %77
  %79 = or i64 %62, 4
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 16, !tbaa !2
  %82 = fadd float %78, %81
  %83 = or i64 %62, 5
  %84 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %83
  %85 = load float, float* %84, align 4, !tbaa !2
  %86 = fadd float %82, %85
  %87 = or i64 %62, 6
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %87
  %89 = load float, float* %88, align 8, !tbaa !2
  %90 = fadd float %86, %89
  %91 = or i64 %62, 7
  %92 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %91
  %93 = load float, float* %92, align 4, !tbaa !2
  %94 = fadd float %90, %93
  %95 = add nuw nsw i64 %62, 8
  %96 = icmp eq i64 %95, 32000
  br i1 %96, label %97, label %61

97:                                               ; preds = %61
  %98 = fpext float %94 to double
  %99 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %98) #16
  ret i32 0

100:                                              ; preds = %5
  %101 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %102 = add nuw nsw i32 %4, 1
  %103 = icmp eq i32 %102, 50000
  br i1 %103, label %55, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s253() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.218, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %74
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 50000
  br i1 %58, label %5, label %3

59:                                               ; preds = %74, %3
  %60 = phi i64 [ 0, %3 ], [ %75, %74 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fcmp ogt float %62, %64
  br i1 %65, label %66, label %74

66:                                               ; preds = %59
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fmul float %64, %68
  %70 = fsub float %62, %69
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %72, %70
  store float %73, float* %71, align 4, !tbaa !2
  store float %70, float* %61, align 4, !tbaa !2
  br label %74

74:                                               ; preds = %59, %66
  %75 = add nuw nsw i64 %60, 1
  %76 = icmp eq i64 %75, 32000
  br i1 %76, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s254() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %90
  %4 = phi i32 [ 0, %0 ], [ %92, %90 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !2
  %6 = insertelement <4 x float> undef, float %5, i32 3
  br label %7

7:                                                ; preds = %7, %3
  %8 = phi i64 [ 0, %3 ], [ %43, %7 ]
  %9 = phi <4 x float> [ %6, %3 ], [ %32, %7 ]
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds float, float* %10, i64 4
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = shufflevector <4 x float> %9, <4 x float> %12, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %17 = shufflevector <4 x float> %12, <4 x float> %15, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %18 = fadd <4 x float> %16, %12
  %19 = fadd <4 x float> %17, %15
  %20 = fmul <4 x float> %18, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %21 = fmul <4 x float> %19, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !2
  %26 = or i64 %8, 8
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !2
  %30 = getelementptr inbounds float, float* %27, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !2
  %33 = shufflevector <4 x float> %15, <4 x float> %29, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %34 = shufflevector <4 x float> %29, <4 x float> %32, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %35 = fadd <4 x float> %33, %29
  %36 = fadd <4 x float> %34, %32
  %37 = fmul <4 x float> %35, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %38 = fmul <4 x float> %36, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> %37, <4 x float>* %40, align 16, !tbaa !2
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> %38, <4 x float>* %42, align 16, !tbaa !2
  %43 = add nuw nsw i64 %8, 16
  %44 = icmp eq i64 %43, 32000
  br i1 %44, label %90, label %7, !llvm.loop !400

45:                                               ; preds = %90
  %46 = tail call i64 @clock() #16
  %47 = sub nsw i64 %46, %2
  %48 = sitofp i64 %47 to double
  %49 = fdiv double %48, 1.000000e+06
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.219, i64 0, i64 0), double %49)
  br label %51

51:                                               ; preds = %51, %45
  %52 = phi i64 [ 0, %45 ], [ %85, %51 ]
  %53 = phi float [ 0.000000e+00, %45 ], [ %84, %51 ]
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %55 = load float, float* %54, align 16, !tbaa !2
  %56 = fadd float %53, %55
  %57 = or i64 %52, 1
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 4, !tbaa !2
  %60 = fadd float %56, %59
  %61 = or i64 %52, 2
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 8, !tbaa !2
  %64 = fadd float %60, %63
  %65 = or i64 %52, 3
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fadd float %64, %67
  %69 = or i64 %52, 4
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %71 = load float, float* %70, align 16, !tbaa !2
  %72 = fadd float %68, %71
  %73 = or i64 %52, 5
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fadd float %72, %75
  %77 = or i64 %52, 6
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %77
  %79 = load float, float* %78, align 8, !tbaa !2
  %80 = fadd float %76, %79
  %81 = or i64 %52, 7
  %82 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !2
  %84 = fadd float %80, %83
  %85 = add nuw nsw i64 %52, 8
  %86 = icmp eq i64 %85, 32000
  br i1 %86, label %87, label %51

87:                                               ; preds = %51
  %88 = fpext float %84 to double
  %89 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %88) #16
  ret i32 0

90:                                               ; preds = %7
  %91 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %92 = add nuw nsw i32 %4, 1
  %93 = icmp eq i32 %92, 200000
  br i1 %93, label %45, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s255() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %48

3:                                                ; preds = %52
  %4 = tail call i64 @clock() #16
  %5 = sub nsw i64 %4, %2
  %6 = sitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.220, i64 0, i64 0), double %7)
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i64 [ 0, %3 ], [ %43, %9 ]
  %11 = phi float [ 0.000000e+00, %3 ], [ %42, %9 ]
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10
  %13 = load float, float* %12, align 16, !tbaa !2
  %14 = fadd float %11, %13
  %15 = or i64 %10, 1
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %14, %17
  %19 = or i64 %10, 2
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 8, !tbaa !2
  %22 = fadd float %18, %21
  %23 = or i64 %10, 3
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4, !tbaa !2
  %26 = fadd float %22, %25
  %27 = or i64 %10, 4
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 16, !tbaa !2
  %30 = fadd float %26, %29
  %31 = or i64 %10, 5
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %30, %33
  %35 = or i64 %10, 6
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 8, !tbaa !2
  %38 = fadd float %34, %37
  %39 = or i64 %10, 7
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %38, %41
  %43 = add nuw nsw i64 %10, 8
  %44 = icmp eq i64 %43, 32000
  br i1 %44, label %45, label %9

45:                                               ; preds = %9
  %46 = fpext float %42 to double
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %46) #16
  ret i32 0

48:                                               ; preds = %52, %0
  %49 = phi i32 [ 0, %0 ], [ %54, %52 ]
  %50 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  %51 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !2
  br label %56

52:                                               ; preds = %56
  %53 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %54 = add nuw nsw i32 %49, 1
  %55 = icmp eq i32 %54, 50000
  br i1 %55, label %3, label %48

56:                                               ; preds = %56, %48
  %57 = phi float [ %51, %48 ], [ %68, %56 ]
  %58 = phi i64 [ 0, %48 ], [ %73, %56 ]
  %59 = phi float [ %50, %48 ], [ %61, %56 ]
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %58
  %61 = load float, float* %60, align 8, !tbaa !2
  %62 = fadd float %57, %61
  %63 = fadd float %59, %62
  %64 = fmul float %63, 0x3FD54FDF40000000
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  store float %64, float* %65, align 8, !tbaa !2
  %66 = or i64 %58, 1
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fadd float %61, %68
  %70 = fadd float %57, %69
  %71 = fmul float %70, 0x3FD54FDF40000000
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  store float %71, float* %72, align 4, !tbaa !2
  %73 = add nuw nsw i64 %58, 2
  %74 = icmp eq i64 %73, 32000
  br i1 %74, label %52, label %56
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s256() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %80, %0
  %4 = phi i32 [ 0, %0 ], [ %82, %80 ]
  br label %77

5:                                                ; preds = %80
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.221, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11, %50
  %48 = phi i64 [ %51, %50 ], [ 0, %11 ]
  %49 = phi float [ %74, %50 ], [ 0.000000e+00, %11 ]
  br label %57

50:                                               ; preds = %57
  %51 = add nuw nsw i64 %48, 1
  %52 = icmp eq i64 %51, 256
  br i1 %52, label %53, label %47

53:                                               ; preds = %50
  %54 = fadd float %44, %74
  %55 = fpext float %54 to double
  %56 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %55) #16
  ret i32 0

57:                                               ; preds = %57, %47
  %58 = phi i64 [ 0, %47 ], [ %75, %57 ]
  %59 = phi float [ %49, %47 ], [ %74, %57 ]
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %58
  %61 = load float, float* %60, align 16, !tbaa !2
  %62 = fadd float %59, %61
  %63 = or i64 %58, 1
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %58, 2
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %67
  %69 = load float, float* %68, align 8, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %58, 3
  %72 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %70, %73
  %75 = add nuw nsw i64 %58, 4
  %76 = icmp eq i64 %75, 256
  br i1 %76, label %50, label %57

77:                                               ; preds = %84, %3
  %78 = phi i64 [ 0, %3 ], [ %85, %84 ]
  %79 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  br label %87

80:                                               ; preds = %84
  %81 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %82 = add nuw nsw i32 %4, 1
  %83 = icmp eq i32 %82, 1950
  br i1 %83, label %5, label %3

84:                                               ; preds = %87
  %85 = add nuw nsw i64 %78, 1
  %86 = icmp eq i64 %85, 256
  br i1 %86, label %80, label %77

87:                                               ; preds = %101, %77
  %88 = phi float [ %79, %77 ], [ %102, %101 ]
  %89 = phi i64 [ 1, %77 ], [ %111, %101 ]
  %90 = fsub float 1.000000e+00, %88
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %89
  store float %90, float* %91, align 4, !tbaa !2
  %92 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %89, i64 %78
  %93 = load float, float* %92, align 4, !tbaa !2
  %94 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %89
  %95 = load float, float* %94, align 4, !tbaa !2
  %96 = fmul float %93, %95
  %97 = fadd float %90, %96
  %98 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %89, i64 %78
  store float %97, float* %98, align 4, !tbaa !2
  %99 = add nuw nsw i64 %89, 1
  %100 = icmp eq i64 %99, 256
  br i1 %100, label %84, label %101

101:                                              ; preds = %87
  %102 = fsub float 1.000000e+00, %90
  %103 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %99
  store float %102, float* %103, align 4, !tbaa !2
  %104 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %99, i64 %78
  %105 = load float, float* %104, align 4, !tbaa !2
  %106 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %99
  %107 = load float, float* %106, align 4, !tbaa !2
  %108 = fmul float %105, %107
  %109 = fadd float %102, %108
  %110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %99, i64 %78
  store float %109, float* %110, align 4, !tbaa !2
  %111 = add nuw nsw i64 %89, 2
  br label %87
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s256p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %99, %0
  %4 = phi i32 [ 0, %0 ], [ %101, %99 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  br label %78

6:                                                ; preds = %99
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.222, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12, %51
  %49 = phi i64 [ %52, %51 ], [ 0, %12 ]
  %50 = phi float [ %75, %51 ], [ 0.000000e+00, %12 ]
  br label %58

51:                                               ; preds = %58
  %52 = add nuw nsw i64 %49, 1
  %53 = icmp eq i64 %52, 256
  br i1 %53, label %54, label %48

54:                                               ; preds = %51
  %55 = fadd float %45, %75
  %56 = fpext float %55 to double
  %57 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %56) #16
  ret i32 0

58:                                               ; preds = %58, %48
  %59 = phi i64 [ 0, %48 ], [ %76, %58 ]
  %60 = phi float [ %50, %48 ], [ %75, %58 ]
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 %59
  %62 = load float, float* %61, align 16, !tbaa !2
  %63 = fadd float %60, %62
  %64 = or i64 %59, 1
  %65 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = or i64 %59, 2
  %69 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 %68
  %70 = load float, float* %69, align 8, !tbaa !2
  %71 = fadd float %67, %70
  %72 = or i64 %59, 3
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 %72
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fadd float %71, %74
  %76 = add nuw nsw i64 %59, 4
  %77 = icmp eq i64 %76, 256
  br i1 %77, label %51, label %58

78:                                               ; preds = %78, %3
  %79 = phi float [ %5, %3 ], [ %93, %78 ]
  %80 = phi i64 [ 1, %3 ], [ %95, %78 ]
  %81 = fsub float 1.000000e+00, %79
  %82 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  store float %81, float* %82, align 4, !tbaa !2
  %83 = add nuw nsw i64 %80, 1
  %84 = fsub float 1.000000e+00, %81
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %83
  store float %84, float* %85, align 4, !tbaa !2
  %86 = add nuw nsw i64 %80, 2
  %87 = fsub float 1.000000e+00, %84
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  store float %87, float* %88, align 4, !tbaa !2
  %89 = add nuw nsw i64 %80, 3
  %90 = fsub float 1.000000e+00, %87
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %89
  store float %90, float* %91, align 4, !tbaa !2
  %92 = add nuw nsw i64 %80, 4
  %93 = fsub float 1.000000e+00, %90
  %94 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %92
  store float %93, float* %94, align 4, !tbaa !2
  %95 = add nuw nsw i64 %80, 5
  %96 = icmp eq i64 %95, 256
  br i1 %96, label %97, label %78

97:                                               ; preds = %78, %103
  %98 = phi i64 [ %104, %103 ], [ 0, %78 ]
  br label %106

99:                                               ; preds = %103
  %100 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %101 = add nuw nsw i32 %4, 1
  %102 = icmp eq i32 %101, 1950
  br i1 %102, label %6, label %3

103:                                              ; preds = %106
  %104 = add nuw nsw i64 %98, 1
  %105 = icmp eq i64 %104, 256
  br i1 %105, label %99, label %97

106:                                              ; preds = %119, %97
  %107 = phi i64 [ 1, %97 ], [ %129, %119 ]
  %108 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %107
  %109 = load float, float* %108, align 4, !tbaa !2
  %110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %107, i64 %98
  %111 = load float, float* %110, align 4, !tbaa !2
  %112 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %107
  %113 = load float, float* %112, align 4, !tbaa !2
  %114 = fmul float %111, %113
  %115 = fadd float %109, %114
  %116 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %107, i64 %98
  store float %115, float* %116, align 4, !tbaa !2
  %117 = add nuw nsw i64 %107, 1
  %118 = icmp eq i64 %117, 256
  br i1 %118, label %103, label %119

119:                                              ; preds = %106
  %120 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %117
  %121 = load float, float* %120, align 4, !tbaa !2
  %122 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %117, i64 %98
  %123 = load float, float* %122, align 4, !tbaa !2
  %124 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %117
  %125 = load float, float* %124, align 4, !tbaa !2
  %126 = fmul float %123, %125
  %127 = fadd float %121, %126
  %128 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %117, i64 %98
  store float %127, float* %128, align 4, !tbaa !2
  %129 = add nuw nsw i64 %107, 2
  br label %106
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s256pp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %143, %0
  %4 = phi i32 [ 0, %0 ], [ %145, %143 ]
  %5 = load i32, i32* bitcast ([32000 x float]* @a to i32*), align 16, !tbaa !2
  br label %78

6:                                                ; preds = %143
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.223, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12, %51
  %49 = phi i64 [ %52, %51 ], [ 0, %12 ]
  %50 = phi float [ %75, %51 ], [ 0.000000e+00, %12 ]
  br label %58

51:                                               ; preds = %58
  %52 = add nuw nsw i64 %49, 1
  %53 = icmp eq i64 %52, 256
  br i1 %53, label %54, label %48

54:                                               ; preds = %51
  %55 = fadd float %45, %75
  %56 = fpext float %55 to double
  %57 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %56) #16
  ret i32 0

58:                                               ; preds = %58, %48
  %59 = phi i64 [ 0, %48 ], [ %76, %58 ]
  %60 = phi float [ %50, %48 ], [ %75, %58 ]
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 %59
  %62 = load float, float* %61, align 16, !tbaa !2
  %63 = fadd float %60, %62
  %64 = or i64 %59, 1
  %65 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = or i64 %59, 2
  %69 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 %68
  %70 = load float, float* %69, align 8, !tbaa !2
  %71 = fadd float %67, %70
  %72 = or i64 %59, 3
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 %72
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fadd float %71, %74
  %76 = add nuw nsw i64 %59, 4
  %77 = icmp eq i64 %76, 256
  br i1 %77, label %51, label %58

78:                                               ; preds = %78, %3
  %79 = phi i32 [ %5, %3 ], [ %95, %78 ]
  %80 = phi i64 [ 0, %3 ], [ %93, %78 ]
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %82 = bitcast float* %81 to i32*
  store i32 %79, i32* %82, align 16, !tbaa !2
  %83 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %84 = fsub float 1.000000e+00, %83
  %85 = or i64 %80, 1
  %86 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %85
  store float %84, float* %86, align 4, !tbaa !2
  %87 = or i64 %80, 2
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %87
  store float %83, float* %88, align 8, !tbaa !2
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %90 = fsub float 1.000000e+00, %89
  %91 = or i64 %80, 3
  %92 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %91
  store float %90, float* %92, align 4, !tbaa !2
  %93 = add nuw nsw i64 %80, 4
  %94 = icmp ult i64 %80, 252
  %95 = bitcast float %89 to i32
  br i1 %94, label %78, label %96

96:                                               ; preds = %78, %147
  %97 = phi i64 [ %148, %147 ], [ 1, %78 ]
  %98 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %97
  %99 = load float, float* %98, align 4, !tbaa !2
  %100 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %97
  %101 = load float, float* %100, align 4, !tbaa !2
  %102 = insertelement <4 x float> undef, float %101, i32 0
  %103 = shufflevector <4 x float> %102, <4 x float> undef, <4 x i32> zeroinitializer
  %104 = insertelement <4 x float> undef, float %101, i32 0
  %105 = shufflevector <4 x float> %104, <4 x float> undef, <4 x i32> zeroinitializer
  %106 = insertelement <4 x float> undef, float %99, i32 0
  %107 = shufflevector <4 x float> %106, <4 x float> undef, <4 x i32> zeroinitializer
  %108 = insertelement <4 x float> undef, float %99, i32 0
  %109 = shufflevector <4 x float> %108, <4 x float> undef, <4 x i32> zeroinitializer
  br label %110

110:                                              ; preds = %110, %96
  %111 = phi i64 [ 0, %96 ], [ %141, %110 ]
  %112 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %97, i64 %111
  %113 = bitcast float* %112 to <4 x float>*
  %114 = load <4 x float>, <4 x float>* %113, align 16, !tbaa !2
  %115 = getelementptr inbounds float, float* %112, i64 4
  %116 = bitcast float* %115 to <4 x float>*
  %117 = load <4 x float>, <4 x float>* %116, align 16, !tbaa !2
  %118 = fmul <4 x float> %114, %103
  %119 = fmul <4 x float> %117, %105
  %120 = fadd <4 x float> %107, %118
  %121 = fadd <4 x float> %109, %119
  %122 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %97, i64 %111
  %123 = bitcast float* %122 to <4 x float>*
  store <4 x float> %120, <4 x float>* %123, align 16, !tbaa !2
  %124 = getelementptr inbounds float, float* %122, i64 4
  %125 = bitcast float* %124 to <4 x float>*
  store <4 x float> %121, <4 x float>* %125, align 16, !tbaa !2
  %126 = or i64 %111, 8
  %127 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %97, i64 %126
  %128 = bitcast float* %127 to <4 x float>*
  %129 = load <4 x float>, <4 x float>* %128, align 16, !tbaa !2
  %130 = getelementptr inbounds float, float* %127, i64 4
  %131 = bitcast float* %130 to <4 x float>*
  %132 = load <4 x float>, <4 x float>* %131, align 16, !tbaa !2
  %133 = fmul <4 x float> %129, %103
  %134 = fmul <4 x float> %132, %105
  %135 = fadd <4 x float> %107, %133
  %136 = fadd <4 x float> %109, %134
  %137 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %97, i64 %126
  %138 = bitcast float* %137 to <4 x float>*
  store <4 x float> %135, <4 x float>* %138, align 16, !tbaa !2
  %139 = getelementptr inbounds float, float* %137, i64 4
  %140 = bitcast float* %139 to <4 x float>*
  store <4 x float> %136, <4 x float>* %140, align 16, !tbaa !2
  %141 = add nuw nsw i64 %111, 16
  %142 = icmp eq i64 %141, 256
  br i1 %142, label %147, label %110, !llvm.loop !401

143:                                              ; preds = %147
  %144 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %145 = add nuw nsw i32 %4, 1
  %146 = icmp eq i32 %145, 1950
  br i1 %146, label %6, label %3

147:                                              ; preds = %110
  %148 = add nuw nsw i64 %97, 1
  %149 = icmp eq i64 %148, 256
  br i1 %149, label %143, label %96
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s257() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %83, %0
  %4 = phi i32 [ 0, %0 ], [ %85, %83 ]
  br label %77

5:                                                ; preds = %83
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.224, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11, %50
  %48 = phi i64 [ %51, %50 ], [ 0, %11 ]
  %49 = phi float [ %74, %50 ], [ 0.000000e+00, %11 ]
  br label %57

50:                                               ; preds = %57
  %51 = add nuw nsw i64 %48, 1
  %52 = icmp eq i64 %51, 256
  br i1 %52, label %53, label %47

53:                                               ; preds = %50
  %54 = fadd float %44, %74
  %55 = fpext float %54 to double
  %56 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %55) #16
  ret i32 0

57:                                               ; preds = %57, %47
  %58 = phi i64 [ 0, %47 ], [ %75, %57 ]
  %59 = phi float [ %49, %47 ], [ %74, %57 ]
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %58
  %61 = load float, float* %60, align 16, !tbaa !2
  %62 = fadd float %59, %61
  %63 = or i64 %58, 1
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %58, 2
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %67
  %69 = load float, float* %68, align 8, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %58, 3
  %72 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %48, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %70, %73
  %75 = add nuw nsw i64 %58, 4
  %76 = icmp eq i64 %75, 256
  br i1 %76, label %50, label %57

77:                                               ; preds = %87, %3
  %78 = phi i64 [ 1, %3 ], [ %88, %87 ]
  %79 = add nsw i64 %78, -1
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %82 = load float, float* %80, align 4, !tbaa !2
  br label %90

83:                                               ; preds = %87
  %84 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %85 = add nuw nsw i32 %4, 1
  %86 = icmp eq i32 %85, 1950
  br i1 %86, label %5, label %3

87:                                               ; preds = %90
  store float %101, float* %81, align 4, !tbaa !2
  %88 = add nuw nsw i64 %78, 1
  %89 = icmp eq i64 %88, 256
  br i1 %89, label %83, label %77

90:                                               ; preds = %90, %77
  %91 = phi i64 [ 0, %77 ], [ %105, %90 ]
  %92 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %91, i64 %78
  %93 = load float, float* %92, align 4, !tbaa !2
  %94 = fsub float %93, %82
  %95 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %91, i64 %78
  %96 = load float, float* %95, align 4, !tbaa !2
  %97 = fadd float %94, %96
  store float %97, float* %92, align 4, !tbaa !2
  %98 = or i64 %91, 1
  %99 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %98, i64 %78
  %100 = load float, float* %99, align 4, !tbaa !2
  %101 = fsub float %100, %82
  %102 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %98, i64 %78
  %103 = load float, float* %102, align 4, !tbaa !2
  %104 = fadd float %101, %103
  store float %104, float* %99, align 4, !tbaa !2
  %105 = add nuw nsw i64 %91, 2
  %106 = icmp eq i64 %105, 256
  br i1 %106, label %87, label %90
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s258() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.225, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %59
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 50000
  br i1 %58, label %5, label %3

59:                                               ; preds = %59, %3
  %60 = phi i64 [ 0, %3 ], [ %79, %59 ]
  %61 = phi float [ 0.000000e+00, %3 ], [ %68, %59 ]
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fcmp ogt float %63, 0.000000e+00
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fmul float %66, %66
  %68 = select i1 %64, float %67, float %61
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = fmul float %68, %70
  %72 = fadd float %71, %66
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  store float %72, float* %73, align 4, !tbaa !2
  %74 = fadd float %68, 1.000000e+00
  %75 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %60
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fmul float %74, %76
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %60
  store float %77, float* %78, align 4, !tbaa !2
  %79 = add nuw nsw i64 %60, 1
  %80 = icmp eq i64 %79, 256
  br i1 %80, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s261() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %56, %0
  %4 = phi i32 [ 0, %0 ], [ %58, %56 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !2
  br label %60

6:                                                ; preds = %56
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.226, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %50, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %49, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %46, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %21, %27
  %29 = add nuw nsw i64 %13, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = add nuw nsw i64 %13, 3
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %36
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %35, %41
  %43 = add nuw nsw i64 %13, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %43
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %13, 5
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %12

52:                                               ; preds = %12
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #16
  ret i32 0

56:                                               ; preds = %60
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %58 = add nuw nsw i32 %4, 1
  %59 = icmp eq i32 %58, 50000
  br i1 %59, label %6, label %3

60:                                               ; preds = %76, %3
  %61 = phi float [ %5, %3 ], [ %87, %76 ]
  %62 = phi i64 [ 1, %3 ], [ %88, %76 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %64, %66
  %68 = fadd float %67, %61
  store float %68, float* %63, align 4, !tbaa !2
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %62
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fmul float %70, %72
  store float %73, float* %69, align 4, !tbaa !2
  %74 = add nuw nsw i64 %62, 1
  %75 = icmp eq i64 %74, 32000
  br i1 %75, label %56, label %76

76:                                               ; preds = %60
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %74
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %78, %80
  %82 = fadd float %81, %73
  store float %82, float* %77, align 4, !tbaa !2
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %74
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %74
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fmul float %84, %86
  store float %87, float* %83, align 4, !tbaa !2
  %88 = add nuw nsw i64 %62, 2
  br label %60
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s271() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %88
  %4 = phi i32 [ 0, %0 ], [ %90, %88 ]
  br label %5

5:                                                ; preds = %40, %3
  %6 = phi i64 [ 0, %3 ], [ %41, %40 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = fcmp ogt <4 x float> %9, zeroinitializer
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !2
  %14 = fmul <4 x float> %9, %13
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !2
  %18 = fadd <4 x float> %17, %14
  %19 = extractelement <4 x i1> %10, i32 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %5
  %21 = extractelement <4 x float> %18, i32 0
  store float %21, float* %15, align 16, !tbaa !2
  br label %22

22:                                               ; preds = %20, %5
  %23 = extractelement <4 x i1> %10, i32 1
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = or i64 %6, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = extractelement <4 x float> %18, i32 1
  store float %27, float* %26, align 4, !tbaa !2
  br label %28

28:                                               ; preds = %24, %22
  %29 = extractelement <4 x i1> %10, i32 2
  br i1 %29, label %30, label %34

30:                                               ; preds = %28
  %31 = or i64 %6, 2
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = extractelement <4 x float> %18, i32 2
  store float %33, float* %32, align 8, !tbaa !2
  br label %34

34:                                               ; preds = %30, %28
  %35 = extractelement <4 x i1> %10, i32 3
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = or i64 %6, 3
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = extractelement <4 x float> %18, i32 3
  store float %39, float* %38, align 4, !tbaa !2
  br label %40

40:                                               ; preds = %36, %34
  %41 = add i64 %6, 4
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %88, label %5, !llvm.loop !402

43:                                               ; preds = %88
  %44 = tail call i64 @clock() #16
  %45 = sub nsw i64 %44, %2
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  %48 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.227, i64 0, i64 0), double %47)
  br label %49

49:                                               ; preds = %49, %43
  %50 = phi i64 [ 0, %43 ], [ %83, %49 ]
  %51 = phi float [ 0.000000e+00, %43 ], [ %82, %49 ]
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %53 = load float, float* %52, align 16, !tbaa !2
  %54 = fadd float %51, %53
  %55 = or i64 %50, 1
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fadd float %54, %57
  %59 = or i64 %50, 2
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = load float, float* %60, align 8, !tbaa !2
  %62 = fadd float %58, %61
  %63 = or i64 %50, 3
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %50, 4
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 16, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %50, 5
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %70, %73
  %75 = or i64 %50, 6
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  %77 = load float, float* %76, align 8, !tbaa !2
  %78 = fadd float %74, %77
  %79 = or i64 %50, 7
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 4, !tbaa !2
  %82 = fadd float %78, %81
  %83 = add nuw nsw i64 %50, 8
  %84 = icmp eq i64 %83, 32000
  br i1 %84, label %85, label %49

85:                                               ; preds = %49
  %86 = fpext float %82 to double
  %87 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %86) #16
  ret i32 0

88:                                               ; preds = %40
  %89 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %90 = add nuw nsw i32 %4, 1
  %91 = icmp eq i32 %90, 200000
  br i1 %91, label %43, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s272(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %56, %1
  %5 = phi i32 [ 0, %1 ], [ %58, %56 ]
  br label %60

6:                                                ; preds = %56
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %50, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %49, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %46, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %21, %27
  %29 = add nuw nsw i64 %13, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = add nuw nsw i64 %13, 3
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %35, %41
  %43 = add nuw nsw i64 %13, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %43
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %13, 5
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %12

52:                                               ; preds = %12
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #16
  ret i32 0

56:                                               ; preds = %78
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %58 = add nuw nsw i32 %5, 1
  %59 = icmp eq i32 %58, 50000
  br i1 %59, label %6, label %4

60:                                               ; preds = %78, %4
  %61 = phi i64 [ 0, %4 ], [ %79, %78 ]
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fcmp ult float %63, %0
  br i1 %64, label %78, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %61
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %61
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fmul float %67, %69
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %72, %70
  store float %73, float* %71, align 4, !tbaa !2
  %74 = fmul float %67, %67
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %61
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fadd float %74, %76
  store float %77, float* %75, align 4, !tbaa !2
  br label %78

78:                                               ; preds = %60, %65
  %79 = add nuw nsw i64 %61, 1
  %80 = icmp eq i64 %79, 32000
  br i1 %80, label %56, label %60
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s273() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %96
  %4 = phi i32 [ 0, %0 ], [ %98, %96 ]
  br label %5

5:                                                ; preds = %50, %3
  %6 = phi i64 [ 0, %3 ], [ %57, %50 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fmul <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = fadd <4 x float> %16, %13
  %18 = bitcast float* %14 to <4 x float>*
  store <4 x float> %17, <4 x float>* %18, align 16, !tbaa !2
  %19 = fcmp olt <4 x float> %17, zeroinitializer
  %20 = extractelement <4 x i1> %19, i32 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %5
  %22 = extractelement <4 x float> %13, i32 0
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  store float %25, float* %23, align 16, !tbaa !2
  br label %26

26:                                               ; preds = %21, %5
  %27 = extractelement <4 x i1> %19, i32 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %26
  %29 = extractelement <4 x float> %13, i32 1
  %30 = or i64 %6, 1
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  %32 = load float, float* %31, align 4, !tbaa !2
  %33 = fadd float %29, %32
  store float %33, float* %31, align 4, !tbaa !2
  br label %34

34:                                               ; preds = %28, %26
  %35 = extractelement <4 x i1> %19, i32 2
  br i1 %35, label %36, label %42

36:                                               ; preds = %34
  %37 = extractelement <4 x float> %13, i32 2
  %38 = or i64 %6, 2
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  store float %41, float* %39, align 8, !tbaa !2
  br label %42

42:                                               ; preds = %36, %34
  %43 = extractelement <4 x i1> %19, i32 3
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = extractelement <4 x float> %13, i32 3
  %46 = or i64 %6, 3
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %45, %48
  store float %49, float* %47, align 4, !tbaa !2
  br label %50

50:                                               ; preds = %44, %42
  %51 = fmul <4 x float> %9, %17
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %53 = bitcast float* %52 to <4 x float>*
  %54 = load <4 x float>, <4 x float>* %53, align 16, !tbaa !2
  %55 = fadd <4 x float> %51, %54
  %56 = bitcast float* %52 to <4 x float>*
  store <4 x float> %55, <4 x float>* %56, align 16, !tbaa !2
  %57 = add i64 %6, 4
  %58 = icmp eq i64 %57, 32000
  br i1 %58, label %96, label %5, !llvm.loop !403

59:                                               ; preds = %96
  %60 = tail call i64 @clock() #16
  %61 = sub nsw i64 %60, %2
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  %64 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.229, i64 0, i64 0), double %63)
  br label %65

65:                                               ; preds = %65, %59
  %66 = phi i64 [ 0, %59 ], [ %89, %65 ]
  %67 = phi float [ 0.000000e+00, %59 ], [ %88, %65 ]
  %68 = phi float [ 0.000000e+00, %59 ], [ %85, %65 ]
  %69 = phi float [ 0.000000e+00, %59 ], [ %82, %65 ]
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fadd float %69, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %66
  %74 = load float, float* %73, align 8, !tbaa !2
  %75 = fadd float %68, %74
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %66
  %77 = load float, float* %76, align 8, !tbaa !2
  %78 = fadd float %67, %77
  %79 = or i64 %66, 1
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 4, !tbaa !2
  %82 = fadd float %72, %81
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %79
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = fadd float %75, %84
  %86 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %79
  %87 = load float, float* %86, align 4, !tbaa !2
  %88 = fadd float %78, %87
  %89 = add nuw nsw i64 %66, 2
  %90 = icmp eq i64 %89, 32000
  br i1 %90, label %91, label %65

91:                                               ; preds = %65
  %92 = fadd float %82, %85
  %93 = fadd float %92, %88
  %94 = fpext float %93 to double
  %95 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %94) #16
  ret i32 0

96:                                               ; preds = %50
  %97 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %98 = add nuw nsw i32 %4, 1
  %99 = icmp eq i32 %98, 50000
  br i1 %99, label %59, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s274() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.230, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %76
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 50000
  br i1 %58, label %5, label %3

59:                                               ; preds = %76, %3
  %60 = phi i64 [ 0, %3 ], [ %77, %76 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %60
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fmul float %64, %66
  %68 = fadd float %62, %67
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  store float %68, float* %69, align 4, !tbaa !2
  %70 = fcmp ogt float %68, 0.000000e+00
  br i1 %70, label %71, label %75

71:                                               ; preds = %59
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %68, %73
  store float %74, float* %72, align 4, !tbaa !2
  br label %76

75:                                               ; preds = %59
  store float %67, float* %69, align 4, !tbaa !2
  br label %76

76:                                               ; preds = %71, %75
  %77 = add nuw nsw i64 %60, 1
  %78 = icmp eq i64 %77, 32000
  br i1 %78, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s275() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %40, %0
  %4 = phi i32 [ 0, %0 ], [ %42, %40 ]
  br label %44

5:                                                ; preds = %40
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.231, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %61
  %41 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %42 = add nuw nsw i32 %4, 1
  %43 = icmp eq i32 %42, 1950
  br i1 %43, label %5, label %3

44:                                               ; preds = %61, %3
  %45 = phi i64 [ 0, %3 ], [ %62, %61 ]
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fcmp ogt float %47, 0.000000e+00
  br i1 %48, label %49, label %61

49:                                               ; preds = %44, %64
  %50 = phi float [ %70, %64 ], [ %47, %44 ]
  %51 = phi i64 [ %72, %64 ], [ 1, %44 ]
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %51, i64 %45
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %51, i64 %45
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fmul float %53, %55
  %57 = fadd float %50, %56
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %51, i64 %45
  store float %57, float* %58, align 4, !tbaa !2
  %59 = add nuw nsw i64 %51, 1
  %60 = icmp eq i64 %59, 256
  br i1 %60, label %61, label %64

61:                                               ; preds = %49, %44
  %62 = add nuw nsw i64 %45, 1
  %63 = icmp eq i64 %62, 256
  br i1 %63, label %40, label %44

64:                                               ; preds = %49
  %65 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %59, i64 %45
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %59, i64 %45
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fmul float %66, %68
  %70 = fadd float %57, %69
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %59, i64 %45
  store float %70, float* %71, align 4, !tbaa !2
  %72 = add nuw nsw i64 %51, 2
  br label %49
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s275p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %43, %0
  %4 = phi i32 [ 0, %0 ], [ %45, %43 ]
  br label %40

5:                                                ; preds = %43
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.232, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %47, %3
  %41 = phi i64 [ 1, %3 ], [ %48, %47 ]
  %42 = add nsw i64 %41, -1
  br label %50

43:                                               ; preds = %47
  %44 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %45 = add nuw nsw i32 %4, 1
  %46 = icmp eq i32 %45, 1950
  br i1 %46, label %5, label %3

47:                                               ; preds = %65
  %48 = add nuw nsw i64 %41, 1
  %49 = icmp eq i64 %48, 256
  br i1 %49, label %43, label %40

50:                                               ; preds = %65, %40
  %51 = phi i64 [ 0, %40 ], [ %66, %65 ]
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = fcmp ogt float %53, 0.000000e+00
  br i1 %54, label %55, label %65

55:                                               ; preds = %50
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %51
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %51
  %59 = load float, float* %58, align 4, !tbaa !2
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %41, i64 %51
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = fmul float %59, %61
  %63 = fadd float %57, %62
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %51
  store float %63, float* %64, align 4, !tbaa !2
  br label %65

65:                                               ; preds = %50, %55
  %66 = add nuw nsw i64 %51, 1
  %67 = icmp eq i64 %66, 256
  br i1 %67, label %47, label %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2275() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %42, %0
  %4 = phi i32 [ 0, %0 ], [ %44, %42 ]
  br label %40

5:                                                ; preds = %42
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.233, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %46, %3
  %41 = phi i64 [ 0, %3 ], [ %56, %46 ]
  br label %58

42:                                               ; preds = %46
  %43 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %44 = add nuw nsw i32 %4, 1
  %45 = icmp eq i32 %44, 19500
  br i1 %45, label %5, label %3

46:                                               ; preds = %58
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %41
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %41
  %52 = load float, float* %51, align 4, !tbaa !2
  %53 = fmul float %50, %52
  %54 = fadd float %48, %53
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  store float %54, float* %55, align 4, !tbaa !2
  %56 = add nuw nsw i64 %41, 1
  %57 = icmp eq i64 %56, 256
  br i1 %57, label %42, label %40

58:                                               ; preds = %58, %40
  %59 = phi i64 [ 0, %40 ], [ %77, %58 ]
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %59, i64 %41
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %59, i64 %41
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %59, i64 %41
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fmul float %63, %65
  %67 = fadd float %61, %66
  store float %67, float* %60, align 4, !tbaa !2
  %68 = or i64 %59, 1
  %69 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %68, i64 %41
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %68, i64 %41
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %68, i64 %41
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fmul float %72, %74
  %76 = fadd float %70, %75
  store float %76, float* %69, align 4, !tbaa !2
  %77 = add nuw nsw i64 %59, 2
  %78 = icmp eq i64 %77, 256
  br i1 %78, label %46, label %58
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2275p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %130, %0
  %4 = phi i32 [ 0, %0 ], [ %132, %130 ]
  br label %40

5:                                                ; preds = %130
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.234, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %3, %70
  %41 = phi i64 [ 0, %3 ], [ %71, %70 ]
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %68, %42 ]
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %43
  %45 = bitcast float* %44 to <4 x float>*
  %46 = load <4 x float>, <4 x float>* %45, align 16, !tbaa !2
  %47 = getelementptr inbounds float, float* %44, i64 4
  %48 = bitcast float* %47 to <4 x float>*
  %49 = load <4 x float>, <4 x float>* %48, align 16, !tbaa !2
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %43
  %51 = bitcast float* %50 to <4 x float>*
  %52 = load <4 x float>, <4 x float>* %51, align 16, !tbaa !2
  %53 = getelementptr inbounds float, float* %50, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  %55 = load <4 x float>, <4 x float>* %54, align 16, !tbaa !2
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %41, i64 %43
  %57 = bitcast float* %56 to <4 x float>*
  %58 = load <4 x float>, <4 x float>* %57, align 16, !tbaa !2
  %59 = getelementptr inbounds float, float* %56, i64 4
  %60 = bitcast float* %59 to <4 x float>*
  %61 = load <4 x float>, <4 x float>* %60, align 16, !tbaa !2
  %62 = fmul <4 x float> %52, %58
  %63 = fmul <4 x float> %55, %61
  %64 = fadd <4 x float> %46, %62
  %65 = fadd <4 x float> %49, %63
  %66 = bitcast float* %44 to <4 x float>*
  store <4 x float> %64, <4 x float>* %66, align 16, !tbaa !2
  %67 = bitcast float* %47 to <4 x float>*
  store <4 x float> %65, <4 x float>* %67, align 16, !tbaa !2
  %68 = add i64 %43, 8
  %69 = icmp eq i64 %68, 256
  br i1 %69, label %70, label %42, !llvm.loop !404

70:                                               ; preds = %42
  %71 = add nuw nsw i64 %41, 1
  %72 = icmp eq i64 %71, 256
  br i1 %72, label %73, label %40

73:                                               ; preds = %70, %73
  %74 = phi i64 [ %128, %73 ], [ 0, %70 ]
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %74
  %76 = bitcast float* %75 to <4 x float>*
  %77 = load <4 x float>, <4 x float>* %76, align 16, !tbaa !2
  %78 = getelementptr inbounds float, float* %75, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  %80 = load <4 x float>, <4 x float>* %79, align 16, !tbaa !2
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %74
  %82 = bitcast float* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 16, !tbaa !2
  %84 = getelementptr inbounds float, float* %81, i64 4
  %85 = bitcast float* %84 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 16, !tbaa !2
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %74
  %88 = bitcast float* %87 to <4 x float>*
  %89 = load <4 x float>, <4 x float>* %88, align 16, !tbaa !2
  %90 = getelementptr inbounds float, float* %87, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  %92 = load <4 x float>, <4 x float>* %91, align 16, !tbaa !2
  %93 = fmul <4 x float> %83, %89
  %94 = fmul <4 x float> %86, %92
  %95 = fadd <4 x float> %77, %93
  %96 = fadd <4 x float> %80, %94
  %97 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %98 = bitcast float* %97 to <4 x float>*
  store <4 x float> %95, <4 x float>* %98, align 16, !tbaa !2
  %99 = getelementptr inbounds float, float* %97, i64 4
  %100 = bitcast float* %99 to <4 x float>*
  store <4 x float> %96, <4 x float>* %100, align 16, !tbaa !2
  %101 = or i64 %74, 8
  %102 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %101
  %103 = bitcast float* %102 to <4 x float>*
  %104 = load <4 x float>, <4 x float>* %103, align 16, !tbaa !2
  %105 = getelementptr inbounds float, float* %102, i64 4
  %106 = bitcast float* %105 to <4 x float>*
  %107 = load <4 x float>, <4 x float>* %106, align 16, !tbaa !2
  %108 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %101
  %109 = bitcast float* %108 to <4 x float>*
  %110 = load <4 x float>, <4 x float>* %109, align 16, !tbaa !2
  %111 = getelementptr inbounds float, float* %108, i64 4
  %112 = bitcast float* %111 to <4 x float>*
  %113 = load <4 x float>, <4 x float>* %112, align 16, !tbaa !2
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %101
  %115 = bitcast float* %114 to <4 x float>*
  %116 = load <4 x float>, <4 x float>* %115, align 16, !tbaa !2
  %117 = getelementptr inbounds float, float* %114, i64 4
  %118 = bitcast float* %117 to <4 x float>*
  %119 = load <4 x float>, <4 x float>* %118, align 16, !tbaa !2
  %120 = fmul <4 x float> %110, %116
  %121 = fmul <4 x float> %113, %119
  %122 = fadd <4 x float> %104, %120
  %123 = fadd <4 x float> %107, %121
  %124 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %101
  %125 = bitcast float* %124 to <4 x float>*
  store <4 x float> %122, <4 x float>* %125, align 16, !tbaa !2
  %126 = getelementptr inbounds float, float* %124, i64 4
  %127 = bitcast float* %126 to <4 x float>*
  store <4 x float> %123, <4 x float>* %127, align 16, !tbaa !2
  %128 = add nuw nsw i64 %74, 16
  %129 = icmp eq i64 %128, 256
  br i1 %129, label %130, label %73, !llvm.loop !405

130:                                              ; preds = %73
  %131 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %132 = add nuw nsw i32 %4, 1
  %133 = icmp eq i32 %132, 19500
  br i1 %133, label %5, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s276() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.235, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 200000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %67, %54 ]
  %56 = or i64 %55, 1
  %57 = icmp ult i64 %55, 15999
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = select i1 %57, [32000 x float]* @c, [32000 x float]* @d
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* %60, i64 0, i64 %55
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fmul float %59, %62
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %65 = load float, float* %64, align 8, !tbaa !2
  %66 = fadd float %65, %63
  store float %66, float* %64, align 8, !tbaa !2
  %67 = add nuw nsw i64 %55, 2
  %68 = icmp ult i64 %55, 15998
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = select i1 %68, [32000 x float]* @c, [32000 x float]* @d
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* %71, i64 0, i64 %56
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fmul float %70, %73
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fadd float %76, %74
  store float %77, float* %75, align 4, !tbaa !2
  %78 = icmp eq i64 %67, 32000
  br i1 %78, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s276p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %143
  %4 = phi i32 [ 0, %0 ], [ %150, %143 ]
  br label %5

5:                                                ; preds = %152, %3
  %6 = phi i64 [ 0, %3 ], [ %177, %152 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !2
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !2
  %31 = or i64 %6, 8
  %32 = icmp eq i64 %31, 15992
  br i1 %32, label %78, label %152, !llvm.loop !406

33:                                               ; preds = %143
  %34 = tail call i64 @clock() #16
  %35 = sub nsw i64 %34, %2
  %36 = sitofp i64 %35 to double
  %37 = fdiv double %36, 1.000000e+06
  %38 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.236, i64 0, i64 0), double %37)
  br label %39

39:                                               ; preds = %39, %33
  %40 = phi i64 [ 0, %33 ], [ %73, %39 ]
  %41 = phi float [ 0.000000e+00, %33 ], [ %72, %39 ]
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %43 = load float, float* %42, align 16, !tbaa !2
  %44 = fadd float %41, %43
  %45 = or i64 %40, 1
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %44, %47
  %49 = or i64 %40, 2
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %51 = load float, float* %50, align 8, !tbaa !2
  %52 = fadd float %48, %51
  %53 = or i64 %40, 3
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fadd float %52, %55
  %57 = or i64 %40, 4
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 16, !tbaa !2
  %60 = fadd float %56, %59
  %61 = or i64 %40, 5
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fadd float %60, %63
  %65 = or i64 %40, 6
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %67 = load float, float* %66, align 8, !tbaa !2
  %68 = fadd float %64, %67
  %69 = or i64 %40, 7
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fadd float %68, %71
  %73 = add nuw nsw i64 %40, 8
  %74 = icmp eq i64 %73, 32000
  br i1 %74, label %75, label %39

75:                                               ; preds = %39
  %76 = fpext float %72 to double
  %77 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %76) #16
  ret i32 0

78:                                               ; preds = %5
  %79 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15992), align 16, !tbaa !2
  %80 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15992), align 16, !tbaa !2
  %81 = fmul float %79, %80
  %82 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15992), align 16, !tbaa !2
  %83 = fadd float %82, %81
  store float %83, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15992), align 16, !tbaa !2
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15993), align 4, !tbaa !2
  %85 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15993), align 4, !tbaa !2
  %86 = fmul float %84, %85
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15993), align 4, !tbaa !2
  %88 = fadd float %87, %86
  store float %88, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15993), align 4, !tbaa !2
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15994), align 8, !tbaa !2
  %90 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15994), align 8, !tbaa !2
  %91 = fmul float %89, %90
  %92 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15994), align 8, !tbaa !2
  %93 = fadd float %92, %91
  store float %93, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15994), align 8, !tbaa !2
  %94 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15995), align 4, !tbaa !2
  %95 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15995), align 4, !tbaa !2
  %96 = fmul float %94, %95
  %97 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15995), align 4, !tbaa !2
  %98 = fadd float %97, %96
  store float %98, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15995), align 4, !tbaa !2
  %99 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15996), align 16, !tbaa !2
  %100 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15996), align 16, !tbaa !2
  %101 = fmul float %99, %100
  %102 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15996), align 16, !tbaa !2
  %103 = fadd float %102, %101
  store float %103, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15996), align 16, !tbaa !2
  %104 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15997), align 4, !tbaa !2
  %105 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15997), align 4, !tbaa !2
  %106 = fmul float %104, %105
  %107 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15997), align 4, !tbaa !2
  %108 = fadd float %107, %106
  store float %108, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15997), align 4, !tbaa !2
  %109 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15998), align 8, !tbaa !2
  %110 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15998), align 8, !tbaa !2
  %111 = fmul float %109, %110
  %112 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15998), align 8, !tbaa !2
  %113 = fadd float %112, %111
  store float %113, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15998), align 8, !tbaa !2
  br label %114

114:                                              ; preds = %78, %114
  %115 = phi i64 [ %141, %114 ], [ 0, %78 ]
  %116 = add i64 %115, 15999
  %117 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %116
  %118 = bitcast float* %117 to <4 x float>*
  %119 = load <4 x float>, <4 x float>* %118, align 4, !tbaa !2
  %120 = getelementptr inbounds float, float* %117, i64 4
  %121 = bitcast float* %120 to <4 x float>*
  %122 = load <4 x float>, <4 x float>* %121, align 4, !tbaa !2
  %123 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %116
  %124 = bitcast float* %123 to <4 x float>*
  %125 = load <4 x float>, <4 x float>* %124, align 4, !tbaa !2
  %126 = getelementptr inbounds float, float* %123, i64 4
  %127 = bitcast float* %126 to <4 x float>*
  %128 = load <4 x float>, <4 x float>* %127, align 4, !tbaa !2
  %129 = fmul <4 x float> %119, %125
  %130 = fmul <4 x float> %122, %128
  %131 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %116
  %132 = bitcast float* %131 to <4 x float>*
  %133 = load <4 x float>, <4 x float>* %132, align 4, !tbaa !2
  %134 = getelementptr inbounds float, float* %131, i64 4
  %135 = bitcast float* %134 to <4 x float>*
  %136 = load <4 x float>, <4 x float>* %135, align 4, !tbaa !2
  %137 = fadd <4 x float> %133, %129
  %138 = fadd <4 x float> %136, %130
  %139 = bitcast float* %131 to <4 x float>*
  store <4 x float> %137, <4 x float>* %139, align 4, !tbaa !2
  %140 = bitcast float* %134 to <4 x float>*
  store <4 x float> %138, <4 x float>* %140, align 4, !tbaa !2
  %141 = add i64 %115, 8
  %142 = icmp eq i64 %141, 16000
  br i1 %142, label %143, label %114, !llvm.loop !407

143:                                              ; preds = %114
  %144 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !2
  %145 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31999), align 4, !tbaa !2
  %146 = fmul float %144, %145
  %147 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %148 = fadd float %147, %146
  store float %148, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !2
  %149 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %150 = add nuw nsw i32 %4, 1
  %151 = icmp eq i32 %150, 200000
  br i1 %151, label %33, label %3

152:                                              ; preds = %5
  %153 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %154 = bitcast float* %153 to <4 x float>*
  %155 = load <4 x float>, <4 x float>* %154, align 16, !tbaa !2
  %156 = getelementptr inbounds float, float* %153, i64 4
  %157 = bitcast float* %156 to <4 x float>*
  %158 = load <4 x float>, <4 x float>* %157, align 16, !tbaa !2
  %159 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %160 = bitcast float* %159 to <4 x float>*
  %161 = load <4 x float>, <4 x float>* %160, align 16, !tbaa !2
  %162 = getelementptr inbounds float, float* %159, i64 4
  %163 = bitcast float* %162 to <4 x float>*
  %164 = load <4 x float>, <4 x float>* %163, align 16, !tbaa !2
  %165 = fmul <4 x float> %155, %161
  %166 = fmul <4 x float> %158, %164
  %167 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %168 = bitcast float* %167 to <4 x float>*
  %169 = load <4 x float>, <4 x float>* %168, align 16, !tbaa !2
  %170 = getelementptr inbounds float, float* %167, i64 4
  %171 = bitcast float* %170 to <4 x float>*
  %172 = load <4 x float>, <4 x float>* %171, align 16, !tbaa !2
  %173 = fadd <4 x float> %169, %165
  %174 = fadd <4 x float> %172, %166
  %175 = bitcast float* %167 to <4 x float>*
  store <4 x float> %173, <4 x float>* %175, align 16, !tbaa !2
  %176 = bitcast float* %170 to <4 x float>*
  store <4 x float> %174, <4 x float>* %176, align 16, !tbaa !2
  %177 = add nuw nsw i64 %6, 16
  br label %5
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s277() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.237, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %84
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 50000
  br i1 %58, label %5, label %3

59:                                               ; preds = %84, %3
  %60 = phi i64 [ 0, %3 ], [ %85, %84 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fcmp ult float %62, 0.000000e+00
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = add nuw nsw i64 %60, 1
  br label %84

66:                                               ; preds = %59
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fcmp ult float %68, 0.000000e+00
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  %73 = load float, float* %72, align 4, !tbaa !2
  br i1 %69, label %74, label %77

74:                                               ; preds = %66
  %75 = fmul float %71, %73
  %76 = fadd float %62, %75
  store float %76, float* %61, align 4, !tbaa !2
  br label %77

77:                                               ; preds = %66, %74
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %60
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fmul float %73, %79
  %81 = fadd float %71, %80
  %82 = add nuw nsw i64 %60, 1
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %82
  store float %81, float* %83, align 4, !tbaa !2
  br label %84

84:                                               ; preds = %64, %77
  %85 = phi i64 [ %65, %64 ], [ %82, %77 ]
  %86 = icmp eq i64 %85, 31999
  br i1 %86, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s278() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %42, %0
  %4 = phi i32 [ 0, %0 ], [ %44, %42 ]
  br label %46

5:                                                ; preds = %42
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.238, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %35, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %34, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %31, %11 ]
  %15 = phi float [ 0.000000e+00, %5 ], [ %28, %11 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %17 = load float, float* %16, align 8, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %20 = load float, float* %19, align 8, !tbaa !2
  %21 = fadd float %14, %20
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %13, %23
  %25 = or i64 %12, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %18, %27
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %21, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %25
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %24, %33
  %35 = add nuw nsw i64 %12, 2
  %36 = icmp eq i64 %35, 32000
  br i1 %36, label %37, label %11

37:                                               ; preds = %11
  %38 = fadd float %28, %31
  %39 = fadd float %38, %34
  %40 = fpext float %39 to double
  %41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %40) #16
  ret i32 0

42:                                               ; preds = %73
  %43 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %44 = add nuw nsw i32 %4, 1
  %45 = icmp eq i32 %44, 50000
  br i1 %45, label %5, label %3

46:                                               ; preds = %73, %3
  %47 = phi i64 [ 0, %3 ], [ %79, %73 ]
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 4, !tbaa !2
  %50 = fcmp ogt float %49, 0.000000e+00
  br i1 %50, label %62, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %47
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %47
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fmul float %55, %57
  %59 = fsub float %58, %53
  store float %59, float* %52, align 4, !tbaa !2
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %61 = load float, float* %60, align 4, !tbaa !2
  br label %73

62:                                               ; preds = %46
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %47
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %47
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fmul float %66, %68
  %70 = fsub float %69, %64
  store float %70, float* %63, align 4, !tbaa !2
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %72 = load float, float* %71, align 4, !tbaa !2
  br label %73

73:                                               ; preds = %62, %51
  %74 = phi float [ %66, %62 ], [ %55, %51 ]
  %75 = phi float [ %70, %62 ], [ %61, %51 ]
  %76 = phi float [ %72, %62 ], [ %59, %51 ]
  %77 = fmul float %75, %74
  %78 = fadd float %76, %77
  store float %78, float* %48, align 4, !tbaa !2
  %79 = add nuw nsw i64 %47, 1
  %80 = icmp eq i64 %79, 32000
  br i1 %80, label %42, label %46
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s279() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %42, %0
  %4 = phi i32 [ 0, %0 ], [ %44, %42 ]
  br label %46

5:                                                ; preds = %42
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.239, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %35, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %34, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %31, %11 ]
  %15 = phi float [ 0.000000e+00, %5 ], [ %28, %11 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %17 = load float, float* %16, align 8, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %20 = load float, float* %19, align 8, !tbaa !2
  %21 = fadd float %14, %20
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %13, %23
  %25 = or i64 %12, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %18, %27
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %21, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %25
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %24, %33
  %35 = add nuw nsw i64 %12, 2
  %36 = icmp eq i64 %35, 32000
  br i1 %36, label %37, label %11

37:                                               ; preds = %11
  %38 = fadd float %28, %31
  %39 = fadd float %38, %34
  %40 = fpext float %39 to double
  %41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %40) #16
  ret i32 0

42:                                               ; preds = %80
  %43 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %44 = add nuw nsw i32 %4, 1
  %45 = icmp eq i32 %44, 25000
  br i1 %45, label %5, label %3

46:                                               ; preds = %80, %3
  %47 = phi i64 [ 0, %3 ], [ %86, %80 ]
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 4, !tbaa !2
  %50 = fcmp ogt float %49, 0.000000e+00
  br i1 %50, label %69, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %47
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fmul float %55, %55
  %57 = fsub float %56, %53
  store float %57, float* %52, align 4, !tbaa !2
  %58 = fcmp ugt float %57, %49
  br i1 %58, label %62, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %61 = load float, float* %60, align 4, !tbaa !2
  br label %80

62:                                               ; preds = %51
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %47
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fmul float %55, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fadd float %67, %65
  store float %68, float* %66, align 4, !tbaa !2
  br label %80

69:                                               ; preds = %46
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %47
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fmul float %73, %73
  %75 = fsub float %74, %71
  store float %75, float* %70, align 4, !tbaa !2
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %47
  %79 = load float, float* %78, align 4, !tbaa !2
  br label %80

80:                                               ; preds = %59, %69, %62
  %81 = phi float [ %55, %59 ], [ %79, %69 ], [ %55, %62 ]
  %82 = phi float [ %61, %59 ], [ %75, %69 ], [ %68, %62 ]
  %83 = phi float [ %57, %59 ], [ %77, %69 ], [ %57, %62 ]
  %84 = fmul float %82, %81
  %85 = fadd float %83, %84
  store float %85, float* %48, align 4, !tbaa !2
  %86 = add nuw nsw i64 %47, 1
  %87 = icmp eq i64 %86, 32000
  br i1 %87, label %42, label %46
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1279() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %88
  %4 = phi i32 [ 0, %0 ], [ %90, %88 ]
  br label %5

5:                                                ; preds = %48, %3
  %6 = phi i64 [ 0, %3 ], [ %49, %48 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = fcmp olt <4 x float> %9, zeroinitializer
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !2
  %14 = fcmp ogt <4 x float> %13, %9
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !2
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 16, !tbaa !2
  %21 = fmul <4 x float> %17, %20
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !2
  %25 = fadd <4 x float> %24, %21
  %26 = and <4 x i1> %14, %10
  %27 = extractelement <4 x i1> %26, i32 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %5
  %29 = extractelement <4 x float> %25, i32 0
  store float %29, float* %22, align 16, !tbaa !2
  br label %30

30:                                               ; preds = %28, %5
  %31 = extractelement <4 x i1> %26, i32 1
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = or i64 %6, 1
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %33
  %35 = extractelement <4 x float> %25, i32 1
  store float %35, float* %34, align 4, !tbaa !2
  br label %36

36:                                               ; preds = %32, %30
  %37 = extractelement <4 x i1> %26, i32 2
  br i1 %37, label %38, label %42

38:                                               ; preds = %36
  %39 = or i64 %6, 2
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %39
  %41 = extractelement <4 x float> %25, i32 2
  store float %41, float* %40, align 8, !tbaa !2
  br label %42

42:                                               ; preds = %38, %36
  %43 = extractelement <4 x i1> %26, i32 3
  br i1 %43, label %44, label %48

44:                                               ; preds = %42
  %45 = or i64 %6, 3
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %45
  %47 = extractelement <4 x float> %25, i32 3
  store float %47, float* %46, align 4, !tbaa !2
  br label %48

48:                                               ; preds = %44, %42
  %49 = add i64 %6, 4
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %88, label %5, !llvm.loop !408

51:                                               ; preds = %88
  %52 = tail call i64 @clock() #16
  %53 = sub nsw i64 %52, %2
  %54 = sitofp i64 %53 to double
  %55 = fdiv double %54, 1.000000e+06
  %56 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.240, i64 0, i64 0), double %55)
  br label %57

57:                                               ; preds = %57, %51
  %58 = phi i64 [ 0, %51 ], [ %81, %57 ]
  %59 = phi float [ 0.000000e+00, %51 ], [ %80, %57 ]
  %60 = phi float [ 0.000000e+00, %51 ], [ %77, %57 ]
  %61 = phi float [ 0.000000e+00, %51 ], [ %74, %57 ]
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %63 = load float, float* %62, align 8, !tbaa !2
  %64 = fadd float %61, %63
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %58
  %66 = load float, float* %65, align 8, !tbaa !2
  %67 = fadd float %60, %66
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %58
  %69 = load float, float* %68, align 8, !tbaa !2
  %70 = fadd float %59, %69
  %71 = or i64 %58, 1
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %64, %73
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %71
  %76 = load float, float* %75, align 4, !tbaa !2
  %77 = fadd float %67, %76
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %71
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fadd float %70, %79
  %81 = add nuw nsw i64 %58, 2
  %82 = icmp eq i64 %81, 32000
  br i1 %82, label %83, label %57

83:                                               ; preds = %57
  %84 = fadd float %74, %77
  %85 = fadd float %84, %80
  %86 = fpext float %85 to double
  %87 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %86) #16
  ret i32 0

88:                                               ; preds = %48
  %89 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %90 = add nuw nsw i32 %4, 1
  %91 = icmp eq i32 %90, 50000
  br i1 %91, label %51, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2710(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = fcmp ogt float %0, 0.000000e+00
  br i1 %4, label %5, label %40

5:                                                ; preds = %1, %36
  %6 = phi i32 [ %38, %36 ], [ 0, %1 ]
  br label %7

7:                                                ; preds = %33, %5
  %8 = phi i64 [ 0, %5 ], [ %34, %33 ]
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %10 = load float, float* %9, align 4, !tbaa !2
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %12 = load float, float* %11, align 4, !tbaa !2
  %13 = fcmp ogt float %10, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fmul float %16, %16
  %18 = fadd float %10, %17
  store float %18, float* %11, align 4, !tbaa !2
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fmul float %20, %20
  %22 = fadd float %10, %21
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  store float %22, float* %23, align 4, !tbaa !2
  br label %33

24:                                               ; preds = %7
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fmul float %12, %26
  %28 = fadd float %10, %27
  store float %28, float* %9, align 4, !tbaa !2
  %29 = fmul float %26, %26
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %29, %31
  store float %32, float* %30, align 4, !tbaa !2
  br label %33

33:                                               ; preds = %24, %14
  %34 = add nuw nsw i64 %8, 1
  %35 = icmp eq i64 %34, 32000
  br i1 %35, label %36, label %7

36:                                               ; preds = %33
  %37 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %38 = add nuw nsw i32 %6, 1
  %39 = icmp eq i32 %38, 25000
  br i1 %39, label %42, label %5

40:                                               ; preds = %1, %79
  %41 = phi i32 [ %81, %79 ], [ 0, %1 ]
  br label %83

42:                                               ; preds = %79, %36
  %43 = tail call i64 @clock() #16
  %44 = sub nsw i64 %43, %3
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.241, i64 0, i64 0), double %46)
  br label %48

48:                                               ; preds = %48, %42
  %49 = phi i64 [ 0, %42 ], [ %72, %48 ]
  %50 = phi float [ 0.000000e+00, %42 ], [ %71, %48 ]
  %51 = phi float [ 0.000000e+00, %42 ], [ %68, %48 ]
  %52 = phi float [ 0.000000e+00, %42 ], [ %65, %48 ]
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %54 = load float, float* %53, align 8, !tbaa !2
  %55 = fadd float %52, %54
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %49
  %57 = load float, float* %56, align 8, !tbaa !2
  %58 = fadd float %51, %57
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %49
  %60 = load float, float* %59, align 8, !tbaa !2
  %61 = fadd float %50, %60
  %62 = or i64 %49, 1
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %55, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fadd float %58, %67
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = fadd float %61, %70
  %72 = add nuw nsw i64 %49, 2
  %73 = icmp eq i64 %72, 32000
  br i1 %73, label %74, label %48

74:                                               ; preds = %48
  %75 = fadd float %65, %68
  %76 = fadd float %75, %71
  %77 = fpext float %76 to double
  %78 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %77) #16
  ret i32 0

79:                                               ; preds = %101
  %80 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %81 = add nuw nsw i32 %41, 1
  %82 = icmp eq i32 %81, 25000
  br i1 %82, label %42, label %40

83:                                               ; preds = %101, %40
  %84 = phi i64 [ 0, %40 ], [ %106, %101 ]
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %84
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = fcmp ogt float %86, %88
  br i1 %89, label %90, label %96

90:                                               ; preds = %83
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %84
  %92 = load float, float* %91, align 4, !tbaa !2
  %93 = fmul float %88, %92
  %94 = fadd float %86, %93
  store float %94, float* %85, align 4, !tbaa !2
  %95 = fmul float %92, %92
  br label %101

96:                                               ; preds = %83
  %97 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %84
  %98 = load float, float* %97, align 4, !tbaa !2
  %99 = fmul float %98, %98
  %100 = fadd float %86, %99
  store float %100, float* %87, align 4, !tbaa !2
  br label %101

101:                                              ; preds = %90, %96
  %102 = phi float [ %95, %90 ], [ %99, %96 ]
  %103 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %84
  %104 = load float, float* %103, align 4, !tbaa !2
  %105 = fadd float %102, %104
  store float %105, float* %103, align 4, !tbaa !2
  %106 = add nuw nsw i64 %84, 1
  %107 = icmp eq i64 %106, 32000
  br i1 %107, label %79, label %83
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2710p(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = fcmp ogt float %0, 0.000000e+00
  br i1 %4, label %5, label %77

5:                                                ; preds = %1, %36
  %6 = phi i32 [ %38, %36 ], [ 0, %1 ]
  br label %7

7:                                                ; preds = %33, %5
  %8 = phi i64 [ 0, %5 ], [ %34, %33 ]
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %10 = load float, float* %9, align 4, !tbaa !2
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %12 = load float, float* %11, align 4, !tbaa !2
  %13 = fcmp ogt float %10, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fmul float %16, %16
  %18 = fadd float %10, %17
  store float %18, float* %11, align 4, !tbaa !2
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fmul float %20, %20
  %22 = fadd float %10, %21
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  store float %22, float* %23, align 4, !tbaa !2
  br label %33

24:                                               ; preds = %7
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fmul float %12, %26
  %28 = fadd float %10, %27
  store float %28, float* %9, align 4, !tbaa !2
  %29 = fmul float %26, %26
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %29, %31
  store float %32, float* %30, align 4, !tbaa !2
  br label %33

33:                                               ; preds = %24, %14
  %34 = add nuw nsw i64 %8, 1
  %35 = icmp eq i64 %34, 32000
  br i1 %35, label %36, label %7

36:                                               ; preds = %33
  %37 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %38 = add nuw nsw i32 %6, 1
  %39 = icmp eq i32 %38, 25000
  br i1 %39, label %40, label %5

40:                                               ; preds = %104, %36
  %41 = tail call i64 @clock() #16
  %42 = sub nsw i64 %41, %3
  %43 = sitofp i64 %42 to double
  %44 = fdiv double %43, 1.000000e+06
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.242, i64 0, i64 0), double %44)
  br label %46

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %70, %46 ]
  %48 = phi float [ 0.000000e+00, %40 ], [ %69, %46 ]
  %49 = phi float [ 0.000000e+00, %40 ], [ %66, %46 ]
  %50 = phi float [ 0.000000e+00, %40 ], [ %63, %46 ]
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %52 = load float, float* %51, align 8, !tbaa !2
  %53 = fadd float %50, %52
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %55 = load float, float* %54, align 8, !tbaa !2
  %56 = fadd float %49, %55
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %58 = load float, float* %57, align 8, !tbaa !2
  %59 = fadd float %48, %58
  %60 = or i64 %47, 1
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fadd float %53, %62
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %56, %65
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fadd float %59, %68
  %70 = add nuw nsw i64 %47, 2
  %71 = icmp eq i64 %70, 32000
  br i1 %71, label %72, label %46

72:                                               ; preds = %46
  %73 = fadd float %63, %66
  %74 = fadd float %73, %69
  %75 = fpext float %74 to double
  %76 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %75) #16
  ret i32 0

77:                                               ; preds = %1, %104
  %78 = phi i32 [ %106, %104 ], [ 0, %1 ]
  br label %79

79:                                               ; preds = %97, %77
  %80 = phi i64 [ 0, %77 ], [ %102, %97 ]
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %80
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = fcmp ogt float %82, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %79
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %80
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = fmul float %84, %88
  %90 = fadd float %82, %89
  store float %90, float* %81, align 4, !tbaa !2
  %91 = fmul float %88, %88
  br label %97

92:                                               ; preds = %79
  %93 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %80
  %94 = load float, float* %93, align 4, !tbaa !2
  %95 = fmul float %94, %94
  %96 = fadd float %82, %95
  store float %96, float* %83, align 4, !tbaa !2
  br label %97

97:                                               ; preds = %86, %92
  %98 = phi float [ %91, %86 ], [ %95, %92 ]
  %99 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %80
  %100 = load float, float* %99, align 4, !tbaa !2
  %101 = fadd float %98, %100
  store float %101, float* %99, align 4, !tbaa !2
  %102 = add nuw nsw i64 %80, 1
  %103 = icmp eq i64 %102, 32000
  br i1 %103, label %104, label %79

104:                                              ; preds = %97
  %105 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %106 = add nuw nsw i32 %78, 1
  %107 = icmp eq i32 %106, 25000
  br i1 %107, label %40, label %77
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2711() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %88
  %4 = phi i32 [ 0, %0 ], [ %90, %88 ]
  br label %5

5:                                                ; preds = %40, %3
  %6 = phi i64 [ 0, %3 ], [ %41, %40 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = fcmp une <4 x float> %9, zeroinitializer
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !2
  %14 = fmul <4 x float> %9, %13
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !2
  %18 = fadd <4 x float> %17, %14
  %19 = extractelement <4 x i1> %10, i32 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %5
  %21 = extractelement <4 x float> %18, i32 0
  store float %21, float* %15, align 16, !tbaa !2
  br label %22

22:                                               ; preds = %20, %5
  %23 = extractelement <4 x i1> %10, i32 1
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = or i64 %6, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = extractelement <4 x float> %18, i32 1
  store float %27, float* %26, align 4, !tbaa !2
  br label %28

28:                                               ; preds = %24, %22
  %29 = extractelement <4 x i1> %10, i32 2
  br i1 %29, label %30, label %34

30:                                               ; preds = %28
  %31 = or i64 %6, 2
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = extractelement <4 x float> %18, i32 2
  store float %33, float* %32, align 8, !tbaa !2
  br label %34

34:                                               ; preds = %30, %28
  %35 = extractelement <4 x i1> %10, i32 3
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = or i64 %6, 3
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = extractelement <4 x float> %18, i32 3
  store float %39, float* %38, align 4, !tbaa !2
  br label %40

40:                                               ; preds = %36, %34
  %41 = add i64 %6, 4
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %88, label %5, !llvm.loop !409

43:                                               ; preds = %88
  %44 = tail call i64 @clock() #16
  %45 = sub nsw i64 %44, %2
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  %48 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.243, i64 0, i64 0), double %47)
  br label %49

49:                                               ; preds = %49, %43
  %50 = phi i64 [ 0, %43 ], [ %83, %49 ]
  %51 = phi float [ 0.000000e+00, %43 ], [ %82, %49 ]
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %53 = load float, float* %52, align 16, !tbaa !2
  %54 = fadd float %51, %53
  %55 = or i64 %50, 1
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fadd float %54, %57
  %59 = or i64 %50, 2
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = load float, float* %60, align 8, !tbaa !2
  %62 = fadd float %58, %61
  %63 = or i64 %50, 3
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %50, 4
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 16, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %50, 5
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %70, %73
  %75 = or i64 %50, 6
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  %77 = load float, float* %76, align 8, !tbaa !2
  %78 = fadd float %74, %77
  %79 = or i64 %50, 7
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 4, !tbaa !2
  %82 = fadd float %78, %81
  %83 = add nuw nsw i64 %50, 8
  %84 = icmp eq i64 %83, 32000
  br i1 %84, label %85, label %49

85:                                               ; preds = %49
  %86 = fpext float %82 to double
  %87 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %86) #16
  ret i32 0

88:                                               ; preds = %40
  %89 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %90 = add nuw nsw i32 %4, 1
  %91 = icmp eq i32 %90, 200000
  br i1 %91, label %43, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2712() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %88
  %4 = phi i32 [ 0, %0 ], [ %90, %88 ]
  br label %5

5:                                                ; preds = %40, %3
  %6 = phi i64 [ 0, %3 ], [ %41, %40 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fcmp ogt <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = fmul <4 x float> %12, %16
  %18 = fadd <4 x float> %9, %17
  %19 = extractelement <4 x i1> %13, i32 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %5
  %21 = extractelement <4 x float> %18, i32 0
  store float %21, float* %7, align 16, !tbaa !2
  br label %22

22:                                               ; preds = %20, %5
  %23 = extractelement <4 x i1> %13, i32 1
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = or i64 %6, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = extractelement <4 x float> %18, i32 1
  store float %27, float* %26, align 4, !tbaa !2
  br label %28

28:                                               ; preds = %24, %22
  %29 = extractelement <4 x i1> %13, i32 2
  br i1 %29, label %30, label %34

30:                                               ; preds = %28
  %31 = or i64 %6, 2
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = extractelement <4 x float> %18, i32 2
  store float %33, float* %32, align 8, !tbaa !2
  br label %34

34:                                               ; preds = %30, %28
  %35 = extractelement <4 x i1> %13, i32 3
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = or i64 %6, 3
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = extractelement <4 x float> %18, i32 3
  store float %39, float* %38, align 4, !tbaa !2
  br label %40

40:                                               ; preds = %36, %34
  %41 = add i64 %6, 4
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %88, label %5, !llvm.loop !410

43:                                               ; preds = %88
  %44 = tail call i64 @clock() #16
  %45 = sub nsw i64 %44, %2
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  %48 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.244, i64 0, i64 0), double %47)
  br label %49

49:                                               ; preds = %49, %43
  %50 = phi i64 [ 0, %43 ], [ %83, %49 ]
  %51 = phi float [ 0.000000e+00, %43 ], [ %82, %49 ]
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %53 = load float, float* %52, align 16, !tbaa !2
  %54 = fadd float %51, %53
  %55 = or i64 %50, 1
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fadd float %54, %57
  %59 = or i64 %50, 2
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = load float, float* %60, align 8, !tbaa !2
  %62 = fadd float %58, %61
  %63 = or i64 %50, 3
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %50, 4
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 16, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %50, 5
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %70, %73
  %75 = or i64 %50, 6
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  %77 = load float, float* %76, align 8, !tbaa !2
  %78 = fadd float %74, %77
  %79 = or i64 %50, 7
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 4, !tbaa !2
  %82 = fadd float %78, %81
  %83 = add nuw nsw i64 %50, 8
  %84 = icmp eq i64 %83, 32000
  br i1 %84, label %85, label %49

85:                                               ; preds = %49
  %86 = fpext float %82 to double
  %87 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %86) #16
  ret i32 0

88:                                               ; preds = %40
  %89 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %90 = add nuw nsw i32 %4, 1
  %91 = icmp eq i32 %90, 200000
  br i1 %91, label %43, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s281() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %55, %0
  %4 = phi i32 [ 0, %0 ], [ %57, %55 ]
  br label %59

5:                                                ; preds = %55
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.245, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %49, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %48, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %45, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %17, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = fadd float %20, %26
  %28 = add nuw nsw i64 %12, 2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %24, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %27, %33
  %35 = add nuw nsw i64 %12, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %31, %37
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = add nuw nsw i64 %12, 4
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %41, %47
  %49 = add nuw nsw i64 %12, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %11

51:                                               ; preds = %11
  %52 = fadd float %45, %48
  %53 = fpext float %52 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %59
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %4, 1
  %58 = icmp eq i32 %57, 50000
  br i1 %58, label %5, label %3

59:                                               ; preds = %59, %3
  %60 = phi i64 [ 0, %3 ], [ %84, %59 ]
  %61 = sub nuw nsw i64 31999, %60
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %65 = load float, float* %64, align 8, !tbaa !2
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %67 = load float, float* %66, align 8, !tbaa !2
  %68 = fmul float %65, %67
  %69 = fadd float %63, %68
  %70 = fadd float %69, -1.000000e+00
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  store float %70, float* %71, align 8, !tbaa !2
  store float %69, float* %64, align 8, !tbaa !2
  %72 = or i64 %60, 1
  %73 = sub nsw i64 31998, %60
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  %75 = load float, float* %74, align 8, !tbaa !2
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %72
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %72
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fmul float %77, %79
  %81 = fadd float %75, %80
  %82 = fadd float %81, -1.000000e+00
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  store float %82, float* %83, align 4, !tbaa !2
  store float %81, float* %76, align 4, !tbaa !2
  %84 = add nuw nsw i64 %60, 2
  %85 = icmp eq i64 %84, 32000
  br i1 %85, label %55, label %59
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1281() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %104
  %4 = phi i32 [ 0, %0 ], [ %106, %104 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %52, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fmul <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = fmul <4 x float> %16, %19
  %21 = fadd <4 x float> %13, %20
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !2
  %25 = fadd <4 x float> %24, %21
  %26 = fadd <4 x float> %25, <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %27 = bitcast float* %14 to <4 x float>*
  store <4 x float> %26, <4 x float>* %27, align 16, !tbaa !2
  %28 = bitcast float* %7 to <4 x float>*
  store <4 x float> %25, <4 x float>* %28, align 16, !tbaa !2
  %29 = or i64 %6, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !2
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %29
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 16, !tbaa !2
  %36 = fmul <4 x float> %32, %35
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 16, !tbaa !2
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %29
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16, !tbaa !2
  %43 = fmul <4 x float> %39, %42
  %44 = fadd <4 x float> %36, %43
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %29
  %46 = bitcast float* %45 to <4 x float>*
  %47 = load <4 x float>, <4 x float>* %46, align 16, !tbaa !2
  %48 = fadd <4 x float> %47, %44
  %49 = fadd <4 x float> %48, <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %50 = bitcast float* %37 to <4 x float>*
  store <4 x float> %49, <4 x float>* %50, align 16, !tbaa !2
  %51 = bitcast float* %30 to <4 x float>*
  store <4 x float> %48, <4 x float>* %51, align 16, !tbaa !2
  %52 = add nuw nsw i64 %6, 8
  %53 = icmp eq i64 %52, 32000
  br i1 %53, label %104, label %5, !llvm.loop !411

54:                                               ; preds = %104
  %55 = tail call i64 @clock() #16
  %56 = sub nsw i64 %55, %2
  %57 = sitofp i64 %56 to double
  %58 = fdiv double %57, 1.000000e+06
  %59 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.246, i64 0, i64 0), double %58)
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi i64 [ 0, %54 ], [ %98, %60 ]
  %62 = phi float [ 0.000000e+00, %54 ], [ %97, %60 ]
  %63 = phi float [ 0.000000e+00, %54 ], [ %94, %60 ]
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %63, %65
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %61
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fadd float %62, %68
  %70 = add nuw nsw i64 %61, 1
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %66, %72
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %70
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fadd float %69, %75
  %77 = add nuw nsw i64 %61, 2
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %77
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fadd float %73, %79
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %77
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = fadd float %76, %82
  %84 = add nuw nsw i64 %61, 3
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fadd float %80, %86
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %84
  %89 = load float, float* %88, align 4, !tbaa !2
  %90 = fadd float %83, %89
  %91 = add nuw nsw i64 %61, 4
  %92 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %91
  %93 = load float, float* %92, align 4, !tbaa !2
  %94 = fadd float %87, %93
  %95 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %91
  %96 = load float, float* %95, align 4, !tbaa !2
  %97 = fadd float %90, %96
  %98 = add nuw nsw i64 %61, 5
  %99 = icmp eq i64 %98, 32000
  br i1 %99, label %100, label %60

100:                                              ; preds = %60
  %101 = fadd float %94, %97
  %102 = fpext float %101 to double
  %103 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %102) #16
  ret i32 0

104:                                              ; preds = %5
  %105 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %106 = add nuw nsw i32 %4, 1
  %107 = icmp eq i32 %106, 200000
  br i1 %107, label %54, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s291() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.247, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 100000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %72, %54 ]
  %56 = phi i64 [ 31999, %3 ], [ %64, %54 ]
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %58 = load float, float* %57, align 8, !tbaa !2
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = fadd float %58, %60
  %62 = fmul float %61, 5.000000e-01
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %62, float* %63, align 8, !tbaa !2
  %64 = or i64 %55, 1
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %68 = load float, float* %67, align 8, !tbaa !2
  %69 = fadd float %66, %68
  %70 = fmul float %69, 5.000000e-01
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  store float %70, float* %71, align 4, !tbaa !2
  %72 = add nuw nsw i64 %55, 2
  %73 = icmp eq i64 %72, 32000
  br i1 %73, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s292() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %51, %0
  %4 = phi i32 [ 0, %0 ], [ %53, %51 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !2
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.248, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %4, 1
  %54 = icmp eq i32 %53, 50000
  br i1 %54, label %6, label %3

55:                                               ; preds = %55, %3
  %56 = phi float [ %5, %3 ], [ %71, %55 ]
  %57 = phi i64 [ 0, %3 ], [ %76, %55 ]
  %58 = phi i64 [ 31999, %3 ], [ %67, %55 ]
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %57
  %60 = load float, float* %59, align 8, !tbaa !2
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %58
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fadd float %60, %62
  %64 = fadd float %63, %56
  %65 = fmul float %64, 0x3FD54FDF40000000
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  store float %65, float* %66, align 8, !tbaa !2
  %67 = or i64 %57, 1
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %57
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fadd float %69, %71
  %73 = fadd float %72, %62
  %74 = fmul float %73, 0x3FD54FDF40000000
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  store float %74, float* %75, align 4, !tbaa !2
  %76 = add nuw nsw i64 %57, 2
  %77 = icmp eq i64 %76, 32000
  br i1 %77, label %51, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s293() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.249, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 200000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %84, %54 ]
  %56 = load i32, i32* bitcast ([32000 x float]* @a to i32*), align 16, !tbaa !2
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %58 = bitcast float* %57 to i32*
  store i32 %56, i32* %58, align 16, !tbaa !2
  %59 = or i64 %55, 1
  %60 = load i32, i32* bitcast ([32000 x float]* @a to i32*), align 16, !tbaa !2
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %62 = bitcast float* %61 to i32*
  store i32 %60, i32* %62, align 4, !tbaa !2
  %63 = or i64 %55, 2
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = bitcast float* %64 to i32*
  store i32 %60, i32* %65, align 8, !tbaa !2
  %66 = or i64 %55, 3
  %67 = load i32, i32* bitcast ([32000 x float]* @a to i32*), align 16, !tbaa !2
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %69 = bitcast float* %68 to i32*
  store i32 %67, i32* %69, align 4, !tbaa !2
  %70 = or i64 %55, 4
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = bitcast float* %71 to i32*
  store i32 %67, i32* %72, align 16, !tbaa !2
  %73 = or i64 %55, 5
  %74 = load i32, i32* bitcast ([32000 x float]* @a to i32*), align 16, !tbaa !2
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  %76 = bitcast float* %75 to i32*
  store i32 %74, i32* %76, align 4, !tbaa !2
  %77 = or i64 %55, 6
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %77
  %79 = bitcast float* %78 to i32*
  store i32 %74, i32* %79, align 8, !tbaa !2
  %80 = or i64 %55, 7
  %81 = load i32, i32* bitcast ([32000 x float]* @a to i32*), align 16, !tbaa !2
  %82 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %83 = bitcast float* %82 to i32*
  store i32 %81, i32* %83, align 4, !tbaa !2
  %84 = add nuw nsw i64 %55, 8
  %85 = icmp eq i64 %84, 32000
  br i1 %85, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2101() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %40, %0
  %4 = phi i32 [ 0, %0 ], [ %42, %40 ]
  br label %44

5:                                                ; preds = %40
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.250, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %44
  %41 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %42 = add nuw nsw i32 %4, 1
  %43 = icmp eq i32 %42, 500000
  br i1 %43, label %5, label %3

44:                                               ; preds = %44, %3
  %45 = phi i64 [ 0, %3 ], [ %63, %44 ]
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %45, i64 %45
  %47 = load float, float* %46, align 8, !tbaa !2
  %48 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %45, i64 %45
  %49 = load float, float* %48, align 8, !tbaa !2
  %50 = fmul float %47, %49
  %51 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %45, i64 %45
  %52 = load float, float* %51, align 8, !tbaa !2
  %53 = fadd float %52, %50
  store float %53, float* %51, align 8, !tbaa !2
  %54 = or i64 %45, 1
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %54, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !2
  %57 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %54, i64 %54
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fmul float %56, %58
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %54, i64 %54
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = fadd float %61, %59
  store float %62, float* %60, align 4, !tbaa !2
  %63 = add nuw nsw i64 %45, 2
  %64 = icmp eq i64 %63, 256
  br i1 %64, label %40, label %44
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2102() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %42, %0
  %4 = phi i32 [ 0, %0 ], [ %44, %42 ]
  br label %40

5:                                                ; preds = %42
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.251, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %46, %3
  %41 = phi i64 [ 0, %3 ], [ %48, %46 ]
  br label %50

42:                                               ; preds = %46
  %43 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %44 = add nuw nsw i32 %4, 1
  %45 = icmp eq i32 %44, 19500
  br i1 %45, label %5, label %3

46:                                               ; preds = %50
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %41
  store float 1.000000e+00, float* %47, align 4, !tbaa !2
  %48 = add nuw nsw i64 %41, 1
  %49 = icmp eq i64 %48, 256
  br i1 %49, label %42, label %40

50:                                               ; preds = %50, %40
  %51 = phi i64 [ 0, %40 ], [ %59, %50 ]
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %51, i64 %41
  store float 0.000000e+00, float* %52, align 4, !tbaa !2
  %53 = or i64 %51, 1
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %53, i64 %41
  store float 0.000000e+00, float* %54, align 4, !tbaa !2
  %55 = or i64 %51, 2
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %55, i64 %41
  store float 0.000000e+00, float* %56, align 4, !tbaa !2
  %57 = or i64 %51, 3
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %57, i64 %41
  store float 0.000000e+00, float* %58, align 4, !tbaa !2
  %59 = add nuw nsw i64 %51, 4
  %60 = icmp eq i64 %59, 256
  br i1 %60, label %46, label %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2102p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %59, %0
  %4 = phi i32 [ 0, %0 ], [ %61, %59 ]
  br label %40

5:                                                ; preds = %59
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.252, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %37, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11

17:                                               ; preds = %14
  %18 = fpext float %37 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #16
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %38, %20 ]
  %22 = phi float [ %13, %11 ], [ %37, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fadd float %22, %24
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %21, 2
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  %32 = load float, float* %31, align 8, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %21, 3
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = add nuw nsw i64 %21, 4
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %14, label %20

40:                                               ; preds = %40, %3
  %41 = phi i64 [ 0, %3 ], [ %57, %40 ]
  %42 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 0
  %43 = bitcast float* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(1024) %43, i8 0, i64 1024, i1 false)
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %41
  store float 1.000000e+00, float* %44, align 16, !tbaa !2
  %45 = or i64 %41, 1
  %46 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %45, i64 0
  %47 = bitcast float* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(1024) %47, i8 0, i64 1024, i1 false)
  %48 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %45, i64 %45
  store float 1.000000e+00, float* %48, align 4, !tbaa !2
  %49 = or i64 %41, 2
  %50 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 0
  %51 = bitcast float* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(1024) %51, i8 0, i64 1024, i1 false)
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49, i64 %49
  store float 1.000000e+00, float* %52, align 8, !tbaa !2
  %53 = or i64 %41, 3
  %54 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %53, i64 0
  %55 = bitcast float* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(1024) %55, i8 0, i64 1024, i1 false)
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %53, i64 %53
  store float 1.000000e+00, float* %56, align 4, !tbaa !2
  %57 = add nuw nsw i64 %41, 4
  %58 = icmp eq i64 %57, 256
  br i1 %58, label %59, label %40

59:                                               ; preds = %40
  %60 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %61 = add nuw nsw i32 %4, 1
  %62 = icmp eq i32 %61, 19500
  br i1 %62, label %5, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s2111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %16, %0
  %4 = phi i32 [ 0, %0 ], [ %18, %16 ]
  br label %11

5:                                                ; preds = %16
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.253, i64 0, i64 0), double %9)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !2
  br label %42

11:                                               ; preds = %20, %3
  %12 = phi i64 [ 1, %3 ], [ %21, %20 ]
  %13 = add nsw i64 %12, -1
  %14 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 0
  %15 = load float, float* %14, align 16, !tbaa !2
  br label %23

16:                                               ; preds = %20
  %17 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %18 = add nuw nsw i32 %4, 1
  %19 = icmp eq i32 %18, 19500
  br i1 %19, label %5, label %3

20:                                               ; preds = %23
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 256
  br i1 %22, label %16, label %11

23:                                               ; preds = %23, %11
  %24 = phi float [ %15, %11 ], [ %38, %23 ]
  %25 = phi i64 [ 1, %11 ], [ %40, %23 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %13, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %25
  store float %28, float* %29, align 4, !tbaa !2
  %30 = add nuw nsw i64 %25, 1
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %13, i64 %30
  %32 = load float, float* %31, align 4, !tbaa !2
  %33 = fadd float %28, %32
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %30
  store float %33, float* %34, align 4, !tbaa !2
  %35 = add nuw nsw i64 %25, 2
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %13, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %33, %37
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %35
  store float %38, float* %39, align 4, !tbaa !2
  %40 = add nuw nsw i64 %25, 3
  %41 = icmp eq i64 %40, 256
  br i1 %41, label %20, label %23

42:                                               ; preds = %50, %5
  %43 = phi i64 [ 0, %5 ], [ %51, %50 ]
  %44 = phi float [ 0.000000e+00, %5 ], [ %70, %50 ]
  br label %53

45:                                               ; preds = %50
  %46 = fcmp oeq float %70, 0.000000e+00
  %47 = select i1 %46, float 3.000000e+00, float %70
  store float %47, float* @temp, align 4, !tbaa !2
  %48 = fpext float %47 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %53
  %51 = add nuw nsw i64 %43, 1
  %52 = icmp eq i64 %51, 256
  br i1 %52, label %45, label %42

53:                                               ; preds = %53, %42
  %54 = phi i64 [ 0, %42 ], [ %71, %53 ]
  %55 = phi float [ %44, %42 ], [ %70, %53 ]
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 %54
  %57 = load float, float* %56, align 16, !tbaa !2
  %58 = fadd float %57, %55
  %59 = or i64 %54, 1
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = fadd float %61, %58
  %63 = or i64 %54, 2
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 %63
  %65 = load float, float* %64, align 8, !tbaa !2
  %66 = fadd float %65, %62
  %67 = or i64 %54, 3
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %43, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %69, %66
  %71 = add nuw nsw i64 %54, 4
  %72 = icmp eq i64 %71, 256
  br i1 %72, label %50, label %53
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s311() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.254, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %87) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 500000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %88, %54 ]
  %56 = phi float [ 0.000000e+00, %3 ], [ %87, %54 ]
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %58 = load float, float* %57, align 16, !tbaa !2
  %59 = fadd float %56, %58
  %60 = or i64 %55, 1
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %55, 2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 8, !tbaa !2
  %67 = fadd float %63, %66
  %68 = or i64 %55, 3
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = fadd float %67, %70
  %72 = or i64 %55, 4
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %74 = load float, float* %73, align 16, !tbaa !2
  %75 = fadd float %71, %74
  %76 = or i64 %55, 5
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fadd float %75, %78
  %80 = or i64 %55, 6
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %82 = load float, float* %81, align 8, !tbaa !2
  %83 = fadd float %79, %82
  %84 = or i64 %55, 7
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fadd float %83, %86
  %88 = add nuw nsw i64 %55, 8
  %89 = icmp eq i64 %88, 32000
  br i1 %89, label %50, label %54
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local float @test(float* nocapture readonly %0) local_unnamed_addr #2 {
  %2 = load float, float* %0, align 4, !tbaa !2
  %3 = fadd float %2, 0.000000e+00
  %4 = getelementptr inbounds float, float* %0, i64 1
  %5 = load float, float* %4, align 4, !tbaa !2
  %6 = fadd float %3, %5
  %7 = getelementptr inbounds float, float* %0, i64 2
  %8 = load float, float* %7, align 4, !tbaa !2
  %9 = fadd float %6, %8
  %10 = getelementptr inbounds float, float* %0, i64 3
  %11 = load float, float* %10, align 4, !tbaa !2
  %12 = fadd float %9, %11
  ret float %12
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s31111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %48

3:                                                ; preds = %48
  %4 = tail call i64 @clock() #16
  %5 = sub nsw i64 %4, %2
  %6 = sitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.255, i64 0, i64 0), double %7)
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i64 [ 0, %3 ], [ %43, %9 ]
  %11 = phi float [ 0.000000e+00, %3 ], [ %42, %9 ]
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10
  %13 = load float, float* %12, align 16, !tbaa !2
  %14 = fadd float %11, %13
  %15 = or i64 %10, 1
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %14, %17
  %19 = or i64 %10, 2
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 8, !tbaa !2
  %22 = fadd float %18, %21
  %23 = or i64 %10, 3
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4, !tbaa !2
  %26 = fadd float %22, %25
  %27 = or i64 %10, 4
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 16, !tbaa !2
  %30 = fadd float %26, %29
  %31 = or i64 %10, 5
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fadd float %30, %33
  %35 = or i64 %10, 6
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 8, !tbaa !2
  %38 = fadd float %34, %37
  %39 = or i64 %10, 7
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %38, %41
  %43 = add nuw nsw i64 %10, 8
  %44 = icmp eq i64 %43, 32000
  br i1 %44, label %45, label %9

45:                                               ; preds = %9
  %46 = fpext float %42 to double
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %46) #16
  ret i32 0

48:                                               ; preds = %48, %0
  %49 = phi i32 [ 0, %0 ], [ %130, %48 ]
  %50 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %51 = fadd float %50, 0.000000e+00
  %52 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 1), align 4, !tbaa !2
  %53 = fadd float %51, %52
  %54 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 2), align 8, !tbaa !2
  %55 = fadd float %53, %54
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 3), align 4, !tbaa !2
  %57 = fadd float %55, %56
  %58 = fadd float %57, 0.000000e+00
  %59 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 4), align 16, !tbaa !2
  %60 = fadd float %59, 0.000000e+00
  %61 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 5), align 4, !tbaa !2
  %62 = fadd float %60, %61
  %63 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 6), align 8, !tbaa !2
  %64 = fadd float %62, %63
  %65 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 7), align 4, !tbaa !2
  %66 = fadd float %64, %65
  %67 = fadd float %58, %66
  %68 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 8), align 16, !tbaa !2
  %69 = fadd float %68, 0.000000e+00
  %70 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 9), align 4, !tbaa !2
  %71 = fadd float %69, %70
  %72 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 10), align 8, !tbaa !2
  %73 = fadd float %71, %72
  %74 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 11), align 4, !tbaa !2
  %75 = fadd float %73, %74
  %76 = fadd float %67, %75
  %77 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 12), align 16, !tbaa !2
  %78 = fadd float %77, 0.000000e+00
  %79 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 13), align 4, !tbaa !2
  %80 = fadd float %78, %79
  %81 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 14), align 8, !tbaa !2
  %82 = fadd float %80, %81
  %83 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15), align 4, !tbaa !2
  %84 = fadd float %82, %83
  %85 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16), align 16, !tbaa !2
  %86 = fadd float %85, 0.000000e+00
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 17), align 4, !tbaa !2
  %88 = fadd float %86, %87
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 18), align 8, !tbaa !2
  %90 = fadd float %88, %89
  %91 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 19), align 4, !tbaa !2
  %92 = fadd float %90, %91
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 20), align 16, !tbaa !2
  %94 = fadd float %93, 0.000000e+00
  %95 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 21), align 4, !tbaa !2
  %96 = fadd float %94, %95
  %97 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 22), align 8, !tbaa !2
  %98 = fadd float %96, %97
  %99 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 23), align 4, !tbaa !2
  %100 = fadd float %98, %99
  %101 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 24), align 16, !tbaa !2
  %102 = fadd float %101, 0.000000e+00
  %103 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 25), align 4, !tbaa !2
  %104 = fadd float %102, %103
  %105 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 26), align 8, !tbaa !2
  %106 = fadd float %104, %105
  %107 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 27), align 4, !tbaa !2
  %108 = fadd float %106, %107
  %109 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 28), align 16, !tbaa !2
  %110 = insertelement <2 x float> undef, float %76, i32 0
  %111 = insertelement <2 x float> %110, float %109, i32 1
  %112 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %84, i32 0
  %113 = fadd <2 x float> %111, %112
  %114 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 29), align 4, !tbaa !2
  %115 = insertelement <2 x float> undef, float %92, i32 0
  %116 = insertelement <2 x float> %115, float %114, i32 1
  %117 = fadd <2 x float> %113, %116
  %118 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 30), align 8, !tbaa !2
  %119 = insertelement <2 x float> undef, float %100, i32 0
  %120 = insertelement <2 x float> %119, float %118, i32 1
  %121 = fadd <2 x float> %117, %120
  %122 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31), align 4, !tbaa !2
  %123 = insertelement <2 x float> undef, float %108, i32 0
  %124 = insertelement <2 x float> %123, float %122, i32 1
  %125 = fadd <2 x float> %121, %124
  %126 = extractelement <2 x float> %125, i32 0
  %127 = extractelement <2 x float> %125, i32 1
  %128 = fadd float %126, %127
  %129 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %128) #16
  %130 = add nuw nsw i32 %49, 1
  %131 = icmp eq i32 %130, 100000000
  br i1 %131, label %3, label %48
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s312() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %13, %0
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.256, i64 0, i64 0), double %9)
  store float %50, float* @temp, align 4, !tbaa !2
  %11 = fpext float %50 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #16
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %50) #16
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 500000
  br i1 %16, label %5, label %3

17:                                               ; preds = %17, %3
  %18 = phi i64 [ 0, %3 ], [ %51, %17 ]
  %19 = phi float [ 1.000000e+00, %3 ], [ %50, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %21 = load float, float* %20, align 16, !tbaa !2
  %22 = fmul float %19, %21
  %23 = or i64 %18, 1
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4, !tbaa !2
  %26 = fmul float %22, %25
  %27 = or i64 %18, 2
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 8, !tbaa !2
  %30 = fmul float %26, %29
  %31 = or i64 %18, 3
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fmul float %30, %33
  %35 = or i64 %18, 4
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 16, !tbaa !2
  %38 = fmul float %34, %37
  %39 = or i64 %18, 5
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fmul float %38, %41
  %43 = or i64 %18, 6
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 8, !tbaa !2
  %46 = fmul float %42, %45
  %47 = or i64 %18, 7
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 4, !tbaa !2
  %50 = fmul float %46, %49
  %51 = add nuw nsw i64 %18, 8
  %52 = icmp eq i64 %51, 32000
  br i1 %52, label %13, label %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s313() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %13, %0
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.257, i64 0, i64 0), double %9)
  store float %53, float* @temp, align 4, !tbaa !2
  %11 = fpext float %53 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #16
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %53) #16
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 250000
  br i1 %16, label %5, label %3

17:                                               ; preds = %17, %3
  %18 = phi i64 [ 0, %3 ], [ %54, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %53, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fmul float %21, %23
  %25 = fadd float %19, %24
  %26 = add nuw nsw i64 %18, 1
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fmul float %28, %30
  %32 = fadd float %25, %31
  %33 = add nuw nsw i64 %18, 2
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %33
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fmul float %35, %37
  %39 = fadd float %32, %38
  %40 = add nuw nsw i64 %18, 3
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fmul float %42, %44
  %46 = fadd float %39, %45
  %47 = add nuw nsw i64 %18, 4
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 4, !tbaa !2
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %51 = load float, float* %50, align 4, !tbaa !2
  %52 = fmul float %49, %51
  %53 = fadd float %46, %52
  %54 = add nuw nsw i64 %18, 5
  %55 = icmp eq i64 %54, 32000
  br i1 %55, label %13, label %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s314() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %11

3:                                                ; preds = %14
  %4 = tail call i64 @clock() #16
  %5 = sub nsw i64 %4, %2
  %6 = sitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.258, i64 0, i64 0), double %7)
  store float %34, float* @temp, align 4, !tbaa !2
  %9 = fpext float %34 to double
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %9) #16
  ret i32 0

11:                                               ; preds = %14, %0
  %12 = phi i32 [ 0, %0 ], [ %16, %14 ]
  %13 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  br label %18

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %34) #16
  %16 = add nuw nsw i32 %12, 1
  %17 = icmp eq i32 %16, 250000
  br i1 %17, label %3, label %11

18:                                               ; preds = %37, %11
  %19 = phi i64 [ 1, %11 ], [ %42, %37 ]
  %20 = phi float [ %13, %11 ], [ %41, %37 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 4, !tbaa !2
  %23 = fcmp ogt float %22, %20
  %24 = select i1 %23, float %22, float %20
  %25 = add nuw nsw i64 %19, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fcmp ogt float %27, %24
  %29 = select i1 %28, float %27, float %24
  %30 = add nuw nsw i64 %19, 2
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 4, !tbaa !2
  %33 = fcmp ogt float %32, %29
  %34 = select i1 %33, float %32, float %29
  %35 = add nuw nsw i64 %19, 3
  %36 = icmp eq i64 %35, 32000
  br i1 %36, label %14, label %37

37:                                               ; preds = %18
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = fcmp ogt float %39, %34
  %41 = select i1 %40, float %39, float %34
  %42 = add nuw nsw i64 %19, 4
  br label %18
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s315() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0))
  br label %4

2:                                                ; preds = %4
  %3 = tail call i64 @clock() #16
  br label %28

4:                                                ; preds = %4, %0
  %5 = phi i64 [ 0, %0 ], [ %17, %4 ]
  %6 = trunc i64 %5 to i32
  %7 = mul nuw nsw i32 %6, 7
  %8 = urem i32 %7, 32000
  %9 = sitofp i32 %8 to float
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5
  store float %9, float* %10, align 8, !tbaa !2
  %11 = or i64 %5, 1
  %12 = trunc i64 %11 to i32
  %13 = mul nuw nsw i32 %12, 7
  %14 = urem i32 %13, 32000
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11
  store float %15, float* %16, align 4, !tbaa !2
  %17 = add nuw nsw i64 %5, 2
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %2, label %4

19:                                               ; preds = %31
  %20 = tail call i64 @clock() #16
  %21 = sub nsw i64 %20, %3
  %22 = sitofp i64 %21 to double
  %23 = fdiv double %22, 1.000000e+06
  %24 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i64 0, i64 0), double %23)
  %25 = fadd float %33, 1.000000e+00
  store float %25, float* @temp, align 4, !tbaa !2
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #16
  ret i32 0

28:                                               ; preds = %31, %2
  %29 = phi i32 [ 0, %2 ], [ %35, %31 ]
  %30 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  br label %37

31:                                               ; preds = %37
  %32 = sitofp i32 %60 to float
  %33 = fadd float %58, %32
  %34 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %33) #16
  %35 = add nuw nsw i32 %29, 1
  %36 = icmp eq i32 %35, 50000
  br i1 %36, label %19, label %28

37:                                               ; preds = %63, %28
  %38 = phi i64 [ 1, %28 ], [ %70, %63 ]
  %39 = phi i32 [ 0, %28 ], [ %69, %63 ]
  %40 = phi float [ %30, %28 ], [ %67, %63 ]
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = fcmp ogt float %42, %40
  %44 = select i1 %43, float %42, float %40
  %45 = trunc i64 %38 to i32
  %46 = select i1 %43, i32 %45, i32 %39
  %47 = add nuw nsw i64 %38, 1
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 4, !tbaa !2
  %50 = fcmp ogt float %49, %44
  %51 = select i1 %50, float %49, float %44
  %52 = trunc i64 %47 to i32
  %53 = select i1 %50, i32 %52, i32 %46
  %54 = add nuw nsw i64 %38, 2
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !2
  %57 = fcmp ogt float %56, %51
  %58 = select i1 %57, float %56, float %51
  %59 = trunc i64 %54 to i32
  %60 = select i1 %57, i32 %59, i32 %53
  %61 = add nuw nsw i64 %38, 3
  %62 = icmp eq i64 %61, 32000
  br i1 %62, label %31, label %63

63:                                               ; preds = %37
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fcmp ogt float %65, %58
  %67 = select i1 %66, float %65, float %58
  %68 = trunc i64 %61 to i32
  %69 = select i1 %66, i32 %68, i32 %60
  %70 = add nuw nsw i64 %38, 4
  br label %37
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s316() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %11

3:                                                ; preds = %14
  %4 = tail call i64 @clock() #16
  %5 = sub nsw i64 %4, %2
  %6 = sitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.260, i64 0, i64 0), double %7)
  store float %34, float* @temp, align 4, !tbaa !2
  %9 = fpext float %34 to double
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %9) #16
  ret i32 0

11:                                               ; preds = %14, %0
  %12 = phi i32 [ 0, %0 ], [ %16, %14 ]
  %13 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  br label %18

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %34) #16
  %16 = add nuw nsw i32 %12, 1
  %17 = icmp eq i32 %16, 250000
  br i1 %17, label %3, label %11

18:                                               ; preds = %37, %11
  %19 = phi i64 [ 1, %11 ], [ %42, %37 ]
  %20 = phi float [ %13, %11 ], [ %41, %37 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 4, !tbaa !2
  %23 = fcmp olt float %22, %20
  %24 = select i1 %23, float %22, float %20
  %25 = add nuw nsw i64 %19, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fcmp olt float %27, %24
  %29 = select i1 %28, float %27, float %24
  %30 = add nuw nsw i64 %19, 2
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 4, !tbaa !2
  %33 = fcmp olt float %32, %29
  %34 = select i1 %33, float %32, float %29
  %35 = add nuw nsw i64 %19, 3
  %36 = icmp eq i64 %35, 32000
  br i1 %36, label %14, label %37

37:                                               ; preds = %18
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = fcmp olt float %39, %34
  %41 = select i1 %40, float %39, float %34
  %42 = add nuw nsw i64 %19, 4
  br label %18
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s317() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %13, %0
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.261, i64 0, i64 0), double %9)
  store float %29, float* @temp, align 4, !tbaa !2
  %11 = fpext float %29 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #16
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %29) #16
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 250000
  br i1 %16, label %5, label %3

17:                                               ; preds = %17, %3
  %18 = phi i32 [ 0, %3 ], [ %30, %17 ]
  %19 = phi float [ 1.000000e+00, %3 ], [ %29, %17 ]
  %20 = fmul float %19, 0x3FEFAE1480000000
  %21 = fmul float %20, 0x3FEFAE1480000000
  %22 = fmul float %21, 0x3FEFAE1480000000
  %23 = fmul float %22, 0x3FEFAE1480000000
  %24 = fmul float %23, 0x3FEFAE1480000000
  %25 = fmul float %24, 0x3FEFAE1480000000
  %26 = fmul float %25, 0x3FEFAE1480000000
  %27 = fmul float %26, 0x3FEFAE1480000000
  %28 = fmul float %27, 0x3FEFAE1480000000
  %29 = fmul float %28, 0x3FEFAE1480000000
  %30 = add nuw nsw i32 %18, 10
  %31 = icmp eq i32 %30, 16000
  br i1 %31, label %13, label %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s318(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = sext i32 %0 to i64
  br label %14

5:                                                ; preds = %18
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %3
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.262, i64 0, i64 0), double %9)
  %11 = fadd float %20, 1.000000e+00
  store float %11, float* @temp, align 4, !tbaa !2
  %12 = fpext float %11 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #16
  ret i32 0

14:                                               ; preds = %18, %1
  %15 = phi i32 [ 0, %1 ], [ %22, %18 ]
  %16 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %17 = tail call float @llvm.fabs.f32(float %16)
  br label %24

18:                                               ; preds = %24
  %19 = sitofp i32 %33 to float
  %20 = fadd float %34, %19
  %21 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %20) #16
  %22 = add nuw nsw i32 %15, 1
  %23 = icmp eq i32 %22, 25000
  br i1 %23, label %5, label %14

24:                                               ; preds = %38, %14
  %25 = phi i64 [ %4, %14 ], [ %45, %38 ]
  %26 = phi i32 [ 1, %14 ], [ %46, %38 ]
  %27 = phi float [ %17, %14 ], [ %44, %38 ]
  %28 = phi i32 [ 0, %14 ], [ %43, %38 ]
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = tail call float @llvm.fabs.f32(float %30)
  %32 = fcmp ugt float %31, %27
  %33 = select i1 %32, i32 %26, i32 %28
  %34 = select i1 %32, float %31, float %27
  %35 = add i64 %25, %4
  %36 = add nuw nsw i32 %26, 1
  %37 = icmp eq i32 %36, 32000
  br i1 %37, label %18, label %38

38:                                               ; preds = %24
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = tail call float @llvm.fabs.f32(float %40)
  %42 = fcmp ugt float %41, %34
  %43 = select i1 %42, i32 %36, i32 %33
  %44 = select i1 %42, float %41, float %34
  %45 = add i64 %35, %4
  %46 = add nuw nsw i32 %26, 2
  br label %24
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s319() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %13, %0
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.263, i64 0, i64 0), double %9)
  store float %44, float* @temp, align 4, !tbaa !2
  %11 = fpext float %44 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #16
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %44) #16
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 100000
  br i1 %16, label %5, label %3

17:                                               ; preds = %17, %3
  %18 = phi i64 [ 0, %3 ], [ %45, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %44, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %21 = load float, float* %20, align 8, !tbaa !2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %21, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  store float %24, float* %25, align 8, !tbaa !2
  %26 = fadd float %19, %24
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %18
  %28 = load float, float* %27, align 8, !tbaa !2
  %29 = fadd float %21, %28
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  store float %29, float* %30, align 8, !tbaa !2
  %31 = fadd float %26, %29
  %32 = or i64 %18, 1
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %37, float* %38, align 4, !tbaa !2
  %39 = fadd float %31, %37
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %32
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %34, %41
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  store float %42, float* %43, align 4, !tbaa !2
  %44 = fadd float %39, %42
  %45 = add nuw nsw i64 %18, 2
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %13, label %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s319p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %48
  %4 = phi i32 [ 0, %0 ], [ %50, %48 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %38, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fadd <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> %13, <4 x float>* %15, align 16, !tbaa !2
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fadd <4 x float> %9, %18
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 16, !tbaa !2
  %22 = or i64 %6, 4
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 16, !tbaa !2
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %22
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 16, !tbaa !2
  %29 = fadd <4 x float> %25, %28
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %29, <4 x float>* %31, align 16, !tbaa !2
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %22
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !2
  %35 = fadd <4 x float> %25, %34
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 16, !tbaa !2
  %38 = add nuw nsw i64 %6, 8
  %39 = icmp eq i64 %38, 32000
  br i1 %39, label %52, label %5, !llvm.loop !412

40:                                               ; preds = %48
  %41 = tail call i64 @clock() #16
  %42 = sub nsw i64 %41, %2
  %43 = sitofp i64 %42 to double
  %44 = fdiv double %43, 1.000000e+06
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.264, i64 0, i64 0), double %44)
  store float %88, float* @temp, align 4, !tbaa !2
  %46 = fpext float %88 to double
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %46) #16
  ret i32 0

48:                                               ; preds = %52
  %49 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %88) #16
  %50 = add nuw nsw i32 %4, 1
  %51 = icmp eq i32 %50, 100000
  br i1 %51, label %40, label %3

52:                                               ; preds = %5, %52
  %53 = phi i64 [ %89, %52 ], [ 0, %5 ]
  %54 = phi float [ %88, %52 ], [ 0.000000e+00, %5 ]
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %56 = load float, float* %55, align 4, !tbaa !2
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %53
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %56, %58
  %60 = fadd float %54, %59
  %61 = add nuw nsw i64 %53, 1
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %61
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %63, %65
  %67 = fadd float %60, %66
  %68 = add nuw nsw i64 %53, 2
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %68
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %70, %72
  %74 = fadd float %67, %73
  %75 = add nuw nsw i64 %53, 3
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %75
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fadd float %77, %79
  %81 = fadd float %74, %80
  %82 = add nuw nsw i64 %53, 4
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %82
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fadd float %84, %86
  %88 = fadd float %81, %87
  %89 = add nuw nsw i64 %53, 5
  %90 = icmp eq i64 %89, 32000
  br i1 %90, label %48, label %52
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s319pp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %13, %0
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.265, i64 0, i64 0), double %9)
  store float %44, float* @temp, align 4, !tbaa !2
  %11 = fpext float %44 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #16
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %44) #16
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 100000
  br i1 %16, label %5, label %3

17:                                               ; preds = %17, %3
  %18 = phi i64 [ 0, %3 ], [ %45, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %44, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %21 = load float, float* %20, align 8, !tbaa !2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %21, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  store float %24, float* %25, align 8, !tbaa !2
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %18
  %27 = load float, float* %26, align 8, !tbaa !2
  %28 = fadd float %21, %27
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  store float %28, float* %29, align 8, !tbaa !2
  %30 = fadd float %24, %28
  %31 = fadd float %19, %30
  %32 = or i64 %18, 1
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %37, float* %38, align 4, !tbaa !2
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %32
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %34, %40
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  store float %41, float* %42, align 4, !tbaa !2
  %43 = fadd float %37, %41
  %44 = fadd float %31, %43
  %45 = add nuw nsw i64 %18, 2
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %13, label %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s319ppp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %13, %0
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.266, i64 0, i64 0), double %9)
  store float %50, float* @temp, align 4, !tbaa !2
  %11 = fpext float %50 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #16
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %50) #16
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 100000
  br i1 %16, label %5, label %3

17:                                               ; preds = %3, %17
  %18 = phi i64 [ 0, %3 ], [ %51, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %50, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %18
  %24 = bitcast float* %20 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 16, !tbaa !2
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %27 = bitcast float* %21 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 16, !tbaa !2
  %29 = fadd <4 x float> %25, %28
  %30 = bitcast float* %22 to <4 x float>*
  store <4 x float> %29, <4 x float>* %30, align 16, !tbaa !2
  %31 = bitcast float* %23 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !2
  %33 = fadd <4 x float> %25, %32
  %34 = bitcast float* %26 to <4 x float>*
  store <4 x float> %33, <4 x float>* %34, align 16, !tbaa !2
  %35 = extractelement <4 x float> %29, i32 0
  %36 = extractelement <4 x float> %33, i32 0
  %37 = fadd float %35, %36
  %38 = extractelement <4 x float> %29, i32 1
  %39 = fadd float %37, %38
  %40 = extractelement <4 x float> %33, i32 1
  %41 = fadd float %39, %40
  %42 = extractelement <4 x float> %29, i32 2
  %43 = fadd float %41, %42
  %44 = extractelement <4 x float> %33, i32 2
  %45 = fadd float %43, %44
  %46 = extractelement <4 x float> %29, i32 3
  %47 = fadd float %45, %46
  %48 = extractelement <4 x float> %33, i32 3
  %49 = fadd float %47, %48
  %50 = fadd float %19, %49
  %51 = add nuw nsw i64 %18, 4
  %52 = icmp ult i64 %18, 31996
  br i1 %52, label %17, label %13
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s3110() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %14

3:                                                ; preds = %23
  %4 = tail call i64 @clock() #16
  %5 = sub nsw i64 %4, %2
  %6 = sitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.267, i64 0, i64 0), double %7)
  %9 = fadd float %25, 1.000000e+00
  %10 = fadd float %9, %26
  %11 = fadd float %10, 1.000000e+00
  store float %11, float* @temp, align 4, !tbaa !2
  %12 = fpext float %11 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #16
  ret i32 0

14:                                               ; preds = %23, %0
  %15 = phi i32 [ 0, %0 ], [ %29, %23 ]
  %16 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 0), align 16, !tbaa !2
  br label %17

17:                                               ; preds = %31, %14
  %18 = phi i64 [ 0, %14 ], [ %32, %31 ]
  %19 = phi i32 [ 0, %14 ], [ %53, %31 ]
  %20 = phi float [ %16, %14 ], [ %51, %31 ]
  %21 = phi i32 [ 0, %14 ], [ %50, %31 ]
  %22 = trunc i64 %18 to i32
  br label %34

23:                                               ; preds = %31
  %24 = sitofp i32 %53 to float
  %25 = fadd float %51, %24
  %26 = sitofp i32 %50 to float
  %27 = fadd float %25, %26
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %27) #16
  %29 = add nuw nsw i32 %15, 1
  %30 = icmp eq i32 %29, 19500
  br i1 %30, label %3, label %14

31:                                               ; preds = %34
  %32 = add nuw nsw i64 %18, 1
  %33 = icmp eq i64 %32, 256
  br i1 %33, label %23, label %17

34:                                               ; preds = %34, %17
  %35 = phi i64 [ 0, %17 ], [ %54, %34 ]
  %36 = phi i32 [ %19, %17 ], [ %53, %34 ]
  %37 = phi float [ %20, %17 ], [ %51, %34 ]
  %38 = phi i32 [ %21, %17 ], [ %50, %34 ]
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %18, i64 %35
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fcmp ogt float %40, %37
  %42 = trunc i64 %35 to i32
  %43 = select i1 %41, i32 %42, i32 %38
  %44 = select i1 %41, float %40, float %37
  %45 = or i64 %35, 1
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %18, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fcmp ogt float %47, %44
  %49 = trunc i64 %45 to i32
  %50 = select i1 %48, i32 %49, i32 %43
  %51 = select i1 %48, float %47, float %44
  %52 = or i1 %48, %41
  %53 = select i1 %52, i32 %22, i32 %36
  %54 = add nuw nsw i64 %35, 2
  %55 = icmp eq i64 %54, 256
  br i1 %55, label %31, label %34
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s13110() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %14

3:                                                ; preds = %20
  %4 = tail call i64 @clock() #16
  %5 = sub nsw i64 %4, %2
  %6 = sitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.268, i64 0, i64 0), double %7)
  %9 = fadd float %21, 1.000000e+00
  %10 = fadd float %9, 0.000000e+00
  %11 = fadd float %10, 1.000000e+00
  store float %11, float* @temp, align 4, !tbaa !2
  %12 = fpext float %11 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #16
  ret i32 0

14:                                               ; preds = %20, %0
  %15 = phi i32 [ 0, %0 ], [ %23, %20 ]
  %16 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 0), align 16, !tbaa !2
  br label %17

17:                                               ; preds = %25, %14
  %18 = phi i64 [ 0, %14 ], [ %26, %25 ]
  %19 = phi float [ %16, %14 ], [ %49, %25 ]
  br label %28

20:                                               ; preds = %25
  %21 = fadd float %49, 0.000000e+00
  %22 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %21) #16
  %23 = add nuw nsw i32 %15, 1
  %24 = icmp eq i32 %23, 19500
  br i1 %24, label %3, label %14

25:                                               ; preds = %28
  %26 = add nuw nsw i64 %18, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %20, label %17

28:                                               ; preds = %28, %17
  %29 = phi i64 [ 0, %17 ], [ %50, %28 ]
  %30 = phi float [ %19, %17 ], [ %49, %28 ]
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %18, i64 %29
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fcmp ogt float %32, %30
  %34 = select i1 %33, float %32, float %30
  %35 = or i64 %29, 1
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %18, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fcmp ogt float %37, %34
  %39 = select i1 %38, float %37, float %34
  %40 = or i64 %29, 2
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %18, i64 %40
  %42 = load float, float* %41, align 8, !tbaa !2
  %43 = fcmp ogt float %42, %39
  %44 = select i1 %43, float %42, float %39
  %45 = or i64 %29, 3
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %18, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fcmp ogt float %47, %44
  %49 = select i1 %48, float %47, float %44
  %50 = add nuw nsw i64 %29, 4
  %51 = icmp eq i64 %50, 256
  br i1 %51, label %25, label %28
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s3111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %13, %0
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.269, i64 0, i64 0), double %9)
  store float %48, float* @temp, align 4, !tbaa !2
  %11 = fpext float %48 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #16
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %48) #16
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 25000
  br i1 %16, label %5, label %3

17:                                               ; preds = %17, %3
  %18 = phi i64 [ 0, %3 ], [ %49, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %48, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !2
  %22 = fcmp ogt float %21, 0.000000e+00
  %23 = fadd float %19, %21
  %24 = select i1 %22, float %23, float %19
  %25 = add nuw nsw i64 %18, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fcmp ogt float %27, 0.000000e+00
  %29 = fadd float %24, %27
  %30 = select i1 %28, float %29, float %24
  %31 = add nuw nsw i64 %18, 2
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fcmp ogt float %33, 0.000000e+00
  %35 = fadd float %30, %33
  %36 = select i1 %34, float %35, float %30
  %37 = add nuw nsw i64 %18, 3
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = fcmp ogt float %39, 0.000000e+00
  %41 = fadd float %36, %39
  %42 = select i1 %40, float %41, float %36
  %43 = add nuw nsw i64 %18, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fcmp ogt float %45, 0.000000e+00
  %47 = fadd float %42, %45
  %48 = select i1 %46, float %47, float %42
  %49 = add nuw nsw i64 %18, 5
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %13, label %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s3112() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %51, %0
  %4 = phi i32 [ 0, %0 ], [ %53, %51 ]
  br label %55

5:                                                ; preds = %51
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.270, i64 0, i64 0), double %9)
  store float %80, float* @temp, align 4, !tbaa !2
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fadd float %80, %44
  %49 = fpext float %48 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %80) #16
  %53 = add nuw nsw i32 %4, 1
  %54 = icmp eq i32 %53, 50000
  br i1 %54, label %5, label %3

55:                                               ; preds = %55, %3
  %56 = phi i64 [ 0, %3 ], [ %82, %55 ]
  %57 = phi float [ 0.000000e+00, %3 ], [ %80, %55 ]
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %59 = load float, float* %58, align 4, !tbaa !2
  %60 = fadd float %57, %59
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  store float %60, float* %61, align 4, !tbaa !2
  %62 = add nuw nsw i64 %56, 1
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %60, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  store float %65, float* %66, align 4, !tbaa !2
  %67 = add nuw nsw i64 %56, 2
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %65, %69
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  store float %70, float* %71, align 4, !tbaa !2
  %72 = add nuw nsw i64 %56, 3
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fadd float %70, %74
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %72
  store float %75, float* %76, align 4, !tbaa !2
  %77 = add nuw nsw i64 %56, 4
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %77
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fadd float %75, %79
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %77
  store float %80, float* %81, align 4, !tbaa !2
  %82 = add nuw nsw i64 %56, 5
  %83 = icmp eq i64 %82, 32000
  br i1 %83, label %51, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s3113() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %11

3:                                                ; preds = %18
  %4 = tail call i64 @clock() #16
  %5 = sub nsw i64 %4, %2
  %6 = sitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.271, i64 0, i64 0), double %7)
  store float %41, float* @temp, align 4, !tbaa !2
  %9 = fpext float %41 to double
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %9) #16
  ret i32 0

11:                                               ; preds = %18, %0
  %12 = phi i32 [ 0, %0 ], [ %20, %18 ]
  %13 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  %14 = tail call float @llvm.fabs.f32(float %13)
  %15 = tail call float @llvm.fabs.f32(float %13)
  %16 = fcmp ogt float %15, %14
  %17 = select i1 %16, float %15, float %14
  br label %22

18:                                               ; preds = %22
  %19 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %41) #16
  %20 = add nuw nsw i32 %12, 1
  %21 = icmp eq i32 %20, 200000
  br i1 %21, label %3, label %11

22:                                               ; preds = %44, %11
  %23 = phi i64 [ 1, %11 ], [ %50, %44 ]
  %24 = phi float [ %17, %11 ], [ %49, %44 ]
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %26 = load float, float* %25, align 4, !tbaa !2
  %27 = tail call float @llvm.fabs.f32(float %26)
  %28 = fcmp ogt float %27, %24
  %29 = select i1 %28, float %27, float %24
  %30 = add nuw nsw i64 %23, 1
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 4, !tbaa !2
  %33 = tail call float @llvm.fabs.f32(float %32)
  %34 = fcmp ogt float %33, %29
  %35 = select i1 %34, float %33, float %29
  %36 = add nuw nsw i64 %23, 2
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = tail call float @llvm.fabs.f32(float %38)
  %40 = fcmp ogt float %39, %35
  %41 = select i1 %40, float %39, float %35
  %42 = add nuw nsw i64 %23, 3
  %43 = icmp eq i64 %42, 32000
  br i1 %43, label %18, label %44

44:                                               ; preds = %22
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %46 = load float, float* %45, align 4, !tbaa !2
  %47 = tail call float @llvm.fabs.f32(float %46)
  %48 = fcmp ogt float %47, %41
  %49 = select i1 %48, float %47, float %41
  %50 = add nuw nsw i64 %23, 4
  br label %22
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s321() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %51, %0
  %4 = phi i32 [ 0, %0 ], [ %53, %51 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !2
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.272, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %4, 1
  %54 = icmp eq i32 %53, 50000
  br i1 %54, label %6, label %3

55:                                               ; preds = %66, %3
  %56 = phi float [ %5, %3 ], [ %72, %66 ]
  %57 = phi i64 [ 1, %3 ], [ %73, %66 ]
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %57
  %59 = load float, float* %58, align 4, !tbaa !2
  %60 = fmul float %56, %59
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fadd float %62, %60
  store float %63, float* %61, align 4, !tbaa !2
  %64 = add nuw nsw i64 %57, 1
  %65 = icmp eq i64 %64, 32000
  br i1 %65, label %51, label %66

66:                                               ; preds = %55
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %64
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fmul float %63, %68
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fadd float %71, %69
  store float %72, float* %70, align 4, !tbaa !2
  %73 = add nuw nsw i64 %57, 2
  br label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s322() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %51, %0
  %4 = phi i32 [ 0, %0 ], [ %53, %51 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 1), align 4, !tbaa !2
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.273, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %4, 1
  %54 = icmp eq i32 %53, 25000
  br i1 %54, label %6, label %3

55:                                               ; preds = %55, %3
  %56 = phi float [ %5, %3 ], [ %84, %55 ]
  %57 = phi i64 [ 2, %3 ], [ %85, %55 ]
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %57
  %61 = load float, float* %60, align 8, !tbaa !2
  %62 = fmul float %56, %61
  %63 = fadd float %59, %62
  %64 = add nsw i64 %57, -2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 8, !tbaa !2
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %57
  %68 = load float, float* %67, align 8, !tbaa !2
  %69 = fmul float %66, %68
  %70 = fadd float %63, %69
  store float %70, float* %58, align 8, !tbaa !2
  %71 = or i64 %57, 1
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %71
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fmul float %70, %75
  %77 = fadd float %73, %76
  %78 = add nsw i64 %57, -1
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %71
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = fmul float %80, %82
  %84 = fadd float %77, %83
  store float %84, float* %72, align 4, !tbaa !2
  %85 = add nuw nsw i64 %57, 2
  %86 = icmp eq i64 %85, 32000
  br i1 %86, label %51, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s323() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %56, %0
  %4 = phi i32 [ 0, %0 ], [ %58, %56 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !2
  br label %60

6:                                                ; preds = %56
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %2
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %50, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %49, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %46, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !2
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %21, %27
  %29 = add nuw nsw i64 %13, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %25, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !2
  %35 = fadd float %28, %34
  %36 = add nuw nsw i64 %13, 3
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %41 = load float, float* %40, align 4, !tbaa !2
  %42 = fadd float %35, %41
  %43 = add nuw nsw i64 %13, 4
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %39, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %43
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %13, 5
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %12

52:                                               ; preds = %12
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #16
  ret i32 0

56:                                               ; preds = %60
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %58 = add nuw nsw i32 %4, 1
  %59 = icmp eq i32 %58, 25000
  br i1 %59, label %6, label %3

60:                                               ; preds = %77, %3
  %61 = phi float [ %5, %3 ], [ %88, %77 ]
  %62 = phi i64 [ 1, %3 ], [ %90, %77 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %62
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fmul float %64, %66
  %68 = fadd float %61, %67
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  store float %68, float* %69, align 4, !tbaa !2
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %62
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fmul float %64, %71
  %73 = fadd float %68, %72
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  store float %73, float* %74, align 4, !tbaa !2
  %75 = add nuw nsw i64 %62, 1
  %76 = icmp eq i64 %75, 32000
  br i1 %76, label %56, label %77

77:                                               ; preds = %60
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %75
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %75
  %81 = load float, float* %80, align 4, !tbaa !2
  %82 = fmul float %79, %81
  %83 = fadd float %73, %82
  %84 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  store float %83, float* %84, align 4, !tbaa !2
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %75
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fmul float %79, %86
  %88 = fadd float %83, %87
  %89 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %75
  store float %88, float* %89, align 4, !tbaa !2
  %90 = add nuw nsw i64 %62, 2
  br label %60
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s331() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %15, %0
  %4 = phi i32 [ 0, %0 ], [ %18, %15 ]
  br label %20

5:                                                ; preds = %15
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.275, i64 0, i64 0), double %9)
  %11 = add nsw i32 %51, 1
  %12 = sitofp i32 %11 to float
  store float %12, float* @temp, align 4, !tbaa !2
  %13 = fpext float %12 to double
  %14 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %13) #16
  ret i32 0

15:                                               ; preds = %20
  %16 = sitofp i32 %51 to float
  %17 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %16) #16
  %18 = add nuw nsw i32 %4, 1
  %19 = icmp eq i32 %18, 50000
  br i1 %19, label %5, label %3

20:                                               ; preds = %20, %3
  %21 = phi i64 [ 0, %3 ], [ %52, %20 ]
  %22 = phi i32 [ -1, %3 ], [ %51, %20 ]
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fcmp olt float %24, 0.000000e+00
  %26 = trunc i64 %21 to i32
  %27 = select i1 %25, i32 %26, i32 %22
  %28 = add nuw nsw i64 %21, 1
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fcmp olt float %30, 0.000000e+00
  %32 = trunc i64 %28 to i32
  %33 = select i1 %31, i32 %32, i32 %27
  %34 = add nuw nsw i64 %21, 2
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fcmp olt float %36, 0.000000e+00
  %38 = trunc i64 %34 to i32
  %39 = select i1 %37, i32 %38, i32 %33
  %40 = add nuw nsw i64 %21, 3
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = fcmp olt float %42, 0.000000e+00
  %44 = trunc i64 %40 to i32
  %45 = select i1 %43, i32 %44, i32 %39
  %46 = add nuw nsw i64 %21, 4
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fcmp olt float %48, 0.000000e+00
  %50 = trunc i64 %46 to i32
  %51 = select i1 %49, i32 %50, i32 %45
  %52 = add nuw nsw i64 %21, 5
  %53 = icmp eq i64 %52, 32000
  br i1 %53, label %15, label %20
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @max(i32 %0, i32 %1) local_unnamed_addr #11 {
  %3 = icmp sgt i32 %1, %0
  %4 = select i1 %3, i32 %1, i32 %0
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s332(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %20, %1
  %5 = phi i32 [ 0, %1 ], [ %26, %20 ]
  br label %6

6:                                                ; preds = %51, %4
  %7 = phi i64 [ 0, %4 ], [ %52, %51 ]
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = load float, float* %8, align 4, !tbaa !2
  %10 = fcmp ogt float %9, %0
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = add nuw nsw i64 %7, 1
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %14 = load float, float* %13, align 4, !tbaa !2
  %15 = fcmp ogt float %14, %0
  br i1 %15, label %16, label %36

16:                                               ; preds = %46, %41, %36, %11, %6
  %17 = phi i64 [ %7, %6 ], [ %12, %11 ], [ %37, %36 ], [ %42, %41 ], [ %47, %46 ]
  %18 = phi float [ %9, %6 ], [ %14, %11 ], [ %39, %36 ], [ %44, %41 ], [ %49, %46 ]
  %19 = trunc i64 %17 to i32
  br label %20

20:                                               ; preds = %51, %16
  %21 = phi float [ %18, %16 ], [ -1.000000e+00, %51 ]
  %22 = phi i32 [ %19, %16 ], [ -2, %51 ]
  %23 = sitofp i32 %22 to float
  %24 = fadd float %21, %23
  %25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %24) #16
  %26 = add nuw nsw i32 %5, 1
  %27 = icmp eq i32 %26, 50000
  br i1 %27, label %28, label %4

28:                                               ; preds = %20
  %29 = tail call i64 @clock() #16
  %30 = sub nsw i64 %29, %3
  %31 = sitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.276, i64 0, i64 0), double %32)
  store float %21, float* @temp, align 4, !tbaa !2
  %34 = fpext float %21 to double
  %35 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %34) #16
  ret i32 0

36:                                               ; preds = %11
  %37 = add nuw nsw i64 %7, 2
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = fcmp ogt float %39, %0
  br i1 %40, label %16, label %41

41:                                               ; preds = %36
  %42 = add nuw nsw i64 %7, 3
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fcmp ogt float %44, %0
  br i1 %45, label %16, label %46

46:                                               ; preds = %41
  %47 = add nuw nsw i64 %7, 4
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 4, !tbaa !2
  %50 = fcmp ogt float %49, %0
  br i1 %50, label %16, label %51

51:                                               ; preds = %46
  %52 = add nuw nsw i64 %7, 5
  %53 = icmp eq i64 %52, 32000
  br i1 %53, label %20, label %6
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s341() local_unnamed_addr #7 {
  %1 = tail call i64 @clock() #16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %51, %0
  %5 = phi i32 [ 0, %0 ], [ %53, %51 ]
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.277, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %75
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %5, 1
  %54 = icmp eq i32 %53, 50000
  br i1 %54, label %6, label %4

55:                                               ; preds = %75, %4
  %56 = phi i64 [ 0, %4 ], [ %77, %75 ]
  %57 = phi i32 [ -1, %4 ], [ %76, %75 ]
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = fcmp ogt float %59, 0.000000e+00
  br i1 %60, label %61, label %65

61:                                               ; preds = %55
  %62 = add nsw i32 %57, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  store float %59, float* %64, align 4, !tbaa !2
  br label %65

65:                                               ; preds = %55, %61
  %66 = phi i32 [ %62, %61 ], [ %57, %55 ]
  %67 = or i64 %56, 1
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fcmp ogt float %69, 0.000000e+00
  br i1 %70, label %71, label %75

71:                                               ; preds = %65
  %72 = add nsw i32 %66, 1
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  store float %69, float* %74, align 4, !tbaa !2
  br label %75

75:                                               ; preds = %71, %65
  %76 = phi i32 [ %72, %71 ], [ %66, %65 ]
  %77 = add nuw nsw i64 %56, 2
  %78 = icmp eq i64 %77, 32000
  br i1 %78, label %51, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s342() local_unnamed_addr #7 {
  %1 = tail call i64 @clock() #16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %51, %0
  %5 = phi i32 [ 0, %0 ], [ %53, %51 ]
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.278, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %81
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %5, 1
  %54 = icmp eq i32 %53, 50000
  br i1 %54, label %6, label %4

55:                                               ; preds = %81, %4
  %56 = phi i64 [ 0, %4 ], [ %83, %81 ]
  %57 = phi i32 [ -1, %4 ], [ %82, %81 ]
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %59 = load float, float* %58, align 8, !tbaa !2
  %60 = fcmp ogt float %59, 0.000000e+00
  br i1 %60, label %61, label %68

61:                                               ; preds = %55
  %62 = add nsw i32 %57, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %63
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4, !tbaa !2
  %67 = bitcast float* %58 to i32*
  store i32 %66, i32* %67, align 8, !tbaa !2
  br label %68

68:                                               ; preds = %55, %61
  %69 = phi i32 [ %62, %61 ], [ %57, %55 ]
  %70 = or i64 %56, 1
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fcmp ogt float %72, 0.000000e+00
  br i1 %73, label %74, label %81

74:                                               ; preds = %68
  %75 = add nsw i32 %69, 1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %76
  %78 = bitcast float* %77 to i32*
  %79 = load i32, i32* %78, align 4, !tbaa !2
  %80 = bitcast float* %71 to i32*
  store i32 %79, i32* %80, align 4, !tbaa !2
  br label %81

81:                                               ; preds = %74, %68
  %82 = phi i32 [ %75, %74 ], [ %69, %68 ]
  %83 = add nuw nsw i64 %56, 2
  %84 = icmp eq i64 %83, 32000
  br i1 %84, label %51, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s343() local_unnamed_addr #7 {
  %1 = tail call i64 @clock() #16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %54, %0
  %5 = phi i32 [ 0, %0 ], [ %56, %54 ]
  br label %51

6:                                                ; preds = %54
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.279, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 65536
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %58, %4
  %52 = phi i64 [ 0, %4 ], [ %59, %58 ]
  %53 = phi i32 [ -1, %4 ], [ %90, %58 ]
  br label %61

54:                                               ; preds = %58
  %55 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %56 = add nuw nsw i32 %5, 1
  %57 = icmp eq i32 %56, 1950
  br i1 %57, label %6, label %4

58:                                               ; preds = %89
  %59 = add nuw nsw i64 %52, 1
  %60 = icmp eq i64 %59, 256
  br i1 %60, label %54, label %51

61:                                               ; preds = %89, %51
  %62 = phi i64 [ 0, %51 ], [ %91, %89 ]
  %63 = phi i32 [ %53, %51 ], [ %90, %89 ]
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %62, i64 %52
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fcmp ogt float %65, 0.000000e+00
  br i1 %66, label %67, label %75

67:                                               ; preds = %61
  %68 = add nsw i32 %63, 1
  %69 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %62, i64 %52
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4, !tbaa !2
  %72 = sext i32 %68 to i64
  %73 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %72
  %74 = bitcast float* %73 to i32*
  store i32 %71, i32* %74, align 4, !tbaa !2
  br label %75

75:                                               ; preds = %61, %67
  %76 = phi i32 [ %68, %67 ], [ %63, %61 ]
  %77 = or i64 %62, 1
  %78 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %77, i64 %52
  %79 = load float, float* %78, align 4, !tbaa !2
  %80 = fcmp ogt float %79, 0.000000e+00
  br i1 %80, label %81, label %89

81:                                               ; preds = %75
  %82 = add nsw i32 %76, 1
  %83 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %77, i64 %52
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4, !tbaa !2
  %86 = sext i32 %82 to i64
  %87 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %86
  %88 = bitcast float* %87 to i32*
  store i32 %85, i32* %88, align 4, !tbaa !2
  br label %89

89:                                               ; preds = %81, %75
  %90 = phi i32 [ %82, %81 ], [ %76, %75 ]
  %91 = add nuw nsw i64 %62, 2
  %92 = icmp eq i64 %91, 256
  br i1 %92, label %58, label %61
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s351() local_unnamed_addr #7 {
  %1 = tail call i64 @clock() #16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !2
  %5 = insertelement <4 x float> undef, float %4, i32 0
  %6 = shufflevector <4 x float> %5, <4 x float> undef, <4 x i32> zeroinitializer
  br label %7

7:                                                ; preds = %54, %0
  %8 = phi i32 [ 0, %0 ], [ %56, %54 ]
  br label %58

9:                                                ; preds = %54
  %10 = tail call i64 @clock() #16
  %11 = sub nsw i64 %10, %3
  %12 = sitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+06
  %14 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.280, i64 0, i64 0), double %13)
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %49, %15 ]
  %17 = phi float [ 0.000000e+00, %9 ], [ %48, %15 ]
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %16
  %19 = load float, float* %18, align 16, !tbaa !2
  %20 = fadd float %17, %19
  %21 = or i64 %16, 1
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %16, 2
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 8, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %16, 3
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %16, 4
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 16, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %16, 5
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %16, 6
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 8, !tbaa !2
  %44 = fadd float %40, %43
  %45 = or i64 %16, 7
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fadd float %44, %47
  %49 = add nuw nsw i64 %16, 8
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %15

51:                                               ; preds = %15
  %52 = fpext float %48 to double
  %53 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %52) #16
  ret i32 0

54:                                               ; preds = %58
  %55 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %56 = add nuw nsw i32 %8, 1
  %57 = icmp eq i32 %56, 400000
  br i1 %57, label %9, label %7

58:                                               ; preds = %58, %7
  %59 = phi i64 [ 0, %7 ], [ %93, %58 ]
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %59
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %62 = bitcast float* %60 to <4 x float>*
  %63 = load <4 x float>, <4 x float>* %62, align 8, !tbaa !2
  %64 = fmul <4 x float> %6, %63
  %65 = bitcast float* %61 to <4 x float>*
  %66 = load <4 x float>, <4 x float>* %65, align 8, !tbaa !2
  %67 = fadd <4 x float> %66, %64
  %68 = bitcast float* %61 to <4 x float>*
  store <4 x float> %67, <4 x float>* %68, align 8, !tbaa !2
  %69 = add nuw nsw i64 %59, 4
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fmul float %4, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %74 = load float, float* %73, align 8, !tbaa !2
  %75 = fadd float %74, %72
  store float %75, float* %73, align 8, !tbaa !2
  %76 = add nuw nsw i64 %59, 5
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %76
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %76
  %79 = bitcast float* %77 to <4 x float>*
  %80 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !2
  %81 = fmul <4 x float> %6, %80
  %82 = bitcast float* %78 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 4, !tbaa !2
  %84 = fadd <4 x float> %83, %81
  %85 = bitcast float* %78 to <4 x float>*
  store <4 x float> %84, <4 x float>* %85, align 4, !tbaa !2
  %86 = add nuw nsw i64 %59, 9
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = fmul float %4, %88
  %90 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  %91 = load float, float* %90, align 4, !tbaa !2
  %92 = fadd float %91, %89
  store float %92, float* %90, align 4, !tbaa !2
  %93 = add nuw nsw i64 %59, 10
  %94 = icmp ult i64 %59, 31990
  br i1 %94, label %58, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s351p() local_unnamed_addr #7 {
  %1 = tail call i64 @clock() #16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !2
  %5 = insertelement <4 x float> undef, float %4, i32 0
  %6 = shufflevector <4 x float> %5, <4 x float> undef, <4 x i32> zeroinitializer
  %7 = insertelement <4 x float> undef, float %4, i32 0
  %8 = shufflevector <4 x float> %7, <4 x float> undef, <4 x i32> zeroinitializer
  br label %9

9:                                                ; preds = %0, %97
  %10 = phi i32 [ 0, %0 ], [ %99, %97 ]
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i64 [ 0, %9 ], [ %50, %11 ]
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fmul <4 x float> %6, %15
  %20 = fmul <4 x float> %8, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !2
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !2
  %31 = or i64 %12, 8
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !2
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !2
  %38 = fmul <4 x float> %6, %34
  %39 = fmul <4 x float> %8, %37
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16, !tbaa !2
  %43 = getelementptr inbounds float, float* %40, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 16, !tbaa !2
  %46 = fadd <4 x float> %42, %38
  %47 = fadd <4 x float> %45, %39
  %48 = bitcast float* %40 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 16, !tbaa !2
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 16, !tbaa !2
  %50 = add nuw nsw i64 %12, 16
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %97, label %11, !llvm.loop !413

52:                                               ; preds = %97
  %53 = tail call i64 @clock() #16
  %54 = sub nsw i64 %53, %3
  %55 = sitofp i64 %54 to double
  %56 = fdiv double %55, 1.000000e+06
  %57 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.281, i64 0, i64 0), double %56)
  br label %58

58:                                               ; preds = %58, %52
  %59 = phi i64 [ 0, %52 ], [ %92, %58 ]
  %60 = phi float [ 0.000000e+00, %52 ], [ %91, %58 ]
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %62 = load float, float* %61, align 16, !tbaa !2
  %63 = fadd float %60, %62
  %64 = or i64 %59, 1
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = fadd float %63, %66
  %68 = or i64 %59, 2
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  %70 = load float, float* %69, align 8, !tbaa !2
  %71 = fadd float %67, %70
  %72 = or i64 %59, 3
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %74 = load float, float* %73, align 4, !tbaa !2
  %75 = fadd float %71, %74
  %76 = or i64 %59, 4
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %76
  %78 = load float, float* %77, align 16, !tbaa !2
  %79 = fadd float %75, %78
  %80 = or i64 %59, 5
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = fadd float %79, %82
  %84 = or i64 %59, 6
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %86 = load float, float* %85, align 8, !tbaa !2
  %87 = fadd float %83, %86
  %88 = or i64 %59, 7
  %89 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %88
  %90 = load float, float* %89, align 4, !tbaa !2
  %91 = fadd float %87, %90
  %92 = add nuw nsw i64 %59, 8
  %93 = icmp eq i64 %92, 32000
  br i1 %93, label %94, label %58

94:                                               ; preds = %58
  %95 = fpext float %91 to double
  %96 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %95) #16
  ret i32 0

97:                                               ; preds = %11
  %98 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %99 = add nuw nsw i32 %10, 1
  %100 = icmp eq i32 %99, 400000
  br i1 %100, label %52, label %9
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1351() local_unnamed_addr #7 {
  %1 = tail call i64 @clock() #16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %0, %92
  %5 = phi i32 [ 0, %0 ], [ %94, %92 ]
  br label %6

6:                                                ; preds = %6, %4
  %7 = phi i64 [ 0, %4 ], [ %45, %6 ]
  %8 = getelementptr [32000 x float], [32000 x float]* @c, i64 0, i64 %7
  %9 = getelementptr [32000 x float], [32000 x float]* @b, i64 0, i64 %7
  %10 = getelementptr [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %11 = bitcast float* %9 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr float, float* %9, i64 4
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = bitcast float* %8 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !2
  %18 = getelementptr float, float* %8, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 16, !tbaa !2
  %21 = fadd <4 x float> %12, %17
  %22 = fadd <4 x float> %15, %20
  %23 = bitcast float* %10 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 16, !tbaa !2
  %24 = getelementptr float, float* %10, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %22, <4 x float>* %25, align 16, !tbaa !2
  %26 = or i64 %7, 8
  %27 = getelementptr [32000 x float], [32000 x float]* @c, i64 0, i64 %26
  %28 = getelementptr [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %29 = getelementptr [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %30 = bitcast float* %28 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 16, !tbaa !2
  %32 = getelementptr float, float* %28, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !2
  %35 = bitcast float* %27 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 16, !tbaa !2
  %37 = getelementptr float, float* %27, i64 4
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 16, !tbaa !2
  %40 = fadd <4 x float> %31, %36
  %41 = fadd <4 x float> %34, %39
  %42 = bitcast float* %29 to <4 x float>*
  store <4 x float> %40, <4 x float>* %42, align 16, !tbaa !2
  %43 = getelementptr float, float* %29, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> %41, <4 x float>* %44, align 16, !tbaa !2
  %45 = add nuw nsw i64 %7, 16
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %92, label %6, !llvm.loop !414

47:                                               ; preds = %92
  %48 = tail call i64 @clock() #16
  %49 = sub nsw i64 %48, %3
  %50 = sitofp i64 %49 to double
  %51 = fdiv double %50, 1.000000e+06
  %52 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.282, i64 0, i64 0), double %51)
  br label %53

53:                                               ; preds = %53, %47
  %54 = phi i64 [ 0, %47 ], [ %87, %53 ]
  %55 = phi float [ 0.000000e+00, %47 ], [ %86, %53 ]
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %57 = load float, float* %56, align 16, !tbaa !2
  %58 = fadd float %55, %57
  %59 = or i64 %54, 1
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = fadd float %58, %61
  %63 = or i64 %54, 2
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = load float, float* %64, align 8, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %54, 3
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %54, 4
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 16, !tbaa !2
  %74 = fadd float %70, %73
  %75 = or i64 %54, 5
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fadd float %74, %77
  %79 = or i64 %54, 6
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 8, !tbaa !2
  %82 = fadd float %78, %81
  %83 = or i64 %54, 7
  %84 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %83
  %85 = load float, float* %84, align 4, !tbaa !2
  %86 = fadd float %82, %85
  %87 = add nuw nsw i64 %54, 8
  %88 = icmp eq i64 %87, 32000
  br i1 %88, label %89, label %53

89:                                               ; preds = %53
  %90 = fpext float %86 to double
  %91 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %90) #16
  ret i32 0

92:                                               ; preds = %6
  %93 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %94 = add nuw nsw i32 %5, 1
  %95 = icmp eq i32 %94, 400000
  br i1 %95, label %47, label %4
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s352() local_unnamed_addr #7 {
  %1 = tail call i64 @clock() #16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %14, %0
  %5 = phi i32 [ 0, %0 ], [ %16, %14 ]
  br label %18

6:                                                ; preds = %14
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.283, i64 0, i64 0), double %10)
  store float %52, float* @temp, align 4, !tbaa !2
  %12 = fpext float %52 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #16
  ret i32 0

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %52) #16
  %16 = add nuw nsw i32 %5, 1
  %17 = icmp eq i32 %16, 400000
  br i1 %17, label %6, label %4

18:                                               ; preds = %4, %18
  %19 = phi i64 [ 0, %4 ], [ %53, %18 ]
  %20 = phi float [ 0.000000e+00, %4 ], [ %52, %18 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 4, !tbaa !2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fmul float %22, %24
  %26 = fadd float %20, %25
  %27 = add nuw nsw i64 %19, 1
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4, !tbaa !2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %31 = load float, float* %30, align 4, !tbaa !2
  %32 = fmul float %29, %31
  %33 = fadd float %26, %32
  %34 = add nuw nsw i64 %19, 2
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %37 = bitcast float* %35 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 4, !tbaa !2
  %39 = bitcast float* %36 to <2 x float>*
  %40 = load <2 x float>, <2 x float>* %39, align 4, !tbaa !2
  %41 = fmul <2 x float> %38, %40
  %42 = extractelement <2 x float> %41, i32 0
  %43 = fadd float %33, %42
  %44 = extractelement <2 x float> %41, i32 1
  %45 = fadd float %43, %44
  %46 = add nuw nsw i64 %19, 4
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %46
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = fmul float %48, %50
  %52 = fadd float %45, %51
  %53 = add nuw nsw i64 %19, 5
  %54 = icmp ult i64 %19, 31995
  br i1 %54, label %18, label %14
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s352p() local_unnamed_addr #7 {
  %1 = tail call i64 @clock() #16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %14, %0
  %5 = phi i32 [ 0, %0 ], [ %16, %14 ]
  br label %18

6:                                                ; preds = %14
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.284, i64 0, i64 0), double %10)
  store float %45, float* @temp, align 4, !tbaa !2
  %12 = fpext float %45 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #16
  ret i32 0

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %45) #16
  %16 = add nuw nsw i32 %5, 1
  %17 = icmp eq i32 %16, 400000
  br i1 %17, label %6, label %4

18:                                               ; preds = %4, %18
  %19 = phi i64 [ 0, %4 ], [ %46, %18 ]
  %20 = phi float [ 0.000000e+00, %4 ], [ %45, %18 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 16, !tbaa !2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %24 = load float, float* %23, align 16, !tbaa !2
  %25 = fmul float %22, %24
  %26 = or i64 %19, 1
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %29 = bitcast float* %27 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4, !tbaa !2
  %31 = bitcast float* %28 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4, !tbaa !2
  %33 = fmul <2 x float> %30, %32
  %34 = or i64 %19, 3
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fmul float %36, %38
  %40 = fadd float %20, %25
  %41 = extractelement <2 x float> %33, i32 0
  %42 = fadd float %40, %41
  %43 = extractelement <2 x float> %33, i32 1
  %44 = fadd float %42, %43
  %45 = fadd float %44, %39
  %46 = add nuw nsw i64 %19, 4
  %47 = icmp ult i64 %19, 31996
  br i1 %47, label %18, label %14
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s353(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i64 @clock() #16
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i64 0, i64 0))
  %4 = tail call i64 @clock() #16
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !2
  %6 = insertelement <4 x float> undef, float %5, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> undef, <4 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %55, %1
  %9 = phi i32 [ 0, %1 ], [ %57, %55 ]
  br label %59

10:                                               ; preds = %55
  %11 = tail call i64 @clock() #16
  %12 = sub nsw i64 %11, %4
  %13 = sitofp i64 %12 to double
  %14 = fdiv double %13, 1.000000e+06
  %15 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.285, i64 0, i64 0), double %14)
  br label %16

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %50, %16 ]
  %18 = phi float [ 0.000000e+00, %10 ], [ %49, %16 ]
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %20 = load float, float* %19, align 16, !tbaa !2
  %21 = fadd float %18, %20
  %22 = or i64 %17, 1
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %17, 2
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 8, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %17, 3
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 4, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %17, 4
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 16, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %17, 5
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 4, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %17, 6
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 8, !tbaa !2
  %45 = fadd float %41, %44
  %46 = or i64 %17, 7
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !2
  %49 = fadd float %45, %48
  %50 = add nuw nsw i64 %17, 8
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %16

52:                                               ; preds = %16
  %53 = fpext float %49 to double
  %54 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %53) #16
  ret i32 0

55:                                               ; preds = %59
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %57 = add nuw nsw i32 %9, 1
  %58 = icmp eq i32 %57, 50000
  br i1 %58, label %10, label %8

59:                                               ; preds = %8, %59
  %60 = phi i64 [ 0, %8 ], [ %104, %59 ]
  %61 = getelementptr inbounds i32, i32* %0, i64 %60
  %62 = load i32, i32* %61, align 4, !tbaa !415
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %67 = add nuw nsw i64 %60, 1
  %68 = getelementptr inbounds i32, i32* %0, i64 %67
  %69 = load i32, i32* %68, align 4, !tbaa !415
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = add nuw nsw i64 %60, 2
  %74 = getelementptr inbounds i32, i32* %0, i64 %73
  %75 = load i32, i32* %74, align 4, !tbaa !415
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = add nuw nsw i64 %60, 3
  %80 = getelementptr inbounds i32, i32* %0, i64 %79
  %81 = load i32, i32* %80, align 4, !tbaa !415
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %82
  %84 = load float, float* %83, align 4, !tbaa !2
  %85 = insertelement <4 x float> undef, float %65, i32 0
  %86 = insertelement <4 x float> %85, float %72, i32 1
  %87 = insertelement <4 x float> %86, float %78, i32 2
  %88 = insertelement <4 x float> %87, float %84, i32 3
  %89 = fmul <4 x float> %7, %88
  %90 = bitcast float* %66 to <4 x float>*
  %91 = load <4 x float>, <4 x float>* %90, align 4, !tbaa !2
  %92 = fadd <4 x float> %91, %89
  %93 = bitcast float* %66 to <4 x float>*
  store <4 x float> %92, <4 x float>* %93, align 4, !tbaa !2
  %94 = add nuw nsw i64 %60, 4
  %95 = getelementptr inbounds i32, i32* %0, i64 %94
  %96 = load i32, i32* %95, align 4, !tbaa !415
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %97
  %99 = load float, float* %98, align 4, !tbaa !2
  %100 = fmul float %5, %99
  %101 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %94
  %102 = load float, float* %101, align 4, !tbaa !2
  %103 = fadd float %102, %100
  store float %103, float* %101, align 4, !tbaa !2
  %104 = add nuw nsw i64 %60, 5
  %105 = icmp ult i64 %60, 31995
  br i1 %105, label %59, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s421() local_unnamed_addr #7 {
  %1 = load float*, float** @xx, align 8, !tbaa !417
  br label %2

2:                                                ; preds = %2, %0
  %3 = phi i64 [ 0, %0 ], [ %43, %2 ]
  %4 = getelementptr inbounds float, float* %1, i64 %3
  %5 = bitcast float* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5, align 4, !tbaa !2
  %6 = getelementptr inbounds float, float* %4, i64 4
  %7 = bitcast float* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7, align 4, !tbaa !2
  %8 = or i64 %3, 8
  %9 = getelementptr inbounds float, float* %1, i64 %8
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10, align 4, !tbaa !2
  %11 = getelementptr inbounds float, float* %9, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12, align 4, !tbaa !2
  %13 = or i64 %3, 16
  %14 = getelementptr inbounds float, float* %1, i64 %13
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15, align 4, !tbaa !2
  %16 = getelementptr inbounds float, float* %14, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %17, align 4, !tbaa !2
  %18 = or i64 %3, 24
  %19 = getelementptr inbounds float, float* %1, i64 %18
  %20 = bitcast float* %19 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %20, align 4, !tbaa !2
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %22, align 4, !tbaa !2
  %23 = or i64 %3, 32
  %24 = getelementptr inbounds float, float* %1, i64 %23
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %25, align 4, !tbaa !2
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %27, align 4, !tbaa !2
  %28 = or i64 %3, 40
  %29 = getelementptr inbounds float, float* %1, i64 %28
  %30 = bitcast float* %29 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %30, align 4, !tbaa !2
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %32, align 4, !tbaa !2
  %33 = or i64 %3, 48
  %34 = getelementptr inbounds float, float* %1, i64 %33
  %35 = bitcast float* %34 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %35, align 4, !tbaa !2
  %36 = getelementptr inbounds float, float* %34, i64 4
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %37, align 4, !tbaa !2
  %38 = or i64 %3, 56
  %39 = getelementptr inbounds float, float* %1, i64 %38
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %40, align 4, !tbaa !2
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %42, align 4, !tbaa !2
  %43 = add nuw nsw i64 %3, 64
  %44 = icmp eq i64 %43, 32000
  br i1 %44, label %45, label %2, !llvm.loop !419

45:                                               ; preds = %2
  %46 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0))
  %47 = tail call i64 @clock() #16
  br label %55

48:                                               ; preds = %101
  %49 = tail call i64 @clock() #16
  %50 = sub nsw i64 %49, %47
  %51 = sitofp i64 %50 to double
  %52 = fdiv double %51, 1.000000e+06
  %53 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.286, i64 0, i64 0), double %52)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !2
  %54 = load float*, float** @xx, align 8, !tbaa !417
  br label %136

55:                                               ; preds = %101, %45
  %56 = phi i32 [ 0, %45 ], [ %103, %101 ]
  %57 = load i64, i64* bitcast (float** @xx to i64*), align 8, !tbaa !417
  store i64 %57, i64* bitcast (float** @yy to i64*), align 8, !tbaa !417
  %58 = inttoptr i64 %57 to float*
  %59 = inttoptr i64 %57 to i8*
  %60 = getelementptr float, float* %58, i64 32000
  %61 = icmp ult i8* %59, bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999) to i8*)
  %62 = icmp ugt float* %60, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0)
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %78

64:                                               ; preds = %55, %78
  %65 = phi i64 [ 0, %55 ], [ 31992, %78 ]
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ %69, %66 ], [ %65, %64 ]
  %68 = phi i64 [ %76, %66 ], [ 3, %64 ]
  %69 = add nuw nsw i64 %67, 1
  %70 = getelementptr inbounds float, float* %58, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %71, %73
  %75 = getelementptr inbounds float, float* %58, i64 %67
  store float %74, float* %75, align 4, !tbaa !2
  %76 = add i64 %68, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %105, label %66, !llvm.loop !420

78:                                               ; preds = %55, %163
  %79 = phi i64 [ %183, %163 ], [ 0, %55 ]
  %80 = or i64 %79, 1
  %81 = getelementptr inbounds float, float* %58, i64 %80
  %82 = bitcast float* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 4, !tbaa !2, !alias.scope !421, !noalias !424
  %84 = getelementptr inbounds float, float* %81, i64 4
  %85 = bitcast float* %84 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 4, !tbaa !2, !alias.scope !421, !noalias !424
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %88 = bitcast float* %87 to <4 x float>*
  %89 = load <4 x float>, <4 x float>* %88, align 16, !tbaa !2, !alias.scope !424
  %90 = getelementptr inbounds float, float* %87, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  %92 = load <4 x float>, <4 x float>* %91, align 16, !tbaa !2, !alias.scope !424
  %93 = fadd <4 x float> %83, %89
  %94 = fadd <4 x float> %86, %92
  %95 = getelementptr inbounds float, float* %58, i64 %79
  %96 = bitcast float* %95 to <4 x float>*
  store <4 x float> %93, <4 x float>* %96, align 4, !tbaa !2, !alias.scope !421, !noalias !424
  %97 = getelementptr inbounds float, float* %95, i64 4
  %98 = bitcast float* %97 to <4 x float>*
  store <4 x float> %94, <4 x float>* %98, align 4, !tbaa !2, !alias.scope !421, !noalias !424
  %99 = or i64 %79, 8
  %100 = icmp eq i64 %99, 31992
  br i1 %100, label %64, label %163, !llvm.loop !426

101:                                              ; preds = %105
  %102 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #16
  %103 = add nuw nsw i32 %56, 1
  %104 = icmp eq i32 %103, 200000
  br i1 %104, label %48, label %55

105:                                              ; preds = %66, %105
  %106 = phi i64 [ %128, %105 ], [ %69, %66 ]
  %107 = add nuw nsw i64 %106, 1
  %108 = getelementptr inbounds float, float* %58, i64 %107
  %109 = load float, float* %108, align 4, !tbaa !2
  %110 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %106
  %111 = load float, float* %110, align 4, !tbaa !2
  %112 = fadd float %109, %111
  %113 = getelementptr inbounds float, float* %58, i64 %106
  store float %112, float* %113, align 4, !tbaa !2
  %114 = add nuw nsw i64 %106, 2
  %115 = getelementptr inbounds float, float* %58, i64 %114
  %116 = load float, float* %115, align 4, !tbaa !2
  %117 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %107
  %118 = load float, float* %117, align 4, !tbaa !2
  %119 = fadd float %116, %118
  %120 = getelementptr inbounds float, float* %58, i64 %107
  store float %119, float* %120, align 4, !tbaa !2
  %121 = add nuw nsw i64 %106, 3
  %122 = getelementptr inbounds float, float* %58, i64 %121
  %123 = load float, float* %122, align 4, !tbaa !2
  %124 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %114
  %125 = load float, float* %124, align 4, !tbaa !2
  %126 = fadd float %123, %125
  %127 = getelementptr inbounds float, float* %58, i64 %114
  store float %126, float* %127, align 4, !tbaa !2
  %128 = add nuw nsw i64 %106, 4
  %129 = getelementptr inbounds float, float* %58, i64 %128
  %130 = load float, float* %129, align 4, !tbaa !2
  %131 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %121
  %132 = load float, float* %131, align 4, !tbaa !2
  %133 = fadd float %130, %132
  %134 = getelementptr inbounds float, float* %58, i64 %121
  store float %133, float* %134, align 4, !tbaa !2
  %135 = icmp eq i64 %128, 31999
  br i1 %135, label %101, label %105, !llvm.loop !427

136:                                              ; preds = %136, %48
  %137 = phi float [ 0.000000e+00, %48 ], [ %157, %136 ]
  %138 = phi i64 [ 0, %48 ], [ %158, %136 ]
  %139 = getelementptr inbounds float, float* %54, i64 %138
  %140 = load float, float* %139, align 4, !tbaa !2
  %141 = fadd float %140, %137
  store float %141, float* @temp, align 4, !tbaa !2
  %142 = add nuw nsw i64 %138, 1
  %143 = getelementptr inbounds float, float* %54, i64 %142
  %144 = load float, float* %143, align 4, !tbaa !2
  %145 = fadd float %144, %141
  store float %145, float* @temp, align 4, !tbaa !2
  %146 = add nuw nsw i64 %138, 2
  %147 = getelementptr inbounds float, float* %54, i64 %146
  %148 = load float, float* %147, align 4, !tbaa !2
  %149 = fadd float %148, %145
  store float %149, float* @temp, align 4, !tbaa !2
  %150 = add nuw nsw i64 %138, 3
  %151 = getelementptr inbounds float, float* %54, i64 %150
  %152 = load float, float* %151, align 4, !tbaa !2
  %153 = fadd float %152, %149
  store float %153, float* @temp, align 4, !tbaa !2
  %154 = add nuw nsw i64 %138, 4
  %155 = getelementptr inbounds float, float* %54, i64 %154
  %156 = load float, float* %155, align 4, !tbaa !2
  %157 = fadd float %156, %153
  store float %157, float* @temp, align 4, !tbaa !2
  %158 = add nuw nsw i64 %138, 5
  %159 = icmp eq i64 %158, 32000
  br i1 %159, label %160, label %136

160:                                              ; preds = %136
  %161 = fpext float %157 to double
  %162 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %161) #16
  ret i32 0

163:                                              ; preds = %78
  %164 = or i64 %79, 9
  %165 = getelementptr inbounds float, float* %58, i64 %164
  %166 = bitcast float* %165 to <4 x float>*
  %167 = load <4 x float>, <4 x float>* %166, align 4, !tbaa !2, !alias.scope !421, !noalias !424
  %168 = getelementptr inbounds float, float* %165, i64 4
  %169 = bitcast float* %168 to <4 x float>*
  %170 = load <4 x float>, <4 x float>* %169, align 4, !tbaa !2, !alias.scope !421, !noalias !424
  %171 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %99
  %172 = bitcast float* %171 to <4 x float>*
  %173 = load <4 x float>, <4 x float>* %172, align 16, !tbaa !2, !alias.scope !424
  %174 = getelementptr inbounds float, float* %171, i64 4
  %175 = bitcast float* %174 to <4 x float>*
  %176 = load <4 x float>, <4 x float>* %175, align 16, !tbaa !2, !alias.scope !424
  %177 = fadd <4 x float> %167, %173
  %178 = fadd <4 x float> %170, %176
  %179 = getelementptr inbounds float, float* %58, i64 %99
  %180 = bitcast float* %179 to <4 x float>*
  store <4 x float> %177, <4 x float>* %180, align 4, !tbaa !2, !alias.scope !421, !noalias !424
  %181 = getelementptr inbounds float, float* %179, i64 4
  %182 = bitcast float* %181 to <4 x float>*
  store <4 x float> %178, <4 x float>* %182, align 4, !tbaa !2, !alias.scope !421, !noalias !424
  %183 = add nuw nsw i64 %79, 16
  br label %78
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s1421() local_unnamed_addr #7 {
  %1 = load float*, float** @xx, align 8, !tbaa !417
  br label %2

2:                                                ; preds = %2, %0
  %3 = phi i64 [ 0, %0 ], [ %43, %2 ]
  %4 = getelementptr inbounds float, float* %1, i64 %3
  %5 = bitcast float* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %5, align 4, !tbaa !2
  %6 = getelementptr inbounds float, float* %4, i64 4
  %7 = bitcast float* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7, align 4, !tbaa !2
  %8 = or i64 %3, 8
  %9 = getelementptr inbounds float, float* %1, i64 %8
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10, align 4, !tbaa !2
  %11 = getelementptr inbounds float, float* %9, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12, align 4, !tbaa !2
  %13 = or i64 %3, 16
  %14 = getelementptr inbounds float, float* %1, i64 %13
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15, align 4, !tbaa !2
  %16 = getelementptr inbounds float, float* %14, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %17, align 4, !tbaa !2
  %18 = or i64 %3, 24
  %19 = getelementptr inbounds float, float* %1, i64 %18
  %20 = bitcast float* %19 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %20, align 4, !tbaa !2
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %22, align 4, !tbaa !2
  %23 = or i64 %3, 32
  %24 = getelementptr inbounds float, float* %1, i64 %23
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %25, align 4, !tbaa !2
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %27, align 4, !tbaa !2
  %28 = or i64 %3, 40
  %29 = getelementptr inbounds float, float* %1, i64 %28
  %30 = bitcast float* %29 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %30, align 4, !tbaa !2
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %32, align 4, !tbaa !2
  %33 = or i64 %3, 48
  %34 = getelementptr inbounds float, float* %1, i64 %33
  %35 = bitcast float* %34 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %35, align 4, !tbaa !2
  %36 = getelementptr inbounds float, float* %34, i64 4
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %37, align 4, !tbaa !2
  %38 = or i64 %3, 56
  %39 = getelementptr inbounds float, float* %1, i64 %38
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %40, align 4, !tbaa !2
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %42, align 4, !tbaa !2
  %43 = add nuw nsw i64 %3, 64
  %44 = icmp eq i64 %43, 32000
  br i1 %44, label %45, label %2, !llvm.loop !428

45:                                               ; preds = %2
  %46 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0))
  %47 = tail call i64 @clock() #16
  store float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), float** @xx, align 8, !tbaa !417
  br label %48

48:                                               ; preds = %45, %108
  %49 = phi float* [ getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), %45 ], [ %109, %108 ]
  %50 = phi i32 [ 0, %45 ], [ %106, %108 ]
  %51 = getelementptr float, float* %49, i64 16000
  %52 = icmp ugt float* %51, getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0)
  %53 = icmp ult float* %49, getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000)
  %54 = and i1 %52, %53
  %55 = or i1 %54, and (i1 icmp ult (float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000)), i1 icmp ult (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000)))
  br i1 %55, label %110, label %56

56:                                               ; preds = %48, %56
  %57 = phi i64 [ %95, %56 ], [ 0, %48 ]
  %58 = getelementptr inbounds float, float* %49, i64 %57
  %59 = bitcast float* %58 to <4 x float>*
  %60 = load <4 x float>, <4 x float>* %59, align 4, !tbaa !2, !alias.scope !429
  %61 = getelementptr inbounds float, float* %58, i64 4
  %62 = bitcast float* %61 to <4 x float>*
  %63 = load <4 x float>, <4 x float>* %62, align 4, !tbaa !2, !alias.scope !429
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %65 = bitcast float* %64 to <4 x float>*
  %66 = load <4 x float>, <4 x float>* %65, align 16, !tbaa !2, !alias.scope !432
  %67 = getelementptr inbounds float, float* %64, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  %69 = load <4 x float>, <4 x float>* %68, align 16, !tbaa !2, !alias.scope !432
  %70 = fadd <4 x float> %60, %66
  %71 = fadd <4 x float> %63, %69
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %57
  %73 = bitcast float* %72 to <4 x float>*
  store <4 x float> %70, <4 x float>* %73, align 16, !tbaa !2, !alias.scope !434, !noalias !436
  %74 = getelementptr inbounds float, float* %72, i64 4
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> %71, <4 x float>* %75, align 16, !tbaa !2, !alias.scope !434, !noalias !436
  %76 = or i64 %57, 8
  %77 = getelementptr inbounds float, float* %49, i64 %76
  %78 = bitcast float* %77 to <4 x float>*
  %79 = load <4 x float>, <4 x float>* %78, align 4, !tbaa !2, !alias.scope !429
  %80 = getelementptr inbounds float, float* %77, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  %82 = load <4 x float>, <4 x float>* %81, align 4, !tbaa !2, !alias.scope !429
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %76
  %84 = bitcast float* %83 to <4 x float>*
  %85 = load <4 x float>, <4 x float>* %84, align 16, !tbaa !2, !alias.scope !432
  %86 = getelementptr inbounds float, float* %83, i64 4
  %87 = bitcast float* %86 to <4 x float>*
  %88 = load <4 x float>, <4 x float>* %87, align 16, !tbaa !2, !alias.scope !432
  %89 = fadd <4 x float> %79, %85
  %90 = fadd <4 x float> %82, %88
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %76
  %92 = bitcast float* %91 to <4 x float>*
  store <4 x float> %89, <4 x float>* %92, align 16, !tbaa !2, !alias.scope !434, !noalias !436
  %93 = getelementptr inbounds float, float* %91, i64 4
  %94 = bitcast float* %93 to <4 x float>*
  store <4 x float> %90, <4 x float>* %94, align 16, !tbaa !2, !alias.scope !434, !noalias !436
  %95 = add nuw nsw i64 %57, 16
  %96 = icmp eq i64 %95, 16000
  br i1 %96, label %104, label %56, !llvm.loop !437

97:                                               ; preds = %104
  %98 = tail call i64 @clock() #16
  %99 = sub nsw i64 %98, %47
  %100 = sitofp i64 %99 to double
  %101 = fdiv double %100, 1.000000e+06
  %102 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.287, i64 0, i64 0), double %101)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !2
  %103 = load float*, float** @xx, align 8, !tbaa !417
  br label %141

104:                                              ; preds = %56, %110
  %105 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #16
  %106 = add nuw nsw i32 %50, 1
  %107 = icmp eq i32 %106, 400000
  br i1 %107, label %97, label %108

108:                                              ; preds = %104
  %109 = load float*, float** @xx, align 8, !tbaa !417
  br label %48

110:                                              ; preds = %48, %110
  %111 = phi i64 [ %139, %110 ], [ 0, %48 ]
  %112 = getelementptr inbounds float, float* %49, i64 %111
  %113 = load float, float* %112, align 4, !tbaa !2
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %111
  %115 = load float, float* %114, align 16, !tbaa !2
  %116 = fadd float %113, %115
  %117 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %111
  store float %116, float* %117, align 16, !tbaa !2
  %118 = or i64 %111, 1
  %119 = getelementptr inbounds float, float* %49, i64 %118
  %120 = load float, float* %119, align 4, !tbaa !2
  %121 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %118
  %122 = load float, float* %121, align 4, !tbaa !2
  %123 = fadd float %120, %122
  %124 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %118
  store float %123, float* %124, align 4, !tbaa !2
  %125 = or i64 %111, 2
  %126 = getelementptr inbounds float, float* %49, i64 %125
  %127 = load float, float* %126, align 4, !tbaa !2
  %128 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %125
  %129 = load float, float* %128, align 8, !tbaa !2
  %130 = fadd float %127, %129
  %131 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %125
  store float %130, float* %131, align 8, !tbaa !2
  %132 = or i64 %111, 3
  %133 = getelementptr inbounds float, float* %49, i64 %132
  %134 = load float, float* %133, align 4, !tbaa !2
  %135 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %132
  %136 = load float, float* %135, align 4, !tbaa !2
  %137 = fadd float %134, %136
  %138 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %132
  store float %137, float* %138, align 4, !tbaa !2
  %139 = add nuw nsw i64 %111, 4
  %140 = icmp eq i64 %139, 16000
  br i1 %140, label %104, label %110, !llvm.loop !438

141:                                              ; preds = %141, %97
  %142 = phi float [ 0.000000e+00, %97 ], [ %162, %141 ]
  %143 = phi i64 [ 0, %97 ], [ %163, %141 ]
  %144 = getelementptr inbounds float, float* %103, i64 %143
  %145 = load float, float* %144, align 4, !tbaa !2
  %146 = fadd float %145, %142
  store float %146, float* @temp, align 4, !tbaa !2
  %147 = add nuw nsw i64 %143, 1
  %148 = getelementptr inbounds float, float* %103, i64 %147
  %149 = load float, float* %148, align 4, !tbaa !2
  %150 = fadd float %149, %146
  store float %150, float* @temp, align 4, !tbaa !2
  %151 = add nuw nsw i64 %143, 2
  %152 = getelementptr inbounds float, float* %103, i64 %151
  %153 = load float, float* %152, align 4, !tbaa !2
  %154 = fadd float %153, %150
  store float %154, float* @temp, align 4, !tbaa !2
  %155 = add nuw nsw i64 %143, 3
  %156 = getelementptr inbounds float, float* %103, i64 %155
  %157 = load float, float* %156, align 4, !tbaa !2
  %158 = fadd float %157, %154
  store float %158, float* @temp, align 4, !tbaa !2
  %159 = add nuw nsw i64 %143, 4
  %160 = getelementptr inbounds float, float* %103, i64 %159
  %161 = load float, float* %160, align 4, !tbaa !2
  %162 = fadd float %161, %158
  store float %162, float* @temp, align 4, !tbaa !2
  %163 = add nuw nsw i64 %143, 5
  %164 = icmp eq i64 %163, 16000
  br i1 %164, label %165, label %141

165:                                              ; preds = %141
  %166 = fpext float %162 to double
  %167 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %166) #16
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s422() local_unnamed_addr #7 {
  store float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 4), float** @xx, align 8, !tbaa !417
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast (float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 4) to i8*), i8 0, i64 128000, i1 false)
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %64, %0
  %4 = phi i32 [ 0, %0 ], [ %66, %64 ]
  %5 = load float*, float** @xx, align 8, !tbaa !417
  %6 = getelementptr float, float* %5, i64 32000
  %7 = icmp ult float* %5, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 32008)
  %8 = icmp ugt float* %6, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 8)
  %9 = and i1 %7, %8
  %10 = icmp ult float* %5, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 1, i64 0)
  %11 = icmp ugt float* %6, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0)
  %12 = and i1 %10, %11
  %13 = or i1 %9, %12
  br i1 %13, label %68, label %14

14:                                               ; preds = %3, %14
  %15 = phi i64 [ %55, %14 ], [ 0, %3 ]
  %16 = or i64 %15, 8
  %17 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %16
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2, !alias.scope !439
  %20 = getelementptr inbounds float, float* %17, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !2, !alias.scope !439
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 16, !tbaa !2, !alias.scope !442
  %26 = getelementptr inbounds float, float* %23, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 16, !tbaa !2, !alias.scope !442
  %29 = fadd <4 x float> %19, %25
  %30 = fadd <4 x float> %22, %28
  %31 = getelementptr inbounds float, float* %5, i64 %15
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %29, <4 x float>* %32, align 4, !tbaa !2, !alias.scope !444, !noalias !446
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %30, <4 x float>* %34, align 4, !tbaa !2, !alias.scope !444, !noalias !446
  %35 = or i64 %15, 8
  %36 = add nuw nsw i64 %15, 16
  %37 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %36
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 16, !tbaa !2, !alias.scope !439
  %40 = getelementptr inbounds float, float* %37, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16, !tbaa !2, !alias.scope !439
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 16, !tbaa !2, !alias.scope !442
  %46 = getelementptr inbounds float, float* %43, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  %48 = load <4 x float>, <4 x float>* %47, align 16, !tbaa !2, !alias.scope !442
  %49 = fadd <4 x float> %39, %45
  %50 = fadd <4 x float> %42, %48
  %51 = getelementptr inbounds float, float* %5, i64 %35
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> %49, <4 x float>* %52, align 4, !tbaa !2, !alias.scope !444, !noalias !446
  %53 = getelementptr inbounds float, float* %51, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  store <4 x float> %50, <4 x float>* %54, align 4, !tbaa !2, !alias.scope !444, !noalias !446
  %55 = add nuw nsw i64 %15, 16
  %56 = icmp eq i64 %55, 32000
  br i1 %56, label %64, label %14, !llvm.loop !447

57:                                               ; preds = %64
  %58 = tail call i64 @clock() #16
  %59 = sub nsw i64 %58, %2
  %60 = sitofp i64 %59 to double
  %61 = fdiv double %60, 1.000000e+06
  %62 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.288, i64 0, i64 0), double %61)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !2
  %63 = load float*, float** @xx, align 8, !tbaa !417
  br label %87

64:                                               ; preds = %14, %68
  %65 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %66 = add nuw nsw i32 %4, 1
  %67 = icmp eq i32 %66, 400000
  br i1 %67, label %57, label %3

68:                                               ; preds = %3, %68
  %69 = phi i64 [ %85, %68 ], [ 0, %3 ]
  %70 = add nuw nsw i64 %69, 8
  %71 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %70
  %72 = load float, float* %71, align 8, !tbaa !2
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %74 = load float, float* %73, align 8, !tbaa !2
  %75 = fadd float %72, %74
  %76 = getelementptr inbounds float, float* %5, i64 %69
  store float %75, float* %76, align 4, !tbaa !2
  %77 = or i64 %69, 1
  %78 = add nuw nsw i64 %69, 9
  %79 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %77
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = fadd float %80, %82
  %84 = getelementptr inbounds float, float* %5, i64 %77
  store float %83, float* %84, align 4, !tbaa !2
  %85 = add nuw nsw i64 %69, 2
  %86 = icmp eq i64 %85, 32000
  br i1 %86, label %64, label %68, !llvm.loop !448

87:                                               ; preds = %87, %57
  %88 = phi float [ 0.000000e+00, %57 ], [ %108, %87 ]
  %89 = phi i64 [ 0, %57 ], [ %109, %87 ]
  %90 = getelementptr inbounds float, float* %63, i64 %89
  %91 = load float, float* %90, align 4, !tbaa !2
  %92 = fadd float %91, %88
  store float %92, float* @temp, align 4, !tbaa !2
  %93 = add nuw nsw i64 %89, 1
  %94 = getelementptr inbounds float, float* %63, i64 %93
  %95 = load float, float* %94, align 4, !tbaa !2
  %96 = fadd float %95, %92
  store float %96, float* @temp, align 4, !tbaa !2
  %97 = add nuw nsw i64 %89, 2
  %98 = getelementptr inbounds float, float* %63, i64 %97
  %99 = load float, float* %98, align 4, !tbaa !2
  %100 = fadd float %99, %96
  store float %100, float* @temp, align 4, !tbaa !2
  %101 = add nuw nsw i64 %89, 3
  %102 = getelementptr inbounds float, float* %63, i64 %101
  %103 = load float, float* %102, align 4, !tbaa !2
  %104 = fadd float %103, %100
  store float %104, float* @temp, align 4, !tbaa !2
  %105 = add nuw nsw i64 %89, 4
  %106 = getelementptr inbounds float, float* %63, i64 %105
  %107 = load float, float* %106, align 4, !tbaa !2
  %108 = fadd float %107, %104
  store float %108, float* @temp, align 4, !tbaa !2
  %109 = add nuw nsw i64 %89, 5
  %110 = icmp eq i64 %109, 32000
  br i1 %110, label %111, label %87

111:                                              ; preds = %87
  %112 = fpext float %108 to double
  %113 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %112) #16
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s423() local_unnamed_addr #7 {
  store float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), float** @xx, align 8, !tbaa !417
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %42, %1 ]
  %3 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), i64 %2
  %4 = bitcast float* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4, align 16, !tbaa !2
  %5 = getelementptr inbounds float, float* %3, i64 4
  %6 = bitcast float* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6, align 16, !tbaa !2
  %7 = or i64 %2, 8
  %8 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %8, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11, align 16, !tbaa !2
  %12 = or i64 %2, 16
  %13 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), i64 %12
  %14 = bitcast float* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14, align 16, !tbaa !2
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %16, align 16, !tbaa !2
  %17 = or i64 %2, 24
  %18 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), i64 %17
  %19 = bitcast float* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %19, align 16, !tbaa !2
  %20 = getelementptr inbounds float, float* %18, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %21, align 16, !tbaa !2
  %22 = or i64 %2, 32
  %23 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), i64 %22
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %24, align 16, !tbaa !2
  %25 = getelementptr inbounds float, float* %23, i64 4
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %26, align 16, !tbaa !2
  %27 = or i64 %2, 40
  %28 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), i64 %27
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %29, align 16, !tbaa !2
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %31, align 16, !tbaa !2
  %32 = or i64 %2, 48
  %33 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), i64 %32
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %34, align 16, !tbaa !2
  %35 = getelementptr inbounds float, float* %33, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %36, align 16, !tbaa !2
  %37 = or i64 %2, 56
  %38 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), i64 %37
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %39, align 16, !tbaa !2
  %40 = getelementptr inbounds float, float* %38, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %41, align 16, !tbaa !2
  %42 = add nuw nsw i64 %2, 64
  %43 = icmp eq i64 %42, 32000
  br i1 %43, label %44, label %1, !llvm.loop !449

44:                                               ; preds = %1
  %45 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0))
  %46 = tail call i64 @clock() #16
  br label %47

47:                                               ; preds = %98, %44
  %48 = phi i32 [ 0, %44 ], [ %100, %98 ]
  %49 = load float*, float** @xx, align 8, !tbaa !417
  %50 = getelementptr float, float* %49, i64 31999
  %51 = icmp ugt float* %50, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 1)
  %52 = icmp ult float* %49, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 32000)
  %53 = and i1 %51, %52
  %54 = or i1 %53, and (i1 icmp ult (float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 1), float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999)), i1 icmp ult (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 32000)))
  br i1 %54, label %55, label %69

55:                                               ; preds = %47, %69
  %56 = phi i64 [ 0, %47 ], [ 31992, %69 ]
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ %65, %57 ], [ %56, %55 ]
  %59 = phi i64 [ %67, %57 ], [ 3, %55 ]
  %60 = getelementptr inbounds float, float* %49, i64 %58
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fadd float %61, %63
  %65 = add nuw nsw i64 %58, 1
  %66 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %65
  store float %64, float* %66, align 4, !tbaa !2
  %67 = add i64 %59, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %102, label %57, !llvm.loop !450

69:                                               ; preds = %47, %172
  %70 = phi i64 [ %192, %172 ], [ 0, %47 ]
  %71 = getelementptr inbounds float, float* %49, i64 %70
  %72 = bitcast float* %71 to <4 x float>*
  %73 = load <4 x float>, <4 x float>* %72, align 4, !tbaa !2, !alias.scope !451
  %74 = getelementptr inbounds float, float* %71, i64 4
  %75 = bitcast float* %74 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 4, !tbaa !2, !alias.scope !451
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %78 = bitcast float* %77 to <4 x float>*
  %79 = load <4 x float>, <4 x float>* %78, align 16, !tbaa !2, !alias.scope !454
  %80 = getelementptr inbounds float, float* %77, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  %82 = load <4 x float>, <4 x float>* %81, align 16, !tbaa !2, !alias.scope !454
  %83 = fadd <4 x float> %73, %79
  %84 = fadd <4 x float> %76, %82
  %85 = or i64 %70, 1
  %86 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %85
  %87 = bitcast float* %86 to <4 x float>*
  store <4 x float> %83, <4 x float>* %87, align 4, !tbaa !2, !alias.scope !456, !noalias !458
  %88 = getelementptr inbounds float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> %84, <4 x float>* %89, align 4, !tbaa !2, !alias.scope !456, !noalias !458
  %90 = or i64 %70, 8
  %91 = icmp eq i64 %90, 31992
  br i1 %91, label %55, label %172, !llvm.loop !459

92:                                               ; preds = %98
  %93 = tail call i64 @clock() #16
  %94 = sub nsw i64 %93, %46
  %95 = sitofp i64 %94 to double
  %96 = fdiv double %95, 1.000000e+06
  %97 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.289, i64 0, i64 0), double %96)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !2
  br label %136

98:                                               ; preds = %102
  %99 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #16
  %100 = add nuw nsw i32 %48, 1
  %101 = icmp eq i32 %100, 200000
  br i1 %101, label %92, label %47

102:                                              ; preds = %57, %102
  %103 = phi i64 [ %130, %102 ], [ %65, %57 ]
  %104 = getelementptr inbounds float, float* %49, i64 %103
  %105 = load float, float* %104, align 4, !tbaa !2
  %106 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %103
  %107 = load float, float* %106, align 4, !tbaa !2
  %108 = fadd float %105, %107
  %109 = add nuw nsw i64 %103, 1
  %110 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %109
  store float %108, float* %110, align 4, !tbaa !2
  %111 = getelementptr inbounds float, float* %49, i64 %109
  %112 = load float, float* %111, align 4, !tbaa !2
  %113 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %109
  %114 = load float, float* %113, align 4, !tbaa !2
  %115 = fadd float %112, %114
  %116 = add nuw nsw i64 %103, 2
  %117 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %116
  store float %115, float* %117, align 4, !tbaa !2
  %118 = getelementptr inbounds float, float* %49, i64 %116
  %119 = load float, float* %118, align 4, !tbaa !2
  %120 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %116
  %121 = load float, float* %120, align 4, !tbaa !2
  %122 = fadd float %119, %121
  %123 = add nuw nsw i64 %103, 3
  %124 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %123
  store float %122, float* %124, align 4, !tbaa !2
  %125 = getelementptr inbounds float, float* %49, i64 %123
  %126 = load float, float* %125, align 4, !tbaa !2
  %127 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %123
  %128 = load float, float* %127, align 4, !tbaa !2
  %129 = fadd float %126, %128
  %130 = add nuw nsw i64 %103, 4
  %131 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %130
  store float %129, float* %131, align 4, !tbaa !2
  %132 = icmp eq i64 %130, 31999
  br i1 %132, label %98, label %102, !llvm.loop !460

133:                                              ; preds = %136
  store float %169, float* @temp, align 4, !tbaa !2
  %134 = fpext float %169 to double
  %135 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %134) #16
  ret i32 0

136:                                              ; preds = %136, %92
  %137 = phi i64 [ 0, %92 ], [ %170, %136 ]
  %138 = phi float [ 0.000000e+00, %92 ], [ %169, %136 ]
  %139 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %137
  %140 = load float, float* %139, align 16, !tbaa !2
  %141 = fadd float %140, %138
  %142 = or i64 %137, 1
  %143 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %142
  %144 = load float, float* %143, align 4, !tbaa !2
  %145 = fadd float %144, %141
  %146 = or i64 %137, 2
  %147 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %146
  %148 = load float, float* %147, align 8, !tbaa !2
  %149 = fadd float %148, %145
  %150 = or i64 %137, 3
  %151 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %150
  %152 = load float, float* %151, align 4, !tbaa !2
  %153 = fadd float %152, %149
  %154 = or i64 %137, 4
  %155 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %154
  %156 = load float, float* %155, align 16, !tbaa !2
  %157 = fadd float %156, %153
  %158 = or i64 %137, 5
  %159 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %158
  %160 = load float, float* %159, align 4, !tbaa !2
  %161 = fadd float %160, %157
  %162 = or i64 %137, 6
  %163 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %162
  %164 = load float, float* %163, align 8, !tbaa !2
  %165 = fadd float %164, %161
  %166 = or i64 %137, 7
  %167 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %166
  %168 = load float, float* %167, align 4, !tbaa !2
  %169 = fadd float %168, %165
  %170 = add nuw nsw i64 %137, 8
  %171 = icmp eq i64 %170, 32000
  br i1 %171, label %133, label %136

172:                                              ; preds = %69
  %173 = getelementptr inbounds float, float* %49, i64 %90
  %174 = bitcast float* %173 to <4 x float>*
  %175 = load <4 x float>, <4 x float>* %174, align 4, !tbaa !2, !alias.scope !451
  %176 = getelementptr inbounds float, float* %173, i64 4
  %177 = bitcast float* %176 to <4 x float>*
  %178 = load <4 x float>, <4 x float>* %177, align 4, !tbaa !2, !alias.scope !451
  %179 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %90
  %180 = bitcast float* %179 to <4 x float>*
  %181 = load <4 x float>, <4 x float>* %180, align 16, !tbaa !2, !alias.scope !454
  %182 = getelementptr inbounds float, float* %179, i64 4
  %183 = bitcast float* %182 to <4 x float>*
  %184 = load <4 x float>, <4 x float>* %183, align 16, !tbaa !2, !alias.scope !454
  %185 = fadd <4 x float> %175, %181
  %186 = fadd <4 x float> %178, %184
  %187 = or i64 %70, 9
  %188 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %187
  %189 = bitcast float* %188 to <4 x float>*
  store <4 x float> %185, <4 x float>* %189, align 4, !tbaa !2, !alias.scope !456, !noalias !458
  %190 = getelementptr inbounds float, float* %188, i64 4
  %191 = bitcast float* %190 to <4 x float>*
  store <4 x float> %186, <4 x float>* %191, align 4, !tbaa !2, !alias.scope !456, !noalias !458
  %192 = add nuw nsw i64 %70, 16
  br label %69
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s424() local_unnamed_addr #7 {
  store float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 63), float** @xx, align 8, !tbaa !417
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(128000) bitcast (float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 63) to i8*), i8 0, i64 128000, i1 false)
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %59, %0
  %4 = phi i32 [ 0, %0 ], [ %61, %59 ]
  %5 = load float*, float** @xx, align 8, !tbaa !417
  %6 = getelementptr float, float* %5, i64 1
  %7 = getelementptr float, float* %5, i64 32000
  %8 = icmp ult float* %6, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 31999)
  %9 = icmp ugt float* %7, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0)
  %10 = and i1 %8, %9
  %11 = icmp ult float* %6, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999)
  %12 = icmp ugt float* %7, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0)
  %13 = and i1 %11, %12
  %14 = or i1 %10, %13
  br i1 %14, label %15, label %29

15:                                               ; preds = %3, %29
  %16 = phi i64 [ 0, %3 ], [ 31992, %29 ]
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i64 [ %25, %17 ], [ %16, %15 ]
  %19 = phi i64 [ %27, %17 ], [ 3, %15 ]
  %20 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fadd float %21, %23
  %25 = add nuw nsw i64 %18, 1
  %26 = getelementptr inbounds float, float* %5, i64 %25
  store float %24, float* %26, align 4, !tbaa !2
  %27 = add i64 %19, -1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %63, label %17, !llvm.loop !461

29:                                               ; preds = %3, %121
  %30 = phi i64 [ %141, %121 ], [ 0, %3 ]
  %31 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %30
  %32 = bitcast float* %31 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 16, !tbaa !2, !alias.scope !462
  %34 = getelementptr inbounds float, float* %31, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 16, !tbaa !2, !alias.scope !462
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 16, !tbaa !2, !alias.scope !465
  %40 = getelementptr inbounds float, float* %37, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16, !tbaa !2, !alias.scope !465
  %43 = fadd <4 x float> %33, %39
  %44 = fadd <4 x float> %36, %42
  %45 = or i64 %30, 1
  %46 = getelementptr inbounds float, float* %5, i64 %45
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> %43, <4 x float>* %47, align 4, !tbaa !2, !alias.scope !467, !noalias !469
  %48 = getelementptr inbounds float, float* %46, i64 4
  %49 = bitcast float* %48 to <4 x float>*
  store <4 x float> %44, <4 x float>* %49, align 4, !tbaa !2, !alias.scope !467, !noalias !469
  %50 = or i64 %30, 8
  %51 = icmp eq i64 %50, 31992
  br i1 %51, label %15, label %121, !llvm.loop !470

52:                                               ; preds = %59
  %53 = tail call i64 @clock() #16
  %54 = sub nsw i64 %53, %2
  %55 = sitofp i64 %54 to double
  %56 = fdiv double %55, 1.000000e+06
  %57 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.290, i64 0, i64 0), double %56)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !2
  %58 = load float*, float** @xx, align 8, !tbaa !417
  br label %94

59:                                               ; preds = %63
  %60 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #16
  %61 = add nuw nsw i32 %4, 1
  %62 = icmp eq i32 %61, 200000
  br i1 %62, label %52, label %3

63:                                               ; preds = %17, %63
  %64 = phi i64 [ %91, %63 ], [ %25, %17 ]
  %65 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fadd float %66, %68
  %70 = add nuw nsw i64 %64, 1
  %71 = getelementptr inbounds float, float* %5, i64 %70
  store float %69, float* %71, align 4, !tbaa !2
  %72 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %70
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fadd float %73, %75
  %77 = add nuw nsw i64 %64, 2
  %78 = getelementptr inbounds float, float* %5, i64 %77
  store float %76, float* %78, align 4, !tbaa !2
  %79 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %77
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %77
  %82 = load float, float* %81, align 4, !tbaa !2
  %83 = fadd float %80, %82
  %84 = add nuw nsw i64 %64, 3
  %85 = getelementptr inbounds float, float* %5, i64 %84
  store float %83, float* %85, align 4, !tbaa !2
  %86 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %84
  %87 = load float, float* %86, align 4, !tbaa !2
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %89 = load float, float* %88, align 4, !tbaa !2
  %90 = fadd float %87, %89
  %91 = add nuw nsw i64 %64, 4
  %92 = getelementptr inbounds float, float* %5, i64 %91
  store float %90, float* %92, align 4, !tbaa !2
  %93 = icmp eq i64 %91, 31999
  br i1 %93, label %59, label %63, !llvm.loop !471

94:                                               ; preds = %94, %52
  %95 = phi float [ 0.000000e+00, %52 ], [ %115, %94 ]
  %96 = phi i64 [ 0, %52 ], [ %116, %94 ]
  %97 = getelementptr inbounds float, float* %58, i64 %96
  %98 = load float, float* %97, align 4, !tbaa !2
  %99 = fadd float %98, %95
  store float %99, float* @temp, align 4, !tbaa !2
  %100 = add nuw nsw i64 %96, 1
  %101 = getelementptr inbounds float, float* %58, i64 %100
  %102 = load float, float* %101, align 4, !tbaa !2
  %103 = fadd float %102, %99
  store float %103, float* @temp, align 4, !tbaa !2
  %104 = add nuw nsw i64 %96, 2
  %105 = getelementptr inbounds float, float* %58, i64 %104
  %106 = load float, float* %105, align 4, !tbaa !2
  %107 = fadd float %106, %103
  store float %107, float* @temp, align 4, !tbaa !2
  %108 = add nuw nsw i64 %96, 3
  %109 = getelementptr inbounds float, float* %58, i64 %108
  %110 = load float, float* %109, align 4, !tbaa !2
  %111 = fadd float %110, %107
  store float %111, float* @temp, align 4, !tbaa !2
  %112 = add nuw nsw i64 %96, 4
  %113 = getelementptr inbounds float, float* %58, i64 %112
  %114 = load float, float* %113, align 4, !tbaa !2
  %115 = fadd float %114, %111
  store float %115, float* @temp, align 4, !tbaa !2
  %116 = add nuw nsw i64 %96, 5
  %117 = icmp eq i64 %116, 32000
  br i1 %117, label %118, label %94

118:                                              ; preds = %94
  %119 = fpext float %115 to double
  %120 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %119) #16
  ret i32 0

121:                                              ; preds = %29
  %122 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %50
  %123 = bitcast float* %122 to <4 x float>*
  %124 = load <4 x float>, <4 x float>* %123, align 16, !tbaa !2, !alias.scope !462
  %125 = getelementptr inbounds float, float* %122, i64 4
  %126 = bitcast float* %125 to <4 x float>*
  %127 = load <4 x float>, <4 x float>* %126, align 16, !tbaa !2, !alias.scope !462
  %128 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %129 = bitcast float* %128 to <4 x float>*
  %130 = load <4 x float>, <4 x float>* %129, align 16, !tbaa !2, !alias.scope !465
  %131 = getelementptr inbounds float, float* %128, i64 4
  %132 = bitcast float* %131 to <4 x float>*
  %133 = load <4 x float>, <4 x float>* %132, align 16, !tbaa !2, !alias.scope !465
  %134 = fadd <4 x float> %124, %130
  %135 = fadd <4 x float> %127, %133
  %136 = or i64 %30, 9
  %137 = getelementptr inbounds float, float* %5, i64 %136
  %138 = bitcast float* %137 to <4 x float>*
  store <4 x float> %134, <4 x float>* %138, align 4, !tbaa !2, !alias.scope !467, !noalias !469
  %139 = getelementptr inbounds float, float* %137, i64 4
  %140 = bitcast float* %139 to <4 x float>*
  store <4 x float> %135, <4 x float>* %140, align 4, !tbaa !2, !alias.scope !467, !noalias !469
  %141 = add nuw nsw i64 %30, 16
  br label %29
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s431() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %87
  %4 = phi i32 [ 0, %0 ], [ %89, %87 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %40, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fadd <4 x float> %9, %15
  %20 = fadd <4 x float> %12, %18
  %21 = bitcast float* %7 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 16, !tbaa !2
  %22 = bitcast float* %10 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 16, !tbaa !2
  %23 = or i64 %6, 8
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = getelementptr inbounds float, float* %24, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !2
  %33 = getelementptr inbounds float, float* %30, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 16, !tbaa !2
  %36 = fadd <4 x float> %26, %32
  %37 = fadd <4 x float> %29, %35
  %38 = bitcast float* %24 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 16, !tbaa !2
  %39 = bitcast float* %27 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 16, !tbaa !2
  %40 = add nuw nsw i64 %6, 16
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %87, label %5, !llvm.loop !472

42:                                               ; preds = %87
  %43 = tail call i64 @clock() #16
  %44 = sub nsw i64 %43, %2
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.291, i64 0, i64 0), double %46)
  br label %48

48:                                               ; preds = %48, %42
  %49 = phi i64 [ 0, %42 ], [ %82, %48 ]
  %50 = phi float [ 0.000000e+00, %42 ], [ %81, %48 ]
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %52 = load float, float* %51, align 16, !tbaa !2
  %53 = fadd float %50, %52
  %54 = or i64 %49, 1
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !2
  %57 = fadd float %53, %56
  %58 = or i64 %49, 2
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = load float, float* %59, align 8, !tbaa !2
  %61 = fadd float %57, %60
  %62 = or i64 %49, 3
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %61, %64
  %66 = or i64 %49, 4
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 16, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %49, 5
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %49, 6
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 8, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %49, 7
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %77, %80
  %82 = add nuw nsw i64 %49, 8
  %83 = icmp eq i64 %82, 32000
  br i1 %83, label %84, label %48

84:                                               ; preds = %48
  %85 = fpext float %81 to double
  %86 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %85) #16
  ret i32 0

87:                                               ; preds = %5
  %88 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %89 = add nuw nsw i32 %4, 1
  %90 = icmp eq i32 %89, 500000
  br i1 %90, label %42, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s441() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.292, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %75
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 50000
  br i1 %53, label %5, label %3

54:                                               ; preds = %75, %3
  %55 = phi i64 [ 0, %3 ], [ %80, %75 ]
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fcmp olt float %57, 0.000000e+00
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fmul float %61, %63
  br label %75

65:                                               ; preds = %54
  %66 = fcmp oeq float %57, 0.000000e+00
  br i1 %66, label %67, label %71

67:                                               ; preds = %65
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fmul float %69, %69
  br label %75

71:                                               ; preds = %65
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fmul float %73, %73
  br label %75

75:                                               ; preds = %59, %71, %67
  %76 = phi float [ %64, %59 ], [ %74, %71 ], [ %70, %67 ]
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fadd float %78, %76
  store float %79, float* %77, align 4, !tbaa !2
  %80 = add nuw nsw i64 %55, 1
  %81 = icmp eq i64 %80, 32000
  br i1 %81, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s442() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.293, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %74
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 25000
  br i1 %53, label %5, label %3

54:                                               ; preds = %74, %3
  %55 = phi i64 [ 0, %3 ], [ %79, %74 ]
  %56 = getelementptr inbounds [32000 x i32], [32000 x i32]* @indx, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4, !tbaa !415
  switch i32 %57, label %58 [
    i32 4, label %70
    i32 2, label %62
    i32 3, label %66
  ]

58:                                               ; preds = %54
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = fmul float %60, %60
  br label %74

62:                                               ; preds = %54
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fmul float %64, %64
  br label %74

66:                                               ; preds = %54
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %55
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = fmul float %68, %68
  br label %74

70:                                               ; preds = %54
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %55
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fmul float %72, %72
  br label %74

74:                                               ; preds = %58, %62, %66, %70
  %75 = phi float [ %61, %58 ], [ %65, %62 ], [ %69, %66 ], [ %73, %70 ]
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fadd float %77, %75
  store float %78, float* %76, align 4, !tbaa !2
  %79 = add nuw nsw i64 %55, 1
  %80 = icmp eq i64 %79, 32000
  br i1 %80, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s443() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.294, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %71
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 100000
  br i1 %53, label %5, label %3

54:                                               ; preds = %71, %3
  %55 = phi i64 [ 0, %3 ], [ %76, %71 ]
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fcmp ugt float %57, 0.000000e+00
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %60 = load float, float* %59, align 4, !tbaa !2
  br i1 %58, label %67, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %63 = load float, float* %62, align 4, !tbaa !2
  %64 = fmul float %60, %63
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %66 = load float, float* %65, align 4, !tbaa !2
  br label %71

67:                                               ; preds = %54
  %68 = fmul float %60, %60
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %70 = load float, float* %69, align 4, !tbaa !2
  br label %71

71:                                               ; preds = %61, %67
  %72 = phi float [ %64, %61 ], [ %70, %67 ]
  %73 = phi float [ %66, %61 ], [ %68, %67 ]
  %74 = phi float* [ %65, %61 ], [ %69, %67 ]
  %75 = fadd float %73, %72
  store float %75, float* %74, align 4, !tbaa !2
  %76 = add nuw nsw i64 %55, 1
  %77 = icmp eq i64 %76, 32000
  br i1 %77, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s451() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.295, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 10000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %73, %54 ]
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %57 = load float, float* %56, align 8, !tbaa !2
  %58 = tail call float @sinf(float %57) #16
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %60 = load float, float* %59, align 8, !tbaa !2
  %61 = tail call float @cosf(float %60) #16
  %62 = fadd float %58, %61
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %62, float* %63, align 8, !tbaa !2
  %64 = or i64 %55, 1
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %64
  %66 = load float, float* %65, align 4, !tbaa !2
  %67 = tail call float @sinf(float %66) #16
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %64
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = tail call float @cosf(float %69) #16
  %71 = fadd float %67, %70
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  store float %71, float* %72, align 4, !tbaa !2
  %73 = add nuw nsw i64 %55, 2
  %74 = icmp eq i64 %73, 32000
  br i1 %74, label %50, label %54
}

; Function Attrs: nofree nounwind
declare dso_local float @sinf(float) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare dso_local float @cosf(float) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @s452() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %82
  %4 = phi i32 [ 0, %0 ], [ %84, %82 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %34, %5 ]
  %7 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3 ], [ %35, %5 ]
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 16, !tbaa !2
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !2
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = trunc <4 x i64> %7 to <4 x i32>
  %21 = add <4 x i32> %20, <i32 1, i32 1, i32 1, i32 1>
  %22 = trunc <4 x i64> %7 to <4 x i32>
  %23 = add <4 x i32> %22, <i32 5, i32 5, i32 5, i32 5>
  %24 = sitofp <4 x i32> %21 to <4 x float>
  %25 = sitofp <4 x i32> %23 to <4 x float>
  %26 = fmul <4 x float> %16, %24
  %27 = fmul <4 x float> %19, %25
  %28 = fadd <4 x float> %10, %26
  %29 = fadd <4 x float> %13, %27
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %28, <4 x float>* %31, align 16, !tbaa !2
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> %29, <4 x float>* %33, align 16, !tbaa !2
  %34 = add i64 %6, 8
  %35 = add <4 x i64> %7, <i64 8, i64 8, i64 8, i64 8>
  %36 = icmp eq i64 %34, 32000
  br i1 %36, label %82, label %5, !llvm.loop !473

37:                                               ; preds = %82
  %38 = tail call i64 @clock() #16
  %39 = sub nsw i64 %38, %2
  %40 = sitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  %42 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.296, i64 0, i64 0), double %41)
  br label %43

43:                                               ; preds = %43, %37
  %44 = phi i64 [ 0, %37 ], [ %77, %43 ]
  %45 = phi float [ 0.000000e+00, %37 ], [ %76, %43 ]
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %47 = load float, float* %46, align 16, !tbaa !2
  %48 = fadd float %45, %47
  %49 = or i64 %44, 1
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !2
  %52 = fadd float %48, %51
  %53 = or i64 %44, 2
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = load float, float* %54, align 8, !tbaa !2
  %56 = fadd float %52, %55
  %57 = or i64 %44, 3
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 4, !tbaa !2
  %60 = fadd float %56, %59
  %61 = or i64 %44, 4
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %63 = load float, float* %62, align 16, !tbaa !2
  %64 = fadd float %60, %63
  %65 = or i64 %44, 5
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fadd float %64, %67
  %69 = or i64 %44, 6
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fadd float %68, %71
  %73 = or i64 %44, 7
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fadd float %72, %75
  %77 = add nuw nsw i64 %44, 8
  %78 = icmp eq i64 %77, 32000
  br i1 %78, label %79, label %43

79:                                               ; preds = %43
  %80 = fpext float %76 to double
  %81 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %80) #16
  ret i32 0

82:                                               ; preds = %5
  %83 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %84 = add nuw nsw i32 %4, 1
  %85 = icmp eq i32 %84, 200000
  br i1 %85, label %37, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s453() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.297, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 100000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %80, %54 ]
  %56 = phi float [ 0.000000e+00, %3 ], [ %75, %54 ]
  %57 = fadd float %56, 2.000000e+00
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %59 = load float, float* %58, align 16, !tbaa !2
  %60 = fmul float %57, %59
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %60, float* %61, align 16, !tbaa !2
  %62 = or i64 %55, 1
  %63 = fadd float %57, 2.000000e+00
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fmul float %63, %65
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  store float %66, float* %67, align 4, !tbaa !2
  %68 = or i64 %55, 2
  %69 = fadd float %63, 2.000000e+00
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %68
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fmul float %69, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  store float %72, float* %73, align 8, !tbaa !2
  %74 = or i64 %55, 3
  %75 = fadd float %69, 2.000000e+00
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %74
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fmul float %75, %77
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  store float %78, float* %79, align 4, !tbaa !2
  %80 = add nuw nsw i64 %55, 4
  %81 = icmp eq i64 %80, 32000
  br i1 %81, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s453p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %76
  %4 = phi i32 [ 0, %0 ], [ %78, %76 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %28, %5 ]
  %7 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3 ], [ %29, %5 ]
  %8 = trunc <4 x i64> %7 to <4 x i32>
  %9 = trunc <4 x i64> %7 to <4 x i32>
  %10 = shl <4 x i32> %8, <i32 1, i32 1, i32 1, i32 1>
  %11 = add <4 x i32> %10, <i32 2, i32 2, i32 2, i32 2>
  %12 = shl <4 x i32> %9, <i32 1, i32 1, i32 1, i32 1>
  %13 = add <4 x i32> %12, <i32 10, i32 10, i32 10, i32 10>
  %14 = sitofp <4 x i32> %11 to <4 x float>
  %15 = sitofp <4 x i32> %13 to <4 x float>
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = getelementptr inbounds float, float* %16, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !2
  %22 = fmul <4 x float> %18, %14
  %23 = fmul <4 x float> %21, %15
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %22, <4 x float>* %25, align 16, !tbaa !2
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %23, <4 x float>* %27, align 16, !tbaa !2
  %28 = add i64 %6, 8
  %29 = add <4 x i64> %7, <i64 8, i64 8, i64 8, i64 8>
  %30 = icmp eq i64 %28, 32000
  br i1 %30, label %76, label %5, !llvm.loop !474

31:                                               ; preds = %76
  %32 = tail call i64 @clock() #16
  %33 = sub nsw i64 %32, %2
  %34 = sitofp i64 %33 to double
  %35 = fdiv double %34, 1.000000e+06
  %36 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.298, i64 0, i64 0), double %35)
  br label %37

37:                                               ; preds = %37, %31
  %38 = phi i64 [ 0, %31 ], [ %71, %37 ]
  %39 = phi float [ 0.000000e+00, %31 ], [ %70, %37 ]
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %41 = load float, float* %40, align 16, !tbaa !2
  %42 = fadd float %39, %41
  %43 = or i64 %38, 1
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %42, %45
  %47 = or i64 %38, 2
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 8, !tbaa !2
  %50 = fadd float %46, %49
  %51 = or i64 %38, 3
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = fadd float %50, %53
  %55 = or i64 %38, 4
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 16, !tbaa !2
  %58 = fadd float %54, %57
  %59 = or i64 %38, 5
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = fadd float %58, %61
  %63 = or i64 %38, 6
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = load float, float* %64, align 8, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %38, 7
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !2
  %70 = fadd float %66, %69
  %71 = add nuw nsw i64 %38, 8
  %72 = icmp eq i64 %71, 32000
  br i1 %72, label %73, label %37

73:                                               ; preds = %37
  %74 = fpext float %70 to double
  %75 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %74) #16
  ret i32 0

76:                                               ; preds = %5
  %77 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %78 = add nuw nsw i32 %4, 1
  %79 = icmp eq i32 %78, 100000
  br i1 %79, label %31, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s471() local_unnamed_addr #7 {
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @x to i8*), i8 0, i64 128000, i1 false)
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %54
  %4 = phi i32 [ 0, %0 ], [ %56, %54 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %46, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = fmul <4 x float> %12, %12
  %14 = fadd <4 x float> %9, %13
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %14, <4 x float>* %16, align 16, !tbaa !2
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !2
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !2
  %23 = fmul <4 x float> %12, %22
  %24 = fadd <4 x float> %19, %23
  %25 = bitcast float* %7 to <4 x float>*
  store <4 x float> %24, <4 x float>* %25, align 16, !tbaa !2
  %26 = or i64 %6, 4
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %26
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !2
  %33 = fmul <4 x float> %32, %32
  %34 = fadd <4 x float> %29, %33
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %26
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 16, !tbaa !2
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %26
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 16, !tbaa !2
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %26
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16, !tbaa !2
  %43 = fmul <4 x float> %32, %42
  %44 = fadd <4 x float> %39, %43
  %45 = bitcast float* %27 to <4 x float>*
  store <4 x float> %44, <4 x float>* %45, align 16, !tbaa !2
  %46 = add nuw nsw i64 %6, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %54, label %5, !llvm.loop !475

48:                                               ; preds = %54
  %49 = tail call i64 @clock() #16
  %50 = sub nsw i64 %49, %2
  %51 = sitofp i64 %50 to double
  %52 = fdiv double %51, 1.000000e+06
  %53 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.299, i64 0, i64 0), double %52)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !2
  br label %99

54:                                               ; preds = %5
  %55 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %56 = add nuw nsw i32 %4, 1
  %57 = icmp eq i32 %56, 25000
  br i1 %57, label %48, label %3

58:                                               ; preds = %99
  store float %132, float* @temp, align 4, !tbaa !2
  br label %59

59:                                               ; preds = %59, %58
  %60 = phi i64 [ 0, %58 ], [ %93, %59 ]
  %61 = phi float [ 0.000000e+00, %58 ], [ %92, %59 ]
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %63 = load float, float* %62, align 16, !tbaa !2
  %64 = fadd float %61, %63
  %65 = or i64 %60, 1
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %65
  %67 = load float, float* %66, align 4, !tbaa !2
  %68 = fadd float %64, %67
  %69 = or i64 %60, 2
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  %71 = load float, float* %70, align 8, !tbaa !2
  %72 = fadd float %68, %71
  %73 = or i64 %60, 3
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %73
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fadd float %72, %75
  %77 = or i64 %60, 4
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %77
  %79 = load float, float* %78, align 16, !tbaa !2
  %80 = fadd float %76, %79
  %81 = or i64 %60, 5
  %82 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !2
  %84 = fadd float %80, %83
  %85 = or i64 %60, 6
  %86 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %85
  %87 = load float, float* %86, align 8, !tbaa !2
  %88 = fadd float %84, %87
  %89 = or i64 %60, 7
  %90 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %89
  %91 = load float, float* %90, align 4, !tbaa !2
  %92 = fadd float %88, %91
  %93 = add nuw nsw i64 %60, 8
  %94 = icmp eq i64 %93, 32000
  br i1 %94, label %95, label %59

95:                                               ; preds = %59
  %96 = fadd float %92, %132
  %97 = fpext float %96 to double
  %98 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %97) #16
  ret i32 0

99:                                               ; preds = %99, %48
  %100 = phi i64 [ 0, %48 ], [ %133, %99 ]
  %101 = phi float [ 0.000000e+00, %48 ], [ %132, %99 ]
  %102 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %100
  %103 = load float, float* %102, align 16, !tbaa !2
  %104 = fadd float %103, %101
  %105 = or i64 %100, 1
  %106 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %105
  %107 = load float, float* %106, align 4, !tbaa !2
  %108 = fadd float %107, %104
  %109 = or i64 %100, 2
  %110 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %109
  %111 = load float, float* %110, align 8, !tbaa !2
  %112 = fadd float %111, %108
  %113 = or i64 %100, 3
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %113
  %115 = load float, float* %114, align 4, !tbaa !2
  %116 = fadd float %115, %112
  %117 = or i64 %100, 4
  %118 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %117
  %119 = load float, float* %118, align 16, !tbaa !2
  %120 = fadd float %119, %116
  %121 = or i64 %100, 5
  %122 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %121
  %123 = load float, float* %122, align 4, !tbaa !2
  %124 = fadd float %123, %120
  %125 = or i64 %100, 6
  %126 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %125
  %127 = load float, float* %126, align 8, !tbaa !2
  %128 = fadd float %127, %124
  %129 = or i64 %100, 7
  %130 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %129
  %131 = load float, float* %130, align 4, !tbaa !2
  %132 = fadd float %131, %128
  %133 = add nuw nsw i64 %100, 8
  %134 = icmp eq i64 %133, 32000
  br i1 %134, label %58, label %99
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s481() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.300, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %73
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 50000
  br i1 %53, label %5, label %3

54:                                               ; preds = %73, %3
  %55 = phi i64 [ 0, %3 ], [ %82, %73 ]
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %55
  %57 = load float, float* %56, align 8, !tbaa !2
  %58 = fcmp olt float %57, 0.000000e+00
  br i1 %58, label %59, label %60

59:                                               ; preds = %60, %54
  tail call void @exit(i32 0) #17
  unreachable

60:                                               ; preds = %54
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %64 = load float, float* %63, align 8, !tbaa !2
  %65 = fmul float %62, %64
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %67 = load float, float* %66, align 8, !tbaa !2
  %68 = fadd float %67, %65
  store float %68, float* %66, align 8, !tbaa !2
  %69 = or i64 %55, 1
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = fcmp olt float %71, 0.000000e+00
  br i1 %72, label %59, label %73

73:                                               ; preds = %60
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %69
  %77 = load float, float* %76, align 4, !tbaa !2
  %78 = fmul float %75, %77
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %80, %78
  store float %81, float* %79, align 4, !tbaa !2
  %82 = add nuw nsw i64 %55, 2
  %83 = icmp eq i64 %82, 32000
  br i1 %83, label %50, label %54
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) local_unnamed_addr #12

; Function Attrs: nounwind uwtable
define dso_local i32 @s482() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %72, %0
  %4 = phi i32 [ 0, %0 ], [ %74, %72 ]
  br label %61

5:                                                ; preds = %72
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.301, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %61
  %51 = or i64 %62, 1
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !2
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %51
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fmul float %53, %55
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %51
  %58 = load float, float* %57, align 4, !tbaa !2
  %59 = fadd float %58, %56
  store float %59, float* %57, align 4, !tbaa !2
  %60 = fcmp ogt float %55, %53
  br i1 %60, label %72, label %76

61:                                               ; preds = %76, %3
  %62 = phi i64 [ 0, %3 ], [ %77, %76 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %64 = load float, float* %63, align 8, !tbaa !2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %66 = load float, float* %65, align 8, !tbaa !2
  %67 = fmul float %64, %66
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %69 = load float, float* %68, align 8, !tbaa !2
  %70 = fadd float %69, %67
  store float %70, float* %68, align 8, !tbaa !2
  %71 = fcmp ogt float %66, %64
  br i1 %71, label %72, label %50

72:                                               ; preds = %76, %50, %61
  %73 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %74 = add nuw nsw i32 %4, 1
  %75 = icmp eq i32 %74, 50000
  br i1 %75, label %5, label %3

76:                                               ; preds = %50
  %77 = add nuw nsw i64 %62, 2
  %78 = icmp eq i64 %77, 32000
  br i1 %78, label %72, label %61
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @min(i32 %0, i32 %1) local_unnamed_addr #11 {
  %3 = icmp slt i32 %0, %1
  %4 = select i1 %3, i32 %0, i32 %1
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s491(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %51, %1
  %5 = phi i32 [ 0, %1 ], [ %53, %51 ]
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.302, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %5, 1
  %54 = icmp eq i32 %53, 50000
  br i1 %54, label %6, label %4

55:                                               ; preds = %55, %4
  %56 = phi i64 [ 0, %4 ], [ %82, %55 ]
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  %58 = load float, float* %57, align 8, !tbaa !2
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %56
  %60 = load float, float* %59, align 8, !tbaa !2
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %56
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fmul float %60, %62
  %64 = fadd float %58, %63
  %65 = getelementptr inbounds i32, i32* %0, i64 %56
  %66 = load i32, i32* %65, align 4, !tbaa !415
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  store float %64, float* %68, align 4, !tbaa !2
  %69 = or i64 %56, 1
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %69
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %69
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fmul float %73, %75
  %77 = fadd float %71, %76
  %78 = getelementptr inbounds i32, i32* %0, i64 %69
  %79 = load i32, i32* %78, align 4, !tbaa !415
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  store float %77, float* %81, align 4, !tbaa !2
  %82 = add nuw nsw i64 %56, 2
  %83 = icmp eq i64 %82, 32000
  br i1 %83, label %51, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s4112(i32* noalias nocapture readonly %0, float %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i64 0, i64 0))
  %4 = tail call i64 @clock() #16
  br label %5

5:                                                ; preds = %52, %2
  %6 = phi i32 [ 0, %2 ], [ %54, %52 ]
  br label %56

7:                                                ; preds = %52
  %8 = tail call i64 @clock() #16
  %9 = sub nsw i64 %8, %4
  %10 = sitofp i64 %9 to double
  %11 = fdiv double %10, 1.000000e+06
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.303, i64 0, i64 0), double %11)
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi i64 [ 0, %7 ], [ %47, %13 ]
  %15 = phi float [ 0.000000e+00, %7 ], [ %46, %13 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %17 = load float, float* %16, align 16, !tbaa !2
  %18 = fadd float %15, %17
  %19 = or i64 %14, 1
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4, !tbaa !2
  %22 = fadd float %18, %21
  %23 = or i64 %14, 2
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 8, !tbaa !2
  %26 = fadd float %22, %25
  %27 = or i64 %14, 3
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4, !tbaa !2
  %30 = fadd float %26, %29
  %31 = or i64 %14, 4
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 16, !tbaa !2
  %34 = fadd float %30, %33
  %35 = or i64 %14, 5
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fadd float %34, %37
  %39 = or i64 %14, 6
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 8, !tbaa !2
  %42 = fadd float %38, %41
  %43 = or i64 %14, 7
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !2
  %46 = fadd float %42, %45
  %47 = add nuw nsw i64 %14, 8
  %48 = icmp eq i64 %47, 32000
  br i1 %48, label %49, label %13

49:                                               ; preds = %13
  %50 = fpext float %46 to double
  %51 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %50) #16
  ret i32 0

52:                                               ; preds = %56
  %53 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %54 = add nuw nsw i32 %6, 1
  %55 = icmp eq i32 %54, 50000
  br i1 %55, label %7, label %5

56:                                               ; preds = %56, %5
  %57 = phi i64 [ 0, %5 ], [ %77, %56 ]
  %58 = getelementptr inbounds i32, i32* %0, i64 %57
  %59 = load i32, i32* %58, align 4, !tbaa !415
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fmul float %62, %1
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %65 = load float, float* %64, align 8, !tbaa !2
  %66 = fadd float %65, %63
  store float %66, float* %64, align 8, !tbaa !2
  %67 = or i64 %57, 1
  %68 = getelementptr inbounds i32, i32* %0, i64 %67
  %69 = load i32, i32* %68, align 4, !tbaa !415
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fmul float %72, %1
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %75 = load float, float* %74, align 4, !tbaa !2
  %76 = fadd float %75, %73
  store float %76, float* %74, align 4, !tbaa !2
  %77 = add nuw nsw i64 %57, 2
  %78 = icmp eq i64 %77, 32000
  br i1 %78, label %52, label %56
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s4113(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %51, %1
  %5 = phi i32 [ 0, %1 ], [ %53, %51 ]
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.304, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %5, 1
  %54 = icmp eq i32 %53, 50000
  br i1 %54, label %6, label %4

55:                                               ; preds = %55, %4
  %56 = phi i64 [ 0, %4 ], [ %76, %55 ]
  %57 = getelementptr inbounds i32, i32* %0, i64 %56
  %58 = load i32, i32* %57, align 4, !tbaa !415
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !2
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %56
  %63 = load float, float* %62, align 8, !tbaa !2
  %64 = fadd float %61, %63
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  store float %64, float* %65, align 4, !tbaa !2
  %66 = or i64 %56, 1
  %67 = getelementptr inbounds i32, i32* %0, i64 %66
  %68 = load i32, i32* %67, align 4, !tbaa !415
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %66
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %71, %73
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  store float %74, float* %75, align 4, !tbaa !2
  %76 = add nuw nsw i64 %56, 2
  %77 = icmp eq i64 %76, 32000
  br i1 %77, label %51, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s4114(i32* nocapture readonly %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0))
  %4 = tail call i64 @clock() #16
  %5 = icmp slt i32 %1, 32001
  br i1 %5, label %6, label %77

6:                                                ; preds = %2
  %7 = add i32 %1, -1
  %8 = sext i32 %7 to i64
  br label %9

9:                                                ; preds = %28, %6
  %10 = phi i32 [ %30, %28 ], [ 0, %6 ]
  br label %11

11:                                               ; preds = %9, %11
  %12 = phi i64 [ %8, %9 ], [ %26, %11 ]
  %13 = getelementptr inbounds i32, i32* %0, i64 %12
  %14 = load i32, i32* %13, align 4, !tbaa !415
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !2
  %17 = sub i32 31999, %14
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %12
  %22 = load float, float* %21, align 4, !tbaa !2
  %23 = fmul float %20, %22
  %24 = fadd float %16, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  store float %24, float* %25, align 4, !tbaa !2
  %26 = add nsw i64 %12, 1
  %27 = icmp slt i64 %12, 31999
  br i1 %27, label %11, label %28

28:                                               ; preds = %11
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %30 = add nuw nsw i32 %10, 1
  %31 = icmp eq i32 %30, 50000
  br i1 %31, label %32, label %9

32:                                               ; preds = %77, %28
  %33 = tail call i64 @clock() #16
  %34 = sub nsw i64 %33, %4
  %35 = sitofp i64 %34 to double
  %36 = fdiv double %35, 1.000000e+06
  %37 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.305, i64 0, i64 0), double %36)
  br label %38

38:                                               ; preds = %38, %32
  %39 = phi i64 [ 0, %32 ], [ %72, %38 ]
  %40 = phi float [ 0.000000e+00, %32 ], [ %71, %38 ]
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %42 = load float, float* %41, align 16, !tbaa !2
  %43 = fadd float %40, %42
  %44 = or i64 %39, 1
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 4, !tbaa !2
  %47 = fadd float %43, %46
  %48 = or i64 %39, 2
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 8, !tbaa !2
  %51 = fadd float %47, %50
  %52 = or i64 %39, 3
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 4, !tbaa !2
  %55 = fadd float %51, %54
  %56 = or i64 %39, 4
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %58 = load float, float* %57, align 16, !tbaa !2
  %59 = fadd float %55, %58
  %60 = or i64 %39, 5
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %39, 6
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 8, !tbaa !2
  %67 = fadd float %63, %66
  %68 = or i64 %39, 7
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = fadd float %67, %70
  %72 = add nuw nsw i64 %39, 8
  %73 = icmp eq i64 %72, 32000
  br i1 %73, label %74, label %38

74:                                               ; preds = %38
  %75 = fpext float %71 to double
  %76 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %75) #16
  ret i32 0

77:                                               ; preds = %2, %77
  %78 = phi i32 [ %80, %77 ], [ 0, %2 ]
  %79 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %80 = add nuw nsw i32 %78, 1
  %81 = icmp eq i32 %80, 50000
  br i1 %81, label %32, label %77
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s4115(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %14, %1
  %5 = phi i32 [ 0, %1 ], [ %16, %14 ]
  br label %18

6:                                                ; preds = %14
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.306, i64 0, i64 0), double %10)
  store float %59, float* @temp, align 4, !tbaa !2
  %12 = fpext float %59 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #16
  ret i32 0

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %16 = add nuw nsw i32 %5, 1
  %17 = icmp eq i32 %16, 50000
  br i1 %17, label %6, label %4

18:                                               ; preds = %18, %4
  %19 = phi i64 [ 0, %4 ], [ %60, %18 ]
  %20 = phi float [ 0.000000e+00, %4 ], [ %59, %18 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 16, !tbaa !2
  %23 = getelementptr inbounds i32, i32* %0, i64 %19
  %24 = load i32, i32* %23, align 4, !tbaa !415
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fmul float %22, %27
  %29 = fadd float %20, %28
  %30 = or i64 %19, 1
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 4, !tbaa !2
  %33 = getelementptr inbounds i32, i32* %0, i64 %30
  %34 = load i32, i32* %33, align 4, !tbaa !415
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fmul float %32, %37
  %39 = fadd float %29, %38
  %40 = or i64 %19, 2
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 8, !tbaa !2
  %43 = getelementptr inbounds i32, i32* %0, i64 %40
  %44 = load i32, i32* %43, align 4, !tbaa !415
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !2
  %48 = fmul float %42, %47
  %49 = fadd float %39, %48
  %50 = or i64 %19, 3
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %52 = load float, float* %51, align 4, !tbaa !2
  %53 = getelementptr inbounds i32, i32* %0, i64 %50
  %54 = load i32, i32* %53, align 4, !tbaa !415
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !2
  %58 = fmul float %52, %57
  %59 = fadd float %49, %58
  %60 = add nuw nsw i64 %19, 4
  %61 = icmp eq i64 %60, 32000
  br i1 %61, label %14, label %18
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s4116(i32* noalias nocapture readonly %0, i32 %1, i32 %2) local_unnamed_addr #7 {
  %4 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i64 0, i64 0))
  %5 = tail call i64 @clock() #16
  %6 = add nsw i32 %1, -1
  %7 = sext i32 %6 to i64
  %8 = sext i32 %2 to i64
  br label %9

9:                                                ; preds = %19, %3
  %10 = phi i32 [ 0, %3 ], [ %21, %19 ]
  br label %23

11:                                               ; preds = %19
  %12 = tail call i64 @clock() #16
  %13 = sub nsw i64 %12, %5
  %14 = sitofp i64 %13 to double
  %15 = fdiv double %14, 1.000000e+06
  %16 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.307, i64 0, i64 0), double %15)
  store float %57, float* @temp, align 4, !tbaa !2
  %17 = fpext float %57 to double
  %18 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %17) #16
  ret i32 0

19:                                               ; preds = %23
  %20 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %21 = add nuw nsw i32 %10, 1
  %22 = icmp eq i32 %21, 5000000
  br i1 %22, label %11, label %9

23:                                               ; preds = %23, %9
  %24 = phi i64 [ 0, %9 ], [ %58, %23 ]
  %25 = phi float [ 0.000000e+00, %9 ], [ %57, %23 ]
  %26 = add nsw i64 %24, %8
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = getelementptr inbounds i32, i32* %0, i64 %24
  %30 = load i32, i32* %29, align 4, !tbaa !415
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !2
  %34 = fmul float %28, %33
  %35 = fadd float %25, %34
  %36 = add nuw nsw i64 %24, 1
  %37 = add nsw i64 %36, %8
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !2
  %40 = getelementptr inbounds i32, i32* %0, i64 %36
  %41 = load i32, i32* %40, align 4, !tbaa !415
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fmul float %39, %44
  %46 = fadd float %35, %45
  %47 = add nuw nsw i64 %24, 2
  %48 = add nsw i64 %47, %8
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !2
  %51 = getelementptr inbounds i32, i32* %0, i64 %47
  %52 = load i32, i32* %51, align 4, !tbaa !415
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7, i64 %53
  %55 = load float, float* %54, align 4, !tbaa !2
  %56 = fmul float %50, %55
  %57 = fadd float %46, %56
  %58 = add nuw nsw i64 %24, 3
  %59 = icmp eq i64 %58, 255
  br i1 %59, label %19, label %23
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s4117() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.308, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 50000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %77, %54 ]
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %57 = load float, float* %56, align 8, !tbaa !2
  %58 = lshr exact i64 %55, 1
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %58
  %60 = load float, float* %59, align 4, !tbaa !2
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %55
  %62 = load float, float* %61, align 8, !tbaa !2
  %63 = fmul float %60, %62
  %64 = fadd float %57, %63
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %64, float* %65, align 8, !tbaa !2
  %66 = or i64 %55, 1
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !2
  %69 = lshr exact i64 %55, 1
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !2
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %66
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fmul float %71, %73
  %75 = fadd float %68, %74
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  store float %75, float* %76, align 4, !tbaa !2
  %77 = add nuw nsw i64 %55, 2
  %78 = icmp eq i64 %77, 32000
  br i1 %78, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @s4121() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %103
  %4 = phi i32 [ 0, %0 ], [ %105, %103 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %56, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !2
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !2
  %31 = or i64 %6, 8
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !2
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !2
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 16, !tbaa !2
  %41 = getelementptr inbounds float, float* %38, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %43 = load <4 x float>, <4 x float>* %42, align 16, !tbaa !2
  %44 = fmul <4 x float> %34, %40
  %45 = fmul <4 x float> %37, %43
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %47 = bitcast float* %46 to <4 x float>*
  %48 = load <4 x float>, <4 x float>* %47, align 16, !tbaa !2
  %49 = getelementptr inbounds float, float* %46, i64 4
  %50 = bitcast float* %49 to <4 x float>*
  %51 = load <4 x float>, <4 x float>* %50, align 16, !tbaa !2
  %52 = fadd <4 x float> %48, %44
  %53 = fadd <4 x float> %51, %45
  %54 = bitcast float* %46 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 16, !tbaa !2
  %55 = bitcast float* %49 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 16, !tbaa !2
  %56 = add nuw nsw i64 %6, 16
  %57 = icmp eq i64 %56, 32000
  br i1 %57, label %103, label %5, !llvm.loop !476

58:                                               ; preds = %103
  %59 = tail call i64 @clock() #16
  %60 = sub nsw i64 %59, %2
  %61 = sitofp i64 %60 to double
  %62 = fdiv double %61, 1.000000e+06
  %63 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.309, i64 0, i64 0), double %62)
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi i64 [ 0, %58 ], [ %98, %64 ]
  %66 = phi float [ 0.000000e+00, %58 ], [ %97, %64 ]
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %68 = load float, float* %67, align 16, !tbaa !2
  %69 = fadd float %66, %68
  %70 = or i64 %65, 1
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %65, 2
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 8, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %65, 3
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %77, %80
  %82 = or i64 %65, 4
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 16, !tbaa !2
  %85 = fadd float %81, %84
  %86 = or i64 %65, 5
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = fadd float %85, %88
  %90 = or i64 %65, 6
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %90
  %92 = load float, float* %91, align 8, !tbaa !2
  %93 = fadd float %89, %92
  %94 = or i64 %65, 7
  %95 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %94
  %96 = load float, float* %95, align 4, !tbaa !2
  %97 = fadd float %93, %96
  %98 = add nuw nsw i64 %65, 8
  %99 = icmp eq i64 %98, 32000
  br i1 %99, label %100, label %64

100:                                              ; preds = %64
  %101 = fpext float %97 to double
  %102 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %101) #16
  ret i32 0

103:                                              ; preds = %5
  %104 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %105 = add nuw nsw i32 %4, 1
  %106 = icmp eq i32 %105, 50000
  br i1 %106, label %58, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @va() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %3, %0
  %4 = phi i32 [ 0, %0 ], [ %6, %3 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8* nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i64 128000, i1 false)
  %5 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %6 = add nuw nsw i32 %4, 1
  %7 = icmp eq i32 %6, 500000
  br i1 %7, label %8, label %3

8:                                                ; preds = %3
  %9 = tail call i64 @clock() #16
  %10 = sub nsw i64 %9, %2
  %11 = sitofp i64 %10 to double
  %12 = fdiv double %11, 1.000000e+06
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.310, i64 0, i64 0), double %12)
  br label %14

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %48, %14 ]
  %16 = phi float [ 0.000000e+00, %8 ], [ %47, %14 ]
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15
  %18 = load float, float* %17, align 16, !tbaa !2
  %19 = fadd float %16, %18
  %20 = or i64 %15, 1
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %20
  %22 = load float, float* %21, align 4, !tbaa !2
  %23 = fadd float %19, %22
  %24 = or i64 %15, 2
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  %26 = load float, float* %25, align 8, !tbaa !2
  %27 = fadd float %23, %26
  %28 = or i64 %15, 3
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fadd float %27, %30
  %32 = or i64 %15, 4
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 16, !tbaa !2
  %35 = fadd float %31, %34
  %36 = or i64 %15, 5
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !2
  %39 = fadd float %35, %38
  %40 = or i64 %15, 6
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 8, !tbaa !2
  %43 = fadd float %39, %42
  %44 = or i64 %15, 7
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 4, !tbaa !2
  %47 = fadd float %43, %46
  %48 = add nuw nsw i64 %15, 8
  %49 = icmp eq i64 %48, 32000
  br i1 %49, label %50, label %14

50:                                               ; preds = %14
  %51 = fpext float %47 to double
  %52 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %51) #16
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vag(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %51, %1
  %5 = phi i32 [ 0, %1 ], [ %53, %51 ]
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.311, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %5, 1
  %54 = icmp eq i32 %53, 100000
  br i1 %54, label %6, label %4

55:                                               ; preds = %55, %4
  %56 = phi i64 [ 0, %4 ], [ %101, %55 ]
  %57 = getelementptr inbounds i32, i32* %0, i64 %56
  %58 = load i32, i32* %57, align 4, !tbaa !415
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %59
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4, !tbaa !2
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %64 = bitcast float* %63 to i32*
  store i32 %62, i32* %64, align 4, !tbaa !2
  %65 = add nuw nsw i64 %56, 1
  %66 = getelementptr inbounds i32, i32* %0, i64 %65
  %67 = load i32, i32* %66, align 4, !tbaa !415
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %68
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4, !tbaa !2
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %73 = bitcast float* %72 to i32*
  store i32 %71, i32* %73, align 4, !tbaa !2
  %74 = add nuw nsw i64 %56, 2
  %75 = getelementptr inbounds i32, i32* %0, i64 %74
  %76 = load i32, i32* %75, align 4, !tbaa !415
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %77
  %79 = bitcast float* %78 to i32*
  %80 = load i32, i32* %79, align 4, !tbaa !2
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %82 = bitcast float* %81 to i32*
  store i32 %80, i32* %82, align 4, !tbaa !2
  %83 = add nuw nsw i64 %56, 3
  %84 = getelementptr inbounds i32, i32* %0, i64 %83
  %85 = load i32, i32* %84, align 4, !tbaa !415
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %86
  %88 = bitcast float* %87 to i32*
  %89 = load i32, i32* %88, align 4, !tbaa !2
  %90 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %83
  %91 = bitcast float* %90 to i32*
  store i32 %89, i32* %91, align 4, !tbaa !2
  %92 = add nuw nsw i64 %56, 4
  %93 = getelementptr inbounds i32, i32* %0, i64 %92
  %94 = load i32, i32* %93, align 4, !tbaa !415
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %95
  %97 = bitcast float* %96 to i32*
  %98 = load i32, i32* %97, align 4, !tbaa !2
  %99 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %92
  %100 = bitcast float* %99 to i32*
  store i32 %98, i32* %100, align 4, !tbaa !2
  %101 = add nuw nsw i64 %56, 5
  %102 = icmp eq i64 %101, 32000
  br i1 %102, label %51, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vas(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  br label %4

4:                                                ; preds = %51, %1
  %5 = phi i32 [ 0, %1 ], [ %53, %51 ]
  br label %55

6:                                                ; preds = %51
  %7 = tail call i64 @clock() #16
  %8 = sub nsw i64 %7, %3
  %9 = sitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.312, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %46, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %45, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 16, !tbaa !2
  %17 = fadd float %14, %16
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4, !tbaa !2
  %21 = fadd float %17, %20
  %22 = or i64 %13, 2
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 8, !tbaa !2
  %25 = fadd float %21, %24
  %26 = or i64 %13, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = fadd float %25, %28
  %30 = or i64 %13, 4
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 16, !tbaa !2
  %33 = fadd float %29, %32
  %34 = or i64 %13, 5
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !2
  %37 = fadd float %33, %36
  %38 = or i64 %13, 6
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 8, !tbaa !2
  %41 = fadd float %37, %40
  %42 = or i64 %13, 7
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fadd float %41, %44
  %46 = add nuw nsw i64 %13, 8
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %48, label %12

48:                                               ; preds = %12
  %49 = fpext float %45 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #16
  ret i32 0

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %53 = add nuw nsw i32 %5, 1
  %54 = icmp eq i32 %53, 100000
  br i1 %54, label %6, label %4

55:                                               ; preds = %55, %4
  %56 = phi i64 [ 0, %4 ], [ %101, %55 ]
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4, !tbaa !2
  %60 = getelementptr inbounds i32, i32* %0, i64 %56
  %61 = load i32, i32* %60, align 4, !tbaa !415
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = bitcast float* %63 to i32*
  store i32 %59, i32* %64, align 4, !tbaa !2
  %65 = add nuw nsw i64 %56, 1
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %65
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4, !tbaa !2
  %69 = getelementptr inbounds i32, i32* %0, i64 %65
  %70 = load i32, i32* %69, align 4, !tbaa !415
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = bitcast float* %72 to i32*
  store i32 %68, i32* %73, align 4, !tbaa !2
  %74 = add nuw nsw i64 %56, 2
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %74
  %76 = bitcast float* %75 to i32*
  %77 = load i32, i32* %76, align 4, !tbaa !2
  %78 = getelementptr inbounds i32, i32* %0, i64 %74
  %79 = load i32, i32* %78, align 4, !tbaa !415
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %82 = bitcast float* %81 to i32*
  store i32 %77, i32* %82, align 4, !tbaa !2
  %83 = add nuw nsw i64 %56, 3
  %84 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %83
  %85 = bitcast float* %84 to i32*
  %86 = load i32, i32* %85, align 4, !tbaa !2
  %87 = getelementptr inbounds i32, i32* %0, i64 %83
  %88 = load i32, i32* %87, align 4, !tbaa !415
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %89
  %91 = bitcast float* %90 to i32*
  store i32 %86, i32* %91, align 4, !tbaa !2
  %92 = add nuw nsw i64 %56, 4
  %93 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %92
  %94 = bitcast float* %93 to i32*
  %95 = load i32, i32* %94, align 4, !tbaa !2
  %96 = getelementptr inbounds i32, i32* %0, i64 %92
  %97 = load i32, i32* %96, align 4, !tbaa !415
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %98
  %100 = bitcast float* %99 to i32*
  store i32 %95, i32* %100, align 4, !tbaa !2
  %101 = add nuw nsw i64 %56, 5
  %102 = icmp eq i64 %101, 32000
  br i1 %102, label %51, label %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vif() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %109
  %4 = phi i32 [ 0, %0 ], [ %111, %109 ]
  br label %5

5:                                                ; preds = %61, %3
  %6 = phi i64 [ 0, %3 ], [ %62, %61 ]
  %7 = or i64 %6, 4
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 16, !tbaa !2
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !2
  %14 = fcmp ogt <4 x float> %10, zeroinitializer
  %15 = fcmp ogt <4 x float> %13, zeroinitializer
  %16 = extractelement <4 x i1> %14, i32 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %5
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %19 = extractelement <4 x float> %10, i32 0
  store float %19, float* %18, align 16, !tbaa !2
  br label %20

20:                                               ; preds = %17, %5
  %21 = extractelement <4 x i1> %14, i32 1
  br i1 %21, label %22, label %26

22:                                               ; preds = %20
  %23 = or i64 %6, 1
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = extractelement <4 x float> %10, i32 1
  store float %25, float* %24, align 4, !tbaa !2
  br label %26

26:                                               ; preds = %22, %20
  %27 = extractelement <4 x i1> %14, i32 2
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = or i64 %6, 2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = extractelement <4 x float> %10, i32 2
  store float %31, float* %30, align 8, !tbaa !2
  br label %32

32:                                               ; preds = %28, %26
  %33 = extractelement <4 x i1> %14, i32 3
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = or i64 %6, 3
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = extractelement <4 x float> %10, i32 3
  store float %37, float* %36, align 4, !tbaa !2
  br label %38

38:                                               ; preds = %34, %32
  %39 = extractelement <4 x i1> %15, i32 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %38
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %42 = extractelement <4 x float> %13, i32 0
  store float %42, float* %41, align 16, !tbaa !2
  br label %43

43:                                               ; preds = %40, %38
  %44 = extractelement <4 x i1> %15, i32 1
  br i1 %44, label %45, label %49

45:                                               ; preds = %43
  %46 = or i64 %6, 5
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %48 = extractelement <4 x float> %13, i32 1
  store float %48, float* %47, align 4, !tbaa !2
  br label %49

49:                                               ; preds = %45, %43
  %50 = extractelement <4 x i1> %15, i32 2
  br i1 %50, label %51, label %55

51:                                               ; preds = %49
  %52 = or i64 %6, 6
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = extractelement <4 x float> %13, i32 2
  store float %54, float* %53, align 8, !tbaa !2
  br label %55

55:                                               ; preds = %51, %49
  %56 = extractelement <4 x i1> %15, i32 3
  br i1 %56, label %57, label %61

57:                                               ; preds = %55
  %58 = or i64 %6, 7
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = extractelement <4 x float> %13, i32 3
  store float %60, float* %59, align 4, !tbaa !2
  br label %61

61:                                               ; preds = %57, %55
  %62 = add i64 %6, 8
  %63 = icmp eq i64 %62, 32000
  br i1 %63, label %109, label %5, !llvm.loop !477

64:                                               ; preds = %109
  %65 = tail call i64 @clock() #16
  %66 = sub nsw i64 %65, %2
  %67 = sitofp i64 %66 to double
  %68 = fdiv double %67, 1.000000e+06
  %69 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.313, i64 0, i64 0), double %68)
  br label %70

70:                                               ; preds = %70, %64
  %71 = phi i64 [ 0, %64 ], [ %104, %70 ]
  %72 = phi float [ 0.000000e+00, %64 ], [ %103, %70 ]
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %74 = load float, float* %73, align 16, !tbaa !2
  %75 = fadd float %72, %74
  %76 = or i64 %71, 1
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fadd float %75, %78
  %80 = or i64 %71, 2
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %82 = load float, float* %81, align 8, !tbaa !2
  %83 = fadd float %79, %82
  %84 = or i64 %71, 3
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fadd float %83, %86
  %88 = or i64 %71, 4
  %89 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %88
  %90 = load float, float* %89, align 16, !tbaa !2
  %91 = fadd float %87, %90
  %92 = or i64 %71, 5
  %93 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %92
  %94 = load float, float* %93, align 4, !tbaa !2
  %95 = fadd float %91, %94
  %96 = or i64 %71, 6
  %97 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %96
  %98 = load float, float* %97, align 8, !tbaa !2
  %99 = fadd float %95, %98
  %100 = or i64 %71, 7
  %101 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %100
  %102 = load float, float* %101, align 4, !tbaa !2
  %103 = fadd float %99, %102
  %104 = add nuw nsw i64 %71, 8
  %105 = icmp eq i64 %104, 32000
  br i1 %105, label %106, label %70

106:                                              ; preds = %70
  %107 = fpext float %103 to double
  %108 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %107) #16
  ret i32 0

109:                                              ; preds = %61
  %110 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %111 = add nuw nsw i32 %4, 1
  %112 = icmp eq i32 %111, 50000
  br i1 %112, label %64, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vpv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %87
  %4 = phi i32 [ 0, %0 ], [ %89, %87 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %40, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fadd <4 x float> %9, %15
  %20 = fadd <4 x float> %12, %18
  %21 = bitcast float* %13 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 16, !tbaa !2
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 16, !tbaa !2
  %23 = or i64 %6, 8
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = getelementptr inbounds float, float* %24, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !2
  %33 = getelementptr inbounds float, float* %30, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 16, !tbaa !2
  %36 = fadd <4 x float> %26, %32
  %37 = fadd <4 x float> %29, %35
  %38 = bitcast float* %30 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 16, !tbaa !2
  %39 = bitcast float* %33 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 16, !tbaa !2
  %40 = add nuw nsw i64 %6, 16
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %87, label %5, !llvm.loop !478

42:                                               ; preds = %87
  %43 = tail call i64 @clock() #16
  %44 = sub nsw i64 %43, %2
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.314, i64 0, i64 0), double %46)
  br label %48

48:                                               ; preds = %48, %42
  %49 = phi i64 [ 0, %42 ], [ %82, %48 ]
  %50 = phi float [ 0.000000e+00, %42 ], [ %81, %48 ]
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %52 = load float, float* %51, align 16, !tbaa !2
  %53 = fadd float %50, %52
  %54 = or i64 %49, 1
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !2
  %57 = fadd float %53, %56
  %58 = or i64 %49, 2
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = load float, float* %59, align 8, !tbaa !2
  %61 = fadd float %57, %60
  %62 = or i64 %49, 3
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %61, %64
  %66 = or i64 %49, 4
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 16, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %49, 5
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %49, 6
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 8, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %49, 7
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %77, %80
  %82 = add nuw nsw i64 %49, 8
  %83 = icmp eq i64 %82, 32000
  br i1 %83, label %84, label %48

84:                                               ; preds = %48
  %85 = fpext float %81 to double
  %86 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %85) #16
  ret i32 0

87:                                               ; preds = %5
  %88 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %89 = add nuw nsw i32 %4, 1
  %90 = icmp eq i32 %89, 500000
  br i1 %90, label %42, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vtv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %87
  %4 = phi i32 [ 0, %0 ], [ %89, %87 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %40, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = bitcast float* %13 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 16, !tbaa !2
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 16, !tbaa !2
  %23 = or i64 %6, 8
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = getelementptr inbounds float, float* %24, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !2
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !2
  %33 = getelementptr inbounds float, float* %30, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 16, !tbaa !2
  %36 = fmul <4 x float> %26, %32
  %37 = fmul <4 x float> %29, %35
  %38 = bitcast float* %30 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 16, !tbaa !2
  %39 = bitcast float* %33 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 16, !tbaa !2
  %40 = add nuw nsw i64 %6, 16
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %87, label %5, !llvm.loop !479

42:                                               ; preds = %87
  %43 = tail call i64 @clock() #16
  %44 = sub nsw i64 %43, %2
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.315, i64 0, i64 0), double %46)
  br label %48

48:                                               ; preds = %48, %42
  %49 = phi i64 [ 0, %42 ], [ %82, %48 ]
  %50 = phi float [ 0.000000e+00, %42 ], [ %81, %48 ]
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %52 = load float, float* %51, align 16, !tbaa !2
  %53 = fadd float %50, %52
  %54 = or i64 %49, 1
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !2
  %57 = fadd float %53, %56
  %58 = or i64 %49, 2
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %60 = load float, float* %59, align 8, !tbaa !2
  %61 = fadd float %57, %60
  %62 = or i64 %49, 3
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4, !tbaa !2
  %65 = fadd float %61, %64
  %66 = or i64 %49, 4
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 16, !tbaa !2
  %69 = fadd float %65, %68
  %70 = or i64 %49, 5
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %49, 6
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 8, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %49, 7
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %77, %80
  %82 = add nuw nsw i64 %49, 8
  %83 = icmp eq i64 %82, 32000
  br i1 %83, label %84, label %48

84:                                               ; preds = %48
  %85 = fpext float %81 to double
  %86 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %85) #16
  ret i32 0

87:                                               ; preds = %5
  %88 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %89 = add nuw nsw i32 %4, 1
  %90 = icmp eq i32 %89, 500000
  br i1 %90, label %42, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vpvtv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %103
  %4 = phi i32 [ 0, %0 ], [ %105, %103 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %56, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !2
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !2
  %31 = or i64 %6, 8
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !2
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !2
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 16, !tbaa !2
  %41 = getelementptr inbounds float, float* %38, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %43 = load <4 x float>, <4 x float>* %42, align 16, !tbaa !2
  %44 = fmul <4 x float> %34, %40
  %45 = fmul <4 x float> %37, %43
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %47 = bitcast float* %46 to <4 x float>*
  %48 = load <4 x float>, <4 x float>* %47, align 16, !tbaa !2
  %49 = getelementptr inbounds float, float* %46, i64 4
  %50 = bitcast float* %49 to <4 x float>*
  %51 = load <4 x float>, <4 x float>* %50, align 16, !tbaa !2
  %52 = fadd <4 x float> %48, %44
  %53 = fadd <4 x float> %51, %45
  %54 = bitcast float* %46 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 16, !tbaa !2
  %55 = bitcast float* %49 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 16, !tbaa !2
  %56 = add nuw nsw i64 %6, 16
  %57 = icmp eq i64 %56, 32000
  br i1 %57, label %103, label %5, !llvm.loop !480

58:                                               ; preds = %103
  %59 = tail call i64 @clock() #16
  %60 = sub nsw i64 %59, %2
  %61 = sitofp i64 %60 to double
  %62 = fdiv double %61, 1.000000e+06
  %63 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.316, i64 0, i64 0), double %62)
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi i64 [ 0, %58 ], [ %98, %64 ]
  %66 = phi float [ 0.000000e+00, %58 ], [ %97, %64 ]
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %68 = load float, float* %67, align 16, !tbaa !2
  %69 = fadd float %66, %68
  %70 = or i64 %65, 1
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %65, 2
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 8, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %65, 3
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %77, %80
  %82 = or i64 %65, 4
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 16, !tbaa !2
  %85 = fadd float %81, %84
  %86 = or i64 %65, 5
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = fadd float %85, %88
  %90 = or i64 %65, 6
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %90
  %92 = load float, float* %91, align 8, !tbaa !2
  %93 = fadd float %89, %92
  %94 = or i64 %65, 7
  %95 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %94
  %96 = load float, float* %95, align 4, !tbaa !2
  %97 = fadd float %93, %96
  %98 = add nuw nsw i64 %65, 8
  %99 = icmp eq i64 %98, 32000
  br i1 %99, label %100, label %64

100:                                              ; preds = %64
  %101 = fpext float %97 to double
  %102 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %101) #16
  ret i32 0

103:                                              ; preds = %5
  %104 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %105 = add nuw nsw i32 %4, 1
  %106 = icmp eq i32 %105, 200000
  br i1 %106, label %58, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vpvts(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i64 0, i64 0))
  %3 = tail call i64 @clock() #16
  %4 = insertelement <4 x float> undef, float %0, i32 0
  %5 = shufflevector <4 x float> %4, <4 x float> undef, <4 x i32> zeroinitializer
  %6 = insertelement <4 x float> undef, float %0, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> undef, <4 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %1, %96
  %9 = phi i32 [ 0, %1 ], [ %98, %96 ]
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi i64 [ 0, %8 ], [ %49, %10 ]
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11
  %13 = bitcast float* %12 to <4 x float>*
  %14 = load <4 x float>, <4 x float>* %13, align 16, !tbaa !2
  %15 = getelementptr inbounds float, float* %12, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !2
  %18 = fmul <4 x float> %14, %5
  %19 = fmul <4 x float> %17, %7
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !2
  %23 = getelementptr inbounds float, float* %20, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 16, !tbaa !2
  %26 = fadd <4 x float> %22, %18
  %27 = fadd <4 x float> %25, %19
  %28 = bitcast float* %20 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 16, !tbaa !2
  %29 = bitcast float* %23 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !2
  %30 = or i64 %11, 8
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  %32 = bitcast float* %31 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 16, !tbaa !2
  %34 = getelementptr inbounds float, float* %31, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 16, !tbaa !2
  %37 = fmul <4 x float> %33, %5
  %38 = fmul <4 x float> %36, %7
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %40 = bitcast float* %39 to <4 x float>*
  %41 = load <4 x float>, <4 x float>* %40, align 16, !tbaa !2
  %42 = getelementptr inbounds float, float* %39, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %44 = load <4 x float>, <4 x float>* %43, align 16, !tbaa !2
  %45 = fadd <4 x float> %41, %37
  %46 = fadd <4 x float> %44, %38
  %47 = bitcast float* %39 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 16, !tbaa !2
  %48 = bitcast float* %42 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 16, !tbaa !2
  %49 = add nuw nsw i64 %11, 16
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %96, label %10, !llvm.loop !481

51:                                               ; preds = %96
  %52 = tail call i64 @clock() #16
  %53 = sub nsw i64 %52, %3
  %54 = sitofp i64 %53 to double
  %55 = fdiv double %54, 1.000000e+06
  %56 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.317, i64 0, i64 0), double %55)
  br label %57

57:                                               ; preds = %57, %51
  %58 = phi i64 [ 0, %51 ], [ %91, %57 ]
  %59 = phi float [ 0.000000e+00, %51 ], [ %90, %57 ]
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  %61 = load float, float* %60, align 16, !tbaa !2
  %62 = fadd float %59, %61
  %63 = or i64 %58, 1
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !2
  %66 = fadd float %62, %65
  %67 = or i64 %58, 2
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 8, !tbaa !2
  %70 = fadd float %66, %69
  %71 = or i64 %58, 3
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !2
  %74 = fadd float %70, %73
  %75 = or i64 %58, 4
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %75
  %77 = load float, float* %76, align 16, !tbaa !2
  %78 = fadd float %74, %77
  %79 = or i64 %58, 5
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 4, !tbaa !2
  %82 = fadd float %78, %81
  %83 = or i64 %58, 6
  %84 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %83
  %85 = load float, float* %84, align 8, !tbaa !2
  %86 = fadd float %82, %85
  %87 = or i64 %58, 7
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %87
  %89 = load float, float* %88, align 4, !tbaa !2
  %90 = fadd float %86, %89
  %91 = add nuw nsw i64 %58, 8
  %92 = icmp eq i64 %91, 32000
  br i1 %92, label %93, label %57

93:                                               ; preds = %57
  %94 = fpext float %90 to double
  %95 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %94) #16
  ret i32 0

96:                                               ; preds = %10
  %97 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %98 = add nuw nsw i32 %9, 1
  %99 = icmp eq i32 %98, 50000
  br i1 %99, label %51, label %8
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vpvpv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %103
  %4 = phi i32 [ 0, %0 ], [ %105, %103 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %56, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fadd <4 x float> %9, %15
  %20 = fadd <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !2
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !2
  %31 = or i64 %6, 8
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !2
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !2
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 16, !tbaa !2
  %41 = getelementptr inbounds float, float* %38, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %43 = load <4 x float>, <4 x float>* %42, align 16, !tbaa !2
  %44 = fadd <4 x float> %34, %40
  %45 = fadd <4 x float> %37, %43
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %47 = bitcast float* %46 to <4 x float>*
  %48 = load <4 x float>, <4 x float>* %47, align 16, !tbaa !2
  %49 = getelementptr inbounds float, float* %46, i64 4
  %50 = bitcast float* %49 to <4 x float>*
  %51 = load <4 x float>, <4 x float>* %50, align 16, !tbaa !2
  %52 = fadd <4 x float> %48, %44
  %53 = fadd <4 x float> %51, %45
  %54 = bitcast float* %46 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 16, !tbaa !2
  %55 = bitcast float* %49 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 16, !tbaa !2
  %56 = add nuw nsw i64 %6, 16
  %57 = icmp eq i64 %56, 32000
  br i1 %57, label %103, label %5, !llvm.loop !482

58:                                               ; preds = %103
  %59 = tail call i64 @clock() #16
  %60 = sub nsw i64 %59, %2
  %61 = sitofp i64 %60 to double
  %62 = fdiv double %61, 1.000000e+06
  %63 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.318, i64 0, i64 0), double %62)
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi i64 [ 0, %58 ], [ %98, %64 ]
  %66 = phi float [ 0.000000e+00, %58 ], [ %97, %64 ]
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %68 = load float, float* %67, align 16, !tbaa !2
  %69 = fadd float %66, %68
  %70 = or i64 %65, 1
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %65, 2
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 8, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %65, 3
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %77, %80
  %82 = or i64 %65, 4
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 16, !tbaa !2
  %85 = fadd float %81, %84
  %86 = or i64 %65, 5
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = fadd float %85, %88
  %90 = or i64 %65, 6
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %90
  %92 = load float, float* %91, align 8, !tbaa !2
  %93 = fadd float %89, %92
  %94 = or i64 %65, 7
  %95 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %94
  %96 = load float, float* %95, align 4, !tbaa !2
  %97 = fadd float %93, %96
  %98 = add nuw nsw i64 %65, 8
  %99 = icmp eq i64 %98, 32000
  br i1 %99, label %100, label %64

100:                                              ; preds = %64
  %101 = fpext float %97 to double
  %102 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %101) #16
  ret i32 0

103:                                              ; preds = %5
  %104 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %105 = add nuw nsw i32 %4, 1
  %106 = icmp eq i32 %105, 200000
  br i1 %106, label %58, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vtvtv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %103
  %4 = phi i32 [ 0, %0 ], [ %105, %103 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %56, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !2
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !2
  %27 = fmul <4 x float> %19, %23
  %28 = fmul <4 x float> %20, %26
  %29 = bitcast float* %7 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !2
  %30 = bitcast float* %10 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !2
  %31 = or i64 %6, 8
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !2
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !2
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 16, !tbaa !2
  %41 = getelementptr inbounds float, float* %38, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %43 = load <4 x float>, <4 x float>* %42, align 16, !tbaa !2
  %44 = fmul <4 x float> %34, %40
  %45 = fmul <4 x float> %37, %43
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %47 = bitcast float* %46 to <4 x float>*
  %48 = load <4 x float>, <4 x float>* %47, align 16, !tbaa !2
  %49 = getelementptr inbounds float, float* %46, i64 4
  %50 = bitcast float* %49 to <4 x float>*
  %51 = load <4 x float>, <4 x float>* %50, align 16, !tbaa !2
  %52 = fmul <4 x float> %44, %48
  %53 = fmul <4 x float> %45, %51
  %54 = bitcast float* %32 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 16, !tbaa !2
  %55 = bitcast float* %35 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 16, !tbaa !2
  %56 = add nuw nsw i64 %6, 16
  %57 = icmp eq i64 %56, 32000
  br i1 %57, label %103, label %5, !llvm.loop !483

58:                                               ; preds = %103
  %59 = tail call i64 @clock() #16
  %60 = sub nsw i64 %59, %2
  %61 = sitofp i64 %60 to double
  %62 = fdiv double %61, 1.000000e+06
  %63 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.319, i64 0, i64 0), double %62)
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi i64 [ 0, %58 ], [ %98, %64 ]
  %66 = phi float [ 0.000000e+00, %58 ], [ %97, %64 ]
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %68 = load float, float* %67, align 16, !tbaa !2
  %69 = fadd float %66, %68
  %70 = or i64 %65, 1
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !2
  %73 = fadd float %69, %72
  %74 = or i64 %65, 2
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 8, !tbaa !2
  %77 = fadd float %73, %76
  %78 = or i64 %65, 3
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %78
  %80 = load float, float* %79, align 4, !tbaa !2
  %81 = fadd float %77, %80
  %82 = or i64 %65, 4
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 16, !tbaa !2
  %85 = fadd float %81, %84
  %86 = or i64 %65, 5
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !2
  %89 = fadd float %85, %88
  %90 = or i64 %65, 6
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %90
  %92 = load float, float* %91, align 8, !tbaa !2
  %93 = fadd float %89, %92
  %94 = or i64 %65, 7
  %95 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %94
  %96 = load float, float* %95, align 4, !tbaa !2
  %97 = fadd float %93, %96
  %98 = add nuw nsw i64 %65, 8
  %99 = icmp eq i64 %98, 32000
  br i1 %99, label %100, label %64

100:                                              ; preds = %64
  %101 = fpext float %97 to double
  %102 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %101) #16
  ret i32 0

103:                                              ; preds = %5
  %104 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %105 = add nuw nsw i32 %4, 1
  %106 = icmp eq i32 %105, 200000
  br i1 %106, label %58, label %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vsumr() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %54

5:                                                ; preds = %50
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.320, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %44, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 16, !tbaa !2
  %16 = fadd float %13, %15
  %17 = or i64 %12, 1
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !2
  %20 = fadd float %16, %19
  %21 = or i64 %12, 2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 8, !tbaa !2
  %24 = fadd float %20, %23
  %25 = or i64 %12, 3
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !2
  %28 = fadd float %24, %27
  %29 = or i64 %12, 4
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 16, !tbaa !2
  %32 = fadd float %28, %31
  %33 = or i64 %12, 5
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = fadd float %32, %35
  %37 = or i64 %12, 6
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !2
  %40 = fadd float %36, %39
  %41 = or i64 %12, 7
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !2
  %44 = fadd float %40, %43
  %45 = add nuw nsw i64 %12, 8
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %11

47:                                               ; preds = %11
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #16
  ret i32 0

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %87) #16
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 500000
  br i1 %53, label %5, label %3

54:                                               ; preds = %54, %3
  %55 = phi i64 [ 0, %3 ], [ %88, %54 ]
  %56 = phi float [ 0.000000e+00, %3 ], [ %87, %54 ]
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %58 = load float, float* %57, align 16, !tbaa !2
  %59 = fadd float %56, %58
  %60 = or i64 %55, 1
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  %62 = load float, float* %61, align 4, !tbaa !2
  %63 = fadd float %59, %62
  %64 = or i64 %55, 2
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %64
  %66 = load float, float* %65, align 8, !tbaa !2
  %67 = fadd float %63, %66
  %68 = or i64 %55, 3
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  %70 = load float, float* %69, align 4, !tbaa !2
  %71 = fadd float %67, %70
  %72 = or i64 %55, 4
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %72
  %74 = load float, float* %73, align 16, !tbaa !2
  %75 = fadd float %71, %74
  %76 = or i64 %55, 5
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !2
  %79 = fadd float %75, %78
  %80 = or i64 %55, 6
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %80
  %82 = load float, float* %81, align 8, !tbaa !2
  %83 = fadd float %79, %82
  %84 = or i64 %55, 7
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %86 = load float, float* %85, align 4, !tbaa !2
  %87 = fadd float %83, %86
  %88 = add nuw nsw i64 %55, 8
  %89 = icmp eq i64 %88, 32000
  br i1 %89, label %50, label %54
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vdotr() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %13, %0
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @clock() #16
  %7 = sub nsw i64 %6, %2
  %8 = sitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.321, i64 0, i64 0), double %9)
  store float %53, float* @temp, align 4, !tbaa !2
  %11 = fpext float %53 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #16
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %53) #16
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 500000
  br i1 %16, label %5, label %3

17:                                               ; preds = %17, %3
  %18 = phi i64 [ 0, %3 ], [ %54, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %53, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !2
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %23 = load float, float* %22, align 4, !tbaa !2
  %24 = fmul float %21, %23
  %25 = fadd float %19, %24
  %26 = add nuw nsw i64 %18, 1
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !2
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %30 = load float, float* %29, align 4, !tbaa !2
  %31 = fmul float %28, %30
  %32 = fadd float %25, %31
  %33 = add nuw nsw i64 %18, 2
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !2
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %33
  %37 = load float, float* %36, align 4, !tbaa !2
  %38 = fmul float %35, %37
  %39 = fadd float %32, %38
  %40 = add nuw nsw i64 %18, 3
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !2
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  %44 = load float, float* %43, align 4, !tbaa !2
  %45 = fmul float %42, %44
  %46 = fadd float %39, %45
  %47 = add nuw nsw i64 %18, 4
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 4, !tbaa !2
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %51 = load float, float* %50, align 4, !tbaa !2
  %52 = fmul float %49, %51
  %53 = fadd float %46, %52
  %54 = add nuw nsw i64 %18, 5
  %55 = icmp eq i64 %54, 32000
  br i1 %55, label %13, label %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vbor() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i64 0, i64 0))
  %2 = tail call i64 @clock() #16
  br label %3

3:                                                ; preds = %0, %84
  %4 = phi i32 [ 0, %0 ], [ %86, %84 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %76, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !2
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !2
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !2
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !2
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !2
  %22 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !2
  %25 = fmul <4 x float> %9, %12
  %26 = fmul <4 x float> %25, %15
  %27 = fmul <4 x float> %25, %18
  %28 = fadd <4 x float> %26, %27
  %29 = fmul <4 x float> %25, %21
  %30 = fadd <4 x float> %28, %29
  %31 = fmul <4 x float> %25, %24
  %32 = fadd <4 x float> %30, %31
  %33 = fmul <4 x float> %9, %15
  %34 = fmul <4 x float> %33, %18
  %35 = fadd <4 x float> %34, %32
  %36 = fmul <4 x float> %33, %21
  %37 = fadd <4 x float> %36, %35
  %38 = fmul <4 x float> %33, %24
  %39 = fadd <4 x float> %38, %37
  %40 = fmul <4 x float> %9, %18
  %41 = fmul <4 x float> %40, %21
  %42 = fadd <4 x float> %41, %39
  %43 = fmul <4 x float> %40, %24
  %44 = fadd <4 x float> %43, %42
  %45 = fmul <4 x float> %9, %21
  %46 = fmul <4 x float> %45, %24
  %47 = fadd <4 x float> %46, %44
  %48 = fmul <4 x float> %12, %15
  %49 = fmul <4 x float> %48, %18
  %50 = fmul <4 x float> %48, %21
  %51 = fadd <4 x float> %49, %50
  %52 = fmul <4 x float> %48, %24
  %53 = fadd <4 x float> %51, %52
  %54 = fmul <4 x float> %12, %18
  %55 = fmul <4 x float> %54, %21
  %56 = fadd <4 x float> %55, %53
  %57 = fmul <4 x float> %54, %24
  %58 = fadd <4 x float> %57, %56
  %59 = fmul <4 x float> %12, %21
  %60 = fmul <4 x float> %59, %24
  %61 = fadd <4 x float> %60, %58
  %62 = fmul <4 x float> %15, %18
  %63 = fmul <4 x float> %62, %21
  %64 = fmul <4 x float> %62, %24
  %65 = fadd <4 x float> %63, %64
  %66 = fmul <4 x float> %15, %21
  %67 = fmul <4 x float> %66, %24
  %68 = fadd <4 x float> %67, %65
  %69 = fmul <4 x float> %18, %21
  %70 = fmul <4 x float> %69, %24
  %71 = fmul <4 x float> %61, %47
  %72 = fmul <4 x float> %68, %71
  %73 = fmul <4 x float> %70, %72
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %6
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> %73, <4 x float>* %75, align 16, !tbaa !2
  %76 = add i64 %6, 4
  %77 = icmp eq i64 %76, 256
  br i1 %77, label %84, label %5, !llvm.loop !484

78:                                               ; preds = %84
  %79 = tail call i64 @clock() #16
  %80 = sub nsw i64 %79, %2
  %81 = sitofp i64 %80 to double
  %82 = fdiv double %81, 1.000000e+06
  %83 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.322, i64 0, i64 0), double %82)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !2
  br label %91

84:                                               ; preds = %5
  %85 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #16
  %86 = add nuw nsw i32 %4, 1
  %87 = icmp eq i32 %86, 500000
  br i1 %87, label %78, label %3

88:                                               ; preds = %91
  store float %124, float* @temp, align 4, !tbaa !2
  %89 = fpext float %124 to double
  %90 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %89) #16
  ret i32 0

91:                                               ; preds = %91, %78
  %92 = phi i64 [ 0, %78 ], [ %125, %91 ]
  %93 = phi float [ 0.000000e+00, %78 ], [ %124, %91 ]
  %94 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %92
  %95 = load float, float* %94, align 16, !tbaa !2
  %96 = fadd float %95, %93
  %97 = or i64 %92, 1
  %98 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %97
  %99 = load float, float* %98, align 4, !tbaa !2
  %100 = fadd float %99, %96
  %101 = or i64 %92, 2
  %102 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %101
  %103 = load float, float* %102, align 8, !tbaa !2
  %104 = fadd float %103, %100
  %105 = or i64 %92, 3
  %106 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %105
  %107 = load float, float* %106, align 4, !tbaa !2
  %108 = fadd float %107, %104
  %109 = or i64 %92, 4
  %110 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %109
  %111 = load float, float* %110, align 16, !tbaa !2
  %112 = fadd float %111, %108
  %113 = or i64 %92, 5
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %113
  %115 = load float, float* %114, align 4, !tbaa !2
  %116 = fadd float %115, %112
  %117 = or i64 %92, 6
  %118 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %117
  %119 = load float, float* %118, align 8, !tbaa !2
  %120 = fadd float %119, %116
  %121 = or i64 %92, 7
  %122 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %121
  %123 = load float, float* %122, align 4, !tbaa !2
  %124 = fadd float %123, %120
  %125 = add nuw nsw i64 %92, 8
  %126 = icmp eq i64 %125, 32000
  br i1 %126, label %88, label %91
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @set(i32* nocapture %0, float* nocapture %1, float* nocapture %2) local_unnamed_addr #4 {
  %4 = tail call noalias dereferenceable_or_null(128000) i8* @malloc(i64 128000) #16
  store i8* %4, i8** bitcast (float** @xx to i8**), align 8, !tbaa !417
  %5 = tail call i32 @putchar(i32 10)
  br label %627

6:                                                ; preds = %645, %6
  %7 = phi i64 [ %47, %6 ], [ 0, %645 ]
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9, align 16, !tbaa !2
  %10 = getelementptr inbounds float, float* %8, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11, align 16, !tbaa !2
  %12 = or i64 %7, 8
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %14 = bitcast float* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %14, align 16, !tbaa !2
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %16, align 16, !tbaa !2
  %17 = or i64 %7, 16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %17
  %19 = bitcast float* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %19, align 16, !tbaa !2
  %20 = getelementptr inbounds float, float* %18, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %21, align 16, !tbaa !2
  %22 = or i64 %7, 24
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %24, align 16, !tbaa !2
  %25 = getelementptr inbounds float, float* %23, i64 4
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %26, align 16, !tbaa !2
  %27 = or i64 %7, 32
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %29, align 16, !tbaa !2
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %31, align 16, !tbaa !2
  %32 = or i64 %7, 40
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %34, align 16, !tbaa !2
  %35 = getelementptr inbounds float, float* %33, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %36, align 16, !tbaa !2
  %37 = or i64 %7, 48
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %39, align 16, !tbaa !2
  %40 = getelementptr inbounds float, float* %38, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %41, align 16, !tbaa !2
  %42 = or i64 %7, 56
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %44, align 16, !tbaa !2
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %46, align 16, !tbaa !2
  %47 = add nuw nsw i64 %7, 64
  %48 = icmp eq i64 %47, 32000
  br i1 %48, label %49, label %6, !llvm.loop !485

49:                                               ; preds = %6, %49
  %50 = phi i64 [ %90, %49 ], [ 0, %6 ]
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %50
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %52, align 16, !tbaa !2
  %53 = getelementptr inbounds float, float* %51, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %54, align 16, !tbaa !2
  %55 = or i64 %50, 8
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %57, align 16, !tbaa !2
  %58 = getelementptr inbounds float, float* %56, i64 4
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %59, align 16, !tbaa !2
  %60 = or i64 %50, 16
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %62, align 16, !tbaa !2
  %63 = getelementptr inbounds float, float* %61, i64 4
  %64 = bitcast float* %63 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %64, align 16, !tbaa !2
  %65 = or i64 %50, 24
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %65
  %67 = bitcast float* %66 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %67, align 16, !tbaa !2
  %68 = getelementptr inbounds float, float* %66, i64 4
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %69, align 16, !tbaa !2
  %70 = or i64 %50, 32
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %70
  %72 = bitcast float* %71 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %72, align 16, !tbaa !2
  %73 = getelementptr inbounds float, float* %71, i64 4
  %74 = bitcast float* %73 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %74, align 16, !tbaa !2
  %75 = or i64 %50, 40
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %75
  %77 = bitcast float* %76 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %77, align 16, !tbaa !2
  %78 = getelementptr inbounds float, float* %76, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %79, align 16, !tbaa !2
  %80 = or i64 %50, 48
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %80
  %82 = bitcast float* %81 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %82, align 16, !tbaa !2
  %83 = getelementptr inbounds float, float* %81, i64 4
  %84 = bitcast float* %83 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %84, align 16, !tbaa !2
  %85 = or i64 %50, 56
  %86 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %85
  %87 = bitcast float* %86 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %87, align 16, !tbaa !2
  %88 = getelementptr inbounds float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %89, align 16, !tbaa !2
  %90 = add nuw nsw i64 %50, 64
  %91 = icmp eq i64 %90, 32000
  br i1 %91, label %92, label %49, !llvm.loop !486

92:                                               ; preds = %49, %92
  %93 = phi i64 [ %133, %92 ], [ 0, %49 ]
  %94 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %93
  %95 = bitcast float* %94 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %95, align 16, !tbaa !2
  %96 = getelementptr inbounds float, float* %94, i64 4
  %97 = bitcast float* %96 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %97, align 16, !tbaa !2
  %98 = or i64 %93, 8
  %99 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %98
  %100 = bitcast float* %99 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %100, align 16, !tbaa !2
  %101 = getelementptr inbounds float, float* %99, i64 4
  %102 = bitcast float* %101 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %102, align 16, !tbaa !2
  %103 = or i64 %93, 16
  %104 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %103
  %105 = bitcast float* %104 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %105, align 16, !tbaa !2
  %106 = getelementptr inbounds float, float* %104, i64 4
  %107 = bitcast float* %106 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %107, align 16, !tbaa !2
  %108 = or i64 %93, 24
  %109 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %108
  %110 = bitcast float* %109 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %110, align 16, !tbaa !2
  %111 = getelementptr inbounds float, float* %109, i64 4
  %112 = bitcast float* %111 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %112, align 16, !tbaa !2
  %113 = or i64 %93, 32
  %114 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %113
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %115, align 16, !tbaa !2
  %116 = getelementptr inbounds float, float* %114, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %117, align 16, !tbaa !2
  %118 = or i64 %93, 40
  %119 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %118
  %120 = bitcast float* %119 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %120, align 16, !tbaa !2
  %121 = getelementptr inbounds float, float* %119, i64 4
  %122 = bitcast float* %121 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %122, align 16, !tbaa !2
  %123 = or i64 %93, 48
  %124 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %123
  %125 = bitcast float* %124 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %125, align 16, !tbaa !2
  %126 = getelementptr inbounds float, float* %124, i64 4
  %127 = bitcast float* %126 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %127, align 16, !tbaa !2
  %128 = or i64 %93, 56
  %129 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %128
  %130 = bitcast float* %129 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %130, align 16, !tbaa !2
  %131 = getelementptr inbounds float, float* %129, i64 4
  %132 = bitcast float* %131 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %132, align 16, !tbaa !2
  %133 = add nuw nsw i64 %93, 64
  %134 = icmp eq i64 %133, 32000
  br i1 %134, label %135, label %92, !llvm.loop !487

135:                                              ; preds = %92, %135
  %136 = phi i64 [ %176, %135 ], [ 0, %92 ]
  %137 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %136
  %138 = bitcast float* %137 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %138, align 16, !tbaa !2
  %139 = getelementptr inbounds float, float* %137, i64 4
  %140 = bitcast float* %139 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %140, align 16, !tbaa !2
  %141 = or i64 %136, 8
  %142 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %141
  %143 = bitcast float* %142 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %143, align 16, !tbaa !2
  %144 = getelementptr inbounds float, float* %142, i64 4
  %145 = bitcast float* %144 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %145, align 16, !tbaa !2
  %146 = or i64 %136, 16
  %147 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %146
  %148 = bitcast float* %147 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %148, align 16, !tbaa !2
  %149 = getelementptr inbounds float, float* %147, i64 4
  %150 = bitcast float* %149 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %150, align 16, !tbaa !2
  %151 = or i64 %136, 24
  %152 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %151
  %153 = bitcast float* %152 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %153, align 16, !tbaa !2
  %154 = getelementptr inbounds float, float* %152, i64 4
  %155 = bitcast float* %154 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %155, align 16, !tbaa !2
  %156 = or i64 %136, 32
  %157 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %156
  %158 = bitcast float* %157 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %158, align 16, !tbaa !2
  %159 = getelementptr inbounds float, float* %157, i64 4
  %160 = bitcast float* %159 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %160, align 16, !tbaa !2
  %161 = or i64 %136, 40
  %162 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %161
  %163 = bitcast float* %162 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %163, align 16, !tbaa !2
  %164 = getelementptr inbounds float, float* %162, i64 4
  %165 = bitcast float* %164 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %165, align 16, !tbaa !2
  %166 = or i64 %136, 48
  %167 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %166
  %168 = bitcast float* %167 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %168, align 16, !tbaa !2
  %169 = getelementptr inbounds float, float* %167, i64 4
  %170 = bitcast float* %169 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %170, align 16, !tbaa !2
  %171 = or i64 %136, 56
  %172 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %171
  %173 = bitcast float* %172 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %173, align 16, !tbaa !2
  %174 = getelementptr inbounds float, float* %172, i64 4
  %175 = bitcast float* %174 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %175, align 16, !tbaa !2
  %176 = add nuw nsw i64 %136, 64
  %177 = icmp eq i64 %176, 32000
  br i1 %177, label %178, label %135, !llvm.loop !488

178:                                              ; preds = %135, %178
  %179 = phi i64 [ %180, %178 ], [ 0, %135 ]
  %180 = add nuw nsw i64 %179, 1
  %181 = trunc i64 %180 to i32
  %182 = sitofp i32 %181 to float
  %183 = fdiv float 1.000000e+00, %182
  %184 = insertelement <4 x float> undef, float %183, i32 0
  %185 = shufflevector <4 x float> %184, <4 x float> undef, <4 x i32> zeroinitializer
  %186 = insertelement <4 x float> undef, float %183, i32 0
  %187 = shufflevector <4 x float> %186, <4 x float> undef, <4 x i32> zeroinitializer
  %188 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 0
  %189 = bitcast float* %188 to <4 x float>*
  store <4 x float> %185, <4 x float>* %189, align 16, !tbaa !2
  %190 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 4
  %191 = bitcast float* %190 to <4 x float>*
  store <4 x float> %187, <4 x float>* %191, align 16, !tbaa !2
  %192 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 8
  %193 = bitcast float* %192 to <4 x float>*
  store <4 x float> %185, <4 x float>* %193, align 16, !tbaa !2
  %194 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 12
  %195 = bitcast float* %194 to <4 x float>*
  store <4 x float> %187, <4 x float>* %195, align 16, !tbaa !2
  %196 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 16
  %197 = bitcast float* %196 to <4 x float>*
  store <4 x float> %185, <4 x float>* %197, align 16, !tbaa !2
  %198 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 20
  %199 = bitcast float* %198 to <4 x float>*
  store <4 x float> %187, <4 x float>* %199, align 16, !tbaa !2
  %200 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 24
  %201 = bitcast float* %200 to <4 x float>*
  store <4 x float> %185, <4 x float>* %201, align 16, !tbaa !2
  %202 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 28
  %203 = bitcast float* %202 to <4 x float>*
  store <4 x float> %187, <4 x float>* %203, align 16, !tbaa !2
  %204 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 32
  %205 = bitcast float* %204 to <4 x float>*
  store <4 x float> %185, <4 x float>* %205, align 16, !tbaa !2
  %206 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 36
  %207 = bitcast float* %206 to <4 x float>*
  store <4 x float> %187, <4 x float>* %207, align 16, !tbaa !2
  %208 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 40
  %209 = bitcast float* %208 to <4 x float>*
  store <4 x float> %185, <4 x float>* %209, align 16, !tbaa !2
  %210 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 44
  %211 = bitcast float* %210 to <4 x float>*
  store <4 x float> %187, <4 x float>* %211, align 16, !tbaa !2
  %212 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 48
  %213 = bitcast float* %212 to <4 x float>*
  store <4 x float> %185, <4 x float>* %213, align 16, !tbaa !2
  %214 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 52
  %215 = bitcast float* %214 to <4 x float>*
  store <4 x float> %187, <4 x float>* %215, align 16, !tbaa !2
  %216 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 56
  %217 = bitcast float* %216 to <4 x float>*
  store <4 x float> %185, <4 x float>* %217, align 16, !tbaa !2
  %218 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 60
  %219 = bitcast float* %218 to <4 x float>*
  store <4 x float> %187, <4 x float>* %219, align 16, !tbaa !2
  %220 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 64
  %221 = bitcast float* %220 to <4 x float>*
  store <4 x float> %185, <4 x float>* %221, align 16, !tbaa !2
  %222 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 68
  %223 = bitcast float* %222 to <4 x float>*
  store <4 x float> %187, <4 x float>* %223, align 16, !tbaa !2
  %224 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 72
  %225 = bitcast float* %224 to <4 x float>*
  store <4 x float> %185, <4 x float>* %225, align 16, !tbaa !2
  %226 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 76
  %227 = bitcast float* %226 to <4 x float>*
  store <4 x float> %187, <4 x float>* %227, align 16, !tbaa !2
  %228 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 80
  %229 = bitcast float* %228 to <4 x float>*
  store <4 x float> %185, <4 x float>* %229, align 16, !tbaa !2
  %230 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 84
  %231 = bitcast float* %230 to <4 x float>*
  store <4 x float> %187, <4 x float>* %231, align 16, !tbaa !2
  %232 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 88
  %233 = bitcast float* %232 to <4 x float>*
  store <4 x float> %185, <4 x float>* %233, align 16, !tbaa !2
  %234 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 92
  %235 = bitcast float* %234 to <4 x float>*
  store <4 x float> %187, <4 x float>* %235, align 16, !tbaa !2
  %236 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 96
  %237 = bitcast float* %236 to <4 x float>*
  store <4 x float> %185, <4 x float>* %237, align 16, !tbaa !2
  %238 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 100
  %239 = bitcast float* %238 to <4 x float>*
  store <4 x float> %187, <4 x float>* %239, align 16, !tbaa !2
  %240 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 104
  %241 = bitcast float* %240 to <4 x float>*
  store <4 x float> %185, <4 x float>* %241, align 16, !tbaa !2
  %242 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 108
  %243 = bitcast float* %242 to <4 x float>*
  store <4 x float> %187, <4 x float>* %243, align 16, !tbaa !2
  %244 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 112
  %245 = bitcast float* %244 to <4 x float>*
  store <4 x float> %185, <4 x float>* %245, align 16, !tbaa !2
  %246 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 116
  %247 = bitcast float* %246 to <4 x float>*
  store <4 x float> %187, <4 x float>* %247, align 16, !tbaa !2
  %248 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 120
  %249 = bitcast float* %248 to <4 x float>*
  store <4 x float> %185, <4 x float>* %249, align 16, !tbaa !2
  %250 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 124
  %251 = bitcast float* %250 to <4 x float>*
  store <4 x float> %187, <4 x float>* %251, align 16, !tbaa !2
  %252 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 128
  %253 = bitcast float* %252 to <4 x float>*
  store <4 x float> %185, <4 x float>* %253, align 16, !tbaa !2
  %254 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 132
  %255 = bitcast float* %254 to <4 x float>*
  store <4 x float> %187, <4 x float>* %255, align 16, !tbaa !2
  %256 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 136
  %257 = bitcast float* %256 to <4 x float>*
  store <4 x float> %185, <4 x float>* %257, align 16, !tbaa !2
  %258 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 140
  %259 = bitcast float* %258 to <4 x float>*
  store <4 x float> %187, <4 x float>* %259, align 16, !tbaa !2
  %260 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 144
  %261 = bitcast float* %260 to <4 x float>*
  store <4 x float> %185, <4 x float>* %261, align 16, !tbaa !2
  %262 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 148
  %263 = bitcast float* %262 to <4 x float>*
  store <4 x float> %187, <4 x float>* %263, align 16, !tbaa !2
  %264 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 152
  %265 = bitcast float* %264 to <4 x float>*
  store <4 x float> %185, <4 x float>* %265, align 16, !tbaa !2
  %266 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 156
  %267 = bitcast float* %266 to <4 x float>*
  store <4 x float> %187, <4 x float>* %267, align 16, !tbaa !2
  %268 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 160
  %269 = bitcast float* %268 to <4 x float>*
  store <4 x float> %185, <4 x float>* %269, align 16, !tbaa !2
  %270 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 164
  %271 = bitcast float* %270 to <4 x float>*
  store <4 x float> %187, <4 x float>* %271, align 16, !tbaa !2
  %272 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 168
  %273 = bitcast float* %272 to <4 x float>*
  store <4 x float> %185, <4 x float>* %273, align 16, !tbaa !2
  %274 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 172
  %275 = bitcast float* %274 to <4 x float>*
  store <4 x float> %187, <4 x float>* %275, align 16, !tbaa !2
  %276 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 176
  %277 = bitcast float* %276 to <4 x float>*
  store <4 x float> %185, <4 x float>* %277, align 16, !tbaa !2
  %278 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 180
  %279 = bitcast float* %278 to <4 x float>*
  store <4 x float> %187, <4 x float>* %279, align 16, !tbaa !2
  %280 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 184
  %281 = bitcast float* %280 to <4 x float>*
  store <4 x float> %185, <4 x float>* %281, align 16, !tbaa !2
  %282 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 188
  %283 = bitcast float* %282 to <4 x float>*
  store <4 x float> %187, <4 x float>* %283, align 16, !tbaa !2
  %284 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 192
  %285 = bitcast float* %284 to <4 x float>*
  store <4 x float> %185, <4 x float>* %285, align 16, !tbaa !2
  %286 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 196
  %287 = bitcast float* %286 to <4 x float>*
  store <4 x float> %187, <4 x float>* %287, align 16, !tbaa !2
  %288 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 200
  %289 = bitcast float* %288 to <4 x float>*
  store <4 x float> %185, <4 x float>* %289, align 16, !tbaa !2
  %290 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 204
  %291 = bitcast float* %290 to <4 x float>*
  store <4 x float> %187, <4 x float>* %291, align 16, !tbaa !2
  %292 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 208
  %293 = bitcast float* %292 to <4 x float>*
  store <4 x float> %185, <4 x float>* %293, align 16, !tbaa !2
  %294 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 212
  %295 = bitcast float* %294 to <4 x float>*
  store <4 x float> %187, <4 x float>* %295, align 16, !tbaa !2
  %296 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 216
  %297 = bitcast float* %296 to <4 x float>*
  store <4 x float> %185, <4 x float>* %297, align 16, !tbaa !2
  %298 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 220
  %299 = bitcast float* %298 to <4 x float>*
  store <4 x float> %187, <4 x float>* %299, align 16, !tbaa !2
  %300 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 224
  %301 = bitcast float* %300 to <4 x float>*
  store <4 x float> %185, <4 x float>* %301, align 16, !tbaa !2
  %302 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 228
  %303 = bitcast float* %302 to <4 x float>*
  store <4 x float> %187, <4 x float>* %303, align 16, !tbaa !2
  %304 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 232
  %305 = bitcast float* %304 to <4 x float>*
  store <4 x float> %185, <4 x float>* %305, align 16, !tbaa !2
  %306 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 236
  %307 = bitcast float* %306 to <4 x float>*
  store <4 x float> %187, <4 x float>* %307, align 16, !tbaa !2
  %308 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 240
  %309 = bitcast float* %308 to <4 x float>*
  store <4 x float> %185, <4 x float>* %309, align 16, !tbaa !2
  %310 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 244
  %311 = bitcast float* %310 to <4 x float>*
  store <4 x float> %187, <4 x float>* %311, align 16, !tbaa !2
  %312 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 248
  %313 = bitcast float* %312 to <4 x float>*
  store <4 x float> %185, <4 x float>* %313, align 16, !tbaa !2
  %314 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %179, i64 252
  %315 = bitcast float* %314 to <4 x float>*
  store <4 x float> %187, <4 x float>* %315, align 16, !tbaa !2
  %316 = icmp eq i64 %180, 256
  br i1 %316, label %317, label %178

317:                                              ; preds = %178, %317
  %318 = phi i64 [ %319, %317 ], [ 0, %178 ]
  %319 = add nuw nsw i64 %318, 1
  %320 = trunc i64 %319 to i32
  %321 = sitofp i32 %320 to float
  %322 = fdiv float 1.000000e+00, %321
  %323 = insertelement <4 x float> undef, float %322, i32 0
  %324 = shufflevector <4 x float> %323, <4 x float> undef, <4 x i32> zeroinitializer
  %325 = insertelement <4 x float> undef, float %322, i32 0
  %326 = shufflevector <4 x float> %325, <4 x float> undef, <4 x i32> zeroinitializer
  %327 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 0
  %328 = bitcast float* %327 to <4 x float>*
  store <4 x float> %324, <4 x float>* %328, align 16, !tbaa !2
  %329 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 4
  %330 = bitcast float* %329 to <4 x float>*
  store <4 x float> %326, <4 x float>* %330, align 16, !tbaa !2
  %331 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 8
  %332 = bitcast float* %331 to <4 x float>*
  store <4 x float> %324, <4 x float>* %332, align 16, !tbaa !2
  %333 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 12
  %334 = bitcast float* %333 to <4 x float>*
  store <4 x float> %326, <4 x float>* %334, align 16, !tbaa !2
  %335 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 16
  %336 = bitcast float* %335 to <4 x float>*
  store <4 x float> %324, <4 x float>* %336, align 16, !tbaa !2
  %337 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 20
  %338 = bitcast float* %337 to <4 x float>*
  store <4 x float> %326, <4 x float>* %338, align 16, !tbaa !2
  %339 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 24
  %340 = bitcast float* %339 to <4 x float>*
  store <4 x float> %324, <4 x float>* %340, align 16, !tbaa !2
  %341 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 28
  %342 = bitcast float* %341 to <4 x float>*
  store <4 x float> %326, <4 x float>* %342, align 16, !tbaa !2
  %343 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 32
  %344 = bitcast float* %343 to <4 x float>*
  store <4 x float> %324, <4 x float>* %344, align 16, !tbaa !2
  %345 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 36
  %346 = bitcast float* %345 to <4 x float>*
  store <4 x float> %326, <4 x float>* %346, align 16, !tbaa !2
  %347 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 40
  %348 = bitcast float* %347 to <4 x float>*
  store <4 x float> %324, <4 x float>* %348, align 16, !tbaa !2
  %349 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 44
  %350 = bitcast float* %349 to <4 x float>*
  store <4 x float> %326, <4 x float>* %350, align 16, !tbaa !2
  %351 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 48
  %352 = bitcast float* %351 to <4 x float>*
  store <4 x float> %324, <4 x float>* %352, align 16, !tbaa !2
  %353 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 52
  %354 = bitcast float* %353 to <4 x float>*
  store <4 x float> %326, <4 x float>* %354, align 16, !tbaa !2
  %355 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 56
  %356 = bitcast float* %355 to <4 x float>*
  store <4 x float> %324, <4 x float>* %356, align 16, !tbaa !2
  %357 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 60
  %358 = bitcast float* %357 to <4 x float>*
  store <4 x float> %326, <4 x float>* %358, align 16, !tbaa !2
  %359 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 64
  %360 = bitcast float* %359 to <4 x float>*
  store <4 x float> %324, <4 x float>* %360, align 16, !tbaa !2
  %361 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 68
  %362 = bitcast float* %361 to <4 x float>*
  store <4 x float> %326, <4 x float>* %362, align 16, !tbaa !2
  %363 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 72
  %364 = bitcast float* %363 to <4 x float>*
  store <4 x float> %324, <4 x float>* %364, align 16, !tbaa !2
  %365 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 76
  %366 = bitcast float* %365 to <4 x float>*
  store <4 x float> %326, <4 x float>* %366, align 16, !tbaa !2
  %367 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 80
  %368 = bitcast float* %367 to <4 x float>*
  store <4 x float> %324, <4 x float>* %368, align 16, !tbaa !2
  %369 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 84
  %370 = bitcast float* %369 to <4 x float>*
  store <4 x float> %326, <4 x float>* %370, align 16, !tbaa !2
  %371 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 88
  %372 = bitcast float* %371 to <4 x float>*
  store <4 x float> %324, <4 x float>* %372, align 16, !tbaa !2
  %373 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 92
  %374 = bitcast float* %373 to <4 x float>*
  store <4 x float> %326, <4 x float>* %374, align 16, !tbaa !2
  %375 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 96
  %376 = bitcast float* %375 to <4 x float>*
  store <4 x float> %324, <4 x float>* %376, align 16, !tbaa !2
  %377 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 100
  %378 = bitcast float* %377 to <4 x float>*
  store <4 x float> %326, <4 x float>* %378, align 16, !tbaa !2
  %379 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 104
  %380 = bitcast float* %379 to <4 x float>*
  store <4 x float> %324, <4 x float>* %380, align 16, !tbaa !2
  %381 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 108
  %382 = bitcast float* %381 to <4 x float>*
  store <4 x float> %326, <4 x float>* %382, align 16, !tbaa !2
  %383 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 112
  %384 = bitcast float* %383 to <4 x float>*
  store <4 x float> %324, <4 x float>* %384, align 16, !tbaa !2
  %385 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 116
  %386 = bitcast float* %385 to <4 x float>*
  store <4 x float> %326, <4 x float>* %386, align 16, !tbaa !2
  %387 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 120
  %388 = bitcast float* %387 to <4 x float>*
  store <4 x float> %324, <4 x float>* %388, align 16, !tbaa !2
  %389 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 124
  %390 = bitcast float* %389 to <4 x float>*
  store <4 x float> %326, <4 x float>* %390, align 16, !tbaa !2
  %391 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 128
  %392 = bitcast float* %391 to <4 x float>*
  store <4 x float> %324, <4 x float>* %392, align 16, !tbaa !2
  %393 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 132
  %394 = bitcast float* %393 to <4 x float>*
  store <4 x float> %326, <4 x float>* %394, align 16, !tbaa !2
  %395 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 136
  %396 = bitcast float* %395 to <4 x float>*
  store <4 x float> %324, <4 x float>* %396, align 16, !tbaa !2
  %397 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 140
  %398 = bitcast float* %397 to <4 x float>*
  store <4 x float> %326, <4 x float>* %398, align 16, !tbaa !2
  %399 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 144
  %400 = bitcast float* %399 to <4 x float>*
  store <4 x float> %324, <4 x float>* %400, align 16, !tbaa !2
  %401 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 148
  %402 = bitcast float* %401 to <4 x float>*
  store <4 x float> %326, <4 x float>* %402, align 16, !tbaa !2
  %403 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 152
  %404 = bitcast float* %403 to <4 x float>*
  store <4 x float> %324, <4 x float>* %404, align 16, !tbaa !2
  %405 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 156
  %406 = bitcast float* %405 to <4 x float>*
  store <4 x float> %326, <4 x float>* %406, align 16, !tbaa !2
  %407 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 160
  %408 = bitcast float* %407 to <4 x float>*
  store <4 x float> %324, <4 x float>* %408, align 16, !tbaa !2
  %409 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 164
  %410 = bitcast float* %409 to <4 x float>*
  store <4 x float> %326, <4 x float>* %410, align 16, !tbaa !2
  %411 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 168
  %412 = bitcast float* %411 to <4 x float>*
  store <4 x float> %324, <4 x float>* %412, align 16, !tbaa !2
  %413 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 172
  %414 = bitcast float* %413 to <4 x float>*
  store <4 x float> %326, <4 x float>* %414, align 16, !tbaa !2
  %415 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 176
  %416 = bitcast float* %415 to <4 x float>*
  store <4 x float> %324, <4 x float>* %416, align 16, !tbaa !2
  %417 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 180
  %418 = bitcast float* %417 to <4 x float>*
  store <4 x float> %326, <4 x float>* %418, align 16, !tbaa !2
  %419 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 184
  %420 = bitcast float* %419 to <4 x float>*
  store <4 x float> %324, <4 x float>* %420, align 16, !tbaa !2
  %421 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 188
  %422 = bitcast float* %421 to <4 x float>*
  store <4 x float> %326, <4 x float>* %422, align 16, !tbaa !2
  %423 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 192
  %424 = bitcast float* %423 to <4 x float>*
  store <4 x float> %324, <4 x float>* %424, align 16, !tbaa !2
  %425 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 196
  %426 = bitcast float* %425 to <4 x float>*
  store <4 x float> %326, <4 x float>* %426, align 16, !tbaa !2
  %427 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 200
  %428 = bitcast float* %427 to <4 x float>*
  store <4 x float> %324, <4 x float>* %428, align 16, !tbaa !2
  %429 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 204
  %430 = bitcast float* %429 to <4 x float>*
  store <4 x float> %326, <4 x float>* %430, align 16, !tbaa !2
  %431 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 208
  %432 = bitcast float* %431 to <4 x float>*
  store <4 x float> %324, <4 x float>* %432, align 16, !tbaa !2
  %433 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 212
  %434 = bitcast float* %433 to <4 x float>*
  store <4 x float> %326, <4 x float>* %434, align 16, !tbaa !2
  %435 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 216
  %436 = bitcast float* %435 to <4 x float>*
  store <4 x float> %324, <4 x float>* %436, align 16, !tbaa !2
  %437 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 220
  %438 = bitcast float* %437 to <4 x float>*
  store <4 x float> %326, <4 x float>* %438, align 16, !tbaa !2
  %439 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 224
  %440 = bitcast float* %439 to <4 x float>*
  store <4 x float> %324, <4 x float>* %440, align 16, !tbaa !2
  %441 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 228
  %442 = bitcast float* %441 to <4 x float>*
  store <4 x float> %326, <4 x float>* %442, align 16, !tbaa !2
  %443 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 232
  %444 = bitcast float* %443 to <4 x float>*
  store <4 x float> %324, <4 x float>* %444, align 16, !tbaa !2
  %445 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 236
  %446 = bitcast float* %445 to <4 x float>*
  store <4 x float> %326, <4 x float>* %446, align 16, !tbaa !2
  %447 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 240
  %448 = bitcast float* %447 to <4 x float>*
  store <4 x float> %324, <4 x float>* %448, align 16, !tbaa !2
  %449 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 244
  %450 = bitcast float* %449 to <4 x float>*
  store <4 x float> %326, <4 x float>* %450, align 16, !tbaa !2
  %451 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 248
  %452 = bitcast float* %451 to <4 x float>*
  store <4 x float> %324, <4 x float>* %452, align 16, !tbaa !2
  %453 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %318, i64 252
  %454 = bitcast float* %453 to <4 x float>*
  store <4 x float> %326, <4 x float>* %454, align 16, !tbaa !2
  %455 = icmp eq i64 %319, 256
  br i1 %455, label %488, label %317

456:                                              ; preds = %488, %456
  %457 = phi i64 [ %485, %456 ], [ 0, %488 ]
  %458 = phi <4 x i64> [ %486, %456 ], [ <i64 0, i64 1, i64 2, i64 3>, %488 ]
  %459 = trunc <4 x i64> %458 to <4 x i32>
  %460 = add <4 x i32> %459, <i32 1, i32 1, i32 1, i32 1>
  %461 = trunc <4 x i64> %458 to <4 x i32>
  %462 = add <4 x i32> %461, <i32 1, i32 1, i32 1, i32 1>
  %463 = and <4 x i32> %460, <i32 3, i32 3, i32 3, i32 3>
  %464 = and <4 x i32> %462, <i32 3, i32 3, i32 3, i32 3>
  %465 = add nuw nsw <4 x i32> %463, <i32 1, i32 1, i32 1, i32 1>
  %466 = add nuw nsw <4 x i32> %464, <i32 1, i32 1, i32 1, i32 1>
  %467 = getelementptr inbounds [32000 x i32], [32000 x i32]* @indx, i64 0, i64 %457
  %468 = bitcast i32* %467 to <4 x i32>*
  store <4 x i32> %465, <4 x i32>* %468, align 16, !tbaa !415
  %469 = getelementptr inbounds i32, i32* %467, i64 4
  %470 = bitcast i32* %469 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %470, align 16, !tbaa !415
  %471 = or i64 %457, 8
  %472 = add <4 x i64> %458, <i64 8, i64 8, i64 8, i64 8>
  %473 = trunc <4 x i64> %472 to <4 x i32>
  %474 = add <4 x i32> %473, <i32 1, i32 1, i32 1, i32 1>
  %475 = trunc <4 x i64> %472 to <4 x i32>
  %476 = add <4 x i32> %475, <i32 1, i32 1, i32 1, i32 1>
  %477 = and <4 x i32> %474, <i32 3, i32 3, i32 3, i32 3>
  %478 = and <4 x i32> %476, <i32 3, i32 3, i32 3, i32 3>
  %479 = add nuw nsw <4 x i32> %477, <i32 1, i32 1, i32 1, i32 1>
  %480 = add nuw nsw <4 x i32> %478, <i32 1, i32 1, i32 1, i32 1>
  %481 = getelementptr inbounds [32000 x i32], [32000 x i32]* @indx, i64 0, i64 %471
  %482 = bitcast i32* %481 to <4 x i32>*
  store <4 x i32> %479, <4 x i32>* %482, align 16, !tbaa !415
  %483 = getelementptr inbounds i32, i32* %481, i64 4
  %484 = bitcast i32* %483 to <4 x i32>*
  store <4 x i32> %480, <4 x i32>* %484, align 16, !tbaa !415
  %485 = add nuw nsw i64 %457, 16
  %486 = add <4 x i64> %458, <i64 16, i64 16, i64 16, i64 16>
  %487 = icmp eq i64 %485, 32000
  br i1 %487, label %688, label %456, !llvm.loop !489

488:                                              ; preds = %317, %488
  %489 = phi i64 [ %490, %488 ], [ 0, %317 ]
  %490 = add nuw nsw i64 %489, 1
  %491 = trunc i64 %490 to i32
  %492 = sitofp i32 %491 to float
  %493 = fdiv float 1.000000e+00, %492
  %494 = insertelement <4 x float> undef, float %493, i32 0
  %495 = shufflevector <4 x float> %494, <4 x float> undef, <4 x i32> zeroinitializer
  %496 = insertelement <4 x float> undef, float %493, i32 0
  %497 = shufflevector <4 x float> %496, <4 x float> undef, <4 x i32> zeroinitializer
  %498 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 0
  %499 = bitcast float* %498 to <4 x float>*
  store <4 x float> %495, <4 x float>* %499, align 16, !tbaa !2
  %500 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 4
  %501 = bitcast float* %500 to <4 x float>*
  store <4 x float> %497, <4 x float>* %501, align 16, !tbaa !2
  %502 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 8
  %503 = bitcast float* %502 to <4 x float>*
  store <4 x float> %495, <4 x float>* %503, align 16, !tbaa !2
  %504 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 12
  %505 = bitcast float* %504 to <4 x float>*
  store <4 x float> %497, <4 x float>* %505, align 16, !tbaa !2
  %506 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 16
  %507 = bitcast float* %506 to <4 x float>*
  store <4 x float> %495, <4 x float>* %507, align 16, !tbaa !2
  %508 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 20
  %509 = bitcast float* %508 to <4 x float>*
  store <4 x float> %497, <4 x float>* %509, align 16, !tbaa !2
  %510 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 24
  %511 = bitcast float* %510 to <4 x float>*
  store <4 x float> %495, <4 x float>* %511, align 16, !tbaa !2
  %512 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 28
  %513 = bitcast float* %512 to <4 x float>*
  store <4 x float> %497, <4 x float>* %513, align 16, !tbaa !2
  %514 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 32
  %515 = bitcast float* %514 to <4 x float>*
  store <4 x float> %495, <4 x float>* %515, align 16, !tbaa !2
  %516 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 36
  %517 = bitcast float* %516 to <4 x float>*
  store <4 x float> %497, <4 x float>* %517, align 16, !tbaa !2
  %518 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 40
  %519 = bitcast float* %518 to <4 x float>*
  store <4 x float> %495, <4 x float>* %519, align 16, !tbaa !2
  %520 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 44
  %521 = bitcast float* %520 to <4 x float>*
  store <4 x float> %497, <4 x float>* %521, align 16, !tbaa !2
  %522 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 48
  %523 = bitcast float* %522 to <4 x float>*
  store <4 x float> %495, <4 x float>* %523, align 16, !tbaa !2
  %524 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 52
  %525 = bitcast float* %524 to <4 x float>*
  store <4 x float> %497, <4 x float>* %525, align 16, !tbaa !2
  %526 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 56
  %527 = bitcast float* %526 to <4 x float>*
  store <4 x float> %495, <4 x float>* %527, align 16, !tbaa !2
  %528 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 60
  %529 = bitcast float* %528 to <4 x float>*
  store <4 x float> %497, <4 x float>* %529, align 16, !tbaa !2
  %530 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 64
  %531 = bitcast float* %530 to <4 x float>*
  store <4 x float> %495, <4 x float>* %531, align 16, !tbaa !2
  %532 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 68
  %533 = bitcast float* %532 to <4 x float>*
  store <4 x float> %497, <4 x float>* %533, align 16, !tbaa !2
  %534 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 72
  %535 = bitcast float* %534 to <4 x float>*
  store <4 x float> %495, <4 x float>* %535, align 16, !tbaa !2
  %536 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 76
  %537 = bitcast float* %536 to <4 x float>*
  store <4 x float> %497, <4 x float>* %537, align 16, !tbaa !2
  %538 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 80
  %539 = bitcast float* %538 to <4 x float>*
  store <4 x float> %495, <4 x float>* %539, align 16, !tbaa !2
  %540 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 84
  %541 = bitcast float* %540 to <4 x float>*
  store <4 x float> %497, <4 x float>* %541, align 16, !tbaa !2
  %542 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 88
  %543 = bitcast float* %542 to <4 x float>*
  store <4 x float> %495, <4 x float>* %543, align 16, !tbaa !2
  %544 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 92
  %545 = bitcast float* %544 to <4 x float>*
  store <4 x float> %497, <4 x float>* %545, align 16, !tbaa !2
  %546 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 96
  %547 = bitcast float* %546 to <4 x float>*
  store <4 x float> %495, <4 x float>* %547, align 16, !tbaa !2
  %548 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 100
  %549 = bitcast float* %548 to <4 x float>*
  store <4 x float> %497, <4 x float>* %549, align 16, !tbaa !2
  %550 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 104
  %551 = bitcast float* %550 to <4 x float>*
  store <4 x float> %495, <4 x float>* %551, align 16, !tbaa !2
  %552 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 108
  %553 = bitcast float* %552 to <4 x float>*
  store <4 x float> %497, <4 x float>* %553, align 16, !tbaa !2
  %554 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 112
  %555 = bitcast float* %554 to <4 x float>*
  store <4 x float> %495, <4 x float>* %555, align 16, !tbaa !2
  %556 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 116
  %557 = bitcast float* %556 to <4 x float>*
  store <4 x float> %497, <4 x float>* %557, align 16, !tbaa !2
  %558 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 120
  %559 = bitcast float* %558 to <4 x float>*
  store <4 x float> %495, <4 x float>* %559, align 16, !tbaa !2
  %560 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 124
  %561 = bitcast float* %560 to <4 x float>*
  store <4 x float> %497, <4 x float>* %561, align 16, !tbaa !2
  %562 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 128
  %563 = bitcast float* %562 to <4 x float>*
  store <4 x float> %495, <4 x float>* %563, align 16, !tbaa !2
  %564 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 132
  %565 = bitcast float* %564 to <4 x float>*
  store <4 x float> %497, <4 x float>* %565, align 16, !tbaa !2
  %566 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 136
  %567 = bitcast float* %566 to <4 x float>*
  store <4 x float> %495, <4 x float>* %567, align 16, !tbaa !2
  %568 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 140
  %569 = bitcast float* %568 to <4 x float>*
  store <4 x float> %497, <4 x float>* %569, align 16, !tbaa !2
  %570 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 144
  %571 = bitcast float* %570 to <4 x float>*
  store <4 x float> %495, <4 x float>* %571, align 16, !tbaa !2
  %572 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 148
  %573 = bitcast float* %572 to <4 x float>*
  store <4 x float> %497, <4 x float>* %573, align 16, !tbaa !2
  %574 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 152
  %575 = bitcast float* %574 to <4 x float>*
  store <4 x float> %495, <4 x float>* %575, align 16, !tbaa !2
  %576 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 156
  %577 = bitcast float* %576 to <4 x float>*
  store <4 x float> %497, <4 x float>* %577, align 16, !tbaa !2
  %578 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 160
  %579 = bitcast float* %578 to <4 x float>*
  store <4 x float> %495, <4 x float>* %579, align 16, !tbaa !2
  %580 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 164
  %581 = bitcast float* %580 to <4 x float>*
  store <4 x float> %497, <4 x float>* %581, align 16, !tbaa !2
  %582 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 168
  %583 = bitcast float* %582 to <4 x float>*
  store <4 x float> %495, <4 x float>* %583, align 16, !tbaa !2
  %584 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 172
  %585 = bitcast float* %584 to <4 x float>*
  store <4 x float> %497, <4 x float>* %585, align 16, !tbaa !2
  %586 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 176
  %587 = bitcast float* %586 to <4 x float>*
  store <4 x float> %495, <4 x float>* %587, align 16, !tbaa !2
  %588 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 180
  %589 = bitcast float* %588 to <4 x float>*
  store <4 x float> %497, <4 x float>* %589, align 16, !tbaa !2
  %590 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 184
  %591 = bitcast float* %590 to <4 x float>*
  store <4 x float> %495, <4 x float>* %591, align 16, !tbaa !2
  %592 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 188
  %593 = bitcast float* %592 to <4 x float>*
  store <4 x float> %497, <4 x float>* %593, align 16, !tbaa !2
  %594 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 192
  %595 = bitcast float* %594 to <4 x float>*
  store <4 x float> %495, <4 x float>* %595, align 16, !tbaa !2
  %596 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 196
  %597 = bitcast float* %596 to <4 x float>*
  store <4 x float> %497, <4 x float>* %597, align 16, !tbaa !2
  %598 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 200
  %599 = bitcast float* %598 to <4 x float>*
  store <4 x float> %495, <4 x float>* %599, align 16, !tbaa !2
  %600 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 204
  %601 = bitcast float* %600 to <4 x float>*
  store <4 x float> %497, <4 x float>* %601, align 16, !tbaa !2
  %602 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 208
  %603 = bitcast float* %602 to <4 x float>*
  store <4 x float> %495, <4 x float>* %603, align 16, !tbaa !2
  %604 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 212
  %605 = bitcast float* %604 to <4 x float>*
  store <4 x float> %497, <4 x float>* %605, align 16, !tbaa !2
  %606 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 216
  %607 = bitcast float* %606 to <4 x float>*
  store <4 x float> %495, <4 x float>* %607, align 16, !tbaa !2
  %608 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 220
  %609 = bitcast float* %608 to <4 x float>*
  store <4 x float> %497, <4 x float>* %609, align 16, !tbaa !2
  %610 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 224
  %611 = bitcast float* %610 to <4 x float>*
  store <4 x float> %495, <4 x float>* %611, align 16, !tbaa !2
  %612 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 228
  %613 = bitcast float* %612 to <4 x float>*
  store <4 x float> %497, <4 x float>* %613, align 16, !tbaa !2
  %614 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 232
  %615 = bitcast float* %614 to <4 x float>*
  store <4 x float> %495, <4 x float>* %615, align 16, !tbaa !2
  %616 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 236
  %617 = bitcast float* %616 to <4 x float>*
  store <4 x float> %497, <4 x float>* %617, align 16, !tbaa !2
  %618 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 240
  %619 = bitcast float* %618 to <4 x float>*
  store <4 x float> %495, <4 x float>* %619, align 16, !tbaa !2
  %620 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 244
  %621 = bitcast float* %620 to <4 x float>*
  store <4 x float> %497, <4 x float>* %621, align 16, !tbaa !2
  %622 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 248
  %623 = bitcast float* %622 to <4 x float>*
  store <4 x float> %495, <4 x float>* %623, align 16, !tbaa !2
  %624 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %489, i64 252
  %625 = bitcast float* %624 to <4 x float>*
  store <4 x float> %497, <4 x float>* %625, align 16, !tbaa !2
  %626 = icmp eq i64 %490, 256
  br i1 %626, label %456, label %488

627:                                              ; preds = %3, %627
  %628 = phi i64 [ 0, %3 ], [ %643, %627 ]
  %629 = add nuw nsw i64 %628, 4
  %630 = getelementptr inbounds i32, i32* %0, i64 %628
  %631 = trunc i64 %629 to i32
  store i32 %631, i32* %630, align 4, !tbaa !415
  %632 = add nuw nsw i64 %628, 2
  %633 = add nuw nsw i64 %628, 1
  %634 = getelementptr inbounds i32, i32* %0, i64 %633
  %635 = trunc i64 %632 to i32
  store i32 %635, i32* %634, align 4, !tbaa !415
  %636 = getelementptr inbounds i32, i32* %0, i64 %632
  %637 = trunc i64 %628 to i32
  store i32 %637, i32* %636, align 4, !tbaa !415
  %638 = add nuw nsw i64 %628, 3
  %639 = getelementptr inbounds i32, i32* %0, i64 %638
  %640 = trunc i64 %638 to i32
  store i32 %640, i32* %639, align 4, !tbaa !415
  %641 = getelementptr inbounds i32, i32* %0, i64 %629
  %642 = trunc i64 %633 to i32
  store i32 %642, i32* %641, align 4, !tbaa !415
  %643 = add nuw nsw i64 %628, 5
  %644 = icmp ult i64 %628, 31995
  br i1 %644, label %627, label %645

645:                                              ; preds = %627, %645
  %646 = phi i64 [ %686, %645 ], [ 0, %627 ]
  %647 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %646
  %648 = bitcast float* %647 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %648, align 16, !tbaa !2
  %649 = getelementptr inbounds float, float* %647, i64 4
  %650 = bitcast float* %649 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %650, align 16, !tbaa !2
  %651 = or i64 %646, 8
  %652 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %651
  %653 = bitcast float* %652 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %653, align 16, !tbaa !2
  %654 = getelementptr inbounds float, float* %652, i64 4
  %655 = bitcast float* %654 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %655, align 16, !tbaa !2
  %656 = or i64 %646, 16
  %657 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %656
  %658 = bitcast float* %657 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %658, align 16, !tbaa !2
  %659 = getelementptr inbounds float, float* %657, i64 4
  %660 = bitcast float* %659 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %660, align 16, !tbaa !2
  %661 = or i64 %646, 24
  %662 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %661
  %663 = bitcast float* %662 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %663, align 16, !tbaa !2
  %664 = getelementptr inbounds float, float* %662, i64 4
  %665 = bitcast float* %664 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %665, align 16, !tbaa !2
  %666 = or i64 %646, 32
  %667 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %666
  %668 = bitcast float* %667 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %668, align 16, !tbaa !2
  %669 = getelementptr inbounds float, float* %667, i64 4
  %670 = bitcast float* %669 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %670, align 16, !tbaa !2
  %671 = or i64 %646, 40
  %672 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %671
  %673 = bitcast float* %672 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %673, align 16, !tbaa !2
  %674 = getelementptr inbounds float, float* %672, i64 4
  %675 = bitcast float* %674 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %675, align 16, !tbaa !2
  %676 = or i64 %646, 48
  %677 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %676
  %678 = bitcast float* %677 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %678, align 16, !tbaa !2
  %679 = getelementptr inbounds float, float* %677, i64 4
  %680 = bitcast float* %679 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %680, align 16, !tbaa !2
  %681 = or i64 %646, 56
  %682 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %681
  %683 = bitcast float* %682 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %683, align 16, !tbaa !2
  %684 = getelementptr inbounds float, float* %682, i64 4
  %685 = bitcast float* %684 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %685, align 16, !tbaa !2
  %686 = add nuw nsw i64 %646, 64
  %687 = icmp eq i64 %686, 32000
  br i1 %687, label %6, label %645, !llvm.loop !490

688:                                              ; preds = %456
  store float 1.000000e+00, float* %1, align 4, !tbaa !2
  store float 2.000000e+00, float* %2, align 4, !tbaa !2
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #7 {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  %3 = tail call noalias dereferenceable_or_null(128000) i8* @malloc(i64 128000) #16
  %4 = bitcast i8* %3 to i32*
  %5 = bitcast float* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #16
  %6 = bitcast float* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #16
  call void @set(i32* %4, float* nonnull %1, float* nonnull %2)
  %7 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @str, i64 0, i64 0))
  %8 = tail call i32 @s112()
  %9 = tail call i32 @s112p()
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #16
  ret i32 0
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #13

; Function Attrs: nofree nounwind
declare i32 @putchar(i32) local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #14

attributes #0 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { alwaysinline norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable willreturn }
attributes #14 = { nofree nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"float", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !11}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !7}
!21 = distinct !{!21, !7}
!22 = distinct !{!22, !7}
!23 = distinct !{!23, !7}
!24 = distinct !{!24, !7}
!25 = distinct !{!25, !7}
!26 = distinct !{!26, !7}
!27 = distinct !{!27, !7}
!28 = distinct !{!28, !7}
!29 = distinct !{!29, !7}
!30 = distinct !{!30, !7}
!31 = distinct !{!31, !7}
!32 = distinct !{!32, !7}
!33 = distinct !{!33, !7}
!34 = distinct !{!34, !7}
!35 = distinct !{!35, !7}
!36 = distinct !{!36, !7}
!37 = distinct !{!37, !7}
!38 = distinct !{!38, !7}
!39 = distinct !{!39, !7}
!40 = distinct !{!40, !7}
!41 = distinct !{!41, !7}
!42 = distinct !{!42, !7}
!43 = distinct !{!43, !7}
!44 = distinct !{!44, !7}
!45 = distinct !{!45, !7}
!46 = distinct !{!46, !7}
!47 = distinct !{!47, !7}
!48 = distinct !{!48, !7}
!49 = distinct !{!49, !7}
!50 = distinct !{!50, !7}
!51 = distinct !{!51, !7}
!52 = distinct !{!52, !7}
!53 = distinct !{!53, !7}
!54 = distinct !{!54, !7}
!55 = distinct !{!55, !7}
!56 = distinct !{!56, !7}
!57 = distinct !{!57, !7}
!58 = distinct !{!58, !7}
!59 = distinct !{!59, !7}
!60 = distinct !{!60, !7}
!61 = distinct !{!61, !7}
!62 = distinct !{!62, !7}
!63 = distinct !{!63, !7}
!64 = distinct !{!64, !7}
!65 = distinct !{!65, !7}
!66 = distinct !{!66, !7}
!67 = distinct !{!67, !7}
!68 = distinct !{!68, !7}
!69 = distinct !{!69, !7}
!70 = distinct !{!70, !7}
!71 = distinct !{!71, !7}
!72 = distinct !{!72, !7}
!73 = distinct !{!73, !7}
!74 = distinct !{!74, !7}
!75 = distinct !{!75, !7}
!76 = distinct !{!76, !7}
!77 = distinct !{!77, !7}
!78 = distinct !{!78, !7}
!79 = distinct !{!79, !7}
!80 = distinct !{!80, !7}
!81 = distinct !{!81, !7}
!82 = distinct !{!82, !7}
!83 = distinct !{!83, !7}
!84 = distinct !{!84, !7}
!85 = distinct !{!85, !7}
!86 = distinct !{!86, !7}
!87 = distinct !{!87, !7}
!88 = distinct !{!88, !7}
!89 = distinct !{!89, !7}
!90 = distinct !{!90, !7}
!91 = distinct !{!91, !7}
!92 = distinct !{!92, !7}
!93 = distinct !{!93, !7}
!94 = distinct !{!94, !7}
!95 = distinct !{!95, !7}
!96 = distinct !{!96, !7}
!97 = distinct !{!97, !7}
!98 = distinct !{!98, !7}
!99 = distinct !{!99, !7}
!100 = distinct !{!100, !7}
!101 = distinct !{!101, !7}
!102 = distinct !{!102, !7}
!103 = distinct !{!103, !7}
!104 = distinct !{!104, !7}
!105 = distinct !{!105, !7}
!106 = distinct !{!106, !7}
!107 = distinct !{!107, !7}
!108 = distinct !{!108, !7}
!109 = distinct !{!109, !7}
!110 = distinct !{!110, !7}
!111 = distinct !{!111, !7}
!112 = distinct !{!112, !7}
!113 = distinct !{!113, !7}
!114 = distinct !{!114, !7}
!115 = distinct !{!115, !7}
!116 = distinct !{!116, !7}
!117 = distinct !{!117, !7}
!118 = distinct !{!118, !7}
!119 = distinct !{!119, !7}
!120 = distinct !{!120, !7}
!121 = distinct !{!121, !7}
!122 = distinct !{!122, !7}
!123 = distinct !{!123, !7}
!124 = distinct !{!124, !7}
!125 = distinct !{!125, !7}
!126 = distinct !{!126, !7}
!127 = distinct !{!127, !7}
!128 = distinct !{!128, !7}
!129 = distinct !{!129, !7}
!130 = distinct !{!130, !7}
!131 = distinct !{!131, !7}
!132 = distinct !{!132, !7}
!133 = distinct !{!133, !7}
!134 = distinct !{!134, !7}
!135 = distinct !{!135, !7}
!136 = distinct !{!136, !7}
!137 = distinct !{!137, !7}
!138 = distinct !{!138, !7}
!139 = distinct !{!139, !7}
!140 = distinct !{!140, !7}
!141 = distinct !{!141, !7}
!142 = distinct !{!142, !7}
!143 = distinct !{!143, !7}
!144 = distinct !{!144, !7}
!145 = distinct !{!145, !7}
!146 = distinct !{!146, !7}
!147 = distinct !{!147, !7}
!148 = distinct !{!148, !7}
!149 = distinct !{!149, !7}
!150 = distinct !{!150, !7}
!151 = distinct !{!151, !7}
!152 = distinct !{!152, !7}
!153 = distinct !{!153, !7}
!154 = distinct !{!154, !7}
!155 = distinct !{!155, !7}
!156 = distinct !{!156, !7}
!157 = distinct !{!157, !7}
!158 = distinct !{!158, !7}
!159 = distinct !{!159, !7}
!160 = distinct !{!160, !7}
!161 = distinct !{!161, !7}
!162 = distinct !{!162, !7}
!163 = distinct !{!163, !7}
!164 = distinct !{!164, !7}
!165 = distinct !{!165, !7}
!166 = distinct !{!166, !7}
!167 = distinct !{!167, !7}
!168 = distinct !{!168, !7}
!169 = distinct !{!169, !7}
!170 = distinct !{!170, !7}
!171 = distinct !{!171, !7}
!172 = distinct !{!172, !7}
!173 = distinct !{!173, !7}
!174 = distinct !{!174, !7}
!175 = distinct !{!175, !7}
!176 = distinct !{!176, !7}
!177 = distinct !{!177, !7}
!178 = distinct !{!178, !7}
!179 = distinct !{!179, !7}
!180 = distinct !{!180, !7}
!181 = distinct !{!181, !7}
!182 = distinct !{!182, !7}
!183 = distinct !{!183, !7}
!184 = distinct !{!184, !7}
!185 = distinct !{!185, !7}
!186 = distinct !{!186, !7}
!187 = distinct !{!187, !7}
!188 = distinct !{!188, !7}
!189 = distinct !{!189, !7}
!190 = distinct !{!190, !7}
!191 = distinct !{!191, !7}
!192 = distinct !{!192, !7}
!193 = distinct !{!193, !7}
!194 = distinct !{!194, !7}
!195 = distinct !{!195, !7}
!196 = distinct !{!196, !7}
!197 = distinct !{!197, !7}
!198 = distinct !{!198, !7}
!199 = distinct !{!199, !7}
!200 = distinct !{!200, !7}
!201 = distinct !{!201, !7}
!202 = distinct !{!202, !7}
!203 = distinct !{!203, !7}
!204 = distinct !{!204, !7}
!205 = distinct !{!205, !7}
!206 = distinct !{!206, !7}
!207 = distinct !{!207, !7}
!208 = distinct !{!208, !7}
!209 = distinct !{!209, !7}
!210 = distinct !{!210, !7}
!211 = distinct !{!211, !7}
!212 = distinct !{!212, !7}
!213 = distinct !{!213, !7}
!214 = distinct !{!214, !7}
!215 = distinct !{!215, !7}
!216 = distinct !{!216, !7}
!217 = distinct !{!217, !7}
!218 = distinct !{!218, !7}
!219 = distinct !{!219, !7}
!220 = distinct !{!220, !7}
!221 = distinct !{!221, !7}
!222 = distinct !{!222, !7}
!223 = distinct !{!223, !7}
!224 = distinct !{!224, !7}
!225 = distinct !{!225, !7}
!226 = distinct !{!226, !7}
!227 = distinct !{!227, !7}
!228 = distinct !{!228, !7}
!229 = distinct !{!229, !7}
!230 = distinct !{!230, !7}
!231 = distinct !{!231, !7}
!232 = distinct !{!232, !7}
!233 = distinct !{!233, !7}
!234 = distinct !{!234, !7}
!235 = distinct !{!235, !7}
!236 = distinct !{!236, !7}
!237 = distinct !{!237, !7}
!238 = distinct !{!238, !7}
!239 = distinct !{!239, !7}
!240 = distinct !{!240, !7}
!241 = distinct !{!241, !7}
!242 = distinct !{!242, !7}
!243 = distinct !{!243, !7}
!244 = distinct !{!244, !7}
!245 = distinct !{!245, !7}
!246 = distinct !{!246, !7}
!247 = distinct !{!247, !7}
!248 = distinct !{!248, !7}
!249 = distinct !{!249, !7}
!250 = distinct !{!250, !7}
!251 = distinct !{!251, !7}
!252 = distinct !{!252, !7}
!253 = distinct !{!253, !7}
!254 = distinct !{!254, !7}
!255 = distinct !{!255, !7}
!256 = distinct !{!256, !7}
!257 = distinct !{!257, !7}
!258 = distinct !{!258, !7}
!259 = distinct !{!259, !7}
!260 = distinct !{!260, !7}
!261 = distinct !{!261, !7}
!262 = distinct !{!262, !7}
!263 = distinct !{!263, !7}
!264 = distinct !{!264, !7}
!265 = distinct !{!265, !7}
!266 = distinct !{!266, !7}
!267 = distinct !{!267, !7}
!268 = distinct !{!268, !7}
!269 = distinct !{!269, !7}
!270 = distinct !{!270, !7}
!271 = distinct !{!271, !7}
!272 = distinct !{!272, !7}
!273 = distinct !{!273, !7}
!274 = distinct !{!274, !7}
!275 = distinct !{!275, !7}
!276 = distinct !{!276, !7}
!277 = distinct !{!277, !7}
!278 = distinct !{!278, !7}
!279 = distinct !{!279, !7}
!280 = distinct !{!280, !7}
!281 = distinct !{!281, !7}
!282 = distinct !{!282, !7}
!283 = distinct !{!283, !7}
!284 = distinct !{!284, !7}
!285 = distinct !{!285, !7}
!286 = distinct !{!286, !7}
!287 = distinct !{!287, !7}
!288 = distinct !{!288, !7}
!289 = distinct !{!289, !7}
!290 = distinct !{!290, !7}
!291 = distinct !{!291, !7}
!292 = distinct !{!292, !7}
!293 = distinct !{!293, !7}
!294 = distinct !{!294, !7}
!295 = distinct !{!295, !7}
!296 = distinct !{!296, !7}
!297 = distinct !{!297, !7}
!298 = distinct !{!298, !7}
!299 = distinct !{!299, !7}
!300 = distinct !{!300, !7}
!301 = distinct !{!301, !7}
!302 = distinct !{!302, !7}
!303 = distinct !{!303, !7}
!304 = distinct !{!304, !7}
!305 = distinct !{!305, !7}
!306 = distinct !{!306, !7}
!307 = distinct !{!307, !7}
!308 = distinct !{!308, !7}
!309 = distinct !{!309, !7}
!310 = distinct !{!310, !7}
!311 = distinct !{!311, !7}
!312 = distinct !{!312, !7}
!313 = distinct !{!313, !7}
!314 = distinct !{!314, !7}
!315 = distinct !{!315, !7}
!316 = distinct !{!316, !7}
!317 = distinct !{!317, !7}
!318 = distinct !{!318, !7}
!319 = distinct !{!319, !7}
!320 = distinct !{!320, !7}
!321 = distinct !{!321, !7}
!322 = distinct !{!322, !7}
!323 = distinct !{!323, !7}
!324 = distinct !{!324, !7}
!325 = distinct !{!325, !326}
!326 = !{!"llvm.loop.vectorize.enable", i1 true}
!327 = distinct !{!327, !7}
!328 = distinct !{!328, !7}
!329 = distinct !{!329, !7}
!330 = distinct !{!330, !7}
!331 = distinct !{!331, !7}
!332 = distinct !{!332, !7}
!333 = distinct !{!333, !7}
!334 = distinct !{!334, !7}
!335 = distinct !{!335, !7}
!336 = distinct !{!336, !7}
!337 = distinct !{!337, !7}
!338 = distinct !{!338, !7}
!339 = distinct !{!339, !7}
!340 = distinct !{!340, !7}
!341 = distinct !{!341, !7}
!342 = distinct !{!342, !7}
!343 = !{!344}
!344 = distinct !{!344, !345}
!345 = distinct !{!345, !"LVerDomain"}
!346 = !{!347}
!347 = distinct !{!347, !345}
!348 = !{!349}
!349 = distinct !{!349, !345}
!350 = !{!344, !347}
!351 = distinct !{!351, !7}
!352 = distinct !{!352, !7}
!353 = distinct !{!353, !7}
!354 = distinct !{!354, !7}
!355 = !{!356}
!356 = distinct !{!356, !357}
!357 = distinct !{!357, !"LVerDomain"}
!358 = !{!359}
!359 = distinct !{!359, !357}
!360 = !{!361}
!361 = distinct !{!361, !357}
!362 = !{!363}
!363 = distinct !{!363, !357}
!364 = distinct !{!364, !7}
!365 = distinct !{!365, !7}
!366 = distinct !{!366, !7}
!367 = distinct !{!367, !7}
!368 = distinct !{!368, !7}
!369 = distinct !{!369, !7}
!370 = distinct !{!370, !371, !7}
!371 = !{!"llvm.loop.unroll.runtime.disable"}
!372 = distinct !{!372, !7}
!373 = distinct !{!373, !7}
!374 = distinct !{!374, !7}
!375 = distinct !{!375, !7}
!376 = distinct !{!376, !7}
!377 = distinct !{!377, !7}
!378 = distinct !{!378, !7}
!379 = distinct !{!379, !7}
!380 = distinct !{!380, !7}
!381 = distinct !{!381, !7}
!382 = distinct !{!382, !7}
!383 = !{!384}
!384 = distinct !{!384, !385}
!385 = distinct !{!385, !"LVerDomain"}
!386 = !{!387}
!387 = distinct !{!387, !385}
!388 = !{!389}
!389 = distinct !{!389, !385}
!390 = distinct !{!390, !7}
!391 = distinct !{!391, !7}
!392 = distinct !{!392, !7}
!393 = distinct !{!393, !7}
!394 = distinct !{!394, !7}
!395 = distinct !{!395, !7}
!396 = distinct !{!396, !7}
!397 = distinct !{!397, !7}
!398 = distinct !{!398, !7}
!399 = distinct !{!399, !7}
!400 = distinct !{!400, !7}
!401 = distinct !{!401, !7}
!402 = distinct !{!402, !7}
!403 = distinct !{!403, !7}
!404 = distinct !{!404, !7}
!405 = distinct !{!405, !7}
!406 = distinct !{!406, !7}
!407 = distinct !{!407, !7}
!408 = distinct !{!408, !7}
!409 = distinct !{!409, !7}
!410 = distinct !{!410, !7}
!411 = distinct !{!411, !7}
!412 = distinct !{!412, !7}
!413 = distinct !{!413, !7}
!414 = distinct !{!414, !7}
!415 = !{!416, !416, i64 0}
!416 = !{!"int", !4, i64 0}
!417 = !{!418, !418, i64 0}
!418 = !{!"any pointer", !4, i64 0}
!419 = distinct !{!419, !7}
!420 = distinct !{!420, !11}
!421 = !{!422}
!422 = distinct !{!422, !423}
!423 = distinct !{!423, !"LVerDomain"}
!424 = !{!425}
!425 = distinct !{!425, !423}
!426 = distinct !{!426, !7}
!427 = distinct !{!427, !7}
!428 = distinct !{!428, !7}
!429 = !{!430}
!430 = distinct !{!430, !431}
!431 = distinct !{!431, !"LVerDomain"}
!432 = !{!433}
!433 = distinct !{!433, !431}
!434 = !{!435}
!435 = distinct !{!435, !431}
!436 = !{!430, !433}
!437 = distinct !{!437, !7}
!438 = distinct !{!438, !7}
!439 = !{!440}
!440 = distinct !{!440, !441}
!441 = distinct !{!441, !"LVerDomain"}
!442 = !{!443}
!443 = distinct !{!443, !441}
!444 = !{!445}
!445 = distinct !{!445, !441}
!446 = !{!440, !443}
!447 = distinct !{!447, !7}
!448 = distinct !{!448, !7}
!449 = distinct !{!449, !7}
!450 = distinct !{!450, !11}
!451 = !{!452}
!452 = distinct !{!452, !453}
!453 = distinct !{!453, !"LVerDomain"}
!454 = !{!455}
!455 = distinct !{!455, !453}
!456 = !{!457}
!457 = distinct !{!457, !453}
!458 = !{!452, !455}
!459 = distinct !{!459, !7}
!460 = distinct !{!460, !7}
!461 = distinct !{!461, !11}
!462 = !{!463}
!463 = distinct !{!463, !464}
!464 = distinct !{!464, !"LVerDomain"}
!465 = !{!466}
!466 = distinct !{!466, !464}
!467 = !{!468}
!468 = distinct !{!468, !464}
!469 = !{!463, !466}
!470 = distinct !{!470, !7}
!471 = distinct !{!471, !7}
!472 = distinct !{!472, !7}
!473 = distinct !{!473, !7}
!474 = distinct !{!474, !7}
!475 = distinct !{!475, !7}
!476 = distinct !{!476, !7}
!477 = distinct !{!477, !7}
!478 = distinct !{!478, !7}
!479 = distinct !{!479, !7}
!480 = distinct !{!480, !7}
!481 = distinct !{!481, !7}
!482 = distinct !{!482, !7}
!483 = distinct !{!483, !7}
!484 = distinct !{!484, !7}
!485 = distinct !{!485, !7}
!486 = distinct !{!486, !7}
!487 = distinct !{!487, !7}
!488 = distinct !{!488, !7}
!489 = distinct !{!489, !7}
!490 = distinct !{!490, !7}
