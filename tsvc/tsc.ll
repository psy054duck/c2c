; ModuleID = 'tsc.c'
source_filename = "tsc.c"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx12.0.0"

@a = global [32000 x float] zeroinitializer, align 16
@b = global [32000 x float] zeroinitializer, align 16
@c = global [32000 x float] zeroinitializer, align 16
@d = global [32000 x float] zeroinitializer, align 16
@e = global [32000 x float] zeroinitializer, align 16
@aa = global [256 x [256 x float]] zeroinitializer, align 16
@bb = global [256 x [256 x float]] zeroinitializer, align 16
@cc = global [256 x [256 x float]] zeroinitializer, align 16
@array = global [65536 x float] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%f \0A\00", align 1
@temp = local_unnamed_addr global float 0.000000e+00, align 4
@.str.1 = private unnamed_addr constant [6 x i8] c"s000 \00", align 1
@X = global [32000 x float] zeroinitializer, align 16
@Y = global [32000 x float] zeroinitializer, align 16
@Z = global [32000 x float] zeroinitializer, align 16
@U = global [32000 x float] zeroinitializer, align 16
@V = global [32000 x float] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [6 x i8] c"s111 \00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"s112 \00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"s113 \00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"s114 \00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"s115 \00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"s116 \00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"s118 \00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"s119 \00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"s121 \00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"s122 \00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"s123 \00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"s124 \00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"s125 \00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"s126 \00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"s127 \00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"s128 \00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"s131 \00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"s132 \00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"s141 \00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"s151 \00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"s152 \00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"s161 \00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"s162 \00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"s171 \00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"s172 \00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"s173 \00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"s174 \00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"s175 \00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"s176 \00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"s211 \00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"s212 \00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"s221 \00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"s222 \00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"s231 \00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"s232 \00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"s233 \00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"s234 \00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"s235 \00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"s241 \00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"s242 \00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"s243 \00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"s244 \00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"s251 \00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"s252 \00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"s253 \00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"s254 \00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"s255 \00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"s256 \00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"s257 \00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"s258 \00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"s261 \00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"s271 \00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"s272 \00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"s273 \00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"s274 \00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"s275 \00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"s276 \00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"s277 \00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"s278 \00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"s279 \00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"s2710\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"s2711\00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c"s2712\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"s281 \00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"s291 \00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"s292 \00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"s293 \00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"s2101\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"s2102\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"s2111\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"s311 \00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"s312 \00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"s313 \00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"s314 \00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"s315 \00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"s316 \00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"s317 \00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"s318 \00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"s319 \00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"s3110\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"s3111\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"s3112\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"s3113\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"s321 \00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"s322 \00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c"s323 \00", align 1
@.str.88 = private unnamed_addr constant [6 x i8] c"s331 \00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"s332 \00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"s341 \00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"s342 \00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"s343 \00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"s351 \00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"s352 \00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c"s353 \00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"s411 \00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"s412 \00", align 1
@.str.98 = private unnamed_addr constant [6 x i8] c"s413 \00", align 1
@.str.99 = private unnamed_addr constant [6 x i8] c"s414 \00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"s415 \00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"s421 \00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c"s422 \00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"s423 \00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"s424 \00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"s431 \00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c"s432 \00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"s441 \00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"s442 \00", align 1
@.str.109 = private unnamed_addr constant [6 x i8] c"s443 \00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"s451 \00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"s452 \00", align 1
@.str.112 = private unnamed_addr constant [6 x i8] c"s453 \00", align 1
@.str.113 = private unnamed_addr constant [6 x i8] c"s471 \00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"s481 \00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"s482 \00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"s491 \00", align 1
@.str.117 = private unnamed_addr constant [6 x i8] c"s4112\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"s4113\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"s4114\00", align 1
@.str.120 = private unnamed_addr constant [6 x i8] c"s4115\00", align 1
@.str.121 = private unnamed_addr constant [6 x i8] c"s4116\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"s4117\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"s4121\00", align 1
@.str.124 = private unnamed_addr constant [4 x i8] c"va\09\00", align 1
@.str.125 = private unnamed_addr constant [6 x i8] c"vag  \00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"vas  \00", align 1
@.str.127 = private unnamed_addr constant [6 x i8] c"vif  \00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"vpv  \00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"vtv  \00", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c"vpvtv\00", align 1
@.str.131 = private unnamed_addr constant [6 x i8] c"vpvts\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"vpvpv\00", align 1
@.str.133 = private unnamed_addr constant [6 x i8] c"vtvtv\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"vsumr\00", align 1
@.str.135 = private unnamed_addr constant [6 x i8] c"vdotr\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"vbor \00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"S000\09 %.2f \09\09\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"S111\09 %.2f \09\09\00", align 1
@.str.139 = private unnamed_addr constant [16 x i8] c"S1111\09 %.2f \09\09 \00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"S112\09 %.2f \09\09\00", align 1
@.str.141 = private unnamed_addr constant [15 x i8] c"S112p\09 %.2f \09\09\00", align 1
@.str.142 = private unnamed_addr constant [16 x i8] c"S1112\09 %.2f \09\09 \00", align 1
@.str.143 = private unnamed_addr constant [17 x i8] c"S1112p\09 %.2f \09\09 \00", align 1
@.str.144 = private unnamed_addr constant [14 x i8] c"S113\09 %.2f \09\09\00", align 1
@.str.145 = private unnamed_addr constant [15 x i8] c"S1113\09 %.2f \09\09\00", align 1
@.str.146 = private unnamed_addr constant [14 x i8] c"S114\09 %.2f \09\09\00", align 1
@.str.147 = private unnamed_addr constant [14 x i8] c"S115\09 %.2f \09\09\00", align 1
@.str.148 = private unnamed_addr constant [15 x i8] c"S1115\09 %.2f \09\09\00", align 1
@.str.149 = private unnamed_addr constant [14 x i8] c"S116\09 %.2f \09\09\00", align 1
@.str.150 = private unnamed_addr constant [14 x i8] c"S118\09 %.2f \09\09\00", align 1
@.str.151 = private unnamed_addr constant [15 x i8] c"S119\09 %.2f \09\09 \00", align 1
@.str.152 = private unnamed_addr constant [16 x i8] c"S119p\09 %.2f \09\09 \00", align 1
@.str.153 = private unnamed_addr constant [16 x i8] c"S1119\09 %.2f \09\09 \00", align 1
@.str.154 = private unnamed_addr constant [17 x i8] c"S1119p\09 %.2f \09\09 \00", align 1
@.str.155 = private unnamed_addr constant [14 x i8] c"S121\09 %.2f \09\09\00", align 1
@.str.156 = private unnamed_addr constant [15 x i8] c"S121p\09 %.2f \09\09\00", align 1
@.str.157 = private unnamed_addr constant [14 x i8] c"S122\09 %.2f \09\09\00", align 1
@.str.158 = private unnamed_addr constant [15 x i8] c"S122p\09 %.2f \09\09\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"S123\09 %.2f \09\09\00", align 1
@.str.160 = private unnamed_addr constant [14 x i8] c"S124\09 %.2f \09\09\00", align 1
@.str.161 = private unnamed_addr constant [14 x i8] c"S125\09 %.2f \09\09\00", align 1
@.str.162 = private unnamed_addr constant [15 x i8] c"S125p\09 %.2f \09\09\00", align 1
@.str.163 = private unnamed_addr constant [14 x i8] c"S126\09 %.2f \09\09\00", align 1
@.str.164 = private unnamed_addr constant [15 x i8] c"S126p\09 %.2f \09\09\00", align 1
@.str.165 = private unnamed_addr constant [16 x i8] c"S126pp\09 %.2f \09\09\00", align 1
@.str.166 = private unnamed_addr constant [14 x i8] c"S127\09 %.2f \09\09\00", align 1
@.str.167 = private unnamed_addr constant [15 x i8] c"S127p\09 %.2f \09\09\00", align 1
@.str.168 = private unnamed_addr constant [14 x i8] c"S128\09 %.2f \09\09\00", align 1
@.str.169 = private unnamed_addr constant [15 x i8] c"S128p\09 %.2f \09\09\00", align 1
@.str.170 = private unnamed_addr constant [14 x i8] c"S131\09 %.2f \09\09\00", align 1
@.str.171 = private unnamed_addr constant [15 x i8] c"S131p\09 %.2f \09\09\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"S132\09 %.2f \09\09\00", align 1
@.str.173 = private unnamed_addr constant [15 x i8] c"S132p\09 %.2f \09\09\00", align 1
@.str.174 = private unnamed_addr constant [14 x i8] c"S141\09 %.2f \09\09\00", align 1
@.str.175 = private unnamed_addr constant [15 x i8] c"S141p\09 %.2f \09\09\00", align 1
@.str.176 = private unnamed_addr constant [14 x i8] c"S151\09 %.2f \09\09\00", align 1
@.str.177 = private unnamed_addr constant [14 x i8] c"S152\09 %.2f \09\09\00", align 1
@.str.178 = private unnamed_addr constant [14 x i8] c"S161\09 %.2f \09\09\00", align 1
@.str.179 = private unnamed_addr constant [15 x i8] c"S1161\09 %.2f \09\09\00", align 1
@.str.180 = private unnamed_addr constant [14 x i8] c"S162\09 %.2f \09\09\00", align 1
@.str.181 = private unnamed_addr constant [14 x i8] c"S171\09 %.2f \09\09\00", align 1
@.str.182 = private unnamed_addr constant [14 x i8] c"S172\09 %.2f \09\09\00", align 1
@.str.183 = private unnamed_addr constant [15 x i8] c"S172p\09 %.2f \09\09\00", align 1
@.str.184 = private unnamed_addr constant [14 x i8] c"S173\09 %.2f \09\09\00", align 1
@.str.185 = private unnamed_addr constant [14 x i8] c"S174\09 %.2f \09\09\00", align 1
@.str.186 = private unnamed_addr constant [14 x i8] c"S175\09 %.2f \09\09\00", align 1
@.str.187 = private unnamed_addr constant [14 x i8] c"S176\09 %.2f \09\09\00", align 1
@.str.188 = private unnamed_addr constant [14 x i8] c"S211\09 %.2f \09\09\00", align 1
@.str.189 = private unnamed_addr constant [15 x i8] c"S211p\09 %.2f \09\09\00", align 1
@.str.190 = private unnamed_addr constant [14 x i8] c"S212\09 %.2f \09\09\00", align 1
@.str.191 = private unnamed_addr constant [15 x i8] c"S1213\09 %.2f \09\09\00", align 1
@.str.192 = private unnamed_addr constant [14 x i8] c"S221\09 %.2f \09\09\00", align 1
@.str.193 = private unnamed_addr constant [15 x i8] c"S221p\09 %.2f \09\09\00", align 1
@.str.194 = private unnamed_addr constant [15 x i8] c"S1221\09 %.2f \09\09\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"S222\09 %.2f \09\09\00", align 1
@.str.196 = private unnamed_addr constant [15 x i8] c"S222p\09 %.2f \09\09\00", align 1
@.str.197 = private unnamed_addr constant [14 x i8] c"S231\09 %.2f \09\09\00", align 1
@.str.198 = private unnamed_addr constant [15 x i8] c"S231p\09 %.2f \09\09\00", align 1
@.str.199 = private unnamed_addr constant [16 x i8] c"S231pp\09 %.2f \09\09\00", align 1
@.str.200 = private unnamed_addr constant [17 x i8] c"S231ppp\09 %.2f \09\09\00", align 1
@.str.201 = private unnamed_addr constant [14 x i8] c"S232\09 %.2f \09\09\00", align 1
@.str.202 = private unnamed_addr constant [15 x i8] c"S1232\09 %.2f \09\09\00", align 1
@.str.203 = private unnamed_addr constant [14 x i8] c"S233\09 %.2f \09\09\00", align 1
@.str.204 = private unnamed_addr constant [15 x i8] c"S233p\09 %.2f \09\09\00", align 1
@.str.205 = private unnamed_addr constant [15 x i8] c"S2233\09 %.2f \09\09\00", align 1
@.str.206 = private unnamed_addr constant [14 x i8] c"S235\09 %.2f \09\09\00", align 1
@.str.207 = private unnamed_addr constant [14 x i8] c"S241\09 %.2f \09\09\00", align 1
@.str.208 = private unnamed_addr constant [14 x i8] c"S242\09 %.2f \09\09\00", align 1
@.str.209 = private unnamed_addr constant [14 x i8] c"S243\09 %.2f \09\09\00", align 1
@.str.210 = private unnamed_addr constant [14 x i8] c"S244\09 %.2f \09\09\00", align 1
@.str.211 = private unnamed_addr constant [15 x i8] c"S1244\09 %.2f \09\09\00", align 1
@.str.212 = private unnamed_addr constant [15 x i8] c"S2244\09 %.2f \09\09\00", align 1
@.str.213 = private unnamed_addr constant [14 x i8] c"S251\09 %.2f \09\09\00", align 1
@.str.214 = private unnamed_addr constant [15 x i8] c"S1251\09 %.2f \09\09\00", align 1
@.str.215 = private unnamed_addr constant [15 x i8] c"S2251\09 %.2f \09\09\00", align 1
@.str.216 = private unnamed_addr constant [15 x i8] c"S3251\09 %.2f \09\09\00", align 1
@.str.217 = private unnamed_addr constant [14 x i8] c"S252\09 %.2f \09\09\00", align 1
@.str.218 = private unnamed_addr constant [15 x i8] c"S252p\09 %.2f \09\09\00", align 1
@.str.219 = private unnamed_addr constant [14 x i8] c"S253\09 %.2f \09\09\00", align 1
@.str.220 = private unnamed_addr constant [14 x i8] c"S254\09 %.2f \09\09\00", align 1
@.str.221 = private unnamed_addr constant [14 x i8] c"S255\09 %.2f \09\09\00", align 1
@.str.222 = private unnamed_addr constant [14 x i8] c"S256\09 %.2f \09\09\00", align 1
@.str.223 = private unnamed_addr constant [15 x i8] c"S256p\09 %.2f \09\09\00", align 1
@.str.224 = private unnamed_addr constant [16 x i8] c"S256pp\09 %.2f \09\09\00", align 1
@.str.225 = private unnamed_addr constant [14 x i8] c"S257\09 %.2f \09\09\00", align 1
@.str.226 = private unnamed_addr constant [14 x i8] c"S258\09 %.2f \09\09\00", align 1
@.str.227 = private unnamed_addr constant [14 x i8] c"S261\09 %.2f \09\09\00", align 1
@.str.228 = private unnamed_addr constant [14 x i8] c"S271\09 %.2f \09\09\00", align 1
@.str.229 = private unnamed_addr constant [14 x i8] c"S272\09 %.2f \09\09\00", align 1
@.str.230 = private unnamed_addr constant [14 x i8] c"S273\09 %.2f \09\09\00", align 1
@.str.231 = private unnamed_addr constant [15 x i8] c"S273p\09 %.2f \09\09\00", align 1
@.str.232 = private unnamed_addr constant [14 x i8] c"S274\09 %.2f \09\09\00", align 1
@.str.233 = private unnamed_addr constant [14 x i8] c"S275\09 %.2f \09\09\00", align 1
@.str.234 = private unnamed_addr constant [15 x i8] c"S275p\09 %.2f \09\09\00", align 1
@.str.235 = private unnamed_addr constant [15 x i8] c"S2275\09 %.2f \09\09\00", align 1
@.str.236 = private unnamed_addr constant [16 x i8] c"S2275p\09 %.2f \09\09\00", align 1
@.str.237 = private unnamed_addr constant [14 x i8] c"S276\09 %.2f \09\09\00", align 1
@.str.238 = private unnamed_addr constant [15 x i8] c"S276p\09 %.2f \09\09\00", align 1
@.str.239 = private unnamed_addr constant [14 x i8] c"S277\09 %.2f \09\09\00", align 1
@.str.240 = private unnamed_addr constant [14 x i8] c"S278\09 %.2f \09\09\00", align 1
@.str.241 = private unnamed_addr constant [14 x i8] c"S279\09 %.2f \09\09\00", align 1
@.str.242 = private unnamed_addr constant [15 x i8] c"S1279\09 %.2f \09\09\00", align 1
@.str.243 = private unnamed_addr constant [15 x i8] c"S2710\09 %.2f \09\09\00", align 1
@.str.244 = private unnamed_addr constant [16 x i8] c"S2710p\09 %.2f \09\09\00", align 1
@.str.245 = private unnamed_addr constant [15 x i8] c"S2711\09 %.2f \09\09\00", align 1
@.str.246 = private unnamed_addr constant [15 x i8] c"S2712\09 %.2f \09\09\00", align 1
@.str.247 = private unnamed_addr constant [14 x i8] c"S281\09 %.2f \09\09\00", align 1
@.str.248 = private unnamed_addr constant [15 x i8] c"S1281\09 %.2f \09\09\00", align 1
@.str.249 = private unnamed_addr constant [14 x i8] c"S291\09 %.2f \09\09\00", align 1
@.str.250 = private unnamed_addr constant [14 x i8] c"S292\09 %.2f \09\09\00", align 1
@.str.251 = private unnamed_addr constant [14 x i8] c"S293\09 %.2f \09\09\00", align 1
@.str.252 = private unnamed_addr constant [15 x i8] c"S2101\09 %.2f \09\09\00", align 1
@.str.253 = private unnamed_addr constant [15 x i8] c"S2102\09 %.2f \09\09\00", align 1
@.str.254 = private unnamed_addr constant [16 x i8] c"S2102p\09 %.2f \09\09\00", align 1
@.str.255 = private unnamed_addr constant [15 x i8] c"S2111\09 %.2f \09\09\00", align 1
@.str.256 = private unnamed_addr constant [14 x i8] c"S311\09 %.2f \09\09\00", align 1
@.str.257 = private unnamed_addr constant [16 x i8] c"S31111\09 %.2f \09\09\00", align 1
@.str.258 = private unnamed_addr constant [14 x i8] c"S312\09 %.2f \09\09\00", align 1
@.str.259 = private unnamed_addr constant [14 x i8] c"S313\09 %.2f \09\09\00", align 1
@.str.260 = private unnamed_addr constant [14 x i8] c"S314\09 %.2f \09\09\00", align 1
@.str.261 = private unnamed_addr constant [14 x i8] c"S315\09 %.2f \09\09\00", align 1
@.str.262 = private unnamed_addr constant [14 x i8] c"S316\09 %.2f \09\09\00", align 1
@.str.263 = private unnamed_addr constant [14 x i8] c"S317\09 %.2f \09\09\00", align 1
@.str.264 = private unnamed_addr constant [14 x i8] c"S318\09 %.2f \09\09\00", align 1
@.str.265 = private unnamed_addr constant [14 x i8] c"S319\09 %.2f \09\09\00", align 1
@.str.266 = private unnamed_addr constant [15 x i8] c"S319p\09 %.2f \09\09\00", align 1
@.str.267 = private unnamed_addr constant [16 x i8] c"S319pp\09 %.2f \09\09\00", align 1
@.str.268 = private unnamed_addr constant [17 x i8] c"S319ppp\09 %.2f \09\09\00", align 1
@.str.269 = private unnamed_addr constant [15 x i8] c"S3110\09 %.2f \09\09\00", align 1
@.str.270 = private unnamed_addr constant [16 x i8] c"S13110\09 %.2f \09\09\00", align 1
@.str.271 = private unnamed_addr constant [15 x i8] c"S3111\09 %.2f \09\09\00", align 1
@.str.272 = private unnamed_addr constant [15 x i8] c"S3112\09 %.2f \09\09\00", align 1
@.str.273 = private unnamed_addr constant [15 x i8] c"S3113\09 %.2f \09\09\00", align 1
@.str.274 = private unnamed_addr constant [14 x i8] c"S321\09 %.2f \09\09\00", align 1
@.str.275 = private unnamed_addr constant [14 x i8] c"S322\09 %.2f \09\09\00", align 1
@.str.276 = private unnamed_addr constant [14 x i8] c"S323\09 %.2f \09\09\00", align 1
@.str.277 = private unnamed_addr constant [14 x i8] c"S331\09 %.2f \09\09\00", align 1
@.str.278 = private unnamed_addr constant [14 x i8] c"S332\09 %.2f \09\09\00", align 1
@.str.279 = private unnamed_addr constant [14 x i8] c"S341\09 %.2f \09\09\00", align 1
@.str.280 = private unnamed_addr constant [14 x i8] c"S342\09 %.2f \09\09\00", align 1
@.str.281 = private unnamed_addr constant [14 x i8] c"S343\09 %.2f \09\09\00", align 1
@.str.282 = private unnamed_addr constant [14 x i8] c"S351\09 %.2f \09\09\00", align 1
@.str.283 = private unnamed_addr constant [15 x i8] c"S351p\09 %.2f \09\09\00", align 1
@.str.284 = private unnamed_addr constant [15 x i8] c"S1351\09 %.2f \09\09\00", align 1
@.str.285 = private unnamed_addr constant [14 x i8] c"S352\09 %.2f \09\09\00", align 1
@.str.286 = private unnamed_addr constant [15 x i8] c"S352p\09 %.2f \09\09\00", align 1
@.str.287 = private unnamed_addr constant [14 x i8] c"S353\09 %.2f \09\09\00", align 1
@xx = local_unnamed_addr global float* null, align 8
@yy = local_unnamed_addr global float* null, align 8
@.str.288 = private unnamed_addr constant [14 x i8] c"S421\09 %.2f \09\09\00", align 1
@.str.289 = private unnamed_addr constant [15 x i8] c"S1421\09 %.2f \09\09\00", align 1
@.str.290 = private unnamed_addr constant [14 x i8] c"S422\09 %.2f \09\09\00", align 1
@.str.291 = private unnamed_addr constant [14 x i8] c"S423\09 %.2f \09\09\00", align 1
@.str.292 = private unnamed_addr constant [14 x i8] c"S424\09 %.2f \09\09\00", align 1
@.str.293 = private unnamed_addr constant [14 x i8] c"S431\09 %.2f \09\09\00", align 1
@.str.294 = private unnamed_addr constant [14 x i8] c"S441\09 %.2f \09\09\00", align 1
@indx = local_unnamed_addr global [32000 x i32] zeroinitializer, align 16
@.str.295 = private unnamed_addr constant [14 x i8] c"S442\09 %.2f \09\09\00", align 1
@.str.296 = private unnamed_addr constant [14 x i8] c"S443\09 %.2f \09\09\00", align 1
@.str.297 = private unnamed_addr constant [14 x i8] c"S451\09 %.2f \09\09\00", align 1
@.str.298 = private unnamed_addr constant [14 x i8] c"S452\09 %.2f \09\09\00", align 1
@.str.299 = private unnamed_addr constant [14 x i8] c"S453\09 %.2f \09\09\00", align 1
@.str.300 = private unnamed_addr constant [15 x i8] c"S453p\09 %.2f \09\09\00", align 1
@x = local_unnamed_addr global [32000 x float] zeroinitializer, align 16
@.str.301 = private unnamed_addr constant [14 x i8] c"S471\09 %.2f \09\09\00", align 1
@.str.302 = private unnamed_addr constant [14 x i8] c"S481\09 %.2f \09\09\00", align 1
@.str.303 = private unnamed_addr constant [14 x i8] c"S482\09 %.2f \09\09\00", align 1
@.str.304 = private unnamed_addr constant [14 x i8] c"S491\09 %.2f \09\09\00", align 1
@.str.305 = private unnamed_addr constant [15 x i8] c"S4112\09 %.2f \09\09\00", align 1
@.str.306 = private unnamed_addr constant [15 x i8] c"S4113\09 %.2f \09\09\00", align 1
@.str.307 = private unnamed_addr constant [15 x i8] c"S4114\09 %.2f \09\09\00", align 1
@.str.308 = private unnamed_addr constant [15 x i8] c"S4115\09 %.2f \09\09\00", align 1
@.str.309 = private unnamed_addr constant [15 x i8] c"S4116\09 %.2f \09\09\00", align 1
@.str.310 = private unnamed_addr constant [15 x i8] c"S4117\09 %.2f \09\09\00", align 1
@.str.311 = private unnamed_addr constant [15 x i8] c"S4121\09 %.2f \09\09\00", align 1
@.str.312 = private unnamed_addr constant [12 x i8] c"va\09 %.2f \09\09\00", align 1
@.str.313 = private unnamed_addr constant [13 x i8] c"vag\09 %.2f \09\09\00", align 1
@.str.314 = private unnamed_addr constant [13 x i8] c"vas\09 %.2f \09\09\00", align 1
@.str.315 = private unnamed_addr constant [13 x i8] c"vif\09 %.2f \09\09\00", align 1
@.str.316 = private unnamed_addr constant [13 x i8] c"vpv\09 %.2f \09\09\00", align 1
@.str.317 = private unnamed_addr constant [13 x i8] c"vtv\09 %.2f \09\09\00", align 1
@.str.318 = private unnamed_addr constant [15 x i8] c"vpvtv\09 %.2f \09\09\00", align 1
@.str.319 = private unnamed_addr constant [15 x i8] c"vpvts\09 %.2f \09\09\00", align 1
@.str.320 = private unnamed_addr constant [15 x i8] c"vpvpv\09 %.2f \09\09\00", align 1
@.str.321 = private unnamed_addr constant [15 x i8] c"vtvtv\09 %.2f \09\09\00", align 1
@.str.322 = private unnamed_addr constant [15 x i8] c"vsumr\09 %.2f \09\09\00", align 1
@.str.323 = private unnamed_addr constant [15 x i8] c"vdotr\09 %.2f \09\09\00", align 1
@.str.324 = private unnamed_addr constant [14 x i8] c"vbor\09 %.2f \09\09\00", align 1
@temp_int = local_unnamed_addr global i32 0, align 4
@tt = local_unnamed_addr global [256 x [256 x float]] zeroinitializer, align 16
@str = private unnamed_addr constant [29 x i8] c"Loop \09 Time(Sec) \09 Checksum \00", align 1
@.memset_pattern.372 = private unnamed_addr constant [4 x float] [float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000, float 0x3FF0000100000000], align 16
@.memset_pattern.390 = private unnamed_addr constant [4 x float] [float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00], align 16
@.memset_pattern.464 = private unnamed_addr constant [4 x float] [float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01], align 16
@.memset_pattern.465 = private unnamed_addr constant [4 x float] [float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00], align 16
@.memset_pattern.479 = private unnamed_addr constant [4 x float] [float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000, float 0x3EB0C6F7A0000000], align 16
@.memset_pattern.490 = private unnamed_addr constant [4 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 16

; Function Attrs: nofree norecurse nosync nounwind ssp uwtable writeonly
define i32 @set1d(float* nocapture %0, float %1, i32 %2) local_unnamed_addr #0 {
  switch i32 %2, label %35 [
    i32 -1, label %17
    i32 -2, label %4
  ]

4:                                                ; preds = %3, %4
  %5 = phi i64 [ %14, %4 ], [ 0, %3 ]
  %6 = phi <4 x i64> [ %15, %4 ], [ <i64 0, i64 1, i64 2, i64 3>, %3 ]
  %7 = add nuw nsw <4 x i64> %6, <i64 1, i64 1, i64 1, i64 1>
  %8 = mul nuw nsw <4 x i64> %7, %7
  %9 = trunc <4 x i64> %8 to <4 x i32>
  %10 = sitofp <4 x i32> %9 to <4 x float>
  %11 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %10
  %12 = getelementptr inbounds float, float* %0, i64 %5
  %13 = bitcast float* %12 to <4 x float>*
  store <4 x float> %11, <4 x float>* %13, align 4, !tbaa !9
  %14 = add nuw i64 %5, 4
  %15 = add <4 x i64> %6, <i64 4, i64 4, i64 4, i64 4>
  %16 = icmp eq i64 %14, 32000
  br i1 %16, label %69, label %4, !llvm.loop !13

17:                                               ; preds = %3, %17
  %18 = phi i64 [ %32, %17 ], [ 0, %3 ]
  %19 = phi <4 x i64> [ %33, %17 ], [ <i64 0, i64 1, i64 2, i64 3>, %3 ]
  %20 = trunc <4 x i64> %19 to <4 x i32>
  %21 = add <4 x i32> %20, <i32 1, i32 1, i32 1, i32 1>
  %22 = trunc <4 x i64> %19 to <4 x i32>
  %23 = add <4 x i32> %22, <i32 5, i32 5, i32 5, i32 5>
  %24 = sitofp <4 x i32> %21 to <4 x float>
  %25 = sitofp <4 x i32> %23 to <4 x float>
  %26 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %24
  %27 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %25
  %28 = getelementptr inbounds float, float* %0, i64 %18
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> %26, <4 x float>* %29, align 4, !tbaa !9
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %27, <4 x float>* %31, align 4, !tbaa !9
  %32 = add nuw i64 %18, 8
  %33 = add <4 x i64> %19, <i64 8, i64 8, i64 8, i64 8>
  %34 = icmp eq i64 %32, 32000
  br i1 %34, label %69, label %17, !llvm.loop !16

35:                                               ; preds = %3
  %36 = sext i32 %2 to i64
  %37 = call i64 @llvm.smax.i64(i64 %36, i64 32000)
  %38 = add nsw i64 %37, -1
  %39 = udiv i64 %38, %36
  %40 = add nuw nsw i64 %39, 1
  %41 = icmp ugt i64 %39, 6
  %42 = icmp eq i32 %2, 1
  %43 = select i1 %41, i1 %42, i1 false
  br i1 %43, label %44, label %62

44:                                               ; preds = %35
  %45 = and i64 %40, -8
  %46 = mul i64 %45, %36
  %47 = insertelement <4 x float> poison, float %1, i32 0
  %48 = shufflevector <4 x float> %47, <4 x float> poison, <4 x i32> zeroinitializer
  %49 = insertelement <4 x float> poison, float %1, i32 0
  %50 = shufflevector <4 x float> %49, <4 x float> poison, <4 x i32> zeroinitializer
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i64 [ 0, %44 ], [ %58, %51 ]
  %53 = mul i64 %52, %36
  %54 = getelementptr inbounds float, float* %0, i64 %53
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %48, <4 x float>* %55, align 4, !tbaa !9
  %56 = getelementptr inbounds float, float* %54, i64 4
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> %50, <4 x float>* %57, align 4, !tbaa !9
  %58 = add nuw i64 %52, 8
  %59 = icmp eq i64 %58, %45
  br i1 %59, label %60, label %51, !llvm.loop !17

60:                                               ; preds = %51
  %61 = icmp eq i64 %40, %45
  br i1 %61, label %69, label %62

62:                                               ; preds = %35, %60
  %63 = phi i64 [ 0, %35 ], [ %46, %60 ]
  br label %64

64:                                               ; preds = %62, %64
  %65 = phi i64 [ %67, %64 ], [ %63, %62 ]
  %66 = getelementptr inbounds float, float* %0, i64 %65
  store float %1, float* %66, align 4, !tbaa !9
  %67 = add nsw i64 %65, %36
  %68 = icmp slt i64 %67, 32000
  br i1 %68, label %64, label %69, !llvm.loop !18

69:                                               ; preds = %4, %17, %64, %60
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nosync nounwind ssp uwtable writeonly
define i32 @set1ds(i32 %0, float* nocapture %1, float %2, i32 %3) local_unnamed_addr #0 {
  switch i32 %3, label %36 [
    i32 -1, label %18
    i32 -2, label %5
  ]

5:                                                ; preds = %4, %5
  %6 = phi i64 [ %15, %5 ], [ 0, %4 ]
  %7 = phi <4 x i64> [ %16, %5 ], [ <i64 0, i64 1, i64 2, i64 3>, %4 ]
  %8 = add nuw nsw <4 x i64> %7, <i64 1, i64 1, i64 1, i64 1>
  %9 = mul nuw nsw <4 x i64> %8, %8
  %10 = trunc <4 x i64> %9 to <4 x i32>
  %11 = sitofp <4 x i32> %10 to <4 x float>
  %12 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %11
  %13 = getelementptr inbounds float, float* %1, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  store <4 x float> %12, <4 x float>* %14, align 4, !tbaa !9
  %15 = add nuw i64 %6, 4
  %16 = add <4 x i64> %7, <i64 4, i64 4, i64 4, i64 4>
  %17 = icmp eq i64 %15, 32000
  br i1 %17, label %70, label %5, !llvm.loop !19

18:                                               ; preds = %4, %18
  %19 = phi i64 [ %33, %18 ], [ 0, %4 ]
  %20 = phi <4 x i64> [ %34, %18 ], [ <i64 0, i64 1, i64 2, i64 3>, %4 ]
  %21 = trunc <4 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %21, <i32 1, i32 1, i32 1, i32 1>
  %23 = trunc <4 x i64> %20 to <4 x i32>
  %24 = add <4 x i32> %23, <i32 5, i32 5, i32 5, i32 5>
  %25 = sitofp <4 x i32> %22 to <4 x float>
  %26 = sitofp <4 x i32> %24 to <4 x float>
  %27 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %25
  %28 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %26
  %29 = getelementptr inbounds float, float* %1, i64 %19
  %30 = bitcast float* %29 to <4 x float>*
  store <4 x float> %27, <4 x float>* %30, align 4, !tbaa !9
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %28, <4 x float>* %32, align 4, !tbaa !9
  %33 = add nuw i64 %19, 8
  %34 = add <4 x i64> %20, <i64 8, i64 8, i64 8, i64 8>
  %35 = icmp eq i64 %33, 32000
  br i1 %35, label %70, label %18, !llvm.loop !20

36:                                               ; preds = %4
  %37 = sext i32 %3 to i64
  %38 = call i64 @llvm.smax.i64(i64 %37, i64 32000)
  %39 = add nsw i64 %38, -1
  %40 = udiv i64 %39, %37
  %41 = add nuw nsw i64 %40, 1
  %42 = icmp ugt i64 %40, 6
  %43 = icmp eq i32 %3, 1
  %44 = select i1 %42, i1 %43, i1 false
  br i1 %44, label %45, label %63

45:                                               ; preds = %36
  %46 = and i64 %41, -8
  %47 = mul i64 %46, %37
  %48 = insertelement <4 x float> poison, float %2, i32 0
  %49 = shufflevector <4 x float> %48, <4 x float> poison, <4 x i32> zeroinitializer
  %50 = insertelement <4 x float> poison, float %2, i32 0
  %51 = shufflevector <4 x float> %50, <4 x float> poison, <4 x i32> zeroinitializer
  br label %52

52:                                               ; preds = %52, %45
  %53 = phi i64 [ 0, %45 ], [ %59, %52 ]
  %54 = mul i64 %53, %37
  %55 = getelementptr inbounds float, float* %1, i64 %54
  %56 = bitcast float* %55 to <4 x float>*
  store <4 x float> %49, <4 x float>* %56, align 4, !tbaa !9
  %57 = getelementptr inbounds float, float* %55, i64 4
  %58 = bitcast float* %57 to <4 x float>*
  store <4 x float> %51, <4 x float>* %58, align 4, !tbaa !9
  %59 = add nuw i64 %53, 8
  %60 = icmp eq i64 %59, %46
  br i1 %60, label %61, label %52, !llvm.loop !21

61:                                               ; preds = %52
  %62 = icmp eq i64 %41, %46
  br i1 %62, label %70, label %63

63:                                               ; preds = %36, %61
  %64 = phi i64 [ 0, %36 ], [ %47, %61 ]
  br label %65

65:                                               ; preds = %63, %65
  %66 = phi i64 [ %68, %65 ], [ %64, %63 ]
  %67 = getelementptr inbounds float, float* %1, i64 %66
  store float %2, float* %67, align 4, !tbaa !9
  %68 = add nsw i64 %66, %37
  %69 = icmp slt i64 %68, 32000
  br i1 %69, label %65, label %70, !llvm.loop !22

70:                                               ; preds = %5, %18, %65, %61
  ret i32 0
}

; Function Attrs: nofree norecurse nosync nounwind ssp uwtable writeonly
define i32 @set2d([256 x float]* nocapture %0, float %1, i32 %2) local_unnamed_addr #0 {
  switch i32 %2, label %4 [
    i32 -1, label %20
    i32 -2, label %159
  ]

4:                                                ; preds = %3
  %5 = sext i32 %2 to i64
  %6 = call i64 @llvm.smax.i64(i64 %5, i64 256)
  %7 = add nsw i64 %6, -1
  %8 = udiv i64 %7, %5
  %9 = add nuw nsw i64 %8, 1
  %10 = icmp ugt i64 %8, 6
  %11 = icmp eq i32 %2, 1
  %12 = select i1 %10, i1 %11, i1 false
  %13 = and i64 %9, -8
  %14 = mul i64 %13, %5
  %15 = insertelement <4 x float> poison, float %1, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> poison, <4 x i32> zeroinitializer
  %17 = insertelement <4 x float> poison, float %1, i32 0
  %18 = shufflevector <4 x float> %17, <4 x float> poison, <4 x i32> zeroinitializer
  %19 = icmp eq i64 %9, %13
  br label %299

20:                                               ; preds = %3, %20
  %21 = phi i64 [ %22, %20 ], [ 0, %3 ]
  %22 = add nuw nsw i64 %21, 1
  %23 = trunc i64 %22 to i32
  %24 = sitofp i32 %23 to float
  %25 = fdiv float 1.000000e+00, %24
  %26 = insertelement <4 x float> poison, float %25, i32 0
  %27 = shufflevector <4 x float> %26, <4 x float> poison, <4 x i32> zeroinitializer
  %28 = insertelement <4 x float> poison, float %25, i32 0
  %29 = shufflevector <4 x float> %28, <4 x float> poison, <4 x i32> zeroinitializer
  %30 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 0
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %27, <4 x float>* %31, align 4, !tbaa !9
  %32 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> %29, <4 x float>* %33, align 4, !tbaa !9
  %34 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 8
  %35 = bitcast float* %34 to <4 x float>*
  store <4 x float> %27, <4 x float>* %35, align 4, !tbaa !9
  %36 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 12
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> %29, <4 x float>* %37, align 4, !tbaa !9
  %38 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 16
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> %27, <4 x float>* %39, align 4, !tbaa !9
  %40 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 20
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %29, <4 x float>* %41, align 4, !tbaa !9
  %42 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 24
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %27, <4 x float>* %43, align 4, !tbaa !9
  %44 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 28
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> %29, <4 x float>* %45, align 4, !tbaa !9
  %46 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 32
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> %27, <4 x float>* %47, align 4, !tbaa !9
  %48 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 36
  %49 = bitcast float* %48 to <4 x float>*
  store <4 x float> %29, <4 x float>* %49, align 4, !tbaa !9
  %50 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 40
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> %27, <4 x float>* %51, align 4, !tbaa !9
  %52 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 44
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> %29, <4 x float>* %53, align 4, !tbaa !9
  %54 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 48
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %27, <4 x float>* %55, align 4, !tbaa !9
  %56 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 52
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> %29, <4 x float>* %57, align 4, !tbaa !9
  %58 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 56
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> %27, <4 x float>* %59, align 4, !tbaa !9
  %60 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 60
  %61 = bitcast float* %60 to <4 x float>*
  store <4 x float> %29, <4 x float>* %61, align 4, !tbaa !9
  %62 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 64
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> %27, <4 x float>* %63, align 4, !tbaa !9
  %64 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 68
  %65 = bitcast float* %64 to <4 x float>*
  store <4 x float> %29, <4 x float>* %65, align 4, !tbaa !9
  %66 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 72
  %67 = bitcast float* %66 to <4 x float>*
  store <4 x float> %27, <4 x float>* %67, align 4, !tbaa !9
  %68 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 76
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> %29, <4 x float>* %69, align 4, !tbaa !9
  %70 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 80
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> %27, <4 x float>* %71, align 4, !tbaa !9
  %72 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 84
  %73 = bitcast float* %72 to <4 x float>*
  store <4 x float> %29, <4 x float>* %73, align 4, !tbaa !9
  %74 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 88
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> %27, <4 x float>* %75, align 4, !tbaa !9
  %76 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 92
  %77 = bitcast float* %76 to <4 x float>*
  store <4 x float> %29, <4 x float>* %77, align 4, !tbaa !9
  %78 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 96
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> %27, <4 x float>* %79, align 4, !tbaa !9
  %80 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 100
  %81 = bitcast float* %80 to <4 x float>*
  store <4 x float> %29, <4 x float>* %81, align 4, !tbaa !9
  %82 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 104
  %83 = bitcast float* %82 to <4 x float>*
  store <4 x float> %27, <4 x float>* %83, align 4, !tbaa !9
  %84 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 108
  %85 = bitcast float* %84 to <4 x float>*
  store <4 x float> %29, <4 x float>* %85, align 4, !tbaa !9
  %86 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 112
  %87 = bitcast float* %86 to <4 x float>*
  store <4 x float> %27, <4 x float>* %87, align 4, !tbaa !9
  %88 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 116
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> %29, <4 x float>* %89, align 4, !tbaa !9
  %90 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 120
  %91 = bitcast float* %90 to <4 x float>*
  store <4 x float> %27, <4 x float>* %91, align 4, !tbaa !9
  %92 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 124
  %93 = bitcast float* %92 to <4 x float>*
  store <4 x float> %29, <4 x float>* %93, align 4, !tbaa !9
  %94 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 128
  %95 = bitcast float* %94 to <4 x float>*
  store <4 x float> %27, <4 x float>* %95, align 4, !tbaa !9
  %96 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 132
  %97 = bitcast float* %96 to <4 x float>*
  store <4 x float> %29, <4 x float>* %97, align 4, !tbaa !9
  %98 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 136
  %99 = bitcast float* %98 to <4 x float>*
  store <4 x float> %27, <4 x float>* %99, align 4, !tbaa !9
  %100 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 140
  %101 = bitcast float* %100 to <4 x float>*
  store <4 x float> %29, <4 x float>* %101, align 4, !tbaa !9
  %102 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 144
  %103 = bitcast float* %102 to <4 x float>*
  store <4 x float> %27, <4 x float>* %103, align 4, !tbaa !9
  %104 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 148
  %105 = bitcast float* %104 to <4 x float>*
  store <4 x float> %29, <4 x float>* %105, align 4, !tbaa !9
  %106 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 152
  %107 = bitcast float* %106 to <4 x float>*
  store <4 x float> %27, <4 x float>* %107, align 4, !tbaa !9
  %108 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 156
  %109 = bitcast float* %108 to <4 x float>*
  store <4 x float> %29, <4 x float>* %109, align 4, !tbaa !9
  %110 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 160
  %111 = bitcast float* %110 to <4 x float>*
  store <4 x float> %27, <4 x float>* %111, align 4, !tbaa !9
  %112 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 164
  %113 = bitcast float* %112 to <4 x float>*
  store <4 x float> %29, <4 x float>* %113, align 4, !tbaa !9
  %114 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 168
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %27, <4 x float>* %115, align 4, !tbaa !9
  %116 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 172
  %117 = bitcast float* %116 to <4 x float>*
  store <4 x float> %29, <4 x float>* %117, align 4, !tbaa !9
  %118 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 176
  %119 = bitcast float* %118 to <4 x float>*
  store <4 x float> %27, <4 x float>* %119, align 4, !tbaa !9
  %120 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 180
  %121 = bitcast float* %120 to <4 x float>*
  store <4 x float> %29, <4 x float>* %121, align 4, !tbaa !9
  %122 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 184
  %123 = bitcast float* %122 to <4 x float>*
  store <4 x float> %27, <4 x float>* %123, align 4, !tbaa !9
  %124 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 188
  %125 = bitcast float* %124 to <4 x float>*
  store <4 x float> %29, <4 x float>* %125, align 4, !tbaa !9
  %126 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 192
  %127 = bitcast float* %126 to <4 x float>*
  store <4 x float> %27, <4 x float>* %127, align 4, !tbaa !9
  %128 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 196
  %129 = bitcast float* %128 to <4 x float>*
  store <4 x float> %29, <4 x float>* %129, align 4, !tbaa !9
  %130 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 200
  %131 = bitcast float* %130 to <4 x float>*
  store <4 x float> %27, <4 x float>* %131, align 4, !tbaa !9
  %132 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 204
  %133 = bitcast float* %132 to <4 x float>*
  store <4 x float> %29, <4 x float>* %133, align 4, !tbaa !9
  %134 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 208
  %135 = bitcast float* %134 to <4 x float>*
  store <4 x float> %27, <4 x float>* %135, align 4, !tbaa !9
  %136 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 212
  %137 = bitcast float* %136 to <4 x float>*
  store <4 x float> %29, <4 x float>* %137, align 4, !tbaa !9
  %138 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 216
  %139 = bitcast float* %138 to <4 x float>*
  store <4 x float> %27, <4 x float>* %139, align 4, !tbaa !9
  %140 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 220
  %141 = bitcast float* %140 to <4 x float>*
  store <4 x float> %29, <4 x float>* %141, align 4, !tbaa !9
  %142 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 224
  %143 = bitcast float* %142 to <4 x float>*
  store <4 x float> %27, <4 x float>* %143, align 4, !tbaa !9
  %144 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 228
  %145 = bitcast float* %144 to <4 x float>*
  store <4 x float> %29, <4 x float>* %145, align 4, !tbaa !9
  %146 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 232
  %147 = bitcast float* %146 to <4 x float>*
  store <4 x float> %27, <4 x float>* %147, align 4, !tbaa !9
  %148 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 236
  %149 = bitcast float* %148 to <4 x float>*
  store <4 x float> %29, <4 x float>* %149, align 4, !tbaa !9
  %150 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 240
  %151 = bitcast float* %150 to <4 x float>*
  store <4 x float> %27, <4 x float>* %151, align 4, !tbaa !9
  %152 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 244
  %153 = bitcast float* %152 to <4 x float>*
  store <4 x float> %29, <4 x float>* %153, align 4, !tbaa !9
  %154 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 248
  %155 = bitcast float* %154 to <4 x float>*
  store <4 x float> %27, <4 x float>* %155, align 4, !tbaa !9
  %156 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %21, i64 252
  %157 = bitcast float* %156 to <4 x float>*
  store <4 x float> %29, <4 x float>* %157, align 4, !tbaa !9
  %158 = icmp eq i64 %22, 256
  br i1 %158, label %321, label %20, !llvm.loop !23

159:                                              ; preds = %3, %159
  %160 = phi i64 [ %161, %159 ], [ 0, %3 ]
  %161 = add nuw nsw i64 %160, 1
  %162 = trunc i64 %161 to i32
  %163 = mul nsw i32 %162, %162
  %164 = sitofp i32 %163 to float
  %165 = fdiv float 1.000000e+00, %164
  %166 = insertelement <4 x float> poison, float %165, i32 0
  %167 = shufflevector <4 x float> %166, <4 x float> poison, <4 x i32> zeroinitializer
  %168 = insertelement <4 x float> poison, float %165, i32 0
  %169 = shufflevector <4 x float> %168, <4 x float> poison, <4 x i32> zeroinitializer
  %170 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 0
  %171 = bitcast float* %170 to <4 x float>*
  store <4 x float> %167, <4 x float>* %171, align 4, !tbaa !9
  %172 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 4
  %173 = bitcast float* %172 to <4 x float>*
  store <4 x float> %169, <4 x float>* %173, align 4, !tbaa !9
  %174 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 8
  %175 = bitcast float* %174 to <4 x float>*
  store <4 x float> %167, <4 x float>* %175, align 4, !tbaa !9
  %176 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 12
  %177 = bitcast float* %176 to <4 x float>*
  store <4 x float> %169, <4 x float>* %177, align 4, !tbaa !9
  %178 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 16
  %179 = bitcast float* %178 to <4 x float>*
  store <4 x float> %167, <4 x float>* %179, align 4, !tbaa !9
  %180 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 20
  %181 = bitcast float* %180 to <4 x float>*
  store <4 x float> %169, <4 x float>* %181, align 4, !tbaa !9
  %182 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 24
  %183 = bitcast float* %182 to <4 x float>*
  store <4 x float> %167, <4 x float>* %183, align 4, !tbaa !9
  %184 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 28
  %185 = bitcast float* %184 to <4 x float>*
  store <4 x float> %169, <4 x float>* %185, align 4, !tbaa !9
  %186 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 32
  %187 = bitcast float* %186 to <4 x float>*
  store <4 x float> %167, <4 x float>* %187, align 4, !tbaa !9
  %188 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 36
  %189 = bitcast float* %188 to <4 x float>*
  store <4 x float> %169, <4 x float>* %189, align 4, !tbaa !9
  %190 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 40
  %191 = bitcast float* %190 to <4 x float>*
  store <4 x float> %167, <4 x float>* %191, align 4, !tbaa !9
  %192 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 44
  %193 = bitcast float* %192 to <4 x float>*
  store <4 x float> %169, <4 x float>* %193, align 4, !tbaa !9
  %194 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 48
  %195 = bitcast float* %194 to <4 x float>*
  store <4 x float> %167, <4 x float>* %195, align 4, !tbaa !9
  %196 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 52
  %197 = bitcast float* %196 to <4 x float>*
  store <4 x float> %169, <4 x float>* %197, align 4, !tbaa !9
  %198 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 56
  %199 = bitcast float* %198 to <4 x float>*
  store <4 x float> %167, <4 x float>* %199, align 4, !tbaa !9
  %200 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 60
  %201 = bitcast float* %200 to <4 x float>*
  store <4 x float> %169, <4 x float>* %201, align 4, !tbaa !9
  %202 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 64
  %203 = bitcast float* %202 to <4 x float>*
  store <4 x float> %167, <4 x float>* %203, align 4, !tbaa !9
  %204 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 68
  %205 = bitcast float* %204 to <4 x float>*
  store <4 x float> %169, <4 x float>* %205, align 4, !tbaa !9
  %206 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 72
  %207 = bitcast float* %206 to <4 x float>*
  store <4 x float> %167, <4 x float>* %207, align 4, !tbaa !9
  %208 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 76
  %209 = bitcast float* %208 to <4 x float>*
  store <4 x float> %169, <4 x float>* %209, align 4, !tbaa !9
  %210 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 80
  %211 = bitcast float* %210 to <4 x float>*
  store <4 x float> %167, <4 x float>* %211, align 4, !tbaa !9
  %212 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 84
  %213 = bitcast float* %212 to <4 x float>*
  store <4 x float> %169, <4 x float>* %213, align 4, !tbaa !9
  %214 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 88
  %215 = bitcast float* %214 to <4 x float>*
  store <4 x float> %167, <4 x float>* %215, align 4, !tbaa !9
  %216 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 92
  %217 = bitcast float* %216 to <4 x float>*
  store <4 x float> %169, <4 x float>* %217, align 4, !tbaa !9
  %218 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 96
  %219 = bitcast float* %218 to <4 x float>*
  store <4 x float> %167, <4 x float>* %219, align 4, !tbaa !9
  %220 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 100
  %221 = bitcast float* %220 to <4 x float>*
  store <4 x float> %169, <4 x float>* %221, align 4, !tbaa !9
  %222 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 104
  %223 = bitcast float* %222 to <4 x float>*
  store <4 x float> %167, <4 x float>* %223, align 4, !tbaa !9
  %224 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 108
  %225 = bitcast float* %224 to <4 x float>*
  store <4 x float> %169, <4 x float>* %225, align 4, !tbaa !9
  %226 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 112
  %227 = bitcast float* %226 to <4 x float>*
  store <4 x float> %167, <4 x float>* %227, align 4, !tbaa !9
  %228 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 116
  %229 = bitcast float* %228 to <4 x float>*
  store <4 x float> %169, <4 x float>* %229, align 4, !tbaa !9
  %230 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 120
  %231 = bitcast float* %230 to <4 x float>*
  store <4 x float> %167, <4 x float>* %231, align 4, !tbaa !9
  %232 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 124
  %233 = bitcast float* %232 to <4 x float>*
  store <4 x float> %169, <4 x float>* %233, align 4, !tbaa !9
  %234 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 128
  %235 = bitcast float* %234 to <4 x float>*
  store <4 x float> %167, <4 x float>* %235, align 4, !tbaa !9
  %236 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 132
  %237 = bitcast float* %236 to <4 x float>*
  store <4 x float> %169, <4 x float>* %237, align 4, !tbaa !9
  %238 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 136
  %239 = bitcast float* %238 to <4 x float>*
  store <4 x float> %167, <4 x float>* %239, align 4, !tbaa !9
  %240 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 140
  %241 = bitcast float* %240 to <4 x float>*
  store <4 x float> %169, <4 x float>* %241, align 4, !tbaa !9
  %242 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 144
  %243 = bitcast float* %242 to <4 x float>*
  store <4 x float> %167, <4 x float>* %243, align 4, !tbaa !9
  %244 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 148
  %245 = bitcast float* %244 to <4 x float>*
  store <4 x float> %169, <4 x float>* %245, align 4, !tbaa !9
  %246 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 152
  %247 = bitcast float* %246 to <4 x float>*
  store <4 x float> %167, <4 x float>* %247, align 4, !tbaa !9
  %248 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 156
  %249 = bitcast float* %248 to <4 x float>*
  store <4 x float> %169, <4 x float>* %249, align 4, !tbaa !9
  %250 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 160
  %251 = bitcast float* %250 to <4 x float>*
  store <4 x float> %167, <4 x float>* %251, align 4, !tbaa !9
  %252 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 164
  %253 = bitcast float* %252 to <4 x float>*
  store <4 x float> %169, <4 x float>* %253, align 4, !tbaa !9
  %254 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 168
  %255 = bitcast float* %254 to <4 x float>*
  store <4 x float> %167, <4 x float>* %255, align 4, !tbaa !9
  %256 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 172
  %257 = bitcast float* %256 to <4 x float>*
  store <4 x float> %169, <4 x float>* %257, align 4, !tbaa !9
  %258 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 176
  %259 = bitcast float* %258 to <4 x float>*
  store <4 x float> %167, <4 x float>* %259, align 4, !tbaa !9
  %260 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 180
  %261 = bitcast float* %260 to <4 x float>*
  store <4 x float> %169, <4 x float>* %261, align 4, !tbaa !9
  %262 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 184
  %263 = bitcast float* %262 to <4 x float>*
  store <4 x float> %167, <4 x float>* %263, align 4, !tbaa !9
  %264 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 188
  %265 = bitcast float* %264 to <4 x float>*
  store <4 x float> %169, <4 x float>* %265, align 4, !tbaa !9
  %266 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 192
  %267 = bitcast float* %266 to <4 x float>*
  store <4 x float> %167, <4 x float>* %267, align 4, !tbaa !9
  %268 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 196
  %269 = bitcast float* %268 to <4 x float>*
  store <4 x float> %169, <4 x float>* %269, align 4, !tbaa !9
  %270 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 200
  %271 = bitcast float* %270 to <4 x float>*
  store <4 x float> %167, <4 x float>* %271, align 4, !tbaa !9
  %272 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 204
  %273 = bitcast float* %272 to <4 x float>*
  store <4 x float> %169, <4 x float>* %273, align 4, !tbaa !9
  %274 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 208
  %275 = bitcast float* %274 to <4 x float>*
  store <4 x float> %167, <4 x float>* %275, align 4, !tbaa !9
  %276 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 212
  %277 = bitcast float* %276 to <4 x float>*
  store <4 x float> %169, <4 x float>* %277, align 4, !tbaa !9
  %278 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 216
  %279 = bitcast float* %278 to <4 x float>*
  store <4 x float> %167, <4 x float>* %279, align 4, !tbaa !9
  %280 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 220
  %281 = bitcast float* %280 to <4 x float>*
  store <4 x float> %169, <4 x float>* %281, align 4, !tbaa !9
  %282 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 224
  %283 = bitcast float* %282 to <4 x float>*
  store <4 x float> %167, <4 x float>* %283, align 4, !tbaa !9
  %284 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 228
  %285 = bitcast float* %284 to <4 x float>*
  store <4 x float> %169, <4 x float>* %285, align 4, !tbaa !9
  %286 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 232
  %287 = bitcast float* %286 to <4 x float>*
  store <4 x float> %167, <4 x float>* %287, align 4, !tbaa !9
  %288 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 236
  %289 = bitcast float* %288 to <4 x float>*
  store <4 x float> %169, <4 x float>* %289, align 4, !tbaa !9
  %290 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 240
  %291 = bitcast float* %290 to <4 x float>*
  store <4 x float> %167, <4 x float>* %291, align 4, !tbaa !9
  %292 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 244
  %293 = bitcast float* %292 to <4 x float>*
  store <4 x float> %169, <4 x float>* %293, align 4, !tbaa !9
  %294 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 248
  %295 = bitcast float* %294 to <4 x float>*
  store <4 x float> %167, <4 x float>* %295, align 4, !tbaa !9
  %296 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %160, i64 252
  %297 = bitcast float* %296 to <4 x float>*
  store <4 x float> %169, <4 x float>* %297, align 4, !tbaa !9
  %298 = icmp eq i64 %161, 256
  br i1 %298, label %321, label %159, !llvm.loop !24

299:                                              ; preds = %4, %313
  %300 = phi i64 [ 0, %4 ], [ %314, %313 ]
  br i1 %12, label %301, label %311

301:                                              ; preds = %299, %301
  %302 = phi i64 [ %308, %301 ], [ 0, %299 ]
  %303 = mul i64 %302, %5
  %304 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %300, i64 %303
  %305 = bitcast float* %304 to <4 x float>*
  store <4 x float> %16, <4 x float>* %305, align 4, !tbaa !9
  %306 = getelementptr inbounds float, float* %304, i64 4
  %307 = bitcast float* %306 to <4 x float>*
  store <4 x float> %18, <4 x float>* %307, align 4, !tbaa !9
  %308 = add nuw i64 %302, 8
  %309 = icmp eq i64 %308, %13
  br i1 %309, label %310, label %301, !llvm.loop !25

310:                                              ; preds = %301
  br i1 %19, label %313, label %311

311:                                              ; preds = %299, %310
  %312 = phi i64 [ 0, %299 ], [ %14, %310 ]
  br label %316

313:                                              ; preds = %316, %310
  %314 = add nuw nsw i64 %300, 1
  %315 = icmp eq i64 %314, 256
  br i1 %315, label %321, label %299, !llvm.loop !26

316:                                              ; preds = %311, %316
  %317 = phi i64 [ %319, %316 ], [ %312, %311 ]
  %318 = getelementptr inbounds [256 x float], [256 x float]* %0, i64 %300, i64 %317
  store float %1, float* %318, align 4, !tbaa !9
  %319 = add nsw i64 %317, %5
  %320 = icmp slt i64 %319, 256
  br i1 %320, label %316, label %313, !llvm.loop !27

321:                                              ; preds = %159, %20, %313
  ret i32 0
}

; Function Attrs: nofree norecurse nosync nounwind readonly ssp uwtable
define float @sum1d(float* nocapture readonly %0) local_unnamed_addr #2 {
  br label %3

2:                                                ; preds = %3
  ret float %8

3:                                                ; preds = %1, %3
  %4 = phi i64 [ 0, %1 ], [ %9, %3 ]
  %5 = phi float [ 0.000000e+00, %1 ], [ %8, %3 ]
  %6 = getelementptr inbounds float, float* %0, i64 %4
  %7 = load float, float* %6, align 4, !tbaa !9
  %8 = fadd float %5, %7
  %9 = add nuw nsw i64 %4, 1
  %10 = icmp eq i64 %9, 32000
  br i1 %10, label %2, label %3, !llvm.loop !28
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind readnone ssp uwtable willreturn
define i32 @s471s() local_unnamed_addr #3 {
  ret i32 0
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind readnone ssp uwtable willreturn
define float @f(float %0, float %1) local_unnamed_addr #3 {
  %3 = fmul float %0, %1
  ret float %3
}

; Function Attrs: nofree nounwind ssp uwtable
define void @check(i32 %0) local_unnamed_addr #4 {
  br label %2

2:                                                ; preds = %1, %2
  %3 = phi i64 [ 0, %1 ], [ %24, %2 ]
  %4 = phi float [ 0.000000e+00, %1 ], [ %23, %2 ]
  %5 = phi float [ 0.000000e+00, %1 ], [ %20, %2 ]
  %6 = phi float [ 0.000000e+00, %1 ], [ %17, %2 ]
  %7 = phi float [ 0.000000e+00, %1 ], [ %14, %2 ]
  %8 = phi float [ 0.000000e+00, %1 ], [ %11, %2 ]
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3
  %10 = load float, float* %9, align 4, !tbaa !9
  %11 = fadd float %8, %10
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3
  %13 = load float, float* %12, align 4, !tbaa !9
  %14 = fadd float %7, %13
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %6, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %5, %19
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3
  %22 = load float, float* %21, align 4, !tbaa !9
  %23 = fadd float %4, %22
  %24 = add nuw nsw i64 %3, 1
  %25 = icmp eq i64 %24, 32000
  br i1 %25, label %26, label %2, !llvm.loop !29

26:                                               ; preds = %2, %31
  %27 = phi i64 [ %32, %31 ], [ 0, %2 ]
  %28 = phi float [ %47, %31 ], [ 0.000000e+00, %2 ]
  %29 = phi float [ %44, %31 ], [ 0.000000e+00, %2 ]
  %30 = phi float [ %41, %31 ], [ 0.000000e+00, %2 ]
  br label %34

31:                                               ; preds = %34
  %32 = add nuw nsw i64 %27, 1
  %33 = icmp eq i64 %32, 256
  br i1 %33, label %51, label %26, !llvm.loop !30

34:                                               ; preds = %26, %34
  %35 = phi i64 [ 0, %26 ], [ %48, %34 ]
  %36 = phi float [ %28, %26 ], [ %47, %34 ]
  %37 = phi float [ %29, %26 ], [ %44, %34 ]
  %38 = phi float [ %30, %26 ], [ %41, %34 ]
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %27, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !9
  %41 = fadd float %38, %40
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %27, i64 %35
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %37, %43
  %45 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %27, i64 %35
  %46 = load float, float* %45, align 4, !tbaa !9
  %47 = fadd float %36, %46
  %48 = add nuw nsw i64 %35, 1
  %49 = icmp eq i64 %48, 256
  br i1 %49, label %31, label %34, !llvm.loop !31

50:                                               ; preds = %51
  switch i32 %0, label %92 [
    i32 1, label %88
    i32 2, label %59
    i32 3, label %60
    i32 4, label %61
    i32 5, label %62
    i32 11, label %63
    i32 22, label %64
    i32 33, label %65
    i32 0, label %66
    i32 12, label %67
    i32 25, label %69
    i32 13, label %71
    i32 123, label %73
    i32 1122, label %76
    i32 112233, label %78
    i32 111, label %81
    i32 -1, label %83
    i32 -12, label %85
  ]

51:                                               ; preds = %31, %51
  %52 = phi i64 [ %57, %51 ], [ 0, %31 ]
  %53 = phi float [ %56, %51 ], [ 0.000000e+00, %31 ]
  %54 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %52
  %55 = load float, float* %54, align 4, !tbaa !9
  %56 = fadd float %53, %55
  %57 = add nuw nsw i64 %52, 1
  %58 = icmp eq i64 %57, 65536
  br i1 %58, label %50, label %51, !llvm.loop !32

59:                                               ; preds = %50
  br label %88

60:                                               ; preds = %50
  br label %88

61:                                               ; preds = %50
  br label %88

62:                                               ; preds = %50
  br label %88

63:                                               ; preds = %50
  br label %88

64:                                               ; preds = %50
  br label %88

65:                                               ; preds = %50
  br label %88

66:                                               ; preds = %50
  br label %88

67:                                               ; preds = %50
  %68 = fadd float %11, %14
  br label %88

69:                                               ; preds = %50
  %70 = fadd float %14, %23
  br label %88

71:                                               ; preds = %50
  %72 = fadd float %11, %17
  br label %88

73:                                               ; preds = %50
  %74 = fadd float %11, %14
  %75 = fadd float %74, %17
  br label %88

76:                                               ; preds = %50
  %77 = fadd float %41, %44
  br label %88

78:                                               ; preds = %50
  %79 = fadd float %41, %44
  %80 = fadd float %79, %47
  br label %88

81:                                               ; preds = %50
  %82 = fadd float %11, %41
  br label %88

83:                                               ; preds = %50
  %84 = load float, float* @temp, align 4, !tbaa !9
  br label %88

85:                                               ; preds = %50
  %86 = load float, float* @temp, align 4, !tbaa !9
  %87 = fadd float %14, %86
  br label %88

88:                                               ; preds = %50, %85, %59, %60, %61, %62, %63, %64, %65, %66, %67, %69, %71, %73, %76, %78, %81, %83
  %89 = phi float [ %84, %83 ], [ %82, %81 ], [ %80, %78 ], [ %77, %76 ], [ %75, %73 ], [ %72, %71 ], [ %70, %69 ], [ %68, %67 ], [ %56, %66 ], [ %47, %65 ], [ %44, %64 ], [ %41, %63 ], [ %23, %62 ], [ %20, %61 ], [ %17, %60 ], [ %14, %59 ], [ %87, %85 ], [ %11, %50 ]
  %90 = fpext float %89 to double
  %91 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %90)
  br label %92

92:                                               ; preds = %88, %50
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind ssp uwtable
define i32 @init(i8* readonly %0) local_unnamed_addr #4 {
  %2 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %60

4:                                                ; preds = %1, %4
  %5 = phi i64 [ %53, %4 ], [ 0, %1 ]
  %6 = phi <4 x i64> [ %54, %4 ], [ <i64 0, i64 1, i64 2, i64 3>, %1 ]
  %7 = phi <4 x i32> [ %55, %4 ], [ <i32 0, i32 1, i32 2, i32 3>, %1 ]
  %8 = phi <4 x i32> [ %56, %4 ], [ <i32 0, i32 1, i32 2, i32 3>, %1 ]
  %9 = phi <4 x i32> [ %57, %4 ], [ <i32 0, i32 1, i32 2, i32 3>, %1 ]
  %10 = phi <4 x i32> [ %58, %4 ], [ <i32 0, i32 1, i32 2, i32 3>, %1 ]
  %11 = trunc <4 x i64> %6 to <4 x i32>
  %12 = add <4 x i32> %11, <i32 1, i32 1, i32 1, i32 1>
  %13 = trunc <4 x i64> %6 to <4 x i32>
  %14 = add <4 x i32> %13, <i32 5, i32 5, i32 5, i32 5>
  %15 = sitofp <4 x i32> %12 to <4 x float>
  %16 = sitofp <4 x i32> %14 to <4 x float>
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @X, i64 0, i64 %5
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> %15, <4 x float>* %18, align 16, !tbaa !9
  %19 = getelementptr inbounds float, float* %17, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  store <4 x float> %16, <4 x float>* %20, align 16, !tbaa !9
  %21 = add <4 x i32> %7, <i32 2, i32 2, i32 2, i32 2>
  %22 = add <4 x i32> %7, <i32 6, i32 6, i32 6, i32 6>
  %23 = sitofp <4 x i32> %21 to <4 x float>
  %24 = sitofp <4 x i32> %22 to <4 x float>
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @Y, i64 0, i64 %5
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> %23, <4 x float>* %26, align 16, !tbaa !9
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> %24, <4 x float>* %28, align 16, !tbaa !9
  %29 = add <4 x i32> %8, <i32 3, i32 3, i32 3, i32 3>
  %30 = add <4 x i32> %8, <i32 7, i32 7, i32 7, i32 7>
  %31 = sitofp <4 x i32> %29 to <4 x float>
  %32 = sitofp <4 x i32> %30 to <4 x float>
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @Z, i64 0, i64 %5
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %31, <4 x float>* %34, align 16, !tbaa !9
  %35 = getelementptr inbounds float, float* %33, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %32, <4 x float>* %36, align 16, !tbaa !9
  %37 = add <4 x i32> %9, <i32 4, i32 4, i32 4, i32 4>
  %38 = add <4 x i32> %9, <i32 8, i32 8, i32 8, i32 8>
  %39 = sitofp <4 x i32> %37 to <4 x float>
  %40 = sitofp <4 x i32> %38 to <4 x float>
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @U, i64 0, i64 %5
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> %39, <4 x float>* %42, align 16, !tbaa !9
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> %40, <4 x float>* %44, align 16, !tbaa !9
  %45 = add <4 x i32> %10, <i32 5, i32 5, i32 5, i32 5>
  %46 = add <4 x i32> %10, <i32 9, i32 9, i32 9, i32 9>
  %47 = sitofp <4 x i32> %45 to <4 x float>
  %48 = sitofp <4 x i32> %46 to <4 x float>
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @V, i64 0, i64 %5
  %50 = bitcast float* %49 to <4 x float>*
  store <4 x float> %47, <4 x float>* %50, align 16, !tbaa !9
  %51 = getelementptr inbounds float, float* %49, i64 4
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> %48, <4 x float>* %52, align 16, !tbaa !9
  %53 = add nuw i64 %5, 8
  %54 = add <4 x i64> %6, <i64 8, i64 8, i64 8, i64 8>
  %55 = add <4 x i32> %7, <i32 8, i32 8, i32 8, i32 8>
  %56 = add <4 x i32> %8, <i32 8, i32 8, i32 8, i32 8>
  %57 = add <4 x i32> %9, <i32 8, i32 8, i32 8, i32 8>
  %58 = add <4 x i32> %10, <i32 8, i32 8, i32 8, i32 8>
  %59 = icmp eq i64 %53, 32000
  br i1 %59, label %6516, label %4, !llvm.loop !33

60:                                               ; preds = %1
  %61 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0))
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %116

63:                                               ; preds = %60
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %64

64:                                               ; preds = %64, %63
  %65 = phi i64 [ 0, %63 ], [ %74, %64 ]
  %66 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %63 ], [ %75, %64 ]
  %67 = add nuw nsw <4 x i64> %66, <i64 1, i64 1, i64 1, i64 1>
  %68 = mul nuw nsw <4 x i64> %67, %67
  %69 = trunc <4 x i64> %68 to <4 x i32>
  %70 = sitofp <4 x i32> %69 to <4 x float>
  %71 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %70
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %65
  %73 = bitcast float* %72 to <4 x float>*
  store <4 x float> %71, <4 x float>* %73, align 16, !tbaa !9
  %74 = add nuw i64 %65, 4
  %75 = add <4 x i64> %66, <i64 4, i64 4, i64 4, i64 4>
  %76 = icmp eq i64 %74, 32000
  br i1 %76, label %77, label %64, !llvm.loop !34

77:                                               ; preds = %64, %77
  %78 = phi i64 [ %87, %77 ], [ 0, %64 ]
  %79 = phi <4 x i64> [ %88, %77 ], [ <i64 0, i64 1, i64 2, i64 3>, %64 ]
  %80 = add nuw nsw <4 x i64> %79, <i64 1, i64 1, i64 1, i64 1>
  %81 = mul nuw nsw <4 x i64> %80, %80
  %82 = trunc <4 x i64> %81 to <4 x i32>
  %83 = sitofp <4 x i32> %82 to <4 x float>
  %84 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %83
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %78
  %86 = bitcast float* %85 to <4 x float>*
  store <4 x float> %84, <4 x float>* %86, align 16, !tbaa !9
  %87 = add nuw i64 %78, 4
  %88 = add <4 x i64> %79, <i64 4, i64 4, i64 4, i64 4>
  %89 = icmp eq i64 %87, 32000
  br i1 %89, label %90, label %77, !llvm.loop !35

90:                                               ; preds = %77, %90
  %91 = phi i64 [ %100, %90 ], [ 0, %77 ]
  %92 = phi <4 x i64> [ %101, %90 ], [ <i64 0, i64 1, i64 2, i64 3>, %77 ]
  %93 = add nuw nsw <4 x i64> %92, <i64 1, i64 1, i64 1, i64 1>
  %94 = mul nuw nsw <4 x i64> %93, %93
  %95 = trunc <4 x i64> %94 to <4 x i32>
  %96 = sitofp <4 x i32> %95 to <4 x float>
  %97 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %96
  %98 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %91
  %99 = bitcast float* %98 to <4 x float>*
  store <4 x float> %97, <4 x float>* %99, align 16, !tbaa !9
  %100 = add nuw i64 %91, 4
  %101 = add <4 x i64> %92, <i64 4, i64 4, i64 4, i64 4>
  %102 = icmp eq i64 %100, 32000
  br i1 %102, label %103, label %90, !llvm.loop !36

103:                                              ; preds = %90, %103
  %104 = phi i64 [ %113, %103 ], [ 0, %90 ]
  %105 = phi <4 x i64> [ %114, %103 ], [ <i64 0, i64 1, i64 2, i64 3>, %90 ]
  %106 = add nuw nsw <4 x i64> %105, <i64 1, i64 1, i64 1, i64 1>
  %107 = mul nuw nsw <4 x i64> %106, %106
  %108 = trunc <4 x i64> %107 to <4 x i32>
  %109 = sitofp <4 x i32> %108 to <4 x float>
  %110 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %109
  %111 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %104
  %112 = bitcast float* %111 to <4 x float>*
  store <4 x float> %110, <4 x float>* %112, align 16, !tbaa !9
  %113 = add nuw i64 %104, 4
  %114 = add <4 x i64> %105, <i64 4, i64 4, i64 4, i64 4>
  %115 = icmp eq i64 %113, 32000
  br i1 %115, label %6516, label %103, !llvm.loop !37

116:                                              ; preds = %60
  %117 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %133

119:                                              ; preds = %116
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %120

120:                                              ; preds = %120, %119
  %121 = phi i64 [ 0, %119 ], [ %130, %120 ]
  %122 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %119 ], [ %131, %120 ]
  %123 = add nuw nsw <4 x i64> %122, <i64 1, i64 1, i64 1, i64 1>
  %124 = mul nuw nsw <4 x i64> %123, %123
  %125 = trunc <4 x i64> %124 to <4 x i32>
  %126 = sitofp <4 x i32> %125 to <4 x float>
  %127 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %126
  %128 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %121
  %129 = bitcast float* %128 to <4 x float>*
  store <4 x float> %127, <4 x float>* %129, align 16, !tbaa !9
  %130 = add nuw i64 %121, 4
  %131 = add <4 x i64> %122, <i64 4, i64 4, i64 4, i64 4>
  %132 = icmp eq i64 %130, 32000
  br i1 %132, label %6516, label %120, !llvm.loop !38

133:                                              ; preds = %116
  %134 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %150

136:                                              ; preds = %133
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %137

137:                                              ; preds = %137, %136
  %138 = phi i64 [ 0, %136 ], [ %147, %137 ]
  %139 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %136 ], [ %148, %137 ]
  %140 = add nuw nsw <4 x i64> %139, <i64 1, i64 1, i64 1, i64 1>
  %141 = mul nuw nsw <4 x i64> %140, %140
  %142 = trunc <4 x i64> %141 to <4 x i32>
  %143 = sitofp <4 x i32> %142 to <4 x float>
  %144 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %143
  %145 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %138
  %146 = bitcast float* %145 to <4 x float>*
  store <4 x float> %144, <4 x float>* %146, align 16, !tbaa !9
  %147 = add nuw i64 %138, 4
  %148 = add <4 x i64> %139, <i64 4, i64 4, i64 4, i64 4>
  %149 = icmp eq i64 %147, 32000
  br i1 %149, label %6516, label %137, !llvm.loop !39

150:                                              ; preds = %133
  %151 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %432

153:                                              ; preds = %150, %153
  %154 = phi i64 [ %155, %153 ], [ 0, %150 ]
  %155 = add nuw nsw i64 %154, 1
  %156 = trunc i64 %155 to i32
  %157 = sitofp i32 %156 to float
  %158 = fdiv float 1.000000e+00, %157
  %159 = insertelement <4 x float> poison, float %158, i32 0
  %160 = shufflevector <4 x float> %159, <4 x float> poison, <4 x i32> zeroinitializer
  %161 = insertelement <4 x float> poison, float %158, i32 0
  %162 = shufflevector <4 x float> %161, <4 x float> poison, <4 x i32> zeroinitializer
  %163 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 0
  %164 = bitcast float* %163 to <4 x float>*
  store <4 x float> %160, <4 x float>* %164, align 16, !tbaa !9
  %165 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 4
  %166 = bitcast float* %165 to <4 x float>*
  store <4 x float> %162, <4 x float>* %166, align 16, !tbaa !9
  %167 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 8
  %168 = bitcast float* %167 to <4 x float>*
  store <4 x float> %160, <4 x float>* %168, align 16, !tbaa !9
  %169 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 12
  %170 = bitcast float* %169 to <4 x float>*
  store <4 x float> %162, <4 x float>* %170, align 16, !tbaa !9
  %171 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 16
  %172 = bitcast float* %171 to <4 x float>*
  store <4 x float> %160, <4 x float>* %172, align 16, !tbaa !9
  %173 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 20
  %174 = bitcast float* %173 to <4 x float>*
  store <4 x float> %162, <4 x float>* %174, align 16, !tbaa !9
  %175 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 24
  %176 = bitcast float* %175 to <4 x float>*
  store <4 x float> %160, <4 x float>* %176, align 16, !tbaa !9
  %177 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 28
  %178 = bitcast float* %177 to <4 x float>*
  store <4 x float> %162, <4 x float>* %178, align 16, !tbaa !9
  %179 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 32
  %180 = bitcast float* %179 to <4 x float>*
  store <4 x float> %160, <4 x float>* %180, align 16, !tbaa !9
  %181 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 36
  %182 = bitcast float* %181 to <4 x float>*
  store <4 x float> %162, <4 x float>* %182, align 16, !tbaa !9
  %183 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 40
  %184 = bitcast float* %183 to <4 x float>*
  store <4 x float> %160, <4 x float>* %184, align 16, !tbaa !9
  %185 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 44
  %186 = bitcast float* %185 to <4 x float>*
  store <4 x float> %162, <4 x float>* %186, align 16, !tbaa !9
  %187 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 48
  %188 = bitcast float* %187 to <4 x float>*
  store <4 x float> %160, <4 x float>* %188, align 16, !tbaa !9
  %189 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 52
  %190 = bitcast float* %189 to <4 x float>*
  store <4 x float> %162, <4 x float>* %190, align 16, !tbaa !9
  %191 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 56
  %192 = bitcast float* %191 to <4 x float>*
  store <4 x float> %160, <4 x float>* %192, align 16, !tbaa !9
  %193 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 60
  %194 = bitcast float* %193 to <4 x float>*
  store <4 x float> %162, <4 x float>* %194, align 16, !tbaa !9
  %195 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 64
  %196 = bitcast float* %195 to <4 x float>*
  store <4 x float> %160, <4 x float>* %196, align 16, !tbaa !9
  %197 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 68
  %198 = bitcast float* %197 to <4 x float>*
  store <4 x float> %162, <4 x float>* %198, align 16, !tbaa !9
  %199 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 72
  %200 = bitcast float* %199 to <4 x float>*
  store <4 x float> %160, <4 x float>* %200, align 16, !tbaa !9
  %201 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 76
  %202 = bitcast float* %201 to <4 x float>*
  store <4 x float> %162, <4 x float>* %202, align 16, !tbaa !9
  %203 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 80
  %204 = bitcast float* %203 to <4 x float>*
  store <4 x float> %160, <4 x float>* %204, align 16, !tbaa !9
  %205 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 84
  %206 = bitcast float* %205 to <4 x float>*
  store <4 x float> %162, <4 x float>* %206, align 16, !tbaa !9
  %207 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 88
  %208 = bitcast float* %207 to <4 x float>*
  store <4 x float> %160, <4 x float>* %208, align 16, !tbaa !9
  %209 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 92
  %210 = bitcast float* %209 to <4 x float>*
  store <4 x float> %162, <4 x float>* %210, align 16, !tbaa !9
  %211 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 96
  %212 = bitcast float* %211 to <4 x float>*
  store <4 x float> %160, <4 x float>* %212, align 16, !tbaa !9
  %213 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 100
  %214 = bitcast float* %213 to <4 x float>*
  store <4 x float> %162, <4 x float>* %214, align 16, !tbaa !9
  %215 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 104
  %216 = bitcast float* %215 to <4 x float>*
  store <4 x float> %160, <4 x float>* %216, align 16, !tbaa !9
  %217 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 108
  %218 = bitcast float* %217 to <4 x float>*
  store <4 x float> %162, <4 x float>* %218, align 16, !tbaa !9
  %219 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 112
  %220 = bitcast float* %219 to <4 x float>*
  store <4 x float> %160, <4 x float>* %220, align 16, !tbaa !9
  %221 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 116
  %222 = bitcast float* %221 to <4 x float>*
  store <4 x float> %162, <4 x float>* %222, align 16, !tbaa !9
  %223 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 120
  %224 = bitcast float* %223 to <4 x float>*
  store <4 x float> %160, <4 x float>* %224, align 16, !tbaa !9
  %225 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 124
  %226 = bitcast float* %225 to <4 x float>*
  store <4 x float> %162, <4 x float>* %226, align 16, !tbaa !9
  %227 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 128
  %228 = bitcast float* %227 to <4 x float>*
  store <4 x float> %160, <4 x float>* %228, align 16, !tbaa !9
  %229 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 132
  %230 = bitcast float* %229 to <4 x float>*
  store <4 x float> %162, <4 x float>* %230, align 16, !tbaa !9
  %231 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 136
  %232 = bitcast float* %231 to <4 x float>*
  store <4 x float> %160, <4 x float>* %232, align 16, !tbaa !9
  %233 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 140
  %234 = bitcast float* %233 to <4 x float>*
  store <4 x float> %162, <4 x float>* %234, align 16, !tbaa !9
  %235 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 144
  %236 = bitcast float* %235 to <4 x float>*
  store <4 x float> %160, <4 x float>* %236, align 16, !tbaa !9
  %237 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 148
  %238 = bitcast float* %237 to <4 x float>*
  store <4 x float> %162, <4 x float>* %238, align 16, !tbaa !9
  %239 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 152
  %240 = bitcast float* %239 to <4 x float>*
  store <4 x float> %160, <4 x float>* %240, align 16, !tbaa !9
  %241 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 156
  %242 = bitcast float* %241 to <4 x float>*
  store <4 x float> %162, <4 x float>* %242, align 16, !tbaa !9
  %243 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 160
  %244 = bitcast float* %243 to <4 x float>*
  store <4 x float> %160, <4 x float>* %244, align 16, !tbaa !9
  %245 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 164
  %246 = bitcast float* %245 to <4 x float>*
  store <4 x float> %162, <4 x float>* %246, align 16, !tbaa !9
  %247 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 168
  %248 = bitcast float* %247 to <4 x float>*
  store <4 x float> %160, <4 x float>* %248, align 16, !tbaa !9
  %249 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 172
  %250 = bitcast float* %249 to <4 x float>*
  store <4 x float> %162, <4 x float>* %250, align 16, !tbaa !9
  %251 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 176
  %252 = bitcast float* %251 to <4 x float>*
  store <4 x float> %160, <4 x float>* %252, align 16, !tbaa !9
  %253 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 180
  %254 = bitcast float* %253 to <4 x float>*
  store <4 x float> %162, <4 x float>* %254, align 16, !tbaa !9
  %255 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 184
  %256 = bitcast float* %255 to <4 x float>*
  store <4 x float> %160, <4 x float>* %256, align 16, !tbaa !9
  %257 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 188
  %258 = bitcast float* %257 to <4 x float>*
  store <4 x float> %162, <4 x float>* %258, align 16, !tbaa !9
  %259 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 192
  %260 = bitcast float* %259 to <4 x float>*
  store <4 x float> %160, <4 x float>* %260, align 16, !tbaa !9
  %261 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 196
  %262 = bitcast float* %261 to <4 x float>*
  store <4 x float> %162, <4 x float>* %262, align 16, !tbaa !9
  %263 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 200
  %264 = bitcast float* %263 to <4 x float>*
  store <4 x float> %160, <4 x float>* %264, align 16, !tbaa !9
  %265 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 204
  %266 = bitcast float* %265 to <4 x float>*
  store <4 x float> %162, <4 x float>* %266, align 16, !tbaa !9
  %267 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 208
  %268 = bitcast float* %267 to <4 x float>*
  store <4 x float> %160, <4 x float>* %268, align 16, !tbaa !9
  %269 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 212
  %270 = bitcast float* %269 to <4 x float>*
  store <4 x float> %162, <4 x float>* %270, align 16, !tbaa !9
  %271 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 216
  %272 = bitcast float* %271 to <4 x float>*
  store <4 x float> %160, <4 x float>* %272, align 16, !tbaa !9
  %273 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 220
  %274 = bitcast float* %273 to <4 x float>*
  store <4 x float> %162, <4 x float>* %274, align 16, !tbaa !9
  %275 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 224
  %276 = bitcast float* %275 to <4 x float>*
  store <4 x float> %160, <4 x float>* %276, align 16, !tbaa !9
  %277 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 228
  %278 = bitcast float* %277 to <4 x float>*
  store <4 x float> %162, <4 x float>* %278, align 16, !tbaa !9
  %279 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 232
  %280 = bitcast float* %279 to <4 x float>*
  store <4 x float> %160, <4 x float>* %280, align 16, !tbaa !9
  %281 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 236
  %282 = bitcast float* %281 to <4 x float>*
  store <4 x float> %162, <4 x float>* %282, align 16, !tbaa !9
  %283 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 240
  %284 = bitcast float* %283 to <4 x float>*
  store <4 x float> %160, <4 x float>* %284, align 16, !tbaa !9
  %285 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 244
  %286 = bitcast float* %285 to <4 x float>*
  store <4 x float> %162, <4 x float>* %286, align 16, !tbaa !9
  %287 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 248
  %288 = bitcast float* %287 to <4 x float>*
  store <4 x float> %160, <4 x float>* %288, align 16, !tbaa !9
  %289 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %154, i64 252
  %290 = bitcast float* %289 to <4 x float>*
  store <4 x float> %162, <4 x float>* %290, align 16, !tbaa !9
  %291 = icmp eq i64 %155, 256
  br i1 %291, label %292, label %153, !llvm.loop !23

292:                                              ; preds = %153, %292
  %293 = phi i64 [ %294, %292 ], [ 0, %153 ]
  %294 = add nuw nsw i64 %293, 1
  %295 = trunc i64 %294 to i32
  %296 = mul nsw i32 %295, %295
  %297 = sitofp i32 %296 to float
  %298 = fdiv float 1.000000e+00, %297
  %299 = insertelement <4 x float> poison, float %298, i32 0
  %300 = shufflevector <4 x float> %299, <4 x float> poison, <4 x i32> zeroinitializer
  %301 = insertelement <4 x float> poison, float %298, i32 0
  %302 = shufflevector <4 x float> %301, <4 x float> poison, <4 x i32> zeroinitializer
  %303 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 0
  %304 = bitcast float* %303 to <4 x float>*
  store <4 x float> %300, <4 x float>* %304, align 16, !tbaa !9
  %305 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 4
  %306 = bitcast float* %305 to <4 x float>*
  store <4 x float> %302, <4 x float>* %306, align 16, !tbaa !9
  %307 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 8
  %308 = bitcast float* %307 to <4 x float>*
  store <4 x float> %300, <4 x float>* %308, align 16, !tbaa !9
  %309 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 12
  %310 = bitcast float* %309 to <4 x float>*
  store <4 x float> %302, <4 x float>* %310, align 16, !tbaa !9
  %311 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 16
  %312 = bitcast float* %311 to <4 x float>*
  store <4 x float> %300, <4 x float>* %312, align 16, !tbaa !9
  %313 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 20
  %314 = bitcast float* %313 to <4 x float>*
  store <4 x float> %302, <4 x float>* %314, align 16, !tbaa !9
  %315 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 24
  %316 = bitcast float* %315 to <4 x float>*
  store <4 x float> %300, <4 x float>* %316, align 16, !tbaa !9
  %317 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 28
  %318 = bitcast float* %317 to <4 x float>*
  store <4 x float> %302, <4 x float>* %318, align 16, !tbaa !9
  %319 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 32
  %320 = bitcast float* %319 to <4 x float>*
  store <4 x float> %300, <4 x float>* %320, align 16, !tbaa !9
  %321 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 36
  %322 = bitcast float* %321 to <4 x float>*
  store <4 x float> %302, <4 x float>* %322, align 16, !tbaa !9
  %323 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 40
  %324 = bitcast float* %323 to <4 x float>*
  store <4 x float> %300, <4 x float>* %324, align 16, !tbaa !9
  %325 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 44
  %326 = bitcast float* %325 to <4 x float>*
  store <4 x float> %302, <4 x float>* %326, align 16, !tbaa !9
  %327 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 48
  %328 = bitcast float* %327 to <4 x float>*
  store <4 x float> %300, <4 x float>* %328, align 16, !tbaa !9
  %329 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 52
  %330 = bitcast float* %329 to <4 x float>*
  store <4 x float> %302, <4 x float>* %330, align 16, !tbaa !9
  %331 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 56
  %332 = bitcast float* %331 to <4 x float>*
  store <4 x float> %300, <4 x float>* %332, align 16, !tbaa !9
  %333 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 60
  %334 = bitcast float* %333 to <4 x float>*
  store <4 x float> %302, <4 x float>* %334, align 16, !tbaa !9
  %335 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 64
  %336 = bitcast float* %335 to <4 x float>*
  store <4 x float> %300, <4 x float>* %336, align 16, !tbaa !9
  %337 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 68
  %338 = bitcast float* %337 to <4 x float>*
  store <4 x float> %302, <4 x float>* %338, align 16, !tbaa !9
  %339 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 72
  %340 = bitcast float* %339 to <4 x float>*
  store <4 x float> %300, <4 x float>* %340, align 16, !tbaa !9
  %341 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 76
  %342 = bitcast float* %341 to <4 x float>*
  store <4 x float> %302, <4 x float>* %342, align 16, !tbaa !9
  %343 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 80
  %344 = bitcast float* %343 to <4 x float>*
  store <4 x float> %300, <4 x float>* %344, align 16, !tbaa !9
  %345 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 84
  %346 = bitcast float* %345 to <4 x float>*
  store <4 x float> %302, <4 x float>* %346, align 16, !tbaa !9
  %347 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 88
  %348 = bitcast float* %347 to <4 x float>*
  store <4 x float> %300, <4 x float>* %348, align 16, !tbaa !9
  %349 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 92
  %350 = bitcast float* %349 to <4 x float>*
  store <4 x float> %302, <4 x float>* %350, align 16, !tbaa !9
  %351 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 96
  %352 = bitcast float* %351 to <4 x float>*
  store <4 x float> %300, <4 x float>* %352, align 16, !tbaa !9
  %353 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 100
  %354 = bitcast float* %353 to <4 x float>*
  store <4 x float> %302, <4 x float>* %354, align 16, !tbaa !9
  %355 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 104
  %356 = bitcast float* %355 to <4 x float>*
  store <4 x float> %300, <4 x float>* %356, align 16, !tbaa !9
  %357 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 108
  %358 = bitcast float* %357 to <4 x float>*
  store <4 x float> %302, <4 x float>* %358, align 16, !tbaa !9
  %359 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 112
  %360 = bitcast float* %359 to <4 x float>*
  store <4 x float> %300, <4 x float>* %360, align 16, !tbaa !9
  %361 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 116
  %362 = bitcast float* %361 to <4 x float>*
  store <4 x float> %302, <4 x float>* %362, align 16, !tbaa !9
  %363 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 120
  %364 = bitcast float* %363 to <4 x float>*
  store <4 x float> %300, <4 x float>* %364, align 16, !tbaa !9
  %365 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 124
  %366 = bitcast float* %365 to <4 x float>*
  store <4 x float> %302, <4 x float>* %366, align 16, !tbaa !9
  %367 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 128
  %368 = bitcast float* %367 to <4 x float>*
  store <4 x float> %300, <4 x float>* %368, align 16, !tbaa !9
  %369 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 132
  %370 = bitcast float* %369 to <4 x float>*
  store <4 x float> %302, <4 x float>* %370, align 16, !tbaa !9
  %371 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 136
  %372 = bitcast float* %371 to <4 x float>*
  store <4 x float> %300, <4 x float>* %372, align 16, !tbaa !9
  %373 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 140
  %374 = bitcast float* %373 to <4 x float>*
  store <4 x float> %302, <4 x float>* %374, align 16, !tbaa !9
  %375 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 144
  %376 = bitcast float* %375 to <4 x float>*
  store <4 x float> %300, <4 x float>* %376, align 16, !tbaa !9
  %377 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 148
  %378 = bitcast float* %377 to <4 x float>*
  store <4 x float> %302, <4 x float>* %378, align 16, !tbaa !9
  %379 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 152
  %380 = bitcast float* %379 to <4 x float>*
  store <4 x float> %300, <4 x float>* %380, align 16, !tbaa !9
  %381 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 156
  %382 = bitcast float* %381 to <4 x float>*
  store <4 x float> %302, <4 x float>* %382, align 16, !tbaa !9
  %383 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 160
  %384 = bitcast float* %383 to <4 x float>*
  store <4 x float> %300, <4 x float>* %384, align 16, !tbaa !9
  %385 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 164
  %386 = bitcast float* %385 to <4 x float>*
  store <4 x float> %302, <4 x float>* %386, align 16, !tbaa !9
  %387 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 168
  %388 = bitcast float* %387 to <4 x float>*
  store <4 x float> %300, <4 x float>* %388, align 16, !tbaa !9
  %389 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 172
  %390 = bitcast float* %389 to <4 x float>*
  store <4 x float> %302, <4 x float>* %390, align 16, !tbaa !9
  %391 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 176
  %392 = bitcast float* %391 to <4 x float>*
  store <4 x float> %300, <4 x float>* %392, align 16, !tbaa !9
  %393 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 180
  %394 = bitcast float* %393 to <4 x float>*
  store <4 x float> %302, <4 x float>* %394, align 16, !tbaa !9
  %395 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 184
  %396 = bitcast float* %395 to <4 x float>*
  store <4 x float> %300, <4 x float>* %396, align 16, !tbaa !9
  %397 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 188
  %398 = bitcast float* %397 to <4 x float>*
  store <4 x float> %302, <4 x float>* %398, align 16, !tbaa !9
  %399 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 192
  %400 = bitcast float* %399 to <4 x float>*
  store <4 x float> %300, <4 x float>* %400, align 16, !tbaa !9
  %401 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 196
  %402 = bitcast float* %401 to <4 x float>*
  store <4 x float> %302, <4 x float>* %402, align 16, !tbaa !9
  %403 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 200
  %404 = bitcast float* %403 to <4 x float>*
  store <4 x float> %300, <4 x float>* %404, align 16, !tbaa !9
  %405 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 204
  %406 = bitcast float* %405 to <4 x float>*
  store <4 x float> %302, <4 x float>* %406, align 16, !tbaa !9
  %407 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 208
  %408 = bitcast float* %407 to <4 x float>*
  store <4 x float> %300, <4 x float>* %408, align 16, !tbaa !9
  %409 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 212
  %410 = bitcast float* %409 to <4 x float>*
  store <4 x float> %302, <4 x float>* %410, align 16, !tbaa !9
  %411 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 216
  %412 = bitcast float* %411 to <4 x float>*
  store <4 x float> %300, <4 x float>* %412, align 16, !tbaa !9
  %413 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 220
  %414 = bitcast float* %413 to <4 x float>*
  store <4 x float> %302, <4 x float>* %414, align 16, !tbaa !9
  %415 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 224
  %416 = bitcast float* %415 to <4 x float>*
  store <4 x float> %300, <4 x float>* %416, align 16, !tbaa !9
  %417 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 228
  %418 = bitcast float* %417 to <4 x float>*
  store <4 x float> %302, <4 x float>* %418, align 16, !tbaa !9
  %419 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 232
  %420 = bitcast float* %419 to <4 x float>*
  store <4 x float> %300, <4 x float>* %420, align 16, !tbaa !9
  %421 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 236
  %422 = bitcast float* %421 to <4 x float>*
  store <4 x float> %302, <4 x float>* %422, align 16, !tbaa !9
  %423 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 240
  %424 = bitcast float* %423 to <4 x float>*
  store <4 x float> %300, <4 x float>* %424, align 16, !tbaa !9
  %425 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 244
  %426 = bitcast float* %425 to <4 x float>*
  store <4 x float> %302, <4 x float>* %426, align 16, !tbaa !9
  %427 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 248
  %428 = bitcast float* %427 to <4 x float>*
  store <4 x float> %300, <4 x float>* %428, align 16, !tbaa !9
  %429 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %293, i64 252
  %430 = bitcast float* %429 to <4 x float>*
  store <4 x float> %302, <4 x float>* %430, align 16, !tbaa !9
  %431 = icmp eq i64 %294, 256
  br i1 %431, label %6516, label %292, !llvm.loop !24

432:                                              ; preds = %150
  %433 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %454

435:                                              ; preds = %432
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %436

436:                                              ; preds = %435, %436
  %437 = phi i64 [ %440, %436 ], [ 0, %435 ]
  %438 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %437, i64 0
  %439 = bitcast float* %438 to i8*
  call void @memset_pattern16(i8* %439, i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 1024) #19
  %440 = add nuw nsw i64 %437, 1
  %441 = icmp eq i64 %440, 256
  br i1 %441, label %442, label %436, !llvm.loop !26

442:                                              ; preds = %436, %442
  %443 = phi i64 [ %446, %442 ], [ 0, %436 ]
  %444 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %443, i64 0
  %445 = bitcast float* %444 to i8*
  call void @memset_pattern16(i8* %445, i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 1024) #19
  %446 = add nuw nsw i64 %443, 1
  %447 = icmp eq i64 %446, 256
  br i1 %447, label %448, label %442, !llvm.loop !26

448:                                              ; preds = %442, %448
  %449 = phi i64 [ %452, %448 ], [ 0, %442 ]
  %450 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %449, i64 0
  %451 = bitcast float* %450 to i8*
  call void @memset_pattern16(i8* %451, i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 1024) #19
  %452 = add nuw nsw i64 %449, 1
  %453 = icmp eq i64 %452, 256
  br i1 %453, label %6516, label %448, !llvm.loop !26

454:                                              ; preds = %432
  %455 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0))
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %458

457:                                              ; preds = %454
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

458:                                              ; preds = %454
  %459 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %468

461:                                              ; preds = %458
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %462

462:                                              ; preds = %461, %462
  %463 = phi i64 [ %466, %462 ], [ 0, %461 ]
  %464 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %463, i64 0
  %465 = bitcast float* %464 to i8*
  call void @memset_pattern16(i8* %465, i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 1024) #19
  %466 = add nuw nsw i64 %463, 1
  %467 = icmp eq i64 %466, 256
  br i1 %467, label %6516, label %462, !llvm.loop !26

468:                                              ; preds = %458
  %469 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %617

471:                                              ; preds = %468, %471
  %472 = phi i64 [ %475, %471 ], [ 0, %468 ]
  %473 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %472, i64 0
  %474 = bitcast float* %473 to i8*
  call void @memset_pattern16(i8* %474, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %475 = add nuw nsw i64 %472, 1
  %476 = icmp eq i64 %475, 256
  br i1 %476, label %477, label %471, !llvm.loop !26

477:                                              ; preds = %471, %477
  %478 = phi i64 [ %479, %477 ], [ 0, %471 ]
  %479 = add nuw nsw i64 %478, 1
  %480 = trunc i64 %479 to i32
  %481 = mul nsw i32 %480, %480
  %482 = sitofp i32 %481 to float
  %483 = fdiv float 1.000000e+00, %482
  %484 = insertelement <4 x float> poison, float %483, i32 0
  %485 = shufflevector <4 x float> %484, <4 x float> poison, <4 x i32> zeroinitializer
  %486 = insertelement <4 x float> poison, float %483, i32 0
  %487 = shufflevector <4 x float> %486, <4 x float> poison, <4 x i32> zeroinitializer
  %488 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 0
  %489 = bitcast float* %488 to <4 x float>*
  store <4 x float> %485, <4 x float>* %489, align 16, !tbaa !9
  %490 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 4
  %491 = bitcast float* %490 to <4 x float>*
  store <4 x float> %487, <4 x float>* %491, align 16, !tbaa !9
  %492 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 8
  %493 = bitcast float* %492 to <4 x float>*
  store <4 x float> %485, <4 x float>* %493, align 16, !tbaa !9
  %494 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 12
  %495 = bitcast float* %494 to <4 x float>*
  store <4 x float> %487, <4 x float>* %495, align 16, !tbaa !9
  %496 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 16
  %497 = bitcast float* %496 to <4 x float>*
  store <4 x float> %485, <4 x float>* %497, align 16, !tbaa !9
  %498 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 20
  %499 = bitcast float* %498 to <4 x float>*
  store <4 x float> %487, <4 x float>* %499, align 16, !tbaa !9
  %500 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 24
  %501 = bitcast float* %500 to <4 x float>*
  store <4 x float> %485, <4 x float>* %501, align 16, !tbaa !9
  %502 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 28
  %503 = bitcast float* %502 to <4 x float>*
  store <4 x float> %487, <4 x float>* %503, align 16, !tbaa !9
  %504 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 32
  %505 = bitcast float* %504 to <4 x float>*
  store <4 x float> %485, <4 x float>* %505, align 16, !tbaa !9
  %506 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 36
  %507 = bitcast float* %506 to <4 x float>*
  store <4 x float> %487, <4 x float>* %507, align 16, !tbaa !9
  %508 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 40
  %509 = bitcast float* %508 to <4 x float>*
  store <4 x float> %485, <4 x float>* %509, align 16, !tbaa !9
  %510 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 44
  %511 = bitcast float* %510 to <4 x float>*
  store <4 x float> %487, <4 x float>* %511, align 16, !tbaa !9
  %512 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 48
  %513 = bitcast float* %512 to <4 x float>*
  store <4 x float> %485, <4 x float>* %513, align 16, !tbaa !9
  %514 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 52
  %515 = bitcast float* %514 to <4 x float>*
  store <4 x float> %487, <4 x float>* %515, align 16, !tbaa !9
  %516 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 56
  %517 = bitcast float* %516 to <4 x float>*
  store <4 x float> %485, <4 x float>* %517, align 16, !tbaa !9
  %518 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 60
  %519 = bitcast float* %518 to <4 x float>*
  store <4 x float> %487, <4 x float>* %519, align 16, !tbaa !9
  %520 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 64
  %521 = bitcast float* %520 to <4 x float>*
  store <4 x float> %485, <4 x float>* %521, align 16, !tbaa !9
  %522 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 68
  %523 = bitcast float* %522 to <4 x float>*
  store <4 x float> %487, <4 x float>* %523, align 16, !tbaa !9
  %524 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 72
  %525 = bitcast float* %524 to <4 x float>*
  store <4 x float> %485, <4 x float>* %525, align 16, !tbaa !9
  %526 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 76
  %527 = bitcast float* %526 to <4 x float>*
  store <4 x float> %487, <4 x float>* %527, align 16, !tbaa !9
  %528 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 80
  %529 = bitcast float* %528 to <4 x float>*
  store <4 x float> %485, <4 x float>* %529, align 16, !tbaa !9
  %530 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 84
  %531 = bitcast float* %530 to <4 x float>*
  store <4 x float> %487, <4 x float>* %531, align 16, !tbaa !9
  %532 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 88
  %533 = bitcast float* %532 to <4 x float>*
  store <4 x float> %485, <4 x float>* %533, align 16, !tbaa !9
  %534 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 92
  %535 = bitcast float* %534 to <4 x float>*
  store <4 x float> %487, <4 x float>* %535, align 16, !tbaa !9
  %536 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 96
  %537 = bitcast float* %536 to <4 x float>*
  store <4 x float> %485, <4 x float>* %537, align 16, !tbaa !9
  %538 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 100
  %539 = bitcast float* %538 to <4 x float>*
  store <4 x float> %487, <4 x float>* %539, align 16, !tbaa !9
  %540 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 104
  %541 = bitcast float* %540 to <4 x float>*
  store <4 x float> %485, <4 x float>* %541, align 16, !tbaa !9
  %542 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 108
  %543 = bitcast float* %542 to <4 x float>*
  store <4 x float> %487, <4 x float>* %543, align 16, !tbaa !9
  %544 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 112
  %545 = bitcast float* %544 to <4 x float>*
  store <4 x float> %485, <4 x float>* %545, align 16, !tbaa !9
  %546 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 116
  %547 = bitcast float* %546 to <4 x float>*
  store <4 x float> %487, <4 x float>* %547, align 16, !tbaa !9
  %548 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 120
  %549 = bitcast float* %548 to <4 x float>*
  store <4 x float> %485, <4 x float>* %549, align 16, !tbaa !9
  %550 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 124
  %551 = bitcast float* %550 to <4 x float>*
  store <4 x float> %487, <4 x float>* %551, align 16, !tbaa !9
  %552 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 128
  %553 = bitcast float* %552 to <4 x float>*
  store <4 x float> %485, <4 x float>* %553, align 16, !tbaa !9
  %554 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 132
  %555 = bitcast float* %554 to <4 x float>*
  store <4 x float> %487, <4 x float>* %555, align 16, !tbaa !9
  %556 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 136
  %557 = bitcast float* %556 to <4 x float>*
  store <4 x float> %485, <4 x float>* %557, align 16, !tbaa !9
  %558 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 140
  %559 = bitcast float* %558 to <4 x float>*
  store <4 x float> %487, <4 x float>* %559, align 16, !tbaa !9
  %560 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 144
  %561 = bitcast float* %560 to <4 x float>*
  store <4 x float> %485, <4 x float>* %561, align 16, !tbaa !9
  %562 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 148
  %563 = bitcast float* %562 to <4 x float>*
  store <4 x float> %487, <4 x float>* %563, align 16, !tbaa !9
  %564 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 152
  %565 = bitcast float* %564 to <4 x float>*
  store <4 x float> %485, <4 x float>* %565, align 16, !tbaa !9
  %566 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 156
  %567 = bitcast float* %566 to <4 x float>*
  store <4 x float> %487, <4 x float>* %567, align 16, !tbaa !9
  %568 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 160
  %569 = bitcast float* %568 to <4 x float>*
  store <4 x float> %485, <4 x float>* %569, align 16, !tbaa !9
  %570 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 164
  %571 = bitcast float* %570 to <4 x float>*
  store <4 x float> %487, <4 x float>* %571, align 16, !tbaa !9
  %572 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 168
  %573 = bitcast float* %572 to <4 x float>*
  store <4 x float> %485, <4 x float>* %573, align 16, !tbaa !9
  %574 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 172
  %575 = bitcast float* %574 to <4 x float>*
  store <4 x float> %487, <4 x float>* %575, align 16, !tbaa !9
  %576 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 176
  %577 = bitcast float* %576 to <4 x float>*
  store <4 x float> %485, <4 x float>* %577, align 16, !tbaa !9
  %578 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 180
  %579 = bitcast float* %578 to <4 x float>*
  store <4 x float> %487, <4 x float>* %579, align 16, !tbaa !9
  %580 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 184
  %581 = bitcast float* %580 to <4 x float>*
  store <4 x float> %485, <4 x float>* %581, align 16, !tbaa !9
  %582 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 188
  %583 = bitcast float* %582 to <4 x float>*
  store <4 x float> %487, <4 x float>* %583, align 16, !tbaa !9
  %584 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 192
  %585 = bitcast float* %584 to <4 x float>*
  store <4 x float> %485, <4 x float>* %585, align 16, !tbaa !9
  %586 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 196
  %587 = bitcast float* %586 to <4 x float>*
  store <4 x float> %487, <4 x float>* %587, align 16, !tbaa !9
  %588 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 200
  %589 = bitcast float* %588 to <4 x float>*
  store <4 x float> %485, <4 x float>* %589, align 16, !tbaa !9
  %590 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 204
  %591 = bitcast float* %590 to <4 x float>*
  store <4 x float> %487, <4 x float>* %591, align 16, !tbaa !9
  %592 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 208
  %593 = bitcast float* %592 to <4 x float>*
  store <4 x float> %485, <4 x float>* %593, align 16, !tbaa !9
  %594 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 212
  %595 = bitcast float* %594 to <4 x float>*
  store <4 x float> %487, <4 x float>* %595, align 16, !tbaa !9
  %596 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 216
  %597 = bitcast float* %596 to <4 x float>*
  store <4 x float> %485, <4 x float>* %597, align 16, !tbaa !9
  %598 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 220
  %599 = bitcast float* %598 to <4 x float>*
  store <4 x float> %487, <4 x float>* %599, align 16, !tbaa !9
  %600 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 224
  %601 = bitcast float* %600 to <4 x float>*
  store <4 x float> %485, <4 x float>* %601, align 16, !tbaa !9
  %602 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 228
  %603 = bitcast float* %602 to <4 x float>*
  store <4 x float> %487, <4 x float>* %603, align 16, !tbaa !9
  %604 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 232
  %605 = bitcast float* %604 to <4 x float>*
  store <4 x float> %485, <4 x float>* %605, align 16, !tbaa !9
  %606 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 236
  %607 = bitcast float* %606 to <4 x float>*
  store <4 x float> %487, <4 x float>* %607, align 16, !tbaa !9
  %608 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 240
  %609 = bitcast float* %608 to <4 x float>*
  store <4 x float> %485, <4 x float>* %609, align 16, !tbaa !9
  %610 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 244
  %611 = bitcast float* %610 to <4 x float>*
  store <4 x float> %487, <4 x float>* %611, align 16, !tbaa !9
  %612 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 248
  %613 = bitcast float* %612 to <4 x float>*
  store <4 x float> %485, <4 x float>* %613, align 16, !tbaa !9
  %614 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %478, i64 252
  %615 = bitcast float* %614 to <4 x float>*
  store <4 x float> %487, <4 x float>* %615, align 16, !tbaa !9
  %616 = icmp eq i64 %479, 256
  br i1 %616, label %6516, label %477, !llvm.loop !24

617:                                              ; preds = %468
  %618 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %634

620:                                              ; preds = %617
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %621

621:                                              ; preds = %621, %620
  %622 = phi i64 [ 0, %620 ], [ %631, %621 ]
  %623 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %620 ], [ %632, %621 ]
  %624 = add nuw nsw <4 x i64> %623, <i64 1, i64 1, i64 1, i64 1>
  %625 = mul nuw nsw <4 x i64> %624, %624
  %626 = trunc <4 x i64> %625 to <4 x i32>
  %627 = sitofp <4 x i32> %626 to <4 x float>
  %628 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %627
  %629 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %622
  %630 = bitcast float* %629 to <4 x float>*
  store <4 x float> %628, <4 x float>* %630, align 16, !tbaa !9
  %631 = add nuw i64 %622, 4
  %632 = add <4 x i64> %623, <i64 4, i64 4, i64 4, i64 4>
  %633 = icmp eq i64 %631, 32000
  br i1 %633, label %6516, label %621, !llvm.loop !40

634:                                              ; preds = %617
  %635 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0))
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %637, label %651

637:                                              ; preds = %634
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %638

638:                                              ; preds = %638, %637
  %639 = phi i64 [ 0, %637 ], [ %648, %638 ]
  %640 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %637 ], [ %649, %638 ]
  %641 = add nuw nsw <4 x i64> %640, <i64 1, i64 1, i64 1, i64 1>
  %642 = mul nuw nsw <4 x i64> %641, %641
  %643 = trunc <4 x i64> %642 to <4 x i32>
  %644 = sitofp <4 x i32> %643 to <4 x float>
  %645 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %644
  %646 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %639
  %647 = bitcast float* %646 to <4 x float>*
  store <4 x float> %645, <4 x float>* %647, align 16, !tbaa !9
  %648 = add nuw i64 %639, 4
  %649 = add <4 x i64> %640, <i64 4, i64 4, i64 4, i64 4>
  %650 = icmp eq i64 %648, 32000
  br i1 %650, label %6516, label %638, !llvm.loop !41

651:                                              ; preds = %634
  %652 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0))
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %654, label %691

654:                                              ; preds = %651
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %655

655:                                              ; preds = %655, %654
  %656 = phi i64 [ 0, %654 ], [ %670, %655 ]
  %657 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %654 ], [ %671, %655 ]
  %658 = trunc <4 x i64> %657 to <4 x i32>
  %659 = add <4 x i32> %658, <i32 1, i32 1, i32 1, i32 1>
  %660 = trunc <4 x i64> %657 to <4 x i32>
  %661 = add <4 x i32> %660, <i32 5, i32 5, i32 5, i32 5>
  %662 = sitofp <4 x i32> %659 to <4 x float>
  %663 = sitofp <4 x i32> %661 to <4 x float>
  %664 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %662
  %665 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %663
  %666 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %656
  %667 = bitcast float* %666 to <4 x float>*
  store <4 x float> %664, <4 x float>* %667, align 16, !tbaa !9
  %668 = getelementptr inbounds float, float* %666, i64 4
  %669 = bitcast float* %668 to <4 x float>*
  store <4 x float> %665, <4 x float>* %669, align 16, !tbaa !9
  %670 = add nuw i64 %656, 8
  %671 = add <4 x i64> %657, <i64 8, i64 8, i64 8, i64 8>
  %672 = icmp eq i64 %670, 32000
  br i1 %672, label %673, label %655, !llvm.loop !42

673:                                              ; preds = %655, %673
  %674 = phi i64 [ %688, %673 ], [ 0, %655 ]
  %675 = phi <4 x i64> [ %689, %673 ], [ <i64 0, i64 1, i64 2, i64 3>, %655 ]
  %676 = trunc <4 x i64> %675 to <4 x i32>
  %677 = add <4 x i32> %676, <i32 1, i32 1, i32 1, i32 1>
  %678 = trunc <4 x i64> %675 to <4 x i32>
  %679 = add <4 x i32> %678, <i32 5, i32 5, i32 5, i32 5>
  %680 = sitofp <4 x i32> %677 to <4 x float>
  %681 = sitofp <4 x i32> %679 to <4 x float>
  %682 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %680
  %683 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %681
  %684 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %674
  %685 = bitcast float* %684 to <4 x float>*
  store <4 x float> %682, <4 x float>* %685, align 16, !tbaa !9
  %686 = getelementptr inbounds float, float* %684, i64 4
  %687 = bitcast float* %686 to <4 x float>*
  store <4 x float> %683, <4 x float>* %687, align 16, !tbaa !9
  %688 = add nuw i64 %674, 8
  %689 = add <4 x i64> %675, <i64 8, i64 8, i64 8, i64 8>
  %690 = icmp eq i64 %688, 32000
  br i1 %690, label %6516, label %673, !llvm.loop !43

691:                                              ; preds = %651
  %692 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0))
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %731

694:                                              ; preds = %691
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %695

695:                                              ; preds = %695, %694
  %696 = phi i64 [ 0, %694 ], [ %710, %695 ]
  %697 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %694 ], [ %711, %695 ]
  %698 = trunc <4 x i64> %697 to <4 x i32>
  %699 = add <4 x i32> %698, <i32 1, i32 1, i32 1, i32 1>
  %700 = trunc <4 x i64> %697 to <4 x i32>
  %701 = add <4 x i32> %700, <i32 5, i32 5, i32 5, i32 5>
  %702 = sitofp <4 x i32> %699 to <4 x float>
  %703 = sitofp <4 x i32> %701 to <4 x float>
  %704 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %702
  %705 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %703
  %706 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %696
  %707 = bitcast float* %706 to <4 x float>*
  store <4 x float> %704, <4 x float>* %707, align 16, !tbaa !9
  %708 = getelementptr inbounds float, float* %706, i64 4
  %709 = bitcast float* %708 to <4 x float>*
  store <4 x float> %705, <4 x float>* %709, align 16, !tbaa !9
  %710 = add nuw i64 %696, 8
  %711 = add <4 x i64> %697, <i64 8, i64 8, i64 8, i64 8>
  %712 = icmp eq i64 %710, 32000
  br i1 %712, label %713, label %695, !llvm.loop !44

713:                                              ; preds = %695, %713
  %714 = phi i64 [ %728, %713 ], [ 0, %695 ]
  %715 = phi <4 x i64> [ %729, %713 ], [ <i64 0, i64 1, i64 2, i64 3>, %695 ]
  %716 = trunc <4 x i64> %715 to <4 x i32>
  %717 = add <4 x i32> %716, <i32 1, i32 1, i32 1, i32 1>
  %718 = trunc <4 x i64> %715 to <4 x i32>
  %719 = add <4 x i32> %718, <i32 5, i32 5, i32 5, i32 5>
  %720 = sitofp <4 x i32> %717 to <4 x float>
  %721 = sitofp <4 x i32> %719 to <4 x float>
  %722 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %720
  %723 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %721
  %724 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %714
  %725 = bitcast float* %724 to <4 x float>*
  store <4 x float> %722, <4 x float>* %725, align 16, !tbaa !9
  %726 = getelementptr inbounds float, float* %724, i64 4
  %727 = bitcast float* %726 to <4 x float>*
  store <4 x float> %723, <4 x float>* %727, align 16, !tbaa !9
  %728 = add nuw i64 %714, 8
  %729 = add <4 x i64> %715, <i64 8, i64 8, i64 8, i64 8>
  %730 = icmp eq i64 %728, 32000
  br i1 %730, label %6516, label %713, !llvm.loop !45

731:                                              ; preds = %691
  %732 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0))
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %753

734:                                              ; preds = %731
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([65536 x float]* @array to i8*), i8 0, i64 128000, i1 false)
  br label %735

735:                                              ; preds = %734, %735
  %736 = phi i64 [ %739, %735 ], [ 0, %734 ]
  %737 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %736, i64 0
  %738 = bitcast float* %737 to i8*
  call void @memset_pattern16(i8* %738, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %739 = add nuw nsw i64 %736, 1
  %740 = icmp eq i64 %739, 256
  br i1 %740, label %741, label %735, !llvm.loop !26

741:                                              ; preds = %735, %741
  %742 = phi i64 [ %745, %741 ], [ 0, %735 ]
  %743 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %742, i64 0
  %744 = bitcast float* %743 to i8*
  call void @memset_pattern16(i8* %744, i8* bitcast ([4 x float]* @.memset_pattern.464 to i8*), i64 1024) #19
  %745 = add nuw nsw i64 %742, 1
  %746 = icmp eq i64 %745, 256
  br i1 %746, label %747, label %741, !llvm.loop !26

747:                                              ; preds = %741, %747
  %748 = phi i64 [ %751, %747 ], [ 0, %741 ]
  %749 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %748, i64 0
  %750 = bitcast float* %749 to i8*
  call void @memset_pattern16(i8* %750, i8* bitcast ([4 x float]* @.memset_pattern.465 to i8*), i64 1024) #19
  %751 = add nuw nsw i64 %748, 1
  %752 = icmp eq i64 %751, 256
  br i1 %752, label %6516, label %747, !llvm.loop !26

753:                                              ; preds = %731
  %754 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %919

756:                                              ; preds = %753, %756
  %757 = phi i64 [ %760, %756 ], [ 0, %753 ]
  %758 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %757, i64 0
  %759 = bitcast float* %758 to i8*
  call void @memset_pattern16(i8* %759, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %760 = add nuw nsw i64 %757, 1
  %761 = icmp eq i64 %760, 256
  br i1 %761, label %762, label %756, !llvm.loop !26

762:                                              ; preds = %756, %762
  %763 = phi i64 [ %777, %762 ], [ 0, %756 ]
  %764 = phi <4 x i64> [ %778, %762 ], [ <i64 0, i64 1, i64 2, i64 3>, %756 ]
  %765 = trunc <4 x i64> %764 to <4 x i32>
  %766 = add <4 x i32> %765, <i32 1, i32 1, i32 1, i32 1>
  %767 = trunc <4 x i64> %764 to <4 x i32>
  %768 = add <4 x i32> %767, <i32 5, i32 5, i32 5, i32 5>
  %769 = sitofp <4 x i32> %766 to <4 x float>
  %770 = sitofp <4 x i32> %768 to <4 x float>
  %771 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %769
  %772 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %770
  %773 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %763
  %774 = bitcast float* %773 to <4 x float>*
  store <4 x float> %771, <4 x float>* %774, align 16, !tbaa !9
  %775 = getelementptr inbounds float, float* %773, i64 4
  %776 = bitcast float* %775 to <4 x float>*
  store <4 x float> %772, <4 x float>* %776, align 16, !tbaa !9
  %777 = add nuw i64 %763, 8
  %778 = add <4 x i64> %764, <i64 8, i64 8, i64 8, i64 8>
  %779 = icmp eq i64 %777, 32000
  br i1 %779, label %780, label %762, !llvm.loop !46

780:                                              ; preds = %762, %780
  %781 = phi i64 [ %782, %780 ], [ 0, %762 ]
  %782 = add nuw nsw i64 %781, 1
  %783 = trunc i64 %782 to i32
  %784 = sitofp i32 %783 to float
  %785 = fdiv float 1.000000e+00, %784
  %786 = insertelement <4 x float> poison, float %785, i32 0
  %787 = shufflevector <4 x float> %786, <4 x float> poison, <4 x i32> zeroinitializer
  %788 = insertelement <4 x float> poison, float %785, i32 0
  %789 = shufflevector <4 x float> %788, <4 x float> poison, <4 x i32> zeroinitializer
  %790 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 0
  %791 = bitcast float* %790 to <4 x float>*
  store <4 x float> %787, <4 x float>* %791, align 16, !tbaa !9
  %792 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 4
  %793 = bitcast float* %792 to <4 x float>*
  store <4 x float> %789, <4 x float>* %793, align 16, !tbaa !9
  %794 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 8
  %795 = bitcast float* %794 to <4 x float>*
  store <4 x float> %787, <4 x float>* %795, align 16, !tbaa !9
  %796 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 12
  %797 = bitcast float* %796 to <4 x float>*
  store <4 x float> %789, <4 x float>* %797, align 16, !tbaa !9
  %798 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 16
  %799 = bitcast float* %798 to <4 x float>*
  store <4 x float> %787, <4 x float>* %799, align 16, !tbaa !9
  %800 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 20
  %801 = bitcast float* %800 to <4 x float>*
  store <4 x float> %789, <4 x float>* %801, align 16, !tbaa !9
  %802 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 24
  %803 = bitcast float* %802 to <4 x float>*
  store <4 x float> %787, <4 x float>* %803, align 16, !tbaa !9
  %804 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 28
  %805 = bitcast float* %804 to <4 x float>*
  store <4 x float> %789, <4 x float>* %805, align 16, !tbaa !9
  %806 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 32
  %807 = bitcast float* %806 to <4 x float>*
  store <4 x float> %787, <4 x float>* %807, align 16, !tbaa !9
  %808 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 36
  %809 = bitcast float* %808 to <4 x float>*
  store <4 x float> %789, <4 x float>* %809, align 16, !tbaa !9
  %810 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 40
  %811 = bitcast float* %810 to <4 x float>*
  store <4 x float> %787, <4 x float>* %811, align 16, !tbaa !9
  %812 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 44
  %813 = bitcast float* %812 to <4 x float>*
  store <4 x float> %789, <4 x float>* %813, align 16, !tbaa !9
  %814 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 48
  %815 = bitcast float* %814 to <4 x float>*
  store <4 x float> %787, <4 x float>* %815, align 16, !tbaa !9
  %816 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 52
  %817 = bitcast float* %816 to <4 x float>*
  store <4 x float> %789, <4 x float>* %817, align 16, !tbaa !9
  %818 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 56
  %819 = bitcast float* %818 to <4 x float>*
  store <4 x float> %787, <4 x float>* %819, align 16, !tbaa !9
  %820 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 60
  %821 = bitcast float* %820 to <4 x float>*
  store <4 x float> %789, <4 x float>* %821, align 16, !tbaa !9
  %822 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 64
  %823 = bitcast float* %822 to <4 x float>*
  store <4 x float> %787, <4 x float>* %823, align 16, !tbaa !9
  %824 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 68
  %825 = bitcast float* %824 to <4 x float>*
  store <4 x float> %789, <4 x float>* %825, align 16, !tbaa !9
  %826 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 72
  %827 = bitcast float* %826 to <4 x float>*
  store <4 x float> %787, <4 x float>* %827, align 16, !tbaa !9
  %828 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 76
  %829 = bitcast float* %828 to <4 x float>*
  store <4 x float> %789, <4 x float>* %829, align 16, !tbaa !9
  %830 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 80
  %831 = bitcast float* %830 to <4 x float>*
  store <4 x float> %787, <4 x float>* %831, align 16, !tbaa !9
  %832 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 84
  %833 = bitcast float* %832 to <4 x float>*
  store <4 x float> %789, <4 x float>* %833, align 16, !tbaa !9
  %834 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 88
  %835 = bitcast float* %834 to <4 x float>*
  store <4 x float> %787, <4 x float>* %835, align 16, !tbaa !9
  %836 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 92
  %837 = bitcast float* %836 to <4 x float>*
  store <4 x float> %789, <4 x float>* %837, align 16, !tbaa !9
  %838 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 96
  %839 = bitcast float* %838 to <4 x float>*
  store <4 x float> %787, <4 x float>* %839, align 16, !tbaa !9
  %840 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 100
  %841 = bitcast float* %840 to <4 x float>*
  store <4 x float> %789, <4 x float>* %841, align 16, !tbaa !9
  %842 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 104
  %843 = bitcast float* %842 to <4 x float>*
  store <4 x float> %787, <4 x float>* %843, align 16, !tbaa !9
  %844 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 108
  %845 = bitcast float* %844 to <4 x float>*
  store <4 x float> %789, <4 x float>* %845, align 16, !tbaa !9
  %846 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 112
  %847 = bitcast float* %846 to <4 x float>*
  store <4 x float> %787, <4 x float>* %847, align 16, !tbaa !9
  %848 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 116
  %849 = bitcast float* %848 to <4 x float>*
  store <4 x float> %789, <4 x float>* %849, align 16, !tbaa !9
  %850 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 120
  %851 = bitcast float* %850 to <4 x float>*
  store <4 x float> %787, <4 x float>* %851, align 16, !tbaa !9
  %852 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 124
  %853 = bitcast float* %852 to <4 x float>*
  store <4 x float> %789, <4 x float>* %853, align 16, !tbaa !9
  %854 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 128
  %855 = bitcast float* %854 to <4 x float>*
  store <4 x float> %787, <4 x float>* %855, align 16, !tbaa !9
  %856 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 132
  %857 = bitcast float* %856 to <4 x float>*
  store <4 x float> %789, <4 x float>* %857, align 16, !tbaa !9
  %858 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 136
  %859 = bitcast float* %858 to <4 x float>*
  store <4 x float> %787, <4 x float>* %859, align 16, !tbaa !9
  %860 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 140
  %861 = bitcast float* %860 to <4 x float>*
  store <4 x float> %789, <4 x float>* %861, align 16, !tbaa !9
  %862 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 144
  %863 = bitcast float* %862 to <4 x float>*
  store <4 x float> %787, <4 x float>* %863, align 16, !tbaa !9
  %864 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 148
  %865 = bitcast float* %864 to <4 x float>*
  store <4 x float> %789, <4 x float>* %865, align 16, !tbaa !9
  %866 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 152
  %867 = bitcast float* %866 to <4 x float>*
  store <4 x float> %787, <4 x float>* %867, align 16, !tbaa !9
  %868 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 156
  %869 = bitcast float* %868 to <4 x float>*
  store <4 x float> %789, <4 x float>* %869, align 16, !tbaa !9
  %870 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 160
  %871 = bitcast float* %870 to <4 x float>*
  store <4 x float> %787, <4 x float>* %871, align 16, !tbaa !9
  %872 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 164
  %873 = bitcast float* %872 to <4 x float>*
  store <4 x float> %789, <4 x float>* %873, align 16, !tbaa !9
  %874 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 168
  %875 = bitcast float* %874 to <4 x float>*
  store <4 x float> %787, <4 x float>* %875, align 16, !tbaa !9
  %876 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 172
  %877 = bitcast float* %876 to <4 x float>*
  store <4 x float> %789, <4 x float>* %877, align 16, !tbaa !9
  %878 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 176
  %879 = bitcast float* %878 to <4 x float>*
  store <4 x float> %787, <4 x float>* %879, align 16, !tbaa !9
  %880 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 180
  %881 = bitcast float* %880 to <4 x float>*
  store <4 x float> %789, <4 x float>* %881, align 16, !tbaa !9
  %882 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 184
  %883 = bitcast float* %882 to <4 x float>*
  store <4 x float> %787, <4 x float>* %883, align 16, !tbaa !9
  %884 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 188
  %885 = bitcast float* %884 to <4 x float>*
  store <4 x float> %789, <4 x float>* %885, align 16, !tbaa !9
  %886 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 192
  %887 = bitcast float* %886 to <4 x float>*
  store <4 x float> %787, <4 x float>* %887, align 16, !tbaa !9
  %888 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 196
  %889 = bitcast float* %888 to <4 x float>*
  store <4 x float> %789, <4 x float>* %889, align 16, !tbaa !9
  %890 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 200
  %891 = bitcast float* %890 to <4 x float>*
  store <4 x float> %787, <4 x float>* %891, align 16, !tbaa !9
  %892 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 204
  %893 = bitcast float* %892 to <4 x float>*
  store <4 x float> %789, <4 x float>* %893, align 16, !tbaa !9
  %894 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 208
  %895 = bitcast float* %894 to <4 x float>*
  store <4 x float> %787, <4 x float>* %895, align 16, !tbaa !9
  %896 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 212
  %897 = bitcast float* %896 to <4 x float>*
  store <4 x float> %789, <4 x float>* %897, align 16, !tbaa !9
  %898 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 216
  %899 = bitcast float* %898 to <4 x float>*
  store <4 x float> %787, <4 x float>* %899, align 16, !tbaa !9
  %900 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 220
  %901 = bitcast float* %900 to <4 x float>*
  store <4 x float> %789, <4 x float>* %901, align 16, !tbaa !9
  %902 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 224
  %903 = bitcast float* %902 to <4 x float>*
  store <4 x float> %787, <4 x float>* %903, align 16, !tbaa !9
  %904 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 228
  %905 = bitcast float* %904 to <4 x float>*
  store <4 x float> %789, <4 x float>* %905, align 16, !tbaa !9
  %906 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 232
  %907 = bitcast float* %906 to <4 x float>*
  store <4 x float> %787, <4 x float>* %907, align 16, !tbaa !9
  %908 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 236
  %909 = bitcast float* %908 to <4 x float>*
  store <4 x float> %789, <4 x float>* %909, align 16, !tbaa !9
  %910 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 240
  %911 = bitcast float* %910 to <4 x float>*
  store <4 x float> %787, <4 x float>* %911, align 16, !tbaa !9
  %912 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 244
  %913 = bitcast float* %912 to <4 x float>*
  store <4 x float> %789, <4 x float>* %913, align 16, !tbaa !9
  %914 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 248
  %915 = bitcast float* %914 to <4 x float>*
  store <4 x float> %787, <4 x float>* %915, align 16, !tbaa !9
  %916 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %781, i64 252
  %917 = bitcast float* %916 to <4 x float>*
  store <4 x float> %789, <4 x float>* %917, align 16, !tbaa !9
  %918 = icmp eq i64 %782, 256
  br i1 %918, label %6516, label %780, !llvm.loop !23

919:                                              ; preds = %753
  %920 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0))
  %921 = icmp eq i32 %920, 0
  br i1 %921, label %922, label %977

922:                                              ; preds = %919
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %923

923:                                              ; preds = %923, %922
  %924 = phi i64 [ 0, %922 ], [ %938, %923 ]
  %925 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %922 ], [ %939, %923 ]
  %926 = trunc <4 x i64> %925 to <4 x i32>
  %927 = add <4 x i32> %926, <i32 1, i32 1, i32 1, i32 1>
  %928 = trunc <4 x i64> %925 to <4 x i32>
  %929 = add <4 x i32> %928, <i32 5, i32 5, i32 5, i32 5>
  %930 = sitofp <4 x i32> %927 to <4 x float>
  %931 = sitofp <4 x i32> %929 to <4 x float>
  %932 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %930
  %933 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %931
  %934 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %924
  %935 = bitcast float* %934 to <4 x float>*
  store <4 x float> %932, <4 x float>* %935, align 16, !tbaa !9
  %936 = getelementptr inbounds float, float* %934, i64 4
  %937 = bitcast float* %936 to <4 x float>*
  store <4 x float> %933, <4 x float>* %937, align 16, !tbaa !9
  %938 = add nuw i64 %924, 8
  %939 = add <4 x i64> %925, <i64 8, i64 8, i64 8, i64 8>
  %940 = icmp eq i64 %938, 32000
  br i1 %940, label %941, label %923, !llvm.loop !47

941:                                              ; preds = %923, %941
  %942 = phi i64 [ %956, %941 ], [ 0, %923 ]
  %943 = phi <4 x i64> [ %957, %941 ], [ <i64 0, i64 1, i64 2, i64 3>, %923 ]
  %944 = trunc <4 x i64> %943 to <4 x i32>
  %945 = add <4 x i32> %944, <i32 1, i32 1, i32 1, i32 1>
  %946 = trunc <4 x i64> %943 to <4 x i32>
  %947 = add <4 x i32> %946, <i32 5, i32 5, i32 5, i32 5>
  %948 = sitofp <4 x i32> %945 to <4 x float>
  %949 = sitofp <4 x i32> %947 to <4 x float>
  %950 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %948
  %951 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %949
  %952 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %942
  %953 = bitcast float* %952 to <4 x float>*
  store <4 x float> %950, <4 x float>* %953, align 16, !tbaa !9
  %954 = getelementptr inbounds float, float* %952, i64 4
  %955 = bitcast float* %954 to <4 x float>*
  store <4 x float> %951, <4 x float>* %955, align 16, !tbaa !9
  %956 = add nuw i64 %942, 8
  %957 = add <4 x i64> %943, <i64 8, i64 8, i64 8, i64 8>
  %958 = icmp eq i64 %956, 32000
  br i1 %958, label %959, label %941, !llvm.loop !48

959:                                              ; preds = %941, %959
  %960 = phi i64 [ %974, %959 ], [ 0, %941 ]
  %961 = phi <4 x i64> [ %975, %959 ], [ <i64 0, i64 1, i64 2, i64 3>, %941 ]
  %962 = trunc <4 x i64> %961 to <4 x i32>
  %963 = add <4 x i32> %962, <i32 1, i32 1, i32 1, i32 1>
  %964 = trunc <4 x i64> %961 to <4 x i32>
  %965 = add <4 x i32> %964, <i32 5, i32 5, i32 5, i32 5>
  %966 = sitofp <4 x i32> %963 to <4 x float>
  %967 = sitofp <4 x i32> %965 to <4 x float>
  %968 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %966
  %969 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %967
  %970 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %960
  %971 = bitcast float* %970 to <4 x float>*
  store <4 x float> %968, <4 x float>* %971, align 16, !tbaa !9
  %972 = getelementptr inbounds float, float* %970, i64 4
  %973 = bitcast float* %972 to <4 x float>*
  store <4 x float> %969, <4 x float>* %973, align 16, !tbaa !9
  %974 = add nuw i64 %960, 8
  %975 = add <4 x i64> %961, <i64 8, i64 8, i64 8, i64 8>
  %976 = icmp eq i64 %974, 32000
  br i1 %976, label %6516, label %959, !llvm.loop !49

977:                                              ; preds = %919
  %978 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0))
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %980, label %981

980:                                              ; preds = %977
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.465 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @d to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

981:                                              ; preds = %977
  %982 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0))
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %984, label %998

984:                                              ; preds = %981
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %985

985:                                              ; preds = %985, %984
  %986 = phi i64 [ 0, %984 ], [ %995, %985 ]
  %987 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %984 ], [ %996, %985 ]
  %988 = add nuw nsw <4 x i64> %987, <i64 1, i64 1, i64 1, i64 1>
  %989 = mul nuw nsw <4 x i64> %988, %988
  %990 = trunc <4 x i64> %989 to <4 x i32>
  %991 = sitofp <4 x i32> %990 to <4 x float>
  %992 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %991
  %993 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %986
  %994 = bitcast float* %993 to <4 x float>*
  store <4 x float> %992, <4 x float>* %994, align 16, !tbaa !9
  %995 = add nuw i64 %986, 4
  %996 = add <4 x i64> %987, <i64 4, i64 4, i64 4, i64 4>
  %997 = icmp eq i64 %995, 32000
  br i1 %997, label %6516, label %985, !llvm.loop !50

998:                                              ; preds = %981
  %999 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0))
  %1000 = icmp eq i32 %999, 0
  br i1 %1000, label %1001, label %1043

1001:                                             ; preds = %998, %1001
  %1002 = phi i64 [ %1005, %1001 ], [ 0, %998 ]
  %1003 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1002, i64 0
  %1004 = bitcast float* %1003 to i8*
  call void @memset_pattern16(i8* %1004, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %1005 = add nuw nsw i64 %1002, 1
  %1006 = icmp eq i64 %1005, 256
  br i1 %1006, label %1007, label %1001, !llvm.loop !26

1007:                                             ; preds = %1001, %1007
  %1008 = phi i64 [ %1022, %1007 ], [ 0, %1001 ]
  %1009 = phi <4 x i64> [ %1023, %1007 ], [ <i64 0, i64 1, i64 2, i64 3>, %1001 ]
  %1010 = trunc <4 x i64> %1009 to <4 x i32>
  %1011 = add <4 x i32> %1010, <i32 1, i32 1, i32 1, i32 1>
  %1012 = trunc <4 x i64> %1009 to <4 x i32>
  %1013 = add <4 x i32> %1012, <i32 5, i32 5, i32 5, i32 5>
  %1014 = sitofp <4 x i32> %1011 to <4 x float>
  %1015 = sitofp <4 x i32> %1013 to <4 x float>
  %1016 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1014
  %1017 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1015
  %1018 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1008
  %1019 = bitcast float* %1018 to <4 x float>*
  store <4 x float> %1016, <4 x float>* %1019, align 16, !tbaa !9
  %1020 = getelementptr inbounds float, float* %1018, i64 4
  %1021 = bitcast float* %1020 to <4 x float>*
  store <4 x float> %1017, <4 x float>* %1021, align 16, !tbaa !9
  %1022 = add nuw i64 %1008, 8
  %1023 = add <4 x i64> %1009, <i64 8, i64 8, i64 8, i64 8>
  %1024 = icmp eq i64 %1022, 32000
  br i1 %1024, label %1025, label %1007, !llvm.loop !51

1025:                                             ; preds = %1007, %1025
  %1026 = phi i64 [ %1040, %1025 ], [ 0, %1007 ]
  %1027 = phi <4 x i64> [ %1041, %1025 ], [ <i64 0, i64 1, i64 2, i64 3>, %1007 ]
  %1028 = trunc <4 x i64> %1027 to <4 x i32>
  %1029 = add <4 x i32> %1028, <i32 1, i32 1, i32 1, i32 1>
  %1030 = trunc <4 x i64> %1027 to <4 x i32>
  %1031 = add <4 x i32> %1030, <i32 5, i32 5, i32 5, i32 5>
  %1032 = sitofp <4 x i32> %1029 to <4 x float>
  %1033 = sitofp <4 x i32> %1031 to <4 x float>
  %1034 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1032
  %1035 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1033
  %1036 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1026
  %1037 = bitcast float* %1036 to <4 x float>*
  store <4 x float> %1034, <4 x float>* %1037, align 16, !tbaa !9
  %1038 = getelementptr inbounds float, float* %1036, i64 4
  %1039 = bitcast float* %1038 to <4 x float>*
  store <4 x float> %1035, <4 x float>* %1039, align 16, !tbaa !9
  %1040 = add nuw i64 %1026, 8
  %1041 = add <4 x i64> %1027, <i64 8, i64 8, i64 8, i64 8>
  %1042 = icmp eq i64 %1040, 32000
  br i1 %1042, label %6516, label %1025, !llvm.loop !52

1043:                                             ; preds = %998
  %1044 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0))
  %1045 = icmp eq i32 %1044, 0
  br i1 %1045, label %1046, label %1187

1046:                                             ; preds = %1043
  call void @memset_pattern16(i8* bitcast ([65536 x float]* @array to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1047

1047:                                             ; preds = %1046, %1047
  %1048 = phi i64 [ %1049, %1047 ], [ 0, %1046 ]
  %1049 = add nuw nsw i64 %1048, 1
  %1050 = trunc i64 %1049 to i32
  %1051 = mul nsw i32 %1050, %1050
  %1052 = sitofp i32 %1051 to float
  %1053 = fdiv float 1.000000e+00, %1052
  %1054 = insertelement <4 x float> poison, float %1053, i32 0
  %1055 = shufflevector <4 x float> %1054, <4 x float> poison, <4 x i32> zeroinitializer
  %1056 = insertelement <4 x float> poison, float %1053, i32 0
  %1057 = shufflevector <4 x float> %1056, <4 x float> poison, <4 x i32> zeroinitializer
  %1058 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 0
  %1059 = bitcast float* %1058 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1059, align 16, !tbaa !9
  %1060 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 4
  %1061 = bitcast float* %1060 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1061, align 16, !tbaa !9
  %1062 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 8
  %1063 = bitcast float* %1062 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1063, align 16, !tbaa !9
  %1064 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 12
  %1065 = bitcast float* %1064 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1065, align 16, !tbaa !9
  %1066 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 16
  %1067 = bitcast float* %1066 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1067, align 16, !tbaa !9
  %1068 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 20
  %1069 = bitcast float* %1068 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1069, align 16, !tbaa !9
  %1070 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 24
  %1071 = bitcast float* %1070 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1071, align 16, !tbaa !9
  %1072 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 28
  %1073 = bitcast float* %1072 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1073, align 16, !tbaa !9
  %1074 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 32
  %1075 = bitcast float* %1074 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1075, align 16, !tbaa !9
  %1076 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 36
  %1077 = bitcast float* %1076 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1077, align 16, !tbaa !9
  %1078 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 40
  %1079 = bitcast float* %1078 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1079, align 16, !tbaa !9
  %1080 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 44
  %1081 = bitcast float* %1080 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1081, align 16, !tbaa !9
  %1082 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 48
  %1083 = bitcast float* %1082 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1083, align 16, !tbaa !9
  %1084 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 52
  %1085 = bitcast float* %1084 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1085, align 16, !tbaa !9
  %1086 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 56
  %1087 = bitcast float* %1086 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1087, align 16, !tbaa !9
  %1088 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 60
  %1089 = bitcast float* %1088 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1089, align 16, !tbaa !9
  %1090 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 64
  %1091 = bitcast float* %1090 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1091, align 16, !tbaa !9
  %1092 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 68
  %1093 = bitcast float* %1092 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1093, align 16, !tbaa !9
  %1094 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 72
  %1095 = bitcast float* %1094 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1095, align 16, !tbaa !9
  %1096 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 76
  %1097 = bitcast float* %1096 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1097, align 16, !tbaa !9
  %1098 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 80
  %1099 = bitcast float* %1098 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1099, align 16, !tbaa !9
  %1100 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 84
  %1101 = bitcast float* %1100 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1101, align 16, !tbaa !9
  %1102 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 88
  %1103 = bitcast float* %1102 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1103, align 16, !tbaa !9
  %1104 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 92
  %1105 = bitcast float* %1104 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1105, align 16, !tbaa !9
  %1106 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 96
  %1107 = bitcast float* %1106 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1107, align 16, !tbaa !9
  %1108 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 100
  %1109 = bitcast float* %1108 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1109, align 16, !tbaa !9
  %1110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 104
  %1111 = bitcast float* %1110 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1111, align 16, !tbaa !9
  %1112 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 108
  %1113 = bitcast float* %1112 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1113, align 16, !tbaa !9
  %1114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 112
  %1115 = bitcast float* %1114 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1115, align 16, !tbaa !9
  %1116 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 116
  %1117 = bitcast float* %1116 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1117, align 16, !tbaa !9
  %1118 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 120
  %1119 = bitcast float* %1118 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1119, align 16, !tbaa !9
  %1120 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 124
  %1121 = bitcast float* %1120 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1121, align 16, !tbaa !9
  %1122 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 128
  %1123 = bitcast float* %1122 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1123, align 16, !tbaa !9
  %1124 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 132
  %1125 = bitcast float* %1124 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1125, align 16, !tbaa !9
  %1126 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 136
  %1127 = bitcast float* %1126 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1127, align 16, !tbaa !9
  %1128 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 140
  %1129 = bitcast float* %1128 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1129, align 16, !tbaa !9
  %1130 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 144
  %1131 = bitcast float* %1130 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1131, align 16, !tbaa !9
  %1132 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 148
  %1133 = bitcast float* %1132 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1133, align 16, !tbaa !9
  %1134 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 152
  %1135 = bitcast float* %1134 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1135, align 16, !tbaa !9
  %1136 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 156
  %1137 = bitcast float* %1136 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1137, align 16, !tbaa !9
  %1138 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 160
  %1139 = bitcast float* %1138 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1139, align 16, !tbaa !9
  %1140 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 164
  %1141 = bitcast float* %1140 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1141, align 16, !tbaa !9
  %1142 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 168
  %1143 = bitcast float* %1142 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1143, align 16, !tbaa !9
  %1144 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 172
  %1145 = bitcast float* %1144 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1145, align 16, !tbaa !9
  %1146 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 176
  %1147 = bitcast float* %1146 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1147, align 16, !tbaa !9
  %1148 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 180
  %1149 = bitcast float* %1148 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1149, align 16, !tbaa !9
  %1150 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 184
  %1151 = bitcast float* %1150 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1151, align 16, !tbaa !9
  %1152 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 188
  %1153 = bitcast float* %1152 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1153, align 16, !tbaa !9
  %1154 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 192
  %1155 = bitcast float* %1154 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1155, align 16, !tbaa !9
  %1156 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 196
  %1157 = bitcast float* %1156 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1157, align 16, !tbaa !9
  %1158 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 200
  %1159 = bitcast float* %1158 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1159, align 16, !tbaa !9
  %1160 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 204
  %1161 = bitcast float* %1160 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1161, align 16, !tbaa !9
  %1162 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 208
  %1163 = bitcast float* %1162 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1163, align 16, !tbaa !9
  %1164 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 212
  %1165 = bitcast float* %1164 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1165, align 16, !tbaa !9
  %1166 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 216
  %1167 = bitcast float* %1166 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1167, align 16, !tbaa !9
  %1168 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 220
  %1169 = bitcast float* %1168 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1169, align 16, !tbaa !9
  %1170 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 224
  %1171 = bitcast float* %1170 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1171, align 16, !tbaa !9
  %1172 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 228
  %1173 = bitcast float* %1172 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1173, align 16, !tbaa !9
  %1174 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 232
  %1175 = bitcast float* %1174 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1175, align 16, !tbaa !9
  %1176 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 236
  %1177 = bitcast float* %1176 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1177, align 16, !tbaa !9
  %1178 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 240
  %1179 = bitcast float* %1178 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1179, align 16, !tbaa !9
  %1180 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 244
  %1181 = bitcast float* %1180 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1181, align 16, !tbaa !9
  %1182 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 248
  %1183 = bitcast float* %1182 to <4 x float>*
  store <4 x float> %1055, <4 x float>* %1183, align 16, !tbaa !9
  %1184 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1048, i64 252
  %1185 = bitcast float* %1184 to <4 x float>*
  store <4 x float> %1057, <4 x float>* %1185, align 16, !tbaa !9
  %1186 = icmp eq i64 %1049, 256
  br i1 %1186, label %6516, label %1047, !llvm.loop !24

1187:                                             ; preds = %1043
  %1188 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0))
  %1189 = icmp eq i32 %1188, 0
  br i1 %1189, label %1190, label %1204

1190:                                             ; preds = %1187
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1191

1191:                                             ; preds = %1191, %1190
  %1192 = phi i64 [ 0, %1190 ], [ %1201, %1191 ]
  %1193 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1190 ], [ %1202, %1191 ]
  %1194 = add nuw nsw <4 x i64> %1193, <i64 1, i64 1, i64 1, i64 1>
  %1195 = mul nuw nsw <4 x i64> %1194, %1194
  %1196 = trunc <4 x i64> %1195 to <4 x i32>
  %1197 = sitofp <4 x i32> %1196 to <4 x float>
  %1198 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1197
  %1199 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1192
  %1200 = bitcast float* %1199 to <4 x float>*
  store <4 x float> %1198, <4 x float>* %1200, align 16, !tbaa !9
  %1201 = add nuw i64 %1192, 4
  %1202 = add <4 x i64> %1193, <i64 4, i64 4, i64 4, i64 4>
  %1203 = icmp eq i64 %1201, 32000
  br i1 %1203, label %6516, label %1191, !llvm.loop !53

1204:                                             ; preds = %1187
  %1205 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0))
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1207, label %1262

1207:                                             ; preds = %1204
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %1208

1208:                                             ; preds = %1208, %1207
  %1209 = phi i64 [ 0, %1207 ], [ %1223, %1208 ]
  %1210 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1207 ], [ %1224, %1208 ]
  %1211 = trunc <4 x i64> %1210 to <4 x i32>
  %1212 = add <4 x i32> %1211, <i32 1, i32 1, i32 1, i32 1>
  %1213 = trunc <4 x i64> %1210 to <4 x i32>
  %1214 = add <4 x i32> %1213, <i32 5, i32 5, i32 5, i32 5>
  %1215 = sitofp <4 x i32> %1212 to <4 x float>
  %1216 = sitofp <4 x i32> %1214 to <4 x float>
  %1217 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1215
  %1218 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1216
  %1219 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1209
  %1220 = bitcast float* %1219 to <4 x float>*
  store <4 x float> %1217, <4 x float>* %1220, align 16, !tbaa !9
  %1221 = getelementptr inbounds float, float* %1219, i64 4
  %1222 = bitcast float* %1221 to <4 x float>*
  store <4 x float> %1218, <4 x float>* %1222, align 16, !tbaa !9
  %1223 = add nuw i64 %1209, 8
  %1224 = add <4 x i64> %1210, <i64 8, i64 8, i64 8, i64 8>
  %1225 = icmp eq i64 %1223, 32000
  br i1 %1225, label %1226, label %1208, !llvm.loop !54

1226:                                             ; preds = %1208, %1226
  %1227 = phi i64 [ %1241, %1226 ], [ 0, %1208 ]
  %1228 = phi <4 x i64> [ %1242, %1226 ], [ <i64 0, i64 1, i64 2, i64 3>, %1208 ]
  %1229 = trunc <4 x i64> %1228 to <4 x i32>
  %1230 = add <4 x i32> %1229, <i32 1, i32 1, i32 1, i32 1>
  %1231 = trunc <4 x i64> %1228 to <4 x i32>
  %1232 = add <4 x i32> %1231, <i32 5, i32 5, i32 5, i32 5>
  %1233 = sitofp <4 x i32> %1230 to <4 x float>
  %1234 = sitofp <4 x i32> %1232 to <4 x float>
  %1235 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1233
  %1236 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1234
  %1237 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %1227
  %1238 = bitcast float* %1237 to <4 x float>*
  store <4 x float> %1235, <4 x float>* %1238, align 16, !tbaa !9
  %1239 = getelementptr inbounds float, float* %1237, i64 4
  %1240 = bitcast float* %1239 to <4 x float>*
  store <4 x float> %1236, <4 x float>* %1240, align 16, !tbaa !9
  %1241 = add nuw i64 %1227, 8
  %1242 = add <4 x i64> %1228, <i64 8, i64 8, i64 8, i64 8>
  %1243 = icmp eq i64 %1241, 32000
  br i1 %1243, label %1244, label %1226, !llvm.loop !55

1244:                                             ; preds = %1226, %1244
  %1245 = phi i64 [ %1259, %1244 ], [ 0, %1226 ]
  %1246 = phi <4 x i64> [ %1260, %1244 ], [ <i64 0, i64 1, i64 2, i64 3>, %1226 ]
  %1247 = trunc <4 x i64> %1246 to <4 x i32>
  %1248 = add <4 x i32> %1247, <i32 1, i32 1, i32 1, i32 1>
  %1249 = trunc <4 x i64> %1246 to <4 x i32>
  %1250 = add <4 x i32> %1249, <i32 5, i32 5, i32 5, i32 5>
  %1251 = sitofp <4 x i32> %1248 to <4 x float>
  %1252 = sitofp <4 x i32> %1250 to <4 x float>
  %1253 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1251
  %1254 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1252
  %1255 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %1245
  %1256 = bitcast float* %1255 to <4 x float>*
  store <4 x float> %1253, <4 x float>* %1256, align 16, !tbaa !9
  %1257 = getelementptr inbounds float, float* %1255, i64 4
  %1258 = bitcast float* %1257 to <4 x float>*
  store <4 x float> %1254, <4 x float>* %1258, align 16, !tbaa !9
  %1259 = add nuw i64 %1245, 8
  %1260 = add <4 x i64> %1246, <i64 8, i64 8, i64 8, i64 8>
  %1261 = icmp eq i64 %1259, 32000
  br i1 %1261, label %6516, label %1244, !llvm.loop !56

1262:                                             ; preds = %1204
  %1263 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0))
  %1264 = icmp eq i32 %1263, 0
  br i1 %1264, label %1265, label %1319

1265:                                             ; preds = %1262
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1266

1266:                                             ; preds = %1266, %1265
  %1267 = phi i64 [ 0, %1265 ], [ %1272, %1266 ]
  %1268 = shl i64 %1267, 1
  %1269 = or i64 %1268, 2
  %1270 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1268
  %1271 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1269
  store float 1.000000e+00, float* %1270, align 16, !tbaa !9
  store float 1.000000e+00, float* %1271, align 8, !tbaa !9
  %1272 = add nuw i64 %1267, 2
  %1273 = icmp eq i64 %1272, 16000
  br i1 %1273, label %1274, label %1266, !llvm.loop !57

1274:                                             ; preds = %1266, %1274
  %1275 = phi i64 [ %1280, %1274 ], [ 0, %1266 ]
  %1276 = shl i64 %1275, 1
  %1277 = or i64 %1276, 2
  %1278 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %1276
  %1279 = getelementptr inbounds float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), i64 %1277
  store float -1.000000e+00, float* %1278, align 4, !tbaa !9
  store float -1.000000e+00, float* %1279, align 4, !tbaa !9
  %1280 = add nuw i64 %1275, 2
  %1281 = icmp eq i64 %1280, 16000
  br i1 %1281, label %1282, label %1274, !llvm.loop !58

1282:                                             ; preds = %1274
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1283

1283:                                             ; preds = %1283, %1282
  %1284 = phi i64 [ 0, %1282 ], [ %1298, %1283 ]
  %1285 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1282 ], [ %1299, %1283 ]
  %1286 = trunc <4 x i64> %1285 to <4 x i32>
  %1287 = add <4 x i32> %1286, <i32 1, i32 1, i32 1, i32 1>
  %1288 = trunc <4 x i64> %1285 to <4 x i32>
  %1289 = add <4 x i32> %1288, <i32 5, i32 5, i32 5, i32 5>
  %1290 = sitofp <4 x i32> %1287 to <4 x float>
  %1291 = sitofp <4 x i32> %1289 to <4 x float>
  %1292 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1290
  %1293 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1291
  %1294 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %1284
  %1295 = bitcast float* %1294 to <4 x float>*
  store <4 x float> %1292, <4 x float>* %1295, align 16, !tbaa !9
  %1296 = getelementptr inbounds float, float* %1294, i64 4
  %1297 = bitcast float* %1296 to <4 x float>*
  store <4 x float> %1293, <4 x float>* %1297, align 16, !tbaa !9
  %1298 = add nuw i64 %1284, 8
  %1299 = add <4 x i64> %1285, <i64 8, i64 8, i64 8, i64 8>
  %1300 = icmp eq i64 %1298, 32000
  br i1 %1300, label %1301, label %1283, !llvm.loop !59

1301:                                             ; preds = %1283, %1301
  %1302 = phi i64 [ %1316, %1301 ], [ 0, %1283 ]
  %1303 = phi <4 x i64> [ %1317, %1301 ], [ <i64 0, i64 1, i64 2, i64 3>, %1283 ]
  %1304 = trunc <4 x i64> %1303 to <4 x i32>
  %1305 = add <4 x i32> %1304, <i32 1, i32 1, i32 1, i32 1>
  %1306 = trunc <4 x i64> %1303 to <4 x i32>
  %1307 = add <4 x i32> %1306, <i32 5, i32 5, i32 5, i32 5>
  %1308 = sitofp <4 x i32> %1305 to <4 x float>
  %1309 = sitofp <4 x i32> %1307 to <4 x float>
  %1310 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1308
  %1311 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1309
  %1312 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %1302
  %1313 = bitcast float* %1312 to <4 x float>*
  store <4 x float> %1310, <4 x float>* %1313, align 16, !tbaa !9
  %1314 = getelementptr inbounds float, float* %1312, i64 4
  %1315 = bitcast float* %1314 to <4 x float>*
  store <4 x float> %1311, <4 x float>* %1315, align 16, !tbaa !9
  %1316 = add nuw i64 %1302, 8
  %1317 = add <4 x i64> %1303, <i64 8, i64 8, i64 8, i64 8>
  %1318 = icmp eq i64 %1316, 32000
  br i1 %1318, label %6516, label %1301, !llvm.loop !60

1319:                                             ; preds = %1262
  %1320 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0))
  %1321 = icmp eq i32 %1320, 0
  br i1 %1321, label %1322, label %1359

1322:                                             ; preds = %1319
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1323

1323:                                             ; preds = %1323, %1322
  %1324 = phi i64 [ 0, %1322 ], [ %1338, %1323 ]
  %1325 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1322 ], [ %1339, %1323 ]
  %1326 = trunc <4 x i64> %1325 to <4 x i32>
  %1327 = add <4 x i32> %1326, <i32 1, i32 1, i32 1, i32 1>
  %1328 = trunc <4 x i64> %1325 to <4 x i32>
  %1329 = add <4 x i32> %1328, <i32 5, i32 5, i32 5, i32 5>
  %1330 = sitofp <4 x i32> %1327 to <4 x float>
  %1331 = sitofp <4 x i32> %1329 to <4 x float>
  %1332 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1330
  %1333 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1331
  %1334 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1324
  %1335 = bitcast float* %1334 to <4 x float>*
  store <4 x float> %1332, <4 x float>* %1335, align 16, !tbaa !9
  %1336 = getelementptr inbounds float, float* %1334, i64 4
  %1337 = bitcast float* %1336 to <4 x float>*
  store <4 x float> %1333, <4 x float>* %1337, align 16, !tbaa !9
  %1338 = add nuw i64 %1324, 8
  %1339 = add <4 x i64> %1325, <i64 8, i64 8, i64 8, i64 8>
  %1340 = icmp eq i64 %1338, 32000
  br i1 %1340, label %1341, label %1323, !llvm.loop !61

1341:                                             ; preds = %1323, %1341
  %1342 = phi i64 [ %1356, %1341 ], [ 0, %1323 ]
  %1343 = phi <4 x i64> [ %1357, %1341 ], [ <i64 0, i64 1, i64 2, i64 3>, %1323 ]
  %1344 = trunc <4 x i64> %1343 to <4 x i32>
  %1345 = add <4 x i32> %1344, <i32 1, i32 1, i32 1, i32 1>
  %1346 = trunc <4 x i64> %1343 to <4 x i32>
  %1347 = add <4 x i32> %1346, <i32 5, i32 5, i32 5, i32 5>
  %1348 = sitofp <4 x i32> %1345 to <4 x float>
  %1349 = sitofp <4 x i32> %1347 to <4 x float>
  %1350 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1348
  %1351 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1349
  %1352 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1342
  %1353 = bitcast float* %1352 to <4 x float>*
  store <4 x float> %1350, <4 x float>* %1353, align 16, !tbaa !9
  %1354 = getelementptr inbounds float, float* %1352, i64 4
  %1355 = bitcast float* %1354 to <4 x float>*
  store <4 x float> %1351, <4 x float>* %1355, align 16, !tbaa !9
  %1356 = add nuw i64 %1342, 8
  %1357 = add <4 x i64> %1343, <i64 8, i64 8, i64 8, i64 8>
  %1358 = icmp eq i64 %1356, 32000
  br i1 %1358, label %6516, label %1341, !llvm.loop !62

1359:                                             ; preds = %1319
  %1360 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0))
  %1361 = icmp eq i32 %1360, 0
  br i1 %1361, label %1362, label %1376

1362:                                             ; preds = %1359
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1363

1363:                                             ; preds = %1363, %1362
  %1364 = phi i64 [ 0, %1362 ], [ %1373, %1363 ]
  %1365 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1362 ], [ %1374, %1363 ]
  %1366 = add nuw nsw <4 x i64> %1365, <i64 1, i64 1, i64 1, i64 1>
  %1367 = mul nuw nsw <4 x i64> %1366, %1366
  %1368 = trunc <4 x i64> %1367 to <4 x i32>
  %1369 = sitofp <4 x i32> %1368 to <4 x float>
  %1370 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1369
  %1371 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1364
  %1372 = bitcast float* %1371 to <4 x float>*
  store <4 x float> %1370, <4 x float>* %1372, align 16, !tbaa !9
  %1373 = add nuw i64 %1364, 4
  %1374 = add <4 x i64> %1365, <i64 4, i64 4, i64 4, i64 4>
  %1375 = icmp eq i64 %1373, 32000
  br i1 %1375, label %6516, label %1363, !llvm.loop !63

1376:                                             ; preds = %1359
  %1377 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0))
  %1378 = icmp eq i32 %1377, 0
  br i1 %1378, label %1379, label %1393

1379:                                             ; preds = %1376
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1380

1380:                                             ; preds = %1380, %1379
  %1381 = phi i64 [ 0, %1379 ], [ %1390, %1380 ]
  %1382 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1379 ], [ %1391, %1380 ]
  %1383 = add nuw nsw <4 x i64> %1382, <i64 1, i64 1, i64 1, i64 1>
  %1384 = mul nuw nsw <4 x i64> %1383, %1383
  %1385 = trunc <4 x i64> %1384 to <4 x i32>
  %1386 = sitofp <4 x i32> %1385 to <4 x float>
  %1387 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1386
  %1388 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1381
  %1389 = bitcast float* %1388 to <4 x float>*
  store <4 x float> %1387, <4 x float>* %1389, align 16, !tbaa !9
  %1390 = add nuw i64 %1381, 4
  %1391 = add <4 x i64> %1382, <i64 4, i64 4, i64 4, i64 4>
  %1392 = icmp eq i64 %1390, 32000
  br i1 %1392, label %6516, label %1380, !llvm.loop !64

1393:                                             ; preds = %1376
  %1394 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0))
  %1395 = icmp eq i32 %1394, 0
  br i1 %1395, label %1396, label %1410

1396:                                             ; preds = %1393
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1397

1397:                                             ; preds = %1397, %1396
  %1398 = phi i64 [ 0, %1396 ], [ %1407, %1397 ]
  %1399 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1396 ], [ %1408, %1397 ]
  %1400 = add nuw nsw <4 x i64> %1399, <i64 1, i64 1, i64 1, i64 1>
  %1401 = mul nuw nsw <4 x i64> %1400, %1400
  %1402 = trunc <4 x i64> %1401 to <4 x i32>
  %1403 = sitofp <4 x i32> %1402 to <4 x float>
  %1404 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1403
  %1405 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1398
  %1406 = bitcast float* %1405 to <4 x float>*
  store <4 x float> %1404, <4 x float>* %1406, align 16, !tbaa !9
  %1407 = add nuw i64 %1398, 4
  %1408 = add <4 x i64> %1399, <i64 4, i64 4, i64 4, i64 4>
  %1409 = icmp eq i64 %1407, 32000
  br i1 %1409, label %6516, label %1397, !llvm.loop !65

1410:                                             ; preds = %1393
  %1411 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0))
  %1412 = icmp eq i32 %1411, 0
  br i1 %1412, label %1413, label %1427

1413:                                             ; preds = %1410
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1414

1414:                                             ; preds = %1414, %1413
  %1415 = phi i64 [ 0, %1413 ], [ %1424, %1414 ]
  %1416 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1413 ], [ %1425, %1414 ]
  %1417 = add nuw nsw <4 x i64> %1416, <i64 1, i64 1, i64 1, i64 1>
  %1418 = mul nuw nsw <4 x i64> %1417, %1417
  %1419 = trunc <4 x i64> %1418 to <4 x i32>
  %1420 = sitofp <4 x i32> %1419 to <4 x float>
  %1421 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1420
  %1422 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1415
  %1423 = bitcast float* %1422 to <4 x float>*
  store <4 x float> %1421, <4 x float>* %1423, align 16, !tbaa !9
  %1424 = add nuw i64 %1415, 4
  %1425 = add <4 x i64> %1416, <i64 4, i64 4, i64 4, i64 4>
  %1426 = icmp eq i64 %1424, 32000
  br i1 %1426, label %6516, label %1414, !llvm.loop !66

1427:                                             ; preds = %1410
  %1428 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0))
  %1429 = icmp eq i32 %1428, 0
  br i1 %1429, label %1430, label %1444

1430:                                             ; preds = %1427
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1431

1431:                                             ; preds = %1431, %1430
  %1432 = phi i64 [ 0, %1430 ], [ %1441, %1431 ]
  %1433 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1430 ], [ %1442, %1431 ]
  %1434 = add nuw nsw <4 x i64> %1433, <i64 1, i64 1, i64 1, i64 1>
  %1435 = mul nuw nsw <4 x i64> %1434, %1434
  %1436 = trunc <4 x i64> %1435 to <4 x i32>
  %1437 = sitofp <4 x i32> %1436 to <4 x float>
  %1438 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1437
  %1439 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1432
  %1440 = bitcast float* %1439 to <4 x float>*
  store <4 x float> %1438, <4 x float>* %1440, align 16, !tbaa !9
  %1441 = add nuw i64 %1432, 4
  %1442 = add <4 x i64> %1433, <i64 4, i64 4, i64 4, i64 4>
  %1443 = icmp eq i64 %1441, 32000
  br i1 %1443, label %6516, label %1431, !llvm.loop !67

1444:                                             ; preds = %1427
  %1445 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0))
  %1446 = icmp eq i32 %1445, 0
  br i1 %1446, label %1447, label %1484

1447:                                             ; preds = %1444
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1448

1448:                                             ; preds = %1448, %1447
  %1449 = phi i64 [ 0, %1447 ], [ %1463, %1448 ]
  %1450 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1447 ], [ %1464, %1448 ]
  %1451 = trunc <4 x i64> %1450 to <4 x i32>
  %1452 = add <4 x i32> %1451, <i32 1, i32 1, i32 1, i32 1>
  %1453 = trunc <4 x i64> %1450 to <4 x i32>
  %1454 = add <4 x i32> %1453, <i32 5, i32 5, i32 5, i32 5>
  %1455 = sitofp <4 x i32> %1452 to <4 x float>
  %1456 = sitofp <4 x i32> %1454 to <4 x float>
  %1457 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1455
  %1458 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1456
  %1459 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1449
  %1460 = bitcast float* %1459 to <4 x float>*
  store <4 x float> %1457, <4 x float>* %1460, align 16, !tbaa !9
  %1461 = getelementptr inbounds float, float* %1459, i64 4
  %1462 = bitcast float* %1461 to <4 x float>*
  store <4 x float> %1458, <4 x float>* %1462, align 16, !tbaa !9
  %1463 = add nuw i64 %1449, 8
  %1464 = add <4 x i64> %1450, <i64 8, i64 8, i64 8, i64 8>
  %1465 = icmp eq i64 %1463, 32000
  br i1 %1465, label %1466, label %1448, !llvm.loop !68

1466:                                             ; preds = %1448, %1466
  %1467 = phi i64 [ %1481, %1466 ], [ 0, %1448 ]
  %1468 = phi <4 x i64> [ %1482, %1466 ], [ <i64 0, i64 1, i64 2, i64 3>, %1448 ]
  %1469 = trunc <4 x i64> %1468 to <4 x i32>
  %1470 = add <4 x i32> %1469, <i32 1, i32 1, i32 1, i32 1>
  %1471 = trunc <4 x i64> %1468 to <4 x i32>
  %1472 = add <4 x i32> %1471, <i32 5, i32 5, i32 5, i32 5>
  %1473 = sitofp <4 x i32> %1470 to <4 x float>
  %1474 = sitofp <4 x i32> %1472 to <4 x float>
  %1475 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1473
  %1476 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1474
  %1477 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1467
  %1478 = bitcast float* %1477 to <4 x float>*
  store <4 x float> %1475, <4 x float>* %1478, align 16, !tbaa !9
  %1479 = getelementptr inbounds float, float* %1477, i64 4
  %1480 = bitcast float* %1479 to <4 x float>*
  store <4 x float> %1476, <4 x float>* %1480, align 16, !tbaa !9
  %1481 = add nuw i64 %1467, 8
  %1482 = add <4 x i64> %1468, <i64 8, i64 8, i64 8, i64 8>
  %1483 = icmp eq i64 %1481, 32000
  br i1 %1483, label %6516, label %1466, !llvm.loop !69

1484:                                             ; preds = %1444
  %1485 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0))
  %1486 = icmp eq i32 %1485, 0
  br i1 %1486, label %1487, label %1542

1487:                                             ; preds = %1484
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1488

1488:                                             ; preds = %1488, %1487
  %1489 = phi i64 [ 0, %1487 ], [ %1503, %1488 ]
  %1490 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1487 ], [ %1504, %1488 ]
  %1491 = trunc <4 x i64> %1490 to <4 x i32>
  %1492 = add <4 x i32> %1491, <i32 1, i32 1, i32 1, i32 1>
  %1493 = trunc <4 x i64> %1490 to <4 x i32>
  %1494 = add <4 x i32> %1493, <i32 5, i32 5, i32 5, i32 5>
  %1495 = sitofp <4 x i32> %1492 to <4 x float>
  %1496 = sitofp <4 x i32> %1494 to <4 x float>
  %1497 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1495
  %1498 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1496
  %1499 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1489
  %1500 = bitcast float* %1499 to <4 x float>*
  store <4 x float> %1497, <4 x float>* %1500, align 16, !tbaa !9
  %1501 = getelementptr inbounds float, float* %1499, i64 4
  %1502 = bitcast float* %1501 to <4 x float>*
  store <4 x float> %1498, <4 x float>* %1502, align 16, !tbaa !9
  %1503 = add nuw i64 %1489, 8
  %1504 = add <4 x i64> %1490, <i64 8, i64 8, i64 8, i64 8>
  %1505 = icmp eq i64 %1503, 32000
  br i1 %1505, label %1506, label %1488, !llvm.loop !70

1506:                                             ; preds = %1488, %1506
  %1507 = phi i64 [ %1521, %1506 ], [ 0, %1488 ]
  %1508 = phi <4 x i64> [ %1522, %1506 ], [ <i64 0, i64 1, i64 2, i64 3>, %1488 ]
  %1509 = trunc <4 x i64> %1508 to <4 x i32>
  %1510 = add <4 x i32> %1509, <i32 1, i32 1, i32 1, i32 1>
  %1511 = trunc <4 x i64> %1508 to <4 x i32>
  %1512 = add <4 x i32> %1511, <i32 5, i32 5, i32 5, i32 5>
  %1513 = sitofp <4 x i32> %1510 to <4 x float>
  %1514 = sitofp <4 x i32> %1512 to <4 x float>
  %1515 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1513
  %1516 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1514
  %1517 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %1507
  %1518 = bitcast float* %1517 to <4 x float>*
  store <4 x float> %1515, <4 x float>* %1518, align 16, !tbaa !9
  %1519 = getelementptr inbounds float, float* %1517, i64 4
  %1520 = bitcast float* %1519 to <4 x float>*
  store <4 x float> %1516, <4 x float>* %1520, align 16, !tbaa !9
  %1521 = add nuw i64 %1507, 8
  %1522 = add <4 x i64> %1508, <i64 8, i64 8, i64 8, i64 8>
  %1523 = icmp eq i64 %1521, 32000
  br i1 %1523, label %1524, label %1506, !llvm.loop !71

1524:                                             ; preds = %1506, %1524
  %1525 = phi i64 [ %1539, %1524 ], [ 0, %1506 ]
  %1526 = phi <4 x i64> [ %1540, %1524 ], [ <i64 0, i64 1, i64 2, i64 3>, %1506 ]
  %1527 = trunc <4 x i64> %1526 to <4 x i32>
  %1528 = add <4 x i32> %1527, <i32 1, i32 1, i32 1, i32 1>
  %1529 = trunc <4 x i64> %1526 to <4 x i32>
  %1530 = add <4 x i32> %1529, <i32 5, i32 5, i32 5, i32 5>
  %1531 = sitofp <4 x i32> %1528 to <4 x float>
  %1532 = sitofp <4 x i32> %1530 to <4 x float>
  %1533 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1531
  %1534 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1532
  %1535 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %1525
  %1536 = bitcast float* %1535 to <4 x float>*
  store <4 x float> %1533, <4 x float>* %1536, align 16, !tbaa !9
  %1537 = getelementptr inbounds float, float* %1535, i64 4
  %1538 = bitcast float* %1537 to <4 x float>*
  store <4 x float> %1534, <4 x float>* %1538, align 16, !tbaa !9
  %1539 = add nuw i64 %1525, 8
  %1540 = add <4 x i64> %1526, <i64 8, i64 8, i64 8, i64 8>
  %1541 = icmp eq i64 %1539, 32000
  br i1 %1541, label %6516, label %1524, !llvm.loop !72

1542:                                             ; preds = %1484
  %1543 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0))
  %1544 = icmp eq i32 %1543, 0
  br i1 %1544, label %1545, label %1582

1545:                                             ; preds = %1542, %1545
  %1546 = phi i64 [ %1560, %1545 ], [ 0, %1542 ]
  %1547 = phi <4 x i64> [ %1561, %1545 ], [ <i64 0, i64 1, i64 2, i64 3>, %1542 ]
  %1548 = trunc <4 x i64> %1547 to <4 x i32>
  %1549 = add <4 x i32> %1548, <i32 1, i32 1, i32 1, i32 1>
  %1550 = trunc <4 x i64> %1547 to <4 x i32>
  %1551 = add <4 x i32> %1550, <i32 5, i32 5, i32 5, i32 5>
  %1552 = sitofp <4 x i32> %1549 to <4 x float>
  %1553 = sitofp <4 x i32> %1551 to <4 x float>
  %1554 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1552
  %1555 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1553
  %1556 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %1546
  %1557 = bitcast float* %1556 to <4 x float>*
  store <4 x float> %1554, <4 x float>* %1557, align 16, !tbaa !9
  %1558 = getelementptr inbounds float, float* %1556, i64 4
  %1559 = bitcast float* %1558 to <4 x float>*
  store <4 x float> %1555, <4 x float>* %1559, align 16, !tbaa !9
  %1560 = add nuw i64 %1546, 8
  %1561 = add <4 x i64> %1547, <i64 8, i64 8, i64 8, i64 8>
  %1562 = icmp eq i64 %1560, 32000
  br i1 %1562, label %1563, label %1545, !llvm.loop !73

1563:                                             ; preds = %1545
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1564

1564:                                             ; preds = %1564, %1563
  %1565 = phi i64 [ 0, %1563 ], [ %1579, %1564 ]
  %1566 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1563 ], [ %1580, %1564 ]
  %1567 = trunc <4 x i64> %1566 to <4 x i32>
  %1568 = add <4 x i32> %1567, <i32 1, i32 1, i32 1, i32 1>
  %1569 = trunc <4 x i64> %1566 to <4 x i32>
  %1570 = add <4 x i32> %1569, <i32 5, i32 5, i32 5, i32 5>
  %1571 = sitofp <4 x i32> %1568 to <4 x float>
  %1572 = sitofp <4 x i32> %1570 to <4 x float>
  %1573 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1571
  %1574 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1572
  %1575 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %1565
  %1576 = bitcast float* %1575 to <4 x float>*
  store <4 x float> %1573, <4 x float>* %1576, align 16, !tbaa !9
  %1577 = getelementptr inbounds float, float* %1575, i64 4
  %1578 = bitcast float* %1577 to <4 x float>*
  store <4 x float> %1574, <4 x float>* %1578, align 16, !tbaa !9
  %1579 = add nuw i64 %1565, 8
  %1580 = add <4 x i64> %1566, <i64 8, i64 8, i64 8, i64 8>
  %1581 = icmp eq i64 %1579, 32000
  br i1 %1581, label %6516, label %1564, !llvm.loop !74

1582:                                             ; preds = %1542
  %1583 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %1584 = icmp eq i32 %1583, 0
  br i1 %1584, label %1585, label %1640

1585:                                             ; preds = %1582
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %1586

1586:                                             ; preds = %1586, %1585
  %1587 = phi i64 [ 0, %1585 ], [ %1601, %1586 ]
  %1588 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %1585 ], [ %1602, %1586 ]
  %1589 = trunc <4 x i64> %1588 to <4 x i32>
  %1590 = add <4 x i32> %1589, <i32 1, i32 1, i32 1, i32 1>
  %1591 = trunc <4 x i64> %1588 to <4 x i32>
  %1592 = add <4 x i32> %1591, <i32 5, i32 5, i32 5, i32 5>
  %1593 = sitofp <4 x i32> %1590 to <4 x float>
  %1594 = sitofp <4 x i32> %1592 to <4 x float>
  %1595 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1593
  %1596 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1594
  %1597 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %1587
  %1598 = bitcast float* %1597 to <4 x float>*
  store <4 x float> %1595, <4 x float>* %1598, align 16, !tbaa !9
  %1599 = getelementptr inbounds float, float* %1597, i64 4
  %1600 = bitcast float* %1599 to <4 x float>*
  store <4 x float> %1596, <4 x float>* %1600, align 16, !tbaa !9
  %1601 = add nuw i64 %1587, 8
  %1602 = add <4 x i64> %1588, <i64 8, i64 8, i64 8, i64 8>
  %1603 = icmp eq i64 %1601, 32000
  br i1 %1603, label %1604, label %1586, !llvm.loop !75

1604:                                             ; preds = %1586, %1604
  %1605 = phi i64 [ %1619, %1604 ], [ 0, %1586 ]
  %1606 = phi <4 x i64> [ %1620, %1604 ], [ <i64 0, i64 1, i64 2, i64 3>, %1586 ]
  %1607 = trunc <4 x i64> %1606 to <4 x i32>
  %1608 = add <4 x i32> %1607, <i32 1, i32 1, i32 1, i32 1>
  %1609 = trunc <4 x i64> %1606 to <4 x i32>
  %1610 = add <4 x i32> %1609, <i32 5, i32 5, i32 5, i32 5>
  %1611 = sitofp <4 x i32> %1608 to <4 x float>
  %1612 = sitofp <4 x i32> %1610 to <4 x float>
  %1613 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1611
  %1614 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1612
  %1615 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %1605
  %1616 = bitcast float* %1615 to <4 x float>*
  store <4 x float> %1613, <4 x float>* %1616, align 16, !tbaa !9
  %1617 = getelementptr inbounds float, float* %1615, i64 4
  %1618 = bitcast float* %1617 to <4 x float>*
  store <4 x float> %1614, <4 x float>* %1618, align 16, !tbaa !9
  %1619 = add nuw i64 %1605, 8
  %1620 = add <4 x i64> %1606, <i64 8, i64 8, i64 8, i64 8>
  %1621 = icmp eq i64 %1619, 32000
  br i1 %1621, label %1622, label %1604, !llvm.loop !76

1622:                                             ; preds = %1604, %1622
  %1623 = phi i64 [ %1637, %1622 ], [ 0, %1604 ]
  %1624 = phi <4 x i64> [ %1638, %1622 ], [ <i64 0, i64 1, i64 2, i64 3>, %1604 ]
  %1625 = trunc <4 x i64> %1624 to <4 x i32>
  %1626 = add <4 x i32> %1625, <i32 1, i32 1, i32 1, i32 1>
  %1627 = trunc <4 x i64> %1624 to <4 x i32>
  %1628 = add <4 x i32> %1627, <i32 5, i32 5, i32 5, i32 5>
  %1629 = sitofp <4 x i32> %1626 to <4 x float>
  %1630 = sitofp <4 x i32> %1628 to <4 x float>
  %1631 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1629
  %1632 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1630
  %1633 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %1623
  %1634 = bitcast float* %1633 to <4 x float>*
  store <4 x float> %1631, <4 x float>* %1634, align 16, !tbaa !9
  %1635 = getelementptr inbounds float, float* %1633, i64 4
  %1636 = bitcast float* %1635 to <4 x float>*
  store <4 x float> %1632, <4 x float>* %1636, align 16, !tbaa !9
  %1637 = add nuw i64 %1623, 8
  %1638 = add <4 x i64> %1624, <i64 8, i64 8, i64 8, i64 8>
  %1639 = icmp eq i64 %1637, 32000
  br i1 %1639, label %6516, label %1622, !llvm.loop !77

1640:                                             ; preds = %1582
  %1641 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0))
  %1642 = icmp eq i32 %1641, 0
  br i1 %1642, label %1643, label %1644

1643:                                             ; preds = %1640
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

1644:                                             ; preds = %1640
  %1645 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %1646 = icmp eq i32 %1645, 0
  br i1 %1646, label %1647, label %1793

1647:                                             ; preds = %1644, %1647
  %1648 = phi i64 [ %1651, %1647 ], [ 0, %1644 ]
  %1649 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1648, i64 0
  %1650 = bitcast float* %1649 to i8*
  call void @memset_pattern16(i8* %1650, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %1651 = add nuw nsw i64 %1648, 1
  %1652 = icmp eq i64 %1651, 256
  br i1 %1652, label %1653, label %1647, !llvm.loop !26

1653:                                             ; preds = %1647, %1653
  %1654 = phi i64 [ %1655, %1653 ], [ 0, %1647 ]
  %1655 = add nuw nsw i64 %1654, 1
  %1656 = trunc i64 %1655 to i32
  %1657 = mul nsw i32 %1656, %1656
  %1658 = sitofp i32 %1657 to float
  %1659 = fdiv float 1.000000e+00, %1658
  %1660 = insertelement <4 x float> poison, float %1659, i32 0
  %1661 = shufflevector <4 x float> %1660, <4 x float> poison, <4 x i32> zeroinitializer
  %1662 = insertelement <4 x float> poison, float %1659, i32 0
  %1663 = shufflevector <4 x float> %1662, <4 x float> poison, <4 x i32> zeroinitializer
  %1664 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 0
  %1665 = bitcast float* %1664 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1665, align 16, !tbaa !9
  %1666 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 4
  %1667 = bitcast float* %1666 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1667, align 16, !tbaa !9
  %1668 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 8
  %1669 = bitcast float* %1668 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1669, align 16, !tbaa !9
  %1670 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 12
  %1671 = bitcast float* %1670 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1671, align 16, !tbaa !9
  %1672 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 16
  %1673 = bitcast float* %1672 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1673, align 16, !tbaa !9
  %1674 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 20
  %1675 = bitcast float* %1674 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1675, align 16, !tbaa !9
  %1676 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 24
  %1677 = bitcast float* %1676 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1677, align 16, !tbaa !9
  %1678 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 28
  %1679 = bitcast float* %1678 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1679, align 16, !tbaa !9
  %1680 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 32
  %1681 = bitcast float* %1680 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1681, align 16, !tbaa !9
  %1682 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 36
  %1683 = bitcast float* %1682 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1683, align 16, !tbaa !9
  %1684 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 40
  %1685 = bitcast float* %1684 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1685, align 16, !tbaa !9
  %1686 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 44
  %1687 = bitcast float* %1686 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1687, align 16, !tbaa !9
  %1688 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 48
  %1689 = bitcast float* %1688 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1689, align 16, !tbaa !9
  %1690 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 52
  %1691 = bitcast float* %1690 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1691, align 16, !tbaa !9
  %1692 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 56
  %1693 = bitcast float* %1692 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1693, align 16, !tbaa !9
  %1694 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 60
  %1695 = bitcast float* %1694 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1695, align 16, !tbaa !9
  %1696 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 64
  %1697 = bitcast float* %1696 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1697, align 16, !tbaa !9
  %1698 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 68
  %1699 = bitcast float* %1698 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1699, align 16, !tbaa !9
  %1700 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 72
  %1701 = bitcast float* %1700 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1701, align 16, !tbaa !9
  %1702 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 76
  %1703 = bitcast float* %1702 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1703, align 16, !tbaa !9
  %1704 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 80
  %1705 = bitcast float* %1704 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1705, align 16, !tbaa !9
  %1706 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 84
  %1707 = bitcast float* %1706 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1707, align 16, !tbaa !9
  %1708 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 88
  %1709 = bitcast float* %1708 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1709, align 16, !tbaa !9
  %1710 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 92
  %1711 = bitcast float* %1710 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1711, align 16, !tbaa !9
  %1712 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 96
  %1713 = bitcast float* %1712 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1713, align 16, !tbaa !9
  %1714 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 100
  %1715 = bitcast float* %1714 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1715, align 16, !tbaa !9
  %1716 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 104
  %1717 = bitcast float* %1716 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1717, align 16, !tbaa !9
  %1718 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 108
  %1719 = bitcast float* %1718 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1719, align 16, !tbaa !9
  %1720 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 112
  %1721 = bitcast float* %1720 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1721, align 16, !tbaa !9
  %1722 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 116
  %1723 = bitcast float* %1722 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1723, align 16, !tbaa !9
  %1724 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 120
  %1725 = bitcast float* %1724 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1725, align 16, !tbaa !9
  %1726 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 124
  %1727 = bitcast float* %1726 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1727, align 16, !tbaa !9
  %1728 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 128
  %1729 = bitcast float* %1728 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1729, align 16, !tbaa !9
  %1730 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 132
  %1731 = bitcast float* %1730 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1731, align 16, !tbaa !9
  %1732 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 136
  %1733 = bitcast float* %1732 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1733, align 16, !tbaa !9
  %1734 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 140
  %1735 = bitcast float* %1734 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1735, align 16, !tbaa !9
  %1736 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 144
  %1737 = bitcast float* %1736 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1737, align 16, !tbaa !9
  %1738 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 148
  %1739 = bitcast float* %1738 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1739, align 16, !tbaa !9
  %1740 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 152
  %1741 = bitcast float* %1740 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1741, align 16, !tbaa !9
  %1742 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 156
  %1743 = bitcast float* %1742 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1743, align 16, !tbaa !9
  %1744 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 160
  %1745 = bitcast float* %1744 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1745, align 16, !tbaa !9
  %1746 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 164
  %1747 = bitcast float* %1746 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1747, align 16, !tbaa !9
  %1748 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 168
  %1749 = bitcast float* %1748 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1749, align 16, !tbaa !9
  %1750 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 172
  %1751 = bitcast float* %1750 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1751, align 16, !tbaa !9
  %1752 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 176
  %1753 = bitcast float* %1752 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1753, align 16, !tbaa !9
  %1754 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 180
  %1755 = bitcast float* %1754 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1755, align 16, !tbaa !9
  %1756 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 184
  %1757 = bitcast float* %1756 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1757, align 16, !tbaa !9
  %1758 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 188
  %1759 = bitcast float* %1758 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1759, align 16, !tbaa !9
  %1760 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 192
  %1761 = bitcast float* %1760 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1761, align 16, !tbaa !9
  %1762 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 196
  %1763 = bitcast float* %1762 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1763, align 16, !tbaa !9
  %1764 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 200
  %1765 = bitcast float* %1764 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1765, align 16, !tbaa !9
  %1766 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 204
  %1767 = bitcast float* %1766 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1767, align 16, !tbaa !9
  %1768 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 208
  %1769 = bitcast float* %1768 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1769, align 16, !tbaa !9
  %1770 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 212
  %1771 = bitcast float* %1770 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1771, align 16, !tbaa !9
  %1772 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 216
  %1773 = bitcast float* %1772 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1773, align 16, !tbaa !9
  %1774 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 220
  %1775 = bitcast float* %1774 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1775, align 16, !tbaa !9
  %1776 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 224
  %1777 = bitcast float* %1776 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1777, align 16, !tbaa !9
  %1778 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 228
  %1779 = bitcast float* %1778 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1779, align 16, !tbaa !9
  %1780 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 232
  %1781 = bitcast float* %1780 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1781, align 16, !tbaa !9
  %1782 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 236
  %1783 = bitcast float* %1782 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1783, align 16, !tbaa !9
  %1784 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 240
  %1785 = bitcast float* %1784 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1785, align 16, !tbaa !9
  %1786 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 244
  %1787 = bitcast float* %1786 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1787, align 16, !tbaa !9
  %1788 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 248
  %1789 = bitcast float* %1788 to <4 x float>*
  store <4 x float> %1661, <4 x float>* %1789, align 16, !tbaa !9
  %1790 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1654, i64 252
  %1791 = bitcast float* %1790 to <4 x float>*
  store <4 x float> %1663, <4 x float>* %1791, align 16, !tbaa !9
  %1792 = icmp eq i64 %1655, 256
  br i1 %1792, label %6516, label %1653, !llvm.loop !24

1793:                                             ; preds = %1644
  %1794 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0))
  %1795 = icmp eq i32 %1794, 0
  br i1 %1795, label %1796, label %1803

1796:                                             ; preds = %1793, %1796
  %1797 = phi i64 [ %1800, %1796 ], [ 0, %1793 ]
  %1798 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1797, i64 0
  %1799 = bitcast float* %1798 to i8*
  call void @memset_pattern16(i8* %1799, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %1800 = add nuw nsw i64 %1797, 1
  %1801 = icmp eq i64 %1800, 256
  br i1 %1801, label %1802, label %1796, !llvm.loop !26

1802:                                             ; preds = %1796
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(262144) bitcast ([256 x [256 x float]]* @bb to i8*), i8 0, i64 262144, i1 false)
  br label %6516

1803:                                             ; preds = %1793
  %1804 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %1805 = icmp eq i32 %1804, 0
  br i1 %1805, label %1806, label %2223

1806:                                             ; preds = %1803, %1806
  %1807 = phi i64 [ %1808, %1806 ], [ 0, %1803 ]
  %1808 = add nuw nsw i64 %1807, 1
  %1809 = trunc i64 %1808 to i32
  %1810 = sitofp i32 %1809 to float
  %1811 = fdiv float 1.000000e+00, %1810
  %1812 = insertelement <4 x float> poison, float %1811, i32 0
  %1813 = shufflevector <4 x float> %1812, <4 x float> poison, <4 x i32> zeroinitializer
  %1814 = insertelement <4 x float> poison, float %1811, i32 0
  %1815 = shufflevector <4 x float> %1814, <4 x float> poison, <4 x i32> zeroinitializer
  %1816 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 0
  %1817 = bitcast float* %1816 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1817, align 16, !tbaa !9
  %1818 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 4
  %1819 = bitcast float* %1818 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1819, align 16, !tbaa !9
  %1820 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 8
  %1821 = bitcast float* %1820 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1821, align 16, !tbaa !9
  %1822 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 12
  %1823 = bitcast float* %1822 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1823, align 16, !tbaa !9
  %1824 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 16
  %1825 = bitcast float* %1824 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1825, align 16, !tbaa !9
  %1826 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 20
  %1827 = bitcast float* %1826 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1827, align 16, !tbaa !9
  %1828 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 24
  %1829 = bitcast float* %1828 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1829, align 16, !tbaa !9
  %1830 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 28
  %1831 = bitcast float* %1830 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1831, align 16, !tbaa !9
  %1832 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 32
  %1833 = bitcast float* %1832 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1833, align 16, !tbaa !9
  %1834 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 36
  %1835 = bitcast float* %1834 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1835, align 16, !tbaa !9
  %1836 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 40
  %1837 = bitcast float* %1836 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1837, align 16, !tbaa !9
  %1838 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 44
  %1839 = bitcast float* %1838 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1839, align 16, !tbaa !9
  %1840 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 48
  %1841 = bitcast float* %1840 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1841, align 16, !tbaa !9
  %1842 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 52
  %1843 = bitcast float* %1842 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1843, align 16, !tbaa !9
  %1844 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 56
  %1845 = bitcast float* %1844 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1845, align 16, !tbaa !9
  %1846 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 60
  %1847 = bitcast float* %1846 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1847, align 16, !tbaa !9
  %1848 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 64
  %1849 = bitcast float* %1848 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1849, align 16, !tbaa !9
  %1850 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 68
  %1851 = bitcast float* %1850 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1851, align 16, !tbaa !9
  %1852 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 72
  %1853 = bitcast float* %1852 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1853, align 16, !tbaa !9
  %1854 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 76
  %1855 = bitcast float* %1854 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1855, align 16, !tbaa !9
  %1856 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 80
  %1857 = bitcast float* %1856 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1857, align 16, !tbaa !9
  %1858 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 84
  %1859 = bitcast float* %1858 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1859, align 16, !tbaa !9
  %1860 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 88
  %1861 = bitcast float* %1860 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1861, align 16, !tbaa !9
  %1862 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 92
  %1863 = bitcast float* %1862 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1863, align 16, !tbaa !9
  %1864 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 96
  %1865 = bitcast float* %1864 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1865, align 16, !tbaa !9
  %1866 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 100
  %1867 = bitcast float* %1866 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1867, align 16, !tbaa !9
  %1868 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 104
  %1869 = bitcast float* %1868 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1869, align 16, !tbaa !9
  %1870 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 108
  %1871 = bitcast float* %1870 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1871, align 16, !tbaa !9
  %1872 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 112
  %1873 = bitcast float* %1872 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1873, align 16, !tbaa !9
  %1874 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 116
  %1875 = bitcast float* %1874 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1875, align 16, !tbaa !9
  %1876 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 120
  %1877 = bitcast float* %1876 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1877, align 16, !tbaa !9
  %1878 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 124
  %1879 = bitcast float* %1878 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1879, align 16, !tbaa !9
  %1880 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 128
  %1881 = bitcast float* %1880 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1881, align 16, !tbaa !9
  %1882 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 132
  %1883 = bitcast float* %1882 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1883, align 16, !tbaa !9
  %1884 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 136
  %1885 = bitcast float* %1884 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1885, align 16, !tbaa !9
  %1886 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 140
  %1887 = bitcast float* %1886 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1887, align 16, !tbaa !9
  %1888 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 144
  %1889 = bitcast float* %1888 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1889, align 16, !tbaa !9
  %1890 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 148
  %1891 = bitcast float* %1890 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1891, align 16, !tbaa !9
  %1892 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 152
  %1893 = bitcast float* %1892 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1893, align 16, !tbaa !9
  %1894 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 156
  %1895 = bitcast float* %1894 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1895, align 16, !tbaa !9
  %1896 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 160
  %1897 = bitcast float* %1896 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1897, align 16, !tbaa !9
  %1898 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 164
  %1899 = bitcast float* %1898 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1899, align 16, !tbaa !9
  %1900 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 168
  %1901 = bitcast float* %1900 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1901, align 16, !tbaa !9
  %1902 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 172
  %1903 = bitcast float* %1902 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1903, align 16, !tbaa !9
  %1904 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 176
  %1905 = bitcast float* %1904 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1905, align 16, !tbaa !9
  %1906 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 180
  %1907 = bitcast float* %1906 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1907, align 16, !tbaa !9
  %1908 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 184
  %1909 = bitcast float* %1908 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1909, align 16, !tbaa !9
  %1910 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 188
  %1911 = bitcast float* %1910 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1911, align 16, !tbaa !9
  %1912 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 192
  %1913 = bitcast float* %1912 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1913, align 16, !tbaa !9
  %1914 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 196
  %1915 = bitcast float* %1914 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1915, align 16, !tbaa !9
  %1916 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 200
  %1917 = bitcast float* %1916 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1917, align 16, !tbaa !9
  %1918 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 204
  %1919 = bitcast float* %1918 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1919, align 16, !tbaa !9
  %1920 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 208
  %1921 = bitcast float* %1920 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1921, align 16, !tbaa !9
  %1922 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 212
  %1923 = bitcast float* %1922 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1923, align 16, !tbaa !9
  %1924 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 216
  %1925 = bitcast float* %1924 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1925, align 16, !tbaa !9
  %1926 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 220
  %1927 = bitcast float* %1926 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1927, align 16, !tbaa !9
  %1928 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 224
  %1929 = bitcast float* %1928 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1929, align 16, !tbaa !9
  %1930 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 228
  %1931 = bitcast float* %1930 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1931, align 16, !tbaa !9
  %1932 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 232
  %1933 = bitcast float* %1932 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1933, align 16, !tbaa !9
  %1934 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 236
  %1935 = bitcast float* %1934 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1935, align 16, !tbaa !9
  %1936 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 240
  %1937 = bitcast float* %1936 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1937, align 16, !tbaa !9
  %1938 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 244
  %1939 = bitcast float* %1938 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1939, align 16, !tbaa !9
  %1940 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 248
  %1941 = bitcast float* %1940 to <4 x float>*
  store <4 x float> %1813, <4 x float>* %1941, align 16, !tbaa !9
  %1942 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %1807, i64 252
  %1943 = bitcast float* %1942 to <4 x float>*
  store <4 x float> %1815, <4 x float>* %1943, align 16, !tbaa !9
  %1944 = icmp eq i64 %1808, 256
  br i1 %1944, label %1945, label %1806, !llvm.loop !23

1945:                                             ; preds = %1806, %1945
  %1946 = phi i64 [ %1947, %1945 ], [ 0, %1806 ]
  %1947 = add nuw nsw i64 %1946, 1
  %1948 = trunc i64 %1947 to i32
  %1949 = sitofp i32 %1948 to float
  %1950 = fdiv float 1.000000e+00, %1949
  %1951 = insertelement <4 x float> poison, float %1950, i32 0
  %1952 = shufflevector <4 x float> %1951, <4 x float> poison, <4 x i32> zeroinitializer
  %1953 = insertelement <4 x float> poison, float %1950, i32 0
  %1954 = shufflevector <4 x float> %1953, <4 x float> poison, <4 x i32> zeroinitializer
  %1955 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 0
  %1956 = bitcast float* %1955 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1956, align 16, !tbaa !9
  %1957 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 4
  %1958 = bitcast float* %1957 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1958, align 16, !tbaa !9
  %1959 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 8
  %1960 = bitcast float* %1959 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1960, align 16, !tbaa !9
  %1961 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 12
  %1962 = bitcast float* %1961 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1962, align 16, !tbaa !9
  %1963 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 16
  %1964 = bitcast float* %1963 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1964, align 16, !tbaa !9
  %1965 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 20
  %1966 = bitcast float* %1965 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1966, align 16, !tbaa !9
  %1967 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 24
  %1968 = bitcast float* %1967 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1968, align 16, !tbaa !9
  %1969 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 28
  %1970 = bitcast float* %1969 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1970, align 16, !tbaa !9
  %1971 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 32
  %1972 = bitcast float* %1971 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1972, align 16, !tbaa !9
  %1973 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 36
  %1974 = bitcast float* %1973 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1974, align 16, !tbaa !9
  %1975 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 40
  %1976 = bitcast float* %1975 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1976, align 16, !tbaa !9
  %1977 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 44
  %1978 = bitcast float* %1977 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1978, align 16, !tbaa !9
  %1979 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 48
  %1980 = bitcast float* %1979 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1980, align 16, !tbaa !9
  %1981 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 52
  %1982 = bitcast float* %1981 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1982, align 16, !tbaa !9
  %1983 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 56
  %1984 = bitcast float* %1983 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1984, align 16, !tbaa !9
  %1985 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 60
  %1986 = bitcast float* %1985 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1986, align 16, !tbaa !9
  %1987 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 64
  %1988 = bitcast float* %1987 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1988, align 16, !tbaa !9
  %1989 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 68
  %1990 = bitcast float* %1989 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1990, align 16, !tbaa !9
  %1991 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 72
  %1992 = bitcast float* %1991 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1992, align 16, !tbaa !9
  %1993 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 76
  %1994 = bitcast float* %1993 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1994, align 16, !tbaa !9
  %1995 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 80
  %1996 = bitcast float* %1995 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %1996, align 16, !tbaa !9
  %1997 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 84
  %1998 = bitcast float* %1997 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %1998, align 16, !tbaa !9
  %1999 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 88
  %2000 = bitcast float* %1999 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2000, align 16, !tbaa !9
  %2001 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 92
  %2002 = bitcast float* %2001 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2002, align 16, !tbaa !9
  %2003 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 96
  %2004 = bitcast float* %2003 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2004, align 16, !tbaa !9
  %2005 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 100
  %2006 = bitcast float* %2005 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2006, align 16, !tbaa !9
  %2007 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 104
  %2008 = bitcast float* %2007 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2008, align 16, !tbaa !9
  %2009 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 108
  %2010 = bitcast float* %2009 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2010, align 16, !tbaa !9
  %2011 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 112
  %2012 = bitcast float* %2011 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2012, align 16, !tbaa !9
  %2013 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 116
  %2014 = bitcast float* %2013 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2014, align 16, !tbaa !9
  %2015 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 120
  %2016 = bitcast float* %2015 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2016, align 16, !tbaa !9
  %2017 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 124
  %2018 = bitcast float* %2017 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2018, align 16, !tbaa !9
  %2019 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 128
  %2020 = bitcast float* %2019 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2020, align 16, !tbaa !9
  %2021 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 132
  %2022 = bitcast float* %2021 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2022, align 16, !tbaa !9
  %2023 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 136
  %2024 = bitcast float* %2023 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2024, align 16, !tbaa !9
  %2025 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 140
  %2026 = bitcast float* %2025 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2026, align 16, !tbaa !9
  %2027 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 144
  %2028 = bitcast float* %2027 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2028, align 16, !tbaa !9
  %2029 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 148
  %2030 = bitcast float* %2029 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2030, align 16, !tbaa !9
  %2031 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 152
  %2032 = bitcast float* %2031 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2032, align 16, !tbaa !9
  %2033 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 156
  %2034 = bitcast float* %2033 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2034, align 16, !tbaa !9
  %2035 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 160
  %2036 = bitcast float* %2035 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2036, align 16, !tbaa !9
  %2037 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 164
  %2038 = bitcast float* %2037 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2038, align 16, !tbaa !9
  %2039 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 168
  %2040 = bitcast float* %2039 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2040, align 16, !tbaa !9
  %2041 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 172
  %2042 = bitcast float* %2041 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2042, align 16, !tbaa !9
  %2043 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 176
  %2044 = bitcast float* %2043 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2044, align 16, !tbaa !9
  %2045 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 180
  %2046 = bitcast float* %2045 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2046, align 16, !tbaa !9
  %2047 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 184
  %2048 = bitcast float* %2047 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2048, align 16, !tbaa !9
  %2049 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 188
  %2050 = bitcast float* %2049 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2050, align 16, !tbaa !9
  %2051 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 192
  %2052 = bitcast float* %2051 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2052, align 16, !tbaa !9
  %2053 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 196
  %2054 = bitcast float* %2053 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2054, align 16, !tbaa !9
  %2055 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 200
  %2056 = bitcast float* %2055 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2056, align 16, !tbaa !9
  %2057 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 204
  %2058 = bitcast float* %2057 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2058, align 16, !tbaa !9
  %2059 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 208
  %2060 = bitcast float* %2059 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2060, align 16, !tbaa !9
  %2061 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 212
  %2062 = bitcast float* %2061 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2062, align 16, !tbaa !9
  %2063 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 216
  %2064 = bitcast float* %2063 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2064, align 16, !tbaa !9
  %2065 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 220
  %2066 = bitcast float* %2065 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2066, align 16, !tbaa !9
  %2067 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 224
  %2068 = bitcast float* %2067 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2068, align 16, !tbaa !9
  %2069 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 228
  %2070 = bitcast float* %2069 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2070, align 16, !tbaa !9
  %2071 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 232
  %2072 = bitcast float* %2071 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2072, align 16, !tbaa !9
  %2073 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 236
  %2074 = bitcast float* %2073 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2074, align 16, !tbaa !9
  %2075 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 240
  %2076 = bitcast float* %2075 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2076, align 16, !tbaa !9
  %2077 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 244
  %2078 = bitcast float* %2077 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2078, align 16, !tbaa !9
  %2079 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 248
  %2080 = bitcast float* %2079 to <4 x float>*
  store <4 x float> %1952, <4 x float>* %2080, align 16, !tbaa !9
  %2081 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %1946, i64 252
  %2082 = bitcast float* %2081 to <4 x float>*
  store <4 x float> %1954, <4 x float>* %2082, align 16, !tbaa !9
  %2083 = icmp eq i64 %1947, 256
  br i1 %2083, label %2084, label %1945, !llvm.loop !23

2084:                                             ; preds = %1945, %2084
  %2085 = phi i64 [ %2086, %2084 ], [ 0, %1945 ]
  %2086 = add nuw nsw i64 %2085, 1
  %2087 = trunc i64 %2086 to i32
  %2088 = sitofp i32 %2087 to float
  %2089 = fdiv float 1.000000e+00, %2088
  %2090 = insertelement <4 x float> poison, float %2089, i32 0
  %2091 = shufflevector <4 x float> %2090, <4 x float> poison, <4 x i32> zeroinitializer
  %2092 = insertelement <4 x float> poison, float %2089, i32 0
  %2093 = shufflevector <4 x float> %2092, <4 x float> poison, <4 x i32> zeroinitializer
  %2094 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 0
  %2095 = bitcast float* %2094 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2095, align 16, !tbaa !9
  %2096 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 4
  %2097 = bitcast float* %2096 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2097, align 16, !tbaa !9
  %2098 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 8
  %2099 = bitcast float* %2098 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2099, align 16, !tbaa !9
  %2100 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 12
  %2101 = bitcast float* %2100 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2101, align 16, !tbaa !9
  %2102 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 16
  %2103 = bitcast float* %2102 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2103, align 16, !tbaa !9
  %2104 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 20
  %2105 = bitcast float* %2104 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2105, align 16, !tbaa !9
  %2106 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 24
  %2107 = bitcast float* %2106 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2107, align 16, !tbaa !9
  %2108 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 28
  %2109 = bitcast float* %2108 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2109, align 16, !tbaa !9
  %2110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 32
  %2111 = bitcast float* %2110 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2111, align 16, !tbaa !9
  %2112 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 36
  %2113 = bitcast float* %2112 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2113, align 16, !tbaa !9
  %2114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 40
  %2115 = bitcast float* %2114 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2115, align 16, !tbaa !9
  %2116 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 44
  %2117 = bitcast float* %2116 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2117, align 16, !tbaa !9
  %2118 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 48
  %2119 = bitcast float* %2118 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2119, align 16, !tbaa !9
  %2120 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 52
  %2121 = bitcast float* %2120 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2121, align 16, !tbaa !9
  %2122 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 56
  %2123 = bitcast float* %2122 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2123, align 16, !tbaa !9
  %2124 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 60
  %2125 = bitcast float* %2124 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2125, align 16, !tbaa !9
  %2126 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 64
  %2127 = bitcast float* %2126 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2127, align 16, !tbaa !9
  %2128 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 68
  %2129 = bitcast float* %2128 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2129, align 16, !tbaa !9
  %2130 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 72
  %2131 = bitcast float* %2130 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2131, align 16, !tbaa !9
  %2132 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 76
  %2133 = bitcast float* %2132 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2133, align 16, !tbaa !9
  %2134 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 80
  %2135 = bitcast float* %2134 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2135, align 16, !tbaa !9
  %2136 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 84
  %2137 = bitcast float* %2136 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2137, align 16, !tbaa !9
  %2138 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 88
  %2139 = bitcast float* %2138 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2139, align 16, !tbaa !9
  %2140 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 92
  %2141 = bitcast float* %2140 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2141, align 16, !tbaa !9
  %2142 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 96
  %2143 = bitcast float* %2142 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2143, align 16, !tbaa !9
  %2144 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 100
  %2145 = bitcast float* %2144 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2145, align 16, !tbaa !9
  %2146 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 104
  %2147 = bitcast float* %2146 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2147, align 16, !tbaa !9
  %2148 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 108
  %2149 = bitcast float* %2148 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2149, align 16, !tbaa !9
  %2150 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 112
  %2151 = bitcast float* %2150 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2151, align 16, !tbaa !9
  %2152 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 116
  %2153 = bitcast float* %2152 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2153, align 16, !tbaa !9
  %2154 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 120
  %2155 = bitcast float* %2154 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2155, align 16, !tbaa !9
  %2156 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 124
  %2157 = bitcast float* %2156 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2157, align 16, !tbaa !9
  %2158 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 128
  %2159 = bitcast float* %2158 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2159, align 16, !tbaa !9
  %2160 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 132
  %2161 = bitcast float* %2160 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2161, align 16, !tbaa !9
  %2162 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 136
  %2163 = bitcast float* %2162 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2163, align 16, !tbaa !9
  %2164 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 140
  %2165 = bitcast float* %2164 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2165, align 16, !tbaa !9
  %2166 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 144
  %2167 = bitcast float* %2166 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2167, align 16, !tbaa !9
  %2168 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 148
  %2169 = bitcast float* %2168 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2169, align 16, !tbaa !9
  %2170 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 152
  %2171 = bitcast float* %2170 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2171, align 16, !tbaa !9
  %2172 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 156
  %2173 = bitcast float* %2172 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2173, align 16, !tbaa !9
  %2174 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 160
  %2175 = bitcast float* %2174 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2175, align 16, !tbaa !9
  %2176 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 164
  %2177 = bitcast float* %2176 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2177, align 16, !tbaa !9
  %2178 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 168
  %2179 = bitcast float* %2178 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2179, align 16, !tbaa !9
  %2180 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 172
  %2181 = bitcast float* %2180 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2181, align 16, !tbaa !9
  %2182 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 176
  %2183 = bitcast float* %2182 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2183, align 16, !tbaa !9
  %2184 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 180
  %2185 = bitcast float* %2184 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2185, align 16, !tbaa !9
  %2186 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 184
  %2187 = bitcast float* %2186 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2187, align 16, !tbaa !9
  %2188 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 188
  %2189 = bitcast float* %2188 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2189, align 16, !tbaa !9
  %2190 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 192
  %2191 = bitcast float* %2190 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2191, align 16, !tbaa !9
  %2192 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 196
  %2193 = bitcast float* %2192 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2193, align 16, !tbaa !9
  %2194 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 200
  %2195 = bitcast float* %2194 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2195, align 16, !tbaa !9
  %2196 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 204
  %2197 = bitcast float* %2196 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2197, align 16, !tbaa !9
  %2198 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 208
  %2199 = bitcast float* %2198 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2199, align 16, !tbaa !9
  %2200 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 212
  %2201 = bitcast float* %2200 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2201, align 16, !tbaa !9
  %2202 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 216
  %2203 = bitcast float* %2202 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2203, align 16, !tbaa !9
  %2204 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 220
  %2205 = bitcast float* %2204 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2205, align 16, !tbaa !9
  %2206 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 224
  %2207 = bitcast float* %2206 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2207, align 16, !tbaa !9
  %2208 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 228
  %2209 = bitcast float* %2208 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2209, align 16, !tbaa !9
  %2210 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 232
  %2211 = bitcast float* %2210 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2211, align 16, !tbaa !9
  %2212 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 236
  %2213 = bitcast float* %2212 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2213, align 16, !tbaa !9
  %2214 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 240
  %2215 = bitcast float* %2214 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2215, align 16, !tbaa !9
  %2216 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 244
  %2217 = bitcast float* %2216 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2217, align 16, !tbaa !9
  %2218 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 248
  %2219 = bitcast float* %2218 to <4 x float>*
  store <4 x float> %2091, <4 x float>* %2219, align 16, !tbaa !9
  %2220 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2085, i64 252
  %2221 = bitcast float* %2220 to <4 x float>*
  store <4 x float> %2093, <4 x float>* %2221, align 16, !tbaa !9
  %2222 = icmp eq i64 %2086, 256
  br i1 %2222, label %6516, label %2084, !llvm.loop !23

2223:                                             ; preds = %1803
  %2224 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0))
  %2225 = icmp eq i32 %2224, 0
  br i1 %2225, label %2226, label %2510

2226:                                             ; preds = %2223, %2226
  %2227 = phi i64 [ %2230, %2226 ], [ 0, %2223 ]
  %2228 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2227, i64 0
  %2229 = bitcast float* %2228 to i8*
  call void @memset_pattern16(i8* %2229, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %2230 = add nuw nsw i64 %2227, 1
  %2231 = icmp eq i64 %2230, 256
  br i1 %2231, label %2232, label %2226, !llvm.loop !26

2232:                                             ; preds = %2226, %2232
  %2233 = phi i64 [ %2234, %2232 ], [ 0, %2226 ]
  %2234 = add nuw nsw i64 %2233, 1
  %2235 = trunc i64 %2234 to i32
  %2236 = sitofp i32 %2235 to float
  %2237 = fdiv float 1.000000e+00, %2236
  %2238 = insertelement <4 x float> poison, float %2237, i32 0
  %2239 = shufflevector <4 x float> %2238, <4 x float> poison, <4 x i32> zeroinitializer
  %2240 = insertelement <4 x float> poison, float %2237, i32 0
  %2241 = shufflevector <4 x float> %2240, <4 x float> poison, <4 x i32> zeroinitializer
  %2242 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 0
  %2243 = bitcast float* %2242 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2243, align 16, !tbaa !9
  %2244 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 4
  %2245 = bitcast float* %2244 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2245, align 16, !tbaa !9
  %2246 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 8
  %2247 = bitcast float* %2246 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2247, align 16, !tbaa !9
  %2248 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 12
  %2249 = bitcast float* %2248 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2249, align 16, !tbaa !9
  %2250 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 16
  %2251 = bitcast float* %2250 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2251, align 16, !tbaa !9
  %2252 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 20
  %2253 = bitcast float* %2252 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2253, align 16, !tbaa !9
  %2254 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 24
  %2255 = bitcast float* %2254 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2255, align 16, !tbaa !9
  %2256 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 28
  %2257 = bitcast float* %2256 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2257, align 16, !tbaa !9
  %2258 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 32
  %2259 = bitcast float* %2258 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2259, align 16, !tbaa !9
  %2260 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 36
  %2261 = bitcast float* %2260 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2261, align 16, !tbaa !9
  %2262 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 40
  %2263 = bitcast float* %2262 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2263, align 16, !tbaa !9
  %2264 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 44
  %2265 = bitcast float* %2264 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2265, align 16, !tbaa !9
  %2266 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 48
  %2267 = bitcast float* %2266 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2267, align 16, !tbaa !9
  %2268 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 52
  %2269 = bitcast float* %2268 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2269, align 16, !tbaa !9
  %2270 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 56
  %2271 = bitcast float* %2270 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2271, align 16, !tbaa !9
  %2272 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 60
  %2273 = bitcast float* %2272 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2273, align 16, !tbaa !9
  %2274 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 64
  %2275 = bitcast float* %2274 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2275, align 16, !tbaa !9
  %2276 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 68
  %2277 = bitcast float* %2276 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2277, align 16, !tbaa !9
  %2278 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 72
  %2279 = bitcast float* %2278 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2279, align 16, !tbaa !9
  %2280 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 76
  %2281 = bitcast float* %2280 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2281, align 16, !tbaa !9
  %2282 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 80
  %2283 = bitcast float* %2282 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2283, align 16, !tbaa !9
  %2284 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 84
  %2285 = bitcast float* %2284 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2285, align 16, !tbaa !9
  %2286 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 88
  %2287 = bitcast float* %2286 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2287, align 16, !tbaa !9
  %2288 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 92
  %2289 = bitcast float* %2288 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2289, align 16, !tbaa !9
  %2290 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 96
  %2291 = bitcast float* %2290 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2291, align 16, !tbaa !9
  %2292 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 100
  %2293 = bitcast float* %2292 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2293, align 16, !tbaa !9
  %2294 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 104
  %2295 = bitcast float* %2294 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2295, align 16, !tbaa !9
  %2296 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 108
  %2297 = bitcast float* %2296 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2297, align 16, !tbaa !9
  %2298 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 112
  %2299 = bitcast float* %2298 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2299, align 16, !tbaa !9
  %2300 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 116
  %2301 = bitcast float* %2300 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2301, align 16, !tbaa !9
  %2302 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 120
  %2303 = bitcast float* %2302 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2303, align 16, !tbaa !9
  %2304 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 124
  %2305 = bitcast float* %2304 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2305, align 16, !tbaa !9
  %2306 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 128
  %2307 = bitcast float* %2306 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2307, align 16, !tbaa !9
  %2308 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 132
  %2309 = bitcast float* %2308 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2309, align 16, !tbaa !9
  %2310 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 136
  %2311 = bitcast float* %2310 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2311, align 16, !tbaa !9
  %2312 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 140
  %2313 = bitcast float* %2312 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2313, align 16, !tbaa !9
  %2314 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 144
  %2315 = bitcast float* %2314 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2315, align 16, !tbaa !9
  %2316 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 148
  %2317 = bitcast float* %2316 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2317, align 16, !tbaa !9
  %2318 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 152
  %2319 = bitcast float* %2318 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2319, align 16, !tbaa !9
  %2320 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 156
  %2321 = bitcast float* %2320 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2321, align 16, !tbaa !9
  %2322 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 160
  %2323 = bitcast float* %2322 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2323, align 16, !tbaa !9
  %2324 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 164
  %2325 = bitcast float* %2324 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2325, align 16, !tbaa !9
  %2326 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 168
  %2327 = bitcast float* %2326 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2327, align 16, !tbaa !9
  %2328 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 172
  %2329 = bitcast float* %2328 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2329, align 16, !tbaa !9
  %2330 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 176
  %2331 = bitcast float* %2330 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2331, align 16, !tbaa !9
  %2332 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 180
  %2333 = bitcast float* %2332 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2333, align 16, !tbaa !9
  %2334 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 184
  %2335 = bitcast float* %2334 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2335, align 16, !tbaa !9
  %2336 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 188
  %2337 = bitcast float* %2336 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2337, align 16, !tbaa !9
  %2338 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 192
  %2339 = bitcast float* %2338 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2339, align 16, !tbaa !9
  %2340 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 196
  %2341 = bitcast float* %2340 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2341, align 16, !tbaa !9
  %2342 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 200
  %2343 = bitcast float* %2342 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2343, align 16, !tbaa !9
  %2344 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 204
  %2345 = bitcast float* %2344 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2345, align 16, !tbaa !9
  %2346 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 208
  %2347 = bitcast float* %2346 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2347, align 16, !tbaa !9
  %2348 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 212
  %2349 = bitcast float* %2348 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2349, align 16, !tbaa !9
  %2350 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 216
  %2351 = bitcast float* %2350 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2351, align 16, !tbaa !9
  %2352 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 220
  %2353 = bitcast float* %2352 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2353, align 16, !tbaa !9
  %2354 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 224
  %2355 = bitcast float* %2354 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2355, align 16, !tbaa !9
  %2356 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 228
  %2357 = bitcast float* %2356 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2357, align 16, !tbaa !9
  %2358 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 232
  %2359 = bitcast float* %2358 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2359, align 16, !tbaa !9
  %2360 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 236
  %2361 = bitcast float* %2360 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2361, align 16, !tbaa !9
  %2362 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 240
  %2363 = bitcast float* %2362 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2363, align 16, !tbaa !9
  %2364 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 244
  %2365 = bitcast float* %2364 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2365, align 16, !tbaa !9
  %2366 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 248
  %2367 = bitcast float* %2366 to <4 x float>*
  store <4 x float> %2239, <4 x float>* %2367, align 16, !tbaa !9
  %2368 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2233, i64 252
  %2369 = bitcast float* %2368 to <4 x float>*
  store <4 x float> %2241, <4 x float>* %2369, align 16, !tbaa !9
  %2370 = icmp eq i64 %2234, 256
  br i1 %2370, label %2371, label %2232, !llvm.loop !23

2371:                                             ; preds = %2232, %2371
  %2372 = phi i64 [ %2373, %2371 ], [ 0, %2232 ]
  %2373 = add nuw nsw i64 %2372, 1
  %2374 = trunc i64 %2373 to i32
  %2375 = sitofp i32 %2374 to float
  %2376 = fdiv float 1.000000e+00, %2375
  %2377 = insertelement <4 x float> poison, float %2376, i32 0
  %2378 = shufflevector <4 x float> %2377, <4 x float> poison, <4 x i32> zeroinitializer
  %2379 = insertelement <4 x float> poison, float %2376, i32 0
  %2380 = shufflevector <4 x float> %2379, <4 x float> poison, <4 x i32> zeroinitializer
  %2381 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 0
  %2382 = bitcast float* %2381 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2382, align 16, !tbaa !9
  %2383 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 4
  %2384 = bitcast float* %2383 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2384, align 16, !tbaa !9
  %2385 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 8
  %2386 = bitcast float* %2385 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2386, align 16, !tbaa !9
  %2387 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 12
  %2388 = bitcast float* %2387 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2388, align 16, !tbaa !9
  %2389 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 16
  %2390 = bitcast float* %2389 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2390, align 16, !tbaa !9
  %2391 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 20
  %2392 = bitcast float* %2391 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2392, align 16, !tbaa !9
  %2393 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 24
  %2394 = bitcast float* %2393 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2394, align 16, !tbaa !9
  %2395 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 28
  %2396 = bitcast float* %2395 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2396, align 16, !tbaa !9
  %2397 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 32
  %2398 = bitcast float* %2397 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2398, align 16, !tbaa !9
  %2399 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 36
  %2400 = bitcast float* %2399 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2400, align 16, !tbaa !9
  %2401 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 40
  %2402 = bitcast float* %2401 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2402, align 16, !tbaa !9
  %2403 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 44
  %2404 = bitcast float* %2403 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2404, align 16, !tbaa !9
  %2405 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 48
  %2406 = bitcast float* %2405 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2406, align 16, !tbaa !9
  %2407 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 52
  %2408 = bitcast float* %2407 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2408, align 16, !tbaa !9
  %2409 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 56
  %2410 = bitcast float* %2409 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2410, align 16, !tbaa !9
  %2411 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 60
  %2412 = bitcast float* %2411 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2412, align 16, !tbaa !9
  %2413 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 64
  %2414 = bitcast float* %2413 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2414, align 16, !tbaa !9
  %2415 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 68
  %2416 = bitcast float* %2415 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2416, align 16, !tbaa !9
  %2417 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 72
  %2418 = bitcast float* %2417 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2418, align 16, !tbaa !9
  %2419 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 76
  %2420 = bitcast float* %2419 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2420, align 16, !tbaa !9
  %2421 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 80
  %2422 = bitcast float* %2421 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2422, align 16, !tbaa !9
  %2423 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 84
  %2424 = bitcast float* %2423 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2424, align 16, !tbaa !9
  %2425 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 88
  %2426 = bitcast float* %2425 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2426, align 16, !tbaa !9
  %2427 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 92
  %2428 = bitcast float* %2427 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2428, align 16, !tbaa !9
  %2429 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 96
  %2430 = bitcast float* %2429 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2430, align 16, !tbaa !9
  %2431 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 100
  %2432 = bitcast float* %2431 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2432, align 16, !tbaa !9
  %2433 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 104
  %2434 = bitcast float* %2433 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2434, align 16, !tbaa !9
  %2435 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 108
  %2436 = bitcast float* %2435 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2436, align 16, !tbaa !9
  %2437 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 112
  %2438 = bitcast float* %2437 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2438, align 16, !tbaa !9
  %2439 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 116
  %2440 = bitcast float* %2439 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2440, align 16, !tbaa !9
  %2441 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 120
  %2442 = bitcast float* %2441 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2442, align 16, !tbaa !9
  %2443 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 124
  %2444 = bitcast float* %2443 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2444, align 16, !tbaa !9
  %2445 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 128
  %2446 = bitcast float* %2445 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2446, align 16, !tbaa !9
  %2447 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 132
  %2448 = bitcast float* %2447 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2448, align 16, !tbaa !9
  %2449 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 136
  %2450 = bitcast float* %2449 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2450, align 16, !tbaa !9
  %2451 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 140
  %2452 = bitcast float* %2451 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2452, align 16, !tbaa !9
  %2453 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 144
  %2454 = bitcast float* %2453 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2454, align 16, !tbaa !9
  %2455 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 148
  %2456 = bitcast float* %2455 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2456, align 16, !tbaa !9
  %2457 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 152
  %2458 = bitcast float* %2457 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2458, align 16, !tbaa !9
  %2459 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 156
  %2460 = bitcast float* %2459 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2460, align 16, !tbaa !9
  %2461 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 160
  %2462 = bitcast float* %2461 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2462, align 16, !tbaa !9
  %2463 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 164
  %2464 = bitcast float* %2463 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2464, align 16, !tbaa !9
  %2465 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 168
  %2466 = bitcast float* %2465 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2466, align 16, !tbaa !9
  %2467 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 172
  %2468 = bitcast float* %2467 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2468, align 16, !tbaa !9
  %2469 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 176
  %2470 = bitcast float* %2469 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2470, align 16, !tbaa !9
  %2471 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 180
  %2472 = bitcast float* %2471 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2472, align 16, !tbaa !9
  %2473 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 184
  %2474 = bitcast float* %2473 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2474, align 16, !tbaa !9
  %2475 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 188
  %2476 = bitcast float* %2475 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2476, align 16, !tbaa !9
  %2477 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 192
  %2478 = bitcast float* %2477 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2478, align 16, !tbaa !9
  %2479 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 196
  %2480 = bitcast float* %2479 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2480, align 16, !tbaa !9
  %2481 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 200
  %2482 = bitcast float* %2481 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2482, align 16, !tbaa !9
  %2483 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 204
  %2484 = bitcast float* %2483 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2484, align 16, !tbaa !9
  %2485 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 208
  %2486 = bitcast float* %2485 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2486, align 16, !tbaa !9
  %2487 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 212
  %2488 = bitcast float* %2487 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2488, align 16, !tbaa !9
  %2489 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 216
  %2490 = bitcast float* %2489 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2490, align 16, !tbaa !9
  %2491 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 220
  %2492 = bitcast float* %2491 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2492, align 16, !tbaa !9
  %2493 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 224
  %2494 = bitcast float* %2493 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2494, align 16, !tbaa !9
  %2495 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 228
  %2496 = bitcast float* %2495 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2496, align 16, !tbaa !9
  %2497 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 232
  %2498 = bitcast float* %2497 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2498, align 16, !tbaa !9
  %2499 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 236
  %2500 = bitcast float* %2499 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2500, align 16, !tbaa !9
  %2501 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 240
  %2502 = bitcast float* %2501 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2502, align 16, !tbaa !9
  %2503 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 244
  %2504 = bitcast float* %2503 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2504, align 16, !tbaa !9
  %2505 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 248
  %2506 = bitcast float* %2505 to <4 x float>*
  store <4 x float> %2378, <4 x float>* %2506, align 16, !tbaa !9
  %2507 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %2372, i64 252
  %2508 = bitcast float* %2507 to <4 x float>*
  store <4 x float> %2380, <4 x float>* %2508, align 16, !tbaa !9
  %2509 = icmp eq i64 %2373, 256
  br i1 %2509, label %6516, label %2371, !llvm.loop !23

2510:                                             ; preds = %2223
  %2511 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0))
  %2512 = icmp eq i32 %2511, 0
  br i1 %2512, label %2513, label %2696

2513:                                             ; preds = %2510
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %2514

2514:                                             ; preds = %2514, %2513
  %2515 = phi i64 [ 0, %2513 ], [ %2529, %2514 ]
  %2516 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %2513 ], [ %2530, %2514 ]
  %2517 = trunc <4 x i64> %2516 to <4 x i32>
  %2518 = add <4 x i32> %2517, <i32 1, i32 1, i32 1, i32 1>
  %2519 = trunc <4 x i64> %2516 to <4 x i32>
  %2520 = add <4 x i32> %2519, <i32 5, i32 5, i32 5, i32 5>
  %2521 = sitofp <4 x i32> %2518 to <4 x float>
  %2522 = sitofp <4 x i32> %2520 to <4 x float>
  %2523 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2521
  %2524 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2522
  %2525 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %2515
  %2526 = bitcast float* %2525 to <4 x float>*
  store <4 x float> %2523, <4 x float>* %2526, align 16, !tbaa !9
  %2527 = getelementptr inbounds float, float* %2525, i64 4
  %2528 = bitcast float* %2527 to <4 x float>*
  store <4 x float> %2524, <4 x float>* %2528, align 16, !tbaa !9
  %2529 = add nuw i64 %2515, 8
  %2530 = add <4 x i64> %2516, <i64 8, i64 8, i64 8, i64 8>
  %2531 = icmp eq i64 %2529, 32000
  br i1 %2531, label %2532, label %2514, !llvm.loop !78

2532:                                             ; preds = %2514, %2532
  %2533 = phi i64 [ %2547, %2532 ], [ 0, %2514 ]
  %2534 = phi <4 x i64> [ %2548, %2532 ], [ <i64 0, i64 1, i64 2, i64 3>, %2514 ]
  %2535 = trunc <4 x i64> %2534 to <4 x i32>
  %2536 = add <4 x i32> %2535, <i32 1, i32 1, i32 1, i32 1>
  %2537 = trunc <4 x i64> %2534 to <4 x i32>
  %2538 = add <4 x i32> %2537, <i32 5, i32 5, i32 5, i32 5>
  %2539 = sitofp <4 x i32> %2536 to <4 x float>
  %2540 = sitofp <4 x i32> %2538 to <4 x float>
  %2541 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2539
  %2542 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2540
  %2543 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2533
  %2544 = bitcast float* %2543 to <4 x float>*
  store <4 x float> %2541, <4 x float>* %2544, align 16, !tbaa !9
  %2545 = getelementptr inbounds float, float* %2543, i64 4
  %2546 = bitcast float* %2545 to <4 x float>*
  store <4 x float> %2542, <4 x float>* %2546, align 16, !tbaa !9
  %2547 = add nuw i64 %2533, 8
  %2548 = add <4 x i64> %2534, <i64 8, i64 8, i64 8, i64 8>
  %2549 = icmp eq i64 %2547, 32000
  br i1 %2549, label %2550, label %2532, !llvm.loop !79

2550:                                             ; preds = %2532, %2550
  %2551 = phi i64 [ %2554, %2550 ], [ 0, %2532 ]
  %2552 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2551, i64 0
  %2553 = bitcast float* %2552 to i8*
  call void @memset_pattern16(i8* %2553, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %2554 = add nuw nsw i64 %2551, 1
  %2555 = icmp eq i64 %2554, 256
  br i1 %2555, label %2556, label %2550, !llvm.loop !26

2556:                                             ; preds = %2550, %2556
  %2557 = phi i64 [ %2558, %2556 ], [ 0, %2550 ]
  %2558 = add nuw nsw i64 %2557, 1
  %2559 = trunc i64 %2558 to i32
  %2560 = mul nsw i32 %2559, %2559
  %2561 = sitofp i32 %2560 to float
  %2562 = fdiv float 1.000000e+00, %2561
  %2563 = insertelement <4 x float> poison, float %2562, i32 0
  %2564 = shufflevector <4 x float> %2563, <4 x float> poison, <4 x i32> zeroinitializer
  %2565 = insertelement <4 x float> poison, float %2562, i32 0
  %2566 = shufflevector <4 x float> %2565, <4 x float> poison, <4 x i32> zeroinitializer
  %2567 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 0
  %2568 = bitcast float* %2567 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2568, align 16, !tbaa !9
  %2569 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 4
  %2570 = bitcast float* %2569 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2570, align 16, !tbaa !9
  %2571 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 8
  %2572 = bitcast float* %2571 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2572, align 16, !tbaa !9
  %2573 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 12
  %2574 = bitcast float* %2573 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2574, align 16, !tbaa !9
  %2575 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 16
  %2576 = bitcast float* %2575 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2576, align 16, !tbaa !9
  %2577 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 20
  %2578 = bitcast float* %2577 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2578, align 16, !tbaa !9
  %2579 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 24
  %2580 = bitcast float* %2579 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2580, align 16, !tbaa !9
  %2581 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 28
  %2582 = bitcast float* %2581 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2582, align 16, !tbaa !9
  %2583 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 32
  %2584 = bitcast float* %2583 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2584, align 16, !tbaa !9
  %2585 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 36
  %2586 = bitcast float* %2585 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2586, align 16, !tbaa !9
  %2587 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 40
  %2588 = bitcast float* %2587 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2588, align 16, !tbaa !9
  %2589 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 44
  %2590 = bitcast float* %2589 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2590, align 16, !tbaa !9
  %2591 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 48
  %2592 = bitcast float* %2591 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2592, align 16, !tbaa !9
  %2593 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 52
  %2594 = bitcast float* %2593 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2594, align 16, !tbaa !9
  %2595 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 56
  %2596 = bitcast float* %2595 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2596, align 16, !tbaa !9
  %2597 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 60
  %2598 = bitcast float* %2597 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2598, align 16, !tbaa !9
  %2599 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 64
  %2600 = bitcast float* %2599 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2600, align 16, !tbaa !9
  %2601 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 68
  %2602 = bitcast float* %2601 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2602, align 16, !tbaa !9
  %2603 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 72
  %2604 = bitcast float* %2603 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2604, align 16, !tbaa !9
  %2605 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 76
  %2606 = bitcast float* %2605 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2606, align 16, !tbaa !9
  %2607 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 80
  %2608 = bitcast float* %2607 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2608, align 16, !tbaa !9
  %2609 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 84
  %2610 = bitcast float* %2609 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2610, align 16, !tbaa !9
  %2611 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 88
  %2612 = bitcast float* %2611 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2612, align 16, !tbaa !9
  %2613 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 92
  %2614 = bitcast float* %2613 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2614, align 16, !tbaa !9
  %2615 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 96
  %2616 = bitcast float* %2615 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2616, align 16, !tbaa !9
  %2617 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 100
  %2618 = bitcast float* %2617 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2618, align 16, !tbaa !9
  %2619 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 104
  %2620 = bitcast float* %2619 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2620, align 16, !tbaa !9
  %2621 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 108
  %2622 = bitcast float* %2621 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2622, align 16, !tbaa !9
  %2623 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 112
  %2624 = bitcast float* %2623 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2624, align 16, !tbaa !9
  %2625 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 116
  %2626 = bitcast float* %2625 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2626, align 16, !tbaa !9
  %2627 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 120
  %2628 = bitcast float* %2627 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2628, align 16, !tbaa !9
  %2629 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 124
  %2630 = bitcast float* %2629 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2630, align 16, !tbaa !9
  %2631 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 128
  %2632 = bitcast float* %2631 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2632, align 16, !tbaa !9
  %2633 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 132
  %2634 = bitcast float* %2633 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2634, align 16, !tbaa !9
  %2635 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 136
  %2636 = bitcast float* %2635 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2636, align 16, !tbaa !9
  %2637 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 140
  %2638 = bitcast float* %2637 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2638, align 16, !tbaa !9
  %2639 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 144
  %2640 = bitcast float* %2639 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2640, align 16, !tbaa !9
  %2641 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 148
  %2642 = bitcast float* %2641 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2642, align 16, !tbaa !9
  %2643 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 152
  %2644 = bitcast float* %2643 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2644, align 16, !tbaa !9
  %2645 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 156
  %2646 = bitcast float* %2645 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2646, align 16, !tbaa !9
  %2647 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 160
  %2648 = bitcast float* %2647 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2648, align 16, !tbaa !9
  %2649 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 164
  %2650 = bitcast float* %2649 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2650, align 16, !tbaa !9
  %2651 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 168
  %2652 = bitcast float* %2651 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2652, align 16, !tbaa !9
  %2653 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 172
  %2654 = bitcast float* %2653 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2654, align 16, !tbaa !9
  %2655 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 176
  %2656 = bitcast float* %2655 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2656, align 16, !tbaa !9
  %2657 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 180
  %2658 = bitcast float* %2657 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2658, align 16, !tbaa !9
  %2659 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 184
  %2660 = bitcast float* %2659 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2660, align 16, !tbaa !9
  %2661 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 188
  %2662 = bitcast float* %2661 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2662, align 16, !tbaa !9
  %2663 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 192
  %2664 = bitcast float* %2663 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2664, align 16, !tbaa !9
  %2665 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 196
  %2666 = bitcast float* %2665 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2666, align 16, !tbaa !9
  %2667 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 200
  %2668 = bitcast float* %2667 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2668, align 16, !tbaa !9
  %2669 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 204
  %2670 = bitcast float* %2669 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2670, align 16, !tbaa !9
  %2671 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 208
  %2672 = bitcast float* %2671 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2672, align 16, !tbaa !9
  %2673 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 212
  %2674 = bitcast float* %2673 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2674, align 16, !tbaa !9
  %2675 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 216
  %2676 = bitcast float* %2675 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2676, align 16, !tbaa !9
  %2677 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 220
  %2678 = bitcast float* %2677 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2678, align 16, !tbaa !9
  %2679 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 224
  %2680 = bitcast float* %2679 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2680, align 16, !tbaa !9
  %2681 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 228
  %2682 = bitcast float* %2681 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2682, align 16, !tbaa !9
  %2683 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 232
  %2684 = bitcast float* %2683 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2684, align 16, !tbaa !9
  %2685 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 236
  %2686 = bitcast float* %2685 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2686, align 16, !tbaa !9
  %2687 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 240
  %2688 = bitcast float* %2687 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2688, align 16, !tbaa !9
  %2689 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 244
  %2690 = bitcast float* %2689 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2690, align 16, !tbaa !9
  %2691 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 248
  %2692 = bitcast float* %2691 to <4 x float>*
  store <4 x float> %2564, <4 x float>* %2692, align 16, !tbaa !9
  %2693 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2557, i64 252
  %2694 = bitcast float* %2693 to <4 x float>*
  store <4 x float> %2566, <4 x float>* %2694, align 16, !tbaa !9
  %2695 = icmp eq i64 %2558, 256
  br i1 %2695, label %6516, label %2556, !llvm.loop !24

2696:                                             ; preds = %2510
  %2697 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0))
  %2698 = icmp eq i32 %2697, 0
  br i1 %2698, label %2699, label %2700

2699:                                             ; preds = %2696
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @d to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

2700:                                             ; preds = %2696
  %2701 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0))
  %2702 = icmp eq i32 %2701, 0
  br i1 %2702, label %2703, label %2704

2703:                                             ; preds = %2700
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @d to i8*), i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 128000) #19
  br label %6516

2704:                                             ; preds = %2700
  %2705 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0))
  %2706 = icmp eq i32 %2705, 0
  br i1 %2706, label %2707, label %2762

2707:                                             ; preds = %2704
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %2708

2708:                                             ; preds = %2708, %2707
  %2709 = phi i64 [ 0, %2707 ], [ %2723, %2708 ]
  %2710 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %2707 ], [ %2724, %2708 ]
  %2711 = trunc <4 x i64> %2710 to <4 x i32>
  %2712 = add <4 x i32> %2711, <i32 1, i32 1, i32 1, i32 1>
  %2713 = trunc <4 x i64> %2710 to <4 x i32>
  %2714 = add <4 x i32> %2713, <i32 5, i32 5, i32 5, i32 5>
  %2715 = sitofp <4 x i32> %2712 to <4 x float>
  %2716 = sitofp <4 x i32> %2714 to <4 x float>
  %2717 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2715
  %2718 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2716
  %2719 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2709
  %2720 = bitcast float* %2719 to <4 x float>*
  store <4 x float> %2717, <4 x float>* %2720, align 16, !tbaa !9
  %2721 = getelementptr inbounds float, float* %2719, i64 4
  %2722 = bitcast float* %2721 to <4 x float>*
  store <4 x float> %2718, <4 x float>* %2722, align 16, !tbaa !9
  %2723 = add nuw i64 %2709, 8
  %2724 = add <4 x i64> %2710, <i64 8, i64 8, i64 8, i64 8>
  %2725 = icmp eq i64 %2723, 32000
  br i1 %2725, label %2726, label %2708, !llvm.loop !80

2726:                                             ; preds = %2708, %2726
  %2727 = phi i64 [ %2741, %2726 ], [ 0, %2708 ]
  %2728 = phi <4 x i64> [ %2742, %2726 ], [ <i64 0, i64 1, i64 2, i64 3>, %2708 ]
  %2729 = trunc <4 x i64> %2728 to <4 x i32>
  %2730 = add <4 x i32> %2729, <i32 1, i32 1, i32 1, i32 1>
  %2731 = trunc <4 x i64> %2728 to <4 x i32>
  %2732 = add <4 x i32> %2731, <i32 5, i32 5, i32 5, i32 5>
  %2733 = sitofp <4 x i32> %2730 to <4 x float>
  %2734 = sitofp <4 x i32> %2732 to <4 x float>
  %2735 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2733
  %2736 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2734
  %2737 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2727
  %2738 = bitcast float* %2737 to <4 x float>*
  store <4 x float> %2735, <4 x float>* %2738, align 16, !tbaa !9
  %2739 = getelementptr inbounds float, float* %2737, i64 4
  %2740 = bitcast float* %2739 to <4 x float>*
  store <4 x float> %2736, <4 x float>* %2740, align 16, !tbaa !9
  %2741 = add nuw i64 %2727, 8
  %2742 = add <4 x i64> %2728, <i64 8, i64 8, i64 8, i64 8>
  %2743 = icmp eq i64 %2741, 32000
  br i1 %2743, label %2744, label %2726, !llvm.loop !81

2744:                                             ; preds = %2726, %2744
  %2745 = phi i64 [ %2759, %2744 ], [ 0, %2726 ]
  %2746 = phi <4 x i64> [ %2760, %2744 ], [ <i64 0, i64 1, i64 2, i64 3>, %2726 ]
  %2747 = trunc <4 x i64> %2746 to <4 x i32>
  %2748 = add <4 x i32> %2747, <i32 1, i32 1, i32 1, i32 1>
  %2749 = trunc <4 x i64> %2746 to <4 x i32>
  %2750 = add <4 x i32> %2749, <i32 5, i32 5, i32 5, i32 5>
  %2751 = sitofp <4 x i32> %2748 to <4 x float>
  %2752 = sitofp <4 x i32> %2750 to <4 x float>
  %2753 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2751
  %2754 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2752
  %2755 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %2745
  %2756 = bitcast float* %2755 to <4 x float>*
  store <4 x float> %2753, <4 x float>* %2756, align 16, !tbaa !9
  %2757 = getelementptr inbounds float, float* %2755, i64 4
  %2758 = bitcast float* %2757 to <4 x float>*
  store <4 x float> %2754, <4 x float>* %2758, align 16, !tbaa !9
  %2759 = add nuw i64 %2745, 8
  %2760 = add <4 x i64> %2746, <i64 8, i64 8, i64 8, i64 8>
  %2761 = icmp eq i64 %2759, 32000
  br i1 %2761, label %6516, label %2744, !llvm.loop !82

2762:                                             ; preds = %2704
  %2763 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %2764 = icmp eq i32 %2763, 0
  br i1 %2764, label %2765, label %2766

2765:                                             ; preds = %2762
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @d to i8*), i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 128000) #19
  br label %6516

2766:                                             ; preds = %2762
  %2767 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %2768 = icmp eq i32 %2767, 0
  br i1 %2768, label %2769, label %2824

2769:                                             ; preds = %2766
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %2770

2770:                                             ; preds = %2770, %2769
  %2771 = phi i64 [ 0, %2769 ], [ %2785, %2770 ]
  %2772 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %2769 ], [ %2786, %2770 ]
  %2773 = trunc <4 x i64> %2772 to <4 x i32>
  %2774 = add <4 x i32> %2773, <i32 1, i32 1, i32 1, i32 1>
  %2775 = trunc <4 x i64> %2772 to <4 x i32>
  %2776 = add <4 x i32> %2775, <i32 5, i32 5, i32 5, i32 5>
  %2777 = sitofp <4 x i32> %2774 to <4 x float>
  %2778 = sitofp <4 x i32> %2776 to <4 x float>
  %2779 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2777
  %2780 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2778
  %2781 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2771
  %2782 = bitcast float* %2781 to <4 x float>*
  store <4 x float> %2779, <4 x float>* %2782, align 16, !tbaa !9
  %2783 = getelementptr inbounds float, float* %2781, i64 4
  %2784 = bitcast float* %2783 to <4 x float>*
  store <4 x float> %2780, <4 x float>* %2784, align 16, !tbaa !9
  %2785 = add nuw i64 %2771, 8
  %2786 = add <4 x i64> %2772, <i64 8, i64 8, i64 8, i64 8>
  %2787 = icmp eq i64 %2785, 32000
  br i1 %2787, label %2788, label %2770, !llvm.loop !83

2788:                                             ; preds = %2770, %2788
  %2789 = phi i64 [ %2803, %2788 ], [ 0, %2770 ]
  %2790 = phi <4 x i64> [ %2804, %2788 ], [ <i64 0, i64 1, i64 2, i64 3>, %2770 ]
  %2791 = trunc <4 x i64> %2790 to <4 x i32>
  %2792 = add <4 x i32> %2791, <i32 1, i32 1, i32 1, i32 1>
  %2793 = trunc <4 x i64> %2790 to <4 x i32>
  %2794 = add <4 x i32> %2793, <i32 5, i32 5, i32 5, i32 5>
  %2795 = sitofp <4 x i32> %2792 to <4 x float>
  %2796 = sitofp <4 x i32> %2794 to <4 x float>
  %2797 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2795
  %2798 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2796
  %2799 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2789
  %2800 = bitcast float* %2799 to <4 x float>*
  store <4 x float> %2797, <4 x float>* %2800, align 16, !tbaa !9
  %2801 = getelementptr inbounds float, float* %2799, i64 4
  %2802 = bitcast float* %2801 to <4 x float>*
  store <4 x float> %2798, <4 x float>* %2802, align 16, !tbaa !9
  %2803 = add nuw i64 %2789, 8
  %2804 = add <4 x i64> %2790, <i64 8, i64 8, i64 8, i64 8>
  %2805 = icmp eq i64 %2803, 32000
  br i1 %2805, label %2806, label %2788, !llvm.loop !84

2806:                                             ; preds = %2788, %2806
  %2807 = phi i64 [ %2821, %2806 ], [ 0, %2788 ]
  %2808 = phi <4 x i64> [ %2822, %2806 ], [ <i64 0, i64 1, i64 2, i64 3>, %2788 ]
  %2809 = trunc <4 x i64> %2808 to <4 x i32>
  %2810 = add <4 x i32> %2809, <i32 1, i32 1, i32 1, i32 1>
  %2811 = trunc <4 x i64> %2808 to <4 x i32>
  %2812 = add <4 x i32> %2811, <i32 5, i32 5, i32 5, i32 5>
  %2813 = sitofp <4 x i32> %2810 to <4 x float>
  %2814 = sitofp <4 x i32> %2812 to <4 x float>
  %2815 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2813
  %2816 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2814
  %2817 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %2807
  %2818 = bitcast float* %2817 to <4 x float>*
  store <4 x float> %2815, <4 x float>* %2818, align 16, !tbaa !9
  %2819 = getelementptr inbounds float, float* %2817, i64 4
  %2820 = bitcast float* %2819 to <4 x float>*
  store <4 x float> %2816, <4 x float>* %2820, align 16, !tbaa !9
  %2821 = add nuw i64 %2807, 8
  %2822 = add <4 x i64> %2808, <i64 8, i64 8, i64 8, i64 8>
  %2823 = icmp eq i64 %2821, 32000
  br i1 %2823, label %6516, label %2806, !llvm.loop !85

2824:                                             ; preds = %2766
  %2825 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0))
  %2826 = icmp eq i32 %2825, 0
  br i1 %2826, label %2827, label %2828

2827:                                             ; preds = %2824
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

2828:                                             ; preds = %2824
  %2829 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0))
  %2830 = icmp eq i32 %2829, 0
  br i1 %2830, label %2831, label %2850

2831:                                             ; preds = %2828
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %2832

2832:                                             ; preds = %2832, %2831
  %2833 = phi i64 [ 0, %2831 ], [ %2847, %2832 ]
  %2834 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %2831 ], [ %2848, %2832 ]
  %2835 = trunc <4 x i64> %2834 to <4 x i32>
  %2836 = add <4 x i32> %2835, <i32 1, i32 1, i32 1, i32 1>
  %2837 = trunc <4 x i64> %2834 to <4 x i32>
  %2838 = add <4 x i32> %2837, <i32 5, i32 5, i32 5, i32 5>
  %2839 = sitofp <4 x i32> %2836 to <4 x float>
  %2840 = sitofp <4 x i32> %2838 to <4 x float>
  %2841 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2839
  %2842 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2840
  %2843 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2833
  %2844 = bitcast float* %2843 to <4 x float>*
  store <4 x float> %2841, <4 x float>* %2844, align 16, !tbaa !9
  %2845 = getelementptr inbounds float, float* %2843, i64 4
  %2846 = bitcast float* %2845 to <4 x float>*
  store <4 x float> %2842, <4 x float>* %2846, align 16, !tbaa !9
  %2847 = add nuw i64 %2833, 8
  %2848 = add <4 x i64> %2834, <i64 8, i64 8, i64 8, i64 8>
  %2849 = icmp eq i64 %2847, 32000
  br i1 %2849, label %6516, label %2832, !llvm.loop !86

2850:                                             ; preds = %2828
  %2851 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0))
  %2852 = icmp eq i32 %2851, 0
  br i1 %2852, label %2853, label %2854

2853:                                             ; preds = %2850
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

2854:                                             ; preds = %2850
  %2855 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0))
  %2856 = icmp eq i32 %2855, 0
  br i1 %2856, label %2857, label %2858

2857:                                             ; preds = %2854
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

2858:                                             ; preds = %2854
  %2859 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %2860 = icmp eq i32 %2859, 0
  br i1 %2860, label %2861, label %2874

2861:                                             ; preds = %2858
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %2862

2862:                                             ; preds = %2861, %2862
  %2863 = phi i64 [ %2866, %2862 ], [ 0, %2861 ]
  %2864 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2863, i64 0
  %2865 = bitcast float* %2864 to i8*
  call void @memset_pattern16(i8* %2865, i8* bitcast ([4 x float]* @.memset_pattern.465 to i8*), i64 1024) #19
  %2866 = add nuw nsw i64 %2863, 1
  %2867 = icmp eq i64 %2866, 256
  br i1 %2867, label %2868, label %2862, !llvm.loop !26

2868:                                             ; preds = %2862, %2868
  %2869 = phi i64 [ %2872, %2868 ], [ 0, %2862 ]
  %2870 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2869, i64 0
  %2871 = bitcast float* %2870 to i8*
  call void @memset_pattern16(i8* %2871, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %2872 = add nuw nsw i64 %2869, 1
  %2873 = icmp eq i64 %2872, 256
  br i1 %2873, label %6516, label %2868, !llvm.loop !26

2874:                                             ; preds = %2858
  %2875 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0))
  %2876 = icmp eq i32 %2875, 0
  br i1 %2876, label %2877, label %2890

2877:                                             ; preds = %2874
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %2878

2878:                                             ; preds = %2877, %2878
  %2879 = phi i64 [ %2882, %2878 ], [ 0, %2877 ]
  %2880 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2879, i64 0
  %2881 = bitcast float* %2880 to i8*
  call void @memset_pattern16(i8* %2881, i8* bitcast ([4 x float]* @.memset_pattern.465 to i8*), i64 1024) #19
  %2882 = add nuw nsw i64 %2879, 1
  %2883 = icmp eq i64 %2882, 256
  br i1 %2883, label %2884, label %2878, !llvm.loop !26

2884:                                             ; preds = %2878, %2884
  %2885 = phi i64 [ %2888, %2884 ], [ 0, %2878 ]
  %2886 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %2885, i64 0
  %2887 = bitcast float* %2886 to i8*
  call void @memset_pattern16(i8* %2887, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %2888 = add nuw nsw i64 %2885, 1
  %2889 = icmp eq i64 %2888, 256
  br i1 %2889, label %6516, label %2884, !llvm.loop !26

2890:                                             ; preds = %2874
  %2891 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0))
  %2892 = icmp eq i32 %2891, 0
  br i1 %2892, label %2893, label %3088

2893:                                             ; preds = %2890, %2893
  %2894 = phi i64 [ %2908, %2893 ], [ 0, %2890 ]
  %2895 = phi <4 x i64> [ %2909, %2893 ], [ <i64 0, i64 1, i64 2, i64 3>, %2890 ]
  %2896 = trunc <4 x i64> %2895 to <4 x i32>
  %2897 = add <4 x i32> %2896, <i32 1, i32 1, i32 1, i32 1>
  %2898 = trunc <4 x i64> %2895 to <4 x i32>
  %2899 = add <4 x i32> %2898, <i32 5, i32 5, i32 5, i32 5>
  %2900 = sitofp <4 x i32> %2897 to <4 x float>
  %2901 = sitofp <4 x i32> %2899 to <4 x float>
  %2902 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2900
  %2903 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2901
  %2904 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %2894
  %2905 = bitcast float* %2904 to <4 x float>*
  store <4 x float> %2902, <4 x float>* %2905, align 16, !tbaa !9
  %2906 = getelementptr inbounds float, float* %2904, i64 4
  %2907 = bitcast float* %2906 to <4 x float>*
  store <4 x float> %2903, <4 x float>* %2907, align 16, !tbaa !9
  %2908 = add nuw i64 %2894, 8
  %2909 = add <4 x i64> %2895, <i64 8, i64 8, i64 8, i64 8>
  %2910 = icmp eq i64 %2908, 32000
  br i1 %2910, label %2911, label %2893, !llvm.loop !87

2911:                                             ; preds = %2893
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %2912

2912:                                             ; preds = %2912, %2911
  %2913 = phi i64 [ 0, %2911 ], [ %2927, %2912 ]
  %2914 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %2911 ], [ %2928, %2912 ]
  %2915 = trunc <4 x i64> %2914 to <4 x i32>
  %2916 = add <4 x i32> %2915, <i32 1, i32 1, i32 1, i32 1>
  %2917 = trunc <4 x i64> %2914 to <4 x i32>
  %2918 = add <4 x i32> %2917, <i32 5, i32 5, i32 5, i32 5>
  %2919 = sitofp <4 x i32> %2916 to <4 x float>
  %2920 = sitofp <4 x i32> %2918 to <4 x float>
  %2921 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2919
  %2922 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2920
  %2923 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %2913
  %2924 = bitcast float* %2923 to <4 x float>*
  store <4 x float> %2921, <4 x float>* %2924, align 16, !tbaa !9
  %2925 = getelementptr inbounds float, float* %2923, i64 4
  %2926 = bitcast float* %2925 to <4 x float>*
  store <4 x float> %2922, <4 x float>* %2926, align 16, !tbaa !9
  %2927 = add nuw i64 %2913, 8
  %2928 = add <4 x i64> %2914, <i64 8, i64 8, i64 8, i64 8>
  %2929 = icmp eq i64 %2927, 32000
  br i1 %2929, label %2930, label %2912, !llvm.loop !88

2930:                                             ; preds = %2912, %2930
  %2931 = phi i64 [ %2945, %2930 ], [ 0, %2912 ]
  %2932 = phi <4 x i64> [ %2946, %2930 ], [ <i64 0, i64 1, i64 2, i64 3>, %2912 ]
  %2933 = trunc <4 x i64> %2932 to <4 x i32>
  %2934 = add <4 x i32> %2933, <i32 1, i32 1, i32 1, i32 1>
  %2935 = trunc <4 x i64> %2932 to <4 x i32>
  %2936 = add <4 x i32> %2935, <i32 5, i32 5, i32 5, i32 5>
  %2937 = sitofp <4 x i32> %2934 to <4 x float>
  %2938 = sitofp <4 x i32> %2936 to <4 x float>
  %2939 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2937
  %2940 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2938
  %2941 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %2931
  %2942 = bitcast float* %2941 to <4 x float>*
  store <4 x float> %2939, <4 x float>* %2942, align 16, !tbaa !9
  %2943 = getelementptr inbounds float, float* %2941, i64 4
  %2944 = bitcast float* %2943 to <4 x float>*
  store <4 x float> %2940, <4 x float>* %2944, align 16, !tbaa !9
  %2945 = add nuw i64 %2931, 8
  %2946 = add <4 x i64> %2932, <i64 8, i64 8, i64 8, i64 8>
  %2947 = icmp eq i64 %2945, 32000
  br i1 %2947, label %2948, label %2930, !llvm.loop !89

2948:                                             ; preds = %2930
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @e to i8*), i8 0, i64 128000, i1 false)
  br label %2949

2949:                                             ; preds = %2948, %2949
  %2950 = phi i64 [ %2951, %2949 ], [ 0, %2948 ]
  %2951 = add nuw nsw i64 %2950, 1
  %2952 = trunc i64 %2951 to i32
  %2953 = sitofp i32 %2952 to float
  %2954 = fdiv float 1.000000e+00, %2953
  %2955 = insertelement <4 x float> poison, float %2954, i32 0
  %2956 = shufflevector <4 x float> %2955, <4 x float> poison, <4 x i32> zeroinitializer
  %2957 = insertelement <4 x float> poison, float %2954, i32 0
  %2958 = shufflevector <4 x float> %2957, <4 x float> poison, <4 x i32> zeroinitializer
  %2959 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 0
  %2960 = bitcast float* %2959 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2960, align 16, !tbaa !9
  %2961 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 4
  %2962 = bitcast float* %2961 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2962, align 16, !tbaa !9
  %2963 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 8
  %2964 = bitcast float* %2963 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2964, align 16, !tbaa !9
  %2965 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 12
  %2966 = bitcast float* %2965 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2966, align 16, !tbaa !9
  %2967 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 16
  %2968 = bitcast float* %2967 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2968, align 16, !tbaa !9
  %2969 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 20
  %2970 = bitcast float* %2969 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2970, align 16, !tbaa !9
  %2971 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 24
  %2972 = bitcast float* %2971 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2972, align 16, !tbaa !9
  %2973 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 28
  %2974 = bitcast float* %2973 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2974, align 16, !tbaa !9
  %2975 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 32
  %2976 = bitcast float* %2975 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2976, align 16, !tbaa !9
  %2977 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 36
  %2978 = bitcast float* %2977 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2978, align 16, !tbaa !9
  %2979 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 40
  %2980 = bitcast float* %2979 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2980, align 16, !tbaa !9
  %2981 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 44
  %2982 = bitcast float* %2981 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2982, align 16, !tbaa !9
  %2983 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 48
  %2984 = bitcast float* %2983 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2984, align 16, !tbaa !9
  %2985 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 52
  %2986 = bitcast float* %2985 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2986, align 16, !tbaa !9
  %2987 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 56
  %2988 = bitcast float* %2987 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2988, align 16, !tbaa !9
  %2989 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 60
  %2990 = bitcast float* %2989 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2990, align 16, !tbaa !9
  %2991 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 64
  %2992 = bitcast float* %2991 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2992, align 16, !tbaa !9
  %2993 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 68
  %2994 = bitcast float* %2993 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2994, align 16, !tbaa !9
  %2995 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 72
  %2996 = bitcast float* %2995 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %2996, align 16, !tbaa !9
  %2997 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 76
  %2998 = bitcast float* %2997 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %2998, align 16, !tbaa !9
  %2999 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 80
  %3000 = bitcast float* %2999 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3000, align 16, !tbaa !9
  %3001 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 84
  %3002 = bitcast float* %3001 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3002, align 16, !tbaa !9
  %3003 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 88
  %3004 = bitcast float* %3003 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3004, align 16, !tbaa !9
  %3005 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 92
  %3006 = bitcast float* %3005 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3006, align 16, !tbaa !9
  %3007 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 96
  %3008 = bitcast float* %3007 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3008, align 16, !tbaa !9
  %3009 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 100
  %3010 = bitcast float* %3009 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3010, align 16, !tbaa !9
  %3011 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 104
  %3012 = bitcast float* %3011 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3012, align 16, !tbaa !9
  %3013 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 108
  %3014 = bitcast float* %3013 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3014, align 16, !tbaa !9
  %3015 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 112
  %3016 = bitcast float* %3015 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3016, align 16, !tbaa !9
  %3017 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 116
  %3018 = bitcast float* %3017 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3018, align 16, !tbaa !9
  %3019 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 120
  %3020 = bitcast float* %3019 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3020, align 16, !tbaa !9
  %3021 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 124
  %3022 = bitcast float* %3021 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3022, align 16, !tbaa !9
  %3023 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 128
  %3024 = bitcast float* %3023 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3024, align 16, !tbaa !9
  %3025 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 132
  %3026 = bitcast float* %3025 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3026, align 16, !tbaa !9
  %3027 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 136
  %3028 = bitcast float* %3027 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3028, align 16, !tbaa !9
  %3029 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 140
  %3030 = bitcast float* %3029 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3030, align 16, !tbaa !9
  %3031 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 144
  %3032 = bitcast float* %3031 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3032, align 16, !tbaa !9
  %3033 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 148
  %3034 = bitcast float* %3033 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3034, align 16, !tbaa !9
  %3035 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 152
  %3036 = bitcast float* %3035 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3036, align 16, !tbaa !9
  %3037 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 156
  %3038 = bitcast float* %3037 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3038, align 16, !tbaa !9
  %3039 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 160
  %3040 = bitcast float* %3039 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3040, align 16, !tbaa !9
  %3041 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 164
  %3042 = bitcast float* %3041 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3042, align 16, !tbaa !9
  %3043 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 168
  %3044 = bitcast float* %3043 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3044, align 16, !tbaa !9
  %3045 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 172
  %3046 = bitcast float* %3045 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3046, align 16, !tbaa !9
  %3047 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 176
  %3048 = bitcast float* %3047 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3048, align 16, !tbaa !9
  %3049 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 180
  %3050 = bitcast float* %3049 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3050, align 16, !tbaa !9
  %3051 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 184
  %3052 = bitcast float* %3051 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3052, align 16, !tbaa !9
  %3053 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 188
  %3054 = bitcast float* %3053 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3054, align 16, !tbaa !9
  %3055 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 192
  %3056 = bitcast float* %3055 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3056, align 16, !tbaa !9
  %3057 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 196
  %3058 = bitcast float* %3057 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3058, align 16, !tbaa !9
  %3059 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 200
  %3060 = bitcast float* %3059 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3060, align 16, !tbaa !9
  %3061 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 204
  %3062 = bitcast float* %3061 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3062, align 16, !tbaa !9
  %3063 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 208
  %3064 = bitcast float* %3063 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3064, align 16, !tbaa !9
  %3065 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 212
  %3066 = bitcast float* %3065 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3066, align 16, !tbaa !9
  %3067 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 216
  %3068 = bitcast float* %3067 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3068, align 16, !tbaa !9
  %3069 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 220
  %3070 = bitcast float* %3069 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3070, align 16, !tbaa !9
  %3071 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 224
  %3072 = bitcast float* %3071 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3072, align 16, !tbaa !9
  %3073 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 228
  %3074 = bitcast float* %3073 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3074, align 16, !tbaa !9
  %3075 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 232
  %3076 = bitcast float* %3075 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3076, align 16, !tbaa !9
  %3077 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 236
  %3078 = bitcast float* %3077 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3078, align 16, !tbaa !9
  %3079 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 240
  %3080 = bitcast float* %3079 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3080, align 16, !tbaa !9
  %3081 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 244
  %3082 = bitcast float* %3081 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3082, align 16, !tbaa !9
  %3083 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 248
  %3084 = bitcast float* %3083 to <4 x float>*
  store <4 x float> %2956, <4 x float>* %3084, align 16, !tbaa !9
  %3085 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %2950, i64 252
  %3086 = bitcast float* %3085 to <4 x float>*
  store <4 x float> %2958, <4 x float>* %3086, align 16, !tbaa !9
  %3087 = icmp eq i64 %2951, 256
  br i1 %3087, label %6516, label %2949, !llvm.loop !23

3088:                                             ; preds = %2890
  %3089 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0))
  %3090 = icmp eq i32 %3089, 0
  br i1 %3090, label %3091, label %3119

3091:                                             ; preds = %3088
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3092

3092:                                             ; preds = %3092, %3091
  %3093 = phi i64 [ 0, %3091 ], [ %3102, %3092 ]
  %3094 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3091 ], [ %3103, %3092 ]
  %3095 = add nuw nsw <4 x i64> %3094, <i64 1, i64 1, i64 1, i64 1>
  %3096 = mul nuw nsw <4 x i64> %3095, %3095
  %3097 = trunc <4 x i64> %3096 to <4 x i32>
  %3098 = sitofp <4 x i32> %3097 to <4 x float>
  %3099 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3098
  %3100 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3093
  %3101 = bitcast float* %3100 to <4 x float>*
  store <4 x float> %3099, <4 x float>* %3101, align 16, !tbaa !9
  %3102 = add nuw i64 %3093, 4
  %3103 = add <4 x i64> %3094, <i64 4, i64 4, i64 4, i64 4>
  %3104 = icmp eq i64 %3102, 32000
  br i1 %3104, label %3105, label %3092, !llvm.loop !90

3105:                                             ; preds = %3092, %3105
  %3106 = phi i64 [ %3115, %3105 ], [ 0, %3092 ]
  %3107 = phi <4 x i64> [ %3116, %3105 ], [ <i64 0, i64 1, i64 2, i64 3>, %3092 ]
  %3108 = add nuw nsw <4 x i64> %3107, <i64 1, i64 1, i64 1, i64 1>
  %3109 = mul nuw nsw <4 x i64> %3108, %3108
  %3110 = trunc <4 x i64> %3109 to <4 x i32>
  %3111 = sitofp <4 x i32> %3110 to <4 x float>
  %3112 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3111
  %3113 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3106
  %3114 = bitcast float* %3113 to <4 x float>*
  store <4 x float> %3112, <4 x float>* %3114, align 16, !tbaa !9
  %3115 = add nuw i64 %3106, 4
  %3116 = add <4 x i64> %3107, <i64 4, i64 4, i64 4, i64 4>
  %3117 = icmp eq i64 %3115, 32000
  br i1 %3117, label %3118, label %3105, !llvm.loop !91

3118:                                             ; preds = %3105
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @d to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

3119:                                             ; preds = %3088
  %3120 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0))
  %3121 = icmp eq i32 %3120, 0
  br i1 %3121, label %3122, label %3159

3122:                                             ; preds = %3119
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3123

3123:                                             ; preds = %3123, %3122
  %3124 = phi i64 [ 0, %3122 ], [ %3138, %3123 ]
  %3125 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3122 ], [ %3139, %3123 ]
  %3126 = trunc <4 x i64> %3125 to <4 x i32>
  %3127 = add <4 x i32> %3126, <i32 1, i32 1, i32 1, i32 1>
  %3128 = trunc <4 x i64> %3125 to <4 x i32>
  %3129 = add <4 x i32> %3128, <i32 5, i32 5, i32 5, i32 5>
  %3130 = sitofp <4 x i32> %3127 to <4 x float>
  %3131 = sitofp <4 x i32> %3129 to <4 x float>
  %3132 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3130
  %3133 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3131
  %3134 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3124
  %3135 = bitcast float* %3134 to <4 x float>*
  store <4 x float> %3132, <4 x float>* %3135, align 16, !tbaa !9
  %3136 = getelementptr inbounds float, float* %3134, i64 4
  %3137 = bitcast float* %3136 to <4 x float>*
  store <4 x float> %3133, <4 x float>* %3137, align 16, !tbaa !9
  %3138 = add nuw i64 %3124, 8
  %3139 = add <4 x i64> %3125, <i64 8, i64 8, i64 8, i64 8>
  %3140 = icmp eq i64 %3138, 32000
  br i1 %3140, label %3141, label %3123, !llvm.loop !92

3141:                                             ; preds = %3123, %3141
  %3142 = phi i64 [ %3156, %3141 ], [ 0, %3123 ]
  %3143 = phi <4 x i64> [ %3157, %3141 ], [ <i64 0, i64 1, i64 2, i64 3>, %3123 ]
  %3144 = trunc <4 x i64> %3143 to <4 x i32>
  %3145 = add <4 x i32> %3144, <i32 1, i32 1, i32 1, i32 1>
  %3146 = trunc <4 x i64> %3143 to <4 x i32>
  %3147 = add <4 x i32> %3146, <i32 5, i32 5, i32 5, i32 5>
  %3148 = sitofp <4 x i32> %3145 to <4 x float>
  %3149 = sitofp <4 x i32> %3147 to <4 x float>
  %3150 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3148
  %3151 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3149
  %3152 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3142
  %3153 = bitcast float* %3152 to <4 x float>*
  store <4 x float> %3150, <4 x float>* %3153, align 16, !tbaa !9
  %3154 = getelementptr inbounds float, float* %3152, i64 4
  %3155 = bitcast float* %3154 to <4 x float>*
  store <4 x float> %3151, <4 x float>* %3155, align 16, !tbaa !9
  %3156 = add nuw i64 %3142, 8
  %3157 = add <4 x i64> %3143, <i64 8, i64 8, i64 8, i64 8>
  %3158 = icmp eq i64 %3156, 32000
  br i1 %3158, label %6516, label %3141, !llvm.loop !93

3159:                                             ; preds = %3119
  %3160 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0))
  %3161 = icmp eq i32 %3160, 0
  br i1 %3161, label %3162, label %3200

3162:                                             ; preds = %3159
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3163

3163:                                             ; preds = %3163, %3162
  %3164 = phi i64 [ 0, %3162 ], [ %3178, %3163 ]
  %3165 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3162 ], [ %3179, %3163 ]
  %3166 = trunc <4 x i64> %3165 to <4 x i32>
  %3167 = add <4 x i32> %3166, <i32 1, i32 1, i32 1, i32 1>
  %3168 = trunc <4 x i64> %3165 to <4 x i32>
  %3169 = add <4 x i32> %3168, <i32 5, i32 5, i32 5, i32 5>
  %3170 = sitofp <4 x i32> %3167 to <4 x float>
  %3171 = sitofp <4 x i32> %3169 to <4 x float>
  %3172 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3170
  %3173 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3171
  %3174 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3164
  %3175 = bitcast float* %3174 to <4 x float>*
  store <4 x float> %3172, <4 x float>* %3175, align 16, !tbaa !9
  %3176 = getelementptr inbounds float, float* %3174, i64 4
  %3177 = bitcast float* %3176 to <4 x float>*
  store <4 x float> %3173, <4 x float>* %3177, align 16, !tbaa !9
  %3178 = add nuw i64 %3164, 8
  %3179 = add <4 x i64> %3165, <i64 8, i64 8, i64 8, i64 8>
  %3180 = icmp eq i64 %3178, 32000
  br i1 %3180, label %3181, label %3163, !llvm.loop !94

3181:                                             ; preds = %3163, %3181
  %3182 = phi i64 [ %3196, %3181 ], [ 0, %3163 ]
  %3183 = phi <4 x i64> [ %3197, %3181 ], [ <i64 0, i64 1, i64 2, i64 3>, %3163 ]
  %3184 = trunc <4 x i64> %3183 to <4 x i32>
  %3185 = add <4 x i32> %3184, <i32 1, i32 1, i32 1, i32 1>
  %3186 = trunc <4 x i64> %3183 to <4 x i32>
  %3187 = add <4 x i32> %3186, <i32 5, i32 5, i32 5, i32 5>
  %3188 = sitofp <4 x i32> %3185 to <4 x float>
  %3189 = sitofp <4 x i32> %3187 to <4 x float>
  %3190 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3188
  %3191 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3189
  %3192 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3182
  %3193 = bitcast float* %3192 to <4 x float>*
  store <4 x float> %3190, <4 x float>* %3193, align 16, !tbaa !9
  %3194 = getelementptr inbounds float, float* %3192, i64 4
  %3195 = bitcast float* %3194 to <4 x float>*
  store <4 x float> %3191, <4 x float>* %3195, align 16, !tbaa !9
  %3196 = add nuw i64 %3182, 8
  %3197 = add <4 x i64> %3183, <i64 8, i64 8, i64 8, i64 8>
  %3198 = icmp eq i64 %3196, 32000
  br i1 %3198, label %3199, label %3181, !llvm.loop !95

3199:                                             ; preds = %3181
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @e to i8*), i8* bitcast ([4 x float]* @.memset_pattern.465 to i8*), i64 128000) #19
  br label %6516

3200:                                             ; preds = %3159
  %3201 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0))
  %3202 = icmp eq i32 %3201, 0
  br i1 %3202, label %3203, label %3222

3203:                                             ; preds = %3200
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @d to i8*), i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 128000) #19
  br label %3204

3204:                                             ; preds = %3204, %3203
  %3205 = phi i64 [ 0, %3203 ], [ %3219, %3204 ]
  %3206 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3203 ], [ %3220, %3204 ]
  %3207 = trunc <4 x i64> %3206 to <4 x i32>
  %3208 = add <4 x i32> %3207, <i32 1, i32 1, i32 1, i32 1>
  %3209 = trunc <4 x i64> %3206 to <4 x i32>
  %3210 = add <4 x i32> %3209, <i32 5, i32 5, i32 5, i32 5>
  %3211 = sitofp <4 x i32> %3208 to <4 x float>
  %3212 = sitofp <4 x i32> %3210 to <4 x float>
  %3213 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3211
  %3214 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3212
  %3215 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3205
  %3216 = bitcast float* %3215 to <4 x float>*
  store <4 x float> %3213, <4 x float>* %3216, align 16, !tbaa !9
  %3217 = getelementptr inbounds float, float* %3215, i64 4
  %3218 = bitcast float* %3217 to <4 x float>*
  store <4 x float> %3214, <4 x float>* %3218, align 16, !tbaa !9
  %3219 = add nuw i64 %3205, 8
  %3220 = add <4 x i64> %3206, <i64 8, i64 8, i64 8, i64 8>
  %3221 = icmp eq i64 %3219, 32000
  br i1 %3221, label %6516, label %3204, !llvm.loop !96

3222:                                             ; preds = %3200
  %3223 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0))
  %3224 = icmp eq i32 %3223, 0
  br i1 %3224, label %3225, label %3262

3225:                                             ; preds = %3222
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3226

3226:                                             ; preds = %3226, %3225
  %3227 = phi i64 [ 0, %3225 ], [ %3241, %3226 ]
  %3228 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3225 ], [ %3242, %3226 ]
  %3229 = trunc <4 x i64> %3228 to <4 x i32>
  %3230 = add <4 x i32> %3229, <i32 1, i32 1, i32 1, i32 1>
  %3231 = trunc <4 x i64> %3228 to <4 x i32>
  %3232 = add <4 x i32> %3231, <i32 5, i32 5, i32 5, i32 5>
  %3233 = sitofp <4 x i32> %3230 to <4 x float>
  %3234 = sitofp <4 x i32> %3232 to <4 x float>
  %3235 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3233
  %3236 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3234
  %3237 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3227
  %3238 = bitcast float* %3237 to <4 x float>*
  store <4 x float> %3235, <4 x float>* %3238, align 16, !tbaa !9
  %3239 = getelementptr inbounds float, float* %3237, i64 4
  %3240 = bitcast float* %3239 to <4 x float>*
  store <4 x float> %3236, <4 x float>* %3240, align 16, !tbaa !9
  %3241 = add nuw i64 %3227, 8
  %3242 = add <4 x i64> %3228, <i64 8, i64 8, i64 8, i64 8>
  %3243 = icmp eq i64 %3241, 32000
  br i1 %3243, label %3244, label %3226, !llvm.loop !97

3244:                                             ; preds = %3226, %3244
  %3245 = phi i64 [ %3259, %3244 ], [ 0, %3226 ]
  %3246 = phi <4 x i64> [ %3260, %3244 ], [ <i64 0, i64 1, i64 2, i64 3>, %3226 ]
  %3247 = trunc <4 x i64> %3246 to <4 x i32>
  %3248 = add <4 x i32> %3247, <i32 1, i32 1, i32 1, i32 1>
  %3249 = trunc <4 x i64> %3246 to <4 x i32>
  %3250 = add <4 x i32> %3249, <i32 5, i32 5, i32 5, i32 5>
  %3251 = sitofp <4 x i32> %3248 to <4 x float>
  %3252 = sitofp <4 x i32> %3250 to <4 x float>
  %3253 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3251
  %3254 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3252
  %3255 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3245
  %3256 = bitcast float* %3255 to <4 x float>*
  store <4 x float> %3253, <4 x float>* %3256, align 16, !tbaa !9
  %3257 = getelementptr inbounds float, float* %3255, i64 4
  %3258 = bitcast float* %3257 to <4 x float>*
  store <4 x float> %3254, <4 x float>* %3258, align 16, !tbaa !9
  %3259 = add nuw i64 %3245, 8
  %3260 = add <4 x i64> %3246, <i64 8, i64 8, i64 8, i64 8>
  %3261 = icmp eq i64 %3259, 32000
  br i1 %3261, label %6516, label %3244, !llvm.loop !98

3262:                                             ; preds = %3222
  %3263 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %3264 = icmp eq i32 %3263, 0
  br i1 %3264, label %3265, label %3283

3265:                                             ; preds = %3262, %3265
  %3266 = phi i64 [ %3269, %3265 ], [ 0, %3262 ]
  %3267 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %3266, i64 0
  %3268 = bitcast float* %3267 to i8*
  call void @memset_pattern16(i8* %3268, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %3269 = add nuw nsw i64 %3266, 1
  %3270 = icmp eq i64 %3269, 256
  br i1 %3270, label %3271, label %3265, !llvm.loop !26

3271:                                             ; preds = %3265, %3271
  %3272 = phi i64 [ %3275, %3271 ], [ 0, %3265 ]
  %3273 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3272, i64 0
  %3274 = bitcast float* %3273 to i8*
  call void @memset_pattern16(i8* %3274, i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 1024) #19
  %3275 = add nuw nsw i64 %3272, 1
  %3276 = icmp eq i64 %3275, 256
  br i1 %3276, label %3277, label %3271, !llvm.loop !26

3277:                                             ; preds = %3271, %3277
  %3278 = phi i64 [ %3281, %3277 ], [ 0, %3271 ]
  %3279 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3278, i64 0
  %3280 = bitcast float* %3279 to i8*
  call void @memset_pattern16(i8* %3280, i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 1024) #19
  %3281 = add nuw nsw i64 %3278, 1
  %3282 = icmp eq i64 %3281, 256
  br i1 %3282, label %6516, label %3277, !llvm.loop !26

3283:                                             ; preds = %3262
  %3284 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0))
  %3285 = icmp eq i32 %3284, 0
  br i1 %3285, label %3286, label %3341

3286:                                             ; preds = %3283
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3287

3287:                                             ; preds = %3287, %3286
  %3288 = phi i64 [ 0, %3286 ], [ %3302, %3287 ]
  %3289 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3286 ], [ %3303, %3287 ]
  %3290 = trunc <4 x i64> %3289 to <4 x i32>
  %3291 = add <4 x i32> %3290, <i32 1, i32 1, i32 1, i32 1>
  %3292 = trunc <4 x i64> %3289 to <4 x i32>
  %3293 = add <4 x i32> %3292, <i32 5, i32 5, i32 5, i32 5>
  %3294 = sitofp <4 x i32> %3291 to <4 x float>
  %3295 = sitofp <4 x i32> %3293 to <4 x float>
  %3296 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3294
  %3297 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3295
  %3298 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3288
  %3299 = bitcast float* %3298 to <4 x float>*
  store <4 x float> %3296, <4 x float>* %3299, align 16, !tbaa !9
  %3300 = getelementptr inbounds float, float* %3298, i64 4
  %3301 = bitcast float* %3300 to <4 x float>*
  store <4 x float> %3297, <4 x float>* %3301, align 16, !tbaa !9
  %3302 = add nuw i64 %3288, 8
  %3303 = add <4 x i64> %3289, <i64 8, i64 8, i64 8, i64 8>
  %3304 = icmp eq i64 %3302, 32000
  br i1 %3304, label %3305, label %3287, !llvm.loop !99

3305:                                             ; preds = %3287, %3305
  %3306 = phi i64 [ %3320, %3305 ], [ 0, %3287 ]
  %3307 = phi <4 x i64> [ %3321, %3305 ], [ <i64 0, i64 1, i64 2, i64 3>, %3287 ]
  %3308 = trunc <4 x i64> %3307 to <4 x i32>
  %3309 = add <4 x i32> %3308, <i32 1, i32 1, i32 1, i32 1>
  %3310 = trunc <4 x i64> %3307 to <4 x i32>
  %3311 = add <4 x i32> %3310, <i32 5, i32 5, i32 5, i32 5>
  %3312 = sitofp <4 x i32> %3309 to <4 x float>
  %3313 = sitofp <4 x i32> %3311 to <4 x float>
  %3314 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3312
  %3315 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3313
  %3316 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3306
  %3317 = bitcast float* %3316 to <4 x float>*
  store <4 x float> %3314, <4 x float>* %3317, align 16, !tbaa !9
  %3318 = getelementptr inbounds float, float* %3316, i64 4
  %3319 = bitcast float* %3318 to <4 x float>*
  store <4 x float> %3315, <4 x float>* %3319, align 16, !tbaa !9
  %3320 = add nuw i64 %3306, 8
  %3321 = add <4 x i64> %3307, <i64 8, i64 8, i64 8, i64 8>
  %3322 = icmp eq i64 %3320, 32000
  br i1 %3322, label %3323, label %3305, !llvm.loop !100

3323:                                             ; preds = %3305, %3323
  %3324 = phi i64 [ %3338, %3323 ], [ 0, %3305 ]
  %3325 = phi <4 x i64> [ %3339, %3323 ], [ <i64 0, i64 1, i64 2, i64 3>, %3305 ]
  %3326 = trunc <4 x i64> %3325 to <4 x i32>
  %3327 = add <4 x i32> %3326, <i32 1, i32 1, i32 1, i32 1>
  %3328 = trunc <4 x i64> %3325 to <4 x i32>
  %3329 = add <4 x i32> %3328, <i32 5, i32 5, i32 5, i32 5>
  %3330 = sitofp <4 x i32> %3327 to <4 x float>
  %3331 = sitofp <4 x i32> %3329 to <4 x float>
  %3332 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3330
  %3333 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3331
  %3334 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3324
  %3335 = bitcast float* %3334 to <4 x float>*
  store <4 x float> %3332, <4 x float>* %3335, align 16, !tbaa !9
  %3336 = getelementptr inbounds float, float* %3334, i64 4
  %3337 = bitcast float* %3336 to <4 x float>*
  store <4 x float> %3333, <4 x float>* %3337, align 16, !tbaa !9
  %3338 = add nuw i64 %3324, 8
  %3339 = add <4 x i64> %3325, <i64 8, i64 8, i64 8, i64 8>
  %3340 = icmp eq i64 %3338, 32000
  br i1 %3340, label %6516, label %3323, !llvm.loop !101

3341:                                             ; preds = %3283
  %3342 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0))
  %3343 = icmp eq i32 %3342, 0
  br i1 %3343, label %3344, label %3399

3344:                                             ; preds = %3341
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000) to i8*), i8* bitcast ([4 x float]* @.memset_pattern.390 to i8*), i64 128000) #19
  br label %3345

3345:                                             ; preds = %3345, %3344
  %3346 = phi i64 [ 0, %3344 ], [ %3360, %3345 ]
  %3347 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3344 ], [ %3361, %3345 ]
  %3348 = trunc <4 x i64> %3347 to <4 x i32>
  %3349 = add <4 x i32> %3348, <i32 1, i32 1, i32 1, i32 1>
  %3350 = trunc <4 x i64> %3347 to <4 x i32>
  %3351 = add <4 x i32> %3350, <i32 5, i32 5, i32 5, i32 5>
  %3352 = sitofp <4 x i32> %3349 to <4 x float>
  %3353 = sitofp <4 x i32> %3351 to <4 x float>
  %3354 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3352
  %3355 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3353
  %3356 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3346
  %3357 = bitcast float* %3356 to <4 x float>*
  store <4 x float> %3354, <4 x float>* %3357, align 16, !tbaa !9
  %3358 = getelementptr inbounds float, float* %3356, i64 4
  %3359 = bitcast float* %3358 to <4 x float>*
  store <4 x float> %3355, <4 x float>* %3359, align 16, !tbaa !9
  %3360 = add nuw i64 %3346, 8
  %3361 = add <4 x i64> %3347, <i64 8, i64 8, i64 8, i64 8>
  %3362 = icmp eq i64 %3360, 32000
  br i1 %3362, label %3363, label %3345, !llvm.loop !102

3363:                                             ; preds = %3345, %3363
  %3364 = phi i64 [ %3378, %3363 ], [ 0, %3345 ]
  %3365 = phi <4 x i64> [ %3379, %3363 ], [ <i64 0, i64 1, i64 2, i64 3>, %3345 ]
  %3366 = trunc <4 x i64> %3365 to <4 x i32>
  %3367 = add <4 x i32> %3366, <i32 1, i32 1, i32 1, i32 1>
  %3368 = trunc <4 x i64> %3365 to <4 x i32>
  %3369 = add <4 x i32> %3368, <i32 5, i32 5, i32 5, i32 5>
  %3370 = sitofp <4 x i32> %3367 to <4 x float>
  %3371 = sitofp <4 x i32> %3369 to <4 x float>
  %3372 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3370
  %3373 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3371
  %3374 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3364
  %3375 = bitcast float* %3374 to <4 x float>*
  store <4 x float> %3372, <4 x float>* %3375, align 16, !tbaa !9
  %3376 = getelementptr inbounds float, float* %3374, i64 4
  %3377 = bitcast float* %3376 to <4 x float>*
  store <4 x float> %3373, <4 x float>* %3377, align 16, !tbaa !9
  %3378 = add nuw i64 %3364, 8
  %3379 = add <4 x i64> %3365, <i64 8, i64 8, i64 8, i64 8>
  %3380 = icmp eq i64 %3378, 32000
  br i1 %3380, label %3381, label %3363, !llvm.loop !103

3381:                                             ; preds = %3363, %3381
  %3382 = phi i64 [ %3396, %3381 ], [ 0, %3363 ]
  %3383 = phi <4 x i64> [ %3397, %3381 ], [ <i64 0, i64 1, i64 2, i64 3>, %3363 ]
  %3384 = trunc <4 x i64> %3383 to <4 x i32>
  %3385 = add <4 x i32> %3384, <i32 1, i32 1, i32 1, i32 1>
  %3386 = trunc <4 x i64> %3383 to <4 x i32>
  %3387 = add <4 x i32> %3386, <i32 5, i32 5, i32 5, i32 5>
  %3388 = sitofp <4 x i32> %3385 to <4 x float>
  %3389 = sitofp <4 x i32> %3387 to <4 x float>
  %3390 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3388
  %3391 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3389
  %3392 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3382
  %3393 = bitcast float* %3392 to <4 x float>*
  store <4 x float> %3390, <4 x float>* %3393, align 16, !tbaa !9
  %3394 = getelementptr inbounds float, float* %3392, i64 4
  %3395 = bitcast float* %3394 to <4 x float>*
  store <4 x float> %3391, <4 x float>* %3395, align 16, !tbaa !9
  %3396 = add nuw i64 %3382, 8
  %3397 = add <4 x i64> %3383, <i64 8, i64 8, i64 8, i64 8>
  %3398 = icmp eq i64 %3396, 32000
  br i1 %3398, label %6516, label %3381, !llvm.loop !104

3399:                                             ; preds = %3341
  %3400 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0))
  %3401 = icmp eq i32 %3400, 0
  br i1 %3401, label %3402, label %3457

3402:                                             ; preds = %3399
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.390 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000) to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3403

3403:                                             ; preds = %3403, %3402
  %3404 = phi i64 [ 0, %3402 ], [ %3418, %3403 ]
  %3405 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3402 ], [ %3419, %3403 ]
  %3406 = trunc <4 x i64> %3405 to <4 x i32>
  %3407 = add <4 x i32> %3406, <i32 1, i32 1, i32 1, i32 1>
  %3408 = trunc <4 x i64> %3405 to <4 x i32>
  %3409 = add <4 x i32> %3408, <i32 5, i32 5, i32 5, i32 5>
  %3410 = sitofp <4 x i32> %3407 to <4 x float>
  %3411 = sitofp <4 x i32> %3409 to <4 x float>
  %3412 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3410
  %3413 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3411
  %3414 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3404
  %3415 = bitcast float* %3414 to <4 x float>*
  store <4 x float> %3412, <4 x float>* %3415, align 16, !tbaa !9
  %3416 = getelementptr inbounds float, float* %3414, i64 4
  %3417 = bitcast float* %3416 to <4 x float>*
  store <4 x float> %3413, <4 x float>* %3417, align 16, !tbaa !9
  %3418 = add nuw i64 %3404, 8
  %3419 = add <4 x i64> %3405, <i64 8, i64 8, i64 8, i64 8>
  %3420 = icmp eq i64 %3418, 32000
  br i1 %3420, label %3421, label %3403, !llvm.loop !105

3421:                                             ; preds = %3403, %3421
  %3422 = phi i64 [ %3436, %3421 ], [ 0, %3403 ]
  %3423 = phi <4 x i64> [ %3437, %3421 ], [ <i64 0, i64 1, i64 2, i64 3>, %3403 ]
  %3424 = trunc <4 x i64> %3423 to <4 x i32>
  %3425 = add <4 x i32> %3424, <i32 1, i32 1, i32 1, i32 1>
  %3426 = trunc <4 x i64> %3423 to <4 x i32>
  %3427 = add <4 x i32> %3426, <i32 5, i32 5, i32 5, i32 5>
  %3428 = sitofp <4 x i32> %3425 to <4 x float>
  %3429 = sitofp <4 x i32> %3427 to <4 x float>
  %3430 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3428
  %3431 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3429
  %3432 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3422
  %3433 = bitcast float* %3432 to <4 x float>*
  store <4 x float> %3430, <4 x float>* %3433, align 16, !tbaa !9
  %3434 = getelementptr inbounds float, float* %3432, i64 4
  %3435 = bitcast float* %3434 to <4 x float>*
  store <4 x float> %3431, <4 x float>* %3435, align 16, !tbaa !9
  %3436 = add nuw i64 %3422, 8
  %3437 = add <4 x i64> %3423, <i64 8, i64 8, i64 8, i64 8>
  %3438 = icmp eq i64 %3436, 32000
  br i1 %3438, label %3439, label %3421, !llvm.loop !106

3439:                                             ; preds = %3421, %3439
  %3440 = phi i64 [ %3454, %3439 ], [ 0, %3421 ]
  %3441 = phi <4 x i64> [ %3455, %3439 ], [ <i64 0, i64 1, i64 2, i64 3>, %3421 ]
  %3442 = trunc <4 x i64> %3441 to <4 x i32>
  %3443 = add <4 x i32> %3442, <i32 1, i32 1, i32 1, i32 1>
  %3444 = trunc <4 x i64> %3441 to <4 x i32>
  %3445 = add <4 x i32> %3444, <i32 5, i32 5, i32 5, i32 5>
  %3446 = sitofp <4 x i32> %3443 to <4 x float>
  %3447 = sitofp <4 x i32> %3445 to <4 x float>
  %3448 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3446
  %3449 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3447
  %3450 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3440
  %3451 = bitcast float* %3450 to <4 x float>*
  store <4 x float> %3448, <4 x float>* %3451, align 16, !tbaa !9
  %3452 = getelementptr inbounds float, float* %3450, i64 4
  %3453 = bitcast float* %3452 to <4 x float>*
  store <4 x float> %3449, <4 x float>* %3453, align 16, !tbaa !9
  %3454 = add nuw i64 %3440, 8
  %3455 = add <4 x i64> %3441, <i64 8, i64 8, i64 8, i64 8>
  %3456 = icmp eq i64 %3454, 32000
  br i1 %3456, label %6516, label %3439, !llvm.loop !107

3457:                                             ; preds = %3399
  %3458 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0))
  %3459 = icmp eq i32 %3458, 0
  br i1 %3459, label %3460, label %3515

3460:                                             ; preds = %3457
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.390 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000) to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3461

3461:                                             ; preds = %3461, %3460
  %3462 = phi i64 [ 0, %3460 ], [ %3476, %3461 ]
  %3463 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3460 ], [ %3477, %3461 ]
  %3464 = trunc <4 x i64> %3463 to <4 x i32>
  %3465 = add <4 x i32> %3464, <i32 1, i32 1, i32 1, i32 1>
  %3466 = trunc <4 x i64> %3463 to <4 x i32>
  %3467 = add <4 x i32> %3466, <i32 5, i32 5, i32 5, i32 5>
  %3468 = sitofp <4 x i32> %3465 to <4 x float>
  %3469 = sitofp <4 x i32> %3467 to <4 x float>
  %3470 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3468
  %3471 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3469
  %3472 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3462
  %3473 = bitcast float* %3472 to <4 x float>*
  store <4 x float> %3470, <4 x float>* %3473, align 16, !tbaa !9
  %3474 = getelementptr inbounds float, float* %3472, i64 4
  %3475 = bitcast float* %3474 to <4 x float>*
  store <4 x float> %3471, <4 x float>* %3475, align 16, !tbaa !9
  %3476 = add nuw i64 %3462, 8
  %3477 = add <4 x i64> %3463, <i64 8, i64 8, i64 8, i64 8>
  %3478 = icmp eq i64 %3476, 32000
  br i1 %3478, label %3479, label %3461, !llvm.loop !108

3479:                                             ; preds = %3461, %3479
  %3480 = phi i64 [ %3494, %3479 ], [ 0, %3461 ]
  %3481 = phi <4 x i64> [ %3495, %3479 ], [ <i64 0, i64 1, i64 2, i64 3>, %3461 ]
  %3482 = trunc <4 x i64> %3481 to <4 x i32>
  %3483 = add <4 x i32> %3482, <i32 1, i32 1, i32 1, i32 1>
  %3484 = trunc <4 x i64> %3481 to <4 x i32>
  %3485 = add <4 x i32> %3484, <i32 5, i32 5, i32 5, i32 5>
  %3486 = sitofp <4 x i32> %3483 to <4 x float>
  %3487 = sitofp <4 x i32> %3485 to <4 x float>
  %3488 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3486
  %3489 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3487
  %3490 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3480
  %3491 = bitcast float* %3490 to <4 x float>*
  store <4 x float> %3488, <4 x float>* %3491, align 16, !tbaa !9
  %3492 = getelementptr inbounds float, float* %3490, i64 4
  %3493 = bitcast float* %3492 to <4 x float>*
  store <4 x float> %3489, <4 x float>* %3493, align 16, !tbaa !9
  %3494 = add nuw i64 %3480, 8
  %3495 = add <4 x i64> %3481, <i64 8, i64 8, i64 8, i64 8>
  %3496 = icmp eq i64 %3494, 32000
  br i1 %3496, label %3497, label %3479, !llvm.loop !109

3497:                                             ; preds = %3479, %3497
  %3498 = phi i64 [ %3512, %3497 ], [ 0, %3479 ]
  %3499 = phi <4 x i64> [ %3513, %3497 ], [ <i64 0, i64 1, i64 2, i64 3>, %3479 ]
  %3500 = trunc <4 x i64> %3499 to <4 x i32>
  %3501 = add <4 x i32> %3500, <i32 1, i32 1, i32 1, i32 1>
  %3502 = trunc <4 x i64> %3499 to <4 x i32>
  %3503 = add <4 x i32> %3502, <i32 5, i32 5, i32 5, i32 5>
  %3504 = sitofp <4 x i32> %3501 to <4 x float>
  %3505 = sitofp <4 x i32> %3503 to <4 x float>
  %3506 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3504
  %3507 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3505
  %3508 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3498
  %3509 = bitcast float* %3508 to <4 x float>*
  store <4 x float> %3506, <4 x float>* %3509, align 16, !tbaa !9
  %3510 = getelementptr inbounds float, float* %3508, i64 4
  %3511 = bitcast float* %3510 to <4 x float>*
  store <4 x float> %3507, <4 x float>* %3511, align 16, !tbaa !9
  %3512 = add nuw i64 %3498, 8
  %3513 = add <4 x i64> %3499, <i64 8, i64 8, i64 8, i64 8>
  %3514 = icmp eq i64 %3512, 32000
  br i1 %3514, label %6516, label %3497, !llvm.loop !110

3515:                                             ; preds = %3457
  %3516 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0))
  %3517 = icmp eq i32 %3516, 0
  br i1 %3517, label %3518, label %3573

3518:                                             ; preds = %3515
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3519

3519:                                             ; preds = %3519, %3518
  %3520 = phi i64 [ 0, %3518 ], [ %3534, %3519 ]
  %3521 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3518 ], [ %3535, %3519 ]
  %3522 = trunc <4 x i64> %3521 to <4 x i32>
  %3523 = add <4 x i32> %3522, <i32 1, i32 1, i32 1, i32 1>
  %3524 = trunc <4 x i64> %3521 to <4 x i32>
  %3525 = add <4 x i32> %3524, <i32 5, i32 5, i32 5, i32 5>
  %3526 = sitofp <4 x i32> %3523 to <4 x float>
  %3527 = sitofp <4 x i32> %3525 to <4 x float>
  %3528 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3526
  %3529 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3527
  %3530 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3520
  %3531 = bitcast float* %3530 to <4 x float>*
  store <4 x float> %3528, <4 x float>* %3531, align 16, !tbaa !9
  %3532 = getelementptr inbounds float, float* %3530, i64 4
  %3533 = bitcast float* %3532 to <4 x float>*
  store <4 x float> %3529, <4 x float>* %3533, align 16, !tbaa !9
  %3534 = add nuw i64 %3520, 8
  %3535 = add <4 x i64> %3521, <i64 8, i64 8, i64 8, i64 8>
  %3536 = icmp eq i64 %3534, 32000
  br i1 %3536, label %3537, label %3519, !llvm.loop !111

3537:                                             ; preds = %3519, %3537
  %3538 = phi i64 [ %3552, %3537 ], [ 0, %3519 ]
  %3539 = phi <4 x i64> [ %3553, %3537 ], [ <i64 0, i64 1, i64 2, i64 3>, %3519 ]
  %3540 = trunc <4 x i64> %3539 to <4 x i32>
  %3541 = add <4 x i32> %3540, <i32 1, i32 1, i32 1, i32 1>
  %3542 = trunc <4 x i64> %3539 to <4 x i32>
  %3543 = add <4 x i32> %3542, <i32 5, i32 5, i32 5, i32 5>
  %3544 = sitofp <4 x i32> %3541 to <4 x float>
  %3545 = sitofp <4 x i32> %3543 to <4 x float>
  %3546 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3544
  %3547 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3545
  %3548 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %3538
  %3549 = bitcast float* %3548 to <4 x float>*
  store <4 x float> %3546, <4 x float>* %3549, align 16, !tbaa !9
  %3550 = getelementptr inbounds float, float* %3548, i64 4
  %3551 = bitcast float* %3550 to <4 x float>*
  store <4 x float> %3547, <4 x float>* %3551, align 16, !tbaa !9
  %3552 = add nuw i64 %3538, 8
  %3553 = add <4 x i64> %3539, <i64 8, i64 8, i64 8, i64 8>
  %3554 = icmp eq i64 %3552, 32000
  br i1 %3554, label %3555, label %3537, !llvm.loop !112

3555:                                             ; preds = %3537, %3555
  %3556 = phi i64 [ %3570, %3555 ], [ 0, %3537 ]
  %3557 = phi <4 x i64> [ %3571, %3555 ], [ <i64 0, i64 1, i64 2, i64 3>, %3537 ]
  %3558 = trunc <4 x i64> %3557 to <4 x i32>
  %3559 = add <4 x i32> %3558, <i32 1, i32 1, i32 1, i32 1>
  %3560 = trunc <4 x i64> %3557 to <4 x i32>
  %3561 = add <4 x i32> %3560, <i32 5, i32 5, i32 5, i32 5>
  %3562 = sitofp <4 x i32> %3559 to <4 x float>
  %3563 = sitofp <4 x i32> %3561 to <4 x float>
  %3564 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3562
  %3565 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3563
  %3566 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %3556
  %3567 = bitcast float* %3566 to <4 x float>*
  store <4 x float> %3564, <4 x float>* %3567, align 16, !tbaa !9
  %3568 = getelementptr inbounds float, float* %3566, i64 4
  %3569 = bitcast float* %3568 to <4 x float>*
  store <4 x float> %3565, <4 x float>* %3569, align 16, !tbaa !9
  %3570 = add nuw i64 %3556, 8
  %3571 = add <4 x i64> %3557, <i64 8, i64 8, i64 8, i64 8>
  %3572 = icmp eq i64 %3570, 32000
  br i1 %3572, label %6516, label %3555, !llvm.loop !113

3573:                                             ; preds = %3515
  %3574 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0))
  %3575 = icmp eq i32 %3574, 0
  br i1 %3575, label %3576, label %3613

3576:                                             ; preds = %3573
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3577

3577:                                             ; preds = %3577, %3576
  %3578 = phi i64 [ 0, %3576 ], [ %3592, %3577 ]
  %3579 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3576 ], [ %3593, %3577 ]
  %3580 = trunc <4 x i64> %3579 to <4 x i32>
  %3581 = add <4 x i32> %3580, <i32 1, i32 1, i32 1, i32 1>
  %3582 = trunc <4 x i64> %3579 to <4 x i32>
  %3583 = add <4 x i32> %3582, <i32 5, i32 5, i32 5, i32 5>
  %3584 = sitofp <4 x i32> %3581 to <4 x float>
  %3585 = sitofp <4 x i32> %3583 to <4 x float>
  %3586 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3584
  %3587 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3585
  %3588 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3578
  %3589 = bitcast float* %3588 to <4 x float>*
  store <4 x float> %3586, <4 x float>* %3589, align 16, !tbaa !9
  %3590 = getelementptr inbounds float, float* %3588, i64 4
  %3591 = bitcast float* %3590 to <4 x float>*
  store <4 x float> %3587, <4 x float>* %3591, align 16, !tbaa !9
  %3592 = add nuw i64 %3578, 8
  %3593 = add <4 x i64> %3579, <i64 8, i64 8, i64 8, i64 8>
  %3594 = icmp eq i64 %3592, 32000
  br i1 %3594, label %3595, label %3577, !llvm.loop !114

3595:                                             ; preds = %3577, %3595
  %3596 = phi i64 [ %3610, %3595 ], [ 0, %3577 ]
  %3597 = phi <4 x i64> [ %3611, %3595 ], [ <i64 0, i64 1, i64 2, i64 3>, %3577 ]
  %3598 = trunc <4 x i64> %3597 to <4 x i32>
  %3599 = add <4 x i32> %3598, <i32 1, i32 1, i32 1, i32 1>
  %3600 = trunc <4 x i64> %3597 to <4 x i32>
  %3601 = add <4 x i32> %3600, <i32 5, i32 5, i32 5, i32 5>
  %3602 = sitofp <4 x i32> %3599 to <4 x float>
  %3603 = sitofp <4 x i32> %3601 to <4 x float>
  %3604 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3602
  %3605 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3603
  %3606 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3596
  %3607 = bitcast float* %3606 to <4 x float>*
  store <4 x float> %3604, <4 x float>* %3607, align 16, !tbaa !9
  %3608 = getelementptr inbounds float, float* %3606, i64 4
  %3609 = bitcast float* %3608 to <4 x float>*
  store <4 x float> %3605, <4 x float>* %3609, align 16, !tbaa !9
  %3610 = add nuw i64 %3596, 8
  %3611 = add <4 x i64> %3597, <i64 8, i64 8, i64 8, i64 8>
  %3612 = icmp eq i64 %3610, 32000
  br i1 %3612, label %6516, label %3595, !llvm.loop !115

3613:                                             ; preds = %3573
  %3614 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0))
  %3615 = icmp eq i32 %3614, 0
  br i1 %3615, label %3616, label %3653

3616:                                             ; preds = %3613
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %3617

3617:                                             ; preds = %3617, %3616
  %3618 = phi i64 [ 0, %3616 ], [ %3632, %3617 ]
  %3619 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3616 ], [ %3633, %3617 ]
  %3620 = trunc <4 x i64> %3619 to <4 x i32>
  %3621 = add <4 x i32> %3620, <i32 1, i32 1, i32 1, i32 1>
  %3622 = trunc <4 x i64> %3619 to <4 x i32>
  %3623 = add <4 x i32> %3622, <i32 5, i32 5, i32 5, i32 5>
  %3624 = sitofp <4 x i32> %3621 to <4 x float>
  %3625 = sitofp <4 x i32> %3623 to <4 x float>
  %3626 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3624
  %3627 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3625
  %3628 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %3618
  %3629 = bitcast float* %3628 to <4 x float>*
  store <4 x float> %3626, <4 x float>* %3629, align 16, !tbaa !9
  %3630 = getelementptr inbounds float, float* %3628, i64 4
  %3631 = bitcast float* %3630 to <4 x float>*
  store <4 x float> %3627, <4 x float>* %3631, align 16, !tbaa !9
  %3632 = add nuw i64 %3618, 8
  %3633 = add <4 x i64> %3619, <i64 8, i64 8, i64 8, i64 8>
  %3634 = icmp eq i64 %3632, 32000
  br i1 %3634, label %3635, label %3617, !llvm.loop !116

3635:                                             ; preds = %3617, %3635
  %3636 = phi i64 [ %3650, %3635 ], [ 0, %3617 ]
  %3637 = phi <4 x i64> [ %3651, %3635 ], [ <i64 0, i64 1, i64 2, i64 3>, %3617 ]
  %3638 = trunc <4 x i64> %3637 to <4 x i32>
  %3639 = add <4 x i32> %3638, <i32 1, i32 1, i32 1, i32 1>
  %3640 = trunc <4 x i64> %3637 to <4 x i32>
  %3641 = add <4 x i32> %3640, <i32 5, i32 5, i32 5, i32 5>
  %3642 = sitofp <4 x i32> %3639 to <4 x float>
  %3643 = sitofp <4 x i32> %3641 to <4 x float>
  %3644 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3642
  %3645 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3643
  %3646 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %3636
  %3647 = bitcast float* %3646 to <4 x float>*
  store <4 x float> %3644, <4 x float>* %3647, align 16, !tbaa !9
  %3648 = getelementptr inbounds float, float* %3646, i64 4
  %3649 = bitcast float* %3648 to <4 x float>*
  store <4 x float> %3645, <4 x float>* %3649, align 16, !tbaa !9
  %3650 = add nuw i64 %3636, 8
  %3651 = add <4 x i64> %3637, <i64 8, i64 8, i64 8, i64 8>
  %3652 = icmp eq i64 %3650, 32000
  br i1 %3652, label %6516, label %3635, !llvm.loop !117

3653:                                             ; preds = %3613
  %3654 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0))
  %3655 = icmp eq i32 %3654, 0
  br i1 %3655, label %3656, label %3657

3656:                                             ; preds = %3653
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

3657:                                             ; preds = %3653
  %3658 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0))
  %3659 = icmp eq i32 %3658, 0
  br i1 %3659, label %3660, label %3661

3660:                                             ; preds = %3657
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

3661:                                             ; preds = %3657
  %3662 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0))
  %3663 = icmp eq i32 %3662, 0
  br i1 %3663, label %3664, label %3665

3664:                                             ; preds = %3661
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

3665:                                             ; preds = %3661
  %3666 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0))
  %3667 = icmp eq i32 %3666, 0
  br i1 %3667, label %3668, label %3686

3668:                                             ; preds = %3665, %3668
  %3669 = phi i64 [ %3683, %3668 ], [ 0, %3665 ]
  %3670 = phi <4 x i64> [ %3684, %3668 ], [ <i64 0, i64 1, i64 2, i64 3>, %3665 ]
  %3671 = trunc <4 x i64> %3670 to <4 x i32>
  %3672 = add <4 x i32> %3671, <i32 1, i32 1, i32 1, i32 1>
  %3673 = trunc <4 x i64> %3670 to <4 x i32>
  %3674 = add <4 x i32> %3673, <i32 5, i32 5, i32 5, i32 5>
  %3675 = sitofp <4 x i32> %3672 to <4 x float>
  %3676 = sitofp <4 x i32> %3674 to <4 x float>
  %3677 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3675
  %3678 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3676
  %3679 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3669
  %3680 = bitcast float* %3679 to <4 x float>*
  store <4 x float> %3677, <4 x float>* %3680, align 16, !tbaa !9
  %3681 = getelementptr inbounds float, float* %3679, i64 4
  %3682 = bitcast float* %3681 to <4 x float>*
  store <4 x float> %3678, <4 x float>* %3682, align 16, !tbaa !9
  %3683 = add nuw i64 %3669, 8
  %3684 = add <4 x i64> %3670, <i64 8, i64 8, i64 8, i64 8>
  %3685 = icmp eq i64 %3683, 32000
  br i1 %3685, label %6516, label %3668, !llvm.loop !118

3686:                                             ; preds = %3665
  %3687 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0))
  %3688 = icmp eq i32 %3687, 0
  br i1 %3688, label %3689, label %3973

3689:                                             ; preds = %3686, %3689
  %3690 = phi i64 [ %3693, %3689 ], [ 0, %3686 ]
  %3691 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %3690, i64 0
  %3692 = bitcast float* %3691 to i8*
  call void @memset_pattern16(i8* %3692, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %3693 = add nuw nsw i64 %3690, 1
  %3694 = icmp eq i64 %3693, 256
  br i1 %3694, label %3695, label %3689, !llvm.loop !26

3695:                                             ; preds = %3689, %3695
  %3696 = phi i64 [ %3697, %3695 ], [ 0, %3689 ]
  %3697 = add nuw nsw i64 %3696, 1
  %3698 = trunc i64 %3697 to i32
  %3699 = sitofp i32 %3698 to float
  %3700 = fdiv float 1.000000e+00, %3699
  %3701 = insertelement <4 x float> poison, float %3700, i32 0
  %3702 = shufflevector <4 x float> %3701, <4 x float> poison, <4 x i32> zeroinitializer
  %3703 = insertelement <4 x float> poison, float %3700, i32 0
  %3704 = shufflevector <4 x float> %3703, <4 x float> poison, <4 x i32> zeroinitializer
  %3705 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 0
  %3706 = bitcast float* %3705 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3706, align 16, !tbaa !9
  %3707 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 4
  %3708 = bitcast float* %3707 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3708, align 16, !tbaa !9
  %3709 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 8
  %3710 = bitcast float* %3709 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3710, align 16, !tbaa !9
  %3711 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 12
  %3712 = bitcast float* %3711 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3712, align 16, !tbaa !9
  %3713 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 16
  %3714 = bitcast float* %3713 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3714, align 16, !tbaa !9
  %3715 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 20
  %3716 = bitcast float* %3715 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3716, align 16, !tbaa !9
  %3717 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 24
  %3718 = bitcast float* %3717 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3718, align 16, !tbaa !9
  %3719 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 28
  %3720 = bitcast float* %3719 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3720, align 16, !tbaa !9
  %3721 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 32
  %3722 = bitcast float* %3721 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3722, align 16, !tbaa !9
  %3723 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 36
  %3724 = bitcast float* %3723 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3724, align 16, !tbaa !9
  %3725 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 40
  %3726 = bitcast float* %3725 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3726, align 16, !tbaa !9
  %3727 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 44
  %3728 = bitcast float* %3727 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3728, align 16, !tbaa !9
  %3729 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 48
  %3730 = bitcast float* %3729 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3730, align 16, !tbaa !9
  %3731 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 52
  %3732 = bitcast float* %3731 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3732, align 16, !tbaa !9
  %3733 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 56
  %3734 = bitcast float* %3733 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3734, align 16, !tbaa !9
  %3735 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 60
  %3736 = bitcast float* %3735 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3736, align 16, !tbaa !9
  %3737 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 64
  %3738 = bitcast float* %3737 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3738, align 16, !tbaa !9
  %3739 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 68
  %3740 = bitcast float* %3739 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3740, align 16, !tbaa !9
  %3741 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 72
  %3742 = bitcast float* %3741 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3742, align 16, !tbaa !9
  %3743 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 76
  %3744 = bitcast float* %3743 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3744, align 16, !tbaa !9
  %3745 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 80
  %3746 = bitcast float* %3745 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3746, align 16, !tbaa !9
  %3747 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 84
  %3748 = bitcast float* %3747 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3748, align 16, !tbaa !9
  %3749 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 88
  %3750 = bitcast float* %3749 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3750, align 16, !tbaa !9
  %3751 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 92
  %3752 = bitcast float* %3751 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3752, align 16, !tbaa !9
  %3753 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 96
  %3754 = bitcast float* %3753 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3754, align 16, !tbaa !9
  %3755 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 100
  %3756 = bitcast float* %3755 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3756, align 16, !tbaa !9
  %3757 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 104
  %3758 = bitcast float* %3757 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3758, align 16, !tbaa !9
  %3759 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 108
  %3760 = bitcast float* %3759 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3760, align 16, !tbaa !9
  %3761 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 112
  %3762 = bitcast float* %3761 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3762, align 16, !tbaa !9
  %3763 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 116
  %3764 = bitcast float* %3763 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3764, align 16, !tbaa !9
  %3765 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 120
  %3766 = bitcast float* %3765 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3766, align 16, !tbaa !9
  %3767 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 124
  %3768 = bitcast float* %3767 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3768, align 16, !tbaa !9
  %3769 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 128
  %3770 = bitcast float* %3769 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3770, align 16, !tbaa !9
  %3771 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 132
  %3772 = bitcast float* %3771 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3772, align 16, !tbaa !9
  %3773 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 136
  %3774 = bitcast float* %3773 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3774, align 16, !tbaa !9
  %3775 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 140
  %3776 = bitcast float* %3775 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3776, align 16, !tbaa !9
  %3777 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 144
  %3778 = bitcast float* %3777 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3778, align 16, !tbaa !9
  %3779 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 148
  %3780 = bitcast float* %3779 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3780, align 16, !tbaa !9
  %3781 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 152
  %3782 = bitcast float* %3781 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3782, align 16, !tbaa !9
  %3783 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 156
  %3784 = bitcast float* %3783 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3784, align 16, !tbaa !9
  %3785 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 160
  %3786 = bitcast float* %3785 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3786, align 16, !tbaa !9
  %3787 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 164
  %3788 = bitcast float* %3787 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3788, align 16, !tbaa !9
  %3789 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 168
  %3790 = bitcast float* %3789 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3790, align 16, !tbaa !9
  %3791 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 172
  %3792 = bitcast float* %3791 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3792, align 16, !tbaa !9
  %3793 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 176
  %3794 = bitcast float* %3793 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3794, align 16, !tbaa !9
  %3795 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 180
  %3796 = bitcast float* %3795 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3796, align 16, !tbaa !9
  %3797 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 184
  %3798 = bitcast float* %3797 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3798, align 16, !tbaa !9
  %3799 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 188
  %3800 = bitcast float* %3799 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3800, align 16, !tbaa !9
  %3801 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 192
  %3802 = bitcast float* %3801 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3802, align 16, !tbaa !9
  %3803 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 196
  %3804 = bitcast float* %3803 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3804, align 16, !tbaa !9
  %3805 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 200
  %3806 = bitcast float* %3805 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3806, align 16, !tbaa !9
  %3807 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 204
  %3808 = bitcast float* %3807 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3808, align 16, !tbaa !9
  %3809 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 208
  %3810 = bitcast float* %3809 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3810, align 16, !tbaa !9
  %3811 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 212
  %3812 = bitcast float* %3811 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3812, align 16, !tbaa !9
  %3813 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 216
  %3814 = bitcast float* %3813 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3814, align 16, !tbaa !9
  %3815 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 220
  %3816 = bitcast float* %3815 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3816, align 16, !tbaa !9
  %3817 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 224
  %3818 = bitcast float* %3817 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3818, align 16, !tbaa !9
  %3819 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 228
  %3820 = bitcast float* %3819 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3820, align 16, !tbaa !9
  %3821 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 232
  %3822 = bitcast float* %3821 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3822, align 16, !tbaa !9
  %3823 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 236
  %3824 = bitcast float* %3823 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3824, align 16, !tbaa !9
  %3825 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 240
  %3826 = bitcast float* %3825 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3826, align 16, !tbaa !9
  %3827 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 244
  %3828 = bitcast float* %3827 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3828, align 16, !tbaa !9
  %3829 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 248
  %3830 = bitcast float* %3829 to <4 x float>*
  store <4 x float> %3702, <4 x float>* %3830, align 16, !tbaa !9
  %3831 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %3696, i64 252
  %3832 = bitcast float* %3831 to <4 x float>*
  store <4 x float> %3704, <4 x float>* %3832, align 16, !tbaa !9
  %3833 = icmp eq i64 %3697, 256
  br i1 %3833, label %3834, label %3695, !llvm.loop !23

3834:                                             ; preds = %3695, %3834
  %3835 = phi i64 [ %3836, %3834 ], [ 0, %3695 ]
  %3836 = add nuw nsw i64 %3835, 1
  %3837 = trunc i64 %3836 to i32
  %3838 = sitofp i32 %3837 to float
  %3839 = fdiv float 1.000000e+00, %3838
  %3840 = insertelement <4 x float> poison, float %3839, i32 0
  %3841 = shufflevector <4 x float> %3840, <4 x float> poison, <4 x i32> zeroinitializer
  %3842 = insertelement <4 x float> poison, float %3839, i32 0
  %3843 = shufflevector <4 x float> %3842, <4 x float> poison, <4 x i32> zeroinitializer
  %3844 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 0
  %3845 = bitcast float* %3844 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3845, align 16, !tbaa !9
  %3846 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 4
  %3847 = bitcast float* %3846 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3847, align 16, !tbaa !9
  %3848 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 8
  %3849 = bitcast float* %3848 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3849, align 16, !tbaa !9
  %3850 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 12
  %3851 = bitcast float* %3850 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3851, align 16, !tbaa !9
  %3852 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 16
  %3853 = bitcast float* %3852 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3853, align 16, !tbaa !9
  %3854 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 20
  %3855 = bitcast float* %3854 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3855, align 16, !tbaa !9
  %3856 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 24
  %3857 = bitcast float* %3856 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3857, align 16, !tbaa !9
  %3858 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 28
  %3859 = bitcast float* %3858 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3859, align 16, !tbaa !9
  %3860 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 32
  %3861 = bitcast float* %3860 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3861, align 16, !tbaa !9
  %3862 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 36
  %3863 = bitcast float* %3862 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3863, align 16, !tbaa !9
  %3864 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 40
  %3865 = bitcast float* %3864 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3865, align 16, !tbaa !9
  %3866 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 44
  %3867 = bitcast float* %3866 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3867, align 16, !tbaa !9
  %3868 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 48
  %3869 = bitcast float* %3868 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3869, align 16, !tbaa !9
  %3870 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 52
  %3871 = bitcast float* %3870 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3871, align 16, !tbaa !9
  %3872 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 56
  %3873 = bitcast float* %3872 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3873, align 16, !tbaa !9
  %3874 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 60
  %3875 = bitcast float* %3874 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3875, align 16, !tbaa !9
  %3876 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 64
  %3877 = bitcast float* %3876 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3877, align 16, !tbaa !9
  %3878 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 68
  %3879 = bitcast float* %3878 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3879, align 16, !tbaa !9
  %3880 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 72
  %3881 = bitcast float* %3880 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3881, align 16, !tbaa !9
  %3882 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 76
  %3883 = bitcast float* %3882 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3883, align 16, !tbaa !9
  %3884 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 80
  %3885 = bitcast float* %3884 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3885, align 16, !tbaa !9
  %3886 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 84
  %3887 = bitcast float* %3886 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3887, align 16, !tbaa !9
  %3888 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 88
  %3889 = bitcast float* %3888 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3889, align 16, !tbaa !9
  %3890 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 92
  %3891 = bitcast float* %3890 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3891, align 16, !tbaa !9
  %3892 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 96
  %3893 = bitcast float* %3892 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3893, align 16, !tbaa !9
  %3894 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 100
  %3895 = bitcast float* %3894 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3895, align 16, !tbaa !9
  %3896 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 104
  %3897 = bitcast float* %3896 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3897, align 16, !tbaa !9
  %3898 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 108
  %3899 = bitcast float* %3898 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3899, align 16, !tbaa !9
  %3900 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 112
  %3901 = bitcast float* %3900 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3901, align 16, !tbaa !9
  %3902 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 116
  %3903 = bitcast float* %3902 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3903, align 16, !tbaa !9
  %3904 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 120
  %3905 = bitcast float* %3904 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3905, align 16, !tbaa !9
  %3906 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 124
  %3907 = bitcast float* %3906 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3907, align 16, !tbaa !9
  %3908 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 128
  %3909 = bitcast float* %3908 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3909, align 16, !tbaa !9
  %3910 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 132
  %3911 = bitcast float* %3910 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3911, align 16, !tbaa !9
  %3912 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 136
  %3913 = bitcast float* %3912 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3913, align 16, !tbaa !9
  %3914 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 140
  %3915 = bitcast float* %3914 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3915, align 16, !tbaa !9
  %3916 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 144
  %3917 = bitcast float* %3916 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3917, align 16, !tbaa !9
  %3918 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 148
  %3919 = bitcast float* %3918 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3919, align 16, !tbaa !9
  %3920 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 152
  %3921 = bitcast float* %3920 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3921, align 16, !tbaa !9
  %3922 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 156
  %3923 = bitcast float* %3922 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3923, align 16, !tbaa !9
  %3924 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 160
  %3925 = bitcast float* %3924 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3925, align 16, !tbaa !9
  %3926 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 164
  %3927 = bitcast float* %3926 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3927, align 16, !tbaa !9
  %3928 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 168
  %3929 = bitcast float* %3928 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3929, align 16, !tbaa !9
  %3930 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 172
  %3931 = bitcast float* %3930 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3931, align 16, !tbaa !9
  %3932 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 176
  %3933 = bitcast float* %3932 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3933, align 16, !tbaa !9
  %3934 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 180
  %3935 = bitcast float* %3934 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3935, align 16, !tbaa !9
  %3936 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 184
  %3937 = bitcast float* %3936 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3937, align 16, !tbaa !9
  %3938 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 188
  %3939 = bitcast float* %3938 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3939, align 16, !tbaa !9
  %3940 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 192
  %3941 = bitcast float* %3940 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3941, align 16, !tbaa !9
  %3942 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 196
  %3943 = bitcast float* %3942 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3943, align 16, !tbaa !9
  %3944 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 200
  %3945 = bitcast float* %3944 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3945, align 16, !tbaa !9
  %3946 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 204
  %3947 = bitcast float* %3946 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3947, align 16, !tbaa !9
  %3948 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 208
  %3949 = bitcast float* %3948 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3949, align 16, !tbaa !9
  %3950 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 212
  %3951 = bitcast float* %3950 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3951, align 16, !tbaa !9
  %3952 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 216
  %3953 = bitcast float* %3952 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3953, align 16, !tbaa !9
  %3954 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 220
  %3955 = bitcast float* %3954 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3955, align 16, !tbaa !9
  %3956 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 224
  %3957 = bitcast float* %3956 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3957, align 16, !tbaa !9
  %3958 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 228
  %3959 = bitcast float* %3958 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3959, align 16, !tbaa !9
  %3960 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 232
  %3961 = bitcast float* %3960 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3961, align 16, !tbaa !9
  %3962 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 236
  %3963 = bitcast float* %3962 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3963, align 16, !tbaa !9
  %3964 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 240
  %3965 = bitcast float* %3964 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3965, align 16, !tbaa !9
  %3966 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 244
  %3967 = bitcast float* %3966 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3967, align 16, !tbaa !9
  %3968 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 248
  %3969 = bitcast float* %3968 to <4 x float>*
  store <4 x float> %3841, <4 x float>* %3969, align 16, !tbaa !9
  %3970 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %3835, i64 252
  %3971 = bitcast float* %3970 to <4 x float>*
  store <4 x float> %3843, <4 x float>* %3971, align 16, !tbaa !9
  %3972 = icmp eq i64 %3836, 256
  br i1 %3972, label %6516, label %3834, !llvm.loop !23

3973:                                             ; preds = %3686
  %3974 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0))
  %3975 = icmp eq i32 %3974, 0
  br i1 %3975, label %3976, label %3977

3976:                                             ; preds = %3973
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(262144) bitcast ([256 x [256 x float]]* @aa to i8*), i8 0, i64 262144, i1 false)
  br label %6516

3977:                                             ; preds = %3973
  %3978 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0))
  %3979 = icmp eq i32 %3978, 0
  br i1 %3979, label %3980, label %3981

3980:                                             ; preds = %3977
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(262144) bitcast ([256 x [256 x float]]* @aa to i8*), i8 0, i64 262144, i1 false)
  br label %6516

3981:                                             ; preds = %3977
  %3982 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0))
  %3983 = icmp eq i32 %3982, 0
  br i1 %3983, label %3984, label %4002

3984:                                             ; preds = %3981, %3984
  %3985 = phi i64 [ %3999, %3984 ], [ 0, %3981 ]
  %3986 = phi <4 x i64> [ %4000, %3984 ], [ <i64 0, i64 1, i64 2, i64 3>, %3981 ]
  %3987 = trunc <4 x i64> %3986 to <4 x i32>
  %3988 = add <4 x i32> %3987, <i32 1, i32 1, i32 1, i32 1>
  %3989 = trunc <4 x i64> %3986 to <4 x i32>
  %3990 = add <4 x i32> %3989, <i32 5, i32 5, i32 5, i32 5>
  %3991 = sitofp <4 x i32> %3988 to <4 x float>
  %3992 = sitofp <4 x i32> %3990 to <4 x float>
  %3993 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3991
  %3994 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3992
  %3995 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3985
  %3996 = bitcast float* %3995 to <4 x float>*
  store <4 x float> %3993, <4 x float>* %3996, align 16, !tbaa !9
  %3997 = getelementptr inbounds float, float* %3995, i64 4
  %3998 = bitcast float* %3997 to <4 x float>*
  store <4 x float> %3994, <4 x float>* %3998, align 16, !tbaa !9
  %3999 = add nuw i64 %3985, 8
  %4000 = add <4 x i64> %3986, <i64 8, i64 8, i64 8, i64 8>
  %4001 = icmp eq i64 %3999, 32000
  br i1 %4001, label %6516, label %3984, !llvm.loop !119

4002:                                             ; preds = %3981
  %4003 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0))
  %4004 = icmp eq i32 %4003, 0
  br i1 %4004, label %4005, label %4006

4005:                                             ; preds = %4002
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.372 to i8*), i64 128000) #19
  br label %6516

4006:                                             ; preds = %4002
  %4007 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0))
  %4008 = icmp eq i32 %4007, 0
  br i1 %4008, label %4009, label %4045

4009:                                             ; preds = %4006, %4009
  %4010 = phi i64 [ %4024, %4009 ], [ 0, %4006 ]
  %4011 = phi <4 x i64> [ %4025, %4009 ], [ <i64 0, i64 1, i64 2, i64 3>, %4006 ]
  %4012 = trunc <4 x i64> %4011 to <4 x i32>
  %4013 = add <4 x i32> %4012, <i32 1, i32 1, i32 1, i32 1>
  %4014 = trunc <4 x i64> %4011 to <4 x i32>
  %4015 = add <4 x i32> %4014, <i32 5, i32 5, i32 5, i32 5>
  %4016 = sitofp <4 x i32> %4013 to <4 x float>
  %4017 = sitofp <4 x i32> %4015 to <4 x float>
  %4018 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4016
  %4019 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4017
  %4020 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4010
  %4021 = bitcast float* %4020 to <4 x float>*
  store <4 x float> %4018, <4 x float>* %4021, align 16, !tbaa !9
  %4022 = getelementptr inbounds float, float* %4020, i64 4
  %4023 = bitcast float* %4022 to <4 x float>*
  store <4 x float> %4019, <4 x float>* %4023, align 16, !tbaa !9
  %4024 = add nuw i64 %4010, 8
  %4025 = add <4 x i64> %4011, <i64 8, i64 8, i64 8, i64 8>
  %4026 = icmp eq i64 %4024, 32000
  br i1 %4026, label %4027, label %4009, !llvm.loop !120

4027:                                             ; preds = %4009, %4027
  %4028 = phi i64 [ %4042, %4027 ], [ 0, %4009 ]
  %4029 = phi <4 x i64> [ %4043, %4027 ], [ <i64 0, i64 1, i64 2, i64 3>, %4009 ]
  %4030 = trunc <4 x i64> %4029 to <4 x i32>
  %4031 = add <4 x i32> %4030, <i32 1, i32 1, i32 1, i32 1>
  %4032 = trunc <4 x i64> %4029 to <4 x i32>
  %4033 = add <4 x i32> %4032, <i32 5, i32 5, i32 5, i32 5>
  %4034 = sitofp <4 x i32> %4031 to <4 x float>
  %4035 = sitofp <4 x i32> %4033 to <4 x float>
  %4036 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4034
  %4037 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4035
  %4038 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4028
  %4039 = bitcast float* %4038 to <4 x float>*
  store <4 x float> %4036, <4 x float>* %4039, align 16, !tbaa !9
  %4040 = getelementptr inbounds float, float* %4038, i64 4
  %4041 = bitcast float* %4040 to <4 x float>*
  store <4 x float> %4037, <4 x float>* %4041, align 16, !tbaa !9
  %4042 = add nuw i64 %4028, 8
  %4043 = add <4 x i64> %4029, <i64 8, i64 8, i64 8, i64 8>
  %4044 = icmp eq i64 %4042, 32000
  br i1 %4044, label %6516, label %4027, !llvm.loop !121

4045:                                             ; preds = %4006
  %4046 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0))
  %4047 = icmp eq i32 %4046, 0
  br i1 %4047, label %4048, label %4066

4048:                                             ; preds = %4045, %4048
  %4049 = phi i64 [ %4063, %4048 ], [ 0, %4045 ]
  %4050 = phi <4 x i64> [ %4064, %4048 ], [ <i64 0, i64 1, i64 2, i64 3>, %4045 ]
  %4051 = trunc <4 x i64> %4050 to <4 x i32>
  %4052 = add <4 x i32> %4051, <i32 1, i32 1, i32 1, i32 1>
  %4053 = trunc <4 x i64> %4050 to <4 x i32>
  %4054 = add <4 x i32> %4053, <i32 5, i32 5, i32 5, i32 5>
  %4055 = sitofp <4 x i32> %4052 to <4 x float>
  %4056 = sitofp <4 x i32> %4054 to <4 x float>
  %4057 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4055
  %4058 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4056
  %4059 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4049
  %4060 = bitcast float* %4059 to <4 x float>*
  store <4 x float> %4057, <4 x float>* %4060, align 16, !tbaa !9
  %4061 = getelementptr inbounds float, float* %4059, i64 4
  %4062 = bitcast float* %4061 to <4 x float>*
  store <4 x float> %4058, <4 x float>* %4062, align 16, !tbaa !9
  %4063 = add nuw i64 %4049, 8
  %4064 = add <4 x i64> %4050, <i64 8, i64 8, i64 8, i64 8>
  %4065 = icmp eq i64 %4063, 32000
  br i1 %4065, label %6516, label %4048, !llvm.loop !122

4066:                                             ; preds = %4045
  %4067 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0))
  %4068 = icmp eq i32 %4067, 0
  br i1 %4068, label %4069, label %4087

4069:                                             ; preds = %4066, %4069
  %4070 = phi i64 [ %4084, %4069 ], [ 0, %4066 ]
  %4071 = phi <4 x i64> [ %4085, %4069 ], [ <i64 0, i64 1, i64 2, i64 3>, %4066 ]
  %4072 = trunc <4 x i64> %4071 to <4 x i32>
  %4073 = add <4 x i32> %4072, <i32 1, i32 1, i32 1, i32 1>
  %4074 = trunc <4 x i64> %4071 to <4 x i32>
  %4075 = add <4 x i32> %4074, <i32 5, i32 5, i32 5, i32 5>
  %4076 = sitofp <4 x i32> %4073 to <4 x float>
  %4077 = sitofp <4 x i32> %4075 to <4 x float>
  %4078 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4076
  %4079 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4077
  %4080 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4070
  %4081 = bitcast float* %4080 to <4 x float>*
  store <4 x float> %4078, <4 x float>* %4081, align 16, !tbaa !9
  %4082 = getelementptr inbounds float, float* %4080, i64 4
  %4083 = bitcast float* %4082 to <4 x float>*
  store <4 x float> %4079, <4 x float>* %4083, align 16, !tbaa !9
  %4084 = add nuw i64 %4070, 8
  %4085 = add <4 x i64> %4071, <i64 8, i64 8, i64 8, i64 8>
  %4086 = icmp eq i64 %4084, 32000
  br i1 %4086, label %6516, label %4069, !llvm.loop !123

4087:                                             ; preds = %4066
  %4088 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0))
  %4089 = icmp eq i32 %4088, 0
  br i1 %4089, label %4090, label %4108

4090:                                             ; preds = %4087, %4090
  %4091 = phi i64 [ %4105, %4090 ], [ 0, %4087 ]
  %4092 = phi <4 x i64> [ %4106, %4090 ], [ <i64 0, i64 1, i64 2, i64 3>, %4087 ]
  %4093 = trunc <4 x i64> %4092 to <4 x i32>
  %4094 = add <4 x i32> %4093, <i32 1, i32 1, i32 1, i32 1>
  %4095 = trunc <4 x i64> %4092 to <4 x i32>
  %4096 = add <4 x i32> %4095, <i32 5, i32 5, i32 5, i32 5>
  %4097 = sitofp <4 x i32> %4094 to <4 x float>
  %4098 = sitofp <4 x i32> %4096 to <4 x float>
  %4099 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4097
  %4100 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4098
  %4101 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4091
  %4102 = bitcast float* %4101 to <4 x float>*
  store <4 x float> %4099, <4 x float>* %4102, align 16, !tbaa !9
  %4103 = getelementptr inbounds float, float* %4101, i64 4
  %4104 = bitcast float* %4103 to <4 x float>*
  store <4 x float> %4100, <4 x float>* %4104, align 16, !tbaa !9
  %4105 = add nuw i64 %4091, 8
  %4106 = add <4 x i64> %4092, <i64 8, i64 8, i64 8, i64 8>
  %4107 = icmp eq i64 %4105, 32000
  br i1 %4107, label %6516, label %4090, !llvm.loop !124

4108:                                             ; preds = %4087
  %4109 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0))
  %4110 = icmp eq i32 %4109, 0
  br i1 %4110, label %6516, label %4111

4111:                                             ; preds = %4108
  %4112 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0))
  %4113 = icmp eq i32 %4112, 0
  br i1 %4113, label %4114, label %4133

4114:                                             ; preds = %4111, %4114
  %4115 = phi i64 [ %4129, %4114 ], [ 0, %4111 ]
  %4116 = phi <4 x i64> [ %4130, %4114 ], [ <i64 0, i64 1, i64 2, i64 3>, %4111 ]
  %4117 = trunc <4 x i64> %4116 to <4 x i32>
  %4118 = add <4 x i32> %4117, <i32 1, i32 1, i32 1, i32 1>
  %4119 = trunc <4 x i64> %4116 to <4 x i32>
  %4120 = add <4 x i32> %4119, <i32 5, i32 5, i32 5, i32 5>
  %4121 = sitofp <4 x i32> %4118 to <4 x float>
  %4122 = sitofp <4 x i32> %4120 to <4 x float>
  %4123 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4121
  %4124 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4122
  %4125 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4115
  %4126 = bitcast float* %4125 to <4 x float>*
  store <4 x float> %4123, <4 x float>* %4126, align 16, !tbaa !9
  %4127 = getelementptr inbounds float, float* %4125, i64 4
  %4128 = bitcast float* %4127 to <4 x float>*
  store <4 x float> %4124, <4 x float>* %4128, align 16, !tbaa !9
  %4129 = add nuw i64 %4115, 8
  %4130 = add <4 x i64> %4116, <i64 8, i64 8, i64 8, i64 8>
  %4131 = icmp eq i64 %4129, 32000
  br i1 %4131, label %4132, label %4114, !llvm.loop !125

4132:                                             ; preds = %4114
  store float -2.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  br label %6516

4133:                                             ; preds = %4111
  %4134 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %4135 = icmp eq i32 %4134, 0
  br i1 %4135, label %4136, label %4191

4136:                                             ; preds = %4133
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %4137

4137:                                             ; preds = %4137, %4136
  %4138 = phi i64 [ 0, %4136 ], [ %4152, %4137 ]
  %4139 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %4136 ], [ %4153, %4137 ]
  %4140 = trunc <4 x i64> %4139 to <4 x i32>
  %4141 = add <4 x i32> %4140, <i32 1, i32 1, i32 1, i32 1>
  %4142 = trunc <4 x i64> %4139 to <4 x i32>
  %4143 = add <4 x i32> %4142, <i32 5, i32 5, i32 5, i32 5>
  %4144 = sitofp <4 x i32> %4141 to <4 x float>
  %4145 = sitofp <4 x i32> %4143 to <4 x float>
  %4146 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4144
  %4147 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4145
  %4148 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4138
  %4149 = bitcast float* %4148 to <4 x float>*
  store <4 x float> %4146, <4 x float>* %4149, align 16, !tbaa !9
  %4150 = getelementptr inbounds float, float* %4148, i64 4
  %4151 = bitcast float* %4150 to <4 x float>*
  store <4 x float> %4147, <4 x float>* %4151, align 16, !tbaa !9
  %4152 = add nuw i64 %4138, 8
  %4153 = add <4 x i64> %4139, <i64 8, i64 8, i64 8, i64 8>
  %4154 = icmp eq i64 %4152, 32000
  br i1 %4154, label %4155, label %4137, !llvm.loop !126

4155:                                             ; preds = %4137, %4155
  %4156 = phi i64 [ %4170, %4155 ], [ 0, %4137 ]
  %4157 = phi <4 x i64> [ %4171, %4155 ], [ <i64 0, i64 1, i64 2, i64 3>, %4137 ]
  %4158 = trunc <4 x i64> %4157 to <4 x i32>
  %4159 = add <4 x i32> %4158, <i32 1, i32 1, i32 1, i32 1>
  %4160 = trunc <4 x i64> %4157 to <4 x i32>
  %4161 = add <4 x i32> %4160, <i32 5, i32 5, i32 5, i32 5>
  %4162 = sitofp <4 x i32> %4159 to <4 x float>
  %4163 = sitofp <4 x i32> %4161 to <4 x float>
  %4164 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4162
  %4165 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4163
  %4166 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %4156
  %4167 = bitcast float* %4166 to <4 x float>*
  store <4 x float> %4164, <4 x float>* %4167, align 16, !tbaa !9
  %4168 = getelementptr inbounds float, float* %4166, i64 4
  %4169 = bitcast float* %4168 to <4 x float>*
  store <4 x float> %4165, <4 x float>* %4169, align 16, !tbaa !9
  %4170 = add nuw i64 %4156, 8
  %4171 = add <4 x i64> %4157, <i64 8, i64 8, i64 8, i64 8>
  %4172 = icmp eq i64 %4170, 32000
  br i1 %4172, label %4173, label %4155, !llvm.loop !127

4173:                                             ; preds = %4155, %4173
  %4174 = phi i64 [ %4188, %4173 ], [ 0, %4155 ]
  %4175 = phi <4 x i64> [ %4189, %4173 ], [ <i64 0, i64 1, i64 2, i64 3>, %4155 ]
  %4176 = trunc <4 x i64> %4175 to <4 x i32>
  %4177 = add <4 x i32> %4176, <i32 1, i32 1, i32 1, i32 1>
  %4178 = trunc <4 x i64> %4175 to <4 x i32>
  %4179 = add <4 x i32> %4178, <i32 5, i32 5, i32 5, i32 5>
  %4180 = sitofp <4 x i32> %4177 to <4 x float>
  %4181 = sitofp <4 x i32> %4179 to <4 x float>
  %4182 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4180
  %4183 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4181
  %4184 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %4174
  %4185 = bitcast float* %4184 to <4 x float>*
  store <4 x float> %4182, <4 x float>* %4185, align 16, !tbaa !9
  %4186 = getelementptr inbounds float, float* %4184, i64 4
  %4187 = bitcast float* %4186 to <4 x float>*
  store <4 x float> %4183, <4 x float>* %4187, align 16, !tbaa !9
  %4188 = add nuw i64 %4174, 8
  %4189 = add <4 x i64> %4175, <i64 8, i64 8, i64 8, i64 8>
  %4190 = icmp eq i64 %4188, 32000
  br i1 %4190, label %6516, label %4173, !llvm.loop !128

4191:                                             ; preds = %4133
  %4192 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0))
  %4193 = icmp eq i32 %4192, 0
  br i1 %4193, label %4194, label %4334

4194:                                             ; preds = %4191, %4194
  %4195 = phi i64 [ %4196, %4194 ], [ 0, %4191 ]
  %4196 = add nuw nsw i64 %4195, 1
  %4197 = trunc i64 %4196 to i32
  %4198 = sitofp i32 %4197 to float
  %4199 = fdiv float 1.000000e+00, %4198
  %4200 = insertelement <4 x float> poison, float %4199, i32 0
  %4201 = shufflevector <4 x float> %4200, <4 x float> poison, <4 x i32> zeroinitializer
  %4202 = insertelement <4 x float> poison, float %4199, i32 0
  %4203 = shufflevector <4 x float> %4202, <4 x float> poison, <4 x i32> zeroinitializer
  %4204 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 0
  %4205 = bitcast float* %4204 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4205, align 16, !tbaa !9
  %4206 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 4
  %4207 = bitcast float* %4206 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4207, align 16, !tbaa !9
  %4208 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 8
  %4209 = bitcast float* %4208 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4209, align 16, !tbaa !9
  %4210 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 12
  %4211 = bitcast float* %4210 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4211, align 16, !tbaa !9
  %4212 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 16
  %4213 = bitcast float* %4212 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4213, align 16, !tbaa !9
  %4214 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 20
  %4215 = bitcast float* %4214 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4215, align 16, !tbaa !9
  %4216 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 24
  %4217 = bitcast float* %4216 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4217, align 16, !tbaa !9
  %4218 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 28
  %4219 = bitcast float* %4218 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4219, align 16, !tbaa !9
  %4220 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 32
  %4221 = bitcast float* %4220 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4221, align 16, !tbaa !9
  %4222 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 36
  %4223 = bitcast float* %4222 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4223, align 16, !tbaa !9
  %4224 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 40
  %4225 = bitcast float* %4224 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4225, align 16, !tbaa !9
  %4226 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 44
  %4227 = bitcast float* %4226 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4227, align 16, !tbaa !9
  %4228 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 48
  %4229 = bitcast float* %4228 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4229, align 16, !tbaa !9
  %4230 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 52
  %4231 = bitcast float* %4230 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4231, align 16, !tbaa !9
  %4232 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 56
  %4233 = bitcast float* %4232 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4233, align 16, !tbaa !9
  %4234 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 60
  %4235 = bitcast float* %4234 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4235, align 16, !tbaa !9
  %4236 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 64
  %4237 = bitcast float* %4236 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4237, align 16, !tbaa !9
  %4238 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 68
  %4239 = bitcast float* %4238 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4239, align 16, !tbaa !9
  %4240 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 72
  %4241 = bitcast float* %4240 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4241, align 16, !tbaa !9
  %4242 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 76
  %4243 = bitcast float* %4242 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4243, align 16, !tbaa !9
  %4244 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 80
  %4245 = bitcast float* %4244 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4245, align 16, !tbaa !9
  %4246 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 84
  %4247 = bitcast float* %4246 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4247, align 16, !tbaa !9
  %4248 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 88
  %4249 = bitcast float* %4248 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4249, align 16, !tbaa !9
  %4250 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 92
  %4251 = bitcast float* %4250 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4251, align 16, !tbaa !9
  %4252 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 96
  %4253 = bitcast float* %4252 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4253, align 16, !tbaa !9
  %4254 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 100
  %4255 = bitcast float* %4254 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4255, align 16, !tbaa !9
  %4256 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 104
  %4257 = bitcast float* %4256 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4257, align 16, !tbaa !9
  %4258 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 108
  %4259 = bitcast float* %4258 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4259, align 16, !tbaa !9
  %4260 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 112
  %4261 = bitcast float* %4260 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4261, align 16, !tbaa !9
  %4262 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 116
  %4263 = bitcast float* %4262 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4263, align 16, !tbaa !9
  %4264 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 120
  %4265 = bitcast float* %4264 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4265, align 16, !tbaa !9
  %4266 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 124
  %4267 = bitcast float* %4266 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4267, align 16, !tbaa !9
  %4268 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 128
  %4269 = bitcast float* %4268 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4269, align 16, !tbaa !9
  %4270 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 132
  %4271 = bitcast float* %4270 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4271, align 16, !tbaa !9
  %4272 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 136
  %4273 = bitcast float* %4272 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4273, align 16, !tbaa !9
  %4274 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 140
  %4275 = bitcast float* %4274 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4275, align 16, !tbaa !9
  %4276 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 144
  %4277 = bitcast float* %4276 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4277, align 16, !tbaa !9
  %4278 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 148
  %4279 = bitcast float* %4278 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4279, align 16, !tbaa !9
  %4280 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 152
  %4281 = bitcast float* %4280 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4281, align 16, !tbaa !9
  %4282 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 156
  %4283 = bitcast float* %4282 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4283, align 16, !tbaa !9
  %4284 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 160
  %4285 = bitcast float* %4284 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4285, align 16, !tbaa !9
  %4286 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 164
  %4287 = bitcast float* %4286 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4287, align 16, !tbaa !9
  %4288 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 168
  %4289 = bitcast float* %4288 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4289, align 16, !tbaa !9
  %4290 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 172
  %4291 = bitcast float* %4290 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4291, align 16, !tbaa !9
  %4292 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 176
  %4293 = bitcast float* %4292 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4293, align 16, !tbaa !9
  %4294 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 180
  %4295 = bitcast float* %4294 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4295, align 16, !tbaa !9
  %4296 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 184
  %4297 = bitcast float* %4296 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4297, align 16, !tbaa !9
  %4298 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 188
  %4299 = bitcast float* %4298 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4299, align 16, !tbaa !9
  %4300 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 192
  %4301 = bitcast float* %4300 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4301, align 16, !tbaa !9
  %4302 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 196
  %4303 = bitcast float* %4302 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4303, align 16, !tbaa !9
  %4304 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 200
  %4305 = bitcast float* %4304 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4305, align 16, !tbaa !9
  %4306 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 204
  %4307 = bitcast float* %4306 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4307, align 16, !tbaa !9
  %4308 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 208
  %4309 = bitcast float* %4308 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4309, align 16, !tbaa !9
  %4310 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 212
  %4311 = bitcast float* %4310 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4311, align 16, !tbaa !9
  %4312 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 216
  %4313 = bitcast float* %4312 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4313, align 16, !tbaa !9
  %4314 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 220
  %4315 = bitcast float* %4314 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4315, align 16, !tbaa !9
  %4316 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 224
  %4317 = bitcast float* %4316 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4317, align 16, !tbaa !9
  %4318 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 228
  %4319 = bitcast float* %4318 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4319, align 16, !tbaa !9
  %4320 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 232
  %4321 = bitcast float* %4320 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4321, align 16, !tbaa !9
  %4322 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 236
  %4323 = bitcast float* %4322 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4323, align 16, !tbaa !9
  %4324 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 240
  %4325 = bitcast float* %4324 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4325, align 16, !tbaa !9
  %4326 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 244
  %4327 = bitcast float* %4326 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4327, align 16, !tbaa !9
  %4328 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 248
  %4329 = bitcast float* %4328 to <4 x float>*
  store <4 x float> %4201, <4 x float>* %4329, align 16, !tbaa !9
  %4330 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4195, i64 252
  %4331 = bitcast float* %4330 to <4 x float>*
  store <4 x float> %4203, <4 x float>* %4331, align 16, !tbaa !9
  %4332 = icmp eq i64 %4196, 256
  br i1 %4332, label %4333, label %4194, !llvm.loop !23

4333:                                             ; preds = %4194
  store float 2.000000e+00, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 255, i64 255), align 4, !tbaa !9
  br label %6516

4334:                                             ; preds = %4191
  %4335 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0))
  %4336 = icmp eq i32 %4335, 0
  br i1 %4336, label %4337, label %4355

4337:                                             ; preds = %4334, %4337
  %4338 = phi i64 [ %4352, %4337 ], [ 0, %4334 ]
  %4339 = phi <4 x i64> [ %4353, %4337 ], [ <i64 0, i64 1, i64 2, i64 3>, %4334 ]
  %4340 = trunc <4 x i64> %4339 to <4 x i32>
  %4341 = add <4 x i32> %4340, <i32 1, i32 1, i32 1, i32 1>
  %4342 = trunc <4 x i64> %4339 to <4 x i32>
  %4343 = add <4 x i32> %4342, <i32 5, i32 5, i32 5, i32 5>
  %4344 = sitofp <4 x i32> %4341 to <4 x float>
  %4345 = sitofp <4 x i32> %4343 to <4 x float>
  %4346 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4344
  %4347 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4345
  %4348 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4338
  %4349 = bitcast float* %4348 to <4 x float>*
  store <4 x float> %4346, <4 x float>* %4349, align 16, !tbaa !9
  %4350 = getelementptr inbounds float, float* %4348, i64 4
  %4351 = bitcast float* %4350 to <4 x float>*
  store <4 x float> %4347, <4 x float>* %4351, align 16, !tbaa !9
  %4352 = add nuw i64 %4338, 8
  %4353 = add <4 x i64> %4339, <i64 8, i64 8, i64 8, i64 8>
  %4354 = icmp eq i64 %4352, 32000
  br i1 %4354, label %6516, label %4337, !llvm.loop !129

4355:                                             ; preds = %4334
  %4356 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0))
  %4357 = icmp eq i32 %4356, 0
  br i1 %4357, label %4358, label %4372

4358:                                             ; preds = %4355, %4358
  %4359 = phi i64 [ %4368, %4358 ], [ 0, %4355 ]
  %4360 = phi <4 x i64> [ %4369, %4358 ], [ <i64 0, i64 1, i64 2, i64 3>, %4355 ]
  %4361 = add nuw nsw <4 x i64> %4360, <i64 1, i64 1, i64 1, i64 1>
  %4362 = mul nuw nsw <4 x i64> %4361, %4361
  %4363 = trunc <4 x i64> %4362 to <4 x i32>
  %4364 = sitofp <4 x i32> %4363 to <4 x float>
  %4365 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4364
  %4366 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4359
  %4367 = bitcast float* %4366 to <4 x float>*
  store <4 x float> %4365, <4 x float>* %4367, align 16, !tbaa !9
  %4368 = add nuw i64 %4359, 4
  %4369 = add <4 x i64> %4360, <i64 4, i64 4, i64 4, i64 4>
  %4370 = icmp eq i64 %4368, 32000
  br i1 %4370, label %4371, label %4358, !llvm.loop !130

4371:                                             ; preds = %4358
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %6516

4372:                                             ; preds = %4355
  %4373 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0))
  %4374 = icmp eq i32 %4373, 0
  br i1 %4374, label %4375, label %4394

4375:                                             ; preds = %4372, %4375
  %4376 = phi i64 [ %4390, %4375 ], [ 0, %4372 ]
  %4377 = phi <4 x i64> [ %4391, %4375 ], [ <i64 0, i64 1, i64 2, i64 3>, %4372 ]
  %4378 = trunc <4 x i64> %4377 to <4 x i32>
  %4379 = add <4 x i32> %4378, <i32 1, i32 1, i32 1, i32 1>
  %4380 = trunc <4 x i64> %4377 to <4 x i32>
  %4381 = add <4 x i32> %4380, <i32 5, i32 5, i32 5, i32 5>
  %4382 = sitofp <4 x i32> %4379 to <4 x float>
  %4383 = sitofp <4 x i32> %4381 to <4 x float>
  %4384 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4382
  %4385 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4383
  %4386 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4376
  %4387 = bitcast float* %4386 to <4 x float>*
  store <4 x float> %4384, <4 x float>* %4387, align 16, !tbaa !9
  %4388 = getelementptr inbounds float, float* %4386, i64 4
  %4389 = bitcast float* %4388 to <4 x float>*
  store <4 x float> %4385, <4 x float>* %4389, align 16, !tbaa !9
  %4390 = add nuw i64 %4376, 8
  %4391 = add <4 x i64> %4377, <i64 8, i64 8, i64 8, i64 8>
  %4392 = icmp eq i64 %4390, 32000
  br i1 %4392, label %4393, label %4375, !llvm.loop !131

4393:                                             ; preds = %4375
  store float -2.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  br label %6516

4394:                                             ; preds = %4372
  %4395 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0))
  %4396 = icmp eq i32 %4395, 0
  br i1 %4396, label %4397, label %4398

4397:                                             ; preds = %4394
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  br label %6516

4398:                                             ; preds = %4394
  %4399 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0))
  %4400 = icmp eq i32 %4399, 0
  br i1 %4400, label %4401, label %4402

4401:                                             ; preds = %4398
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i8 0, i64 128000, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @c to i8*), i8 0, i64 128000, i1 false)
  br label %6516

4402:                                             ; preds = %4398
  %4403 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i64 0, i64 0))
  %4404 = icmp eq i32 %4403, 0
  br i1 %4404, label %4405, label %4460

4405:                                             ; preds = %4402
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %4406

4406:                                             ; preds = %4406, %4405
  %4407 = phi i64 [ 0, %4405 ], [ %4421, %4406 ]
  %4408 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %4405 ], [ %4422, %4406 ]
  %4409 = trunc <4 x i64> %4408 to <4 x i32>
  %4410 = add <4 x i32> %4409, <i32 1, i32 1, i32 1, i32 1>
  %4411 = trunc <4 x i64> %4408 to <4 x i32>
  %4412 = add <4 x i32> %4411, <i32 5, i32 5, i32 5, i32 5>
  %4413 = sitofp <4 x i32> %4410 to <4 x float>
  %4414 = sitofp <4 x i32> %4412 to <4 x float>
  %4415 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4413
  %4416 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4414
  %4417 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4407
  %4418 = bitcast float* %4417 to <4 x float>*
  store <4 x float> %4415, <4 x float>* %4418, align 16, !tbaa !9
  %4419 = getelementptr inbounds float, float* %4417, i64 4
  %4420 = bitcast float* %4419 to <4 x float>*
  store <4 x float> %4416, <4 x float>* %4420, align 16, !tbaa !9
  %4421 = add nuw i64 %4407, 8
  %4422 = add <4 x i64> %4408, <i64 8, i64 8, i64 8, i64 8>
  %4423 = icmp eq i64 %4421, 32000
  br i1 %4423, label %4424, label %4406, !llvm.loop !132

4424:                                             ; preds = %4406, %4424
  %4425 = phi i64 [ %4439, %4424 ], [ 0, %4406 ]
  %4426 = phi <4 x i64> [ %4440, %4424 ], [ <i64 0, i64 1, i64 2, i64 3>, %4406 ]
  %4427 = trunc <4 x i64> %4426 to <4 x i32>
  %4428 = add <4 x i32> %4427, <i32 1, i32 1, i32 1, i32 1>
  %4429 = trunc <4 x i64> %4426 to <4 x i32>
  %4430 = add <4 x i32> %4429, <i32 5, i32 5, i32 5, i32 5>
  %4431 = sitofp <4 x i32> %4428 to <4 x float>
  %4432 = sitofp <4 x i32> %4430 to <4 x float>
  %4433 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4431
  %4434 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4432
  %4435 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %4425
  %4436 = bitcast float* %4435 to <4 x float>*
  store <4 x float> %4433, <4 x float>* %4436, align 16, !tbaa !9
  %4437 = getelementptr inbounds float, float* %4435, i64 4
  %4438 = bitcast float* %4437 to <4 x float>*
  store <4 x float> %4434, <4 x float>* %4438, align 16, !tbaa !9
  %4439 = add nuw i64 %4425, 8
  %4440 = add <4 x i64> %4426, <i64 8, i64 8, i64 8, i64 8>
  %4441 = icmp eq i64 %4439, 32000
  br i1 %4441, label %4442, label %4424, !llvm.loop !133

4442:                                             ; preds = %4424, %4442
  %4443 = phi i64 [ %4457, %4442 ], [ 0, %4424 ]
  %4444 = phi <4 x i64> [ %4458, %4442 ], [ <i64 0, i64 1, i64 2, i64 3>, %4424 ]
  %4445 = trunc <4 x i64> %4444 to <4 x i32>
  %4446 = add <4 x i32> %4445, <i32 1, i32 1, i32 1, i32 1>
  %4447 = trunc <4 x i64> %4444 to <4 x i32>
  %4448 = add <4 x i32> %4447, <i32 5, i32 5, i32 5, i32 5>
  %4449 = sitofp <4 x i32> %4446 to <4 x float>
  %4450 = sitofp <4 x i32> %4448 to <4 x float>
  %4451 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4449
  %4452 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4450
  %4453 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %4443
  %4454 = bitcast float* %4453 to <4 x float>*
  store <4 x float> %4451, <4 x float>* %4454, align 16, !tbaa !9
  %4455 = getelementptr inbounds float, float* %4453, i64 4
  %4456 = bitcast float* %4455 to <4 x float>*
  store <4 x float> %4452, <4 x float>* %4456, align 16, !tbaa !9
  %4457 = add nuw i64 %4443, 8
  %4458 = add <4 x i64> %4444, <i64 8, i64 8, i64 8, i64 8>
  %4459 = icmp eq i64 %4457, 32000
  br i1 %4459, label %6516, label %4442, !llvm.loop !134

4460:                                             ; preds = %4402
  %4461 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0))
  %4462 = icmp eq i32 %4461, 0
  br i1 %4462, label %4463, label %4482

4463:                                             ; preds = %4460, %4463
  %4464 = phi i64 [ %4478, %4463 ], [ 0, %4460 ]
  %4465 = phi <4 x i64> [ %4479, %4463 ], [ <i64 0, i64 1, i64 2, i64 3>, %4460 ]
  %4466 = trunc <4 x i64> %4465 to <4 x i32>
  %4467 = add <4 x i32> %4466, <i32 1, i32 1, i32 1, i32 1>
  %4468 = trunc <4 x i64> %4465 to <4 x i32>
  %4469 = add <4 x i32> %4468, <i32 5, i32 5, i32 5, i32 5>
  %4470 = sitofp <4 x i32> %4467 to <4 x float>
  %4471 = sitofp <4 x i32> %4469 to <4 x float>
  %4472 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4470
  %4473 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4471
  %4474 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4464
  %4475 = bitcast float* %4474 to <4 x float>*
  store <4 x float> %4472, <4 x float>* %4475, align 16, !tbaa !9
  %4476 = getelementptr inbounds float, float* %4474, i64 4
  %4477 = bitcast float* %4476 to <4 x float>*
  store <4 x float> %4473, <4 x float>* %4477, align 16, !tbaa !9
  %4478 = add nuw i64 %4464, 8
  %4479 = add <4 x i64> %4465, <i64 8, i64 8, i64 8, i64 8>
  %4480 = icmp eq i64 %4478, 32000
  br i1 %4480, label %4481, label %4463, !llvm.loop !135

4481:                                             ; preds = %4463
  store float -1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  br label %6516

4482:                                             ; preds = %4460
  %4483 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0))
  %4484 = icmp eq i32 %4483, 0
  br i1 %4484, label %4485, label %4499

4485:                                             ; preds = %4482, %4485
  %4486 = phi i64 [ %4495, %4485 ], [ 0, %4482 ]
  %4487 = phi <4 x i64> [ %4496, %4485 ], [ <i64 0, i64 1, i64 2, i64 3>, %4482 ]
  %4488 = add nuw nsw <4 x i64> %4487, <i64 1, i64 1, i64 1, i64 1>
  %4489 = mul nuw nsw <4 x i64> %4488, %4488
  %4490 = trunc <4 x i64> %4489 to <4 x i32>
  %4491 = sitofp <4 x i32> %4490 to <4 x float>
  %4492 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4491
  %4493 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4486
  %4494 = bitcast float* %4493 to <4 x float>*
  store <4 x float> %4492, <4 x float>* %4494, align 16, !tbaa !9
  %4495 = add nuw i64 %4486, 4
  %4496 = add <4 x i64> %4487, <i64 4, i64 4, i64 4, i64 4>
  %4497 = icmp eq i64 %4495, 32000
  br i1 %4497, label %4498, label %4485, !llvm.loop !136

4498:                                             ; preds = %4485
  store float 2.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  br label %6516

4499:                                             ; preds = %4482
  %4500 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0))
  %4501 = icmp eq i32 %4500, 0
  br i1 %4501, label %4502, label %4521

4502:                                             ; preds = %4499
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %4503

4503:                                             ; preds = %4503, %4502
  %4504 = phi i64 [ 0, %4502 ], [ %4518, %4503 ]
  %4505 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %4502 ], [ %4519, %4503 ]
  %4506 = trunc <4 x i64> %4505 to <4 x i32>
  %4507 = add <4 x i32> %4506, <i32 1, i32 1, i32 1, i32 1>
  %4508 = trunc <4 x i64> %4505 to <4 x i32>
  %4509 = add <4 x i32> %4508, <i32 5, i32 5, i32 5, i32 5>
  %4510 = sitofp <4 x i32> %4507 to <4 x float>
  %4511 = sitofp <4 x i32> %4509 to <4 x float>
  %4512 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4510
  %4513 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4511
  %4514 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4504
  %4515 = bitcast float* %4514 to <4 x float>*
  store <4 x float> %4512, <4 x float>* %4515, align 16, !tbaa !9
  %4516 = getelementptr inbounds float, float* %4514, i64 4
  %4517 = bitcast float* %4516 to <4 x float>*
  store <4 x float> %4513, <4 x float>* %4517, align 16, !tbaa !9
  %4518 = add nuw i64 %4504, 8
  %4519 = add <4 x i64> %4505, <i64 8, i64 8, i64 8, i64 8>
  %4520 = icmp eq i64 %4518, 32000
  br i1 %4520, label %6516, label %4503, !llvm.loop !137

4521:                                             ; preds = %4499
  %4522 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0))
  %4523 = icmp eq i32 %4522, 0
  br i1 %4523, label %4524, label %4560

4524:                                             ; preds = %4521, %4524
  %4525 = phi i64 [ %4539, %4524 ], [ 0, %4521 ]
  %4526 = phi <4 x i64> [ %4540, %4524 ], [ <i64 0, i64 1, i64 2, i64 3>, %4521 ]
  %4527 = trunc <4 x i64> %4526 to <4 x i32>
  %4528 = add <4 x i32> %4527, <i32 1, i32 1, i32 1, i32 1>
  %4529 = trunc <4 x i64> %4526 to <4 x i32>
  %4530 = add <4 x i32> %4529, <i32 5, i32 5, i32 5, i32 5>
  %4531 = sitofp <4 x i32> %4528 to <4 x float>
  %4532 = sitofp <4 x i32> %4530 to <4 x float>
  %4533 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4531
  %4534 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4532
  %4535 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4525
  %4536 = bitcast float* %4535 to <4 x float>*
  store <4 x float> %4533, <4 x float>* %4536, align 16, !tbaa !9
  %4537 = getelementptr inbounds float, float* %4535, i64 4
  %4538 = bitcast float* %4537 to <4 x float>*
  store <4 x float> %4534, <4 x float>* %4538, align 16, !tbaa !9
  %4539 = add nuw i64 %4525, 8
  %4540 = add <4 x i64> %4526, <i64 8, i64 8, i64 8, i64 8>
  %4541 = icmp eq i64 %4539, 32000
  br i1 %4541, label %4542, label %4524, !llvm.loop !138

4542:                                             ; preds = %4524, %4542
  %4543 = phi i64 [ %4557, %4542 ], [ 0, %4524 ]
  %4544 = phi <4 x i64> [ %4558, %4542 ], [ <i64 0, i64 1, i64 2, i64 3>, %4524 ]
  %4545 = trunc <4 x i64> %4544 to <4 x i32>
  %4546 = add <4 x i32> %4545, <i32 1, i32 1, i32 1, i32 1>
  %4547 = trunc <4 x i64> %4544 to <4 x i32>
  %4548 = add <4 x i32> %4547, <i32 5, i32 5, i32 5, i32 5>
  %4549 = sitofp <4 x i32> %4546 to <4 x float>
  %4550 = sitofp <4 x i32> %4548 to <4 x float>
  %4551 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4549
  %4552 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4550
  %4553 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4543
  %4554 = bitcast float* %4553 to <4 x float>*
  store <4 x float> %4551, <4 x float>* %4554, align 16, !tbaa !9
  %4555 = getelementptr inbounds float, float* %4553, i64 4
  %4556 = bitcast float* %4555 to <4 x float>*
  store <4 x float> %4552, <4 x float>* %4556, align 16, !tbaa !9
  %4557 = add nuw i64 %4543, 8
  %4558 = add <4 x i64> %4544, <i64 8, i64 8, i64 8, i64 8>
  %4559 = icmp eq i64 %4557, 32000
  br i1 %4559, label %6516, label %4542, !llvm.loop !139

4560:                                             ; preds = %4521
  %4561 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0))
  %4562 = icmp eq i32 %4561, 0
  br i1 %4562, label %4563, label %4708

4563:                                             ; preds = %4560, %4563
  %4564 = phi i64 [ %4565, %4563 ], [ 0, %4560 ]
  %4565 = add nuw nsw i64 %4564, 1
  %4566 = trunc i64 %4565 to i32
  %4567 = sitofp i32 %4566 to float
  %4568 = fdiv float 1.000000e+00, %4567
  %4569 = insertelement <4 x float> poison, float %4568, i32 0
  %4570 = shufflevector <4 x float> %4569, <4 x float> poison, <4 x i32> zeroinitializer
  %4571 = insertelement <4 x float> poison, float %4568, i32 0
  %4572 = shufflevector <4 x float> %4571, <4 x float> poison, <4 x i32> zeroinitializer
  %4573 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 0
  %4574 = bitcast float* %4573 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4574, align 16, !tbaa !9
  %4575 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 4
  %4576 = bitcast float* %4575 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4576, align 16, !tbaa !9
  %4577 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 8
  %4578 = bitcast float* %4577 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4578, align 16, !tbaa !9
  %4579 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 12
  %4580 = bitcast float* %4579 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4580, align 16, !tbaa !9
  %4581 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 16
  %4582 = bitcast float* %4581 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4582, align 16, !tbaa !9
  %4583 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 20
  %4584 = bitcast float* %4583 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4584, align 16, !tbaa !9
  %4585 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 24
  %4586 = bitcast float* %4585 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4586, align 16, !tbaa !9
  %4587 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 28
  %4588 = bitcast float* %4587 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4588, align 16, !tbaa !9
  %4589 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 32
  %4590 = bitcast float* %4589 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4590, align 16, !tbaa !9
  %4591 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 36
  %4592 = bitcast float* %4591 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4592, align 16, !tbaa !9
  %4593 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 40
  %4594 = bitcast float* %4593 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4594, align 16, !tbaa !9
  %4595 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 44
  %4596 = bitcast float* %4595 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4596, align 16, !tbaa !9
  %4597 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 48
  %4598 = bitcast float* %4597 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4598, align 16, !tbaa !9
  %4599 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 52
  %4600 = bitcast float* %4599 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4600, align 16, !tbaa !9
  %4601 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 56
  %4602 = bitcast float* %4601 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4602, align 16, !tbaa !9
  %4603 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 60
  %4604 = bitcast float* %4603 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4604, align 16, !tbaa !9
  %4605 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 64
  %4606 = bitcast float* %4605 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4606, align 16, !tbaa !9
  %4607 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 68
  %4608 = bitcast float* %4607 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4608, align 16, !tbaa !9
  %4609 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 72
  %4610 = bitcast float* %4609 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4610, align 16, !tbaa !9
  %4611 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 76
  %4612 = bitcast float* %4611 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4612, align 16, !tbaa !9
  %4613 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 80
  %4614 = bitcast float* %4613 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4614, align 16, !tbaa !9
  %4615 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 84
  %4616 = bitcast float* %4615 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4616, align 16, !tbaa !9
  %4617 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 88
  %4618 = bitcast float* %4617 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4618, align 16, !tbaa !9
  %4619 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 92
  %4620 = bitcast float* %4619 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4620, align 16, !tbaa !9
  %4621 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 96
  %4622 = bitcast float* %4621 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4622, align 16, !tbaa !9
  %4623 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 100
  %4624 = bitcast float* %4623 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4624, align 16, !tbaa !9
  %4625 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 104
  %4626 = bitcast float* %4625 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4626, align 16, !tbaa !9
  %4627 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 108
  %4628 = bitcast float* %4627 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4628, align 16, !tbaa !9
  %4629 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 112
  %4630 = bitcast float* %4629 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4630, align 16, !tbaa !9
  %4631 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 116
  %4632 = bitcast float* %4631 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4632, align 16, !tbaa !9
  %4633 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 120
  %4634 = bitcast float* %4633 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4634, align 16, !tbaa !9
  %4635 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 124
  %4636 = bitcast float* %4635 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4636, align 16, !tbaa !9
  %4637 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 128
  %4638 = bitcast float* %4637 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4638, align 16, !tbaa !9
  %4639 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 132
  %4640 = bitcast float* %4639 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4640, align 16, !tbaa !9
  %4641 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 136
  %4642 = bitcast float* %4641 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4642, align 16, !tbaa !9
  %4643 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 140
  %4644 = bitcast float* %4643 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4644, align 16, !tbaa !9
  %4645 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 144
  %4646 = bitcast float* %4645 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4646, align 16, !tbaa !9
  %4647 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 148
  %4648 = bitcast float* %4647 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4648, align 16, !tbaa !9
  %4649 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 152
  %4650 = bitcast float* %4649 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4650, align 16, !tbaa !9
  %4651 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 156
  %4652 = bitcast float* %4651 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4652, align 16, !tbaa !9
  %4653 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 160
  %4654 = bitcast float* %4653 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4654, align 16, !tbaa !9
  %4655 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 164
  %4656 = bitcast float* %4655 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4656, align 16, !tbaa !9
  %4657 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 168
  %4658 = bitcast float* %4657 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4658, align 16, !tbaa !9
  %4659 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 172
  %4660 = bitcast float* %4659 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4660, align 16, !tbaa !9
  %4661 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 176
  %4662 = bitcast float* %4661 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4662, align 16, !tbaa !9
  %4663 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 180
  %4664 = bitcast float* %4663 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4664, align 16, !tbaa !9
  %4665 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 184
  %4666 = bitcast float* %4665 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4666, align 16, !tbaa !9
  %4667 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 188
  %4668 = bitcast float* %4667 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4668, align 16, !tbaa !9
  %4669 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 192
  %4670 = bitcast float* %4669 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4670, align 16, !tbaa !9
  %4671 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 196
  %4672 = bitcast float* %4671 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4672, align 16, !tbaa !9
  %4673 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 200
  %4674 = bitcast float* %4673 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4674, align 16, !tbaa !9
  %4675 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 204
  %4676 = bitcast float* %4675 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4676, align 16, !tbaa !9
  %4677 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 208
  %4678 = bitcast float* %4677 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4678, align 16, !tbaa !9
  %4679 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 212
  %4680 = bitcast float* %4679 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4680, align 16, !tbaa !9
  %4681 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 216
  %4682 = bitcast float* %4681 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4682, align 16, !tbaa !9
  %4683 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 220
  %4684 = bitcast float* %4683 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4684, align 16, !tbaa !9
  %4685 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 224
  %4686 = bitcast float* %4685 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4686, align 16, !tbaa !9
  %4687 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 228
  %4688 = bitcast float* %4687 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4688, align 16, !tbaa !9
  %4689 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 232
  %4690 = bitcast float* %4689 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4690, align 16, !tbaa !9
  %4691 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 236
  %4692 = bitcast float* %4691 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4692, align 16, !tbaa !9
  %4693 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 240
  %4694 = bitcast float* %4693 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4694, align 16, !tbaa !9
  %4695 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 244
  %4696 = bitcast float* %4695 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4696, align 16, !tbaa !9
  %4697 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 248
  %4698 = bitcast float* %4697 to <4 x float>*
  store <4 x float> %4570, <4 x float>* %4698, align 16, !tbaa !9
  %4699 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4564, i64 252
  %4700 = bitcast float* %4699 to <4 x float>*
  store <4 x float> %4572, <4 x float>* %4700, align 16, !tbaa !9
  %4701 = icmp eq i64 %4565, 256
  br i1 %4701, label %4702, label %4563, !llvm.loop !23

4702:                                             ; preds = %4563, %4702
  %4703 = phi i64 [ %4706, %4702 ], [ 0, %4563 ]
  %4704 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4703, i64 0
  %4705 = bitcast float* %4704 to i8*
  call void @memset_pattern16(i8* %4705, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %4706 = add nuw nsw i64 %4703, 1
  %4707 = icmp eq i64 %4706, 256
  br i1 %4707, label %6516, label %4702, !llvm.loop !26

4708:                                             ; preds = %4560
  %4709 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0))
  %4710 = icmp eq i32 %4709, 0
  br i1 %4710, label %4711, label %4712

4711:                                             ; preds = %4708
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  store float 1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !9
  br label %6516

4712:                                             ; preds = %4708
  %4713 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0))
  %4714 = icmp eq i32 %4713, 0
  br i1 %4714, label %4715, label %4751

4715:                                             ; preds = %4712, %4715
  %4716 = phi i64 [ %4730, %4715 ], [ 0, %4712 ]
  %4717 = phi <4 x i64> [ %4731, %4715 ], [ <i64 0, i64 1, i64 2, i64 3>, %4712 ]
  %4718 = trunc <4 x i64> %4717 to <4 x i32>
  %4719 = add <4 x i32> %4718, <i32 1, i32 1, i32 1, i32 1>
  %4720 = trunc <4 x i64> %4717 to <4 x i32>
  %4721 = add <4 x i32> %4720, <i32 5, i32 5, i32 5, i32 5>
  %4722 = sitofp <4 x i32> %4719 to <4 x float>
  %4723 = sitofp <4 x i32> %4721 to <4 x float>
  %4724 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4722
  %4725 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4723
  %4726 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4716
  %4727 = bitcast float* %4726 to <4 x float>*
  store <4 x float> %4724, <4 x float>* %4727, align 16, !tbaa !9
  %4728 = getelementptr inbounds float, float* %4726, i64 4
  %4729 = bitcast float* %4728 to <4 x float>*
  store <4 x float> %4725, <4 x float>* %4729, align 16, !tbaa !9
  %4730 = add nuw i64 %4716, 8
  %4731 = add <4 x i64> %4717, <i64 8, i64 8, i64 8, i64 8>
  %4732 = icmp eq i64 %4730, 32000
  br i1 %4732, label %4733, label %4715, !llvm.loop !140

4733:                                             ; preds = %4715, %4733
  %4734 = phi i64 [ %4748, %4733 ], [ 0, %4715 ]
  %4735 = phi <4 x i64> [ %4749, %4733 ], [ <i64 0, i64 1, i64 2, i64 3>, %4715 ]
  %4736 = trunc <4 x i64> %4735 to <4 x i32>
  %4737 = add <4 x i32> %4736, <i32 1, i32 1, i32 1, i32 1>
  %4738 = trunc <4 x i64> %4735 to <4 x i32>
  %4739 = add <4 x i32> %4738, <i32 5, i32 5, i32 5, i32 5>
  %4740 = sitofp <4 x i32> %4737 to <4 x float>
  %4741 = sitofp <4 x i32> %4739 to <4 x float>
  %4742 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4740
  %4743 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4741
  %4744 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4734
  %4745 = bitcast float* %4744 to <4 x float>*
  store <4 x float> %4742, <4 x float>* %4745, align 16, !tbaa !9
  %4746 = getelementptr inbounds float, float* %4744, i64 4
  %4747 = bitcast float* %4746 to <4 x float>*
  store <4 x float> %4743, <4 x float>* %4747, align 16, !tbaa !9
  %4748 = add nuw i64 %4734, 8
  %4749 = add <4 x i64> %4735, <i64 8, i64 8, i64 8, i64 8>
  %4750 = icmp eq i64 %4748, 32000
  br i1 %4750, label %6516, label %4733, !llvm.loop !141

4751:                                             ; preds = %4712
  %4752 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i64 0, i64 0))
  %4753 = icmp eq i32 %4752, 0
  br i1 %4753, label %4754, label %4755

4754:                                             ; preds = %4751
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  store float 1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !9
  br label %6516

4755:                                             ; preds = %4751
  %4756 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i64 0, i64 0))
  %4757 = icmp eq i32 %4756, 0
  br i1 %4757, label %4758, label %4795

4758:                                             ; preds = %4755
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %4759

4759:                                             ; preds = %4759, %4758
  %4760 = phi i64 [ 0, %4758 ], [ %4774, %4759 ]
  %4761 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %4758 ], [ %4775, %4759 ]
  %4762 = trunc <4 x i64> %4761 to <4 x i32>
  %4763 = add <4 x i32> %4762, <i32 1, i32 1, i32 1, i32 1>
  %4764 = trunc <4 x i64> %4761 to <4 x i32>
  %4765 = add <4 x i32> %4764, <i32 5, i32 5, i32 5, i32 5>
  %4766 = sitofp <4 x i32> %4763 to <4 x float>
  %4767 = sitofp <4 x i32> %4765 to <4 x float>
  %4768 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4766
  %4769 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4767
  %4770 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4760
  %4771 = bitcast float* %4770 to <4 x float>*
  store <4 x float> %4768, <4 x float>* %4771, align 16, !tbaa !9
  %4772 = getelementptr inbounds float, float* %4770, i64 4
  %4773 = bitcast float* %4772 to <4 x float>*
  store <4 x float> %4769, <4 x float>* %4773, align 16, !tbaa !9
  %4774 = add nuw i64 %4760, 8
  %4775 = add <4 x i64> %4761, <i64 8, i64 8, i64 8, i64 8>
  %4776 = icmp eq i64 %4774, 32000
  br i1 %4776, label %4777, label %4759, !llvm.loop !142

4777:                                             ; preds = %4759, %4777
  %4778 = phi i64 [ %4792, %4777 ], [ 0, %4759 ]
  %4779 = phi <4 x i64> [ %4793, %4777 ], [ <i64 0, i64 1, i64 2, i64 3>, %4759 ]
  %4780 = trunc <4 x i64> %4779 to <4 x i32>
  %4781 = add <4 x i32> %4780, <i32 1, i32 1, i32 1, i32 1>
  %4782 = trunc <4 x i64> %4779 to <4 x i32>
  %4783 = add <4 x i32> %4782, <i32 5, i32 5, i32 5, i32 5>
  %4784 = sitofp <4 x i32> %4781 to <4 x float>
  %4785 = sitofp <4 x i32> %4783 to <4 x float>
  %4786 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4784
  %4787 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4785
  %4788 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4778
  %4789 = bitcast float* %4788 to <4 x float>*
  store <4 x float> %4786, <4 x float>* %4789, align 16, !tbaa !9
  %4790 = getelementptr inbounds float, float* %4788, i64 4
  %4791 = bitcast float* %4790 to <4 x float>*
  store <4 x float> %4787, <4 x float>* %4791, align 16, !tbaa !9
  %4792 = add nuw i64 %4778, 8
  %4793 = add <4 x i64> %4779, <i64 8, i64 8, i64 8, i64 8>
  %4794 = icmp eq i64 %4792, 32000
  br i1 %4794, label %6516, label %4777, !llvm.loop !143

4795:                                             ; preds = %4755
  %4796 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i64 0, i64 0))
  %4797 = icmp eq i32 %4796, 0
  br i1 %4797, label %4798, label %4835

4798:                                             ; preds = %4795
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %4799

4799:                                             ; preds = %4799, %4798
  %4800 = phi i64 [ 0, %4798 ], [ %4814, %4799 ]
  %4801 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %4798 ], [ %4815, %4799 ]
  %4802 = trunc <4 x i64> %4801 to <4 x i32>
  %4803 = add <4 x i32> %4802, <i32 1, i32 1, i32 1, i32 1>
  %4804 = trunc <4 x i64> %4801 to <4 x i32>
  %4805 = add <4 x i32> %4804, <i32 5, i32 5, i32 5, i32 5>
  %4806 = sitofp <4 x i32> %4803 to <4 x float>
  %4807 = sitofp <4 x i32> %4805 to <4 x float>
  %4808 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4806
  %4809 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4807
  %4810 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %4800
  %4811 = bitcast float* %4810 to <4 x float>*
  store <4 x float> %4808, <4 x float>* %4811, align 16, !tbaa !9
  %4812 = getelementptr inbounds float, float* %4810, i64 4
  %4813 = bitcast float* %4812 to <4 x float>*
  store <4 x float> %4809, <4 x float>* %4813, align 16, !tbaa !9
  %4814 = add nuw i64 %4800, 8
  %4815 = add <4 x i64> %4801, <i64 8, i64 8, i64 8, i64 8>
  %4816 = icmp eq i64 %4814, 32000
  br i1 %4816, label %4817, label %4799, !llvm.loop !144

4817:                                             ; preds = %4799, %4817
  %4818 = phi i64 [ %4832, %4817 ], [ 0, %4799 ]
  %4819 = phi <4 x i64> [ %4833, %4817 ], [ <i64 0, i64 1, i64 2, i64 3>, %4799 ]
  %4820 = trunc <4 x i64> %4819 to <4 x i32>
  %4821 = add <4 x i32> %4820, <i32 1, i32 1, i32 1, i32 1>
  %4822 = trunc <4 x i64> %4819 to <4 x i32>
  %4823 = add <4 x i32> %4822, <i32 5, i32 5, i32 5, i32 5>
  %4824 = sitofp <4 x i32> %4821 to <4 x float>
  %4825 = sitofp <4 x i32> %4823 to <4 x float>
  %4826 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4824
  %4827 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4825
  %4828 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %4818
  %4829 = bitcast float* %4828 to <4 x float>*
  store <4 x float> %4826, <4 x float>* %4829, align 16, !tbaa !9
  %4830 = getelementptr inbounds float, float* %4828, i64 4
  %4831 = bitcast float* %4830 to <4 x float>*
  store <4 x float> %4827, <4 x float>* %4831, align 16, !tbaa !9
  %4832 = add nuw i64 %4818, 8
  %4833 = add <4 x i64> %4819, <i64 8, i64 8, i64 8, i64 8>
  %4834 = icmp eq i64 %4832, 32000
  br i1 %4834, label %6516, label %4817, !llvm.loop !145

4835:                                             ; preds = %4795
  %4836 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i64 0, i64 0))
  %4837 = icmp eq i32 %4836, 0
  br i1 %4837, label %4838, label %4875

4838:                                             ; preds = %4835
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %4839

4839:                                             ; preds = %4839, %4838
  %4840 = phi i64 [ 0, %4838 ], [ %4854, %4839 ]
  %4841 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %4838 ], [ %4855, %4839 ]
  %4842 = trunc <4 x i64> %4841 to <4 x i32>
  %4843 = add <4 x i32> %4842, <i32 1, i32 1, i32 1, i32 1>
  %4844 = trunc <4 x i64> %4841 to <4 x i32>
  %4845 = add <4 x i32> %4844, <i32 5, i32 5, i32 5, i32 5>
  %4846 = sitofp <4 x i32> %4843 to <4 x float>
  %4847 = sitofp <4 x i32> %4845 to <4 x float>
  %4848 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4846
  %4849 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4847
  %4850 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %4840
  %4851 = bitcast float* %4850 to <4 x float>*
  store <4 x float> %4848, <4 x float>* %4851, align 16, !tbaa !9
  %4852 = getelementptr inbounds float, float* %4850, i64 4
  %4853 = bitcast float* %4852 to <4 x float>*
  store <4 x float> %4849, <4 x float>* %4853, align 16, !tbaa !9
  %4854 = add nuw i64 %4840, 8
  %4855 = add <4 x i64> %4841, <i64 8, i64 8, i64 8, i64 8>
  %4856 = icmp eq i64 %4854, 32000
  br i1 %4856, label %4857, label %4839, !llvm.loop !146

4857:                                             ; preds = %4839, %4857
  %4858 = phi i64 [ %4872, %4857 ], [ 0, %4839 ]
  %4859 = phi <4 x i64> [ %4873, %4857 ], [ <i64 0, i64 1, i64 2, i64 3>, %4839 ]
  %4860 = trunc <4 x i64> %4859 to <4 x i32>
  %4861 = add <4 x i32> %4860, <i32 1, i32 1, i32 1, i32 1>
  %4862 = trunc <4 x i64> %4859 to <4 x i32>
  %4863 = add <4 x i32> %4862, <i32 5, i32 5, i32 5, i32 5>
  %4864 = sitofp <4 x i32> %4861 to <4 x float>
  %4865 = sitofp <4 x i32> %4863 to <4 x float>
  %4866 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4864
  %4867 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %4865
  %4868 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %4858
  %4869 = bitcast float* %4868 to <4 x float>*
  store <4 x float> %4866, <4 x float>* %4869, align 16, !tbaa !9
  %4870 = getelementptr inbounds float, float* %4868, i64 4
  %4871 = bitcast float* %4870 to <4 x float>*
  store <4 x float> %4867, <4 x float>* %4871, align 16, !tbaa !9
  %4872 = add nuw i64 %4858, 8
  %4873 = add <4 x i64> %4859, <i64 8, i64 8, i64 8, i64 8>
  %4874 = icmp eq i64 %4872, 32000
  br i1 %4874, label %6516, label %4857, !llvm.loop !147

4875:                                             ; preds = %4835
  %4876 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i64 0, i64 0))
  %4877 = icmp eq i32 %4876, 0
  br i1 %4877, label %4878, label %5162

4878:                                             ; preds = %4875, %4878
  %4879 = phi i64 [ %4882, %4878 ], [ 0, %4875 ]
  %4880 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %4879, i64 0
  %4881 = bitcast float* %4880 to i8*
  call void @memset_pattern16(i8* %4881, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 1024) #19
  %4882 = add nuw nsw i64 %4879, 1
  %4883 = icmp eq i64 %4882, 256
  br i1 %4883, label %4884, label %4878, !llvm.loop !26

4884:                                             ; preds = %4878, %4884
  %4885 = phi i64 [ %4886, %4884 ], [ 0, %4878 ]
  %4886 = add nuw nsw i64 %4885, 1
  %4887 = trunc i64 %4886 to i32
  %4888 = sitofp i32 %4887 to float
  %4889 = fdiv float 1.000000e+00, %4888
  %4890 = insertelement <4 x float> poison, float %4889, i32 0
  %4891 = shufflevector <4 x float> %4890, <4 x float> poison, <4 x i32> zeroinitializer
  %4892 = insertelement <4 x float> poison, float %4889, i32 0
  %4893 = shufflevector <4 x float> %4892, <4 x float> poison, <4 x i32> zeroinitializer
  %4894 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 0
  %4895 = bitcast float* %4894 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4895, align 16, !tbaa !9
  %4896 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 4
  %4897 = bitcast float* %4896 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4897, align 16, !tbaa !9
  %4898 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 8
  %4899 = bitcast float* %4898 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4899, align 16, !tbaa !9
  %4900 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 12
  %4901 = bitcast float* %4900 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4901, align 16, !tbaa !9
  %4902 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 16
  %4903 = bitcast float* %4902 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4903, align 16, !tbaa !9
  %4904 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 20
  %4905 = bitcast float* %4904 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4905, align 16, !tbaa !9
  %4906 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 24
  %4907 = bitcast float* %4906 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4907, align 16, !tbaa !9
  %4908 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 28
  %4909 = bitcast float* %4908 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4909, align 16, !tbaa !9
  %4910 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 32
  %4911 = bitcast float* %4910 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4911, align 16, !tbaa !9
  %4912 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 36
  %4913 = bitcast float* %4912 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4913, align 16, !tbaa !9
  %4914 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 40
  %4915 = bitcast float* %4914 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4915, align 16, !tbaa !9
  %4916 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 44
  %4917 = bitcast float* %4916 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4917, align 16, !tbaa !9
  %4918 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 48
  %4919 = bitcast float* %4918 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4919, align 16, !tbaa !9
  %4920 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 52
  %4921 = bitcast float* %4920 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4921, align 16, !tbaa !9
  %4922 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 56
  %4923 = bitcast float* %4922 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4923, align 16, !tbaa !9
  %4924 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 60
  %4925 = bitcast float* %4924 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4925, align 16, !tbaa !9
  %4926 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 64
  %4927 = bitcast float* %4926 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4927, align 16, !tbaa !9
  %4928 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 68
  %4929 = bitcast float* %4928 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4929, align 16, !tbaa !9
  %4930 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 72
  %4931 = bitcast float* %4930 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4931, align 16, !tbaa !9
  %4932 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 76
  %4933 = bitcast float* %4932 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4933, align 16, !tbaa !9
  %4934 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 80
  %4935 = bitcast float* %4934 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4935, align 16, !tbaa !9
  %4936 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 84
  %4937 = bitcast float* %4936 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4937, align 16, !tbaa !9
  %4938 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 88
  %4939 = bitcast float* %4938 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4939, align 16, !tbaa !9
  %4940 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 92
  %4941 = bitcast float* %4940 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4941, align 16, !tbaa !9
  %4942 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 96
  %4943 = bitcast float* %4942 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4943, align 16, !tbaa !9
  %4944 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 100
  %4945 = bitcast float* %4944 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4945, align 16, !tbaa !9
  %4946 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 104
  %4947 = bitcast float* %4946 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4947, align 16, !tbaa !9
  %4948 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 108
  %4949 = bitcast float* %4948 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4949, align 16, !tbaa !9
  %4950 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 112
  %4951 = bitcast float* %4950 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4951, align 16, !tbaa !9
  %4952 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 116
  %4953 = bitcast float* %4952 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4953, align 16, !tbaa !9
  %4954 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 120
  %4955 = bitcast float* %4954 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4955, align 16, !tbaa !9
  %4956 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 124
  %4957 = bitcast float* %4956 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4957, align 16, !tbaa !9
  %4958 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 128
  %4959 = bitcast float* %4958 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4959, align 16, !tbaa !9
  %4960 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 132
  %4961 = bitcast float* %4960 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4961, align 16, !tbaa !9
  %4962 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 136
  %4963 = bitcast float* %4962 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4963, align 16, !tbaa !9
  %4964 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 140
  %4965 = bitcast float* %4964 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4965, align 16, !tbaa !9
  %4966 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 144
  %4967 = bitcast float* %4966 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4967, align 16, !tbaa !9
  %4968 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 148
  %4969 = bitcast float* %4968 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4969, align 16, !tbaa !9
  %4970 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 152
  %4971 = bitcast float* %4970 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4971, align 16, !tbaa !9
  %4972 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 156
  %4973 = bitcast float* %4972 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4973, align 16, !tbaa !9
  %4974 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 160
  %4975 = bitcast float* %4974 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4975, align 16, !tbaa !9
  %4976 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 164
  %4977 = bitcast float* %4976 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4977, align 16, !tbaa !9
  %4978 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 168
  %4979 = bitcast float* %4978 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4979, align 16, !tbaa !9
  %4980 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 172
  %4981 = bitcast float* %4980 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4981, align 16, !tbaa !9
  %4982 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 176
  %4983 = bitcast float* %4982 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4983, align 16, !tbaa !9
  %4984 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 180
  %4985 = bitcast float* %4984 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4985, align 16, !tbaa !9
  %4986 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 184
  %4987 = bitcast float* %4986 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4987, align 16, !tbaa !9
  %4988 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 188
  %4989 = bitcast float* %4988 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4989, align 16, !tbaa !9
  %4990 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 192
  %4991 = bitcast float* %4990 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4991, align 16, !tbaa !9
  %4992 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 196
  %4993 = bitcast float* %4992 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4993, align 16, !tbaa !9
  %4994 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 200
  %4995 = bitcast float* %4994 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4995, align 16, !tbaa !9
  %4996 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 204
  %4997 = bitcast float* %4996 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %4997, align 16, !tbaa !9
  %4998 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 208
  %4999 = bitcast float* %4998 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %4999, align 16, !tbaa !9
  %5000 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 212
  %5001 = bitcast float* %5000 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %5001, align 16, !tbaa !9
  %5002 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 216
  %5003 = bitcast float* %5002 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %5003, align 16, !tbaa !9
  %5004 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 220
  %5005 = bitcast float* %5004 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %5005, align 16, !tbaa !9
  %5006 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 224
  %5007 = bitcast float* %5006 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %5007, align 16, !tbaa !9
  %5008 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 228
  %5009 = bitcast float* %5008 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %5009, align 16, !tbaa !9
  %5010 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 232
  %5011 = bitcast float* %5010 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %5011, align 16, !tbaa !9
  %5012 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 236
  %5013 = bitcast float* %5012 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %5013, align 16, !tbaa !9
  %5014 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 240
  %5015 = bitcast float* %5014 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %5015, align 16, !tbaa !9
  %5016 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 244
  %5017 = bitcast float* %5016 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %5017, align 16, !tbaa !9
  %5018 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 248
  %5019 = bitcast float* %5018 to <4 x float>*
  store <4 x float> %4891, <4 x float>* %5019, align 16, !tbaa !9
  %5020 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %4885, i64 252
  %5021 = bitcast float* %5020 to <4 x float>*
  store <4 x float> %4893, <4 x float>* %5021, align 16, !tbaa !9
  %5022 = icmp eq i64 %4886, 256
  br i1 %5022, label %5023, label %4884, !llvm.loop !23

5023:                                             ; preds = %4884, %5023
  %5024 = phi i64 [ %5025, %5023 ], [ 0, %4884 ]
  %5025 = add nuw nsw i64 %5024, 1
  %5026 = trunc i64 %5025 to i32
  %5027 = sitofp i32 %5026 to float
  %5028 = fdiv float 1.000000e+00, %5027
  %5029 = insertelement <4 x float> poison, float %5028, i32 0
  %5030 = shufflevector <4 x float> %5029, <4 x float> poison, <4 x i32> zeroinitializer
  %5031 = insertelement <4 x float> poison, float %5028, i32 0
  %5032 = shufflevector <4 x float> %5031, <4 x float> poison, <4 x i32> zeroinitializer
  %5033 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 0
  %5034 = bitcast float* %5033 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5034, align 16, !tbaa !9
  %5035 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 4
  %5036 = bitcast float* %5035 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5036, align 16, !tbaa !9
  %5037 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 8
  %5038 = bitcast float* %5037 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5038, align 16, !tbaa !9
  %5039 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 12
  %5040 = bitcast float* %5039 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5040, align 16, !tbaa !9
  %5041 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 16
  %5042 = bitcast float* %5041 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5042, align 16, !tbaa !9
  %5043 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 20
  %5044 = bitcast float* %5043 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5044, align 16, !tbaa !9
  %5045 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 24
  %5046 = bitcast float* %5045 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5046, align 16, !tbaa !9
  %5047 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 28
  %5048 = bitcast float* %5047 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5048, align 16, !tbaa !9
  %5049 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 32
  %5050 = bitcast float* %5049 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5050, align 16, !tbaa !9
  %5051 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 36
  %5052 = bitcast float* %5051 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5052, align 16, !tbaa !9
  %5053 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 40
  %5054 = bitcast float* %5053 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5054, align 16, !tbaa !9
  %5055 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 44
  %5056 = bitcast float* %5055 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5056, align 16, !tbaa !9
  %5057 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 48
  %5058 = bitcast float* %5057 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5058, align 16, !tbaa !9
  %5059 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 52
  %5060 = bitcast float* %5059 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5060, align 16, !tbaa !9
  %5061 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 56
  %5062 = bitcast float* %5061 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5062, align 16, !tbaa !9
  %5063 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 60
  %5064 = bitcast float* %5063 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5064, align 16, !tbaa !9
  %5065 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 64
  %5066 = bitcast float* %5065 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5066, align 16, !tbaa !9
  %5067 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 68
  %5068 = bitcast float* %5067 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5068, align 16, !tbaa !9
  %5069 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 72
  %5070 = bitcast float* %5069 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5070, align 16, !tbaa !9
  %5071 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 76
  %5072 = bitcast float* %5071 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5072, align 16, !tbaa !9
  %5073 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 80
  %5074 = bitcast float* %5073 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5074, align 16, !tbaa !9
  %5075 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 84
  %5076 = bitcast float* %5075 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5076, align 16, !tbaa !9
  %5077 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 88
  %5078 = bitcast float* %5077 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5078, align 16, !tbaa !9
  %5079 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 92
  %5080 = bitcast float* %5079 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5080, align 16, !tbaa !9
  %5081 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 96
  %5082 = bitcast float* %5081 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5082, align 16, !tbaa !9
  %5083 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 100
  %5084 = bitcast float* %5083 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5084, align 16, !tbaa !9
  %5085 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 104
  %5086 = bitcast float* %5085 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5086, align 16, !tbaa !9
  %5087 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 108
  %5088 = bitcast float* %5087 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5088, align 16, !tbaa !9
  %5089 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 112
  %5090 = bitcast float* %5089 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5090, align 16, !tbaa !9
  %5091 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 116
  %5092 = bitcast float* %5091 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5092, align 16, !tbaa !9
  %5093 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 120
  %5094 = bitcast float* %5093 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5094, align 16, !tbaa !9
  %5095 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 124
  %5096 = bitcast float* %5095 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5096, align 16, !tbaa !9
  %5097 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 128
  %5098 = bitcast float* %5097 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5098, align 16, !tbaa !9
  %5099 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 132
  %5100 = bitcast float* %5099 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5100, align 16, !tbaa !9
  %5101 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 136
  %5102 = bitcast float* %5101 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5102, align 16, !tbaa !9
  %5103 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 140
  %5104 = bitcast float* %5103 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5104, align 16, !tbaa !9
  %5105 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 144
  %5106 = bitcast float* %5105 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5106, align 16, !tbaa !9
  %5107 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 148
  %5108 = bitcast float* %5107 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5108, align 16, !tbaa !9
  %5109 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 152
  %5110 = bitcast float* %5109 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5110, align 16, !tbaa !9
  %5111 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 156
  %5112 = bitcast float* %5111 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5112, align 16, !tbaa !9
  %5113 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 160
  %5114 = bitcast float* %5113 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5114, align 16, !tbaa !9
  %5115 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 164
  %5116 = bitcast float* %5115 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5116, align 16, !tbaa !9
  %5117 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 168
  %5118 = bitcast float* %5117 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5118, align 16, !tbaa !9
  %5119 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 172
  %5120 = bitcast float* %5119 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5120, align 16, !tbaa !9
  %5121 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 176
  %5122 = bitcast float* %5121 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5122, align 16, !tbaa !9
  %5123 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 180
  %5124 = bitcast float* %5123 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5124, align 16, !tbaa !9
  %5125 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 184
  %5126 = bitcast float* %5125 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5126, align 16, !tbaa !9
  %5127 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 188
  %5128 = bitcast float* %5127 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5128, align 16, !tbaa !9
  %5129 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 192
  %5130 = bitcast float* %5129 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5130, align 16, !tbaa !9
  %5131 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 196
  %5132 = bitcast float* %5131 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5132, align 16, !tbaa !9
  %5133 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 200
  %5134 = bitcast float* %5133 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5134, align 16, !tbaa !9
  %5135 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 204
  %5136 = bitcast float* %5135 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5136, align 16, !tbaa !9
  %5137 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 208
  %5138 = bitcast float* %5137 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5138, align 16, !tbaa !9
  %5139 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 212
  %5140 = bitcast float* %5139 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5140, align 16, !tbaa !9
  %5141 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 216
  %5142 = bitcast float* %5141 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5142, align 16, !tbaa !9
  %5143 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 220
  %5144 = bitcast float* %5143 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5144, align 16, !tbaa !9
  %5145 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 224
  %5146 = bitcast float* %5145 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5146, align 16, !tbaa !9
  %5147 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 228
  %5148 = bitcast float* %5147 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5148, align 16, !tbaa !9
  %5149 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 232
  %5150 = bitcast float* %5149 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5150, align 16, !tbaa !9
  %5151 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 236
  %5152 = bitcast float* %5151 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5152, align 16, !tbaa !9
  %5153 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 240
  %5154 = bitcast float* %5153 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5154, align 16, !tbaa !9
  %5155 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 244
  %5156 = bitcast float* %5155 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5156, align 16, !tbaa !9
  %5157 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 248
  %5158 = bitcast float* %5157 to <4 x float>*
  store <4 x float> %5030, <4 x float>* %5158, align 16, !tbaa !9
  %5159 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %5024, i64 252
  %5160 = bitcast float* %5159 to <4 x float>*
  store <4 x float> %5032, <4 x float>* %5160, align 16, !tbaa !9
  %5161 = icmp eq i64 %5025, 256
  br i1 %5161, label %6516, label %5023, !llvm.loop !23

5162:                                             ; preds = %4875
  %5163 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0))
  %5164 = icmp eq i32 %5163, 0
  br i1 %5164, label %5165, label %5203

5165:                                             ; preds = %5162
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5166

5166:                                             ; preds = %5166, %5165
  %5167 = phi i64 [ 0, %5165 ], [ %5181, %5166 ]
  %5168 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5165 ], [ %5182, %5166 ]
  %5169 = trunc <4 x i64> %5168 to <4 x i32>
  %5170 = add <4 x i32> %5169, <i32 1, i32 1, i32 1, i32 1>
  %5171 = trunc <4 x i64> %5168 to <4 x i32>
  %5172 = add <4 x i32> %5171, <i32 5, i32 5, i32 5, i32 5>
  %5173 = sitofp <4 x i32> %5170 to <4 x float>
  %5174 = sitofp <4 x i32> %5172 to <4 x float>
  %5175 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5173
  %5176 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5174
  %5177 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5167
  %5178 = bitcast float* %5177 to <4 x float>*
  store <4 x float> %5175, <4 x float>* %5178, align 16, !tbaa !9
  %5179 = getelementptr inbounds float, float* %5177, i64 4
  %5180 = bitcast float* %5179 to <4 x float>*
  store <4 x float> %5176, <4 x float>* %5180, align 16, !tbaa !9
  %5181 = add nuw i64 %5167, 8
  %5182 = add <4 x i64> %5168, <i64 8, i64 8, i64 8, i64 8>
  %5183 = icmp eq i64 %5181, 32000
  br i1 %5183, label %5184, label %5166, !llvm.loop !148

5184:                                             ; preds = %5166, %5184
  %5185 = phi i64 [ %5199, %5184 ], [ 0, %5166 ]
  %5186 = phi <4 x i64> [ %5200, %5184 ], [ <i64 0, i64 1, i64 2, i64 3>, %5166 ]
  %5187 = trunc <4 x i64> %5186 to <4 x i32>
  %5188 = add <4 x i32> %5187, <i32 1, i32 1, i32 1, i32 1>
  %5189 = trunc <4 x i64> %5186 to <4 x i32>
  %5190 = add <4 x i32> %5189, <i32 5, i32 5, i32 5, i32 5>
  %5191 = sitofp <4 x i32> %5188 to <4 x float>
  %5192 = sitofp <4 x i32> %5190 to <4 x float>
  %5193 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5191
  %5194 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5192
  %5195 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5185
  %5196 = bitcast float* %5195 to <4 x float>*
  store <4 x float> %5193, <4 x float>* %5196, align 16, !tbaa !9
  %5197 = getelementptr inbounds float, float* %5195, i64 4
  %5198 = bitcast float* %5197 to <4 x float>*
  store <4 x float> %5194, <4 x float>* %5198, align 16, !tbaa !9
  %5199 = add nuw i64 %5185, 8
  %5200 = add <4 x i64> %5186, <i64 8, i64 8, i64 8, i64 8>
  %5201 = icmp eq i64 %5199, 32000
  br i1 %5201, label %5202, label %5184, !llvm.loop !149

5202:                                             ; preds = %5184
  store float -1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  br label %6516

5203:                                             ; preds = %5162
  %5204 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0))
  %5205 = icmp eq i32 %5204, 0
  br i1 %5205, label %5206, label %5219

5206:                                             ; preds = %5203, %5206
  %5207 = phi i64 [ %5216, %5206 ], [ 0, %5203 ]
  %5208 = phi <4 x i64> [ %5217, %5206 ], [ <i64 0, i64 1, i64 2, i64 3>, %5203 ]
  %5209 = add nuw nsw <4 x i64> %5208, <i64 1, i64 1, i64 1, i64 1>
  %5210 = mul nuw nsw <4 x i64> %5209, %5209
  %5211 = trunc <4 x i64> %5210 to <4 x i32>
  %5212 = sitofp <4 x i32> %5211 to <4 x float>
  %5213 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5212
  %5214 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5207
  %5215 = bitcast float* %5214 to <4 x float>*
  store <4 x float> %5213, <4 x float>* %5215, align 16, !tbaa !9
  %5216 = add nuw i64 %5207, 4
  %5217 = add <4 x i64> %5208, <i64 4, i64 4, i64 4, i64 4>
  %5218 = icmp eq i64 %5216, 32000
  br i1 %5218, label %6516, label %5206, !llvm.loop !150

5219:                                             ; preds = %5203
  %5220 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0))
  %5221 = icmp eq i32 %5220, 0
  br i1 %5221, label %5222, label %5236

5222:                                             ; preds = %5219
  call void @memset_pattern16(i8* bitcast ([65536 x float]* @array to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5223

5223:                                             ; preds = %5223, %5222
  %5224 = phi i64 [ 0, %5222 ], [ %5233, %5223 ]
  %5225 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5222 ], [ %5234, %5223 ]
  %5226 = add nuw nsw <4 x i64> %5225, <i64 1, i64 1, i64 1, i64 1>
  %5227 = mul nuw nsw <4 x i64> %5226, %5226
  %5228 = trunc <4 x i64> %5227 to <4 x i32>
  %5229 = sitofp <4 x i32> %5228 to <4 x float>
  %5230 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5229
  %5231 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5224
  %5232 = bitcast float* %5231 to <4 x float>*
  store <4 x float> %5230, <4 x float>* %5232, align 16, !tbaa !9
  %5233 = add nuw i64 %5224, 4
  %5234 = add <4 x i64> %5225, <i64 4, i64 4, i64 4, i64 4>
  %5235 = icmp eq i64 %5233, 32000
  br i1 %5235, label %6516, label %5223, !llvm.loop !151

5236:                                             ; preds = %5219
  %5237 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0))
  %5238 = icmp eq i32 %5237, 0
  br i1 %5238, label %5239, label %5253

5239:                                             ; preds = %5236
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([65536 x float]* @array to i8*), i8 0, i64 128000, i1 false)
  br label %5240

5240:                                             ; preds = %5240, %5239
  %5241 = phi i64 [ 0, %5239 ], [ %5250, %5240 ]
  %5242 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5239 ], [ %5251, %5240 ]
  %5243 = add nuw nsw <4 x i64> %5242, <i64 1, i64 1, i64 1, i64 1>
  %5244 = mul nuw nsw <4 x i64> %5243, %5243
  %5245 = trunc <4 x i64> %5244 to <4 x i32>
  %5246 = sitofp <4 x i32> %5245 to <4 x float>
  %5247 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5246
  %5248 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5241
  %5249 = bitcast float* %5248 to <4 x float>*
  store <4 x float> %5247, <4 x float>* %5249, align 16, !tbaa !9
  %5250 = add nuw i64 %5241, 4
  %5251 = add <4 x i64> %5242, <i64 4, i64 4, i64 4, i64 4>
  %5252 = icmp eq i64 %5250, 32000
  br i1 %5252, label %6516, label %5240, !llvm.loop !152

5253:                                             ; preds = %5236
  %5254 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0))
  %5255 = icmp eq i32 %5254, 0
  br i1 %5255, label %5256, label %5270

5256:                                             ; preds = %5253
  call void @memset_pattern16(i8* bitcast ([65536 x float]* @array to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5257

5257:                                             ; preds = %5257, %5256
  %5258 = phi i64 [ 0, %5256 ], [ %5267, %5257 ]
  %5259 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5256 ], [ %5268, %5257 ]
  %5260 = add nuw nsw <4 x i64> %5259, <i64 1, i64 1, i64 1, i64 1>
  %5261 = mul nuw nsw <4 x i64> %5260, %5260
  %5262 = trunc <4 x i64> %5261 to <4 x i32>
  %5263 = sitofp <4 x i32> %5262 to <4 x float>
  %5264 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5263
  %5265 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5258
  %5266 = bitcast float* %5265 to <4 x float>*
  store <4 x float> %5264, <4 x float>* %5266, align 16, !tbaa !9
  %5267 = add nuw i64 %5258, 4
  %5268 = add <4 x i64> %5259, <i64 4, i64 4, i64 4, i64 4>
  %5269 = icmp eq i64 %5267, 32000
  br i1 %5269, label %6516, label %5257, !llvm.loop !153

5270:                                             ; preds = %5253
  %5271 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0))
  %5272 = icmp eq i32 %5271, 0
  br i1 %5272, label %5273, label %5287

5273:                                             ; preds = %5270
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5274

5274:                                             ; preds = %5274, %5273
  %5275 = phi i64 [ 0, %5273 ], [ %5284, %5274 ]
  %5276 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5273 ], [ %5285, %5274 ]
  %5277 = add nuw nsw <4 x i64> %5276, <i64 1, i64 1, i64 1, i64 1>
  %5278 = mul nuw nsw <4 x i64> %5277, %5277
  %5279 = trunc <4 x i64> %5278 to <4 x i32>
  %5280 = sitofp <4 x i32> %5279 to <4 x float>
  %5281 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5280
  %5282 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5275
  %5283 = bitcast float* %5282 to <4 x float>*
  store <4 x float> %5281, <4 x float>* %5283, align 16, !tbaa !9
  %5284 = add nuw i64 %5275, 4
  %5285 = add <4 x i64> %5276, <i64 4, i64 4, i64 4, i64 4>
  %5286 = icmp eq i64 %5284, 32000
  br i1 %5286, label %6516, label %5274, !llvm.loop !154

5287:                                             ; preds = %5270
  %5288 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i64 0, i64 0))
  %5289 = icmp eq i32 %5288, 0
  br i1 %5289, label %5290, label %5304

5290:                                             ; preds = %5287
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5291

5291:                                             ; preds = %5291, %5290
  %5292 = phi i64 [ 0, %5290 ], [ %5301, %5291 ]
  %5293 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5290 ], [ %5302, %5291 ]
  %5294 = add nuw nsw <4 x i64> %5293, <i64 1, i64 1, i64 1, i64 1>
  %5295 = mul nuw nsw <4 x i64> %5294, %5294
  %5296 = trunc <4 x i64> %5295 to <4 x i32>
  %5297 = sitofp <4 x i32> %5296 to <4 x float>
  %5298 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5297
  %5299 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5292
  %5300 = bitcast float* %5299 to <4 x float>*
  store <4 x float> %5298, <4 x float>* %5300, align 16, !tbaa !9
  %5301 = add nuw i64 %5292, 4
  %5302 = add <4 x i64> %5293, <i64 4, i64 4, i64 4, i64 4>
  %5303 = icmp eq i64 %5301, 32000
  br i1 %5303, label %6516, label %5291, !llvm.loop !155

5304:                                             ; preds = %5287
  %5305 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0))
  %5306 = icmp eq i32 %5305, 0
  br i1 %5306, label %5307, label %5345

5307:                                             ; preds = %5304
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5308

5308:                                             ; preds = %5308, %5307
  %5309 = phi i64 [ 0, %5307 ], [ %5323, %5308 ]
  %5310 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5307 ], [ %5324, %5308 ]
  %5311 = trunc <4 x i64> %5310 to <4 x i32>
  %5312 = add <4 x i32> %5311, <i32 1, i32 1, i32 1, i32 1>
  %5313 = trunc <4 x i64> %5310 to <4 x i32>
  %5314 = add <4 x i32> %5313, <i32 5, i32 5, i32 5, i32 5>
  %5315 = sitofp <4 x i32> %5312 to <4 x float>
  %5316 = sitofp <4 x i32> %5314 to <4 x float>
  %5317 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5315
  %5318 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5316
  %5319 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5309
  %5320 = bitcast float* %5319 to <4 x float>*
  store <4 x float> %5317, <4 x float>* %5320, align 16, !tbaa !9
  %5321 = getelementptr inbounds float, float* %5319, i64 4
  %5322 = bitcast float* %5321 to <4 x float>*
  store <4 x float> %5318, <4 x float>* %5322, align 16, !tbaa !9
  %5323 = add nuw i64 %5309, 8
  %5324 = add <4 x i64> %5310, <i64 8, i64 8, i64 8, i64 8>
  %5325 = icmp eq i64 %5323, 32000
  br i1 %5325, label %5326, label %5308, !llvm.loop !156

5326:                                             ; preds = %5308, %5326
  %5327 = phi i64 [ %5341, %5326 ], [ 0, %5308 ]
  %5328 = phi <4 x i64> [ %5342, %5326 ], [ <i64 0, i64 1, i64 2, i64 3>, %5308 ]
  %5329 = trunc <4 x i64> %5328 to <4 x i32>
  %5330 = add <4 x i32> %5329, <i32 1, i32 1, i32 1, i32 1>
  %5331 = trunc <4 x i64> %5328 to <4 x i32>
  %5332 = add <4 x i32> %5331, <i32 5, i32 5, i32 5, i32 5>
  %5333 = sitofp <4 x i32> %5330 to <4 x float>
  %5334 = sitofp <4 x i32> %5332 to <4 x float>
  %5335 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5333
  %5336 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5334
  %5337 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5327
  %5338 = bitcast float* %5337 to <4 x float>*
  store <4 x float> %5335, <4 x float>* %5338, align 16, !tbaa !9
  %5339 = getelementptr inbounds float, float* %5337, i64 4
  %5340 = bitcast float* %5339 to <4 x float>*
  store <4 x float> %5336, <4 x float>* %5340, align 16, !tbaa !9
  %5341 = add nuw i64 %5327, 8
  %5342 = add <4 x i64> %5328, <i64 8, i64 8, i64 8, i64 8>
  %5343 = icmp eq i64 %5341, 32000
  br i1 %5343, label %5344, label %5326, !llvm.loop !157

5344:                                             ; preds = %5326
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @d to i8*), i8* bitcast ([4 x float]* @.memset_pattern.390 to i8*), i64 128000) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(128000) bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 10666) to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333) to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

5345:                                             ; preds = %5304
  %5346 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0))
  %5347 = icmp eq i32 %5346, 0
  br i1 %5347, label %5348, label %5421

5348:                                             ; preds = %5345
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5349

5349:                                             ; preds = %5349, %5348
  %5350 = phi i64 [ 0, %5348 ], [ %5364, %5349 ]
  %5351 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5348 ], [ %5365, %5349 ]
  %5352 = trunc <4 x i64> %5351 to <4 x i32>
  %5353 = add <4 x i32> %5352, <i32 1, i32 1, i32 1, i32 1>
  %5354 = trunc <4 x i64> %5351 to <4 x i32>
  %5355 = add <4 x i32> %5354, <i32 5, i32 5, i32 5, i32 5>
  %5356 = sitofp <4 x i32> %5353 to <4 x float>
  %5357 = sitofp <4 x i32> %5355 to <4 x float>
  %5358 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5356
  %5359 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5357
  %5360 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5350
  %5361 = bitcast float* %5360 to <4 x float>*
  store <4 x float> %5358, <4 x float>* %5361, align 16, !tbaa !9
  %5362 = getelementptr inbounds float, float* %5360, i64 4
  %5363 = bitcast float* %5362 to <4 x float>*
  store <4 x float> %5359, <4 x float>* %5363, align 16, !tbaa !9
  %5364 = add nuw i64 %5350, 8
  %5365 = add <4 x i64> %5351, <i64 8, i64 8, i64 8, i64 8>
  %5366 = icmp eq i64 %5364, 32000
  br i1 %5366, label %5367, label %5349, !llvm.loop !158

5367:                                             ; preds = %5349, %5367
  %5368 = phi i64 [ %5382, %5367 ], [ 0, %5349 ]
  %5369 = phi <4 x i64> [ %5383, %5367 ], [ <i64 0, i64 1, i64 2, i64 3>, %5349 ]
  %5370 = trunc <4 x i64> %5369 to <4 x i32>
  %5371 = add <4 x i32> %5370, <i32 1, i32 1, i32 1, i32 1>
  %5372 = trunc <4 x i64> %5369 to <4 x i32>
  %5373 = add <4 x i32> %5372, <i32 5, i32 5, i32 5, i32 5>
  %5374 = sitofp <4 x i32> %5371 to <4 x float>
  %5375 = sitofp <4 x i32> %5373 to <4 x float>
  %5376 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5374
  %5377 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5375
  %5378 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5368
  %5379 = bitcast float* %5378 to <4 x float>*
  store <4 x float> %5376, <4 x float>* %5379, align 16, !tbaa !9
  %5380 = getelementptr inbounds float, float* %5378, i64 4
  %5381 = bitcast float* %5380 to <4 x float>*
  store <4 x float> %5377, <4 x float>* %5381, align 16, !tbaa !9
  %5382 = add nuw i64 %5368, 8
  %5383 = add <4 x i64> %5369, <i64 8, i64 8, i64 8, i64 8>
  %5384 = icmp eq i64 %5382, 32000
  br i1 %5384, label %5385, label %5367, !llvm.loop !159

5385:                                             ; preds = %5367, %5385
  %5386 = phi i64 [ %5400, %5385 ], [ 0, %5367 ]
  %5387 = phi <4 x i64> [ %5401, %5385 ], [ <i64 0, i64 1, i64 2, i64 3>, %5367 ]
  %5388 = trunc <4 x i64> %5387 to <4 x i32>
  %5389 = add <4 x i32> %5388, <i32 1, i32 1, i32 1, i32 1>
  %5390 = trunc <4 x i64> %5387 to <4 x i32>
  %5391 = add <4 x i32> %5390, <i32 5, i32 5, i32 5, i32 5>
  %5392 = sitofp <4 x i32> %5389 to <4 x float>
  %5393 = sitofp <4 x i32> %5391 to <4 x float>
  %5394 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5392
  %5395 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5393
  %5396 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %5386
  %5397 = bitcast float* %5396 to <4 x float>*
  store <4 x float> %5394, <4 x float>* %5397, align 16, !tbaa !9
  %5398 = getelementptr inbounds float, float* %5396, i64 4
  %5399 = bitcast float* %5398 to <4 x float>*
  store <4 x float> %5395, <4 x float>* %5399, align 16, !tbaa !9
  %5400 = add nuw i64 %5386, 8
  %5401 = add <4 x i64> %5387, <i64 8, i64 8, i64 8, i64 8>
  %5402 = icmp eq i64 %5400, 32000
  br i1 %5402, label %5403, label %5385, !llvm.loop !160

5403:                                             ; preds = %5385, %5403
  %5404 = phi i64 [ %5418, %5403 ], [ 0, %5385 ]
  %5405 = phi <4 x i64> [ %5419, %5403 ], [ <i64 0, i64 1, i64 2, i64 3>, %5385 ]
  %5406 = trunc <4 x i64> %5405 to <4 x i32>
  %5407 = add <4 x i32> %5406, <i32 1, i32 1, i32 1, i32 1>
  %5408 = trunc <4 x i64> %5405 to <4 x i32>
  %5409 = add <4 x i32> %5408, <i32 5, i32 5, i32 5, i32 5>
  %5410 = sitofp <4 x i32> %5407 to <4 x float>
  %5411 = sitofp <4 x i32> %5409 to <4 x float>
  %5412 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5410
  %5413 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5411
  %5414 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %5404
  %5415 = bitcast float* %5414 to <4 x float>*
  store <4 x float> %5412, <4 x float>* %5415, align 16, !tbaa !9
  %5416 = getelementptr inbounds float, float* %5414, i64 4
  %5417 = bitcast float* %5416 to <4 x float>*
  store <4 x float> %5413, <4 x float>* %5417, align 16, !tbaa !9
  %5418 = add nuw i64 %5404, 8
  %5419 = add <4 x i64> %5405, <i64 8, i64 8, i64 8, i64 8>
  %5420 = icmp eq i64 %5418, 32000
  br i1 %5420, label %6516, label %5403, !llvm.loop !161

5421:                                             ; preds = %5345
  %5422 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0))
  %5423 = icmp eq i32 %5422, 0
  br i1 %5423, label %5424, label %5461

5424:                                             ; preds = %5421
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5425

5425:                                             ; preds = %5425, %5424
  %5426 = phi i64 [ 0, %5424 ], [ %5440, %5425 ]
  %5427 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5424 ], [ %5441, %5425 ]
  %5428 = trunc <4 x i64> %5427 to <4 x i32>
  %5429 = add <4 x i32> %5428, <i32 1, i32 1, i32 1, i32 1>
  %5430 = trunc <4 x i64> %5427 to <4 x i32>
  %5431 = add <4 x i32> %5430, <i32 5, i32 5, i32 5, i32 5>
  %5432 = sitofp <4 x i32> %5429 to <4 x float>
  %5433 = sitofp <4 x i32> %5431 to <4 x float>
  %5434 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5432
  %5435 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5433
  %5436 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5426
  %5437 = bitcast float* %5436 to <4 x float>*
  store <4 x float> %5434, <4 x float>* %5437, align 16, !tbaa !9
  %5438 = getelementptr inbounds float, float* %5436, i64 4
  %5439 = bitcast float* %5438 to <4 x float>*
  store <4 x float> %5435, <4 x float>* %5439, align 16, !tbaa !9
  %5440 = add nuw i64 %5426, 8
  %5441 = add <4 x i64> %5427, <i64 8, i64 8, i64 8, i64 8>
  %5442 = icmp eq i64 %5440, 32000
  br i1 %5442, label %5443, label %5425, !llvm.loop !162

5443:                                             ; preds = %5425, %5443
  %5444 = phi i64 [ %5458, %5443 ], [ 0, %5425 ]
  %5445 = phi <4 x i64> [ %5459, %5443 ], [ <i64 0, i64 1, i64 2, i64 3>, %5425 ]
  %5446 = trunc <4 x i64> %5445 to <4 x i32>
  %5447 = add <4 x i32> %5446, <i32 1, i32 1, i32 1, i32 1>
  %5448 = trunc <4 x i64> %5445 to <4 x i32>
  %5449 = add <4 x i32> %5448, <i32 5, i32 5, i32 5, i32 5>
  %5450 = sitofp <4 x i32> %5447 to <4 x float>
  %5451 = sitofp <4 x i32> %5449 to <4 x float>
  %5452 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5450
  %5453 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5451
  %5454 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5444
  %5455 = bitcast float* %5454 to <4 x float>*
  store <4 x float> %5452, <4 x float>* %5455, align 16, !tbaa !9
  %5456 = getelementptr inbounds float, float* %5454, i64 4
  %5457 = bitcast float* %5456 to <4 x float>*
  store <4 x float> %5453, <4 x float>* %5457, align 16, !tbaa !9
  %5458 = add nuw i64 %5444, 8
  %5459 = add <4 x i64> %5445, <i64 8, i64 8, i64 8, i64 8>
  %5460 = icmp eq i64 %5458, 32000
  br i1 %5460, label %6516, label %5443, !llvm.loop !163

5461:                                             ; preds = %5421
  %5462 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0))
  %5463 = icmp eq i32 %5462, 0
  br i1 %5463, label %5464, label %5500

5464:                                             ; preds = %5461, %5464
  %5465 = phi i64 [ %5479, %5464 ], [ 0, %5461 ]
  %5466 = phi <4 x i64> [ %5480, %5464 ], [ <i64 0, i64 1, i64 2, i64 3>, %5461 ]
  %5467 = trunc <4 x i64> %5466 to <4 x i32>
  %5468 = add <4 x i32> %5467, <i32 1, i32 1, i32 1, i32 1>
  %5469 = trunc <4 x i64> %5466 to <4 x i32>
  %5470 = add <4 x i32> %5469, <i32 5, i32 5, i32 5, i32 5>
  %5471 = sitofp <4 x i32> %5468 to <4 x float>
  %5472 = sitofp <4 x i32> %5470 to <4 x float>
  %5473 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5471
  %5474 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5472
  %5475 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5465
  %5476 = bitcast float* %5475 to <4 x float>*
  store <4 x float> %5473, <4 x float>* %5476, align 16, !tbaa !9
  %5477 = getelementptr inbounds float, float* %5475, i64 4
  %5478 = bitcast float* %5477 to <4 x float>*
  store <4 x float> %5474, <4 x float>* %5478, align 16, !tbaa !9
  %5479 = add nuw i64 %5465, 8
  %5480 = add <4 x i64> %5466, <i64 8, i64 8, i64 8, i64 8>
  %5481 = icmp eq i64 %5479, 32000
  br i1 %5481, label %5482, label %5464, !llvm.loop !164

5482:                                             ; preds = %5464, %5482
  %5483 = phi i64 [ %5497, %5482 ], [ 0, %5464 ]
  %5484 = phi <4 x i64> [ %5498, %5482 ], [ <i64 0, i64 1, i64 2, i64 3>, %5464 ]
  %5485 = trunc <4 x i64> %5484 to <4 x i32>
  %5486 = add <4 x i32> %5485, <i32 1, i32 1, i32 1, i32 1>
  %5487 = trunc <4 x i64> %5484 to <4 x i32>
  %5488 = add <4 x i32> %5487, <i32 5, i32 5, i32 5, i32 5>
  %5489 = sitofp <4 x i32> %5486 to <4 x float>
  %5490 = sitofp <4 x i32> %5488 to <4 x float>
  %5491 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5489
  %5492 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5490
  %5493 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5483
  %5494 = bitcast float* %5493 to <4 x float>*
  store <4 x float> %5491, <4 x float>* %5494, align 16, !tbaa !9
  %5495 = getelementptr inbounds float, float* %5493, i64 4
  %5496 = bitcast float* %5495 to <4 x float>*
  store <4 x float> %5492, <4 x float>* %5496, align 16, !tbaa !9
  %5497 = add nuw i64 %5483, 8
  %5498 = add <4 x i64> %5484, <i64 8, i64 8, i64 8, i64 8>
  %5499 = icmp eq i64 %5497, 32000
  br i1 %5499, label %6516, label %5482, !llvm.loop !165

5500:                                             ; preds = %5461
  %5501 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i64 0, i64 0))
  %5502 = icmp eq i32 %5501, 0
  br i1 %5502, label %5503, label %5504

5503:                                             ; preds = %5500
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.479 to i8*), i64 128000) #19
  br label %6516

5504:                                             ; preds = %5500
  %5505 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0))
  %5506 = icmp eq i32 %5505, 0
  br i1 %5506, label %5507, label %5521

5507:                                             ; preds = %5504
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %5508

5508:                                             ; preds = %5508, %5507
  %5509 = phi i64 [ 0, %5507 ], [ %5518, %5508 ]
  %5510 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5507 ], [ %5519, %5508 ]
  %5511 = add nuw nsw <4 x i64> %5510, <i64 1, i64 1, i64 1, i64 1>
  %5512 = mul nuw nsw <4 x i64> %5511, %5511
  %5513 = trunc <4 x i64> %5512 to <4 x i32>
  %5514 = sitofp <4 x i32> %5513 to <4 x float>
  %5515 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5514
  %5516 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5509
  %5517 = bitcast float* %5516 to <4 x float>*
  store <4 x float> %5515, <4 x float>* %5517, align 16, !tbaa !9
  %5518 = add nuw i64 %5509, 4
  %5519 = add <4 x i64> %5510, <i64 4, i64 4, i64 4, i64 4>
  %5520 = icmp eq i64 %5518, 32000
  br i1 %5520, label %6516, label %5508, !llvm.loop !166

5521:                                             ; preds = %5504
  %5522 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i64 0, i64 0))
  %5523 = icmp eq i32 %5522, 0
  br i1 %5523, label %5524, label %5561

5524:                                             ; preds = %5521
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5525

5525:                                             ; preds = %5525, %5524
  %5526 = phi i64 [ 0, %5524 ], [ %5540, %5525 ]
  %5527 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5524 ], [ %5541, %5525 ]
  %5528 = trunc <4 x i64> %5527 to <4 x i32>
  %5529 = add <4 x i32> %5528, <i32 1, i32 1, i32 1, i32 1>
  %5530 = trunc <4 x i64> %5527 to <4 x i32>
  %5531 = add <4 x i32> %5530, <i32 5, i32 5, i32 5, i32 5>
  %5532 = sitofp <4 x i32> %5529 to <4 x float>
  %5533 = sitofp <4 x i32> %5531 to <4 x float>
  %5534 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5532
  %5535 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5533
  %5536 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %5526
  %5537 = bitcast float* %5536 to <4 x float>*
  store <4 x float> %5534, <4 x float>* %5537, align 16, !tbaa !9
  %5538 = getelementptr inbounds float, float* %5536, i64 4
  %5539 = bitcast float* %5538 to <4 x float>*
  store <4 x float> %5535, <4 x float>* %5539, align 16, !tbaa !9
  %5540 = add nuw i64 %5526, 8
  %5541 = add <4 x i64> %5527, <i64 8, i64 8, i64 8, i64 8>
  %5542 = icmp eq i64 %5540, 32000
  br i1 %5542, label %5543, label %5525, !llvm.loop !167

5543:                                             ; preds = %5525, %5543
  %5544 = phi i64 [ %5558, %5543 ], [ 0, %5525 ]
  %5545 = phi <4 x i64> [ %5559, %5543 ], [ <i64 0, i64 1, i64 2, i64 3>, %5525 ]
  %5546 = trunc <4 x i64> %5545 to <4 x i32>
  %5547 = add <4 x i32> %5546, <i32 1, i32 1, i32 1, i32 1>
  %5548 = trunc <4 x i64> %5545 to <4 x i32>
  %5549 = add <4 x i32> %5548, <i32 5, i32 5, i32 5, i32 5>
  %5550 = sitofp <4 x i32> %5547 to <4 x float>
  %5551 = sitofp <4 x i32> %5549 to <4 x float>
  %5552 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5550
  %5553 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5551
  %5554 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %5544
  %5555 = bitcast float* %5554 to <4 x float>*
  store <4 x float> %5552, <4 x float>* %5555, align 16, !tbaa !9
  %5556 = getelementptr inbounds float, float* %5554, i64 4
  %5557 = bitcast float* %5556 to <4 x float>*
  store <4 x float> %5553, <4 x float>* %5557, align 16, !tbaa !9
  %5558 = add nuw i64 %5544, 8
  %5559 = add <4 x i64> %5545, <i64 8, i64 8, i64 8, i64 8>
  %5560 = icmp eq i64 %5558, 32000
  br i1 %5560, label %6516, label %5543, !llvm.loop !168

5561:                                             ; preds = %5521
  %5562 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0))
  %5563 = icmp eq i32 %5562, 0
  br i1 %5563, label %5564, label %5619

5564:                                             ; preds = %5561
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5565

5565:                                             ; preds = %5565, %5564
  %5566 = phi i64 [ 0, %5564 ], [ %5580, %5565 ]
  %5567 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5564 ], [ %5581, %5565 ]
  %5568 = trunc <4 x i64> %5567 to <4 x i32>
  %5569 = add <4 x i32> %5568, <i32 1, i32 1, i32 1, i32 1>
  %5570 = trunc <4 x i64> %5567 to <4 x i32>
  %5571 = add <4 x i32> %5570, <i32 5, i32 5, i32 5, i32 5>
  %5572 = sitofp <4 x i32> %5569 to <4 x float>
  %5573 = sitofp <4 x i32> %5571 to <4 x float>
  %5574 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5572
  %5575 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5573
  %5576 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5566
  %5577 = bitcast float* %5576 to <4 x float>*
  store <4 x float> %5574, <4 x float>* %5577, align 16, !tbaa !9
  %5578 = getelementptr inbounds float, float* %5576, i64 4
  %5579 = bitcast float* %5578 to <4 x float>*
  store <4 x float> %5575, <4 x float>* %5579, align 16, !tbaa !9
  %5580 = add nuw i64 %5566, 8
  %5581 = add <4 x i64> %5567, <i64 8, i64 8, i64 8, i64 8>
  %5582 = icmp eq i64 %5580, 32000
  br i1 %5582, label %5583, label %5565, !llvm.loop !169

5583:                                             ; preds = %5565, %5583
  %5584 = phi i64 [ %5598, %5583 ], [ 0, %5565 ]
  %5585 = phi <4 x i64> [ %5599, %5583 ], [ <i64 0, i64 1, i64 2, i64 3>, %5565 ]
  %5586 = trunc <4 x i64> %5585 to <4 x i32>
  %5587 = add <4 x i32> %5586, <i32 1, i32 1, i32 1, i32 1>
  %5588 = trunc <4 x i64> %5585 to <4 x i32>
  %5589 = add <4 x i32> %5588, <i32 5, i32 5, i32 5, i32 5>
  %5590 = sitofp <4 x i32> %5587 to <4 x float>
  %5591 = sitofp <4 x i32> %5589 to <4 x float>
  %5592 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5590
  %5593 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5591
  %5594 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5584
  %5595 = bitcast float* %5594 to <4 x float>*
  store <4 x float> %5592, <4 x float>* %5595, align 16, !tbaa !9
  %5596 = getelementptr inbounds float, float* %5594, i64 4
  %5597 = bitcast float* %5596 to <4 x float>*
  store <4 x float> %5593, <4 x float>* %5597, align 16, !tbaa !9
  %5598 = add nuw i64 %5584, 8
  %5599 = add <4 x i64> %5585, <i64 8, i64 8, i64 8, i64 8>
  %5600 = icmp eq i64 %5598, 32000
  br i1 %5600, label %5601, label %5583, !llvm.loop !170

5601:                                             ; preds = %5583, %5601
  %5602 = phi i64 [ %5616, %5601 ], [ 0, %5583 ]
  %5603 = phi <4 x i64> [ %5617, %5601 ], [ <i64 0, i64 1, i64 2, i64 3>, %5583 ]
  %5604 = trunc <4 x i64> %5603 to <4 x i32>
  %5605 = add <4 x i32> %5604, <i32 1, i32 1, i32 1, i32 1>
  %5606 = trunc <4 x i64> %5603 to <4 x i32>
  %5607 = add <4 x i32> %5606, <i32 5, i32 5, i32 5, i32 5>
  %5608 = sitofp <4 x i32> %5605 to <4 x float>
  %5609 = sitofp <4 x i32> %5607 to <4 x float>
  %5610 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5608
  %5611 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5609
  %5612 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %5602
  %5613 = bitcast float* %5612 to <4 x float>*
  store <4 x float> %5610, <4 x float>* %5613, align 16, !tbaa !9
  %5614 = getelementptr inbounds float, float* %5612, i64 4
  %5615 = bitcast float* %5614 to <4 x float>*
  store <4 x float> %5611, <4 x float>* %5615, align 16, !tbaa !9
  %5616 = add nuw i64 %5602, 8
  %5617 = add <4 x i64> %5603, <i64 8, i64 8, i64 8, i64 8>
  %5618 = icmp eq i64 %5616, 32000
  br i1 %5618, label %6516, label %5601, !llvm.loop !171

5619:                                             ; preds = %5561
  %5620 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i64 0, i64 0))
  %5621 = icmp eq i32 %5620, 0
  br i1 %5621, label %5622, label %5659

5622:                                             ; preds = %5619
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5623

5623:                                             ; preds = %5623, %5622
  %5624 = phi i64 [ 0, %5622 ], [ %5638, %5623 ]
  %5625 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5622 ], [ %5639, %5623 ]
  %5626 = trunc <4 x i64> %5625 to <4 x i32>
  %5627 = add <4 x i32> %5626, <i32 1, i32 1, i32 1, i32 1>
  %5628 = trunc <4 x i64> %5625 to <4 x i32>
  %5629 = add <4 x i32> %5628, <i32 5, i32 5, i32 5, i32 5>
  %5630 = sitofp <4 x i32> %5627 to <4 x float>
  %5631 = sitofp <4 x i32> %5629 to <4 x float>
  %5632 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5630
  %5633 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5631
  %5634 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5624
  %5635 = bitcast float* %5634 to <4 x float>*
  store <4 x float> %5632, <4 x float>* %5635, align 16, !tbaa !9
  %5636 = getelementptr inbounds float, float* %5634, i64 4
  %5637 = bitcast float* %5636 to <4 x float>*
  store <4 x float> %5633, <4 x float>* %5637, align 16, !tbaa !9
  %5638 = add nuw i64 %5624, 8
  %5639 = add <4 x i64> %5625, <i64 8, i64 8, i64 8, i64 8>
  %5640 = icmp eq i64 %5638, 32000
  br i1 %5640, label %5641, label %5623, !llvm.loop !172

5641:                                             ; preds = %5623, %5641
  %5642 = phi i64 [ %5656, %5641 ], [ 0, %5623 ]
  %5643 = phi <4 x i64> [ %5657, %5641 ], [ <i64 0, i64 1, i64 2, i64 3>, %5623 ]
  %5644 = trunc <4 x i64> %5643 to <4 x i32>
  %5645 = add <4 x i32> %5644, <i32 1, i32 1, i32 1, i32 1>
  %5646 = trunc <4 x i64> %5643 to <4 x i32>
  %5647 = add <4 x i32> %5646, <i32 5, i32 5, i32 5, i32 5>
  %5648 = sitofp <4 x i32> %5645 to <4 x float>
  %5649 = sitofp <4 x i32> %5647 to <4 x float>
  %5650 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5648
  %5651 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5649
  %5652 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5642
  %5653 = bitcast float* %5652 to <4 x float>*
  store <4 x float> %5650, <4 x float>* %5653, align 16, !tbaa !9
  %5654 = getelementptr inbounds float, float* %5652, i64 4
  %5655 = bitcast float* %5654 to <4 x float>*
  store <4 x float> %5651, <4 x float>* %5655, align 16, !tbaa !9
  %5656 = add nuw i64 %5642, 8
  %5657 = add <4 x i64> %5643, <i64 8, i64 8, i64 8, i64 8>
  %5658 = icmp eq i64 %5656, 32000
  br i1 %5658, label %6516, label %5641, !llvm.loop !173

5659:                                             ; preds = %5619
  %5660 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0))
  %5661 = icmp eq i32 %5660, 0
  br i1 %5661, label %5662, label %5699

5662:                                             ; preds = %5659
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5663

5663:                                             ; preds = %5663, %5662
  %5664 = phi i64 [ 0, %5662 ], [ %5678, %5663 ]
  %5665 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5662 ], [ %5679, %5663 ]
  %5666 = trunc <4 x i64> %5665 to <4 x i32>
  %5667 = add <4 x i32> %5666, <i32 1, i32 1, i32 1, i32 1>
  %5668 = trunc <4 x i64> %5665 to <4 x i32>
  %5669 = add <4 x i32> %5668, <i32 5, i32 5, i32 5, i32 5>
  %5670 = sitofp <4 x i32> %5667 to <4 x float>
  %5671 = sitofp <4 x i32> %5669 to <4 x float>
  %5672 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5670
  %5673 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5671
  %5674 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5664
  %5675 = bitcast float* %5674 to <4 x float>*
  store <4 x float> %5672, <4 x float>* %5675, align 16, !tbaa !9
  %5676 = getelementptr inbounds float, float* %5674, i64 4
  %5677 = bitcast float* %5676 to <4 x float>*
  store <4 x float> %5673, <4 x float>* %5677, align 16, !tbaa !9
  %5678 = add nuw i64 %5664, 8
  %5679 = add <4 x i64> %5665, <i64 8, i64 8, i64 8, i64 8>
  %5680 = icmp eq i64 %5678, 32000
  br i1 %5680, label %5681, label %5663, !llvm.loop !174

5681:                                             ; preds = %5663, %5681
  %5682 = phi i64 [ %5696, %5681 ], [ 0, %5663 ]
  %5683 = phi <4 x i64> [ %5697, %5681 ], [ <i64 0, i64 1, i64 2, i64 3>, %5663 ]
  %5684 = trunc <4 x i64> %5683 to <4 x i32>
  %5685 = add <4 x i32> %5684, <i32 1, i32 1, i32 1, i32 1>
  %5686 = trunc <4 x i64> %5683 to <4 x i32>
  %5687 = add <4 x i32> %5686, <i32 5, i32 5, i32 5, i32 5>
  %5688 = sitofp <4 x i32> %5685 to <4 x float>
  %5689 = sitofp <4 x i32> %5687 to <4 x float>
  %5690 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5688
  %5691 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5689
  %5692 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %5682
  %5693 = bitcast float* %5692 to <4 x float>*
  store <4 x float> %5690, <4 x float>* %5693, align 16, !tbaa !9
  %5694 = getelementptr inbounds float, float* %5692, i64 4
  %5695 = bitcast float* %5694 to <4 x float>*
  store <4 x float> %5691, <4 x float>* %5695, align 16, !tbaa !9
  %5696 = add nuw i64 %5682, 8
  %5697 = add <4 x i64> %5683, <i64 8, i64 8, i64 8, i64 8>
  %5698 = icmp eq i64 %5696, 32000
  br i1 %5698, label %6516, label %5681, !llvm.loop !175

5699:                                             ; preds = %5659
  %5700 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i64 0, i64 0))
  %5701 = icmp eq i32 %5700, 0
  br i1 %5701, label %5702, label %5721

5702:                                             ; preds = %5699
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5703

5703:                                             ; preds = %5703, %5702
  %5704 = phi i64 [ 0, %5702 ], [ %5718, %5703 ]
  %5705 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5702 ], [ %5719, %5703 ]
  %5706 = trunc <4 x i64> %5705 to <4 x i32>
  %5707 = add <4 x i32> %5706, <i32 1, i32 1, i32 1, i32 1>
  %5708 = trunc <4 x i64> %5705 to <4 x i32>
  %5709 = add <4 x i32> %5708, <i32 5, i32 5, i32 5, i32 5>
  %5710 = sitofp <4 x i32> %5707 to <4 x float>
  %5711 = sitofp <4 x i32> %5709 to <4 x float>
  %5712 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5710
  %5713 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5711
  %5714 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5704
  %5715 = bitcast float* %5714 to <4 x float>*
  store <4 x float> %5712, <4 x float>* %5715, align 16, !tbaa !9
  %5716 = getelementptr inbounds float, float* %5714, i64 4
  %5717 = bitcast float* %5716 to <4 x float>*
  store <4 x float> %5713, <4 x float>* %5717, align 16, !tbaa !9
  %5718 = add nuw i64 %5704, 8
  %5719 = add <4 x i64> %5705, <i64 8, i64 8, i64 8, i64 8>
  %5720 = icmp eq i64 %5718, 32000
  br i1 %5720, label %6516, label %5703, !llvm.loop !176

5721:                                             ; preds = %5699
  %5722 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i64 0, i64 0))
  %5723 = icmp eq i32 %5722, 0
  br i1 %5723, label %5724, label %5738

5724:                                             ; preds = %5721
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5725

5725:                                             ; preds = %5725, %5724
  %5726 = phi i64 [ 0, %5724 ], [ %5735, %5725 ]
  %5727 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5724 ], [ %5736, %5725 ]
  %5728 = add nuw nsw <4 x i64> %5727, <i64 1, i64 1, i64 1, i64 1>
  %5729 = mul nuw nsw <4 x i64> %5728, %5728
  %5730 = trunc <4 x i64> %5729 to <4 x i32>
  %5731 = sitofp <4 x i32> %5730 to <4 x float>
  %5732 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5731
  %5733 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5726
  %5734 = bitcast float* %5733 to <4 x float>*
  store <4 x float> %5732, <4 x float>* %5734, align 16, !tbaa !9
  %5735 = add nuw i64 %5726, 4
  %5736 = add <4 x i64> %5727, <i64 4, i64 4, i64 4, i64 4>
  %5737 = icmp eq i64 %5735, 32000
  br i1 %5737, label %6516, label %5725, !llvm.loop !177

5738:                                             ; preds = %5721
  %5739 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0))
  %5740 = icmp eq i32 %5739, 0
  br i1 %5740, label %5741, label %5778

5741:                                             ; preds = %5738
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5742

5742:                                             ; preds = %5742, %5741
  %5743 = phi i64 [ 0, %5741 ], [ %5757, %5742 ]
  %5744 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5741 ], [ %5758, %5742 ]
  %5745 = trunc <4 x i64> %5744 to <4 x i32>
  %5746 = add <4 x i32> %5745, <i32 1, i32 1, i32 1, i32 1>
  %5747 = trunc <4 x i64> %5744 to <4 x i32>
  %5748 = add <4 x i32> %5747, <i32 5, i32 5, i32 5, i32 5>
  %5749 = sitofp <4 x i32> %5746 to <4 x float>
  %5750 = sitofp <4 x i32> %5748 to <4 x float>
  %5751 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5749
  %5752 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5750
  %5753 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5743
  %5754 = bitcast float* %5753 to <4 x float>*
  store <4 x float> %5751, <4 x float>* %5754, align 16, !tbaa !9
  %5755 = getelementptr inbounds float, float* %5753, i64 4
  %5756 = bitcast float* %5755 to <4 x float>*
  store <4 x float> %5752, <4 x float>* %5756, align 16, !tbaa !9
  %5757 = add nuw i64 %5743, 8
  %5758 = add <4 x i64> %5744, <i64 8, i64 8, i64 8, i64 8>
  %5759 = icmp eq i64 %5757, 32000
  br i1 %5759, label %5760, label %5742, !llvm.loop !178

5760:                                             ; preds = %5742, %5760
  %5761 = phi i64 [ %5775, %5760 ], [ 0, %5742 ]
  %5762 = phi <4 x i64> [ %5776, %5760 ], [ <i64 0, i64 1, i64 2, i64 3>, %5742 ]
  %5763 = trunc <4 x i64> %5762 to <4 x i32>
  %5764 = add <4 x i32> %5763, <i32 1, i32 1, i32 1, i32 1>
  %5765 = trunc <4 x i64> %5762 to <4 x i32>
  %5766 = add <4 x i32> %5765, <i32 5, i32 5, i32 5, i32 5>
  %5767 = sitofp <4 x i32> %5764 to <4 x float>
  %5768 = sitofp <4 x i32> %5766 to <4 x float>
  %5769 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5767
  %5770 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5768
  %5771 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %5761
  %5772 = bitcast float* %5771 to <4 x float>*
  store <4 x float> %5769, <4 x float>* %5772, align 16, !tbaa !9
  %5773 = getelementptr inbounds float, float* %5771, i64 4
  %5774 = bitcast float* %5773 to <4 x float>*
  store <4 x float> %5770, <4 x float>* %5774, align 16, !tbaa !9
  %5775 = add nuw i64 %5761, 8
  %5776 = add <4 x i64> %5762, <i64 8, i64 8, i64 8, i64 8>
  %5777 = icmp eq i64 %5775, 32000
  br i1 %5777, label %6516, label %5760, !llvm.loop !179

5778:                                             ; preds = %5738
  %5779 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i64 0, i64 0))
  %5780 = icmp eq i32 %5779, 0
  br i1 %5780, label %5781, label %5817

5781:                                             ; preds = %5778, %5781
  %5782 = phi i64 [ %5796, %5781 ], [ 0, %5778 ]
  %5783 = phi <4 x i64> [ %5797, %5781 ], [ <i64 0, i64 1, i64 2, i64 3>, %5778 ]
  %5784 = trunc <4 x i64> %5783 to <4 x i32>
  %5785 = add <4 x i32> %5784, <i32 1, i32 1, i32 1, i32 1>
  %5786 = trunc <4 x i64> %5783 to <4 x i32>
  %5787 = add <4 x i32> %5786, <i32 5, i32 5, i32 5, i32 5>
  %5788 = sitofp <4 x i32> %5785 to <4 x float>
  %5789 = sitofp <4 x i32> %5787 to <4 x float>
  %5790 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5788
  %5791 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5789
  %5792 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5782
  %5793 = bitcast float* %5792 to <4 x float>*
  store <4 x float> %5790, <4 x float>* %5793, align 16, !tbaa !9
  %5794 = getelementptr inbounds float, float* %5792, i64 4
  %5795 = bitcast float* %5794 to <4 x float>*
  store <4 x float> %5791, <4 x float>* %5795, align 16, !tbaa !9
  %5796 = add nuw i64 %5782, 8
  %5797 = add <4 x i64> %5783, <i64 8, i64 8, i64 8, i64 8>
  %5798 = icmp eq i64 %5796, 32000
  br i1 %5798, label %5799, label %5781, !llvm.loop !180

5799:                                             ; preds = %5781, %5799
  %5800 = phi i64 [ %5814, %5799 ], [ 0, %5781 ]
  %5801 = phi <4 x i64> [ %5815, %5799 ], [ <i64 0, i64 1, i64 2, i64 3>, %5781 ]
  %5802 = trunc <4 x i64> %5801 to <4 x i32>
  %5803 = add <4 x i32> %5802, <i32 1, i32 1, i32 1, i32 1>
  %5804 = trunc <4 x i64> %5801 to <4 x i32>
  %5805 = add <4 x i32> %5804, <i32 5, i32 5, i32 5, i32 5>
  %5806 = sitofp <4 x i32> %5803 to <4 x float>
  %5807 = sitofp <4 x i32> %5805 to <4 x float>
  %5808 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5806
  %5809 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5807
  %5810 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %5800
  %5811 = bitcast float* %5810 to <4 x float>*
  store <4 x float> %5808, <4 x float>* %5811, align 16, !tbaa !9
  %5812 = getelementptr inbounds float, float* %5810, i64 4
  %5813 = bitcast float* %5812 to <4 x float>*
  store <4 x float> %5809, <4 x float>* %5813, align 16, !tbaa !9
  %5814 = add nuw i64 %5800, 8
  %5815 = add <4 x i64> %5801, <i64 8, i64 8, i64 8, i64 8>
  %5816 = icmp eq i64 %5814, 32000
  br i1 %5816, label %6516, label %5799, !llvm.loop !181

5817:                                             ; preds = %5778
  %5818 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i64 0, i64 0))
  %5819 = icmp eq i32 %5818, 0
  br i1 %5819, label %5820, label %5977

5820:                                             ; preds = %5817, %5820
  %5821 = phi i64 [ %5835, %5820 ], [ 0, %5817 ]
  %5822 = phi <4 x i64> [ %5836, %5820 ], [ <i64 0, i64 1, i64 2, i64 3>, %5817 ]
  %5823 = trunc <4 x i64> %5822 to <4 x i32>
  %5824 = add <4 x i32> %5823, <i32 1, i32 1, i32 1, i32 1>
  %5825 = trunc <4 x i64> %5822 to <4 x i32>
  %5826 = add <4 x i32> %5825, <i32 5, i32 5, i32 5, i32 5>
  %5827 = sitofp <4 x i32> %5824 to <4 x float>
  %5828 = sitofp <4 x i32> %5826 to <4 x float>
  %5829 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5827
  %5830 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5828
  %5831 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %5821
  %5832 = bitcast float* %5831 to <4 x float>*
  store <4 x float> %5829, <4 x float>* %5832, align 16, !tbaa !9
  %5833 = getelementptr inbounds float, float* %5831, i64 4
  %5834 = bitcast float* %5833 to <4 x float>*
  store <4 x float> %5830, <4 x float>* %5834, align 16, !tbaa !9
  %5835 = add nuw i64 %5821, 8
  %5836 = add <4 x i64> %5822, <i64 8, i64 8, i64 8, i64 8>
  %5837 = icmp eq i64 %5835, 32000
  br i1 %5837, label %5838, label %5820, !llvm.loop !182

5838:                                             ; preds = %5820, %5838
  %5839 = phi i64 [ %5840, %5838 ], [ 0, %5820 ]
  %5840 = add nuw nsw i64 %5839, 1
  %5841 = trunc i64 %5840 to i32
  %5842 = sitofp i32 %5841 to float
  %5843 = fdiv float 1.000000e+00, %5842
  %5844 = insertelement <4 x float> poison, float %5843, i32 0
  %5845 = shufflevector <4 x float> %5844, <4 x float> poison, <4 x i32> zeroinitializer
  %5846 = insertelement <4 x float> poison, float %5843, i32 0
  %5847 = shufflevector <4 x float> %5846, <4 x float> poison, <4 x i32> zeroinitializer
  %5848 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 0
  %5849 = bitcast float* %5848 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5849, align 16, !tbaa !9
  %5850 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 4
  %5851 = bitcast float* %5850 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5851, align 16, !tbaa !9
  %5852 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 8
  %5853 = bitcast float* %5852 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5853, align 16, !tbaa !9
  %5854 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 12
  %5855 = bitcast float* %5854 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5855, align 16, !tbaa !9
  %5856 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 16
  %5857 = bitcast float* %5856 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5857, align 16, !tbaa !9
  %5858 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 20
  %5859 = bitcast float* %5858 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5859, align 16, !tbaa !9
  %5860 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 24
  %5861 = bitcast float* %5860 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5861, align 16, !tbaa !9
  %5862 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 28
  %5863 = bitcast float* %5862 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5863, align 16, !tbaa !9
  %5864 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 32
  %5865 = bitcast float* %5864 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5865, align 16, !tbaa !9
  %5866 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 36
  %5867 = bitcast float* %5866 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5867, align 16, !tbaa !9
  %5868 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 40
  %5869 = bitcast float* %5868 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5869, align 16, !tbaa !9
  %5870 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 44
  %5871 = bitcast float* %5870 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5871, align 16, !tbaa !9
  %5872 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 48
  %5873 = bitcast float* %5872 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5873, align 16, !tbaa !9
  %5874 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 52
  %5875 = bitcast float* %5874 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5875, align 16, !tbaa !9
  %5876 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 56
  %5877 = bitcast float* %5876 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5877, align 16, !tbaa !9
  %5878 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 60
  %5879 = bitcast float* %5878 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5879, align 16, !tbaa !9
  %5880 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 64
  %5881 = bitcast float* %5880 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5881, align 16, !tbaa !9
  %5882 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 68
  %5883 = bitcast float* %5882 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5883, align 16, !tbaa !9
  %5884 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 72
  %5885 = bitcast float* %5884 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5885, align 16, !tbaa !9
  %5886 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 76
  %5887 = bitcast float* %5886 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5887, align 16, !tbaa !9
  %5888 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 80
  %5889 = bitcast float* %5888 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5889, align 16, !tbaa !9
  %5890 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 84
  %5891 = bitcast float* %5890 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5891, align 16, !tbaa !9
  %5892 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 88
  %5893 = bitcast float* %5892 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5893, align 16, !tbaa !9
  %5894 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 92
  %5895 = bitcast float* %5894 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5895, align 16, !tbaa !9
  %5896 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 96
  %5897 = bitcast float* %5896 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5897, align 16, !tbaa !9
  %5898 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 100
  %5899 = bitcast float* %5898 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5899, align 16, !tbaa !9
  %5900 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 104
  %5901 = bitcast float* %5900 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5901, align 16, !tbaa !9
  %5902 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 108
  %5903 = bitcast float* %5902 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5903, align 16, !tbaa !9
  %5904 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 112
  %5905 = bitcast float* %5904 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5905, align 16, !tbaa !9
  %5906 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 116
  %5907 = bitcast float* %5906 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5907, align 16, !tbaa !9
  %5908 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 120
  %5909 = bitcast float* %5908 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5909, align 16, !tbaa !9
  %5910 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 124
  %5911 = bitcast float* %5910 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5911, align 16, !tbaa !9
  %5912 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 128
  %5913 = bitcast float* %5912 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5913, align 16, !tbaa !9
  %5914 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 132
  %5915 = bitcast float* %5914 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5915, align 16, !tbaa !9
  %5916 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 136
  %5917 = bitcast float* %5916 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5917, align 16, !tbaa !9
  %5918 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 140
  %5919 = bitcast float* %5918 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5919, align 16, !tbaa !9
  %5920 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 144
  %5921 = bitcast float* %5920 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5921, align 16, !tbaa !9
  %5922 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 148
  %5923 = bitcast float* %5922 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5923, align 16, !tbaa !9
  %5924 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 152
  %5925 = bitcast float* %5924 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5925, align 16, !tbaa !9
  %5926 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 156
  %5927 = bitcast float* %5926 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5927, align 16, !tbaa !9
  %5928 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 160
  %5929 = bitcast float* %5928 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5929, align 16, !tbaa !9
  %5930 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 164
  %5931 = bitcast float* %5930 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5931, align 16, !tbaa !9
  %5932 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 168
  %5933 = bitcast float* %5932 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5933, align 16, !tbaa !9
  %5934 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 172
  %5935 = bitcast float* %5934 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5935, align 16, !tbaa !9
  %5936 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 176
  %5937 = bitcast float* %5936 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5937, align 16, !tbaa !9
  %5938 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 180
  %5939 = bitcast float* %5938 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5939, align 16, !tbaa !9
  %5940 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 184
  %5941 = bitcast float* %5940 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5941, align 16, !tbaa !9
  %5942 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 188
  %5943 = bitcast float* %5942 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5943, align 16, !tbaa !9
  %5944 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 192
  %5945 = bitcast float* %5944 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5945, align 16, !tbaa !9
  %5946 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 196
  %5947 = bitcast float* %5946 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5947, align 16, !tbaa !9
  %5948 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 200
  %5949 = bitcast float* %5948 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5949, align 16, !tbaa !9
  %5950 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 204
  %5951 = bitcast float* %5950 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5951, align 16, !tbaa !9
  %5952 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 208
  %5953 = bitcast float* %5952 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5953, align 16, !tbaa !9
  %5954 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 212
  %5955 = bitcast float* %5954 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5955, align 16, !tbaa !9
  %5956 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 216
  %5957 = bitcast float* %5956 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5957, align 16, !tbaa !9
  %5958 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 220
  %5959 = bitcast float* %5958 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5959, align 16, !tbaa !9
  %5960 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 224
  %5961 = bitcast float* %5960 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5961, align 16, !tbaa !9
  %5962 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 228
  %5963 = bitcast float* %5962 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5963, align 16, !tbaa !9
  %5964 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 232
  %5965 = bitcast float* %5964 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5965, align 16, !tbaa !9
  %5966 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 236
  %5967 = bitcast float* %5966 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5967, align 16, !tbaa !9
  %5968 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 240
  %5969 = bitcast float* %5968 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5969, align 16, !tbaa !9
  %5970 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 244
  %5971 = bitcast float* %5970 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5971, align 16, !tbaa !9
  %5972 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 248
  %5973 = bitcast float* %5972 to <4 x float>*
  store <4 x float> %5845, <4 x float>* %5973, align 16, !tbaa !9
  %5974 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %5839, i64 252
  %5975 = bitcast float* %5974 to <4 x float>*
  store <4 x float> %5847, <4 x float>* %5975, align 16, !tbaa !9
  %5976 = icmp eq i64 %5840, 256
  br i1 %5976, label %6516, label %5838, !llvm.loop !23

5977:                                             ; preds = %5817
  %5978 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0))
  %5979 = icmp eq i32 %5978, 0
  br i1 %5979, label %5980, label %6017

5980:                                             ; preds = %5977
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %5981

5981:                                             ; preds = %5981, %5980
  %5982 = phi i64 [ 0, %5980 ], [ %5996, %5981 ]
  %5983 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %5980 ], [ %5997, %5981 ]
  %5984 = trunc <4 x i64> %5983 to <4 x i32>
  %5985 = add <4 x i32> %5984, <i32 1, i32 1, i32 1, i32 1>
  %5986 = trunc <4 x i64> %5983 to <4 x i32>
  %5987 = add <4 x i32> %5986, <i32 5, i32 5, i32 5, i32 5>
  %5988 = sitofp <4 x i32> %5985 to <4 x float>
  %5989 = sitofp <4 x i32> %5987 to <4 x float>
  %5990 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5988
  %5991 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5989
  %5992 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %5982
  %5993 = bitcast float* %5992 to <4 x float>*
  store <4 x float> %5990, <4 x float>* %5993, align 16, !tbaa !9
  %5994 = getelementptr inbounds float, float* %5992, i64 4
  %5995 = bitcast float* %5994 to <4 x float>*
  store <4 x float> %5991, <4 x float>* %5995, align 16, !tbaa !9
  %5996 = add nuw i64 %5982, 8
  %5997 = add <4 x i64> %5983, <i64 8, i64 8, i64 8, i64 8>
  %5998 = icmp eq i64 %5996, 32000
  br i1 %5998, label %5999, label %5981, !llvm.loop !183

5999:                                             ; preds = %5981, %5999
  %6000 = phi i64 [ %6014, %5999 ], [ 0, %5981 ]
  %6001 = phi <4 x i64> [ %6015, %5999 ], [ <i64 0, i64 1, i64 2, i64 3>, %5981 ]
  %6002 = trunc <4 x i64> %6001 to <4 x i32>
  %6003 = add <4 x i32> %6002, <i32 1, i32 1, i32 1, i32 1>
  %6004 = trunc <4 x i64> %6001 to <4 x i32>
  %6005 = add <4 x i32> %6004, <i32 5, i32 5, i32 5, i32 5>
  %6006 = sitofp <4 x i32> %6003 to <4 x float>
  %6007 = sitofp <4 x i32> %6005 to <4 x float>
  %6008 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6006
  %6009 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6007
  %6010 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6000
  %6011 = bitcast float* %6010 to <4 x float>*
  store <4 x float> %6008, <4 x float>* %6011, align 16, !tbaa !9
  %6012 = getelementptr inbounds float, float* %6010, i64 4
  %6013 = bitcast float* %6012 to <4 x float>*
  store <4 x float> %6009, <4 x float>* %6013, align 16, !tbaa !9
  %6014 = add nuw i64 %6000, 8
  %6015 = add <4 x i64> %6001, <i64 8, i64 8, i64 8, i64 8>
  %6016 = icmp eq i64 %6014, 32000
  br i1 %6016, label %6516, label %5999, !llvm.loop !184

6017:                                             ; preds = %5977
  %6018 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i64 0, i64 0))
  %6019 = icmp eq i32 %6018, 0
  br i1 %6019, label %6020, label %6057

6020:                                             ; preds = %6017
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6021

6021:                                             ; preds = %6021, %6020
  %6022 = phi i64 [ 0, %6020 ], [ %6036, %6021 ]
  %6023 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6020 ], [ %6037, %6021 ]
  %6024 = trunc <4 x i64> %6023 to <4 x i32>
  %6025 = add <4 x i32> %6024, <i32 1, i32 1, i32 1, i32 1>
  %6026 = trunc <4 x i64> %6023 to <4 x i32>
  %6027 = add <4 x i32> %6026, <i32 5, i32 5, i32 5, i32 5>
  %6028 = sitofp <4 x i32> %6025 to <4 x float>
  %6029 = sitofp <4 x i32> %6027 to <4 x float>
  %6030 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6028
  %6031 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6029
  %6032 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6022
  %6033 = bitcast float* %6032 to <4 x float>*
  store <4 x float> %6030, <4 x float>* %6033, align 16, !tbaa !9
  %6034 = getelementptr inbounds float, float* %6032, i64 4
  %6035 = bitcast float* %6034 to <4 x float>*
  store <4 x float> %6031, <4 x float>* %6035, align 16, !tbaa !9
  %6036 = add nuw i64 %6022, 8
  %6037 = add <4 x i64> %6023, <i64 8, i64 8, i64 8, i64 8>
  %6038 = icmp eq i64 %6036, 32000
  br i1 %6038, label %6039, label %6021, !llvm.loop !185

6039:                                             ; preds = %6021, %6039
  %6040 = phi i64 [ %6054, %6039 ], [ 0, %6021 ]
  %6041 = phi <4 x i64> [ %6055, %6039 ], [ <i64 0, i64 1, i64 2, i64 3>, %6021 ]
  %6042 = trunc <4 x i64> %6041 to <4 x i32>
  %6043 = add <4 x i32> %6042, <i32 1, i32 1, i32 1, i32 1>
  %6044 = trunc <4 x i64> %6041 to <4 x i32>
  %6045 = add <4 x i32> %6044, <i32 5, i32 5, i32 5, i32 5>
  %6046 = sitofp <4 x i32> %6043 to <4 x float>
  %6047 = sitofp <4 x i32> %6045 to <4 x float>
  %6048 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6046
  %6049 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6047
  %6050 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6040
  %6051 = bitcast float* %6050 to <4 x float>*
  store <4 x float> %6048, <4 x float>* %6051, align 16, !tbaa !9
  %6052 = getelementptr inbounds float, float* %6050, i64 4
  %6053 = bitcast float* %6052 to <4 x float>*
  store <4 x float> %6049, <4 x float>* %6053, align 16, !tbaa !9
  %6054 = add nuw i64 %6040, 8
  %6055 = add <4 x i64> %6041, <i64 8, i64 8, i64 8, i64 8>
  %6056 = icmp eq i64 %6054, 32000
  br i1 %6056, label %6516, label %6039, !llvm.loop !186

6057:                                             ; preds = %6017
  %6058 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0))
  %6059 = icmp eq i32 %6058, 0
  br i1 %6059, label %6060, label %6074

6060:                                             ; preds = %6057
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %6061

6061:                                             ; preds = %6061, %6060
  %6062 = phi i64 [ 0, %6060 ], [ %6071, %6061 ]
  %6063 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6060 ], [ %6072, %6061 ]
  %6064 = add nuw nsw <4 x i64> %6063, <i64 1, i64 1, i64 1, i64 1>
  %6065 = mul nuw nsw <4 x i64> %6064, %6064
  %6066 = trunc <4 x i64> %6065 to <4 x i32>
  %6067 = sitofp <4 x i32> %6066 to <4 x float>
  %6068 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6067
  %6069 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6062
  %6070 = bitcast float* %6069 to <4 x float>*
  store <4 x float> %6068, <4 x float>* %6070, align 16, !tbaa !9
  %6071 = add nuw i64 %6062, 4
  %6072 = add <4 x i64> %6063, <i64 4, i64 4, i64 4, i64 4>
  %6073 = icmp eq i64 %6071, 32000
  br i1 %6073, label %6516, label %6061, !llvm.loop !187

6074:                                             ; preds = %6057
  %6075 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i64 0, i64 0))
  %6076 = icmp eq i32 %6075, 0
  br i1 %6076, label %6077, label %6091

6077:                                             ; preds = %6074
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %6078

6078:                                             ; preds = %6078, %6077
  %6079 = phi i64 [ 0, %6077 ], [ %6088, %6078 ]
  %6080 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6077 ], [ %6089, %6078 ]
  %6081 = add nuw nsw <4 x i64> %6080, <i64 1, i64 1, i64 1, i64 1>
  %6082 = mul nuw nsw <4 x i64> %6081, %6081
  %6083 = trunc <4 x i64> %6082 to <4 x i32>
  %6084 = sitofp <4 x i32> %6083 to <4 x float>
  %6085 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6084
  %6086 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6079
  %6087 = bitcast float* %6086 to <4 x float>*
  store <4 x float> %6085, <4 x float>* %6087, align 16, !tbaa !9
  %6088 = add nuw i64 %6079, 4
  %6089 = add <4 x i64> %6080, <i64 4, i64 4, i64 4, i64 4>
  %6090 = icmp eq i64 %6088, 32000
  br i1 %6090, label %6516, label %6078, !llvm.loop !188

6091:                                             ; preds = %6074
  %6092 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i64 0, i64 0))
  %6093 = icmp eq i32 %6092, 0
  br i1 %6093, label %6094, label %6108

6094:                                             ; preds = %6091
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %6095

6095:                                             ; preds = %6095, %6094
  %6096 = phi i64 [ 0, %6094 ], [ %6105, %6095 ]
  %6097 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6094 ], [ %6106, %6095 ]
  %6098 = add nuw nsw <4 x i64> %6097, <i64 1, i64 1, i64 1, i64 1>
  %6099 = mul nuw nsw <4 x i64> %6098, %6098
  %6100 = trunc <4 x i64> %6099 to <4 x i32>
  %6101 = sitofp <4 x i32> %6100 to <4 x float>
  %6102 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6101
  %6103 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6096
  %6104 = bitcast float* %6103 to <4 x float>*
  store <4 x float> %6102, <4 x float>* %6104, align 16, !tbaa !9
  %6105 = add nuw i64 %6096, 4
  %6106 = add <4 x i64> %6097, <i64 4, i64 4, i64 4, i64 4>
  %6107 = icmp eq i64 %6105, 32000
  br i1 %6107, label %6516, label %6095, !llvm.loop !189

6108:                                             ; preds = %6091
  %6109 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i64 0, i64 0))
  %6110 = icmp eq i32 %6109, 0
  br i1 %6110, label %6111, label %6125

6111:                                             ; preds = %6108
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %6112

6112:                                             ; preds = %6112, %6111
  %6113 = phi i64 [ 0, %6111 ], [ %6122, %6112 ]
  %6114 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6111 ], [ %6123, %6112 ]
  %6115 = add nuw nsw <4 x i64> %6114, <i64 1, i64 1, i64 1, i64 1>
  %6116 = mul nuw nsw <4 x i64> %6115, %6115
  %6117 = trunc <4 x i64> %6116 to <4 x i32>
  %6118 = sitofp <4 x i32> %6117 to <4 x float>
  %6119 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6118
  %6120 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6113
  %6121 = bitcast float* %6120 to <4 x float>*
  store <4 x float> %6119, <4 x float>* %6121, align 16, !tbaa !9
  %6122 = add nuw i64 %6113, 4
  %6123 = add <4 x i64> %6114, <i64 4, i64 4, i64 4, i64 4>
  %6124 = icmp eq i64 %6122, 32000
  br i1 %6124, label %6516, label %6112, !llvm.loop !190

6125:                                             ; preds = %6108
  %6126 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i64 0, i64 0))
  %6127 = icmp eq i32 %6126, 0
  br i1 %6127, label %6128, label %6142

6128:                                             ; preds = %6125
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8 0, i64 128000, i1 false)
  br label %6129

6129:                                             ; preds = %6129, %6128
  %6130 = phi i64 [ 0, %6128 ], [ %6139, %6129 ]
  %6131 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6128 ], [ %6140, %6129 ]
  %6132 = add nuw nsw <4 x i64> %6131, <i64 1, i64 1, i64 1, i64 1>
  %6133 = mul nuw nsw <4 x i64> %6132, %6132
  %6134 = trunc <4 x i64> %6133 to <4 x i32>
  %6135 = sitofp <4 x i32> %6134 to <4 x float>
  %6136 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6135
  %6137 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6130
  %6138 = bitcast float* %6137 to <4 x float>*
  store <4 x float> %6136, <4 x float>* %6138, align 16, !tbaa !9
  %6139 = add nuw i64 %6130, 4
  %6140 = add <4 x i64> %6131, <i64 4, i64 4, i64 4, i64 4>
  %6141 = icmp eq i64 %6139, 32000
  br i1 %6141, label %6516, label %6129, !llvm.loop !191

6142:                                             ; preds = %6125
  %6143 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i64 0, i64 0))
  %6144 = icmp eq i32 %6143, 0
  br i1 %6144, label %6145, label %6146

6145:                                             ; preds = %6142
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6516

6146:                                             ; preds = %6142
  %6147 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0))
  %6148 = icmp eq i32 %6147, 0
  br i1 %6148, label %6149, label %6186

6149:                                             ; preds = %6146
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6150

6150:                                             ; preds = %6150, %6149
  %6151 = phi i64 [ 0, %6149 ], [ %6165, %6150 ]
  %6152 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6149 ], [ %6166, %6150 ]
  %6153 = trunc <4 x i64> %6152 to <4 x i32>
  %6154 = add <4 x i32> %6153, <i32 1, i32 1, i32 1, i32 1>
  %6155 = trunc <4 x i64> %6152 to <4 x i32>
  %6156 = add <4 x i32> %6155, <i32 5, i32 5, i32 5, i32 5>
  %6157 = sitofp <4 x i32> %6154 to <4 x float>
  %6158 = sitofp <4 x i32> %6156 to <4 x float>
  %6159 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6157
  %6160 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6158
  %6161 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6151
  %6162 = bitcast float* %6161 to <4 x float>*
  store <4 x float> %6159, <4 x float>* %6162, align 16, !tbaa !9
  %6163 = getelementptr inbounds float, float* %6161, i64 4
  %6164 = bitcast float* %6163 to <4 x float>*
  store <4 x float> %6160, <4 x float>* %6164, align 16, !tbaa !9
  %6165 = add nuw i64 %6151, 8
  %6166 = add <4 x i64> %6152, <i64 8, i64 8, i64 8, i64 8>
  %6167 = icmp eq i64 %6165, 32000
  br i1 %6167, label %6168, label %6150, !llvm.loop !192

6168:                                             ; preds = %6150, %6168
  %6169 = phi i64 [ %6183, %6168 ], [ 0, %6150 ]
  %6170 = phi <4 x i64> [ %6184, %6168 ], [ <i64 0, i64 1, i64 2, i64 3>, %6150 ]
  %6171 = trunc <4 x i64> %6170 to <4 x i32>
  %6172 = add <4 x i32> %6171, <i32 1, i32 1, i32 1, i32 1>
  %6173 = trunc <4 x i64> %6170 to <4 x i32>
  %6174 = add <4 x i32> %6173, <i32 5, i32 5, i32 5, i32 5>
  %6175 = sitofp <4 x i32> %6172 to <4 x float>
  %6176 = sitofp <4 x i32> %6174 to <4 x float>
  %6177 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6175
  %6178 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6176
  %6179 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6169
  %6180 = bitcast float* %6179 to <4 x float>*
  store <4 x float> %6177, <4 x float>* %6180, align 16, !tbaa !9
  %6181 = getelementptr inbounds float, float* %6179, i64 4
  %6182 = bitcast float* %6181 to <4 x float>*
  store <4 x float> %6178, <4 x float>* %6182, align 16, !tbaa !9
  %6183 = add nuw i64 %6169, 8
  %6184 = add <4 x i64> %6170, <i64 8, i64 8, i64 8, i64 8>
  %6185 = icmp eq i64 %6183, 32000
  br i1 %6185, label %6516, label %6168, !llvm.loop !193

6186:                                             ; preds = %6146
  %6187 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i64 0, i64 0))
  %6188 = icmp eq i32 %6187, 0
  br i1 %6188, label %6189, label %6203

6189:                                             ; preds = %6186
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %6190

6190:                                             ; preds = %6190, %6189
  %6191 = phi i64 [ 0, %6189 ], [ %6200, %6190 ]
  %6192 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6189 ], [ %6201, %6190 ]
  %6193 = add nuw nsw <4 x i64> %6192, <i64 1, i64 1, i64 1, i64 1>
  %6194 = mul nuw nsw <4 x i64> %6193, %6193
  %6195 = trunc <4 x i64> %6194 to <4 x i32>
  %6196 = sitofp <4 x i32> %6195 to <4 x float>
  %6197 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6196
  %6198 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6191
  %6199 = bitcast float* %6198 to <4 x float>*
  store <4 x float> %6197, <4 x float>* %6199, align 16, !tbaa !9
  %6200 = add nuw i64 %6191, 4
  %6201 = add <4 x i64> %6192, <i64 4, i64 4, i64 4, i64 4>
  %6202 = icmp eq i64 %6200, 32000
  br i1 %6202, label %6516, label %6190, !llvm.loop !194

6203:                                             ; preds = %6186
  %6204 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0))
  %6205 = icmp eq i32 %6204, 0
  br i1 %6205, label %6206, label %6220

6206:                                             ; preds = %6203, %6206
  %6207 = phi i64 [ %6216, %6206 ], [ 0, %6203 ]
  %6208 = phi <4 x i64> [ %6217, %6206 ], [ <i64 0, i64 1, i64 2, i64 3>, %6203 ]
  %6209 = add nuw nsw <4 x i64> %6208, <i64 1, i64 1, i64 1, i64 1>
  %6210 = mul nuw nsw <4 x i64> %6209, %6209
  %6211 = trunc <4 x i64> %6210 to <4 x i32>
  %6212 = sitofp <4 x i32> %6211 to <4 x float>
  %6213 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6212
  %6214 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6207
  %6215 = bitcast float* %6214 to <4 x float>*
  store <4 x float> %6213, <4 x float>* %6215, align 16, !tbaa !9
  %6216 = add nuw i64 %6207, 4
  %6217 = add <4 x i64> %6208, <i64 4, i64 4, i64 4, i64 4>
  %6218 = icmp eq i64 %6216, 32000
  br i1 %6218, label %6219, label %6206, !llvm.loop !195

6219:                                             ; preds = %6206
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.390 to i8*), i64 128000) #19
  br label %6516

6220:                                             ; preds = %6203
  %6221 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i64 0, i64 0))
  %6222 = icmp eq i32 %6221, 0
  br i1 %6222, label %6223, label %6224

6223:                                             ; preds = %6220
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.465 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.464 to i8*), i64 128000) #19
  br label %6516

6224:                                             ; preds = %6220
  %6225 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i64 0, i64 0))
  %6226 = icmp eq i32 %6225, 0
  br i1 %6226, label %6227, label %6245

6227:                                             ; preds = %6224, %6227
  %6228 = phi i64 [ %6242, %6227 ], [ 0, %6224 ]
  %6229 = phi <4 x i64> [ %6243, %6227 ], [ <i64 0, i64 1, i64 2, i64 3>, %6224 ]
  %6230 = trunc <4 x i64> %6229 to <4 x i32>
  %6231 = add <4 x i32> %6230, <i32 1, i32 1, i32 1, i32 1>
  %6232 = trunc <4 x i64> %6229 to <4 x i32>
  %6233 = add <4 x i32> %6232, <i32 5, i32 5, i32 5, i32 5>
  %6234 = sitofp <4 x i32> %6231 to <4 x float>
  %6235 = sitofp <4 x i32> %6233 to <4 x float>
  %6236 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6234
  %6237 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6235
  %6238 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6228
  %6239 = bitcast float* %6238 to <4 x float>*
  store <4 x float> %6236, <4 x float>* %6239, align 16, !tbaa !9
  %6240 = getelementptr inbounds float, float* %6238, i64 4
  %6241 = bitcast float* %6240 to <4 x float>*
  store <4 x float> %6237, <4 x float>* %6241, align 16, !tbaa !9
  %6242 = add nuw i64 %6228, 8
  %6243 = add <4 x i64> %6229, <i64 8, i64 8, i64 8, i64 8>
  %6244 = icmp eq i64 %6242, 32000
  br i1 %6244, label %6516, label %6227, !llvm.loop !196

6245:                                             ; preds = %6224
  %6246 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i64 0, i64 0))
  %6247 = icmp eq i32 %6246, 0
  br i1 %6247, label %6248, label %6284

6248:                                             ; preds = %6245, %6248
  %6249 = phi i64 [ %6263, %6248 ], [ 0, %6245 ]
  %6250 = phi <4 x i64> [ %6264, %6248 ], [ <i64 0, i64 1, i64 2, i64 3>, %6245 ]
  %6251 = trunc <4 x i64> %6250 to <4 x i32>
  %6252 = add <4 x i32> %6251, <i32 1, i32 1, i32 1, i32 1>
  %6253 = trunc <4 x i64> %6250 to <4 x i32>
  %6254 = add <4 x i32> %6253, <i32 5, i32 5, i32 5, i32 5>
  %6255 = sitofp <4 x i32> %6252 to <4 x float>
  %6256 = sitofp <4 x i32> %6254 to <4 x float>
  %6257 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6255
  %6258 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6256
  %6259 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6249
  %6260 = bitcast float* %6259 to <4 x float>*
  store <4 x float> %6257, <4 x float>* %6260, align 16, !tbaa !9
  %6261 = getelementptr inbounds float, float* %6259, i64 4
  %6262 = bitcast float* %6261 to <4 x float>*
  store <4 x float> %6258, <4 x float>* %6262, align 16, !tbaa !9
  %6263 = add nuw i64 %6249, 8
  %6264 = add <4 x i64> %6250, <i64 8, i64 8, i64 8, i64 8>
  %6265 = icmp eq i64 %6263, 32000
  br i1 %6265, label %6266, label %6248, !llvm.loop !197

6266:                                             ; preds = %6248, %6266
  %6267 = phi i64 [ %6281, %6266 ], [ 0, %6248 ]
  %6268 = phi <4 x i64> [ %6282, %6266 ], [ <i64 0, i64 1, i64 2, i64 3>, %6248 ]
  %6269 = trunc <4 x i64> %6268 to <4 x i32>
  %6270 = add <4 x i32> %6269, <i32 1, i32 1, i32 1, i32 1>
  %6271 = trunc <4 x i64> %6268 to <4 x i32>
  %6272 = add <4 x i32> %6271, <i32 5, i32 5, i32 5, i32 5>
  %6273 = sitofp <4 x i32> %6270 to <4 x float>
  %6274 = sitofp <4 x i32> %6272 to <4 x float>
  %6275 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6273
  %6276 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6274
  %6277 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6267
  %6278 = bitcast float* %6277 to <4 x float>*
  store <4 x float> %6275, <4 x float>* %6278, align 16, !tbaa !9
  %6279 = getelementptr inbounds float, float* %6277, i64 4
  %6280 = bitcast float* %6279 to <4 x float>*
  store <4 x float> %6276, <4 x float>* %6280, align 16, !tbaa !9
  %6281 = add nuw i64 %6267, 8
  %6282 = add <4 x i64> %6268, <i64 8, i64 8, i64 8, i64 8>
  %6283 = icmp eq i64 %6281, 32000
  br i1 %6283, label %6516, label %6266, !llvm.loop !198

6284:                                             ; preds = %6245
  %6285 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i64 0, i64 0))
  %6286 = icmp eq i32 %6285, 0
  br i1 %6286, label %6287, label %6516

6287:                                             ; preds = %6284, %6287
  %6288 = phi i64 [ %6302, %6287 ], [ 0, %6284 ]
  %6289 = phi <4 x i64> [ %6303, %6287 ], [ <i64 0, i64 1, i64 2, i64 3>, %6284 ]
  %6290 = trunc <4 x i64> %6289 to <4 x i32>
  %6291 = add <4 x i32> %6290, <i32 1, i32 1, i32 1, i32 1>
  %6292 = trunc <4 x i64> %6289 to <4 x i32>
  %6293 = add <4 x i32> %6292, <i32 5, i32 5, i32 5, i32 5>
  %6294 = sitofp <4 x i32> %6291 to <4 x float>
  %6295 = sitofp <4 x i32> %6293 to <4 x float>
  %6296 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6294
  %6297 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6295
  %6298 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6288
  %6299 = bitcast float* %6298 to <4 x float>*
  store <4 x float> %6296, <4 x float>* %6299, align 16, !tbaa !9
  %6300 = getelementptr inbounds float, float* %6298, i64 4
  %6301 = bitcast float* %6300 to <4 x float>*
  store <4 x float> %6297, <4 x float>* %6301, align 16, !tbaa !9
  %6302 = add nuw i64 %6288, 8
  %6303 = add <4 x i64> %6289, <i64 8, i64 8, i64 8, i64 8>
  %6304 = icmp eq i64 %6302, 32000
  br i1 %6304, label %6305, label %6287, !llvm.loop !199

6305:                                             ; preds = %6287, %6305
  %6306 = phi i64 [ %6320, %6305 ], [ 0, %6287 ]
  %6307 = phi <4 x i64> [ %6321, %6305 ], [ <i64 0, i64 1, i64 2, i64 3>, %6287 ]
  %6308 = trunc <4 x i64> %6307 to <4 x i32>
  %6309 = add <4 x i32> %6308, <i32 1, i32 1, i32 1, i32 1>
  %6310 = trunc <4 x i64> %6307 to <4 x i32>
  %6311 = add <4 x i32> %6310, <i32 5, i32 5, i32 5, i32 5>
  %6312 = sitofp <4 x i32> %6309 to <4 x float>
  %6313 = sitofp <4 x i32> %6311 to <4 x float>
  %6314 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6312
  %6315 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6313
  %6316 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6306
  %6317 = bitcast float* %6316 to <4 x float>*
  store <4 x float> %6314, <4 x float>* %6317, align 16, !tbaa !9
  %6318 = getelementptr inbounds float, float* %6316, i64 4
  %6319 = bitcast float* %6318 to <4 x float>*
  store <4 x float> %6315, <4 x float>* %6319, align 16, !tbaa !9
  %6320 = add nuw i64 %6306, 8
  %6321 = add <4 x i64> %6307, <i64 8, i64 8, i64 8, i64 8>
  %6322 = icmp eq i64 %6320, 32000
  br i1 %6322, label %6323, label %6305, !llvm.loop !200

6323:                                             ; preds = %6305, %6323
  %6324 = phi i64 [ %6338, %6323 ], [ 0, %6305 ]
  %6325 = phi <4 x i64> [ %6339, %6323 ], [ <i64 0, i64 1, i64 2, i64 3>, %6305 ]
  %6326 = trunc <4 x i64> %6325 to <4 x i32>
  %6327 = add <4 x i32> %6326, <i32 1, i32 1, i32 1, i32 1>
  %6328 = trunc <4 x i64> %6325 to <4 x i32>
  %6329 = add <4 x i32> %6328, <i32 5, i32 5, i32 5, i32 5>
  %6330 = sitofp <4 x i32> %6327 to <4 x float>
  %6331 = sitofp <4 x i32> %6329 to <4 x float>
  %6332 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6330
  %6333 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6331
  %6334 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6324
  %6335 = bitcast float* %6334 to <4 x float>*
  store <4 x float> %6332, <4 x float>* %6335, align 16, !tbaa !9
  %6336 = getelementptr inbounds float, float* %6334, i64 4
  %6337 = bitcast float* %6336 to <4 x float>*
  store <4 x float> %6333, <4 x float>* %6337, align 16, !tbaa !9
  %6338 = add nuw i64 %6324, 8
  %6339 = add <4 x i64> %6325, <i64 8, i64 8, i64 8, i64 8>
  %6340 = icmp eq i64 %6338, 32000
  br i1 %6340, label %6341, label %6323, !llvm.loop !201

6341:                                             ; preds = %6323, %6341
  %6342 = phi i64 [ %6356, %6341 ], [ 0, %6323 ]
  %6343 = phi <4 x i64> [ %6357, %6341 ], [ <i64 0, i64 1, i64 2, i64 3>, %6323 ]
  %6344 = trunc <4 x i64> %6343 to <4 x i32>
  %6345 = add <4 x i32> %6344, <i32 1, i32 1, i32 1, i32 1>
  %6346 = trunc <4 x i64> %6343 to <4 x i32>
  %6347 = add <4 x i32> %6346, <i32 5, i32 5, i32 5, i32 5>
  %6348 = sitofp <4 x i32> %6345 to <4 x float>
  %6349 = sitofp <4 x i32> %6347 to <4 x float>
  %6350 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6348
  %6351 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6349
  %6352 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6342
  %6353 = bitcast float* %6352 to <4 x float>*
  store <4 x float> %6350, <4 x float>* %6353, align 16, !tbaa !9
  %6354 = getelementptr inbounds float, float* %6352, i64 4
  %6355 = bitcast float* %6354 to <4 x float>*
  store <4 x float> %6351, <4 x float>* %6355, align 16, !tbaa !9
  %6356 = add nuw i64 %6342, 8
  %6357 = add <4 x i64> %6343, <i64 8, i64 8, i64 8, i64 8>
  %6358 = icmp eq i64 %6356, 32000
  br i1 %6358, label %6359, label %6341, !llvm.loop !202

6359:                                             ; preds = %6341, %6359
  %6360 = phi i64 [ %6374, %6359 ], [ 0, %6341 ]
  %6361 = phi <4 x i64> [ %6375, %6359 ], [ <i64 0, i64 1, i64 2, i64 3>, %6341 ]
  %6362 = trunc <4 x i64> %6361 to <4 x i32>
  %6363 = add <4 x i32> %6362, <i32 1, i32 1, i32 1, i32 1>
  %6364 = trunc <4 x i64> %6361 to <4 x i32>
  %6365 = add <4 x i32> %6364, <i32 5, i32 5, i32 5, i32 5>
  %6366 = sitofp <4 x i32> %6363 to <4 x float>
  %6367 = sitofp <4 x i32> %6365 to <4 x float>
  %6368 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6366
  %6369 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6367
  %6370 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6360
  %6371 = bitcast float* %6370 to <4 x float>*
  store <4 x float> %6368, <4 x float>* %6371, align 16, !tbaa !9
  %6372 = getelementptr inbounds float, float* %6370, i64 4
  %6373 = bitcast float* %6372 to <4 x float>*
  store <4 x float> %6369, <4 x float>* %6373, align 16, !tbaa !9
  %6374 = add nuw i64 %6360, 8
  %6375 = add <4 x i64> %6361, <i64 8, i64 8, i64 8, i64 8>
  %6376 = icmp eq i64 %6374, 32000
  br i1 %6376, label %6377, label %6359, !llvm.loop !203

6377:                                             ; preds = %6359, %6377
  %6378 = phi i64 [ %6379, %6377 ], [ 0, %6359 ]
  %6379 = add nuw nsw i64 %6378, 1
  %6380 = trunc i64 %6379 to i32
  %6381 = sitofp i32 %6380 to float
  %6382 = fdiv float 1.000000e+00, %6381
  %6383 = insertelement <4 x float> poison, float %6382, i32 0
  %6384 = shufflevector <4 x float> %6383, <4 x float> poison, <4 x i32> zeroinitializer
  %6385 = insertelement <4 x float> poison, float %6382, i32 0
  %6386 = shufflevector <4 x float> %6385, <4 x float> poison, <4 x i32> zeroinitializer
  %6387 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 0
  %6388 = bitcast float* %6387 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6388, align 16, !tbaa !9
  %6389 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 4
  %6390 = bitcast float* %6389 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6390, align 16, !tbaa !9
  %6391 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 8
  %6392 = bitcast float* %6391 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6392, align 16, !tbaa !9
  %6393 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 12
  %6394 = bitcast float* %6393 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6394, align 16, !tbaa !9
  %6395 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 16
  %6396 = bitcast float* %6395 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6396, align 16, !tbaa !9
  %6397 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 20
  %6398 = bitcast float* %6397 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6398, align 16, !tbaa !9
  %6399 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 24
  %6400 = bitcast float* %6399 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6400, align 16, !tbaa !9
  %6401 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 28
  %6402 = bitcast float* %6401 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6402, align 16, !tbaa !9
  %6403 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 32
  %6404 = bitcast float* %6403 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6404, align 16, !tbaa !9
  %6405 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 36
  %6406 = bitcast float* %6405 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6406, align 16, !tbaa !9
  %6407 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 40
  %6408 = bitcast float* %6407 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6408, align 16, !tbaa !9
  %6409 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 44
  %6410 = bitcast float* %6409 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6410, align 16, !tbaa !9
  %6411 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 48
  %6412 = bitcast float* %6411 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6412, align 16, !tbaa !9
  %6413 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 52
  %6414 = bitcast float* %6413 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6414, align 16, !tbaa !9
  %6415 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 56
  %6416 = bitcast float* %6415 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6416, align 16, !tbaa !9
  %6417 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 60
  %6418 = bitcast float* %6417 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6418, align 16, !tbaa !9
  %6419 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 64
  %6420 = bitcast float* %6419 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6420, align 16, !tbaa !9
  %6421 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 68
  %6422 = bitcast float* %6421 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6422, align 16, !tbaa !9
  %6423 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 72
  %6424 = bitcast float* %6423 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6424, align 16, !tbaa !9
  %6425 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 76
  %6426 = bitcast float* %6425 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6426, align 16, !tbaa !9
  %6427 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 80
  %6428 = bitcast float* %6427 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6428, align 16, !tbaa !9
  %6429 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 84
  %6430 = bitcast float* %6429 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6430, align 16, !tbaa !9
  %6431 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 88
  %6432 = bitcast float* %6431 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6432, align 16, !tbaa !9
  %6433 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 92
  %6434 = bitcast float* %6433 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6434, align 16, !tbaa !9
  %6435 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 96
  %6436 = bitcast float* %6435 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6436, align 16, !tbaa !9
  %6437 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 100
  %6438 = bitcast float* %6437 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6438, align 16, !tbaa !9
  %6439 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 104
  %6440 = bitcast float* %6439 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6440, align 16, !tbaa !9
  %6441 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 108
  %6442 = bitcast float* %6441 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6442, align 16, !tbaa !9
  %6443 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 112
  %6444 = bitcast float* %6443 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6444, align 16, !tbaa !9
  %6445 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 116
  %6446 = bitcast float* %6445 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6446, align 16, !tbaa !9
  %6447 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 120
  %6448 = bitcast float* %6447 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6448, align 16, !tbaa !9
  %6449 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 124
  %6450 = bitcast float* %6449 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6450, align 16, !tbaa !9
  %6451 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 128
  %6452 = bitcast float* %6451 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6452, align 16, !tbaa !9
  %6453 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 132
  %6454 = bitcast float* %6453 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6454, align 16, !tbaa !9
  %6455 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 136
  %6456 = bitcast float* %6455 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6456, align 16, !tbaa !9
  %6457 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 140
  %6458 = bitcast float* %6457 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6458, align 16, !tbaa !9
  %6459 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 144
  %6460 = bitcast float* %6459 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6460, align 16, !tbaa !9
  %6461 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 148
  %6462 = bitcast float* %6461 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6462, align 16, !tbaa !9
  %6463 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 152
  %6464 = bitcast float* %6463 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6464, align 16, !tbaa !9
  %6465 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 156
  %6466 = bitcast float* %6465 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6466, align 16, !tbaa !9
  %6467 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 160
  %6468 = bitcast float* %6467 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6468, align 16, !tbaa !9
  %6469 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 164
  %6470 = bitcast float* %6469 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6470, align 16, !tbaa !9
  %6471 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 168
  %6472 = bitcast float* %6471 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6472, align 16, !tbaa !9
  %6473 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 172
  %6474 = bitcast float* %6473 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6474, align 16, !tbaa !9
  %6475 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 176
  %6476 = bitcast float* %6475 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6476, align 16, !tbaa !9
  %6477 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 180
  %6478 = bitcast float* %6477 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6478, align 16, !tbaa !9
  %6479 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 184
  %6480 = bitcast float* %6479 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6480, align 16, !tbaa !9
  %6481 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 188
  %6482 = bitcast float* %6481 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6482, align 16, !tbaa !9
  %6483 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 192
  %6484 = bitcast float* %6483 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6484, align 16, !tbaa !9
  %6485 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 196
  %6486 = bitcast float* %6485 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6486, align 16, !tbaa !9
  %6487 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 200
  %6488 = bitcast float* %6487 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6488, align 16, !tbaa !9
  %6489 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 204
  %6490 = bitcast float* %6489 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6490, align 16, !tbaa !9
  %6491 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 208
  %6492 = bitcast float* %6491 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6492, align 16, !tbaa !9
  %6493 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 212
  %6494 = bitcast float* %6493 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6494, align 16, !tbaa !9
  %6495 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 216
  %6496 = bitcast float* %6495 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6496, align 16, !tbaa !9
  %6497 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 220
  %6498 = bitcast float* %6497 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6498, align 16, !tbaa !9
  %6499 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 224
  %6500 = bitcast float* %6499 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6500, align 16, !tbaa !9
  %6501 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 228
  %6502 = bitcast float* %6501 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6502, align 16, !tbaa !9
  %6503 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 232
  %6504 = bitcast float* %6503 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6504, align 16, !tbaa !9
  %6505 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 236
  %6506 = bitcast float* %6505 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6506, align 16, !tbaa !9
  %6507 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 240
  %6508 = bitcast float* %6507 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6508, align 16, !tbaa !9
  %6509 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 244
  %6510 = bitcast float* %6509 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6510, align 16, !tbaa !9
  %6511 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 248
  %6512 = bitcast float* %6511 to <4 x float>*
  store <4 x float> %6384, <4 x float>* %6512, align 16, !tbaa !9
  %6513 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6378, i64 252
  %6514 = bitcast float* %6513 to <4 x float>*
  store <4 x float> %6386, <4 x float>* %6514, align 16, !tbaa !9
  %6515 = icmp eq i64 %6379, 256
  br i1 %6515, label %6516, label %6377, !llvm.loop !23

6516:                                             ; preds = %6377, %6266, %6227, %6190, %6168, %6129, %6112, %6095, %6078, %6061, %6039, %5999, %5838, %5799, %5760, %5725, %5703, %5681, %5641, %5601, %5543, %5508, %5482, %5443, %5403, %5291, %5274, %5257, %5240, %5223, %5206, %5023, %4857, %4817, %4777, %4733, %4702, %4542, %4503, %4442, %4337, %4173, %4090, %4069, %4048, %4027, %3984, %3834, %3668, %3635, %3595, %3555, %3497, %3439, %3381, %3323, %3277, %3244, %3204, %3141, %2949, %2884, %2868, %2832, %2806, %2744, %2556, %2371, %2084, %1653, %1622, %1564, %1524, %1466, %1431, %1414, %1397, %1380, %1363, %1341, %1301, %1244, %1191, %1047, %1025, %985, %959, %780, %747, %713, %673, %638, %621, %477, %462, %448, %292, %137, %120, %103, %4, %6223, %6219, %6145, %5503, %5344, %4401, %4397, %4371, %4005, %3980, %3976, %3664, %3660, %3656, %3199, %3118, %2857, %2853, %2827, %2765, %2703, %2699, %1802, %1643, %980, %457, %4108, %4393, %4481, %5202, %6284, %4754, %4711, %4498, %4333, %4132
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define i32 @s000() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %38, %0
  %4 = phi i32 [ 0, %0 ], [ %40, %38 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %19, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @Y, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fadd <4 x float> %9, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %14 = fadd <4 x float> %12, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @X, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %13, <4 x float>* %16, align 16, !tbaa !9
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> %14, <4 x float>* %18, align 16, !tbaa !9
  %19 = add nuw i64 %6, 8
  %20 = icmp eq i64 %19, 32000
  br i1 %20, label %38, label %5, !llvm.loop !204

21:                                               ; preds = %38
  %22 = tail call i64 @"\01_clock"() #19
  %23 = sub i64 %22, %2
  %24 = uitofp i64 %23 to double
  %25 = fdiv double %24, 1.000000e+06
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.137, i64 0, i64 0), double %25)
  br label %27

27:                                               ; preds = %27, %21
  %28 = phi i64 [ 0, %21 ], [ %33, %27 ]
  %29 = phi float [ 0.000000e+00, %21 ], [ %32, %27 ]
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fadd float %29, %31
  %33 = add nuw nsw i64 %28, 1
  %34 = icmp eq i64 %33, 32000
  br i1 %34, label %35, label %27, !llvm.loop !29

35:                                               ; preds = %27
  %36 = fpext float %32 to double
  %37 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %36) #19
  ret i32 0

38:                                               ; preds = %5
  %39 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @X, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @Y, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @Z, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @U, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @V, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %40 = add nuw nsw i32 %4, 1
  %41 = icmp eq i32 %40, 100000
  br i1 %41, label %21, label %3, !llvm.loop !205
}

declare i64 @"\01_clock"() local_unnamed_addr #8

declare i32 @dummy(float*, float*, float*, float*, float*, [256 x float]*, [256 x float]*, [256 x float]*, float) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define i32 @s111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %46, %0
  %4 = phi i32 [ 0, %0 ], [ %60, %46 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %27, %5 ]
  %7 = shl i64 %6, 1
  %8 = or i64 %7, 1
  %9 = or i64 %7, 3
  %10 = or i64 %7, 5
  %11 = or i64 %7, 7
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %13 = bitcast float* %12 to <8 x float>*
  %14 = load <8 x float>, <8 x float>* %13, align 16, !tbaa !9
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %16 = bitcast float* %15 to <8 x float>*
  %17 = load <8 x float>, <8 x float>* %16, align 4, !tbaa !9
  %18 = fadd <8 x float> %14, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11
  %23 = extractelement <8 x float> %18, i32 0
  store float %23, float* %19, align 4, !tbaa !9
  %24 = extractelement <8 x float> %18, i32 2
  store float %24, float* %20, align 4, !tbaa !9
  %25 = extractelement <8 x float> %18, i32 4
  store float %25, float* %21, align 4, !tbaa !9
  %26 = extractelement <8 x float> %18, i32 6
  store float %26, float* %22, align 4, !tbaa !9
  %27 = add nuw i64 %6, 4
  %28 = icmp eq i64 %27, 15996
  br i1 %28, label %46, label %5, !llvm.loop !206

29:                                               ; preds = %46
  %30 = tail call i64 @"\01_clock"() #19
  %31 = sub i64 %30, %2
  %32 = uitofp i64 %31 to double
  %33 = fdiv double %32, 1.000000e+06
  %34 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i64 0, i64 0), double %33)
  br label %35

35:                                               ; preds = %35, %29
  %36 = phi i64 [ 0, %29 ], [ %41, %35 ]
  %37 = phi float [ 0.000000e+00, %29 ], [ %40, %35 ]
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %37, %39
  %41 = add nuw nsw i64 %36, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %43, label %35, !llvm.loop !29

43:                                               ; preds = %35
  %44 = fpext float %40 to double
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %44) #19
  ret i32 0

46:                                               ; preds = %5
  %47 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31992), align 16, !tbaa !9
  %48 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !9
  %49 = fadd float %47, %48
  store float %49, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %50 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %51 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !9
  %52 = fadd float %50, %51
  store float %52, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %54 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %55 = fadd float %53, %54
  store float %55, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %57 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !9
  %58 = fadd float %56, %57
  store float %58, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %59 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %60 = add nuw nsw i32 %4, 1
  %61 = icmp eq i32 %60, 100000
  br i1 %61, label %29, label %3, !llvm.loop !207
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %58, %0
  %4 = phi i32 [ 0, %0 ], [ %60, %58 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %38, %5 ]
  %7 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3 ], [ %39, %5 ]
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !9
  %14 = fmul <4 x float> %10, %13
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !9
  %18 = fmul <4 x float> %13, %17
  %19 = fadd <4 x float> %14, %18
  %20 = fmul <4 x float> %10, %10
  %21 = fadd <4 x float> %20, %19
  %22 = fadd <4 x float> %18, %21
  %23 = fmul <4 x float> %10, %17
  %24 = fadd <4 x float> %23, %22
  %25 = shl nuw nsw <4 x i64> %7, <i64 1, i64 1, i64 1, i64 1>
  %26 = extractelement <4 x i64> %25, i32 0
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = extractelement <4 x i64> %25, i32 1
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = extractelement <4 x i64> %25, i32 2
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = extractelement <4 x i64> %25, i32 3
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = extractelement <4 x float> %24, i32 0
  store float %34, float* %27, align 8, !tbaa !9
  %35 = extractelement <4 x float> %24, i32 1
  store float %35, float* %29, align 8, !tbaa !9
  %36 = extractelement <4 x float> %24, i32 2
  store float %36, float* %31, align 8, !tbaa !9
  %37 = extractelement <4 x float> %24, i32 3
  store float %37, float* %33, align 8, !tbaa !9
  %38 = add nuw i64 %6, 4
  %39 = add <4 x i64> %7, <i64 4, i64 4, i64 4, i64 4>
  %40 = icmp eq i64 %38, 16000
  br i1 %40, label %58, label %5, !llvm.loop !208

41:                                               ; preds = %58
  %42 = tail call i64 @"\01_clock"() #19
  %43 = sub i64 %42, %2
  %44 = uitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  %46 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.139, i64 0, i64 0), double %45)
  br label %47

47:                                               ; preds = %47, %41
  %48 = phi i64 [ 0, %41 ], [ %53, %47 ]
  %49 = phi float [ 0.000000e+00, %41 ], [ %52, %47 ]
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %51 = load float, float* %50, align 4, !tbaa !9
  %52 = fadd float %49, %51
  %53 = add nuw nsw i64 %48, 1
  %54 = icmp eq i64 %53, 32000
  br i1 %54, label %55, label %47, !llvm.loop !29

55:                                               ; preds = %47
  %56 = fpext float %52 to double
  %57 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %56) #19
  ret i32 0

58:                                               ; preds = %5
  %59 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %60 = add nuw nsw i32 %4, 1
  %61 = icmp eq i32 %60, 100000
  br i1 %61, label %41, label %3, !llvm.loop !209
}

; Function Attrs: nounwind ssp uwtable
define i32 @s112() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %26
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 150000
  br i1 %25, label %5, label %3, !llvm.loop !210

26:                                               ; preds = %3, %26
  %27 = phi i64 [ 31998, %3 ], [ %35, %26 ]
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4, !tbaa !9
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fadd float %29, %31
  %33 = add nuw nsw i64 %27, 1
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  store float %32, float* %34, align 4, !tbaa !9
  %35 = add nsw i64 %27, -1
  %36 = icmp eq i64 %27, 0
  br i1 %36, label %22, label %26, !llvm.loop !211
}

; Function Attrs: nounwind ssp uwtable
define i32 @s112p() local_unnamed_addr #7 {
  %1 = alloca [32000 x float], align 16
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %3 = bitcast [32000 x float]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128000, i8* nonnull %3) #19
  %4 = tail call i64 @"\01_clock"() #19
  br label %22

5:                                                ; preds = %46
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %4
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.141, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  call void @llvm.lifetime.end.p0i8(i64 128000, i8* nonnull %3) #19
  ret i32 0

22:                                               ; preds = %0, %46
  %23 = phi i32 [ 0, %0 ], [ %48, %46 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) %3, i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i64 128000, i1 false)
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i64 [ 0, %22 ], [ %44, %24 ]
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 16, !tbaa !9
  %29 = getelementptr inbounds float, float* %26, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 16, !tbaa !9
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !9
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !9
  %38 = fadd <4 x float> %28, %34
  %39 = fadd <4 x float> %31, %37
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* %1, i64 0, i64 %25
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %38, <4 x float>* %41, align 16, !tbaa !9
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %39, <4 x float>* %43, align 16, !tbaa !9
  %44 = add nuw i64 %25, 8
  %45 = icmp eq i64 %44, 32000
  br i1 %45, label %46, label %24, !llvm.loop !212

46:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(127996) bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 1) to i8*), i8* noundef nonnull align 16 dereferenceable(127996) %3, i64 127996, i1 false)
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %48 = add nuw nsw i32 %23, 1
  %49 = icmp eq i32 %48, 150000
  br i1 %49, label %5, label %22, !llvm.loop !213
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #10

; Function Attrs: nounwind ssp uwtable
define i32 @s1112() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %41, %0
  %4 = phi i32 [ 0, %0 ], [ %43, %41 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %22, %5 ]
  %7 = sub i64 31999, %6
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7
  %9 = getelementptr inbounds float, float* %8, i64 -3
  %10 = bitcast float* %9 to <4 x float>*
  %11 = load <4 x float>, <4 x float>* %10, align 16, !tbaa !9
  %12 = getelementptr inbounds float, float* %8, i64 -7
  %13 = bitcast float* %12 to <4 x float>*
  %14 = load <4 x float>, <4 x float>* %13, align 16, !tbaa !9
  %15 = fadd <4 x float> %11, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %16 = fadd <4 x float> %14, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %18 = getelementptr inbounds float, float* %17, i64 -3
  %19 = bitcast float* %18 to <4 x float>*
  store <4 x float> %15, <4 x float>* %19, align 16, !tbaa !9
  %20 = getelementptr inbounds float, float* %17, i64 -7
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> %16, <4 x float>* %21, align 16, !tbaa !9
  %22 = add nuw i64 %6, 8
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %41, label %5, !llvm.loop !214

24:                                               ; preds = %41
  %25 = tail call i64 @"\01_clock"() #19
  %26 = sub i64 %25, %2
  %27 = uitofp i64 %26 to double
  %28 = fdiv double %27, 1.000000e+06
  %29 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.142, i64 0, i64 0), double %28)
  br label %30

30:                                               ; preds = %30, %24
  %31 = phi i64 [ 0, %24 ], [ %36, %30 ]
  %32 = phi float [ 0.000000e+00, %24 ], [ %35, %30 ]
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fadd float %32, %34
  %36 = add nuw nsw i64 %31, 1
  %37 = icmp eq i64 %36, 32000
  br i1 %37, label %38, label %30, !llvm.loop !29

38:                                               ; preds = %30
  %39 = fpext float %35 to double
  %40 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %39) #19
  ret i32 0

41:                                               ; preds = %5
  %42 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %43 = add nuw nsw i32 %4, 1
  %44 = icmp eq i32 %43, 250000
  br i1 %44, label %24, label %3, !llvm.loop !215
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1112p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %38, %0
  %4 = phi i32 [ 0, %0 ], [ %40, %38 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %19, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fadd <4 x float> %9, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %14 = fadd <4 x float> %12, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %13, <4 x float>* %16, align 16, !tbaa !9
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> %14, <4 x float>* %18, align 16, !tbaa !9
  %19 = add nuw i64 %6, 8
  %20 = icmp eq i64 %19, 32000
  br i1 %20, label %38, label %5, !llvm.loop !216

21:                                               ; preds = %38
  %22 = tail call i64 @"\01_clock"() #19
  %23 = sub i64 %22, %2
  %24 = uitofp i64 %23 to double
  %25 = fdiv double %24, 1.000000e+06
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.143, i64 0, i64 0), double %25)
  br label %27

27:                                               ; preds = %27, %21
  %28 = phi i64 [ 0, %21 ], [ %33, %27 ]
  %29 = phi float [ 0.000000e+00, %21 ], [ %32, %27 ]
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fadd float %29, %31
  %33 = add nuw nsw i64 %28, 1
  %34 = icmp eq i64 %33, 32000
  br i1 %34, label %35, label %27, !llvm.loop !29

35:                                               ; preds = %27
  %36 = fpext float %32 to double
  %37 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %36) #19
  ret i32 0

38:                                               ; preds = %5
  %39 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %40 = add nuw nsw i32 %4, 1
  %41 = icmp eq i32 %40, 250000
  br i1 %41, label %21, label %3, !llvm.loop !217
}

; Function Attrs: nounwind ssp uwtable
define i32 @s113() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %44
  %4 = phi i32 [ 0, %0 ], [ %60, %44 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  %6 = insertelement <4 x float> poison, float %5, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> zeroinitializer
  %8 = insertelement <4 x float> poison, float %5, i32 0
  %9 = shufflevector <4 x float> %8, <4 x float> poison, <4 x i32> zeroinitializer
  br label %10

10:                                               ; preds = %10, %3
  %11 = phi i64 [ 0, %3 ], [ %25, %10 ]
  %12 = or i64 %11, 1
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 4, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 4, !tbaa !9
  %19 = fadd <4 x float> %7, %15
  %20 = fadd <4 x float> %9, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> %19, <4 x float>* %22, align 4, !tbaa !9
  %23 = getelementptr inbounds float, float* %21, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> %20, <4 x float>* %24, align 4, !tbaa !9
  %25 = add nuw i64 %11, 8
  %26 = icmp eq i64 %25, 31992
  br i1 %26, label %44, label %10, !llvm.loop !218

27:                                               ; preds = %44
  %28 = tail call i64 @"\01_clock"() #19
  %29 = sub i64 %28, %2
  %30 = uitofp i64 %29 to double
  %31 = fdiv double %30, 1.000000e+06
  %32 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.144, i64 0, i64 0), double %31)
  br label %33

33:                                               ; preds = %33, %27
  %34 = phi i64 [ 0, %27 ], [ %39, %33 ]
  %35 = phi float [ 0.000000e+00, %27 ], [ %38, %33 ]
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %37 = load float, float* %36, align 4, !tbaa !9
  %38 = fadd float %35, %37
  %39 = add nuw nsw i64 %34, 1
  %40 = icmp eq i64 %39, 32000
  br i1 %40, label %41, label %33, !llvm.loop !29

41:                                               ; preds = %33
  %42 = fpext float %38 to double
  %43 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %42) #19
  ret i32 0

44:                                               ; preds = %10
  %45 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !9
  %46 = fadd float %5, %45
  store float %46, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %47 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !9
  %48 = fadd float %5, %47
  store float %48, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %49 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !9
  %50 = fadd float %5, %49
  store float %50, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %51 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %52 = fadd float %5, %51
  store float %52, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %54 = fadd float %5, %53
  store float %54, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %55 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %56 = fadd float %5, %55
  store float %56, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %57 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !9
  %58 = fadd float %5, %57
  store float %58, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %59 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %60 = add nuw nsw i32 %4, 1
  %61 = icmp eq i32 %60, 200000
  br i1 %61, label %27, label %3, !llvm.loop !219
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1113() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.145, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %26
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 100000
  br i1 %25, label %5, label %3, !llvm.loop !220

26:                                               ; preds = %3, %26
  %27 = phi i64 [ 0, %3 ], [ %33, %26 ]
  %28 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), align 16, !tbaa !9
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = fadd float %28, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  store float %31, float* %32, align 4, !tbaa !9
  %33 = add nuw nsw i64 %27, 1
  %34 = icmp eq i64 %33, 32000
  br i1 %34, label %22, label %26, !llvm.loop !221
}

; Function Attrs: nounwind ssp uwtable
define i32 @s114() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %31
  %4 = phi i32 [ 0, %0 ], [ %33, %31 ]
  br label %28

5:                                                ; preds = %31
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %35
  %29 = phi i64 [ 0, %3 ], [ %36, %35 ]
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %35, label %38

31:                                               ; preds = %35
  %32 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %33 = add nuw nsw i32 %4, 1
  %34 = icmp eq i32 %33, 39000
  br i1 %34, label %5, label %3, !llvm.loop !222

35:                                               ; preds = %38, %28
  %36 = add nuw nsw i64 %29, 1
  %37 = icmp eq i64 %36, 256
  br i1 %37, label %31, label %28, !llvm.loop !223

38:                                               ; preds = %28, %38
  %39 = phi i64 [ %46, %38 ], [ 0, %28 ]
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %39, i64 %29
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %39
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %41, %43
  %45 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %39
  store float %44, float* %45, align 4, !tbaa !9
  %46 = add nuw nsw i64 %39, 1
  %47 = icmp eq i64 %46, %29
  br i1 %47, label %35, label %38, !llvm.loop !224
}

; Function Attrs: nounwind ssp uwtable
define i32 @s115() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %25
  %4 = phi i32 [ 0, %0 ], [ %27, %25 ]
  br label %29

5:                                                ; preds = %25
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %35, %29
  %23 = add nuw nsw i64 %31, 1
  %24 = icmp eq i64 %32, 256
  br i1 %24, label %25, label %29, !llvm.loop !225

25:                                               ; preds = %22
  %26 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %27 = add nuw nsw i32 %4, 1
  %28 = icmp eq i32 %27, 195000
  br i1 %28, label %5, label %3, !llvm.loop !226

29:                                               ; preds = %3, %22
  %30 = phi i64 [ 0, %3 ], [ %32, %22 ]
  %31 = phi i64 [ 1, %3 ], [ %23, %22 ]
  %32 = add nuw nsw i64 %30, 1
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %34 = icmp ult i64 %30, 255
  br i1 %34, label %35, label %22

35:                                               ; preds = %29, %35
  %36 = phi i64 [ %44, %35 ], [ %31, %29 ]
  %37 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = load float, float* %33, align 4, !tbaa !9
  %40 = fmul float %38, %39
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fsub float %42, %40
  store float %43, float* %41, align 4, !tbaa !9
  %44 = add nuw nsw i64 %36, 1
  %45 = icmp eq i64 %44, 256
  br i1 %45, label %22, label %35, !llvm.loop !227
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1115() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %50
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %28

5:                                                ; preds = %50
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.148, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %54, %3
  %29 = phi i64 [ 0, %3 ], [ %55, %54 ]
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %48, %30 ]
  %32 = or i64 %31, 1
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %31
  %34 = bitcast float* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 8, !tbaa !9
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %31, i64 %29
  %37 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %32, i64 %29
  %38 = load float, float* %36, align 4, !tbaa !9
  %39 = load float, float* %37, align 4, !tbaa !9
  %40 = insertelement <2 x float> poison, float %38, i32 0
  %41 = insertelement <2 x float> %40, float %39, i32 1
  %42 = fmul <2 x float> %35, %41
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %31
  %44 = bitcast float* %43 to <2 x float>*
  %45 = load <2 x float>, <2 x float>* %44, align 8, !tbaa !9
  %46 = fadd <2 x float> %42, %45
  %47 = bitcast float* %33 to <2 x float>*
  store <2 x float> %46, <2 x float>* %47, align 8, !tbaa !9
  %48 = add nuw i64 %31, 2
  %49 = icmp eq i64 %48, 256
  br i1 %49, label %54, label %30, !llvm.loop !228

50:                                               ; preds = %54
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 19500
  br i1 %53, label %5, label %3, !llvm.loop !229

54:                                               ; preds = %30
  %55 = add nuw nsw i64 %29, 1
  %56 = icmp eq i64 %55, 256
  br i1 %56, label %50, label %28, !llvm.loop !230
}

; Function Attrs: nounwind ssp uwtable
define i32 @s116() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %23
  %4 = phi i32 [ 0, %0 ], [ %25, %23 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %27

6:                                                ; preds = %23
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %17, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %20, label %12, !llvm.loop !29

20:                                               ; preds = %12
  %21 = fpext float %17 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #19
  ret i32 0

23:                                               ; preds = %27
  %24 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %25 = add nuw nsw i32 %4, 1
  %26 = icmp eq i32 %25, 500000
  br i1 %26, label %6, label %3, !llvm.loop !231

27:                                               ; preds = %3, %27
  %28 = phi float [ %5, %3 ], [ %39, %27 ]
  %29 = phi i64 [ 0, %3 ], [ %37, %27 ]
  %30 = add nuw nsw i64 %29, 1
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %33 = bitcast float* %31 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !9
  %35 = extractelement <4 x float> %34, i32 0
  %36 = fmul float %35, %28
  store float %36, float* %32, align 4, !tbaa !9
  %37 = add nuw nsw i64 %29, 5
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = extractelement <4 x float> %34, i32 1
  %41 = insertelement <4 x float> poison, float %40, i32 0
  %42 = extractelement <4 x float> %34, i32 2
  %43 = insertelement <4 x float> %41, float %42, i32 1
  %44 = extractelement <4 x float> %34, i32 3
  %45 = insertelement <4 x float> %43, float %44, i32 2
  %46 = insertelement <4 x float> %45, float %39, i32 3
  %47 = fmul <4 x float> %34, %46
  %48 = bitcast float* %31 to <4 x float>*
  store <4 x float> %47, <4 x float>* %48, align 4, !tbaa !9
  %49 = icmp ult i64 %29, 31990
  br i1 %49, label %27, label %23, !llvm.loop !232
}

; Function Attrs: nounwind ssp uwtable
define i32 @s118() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %26
  %4 = phi i32 [ 0, %0 ], [ %28, %26 ]
  br label %22

5:                                                ; preds = %26
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.150, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %3, %30
  %23 = phi i64 [ 1, %3 ], [ %31, %30 ]
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4, !tbaa !9
  br label %33

26:                                               ; preds = %30
  %27 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %28 = add nuw nsw i32 %4, 1
  %29 = icmp eq i32 %28, 39000
  br i1 %29, label %5, label %3, !llvm.loop !233

30:                                               ; preds = %33
  store float %43, float* %24, align 4, !tbaa !9
  %31 = add nuw nsw i64 %23, 1
  %32 = icmp eq i64 %31, 256
  br i1 %32, label %26, label %22, !llvm.loop !234

33:                                               ; preds = %22, %33
  %34 = phi float [ %25, %22 ], [ %43, %33 ]
  %35 = phi i64 [ 0, %22 ], [ %44, %33 ]
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %35, i64 %23
  %37 = load float, float* %36, align 4, !tbaa !9
  %38 = xor i64 %35, -1
  %39 = add nsw i64 %23, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fmul float %37, %41
  %43 = fadd float %34, %42
  %44 = add nuw nsw i64 %35, 1
  %45 = icmp eq i64 %44, %23
  br i1 %45, label %30, label %33, !llvm.loop !235
}

; Function Attrs: nounwind ssp uwtable
define i32 @s119() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %45
  %4 = phi i32 [ 0, %0 ], [ %47, %45 ]
  br label %28

5:                                                ; preds = %45
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.151, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %49
  %29 = phi i64 [ 1, %3 ], [ %68, %49 ]
  %30 = add nsw i64 %29, -1
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi i64 [ 0, %28 ], [ %43, %31 ]
  %33 = or i64 %32, 1
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 %32
  %35 = bitcast float* %34 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 16, !tbaa !9
  %37 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %33
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 4, !tbaa !9
  %40 = fadd <4 x float> %36, %39
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %33
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> %40, <4 x float>* %42, align 4, !tbaa !9
  %43 = add nuw i64 %32, 4
  %44 = icmp eq i64 %43, 252
  br i1 %44, label %49, label %31, !llvm.loop !236

45:                                               ; preds = %49
  %46 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %47 = add nuw nsw i32 %4, 1
  %48 = icmp eq i32 %47, 39000
  br i1 %48, label %5, label %3, !llvm.loop !237

49:                                               ; preds = %31
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 252
  %51 = load float, float* %50, align 16, !tbaa !9
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 253
  %53 = load float, float* %52, align 4, !tbaa !9
  %54 = fadd float %51, %53
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 253
  store float %54, float* %55, align 4, !tbaa !9
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 253
  %57 = load float, float* %56, align 4, !tbaa !9
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 254
  %59 = load float, float* %58, align 8, !tbaa !9
  %60 = fadd float %57, %59
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 254
  store float %60, float* %61, align 8, !tbaa !9
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 254
  %63 = load float, float* %62, align 8, !tbaa !9
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 255
  %65 = load float, float* %64, align 4, !tbaa !9
  %66 = fadd float %63, %65
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 255
  store float %66, float* %67, align 4, !tbaa !9
  %68 = add nuw nsw i64 %29, 1
  %69 = icmp eq i64 %68, 256
  br i1 %69, label %45, label %28, !llvm.loop !238
}

; Function Attrs: nounwind ssp uwtable
define i32 @s119p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %31
  %4 = phi i32 [ 0, %0 ], [ %33, %31 ]
  br label %28

5:                                                ; preds = %31
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.152, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %35
  %29 = phi i64 [ 1, %3 ], [ %36, %35 ]
  %30 = add nsw i64 %29, -1
  br label %38

31:                                               ; preds = %35
  %32 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %33 = add nuw nsw i32 %4, 1
  %34 = icmp eq i32 %33, 39000
  br i1 %34, label %5, label %3, !llvm.loop !239

35:                                               ; preds = %38
  %36 = add nuw nsw i64 %29, 1
  %37 = icmp eq i64 %36, 256
  br i1 %37, label %31, label %28, !llvm.loop !240

38:                                               ; preds = %28, %38
  %39 = phi i64 [ 1, %28 ], [ %50, %38 ]
  %40 = add nsw i64 %39, -1
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 %40
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %39
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %39
  %44 = bitcast float* %41 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 4, !tbaa !9
  %46 = bitcast float* %42 to <4 x float>*
  %47 = load <4 x float>, <4 x float>* %46, align 4, !tbaa !9
  %48 = fadd <4 x float> %45, %47
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %48, <4 x float>* %49, align 4, !tbaa !9
  %50 = add nuw nsw i64 %39, 4
  %51 = icmp ult i64 %39, 252
  br i1 %51, label %38, label %35, !llvm.loop !241
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1119() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %44
  %4 = phi i32 [ 0, %0 ], [ %46, %44 ]
  br label %28

5:                                                ; preds = %44
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.153, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %48
  %29 = phi i64 [ 1, %3 ], [ %49, %48 ]
  %30 = add nsw i64 %29, -1
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi i64 [ 0, %28 ], [ %42, %31 ]
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 %32
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 16, !tbaa !9
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %32
  %37 = bitcast float* %36 to <4 x float>*
  %38 = load <4 x float>, <4 x float>* %37, align 16, !tbaa !9
  %39 = fadd <4 x float> %35, %38
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %32
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %39, <4 x float>* %41, align 16, !tbaa !9
  %42 = add nuw i64 %32, 4
  %43 = icmp eq i64 %42, 256
  br i1 %43, label %48, label %31, !llvm.loop !242

44:                                               ; preds = %48
  %45 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %46 = add nuw nsw i32 %4, 1
  %47 = icmp eq i32 %46, 39000
  br i1 %47, label %5, label %3, !llvm.loop !243

48:                                               ; preds = %31
  %49 = add nuw nsw i64 %29, 1
  %50 = icmp eq i64 %49, 256
  br i1 %50, label %44, label %28, !llvm.loop !244
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1119p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %57
  %4 = phi i32 [ 0, %0 ], [ %59, %57 ]
  br label %28

5:                                                ; preds = %57
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.154, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %61
  %29 = phi i64 [ 1, %3 ], [ %62, %61 ]
  %30 = add nsw i64 %29, -1
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi i64 [ 0, %28 ], [ %55, %31 ]
  %33 = shl i64 %32, 2
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 %33
  %35 = bitcast float* %34 to <16 x float>*
  %36 = load <16 x float>, <16 x float>* %35, align 16, !tbaa !9
  %37 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %33
  %38 = bitcast float* %37 to <16 x float>*
  %39 = load <16 x float>, <16 x float>* %38, align 16, !tbaa !9
  %40 = fadd <16 x float> %36, %39
  %41 = shufflevector <16 x float> %40, <16 x float> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %42 = fadd <16 x float> %36, %39
  %43 = shufflevector <16 x float> %42, <16 x float> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %44 = fadd <16 x float> %36, %39
  %45 = shufflevector <16 x float> %44, <16 x float> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %46 = or i64 %33, 3
  %47 = fadd <16 x float> %36, %39
  %48 = shufflevector <16 x float> %47, <16 x float> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %49 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %46
  %50 = getelementptr inbounds float, float* %49, i64 -3
  %51 = bitcast float* %50 to <16 x float>*
  %52 = shufflevector <4 x float> %41, <4 x float> %43, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %53 = shufflevector <4 x float> %45, <4 x float> %48, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %54 = shufflevector <8 x float> %52, <8 x float> %53, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %54, <16 x float>* %51, align 16, !tbaa !9
  %55 = add nuw i64 %32, 4
  %56 = icmp eq i64 %55, 64
  br i1 %56, label %61, label %31, !llvm.loop !245

57:                                               ; preds = %61
  %58 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %59 = add nuw nsw i32 %4, 1
  %60 = icmp eq i32 %59, 39000
  br i1 %60, label %5, label %3, !llvm.loop !246

61:                                               ; preds = %31
  %62 = add nuw nsw i64 %29, 1
  %63 = icmp eq i64 %62, 256
  br i1 %63, label %57, label %28, !llvm.loop !247
}

; Function Attrs: nounwind ssp uwtable
define i32 @s121() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %45, %0
  %4 = phi i32 [ 0, %0 ], [ %68, %45 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %26, %5 ]
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 4, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = fadd <4 x float> %10, %16
  %21 = fadd <4 x float> %13, %19
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !9
  %26 = add nuw i64 %6, 8
  %27 = icmp eq i64 %26, 31992
  br i1 %27, label %45, label %5, !llvm.loop !248

28:                                               ; preds = %45
  %29 = tail call i64 @"\01_clock"() #19
  %30 = sub i64 %29, %2
  %31 = uitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %40, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %39, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %36, %38
  %40 = add nuw nsw i64 %35, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %42, label %34, !llvm.loop !29

42:                                               ; preds = %34
  %43 = fpext float %39 to double
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %43) #19
  ret i32 0

45:                                               ; preds = %5
  %46 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %47 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31992), align 16, !tbaa !9
  %48 = fadd float %46, %47
  store float %48, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31992), align 16, !tbaa !9
  %49 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %50 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !9
  %51 = fadd float %49, %50
  store float %51, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %52 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !9
  %54 = fadd float %52, %53
  store float %54, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %55 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !9
  %57 = fadd float %55, %56
  store float %57, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %58 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %59 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %60 = fadd float %58, %59
  store float %60, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %61 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %63 = fadd float %61, %62
  store float %63, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %64 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %65 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %66 = fadd float %64, %65
  store float %66, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %67 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %68 = add nuw nsw i32 %4, 1
  %69 = icmp eq i32 %68, 150000
  br i1 %69, label %28, label %3, !llvm.loop !249
}

; Function Attrs: nounwind ssp uwtable
define i32 @s121p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %45, %0
  %4 = phi i32 [ 0, %0 ], [ %68, %45 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %26, %5 ]
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 4, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = fadd <4 x float> %10, %16
  %21 = fadd <4 x float> %13, %19
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !9
  %26 = add nuw i64 %6, 8
  %27 = icmp eq i64 %26, 31992
  br i1 %27, label %45, label %5, !llvm.loop !250

28:                                               ; preds = %45
  %29 = tail call i64 @"\01_clock"() #19
  %30 = sub i64 %29, %2
  %31 = uitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.156, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %40, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %39, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %36, %38
  %40 = add nuw nsw i64 %35, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %42, label %34, !llvm.loop !29

42:                                               ; preds = %34
  %43 = fpext float %39 to double
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %43) #19
  ret i32 0

45:                                               ; preds = %5
  %46 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %47 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31992), align 16, !tbaa !9
  %48 = fadd float %46, %47
  store float %48, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31992), align 16, !tbaa !9
  %49 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %50 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !9
  %51 = fadd float %49, %50
  store float %51, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %52 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !9
  %54 = fadd float %52, %53
  store float %54, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %55 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !9
  %57 = fadd float %55, %56
  store float %57, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %58 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %59 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %60 = fadd float %58, %59
  store float %60, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %61 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %63 = fadd float %61, %62
  store float %63, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %64 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %65 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %66 = fadd float %64, %65
  store float %66, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %67 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %68 = add nuw nsw i32 %4, 1
  %69 = icmp eq i32 %68, 150000
  br i1 %69, label %28, label %3, !llvm.loop !251
}

; Function Attrs: nounwind ssp uwtable
define i32 @s122(i32 %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0))
  %4 = tail call i64 @"\01_clock"() #19
  %5 = icmp slt i32 %0, 32001
  br i1 %5, label %6, label %45

6:                                                ; preds = %2
  %7 = add i32 %0, -1
  %8 = sext i32 %7 to i64
  %9 = sext i32 %1 to i64
  br label %10

10:                                               ; preds = %6, %24
  %11 = phi i32 [ %26, %24 ], [ 0, %6 ]
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi i64 [ 0, %10 ], [ %15, %12 ]
  %14 = phi i64 [ %8, %10 ], [ %22, %12 ]
  %15 = add nuw nsw i64 %13, 1
  %16 = sub nsw i64 31999, %13
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %16
  %18 = load float, float* %17, align 4, !tbaa !9
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %18, %20
  store float %21, float* %19, align 4, !tbaa !9
  %22 = add i64 %14, %9
  %23 = icmp slt i64 %22, 32000
  br i1 %23, label %12, label %24, !llvm.loop !252

24:                                               ; preds = %12
  %25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %26 = add nuw nsw i32 %11, 1
  %27 = icmp eq i32 %26, 50000
  br i1 %27, label %28, label %10, !llvm.loop !253

28:                                               ; preds = %45, %24
  %29 = tail call i64 @"\01_clock"() #19
  %30 = sub i64 %29, %4
  %31 = uitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %40, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %39, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %36, %38
  %40 = add nuw nsw i64 %35, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %42, label %34, !llvm.loop !29

42:                                               ; preds = %34
  %43 = fpext float %39 to double
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %43) #19
  ret i32 0

45:                                               ; preds = %2, %45
  %46 = phi i32 [ %48, %45 ], [ 0, %2 ]
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %48 = add nuw nsw i32 %46, 1
  %49 = icmp eq i32 %48, 50000
  br i1 %49, label %28, label %45, !llvm.loop !253
}

; Function Attrs: nounwind ssp uwtable
define i32 @s122p(i32 %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0))
  %4 = tail call i64 @"\01_clock"() #19
  %5 = icmp slt i32 %0, 32001
  br i1 %5, label %6, label %45

6:                                                ; preds = %2
  %7 = add i32 %0, -1
  %8 = sext i32 %7 to i64
  %9 = sext i32 %1 to i64
  br label %10

10:                                               ; preds = %6, %24
  %11 = phi i32 [ %26, %24 ], [ 0, %6 ]
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi i64 [ 0, %10 ], [ %15, %12 ]
  %14 = phi i64 [ %8, %10 ], [ %22, %12 ]
  %15 = add nuw nsw i64 %13, 1
  %16 = sub nsw i64 31999, %13
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %16
  %18 = load float, float* %17, align 4, !tbaa !9
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %18, %20
  store float %21, float* %19, align 4, !tbaa !9
  %22 = add i64 %14, %9
  %23 = icmp slt i64 %22, 32000
  br i1 %23, label %12, label %24, !llvm.loop !254

24:                                               ; preds = %12
  %25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %26 = add nuw nsw i32 %11, 1
  %27 = icmp eq i32 %26, 50000
  br i1 %27, label %28, label %10, !llvm.loop !255

28:                                               ; preds = %45, %24
  %29 = tail call i64 @"\01_clock"() #19
  %30 = sub i64 %29, %4
  %31 = uitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.158, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %40, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %39, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %36, %38
  %40 = add nuw nsw i64 %35, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %42, label %34, !llvm.loop !29

42:                                               ; preds = %34
  %43 = fpext float %39 to double
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %43) #19
  ret i32 0

45:                                               ; preds = %2, %45
  %46 = phi i32 [ %48, %45 ], [ 0, %2 ]
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %48 = add nuw nsw i32 %46, 1
  %49 = icmp eq i32 %48, 50000
  br i1 %49, label %28, label %45, !llvm.loop !255
}

; Function Attrs: nounwind ssp uwtable
define i32 @s123() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %48
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 50000
  br i1 %25, label %5, label %3, !llvm.loop !256

26:                                               ; preds = %3, %48
  %27 = phi i64 [ 0, %3 ], [ %50, %48 ]
  %28 = phi i32 [ -1, %3 ], [ %49, %48 ]
  %29 = add nsw i32 %28, 1
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %27
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fmul float %33, %35
  %37 = fadd float %31, %36
  %38 = sext i32 %29 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  store float %37, float* %39, align 4, !tbaa !9
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %27
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fcmp ogt float %41, 0.000000e+00
  br i1 %42, label %43, label %48

43:                                               ; preds = %26
  %44 = add nsw i32 %28, 2
  %45 = fadd float %36, %41
  %46 = sext i32 %44 to i64
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  store float %45, float* %47, align 4, !tbaa !9
  br label %48

48:                                               ; preds = %26, %43
  %49 = phi i32 [ %44, %43 ], [ %29, %26 ]
  %50 = add nuw nsw i64 %27, 1
  %51 = icmp eq i64 %50, 16000
  br i1 %51, label %22, label %26, !llvm.loop !257
}

; Function Attrs: nounwind ssp uwtable
define i32 @s124() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %46, %0
  %4 = phi i32 [ 0, %0 ], [ %48, %46 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %27, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = fcmp ogt <4 x float> %9, zeroinitializer
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !9
  %14 = select <4 x i1> %10, <4 x float> %9, <4 x float> %13
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !9
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 16, !tbaa !9
  %21 = fmul <4 x float> %17, %20
  %22 = fadd <4 x float> %14, %21
  %23 = shl i64 %6, 32
  %24 = ashr exact i64 %23, 32
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> %22, <4 x float>* %26, align 16, !tbaa !9
  %27 = add nuw i64 %6, 4
  %28 = icmp eq i64 %27, 32000
  br i1 %28, label %46, label %5, !llvm.loop !258

29:                                               ; preds = %46
  %30 = tail call i64 @"\01_clock"() #19
  %31 = sub i64 %30, %2
  %32 = uitofp i64 %31 to double
  %33 = fdiv double %32, 1.000000e+06
  %34 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.160, i64 0, i64 0), double %33)
  br label %35

35:                                               ; preds = %35, %29
  %36 = phi i64 [ 0, %29 ], [ %41, %35 ]
  %37 = phi float [ 0.000000e+00, %29 ], [ %40, %35 ]
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %37, %39
  %41 = add nuw nsw i64 %36, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %43, label %35, !llvm.loop !29

43:                                               ; preds = %35
  %44 = fpext float %40 to double
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %44) #19
  ret i32 0

46:                                               ; preds = %5
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %48 = add nuw nsw i32 %4, 1
  %49 = icmp eq i32 %48, 50000
  br i1 %49, label %29, label %3, !llvm.loop !259
}

; Function Attrs: nounwind ssp uwtable
define i32 @s125() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %60
  %4 = phi i32 [ 0, %0 ], [ %62, %60 ]
  br label %22

5:                                                ; preds = %60
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.161, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %11
  %12 = phi i64 [ %17, %11 ], [ 0, %5 ]
  %13 = phi float [ %16, %11 ], [ 0.000000e+00, %5 ]
  %14 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 65536
  br i1 %18, label %19, label %11, !llvm.loop !32

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %3, %64
  %23 = phi i64 [ 0, %3 ], [ %65, %64 ]
  %24 = phi i64 [ -1, %3 ], [ %27, %64 ]
  %25 = shl i64 %24, 32
  %26 = ashr exact i64 %25, 32
  %27 = add nsw i64 %26, 256
  br label %28

28:                                               ; preds = %28, %22
  %29 = phi i64 [ 0, %22 ], [ %58, %28 ]
  %30 = add i64 %26, %29
  %31 = add nsw i64 %30, 1
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %23, i64 %29
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !9
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !9
  %38 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %23, i64 %29
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 16, !tbaa !9
  %41 = getelementptr inbounds float, float* %38, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %43 = load <4 x float>, <4 x float>* %42, align 16, !tbaa !9
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %23, i64 %29
  %45 = bitcast float* %44 to <4 x float>*
  %46 = load <4 x float>, <4 x float>* %45, align 16, !tbaa !9
  %47 = getelementptr inbounds float, float* %44, i64 4
  %48 = bitcast float* %47 to <4 x float>*
  %49 = load <4 x float>, <4 x float>* %48, align 16, !tbaa !9
  %50 = fmul <4 x float> %40, %46
  %51 = fmul <4 x float> %43, %49
  %52 = fadd <4 x float> %34, %50
  %53 = fadd <4 x float> %37, %51
  %54 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %31
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %52, <4 x float>* %55, align 4, !tbaa !9
  %56 = getelementptr inbounds float, float* %54, i64 4
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> %53, <4 x float>* %57, align 4, !tbaa !9
  %58 = add nuw i64 %29, 8
  %59 = icmp eq i64 %58, 256
  br i1 %59, label %64, label %28, !llvm.loop !260

60:                                               ; preds = %64
  %61 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %62 = add nuw nsw i32 %4, 1
  %63 = icmp eq i32 %62, 19500
  br i1 %63, label %5, label %3, !llvm.loop !261

64:                                               ; preds = %28
  %65 = add nuw nsw i64 %23, 1
  %66 = icmp eq i64 %65, 256
  br i1 %66, label %60, label %22, !llvm.loop !262
}

; Function Attrs: nounwind ssp uwtable
define i32 @s125p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %56
  %4 = phi i32 [ 0, %0 ], [ %58, %56 ]
  br label %22

5:                                                ; preds = %56
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.162, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %11
  %12 = phi i64 [ %17, %11 ], [ 0, %5 ]
  %13 = phi float [ %16, %11 ], [ 0.000000e+00, %5 ]
  %14 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 65536
  br i1 %18, label %19, label %11, !llvm.loop !32

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %3, %60
  %23 = phi i64 [ 0, %3 ], [ %61, %60 ]
  %24 = shl nsw i64 %23, 8
  br label %25

25:                                               ; preds = %25, %22
  %26 = phi i64 [ 0, %22 ], [ %54, %25 ]
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %23, i64 %26
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !9
  %30 = getelementptr inbounds float, float* %27, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !9
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %23, i64 %26
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 16, !tbaa !9
  %36 = getelementptr inbounds float, float* %33, i64 4
  %37 = bitcast float* %36 to <4 x float>*
  %38 = load <4 x float>, <4 x float>* %37, align 16, !tbaa !9
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %23, i64 %26
  %40 = bitcast float* %39 to <4 x float>*
  %41 = load <4 x float>, <4 x float>* %40, align 16, !tbaa !9
  %42 = getelementptr inbounds float, float* %39, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %44 = load <4 x float>, <4 x float>* %43, align 16, !tbaa !9
  %45 = fmul <4 x float> %35, %41
  %46 = fmul <4 x float> %38, %44
  %47 = fadd <4 x float> %29, %45
  %48 = fadd <4 x float> %32, %46
  %49 = add nuw nsw i64 %26, %24
  %50 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %49
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> %47, <4 x float>* %51, align 16, !tbaa !9
  %52 = getelementptr inbounds float, float* %50, i64 4
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> %48, <4 x float>* %53, align 16, !tbaa !9
  %54 = add nuw i64 %26, 8
  %55 = icmp eq i64 %54, 256
  br i1 %55, label %60, label %25, !llvm.loop !263

56:                                               ; preds = %60
  %57 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %58 = add nuw nsw i32 %4, 1
  %59 = icmp eq i32 %58, 19500
  br i1 %59, label %5, label %3, !llvm.loop !264

60:                                               ; preds = %25
  %61 = add nuw nsw i64 %23, 1
  %62 = icmp eq i64 %61, 256
  br i1 %62, label %56, label %22, !llvm.loop !265
}

; Function Attrs: nounwind ssp uwtable
define i32 @s126() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %35
  %4 = phi i32 [ 0, %0 ], [ %37, %35 ]
  br label %28

5:                                                ; preds = %35
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.163, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %39
  %29 = phi i64 [ 0, %3 ], [ %42, %39 ]
  %30 = phi i32 [ 1, %3 ], [ %41, %39 ]
  %31 = sext i32 %30 to i64
  %32 = add i32 %30, 255
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !9
  br label %44

35:                                               ; preds = %39
  %36 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %37 = add nuw nsw i32 %4, 1
  %38 = icmp eq i32 %37, 1950
  br i1 %38, label %5, label %3, !llvm.loop !266

39:                                               ; preds = %44
  %40 = trunc i64 %46 to i32
  %41 = add nsw i32 %40, 2
  %42 = add nuw nsw i64 %29, 1
  %43 = icmp eq i64 %42, 256
  br i1 %43, label %35, label %28, !llvm.loop !267

44:                                               ; preds = %28, %44
  %45 = phi float [ %34, %28 ], [ %54, %44 ]
  %46 = phi i64 [ %31, %28 ], [ %56, %44 ]
  %47 = phi i64 [ 1, %28 ], [ %57, %44 ]
  %48 = add nsw i64 %46, -1
  %49 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !9
  %51 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %47, i64 %29
  %52 = load float, float* %51, align 4, !tbaa !9
  %53 = fmul float %50, %52
  %54 = fadd float %45, %53
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %47, i64 %29
  store float %54, float* %55, align 4, !tbaa !9
  %56 = add nsw i64 %46, 1
  %57 = add nuw nsw i64 %47, 1
  %58 = trunc i64 %56 to i32
  %59 = icmp eq i32 %32, %58
  br i1 %59, label %39, label %44, !llvm.loop !268
}

; Function Attrs: nounwind ssp uwtable
define i32 @s126p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %33
  %4 = phi i32 [ 0, %0 ], [ %35, %33 ]
  br label %28

5:                                                ; preds = %33
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.164, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %37
  %29 = phi i64 [ 0, %3 ], [ %38, %37 ]
  %30 = shl nsw i64 %29, 8
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0, i64 %29
  %32 = load float, float* %31, align 4, !tbaa !9
  br label %40

33:                                               ; preds = %37
  %34 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %35 = add nuw nsw i32 %4, 1
  %36 = icmp eq i32 %35, 1950
  br i1 %36, label %5, label %3, !llvm.loop !269

37:                                               ; preds = %40
  %38 = add nuw nsw i64 %29, 1
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %33, label %28, !llvm.loop !270

40:                                               ; preds = %28, %40
  %41 = phi float [ %32, %28 ], [ %50, %40 ]
  %42 = phi i64 [ 1, %28 ], [ %52, %40 ]
  %43 = add nsw i64 %42, -1
  %44 = add nuw nsw i64 %43, %30
  %45 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %44
  %46 = load float, float* %45, align 4, !tbaa !9
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %42, i64 %29
  %48 = load float, float* %47, align 4, !tbaa !9
  %49 = fmul float %46, %48
  %50 = fadd float %41, %49
  %51 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %42, i64 %29
  store float %50, float* %51, align 4, !tbaa !9
  %52 = add nuw nsw i64 %42, 1
  %53 = icmp eq i64 %52, 256
  br i1 %53, label %37, label %40, !llvm.loop !271
}

; Function Attrs: nounwind ssp uwtable
define i32 @s126pp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %31
  %4 = phi i32 [ 0, %0 ], [ %33, %31 ]
  br label %28

5:                                                ; preds = %31
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.165, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %35
  %29 = phi i64 [ 1, %3 ], [ %36, %35 ]
  %30 = add nsw i64 %29, -1
  br label %38

31:                                               ; preds = %35
  %32 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %33 = add nuw nsw i32 %4, 1
  %34 = icmp eq i32 %33, 1950
  br i1 %34, label %5, label %3, !llvm.loop !272

35:                                               ; preds = %38
  %36 = add nuw nsw i64 %29, 1
  %37 = icmp eq i64 %36, 256
  br i1 %37, label %31, label %28, !llvm.loop !273

38:                                               ; preds = %28, %38
  %39 = phi i64 [ 0, %28 ], [ %51, %38 ]
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %30, i64 %39
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = shl nuw nsw i64 %39, 8
  %43 = add nuw nsw i64 %30, %42
  %44 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %29, i64 %39
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = fmul float %45, %47
  %49 = fadd float %41, %48
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %39
  store float %49, float* %50, align 4, !tbaa !9
  %51 = add nuw nsw i64 %39, 1
  %52 = icmp eq i64 %51, 256
  br i1 %52, label %35, label %38, !llvm.loop !274
}

; Function Attrs: nounwind ssp uwtable
define i32 @s127() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %48, %0
  %4 = phi i32 [ 0, %0 ], [ %50, %48 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %29, %5 ]
  %7 = shl i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = fmul <4 x float> %13, %16
  %18 = fadd <4 x float> %10, %17
  %19 = or i64 %7, 1
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !9
  %23 = fmul <4 x float> %16, %22
  %24 = fadd <4 x float> %10, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %26 = getelementptr inbounds float, float* %25, i64 -1
  %27 = bitcast float* %26 to <8 x float>*
  %28 = shufflevector <4 x float> %18, <4 x float> %24, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x float> %28, <8 x float>* %27, align 16, !tbaa !9
  %29 = add nuw i64 %6, 4
  %30 = icmp eq i64 %29, 16000
  br i1 %30, label %48, label %5, !llvm.loop !275

31:                                               ; preds = %48
  %32 = tail call i64 @"\01_clock"() #19
  %33 = sub i64 %32, %2
  %34 = uitofp i64 %33 to double
  %35 = fdiv double %34, 1.000000e+06
  %36 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), double %35)
  br label %37

37:                                               ; preds = %37, %31
  %38 = phi i64 [ 0, %31 ], [ %43, %37 ]
  %39 = phi float [ 0.000000e+00, %31 ], [ %42, %37 ]
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fadd float %39, %41
  %43 = add nuw nsw i64 %38, 1
  %44 = icmp eq i64 %43, 32000
  br i1 %44, label %45, label %37, !llvm.loop !29

45:                                               ; preds = %37
  %46 = fpext float %42 to double
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %46) #19
  ret i32 0

48:                                               ; preds = %5
  %49 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %50 = add nuw nsw i32 %4, 1
  %51 = icmp eq i32 %50, 100000
  br i1 %51, label %31, label %3, !llvm.loop !276
}

; Function Attrs: nounwind ssp uwtable
define i32 @s127p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %59, %0
  %4 = phi i32 [ 0, %0 ], [ %61, %59 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %40, %5 ]
  %7 = shl i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7
  %9 = bitcast float* %8 to <8 x float>*
  %10 = load <8 x float>, <8 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7
  %12 = bitcast float* %11 to <8 x float>*
  %13 = load <8 x float>, <8 x float>* %12, align 16, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %7
  %15 = bitcast float* %14 to <8 x float>*
  %16 = load <8 x float>, <8 x float>* %15, align 16, !tbaa !9
  %17 = fmul <8 x float> %13, %16
  %18 = fadd <8 x float> %10, %17
  %19 = shufflevector <8 x float> %18, <8 x float> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %20 = shl i64 %6, 2
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %7
  %22 = bitcast float* %21 to <8 x float>*
  %23 = load <8 x float>, <8 x float>* %22, align 16, !tbaa !9
  %24 = fmul <8 x float> %16, %23
  %25 = fadd <8 x float> %10, %24
  %26 = shufflevector <8 x float> %25, <8 x float> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %27 = fmul <8 x float> %13, %16
  %28 = fadd <8 x float> %10, %27
  %29 = shufflevector <8 x float> %28, <8 x float> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %30 = fmul <8 x float> %16, %23
  %31 = fadd <8 x float> %10, %30
  %32 = shufflevector <8 x float> %31, <8 x float> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %33 = or i64 %20, 3
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = getelementptr inbounds float, float* %34, i64 -3
  %36 = bitcast float* %35 to <16 x float>*
  %37 = shufflevector <4 x float> %19, <4 x float> %26, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %38 = shufflevector <4 x float> %29, <4 x float> %32, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %39 = shufflevector <8 x float> %37, <8 x float> %38, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %39, <16 x float>* %36, align 16, !tbaa !9
  %40 = add nuw i64 %6, 4
  %41 = icmp eq i64 %40, 8000
  br i1 %41, label %59, label %5, !llvm.loop !277

42:                                               ; preds = %59
  %43 = tail call i64 @"\01_clock"() #19
  %44 = sub i64 %43, %2
  %45 = uitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.167, i64 0, i64 0), double %46)
  br label %48

48:                                               ; preds = %48, %42
  %49 = phi i64 [ 0, %42 ], [ %54, %48 ]
  %50 = phi float [ 0.000000e+00, %42 ], [ %53, %48 ]
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %52 = load float, float* %51, align 4, !tbaa !9
  %53 = fadd float %50, %52
  %54 = add nuw nsw i64 %49, 1
  %55 = icmp eq i64 %54, 32000
  br i1 %55, label %56, label %48, !llvm.loop !29

56:                                               ; preds = %48
  %57 = fpext float %53 to double
  %58 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %57) #19
  ret i32 0

59:                                               ; preds = %5
  %60 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %61 = add nuw nsw i32 %4, 1
  %62 = icmp eq i32 %61, 100000
  br i1 %62, label %42, label %3, !llvm.loop !278
}

; Function Attrs: nounwind ssp uwtable
define i32 @s128() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %31
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 100000
  br i1 %30, label %5, label %3, !llvm.loop !279

31:                                               ; preds = %3, %31
  %32 = phi i64 [ -1, %3 ], [ %41, %31 ]
  %33 = phi i64 [ 0, %3 ], [ %45, %31 ]
  %34 = add nsw i64 %32, 1
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %33
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fsub float %36, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  store float %39, float* %40, align 4, !tbaa !9
  %41 = add nsw i64 %32, 2
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %39, %43
  store float %44, float* %35, align 4, !tbaa !9
  %45 = add nuw nsw i64 %33, 1
  %46 = icmp eq i64 %45, 16000
  br i1 %46, label %27, label %31, !llvm.loop !280
}

; Function Attrs: nounwind ssp uwtable
define i32 @s128p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.169, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %31
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 100000
  br i1 %30, label %5, label %3, !llvm.loop !281

31:                                               ; preds = %3, %31
  %32 = phi i64 [ 0, %3 ], [ %77, %31 ]
  %33 = shl nuw nsw i64 %32, 1
  %34 = or i64 %33, 1
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %38 = load float, float* %37, align 16, !tbaa !9
  %39 = fsub float %36, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %39, float* %40, align 16, !tbaa !9
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fadd float %39, %42
  store float %43, float* %35, align 4, !tbaa !9
  %44 = or i64 %33, 3
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %44
  %46 = load float, float* %45, align 4, !tbaa !9
  %47 = or i64 %32, 1
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %47
  %49 = load float, float* %48, align 4, !tbaa !9
  %50 = fsub float %46, %49
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  store float %50, float* %51, align 4, !tbaa !9
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %44
  %53 = load float, float* %52, align 4, !tbaa !9
  %54 = fadd float %50, %53
  store float %54, float* %45, align 4, !tbaa !9
  %55 = or i64 %33, 5
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !9
  %58 = or i64 %32, 2
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %58
  %60 = load float, float* %59, align 8, !tbaa !9
  %61 = fsub float %57, %60
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  store float %61, float* %62, align 8, !tbaa !9
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %55
  %64 = load float, float* %63, align 4, !tbaa !9
  %65 = fadd float %61, %64
  store float %65, float* %56, align 4, !tbaa !9
  %66 = or i64 %33, 7
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !9
  %69 = or i64 %32, 3
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !9
  %72 = fsub float %68, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  store float %72, float* %73, align 4, !tbaa !9
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %66
  %75 = load float, float* %74, align 4, !tbaa !9
  %76 = fadd float %72, %75
  store float %76, float* %67, align 4, !tbaa !9
  %77 = add nuw nsw i64 %32, 4
  %78 = icmp ult i64 %32, 15996
  br i1 %78, label %31, label %27, !llvm.loop !282
}

; Function Attrs: nounwind ssp uwtable
define i32 @s131() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %45, %0
  %4 = phi i32 [ 0, %0 ], [ %68, %45 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %26, %5 ]
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 4, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = fadd <4 x float> %10, %16
  %21 = fadd <4 x float> %13, %19
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !9
  %26 = add nuw i64 %6, 8
  %27 = icmp eq i64 %26, 31992
  br i1 %27, label %45, label %5, !llvm.loop !283

28:                                               ; preds = %45
  %29 = tail call i64 @"\01_clock"() #19
  %30 = sub i64 %29, %2
  %31 = uitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.170, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %40, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %39, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %36, %38
  %40 = add nuw nsw i64 %35, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %42, label %34, !llvm.loop !29

42:                                               ; preds = %34
  %43 = fpext float %39 to double
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %43) #19
  ret i32 0

45:                                               ; preds = %5
  %46 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %47 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31992), align 16, !tbaa !9
  %48 = fadd float %46, %47
  store float %48, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31992), align 16, !tbaa !9
  %49 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %50 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !9
  %51 = fadd float %49, %50
  store float %51, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %52 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !9
  %54 = fadd float %52, %53
  store float %54, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %55 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !9
  %57 = fadd float %55, %56
  store float %57, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %58 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %59 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %60 = fadd float %58, %59
  store float %60, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %61 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %63 = fadd float %61, %62
  store float %63, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %64 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %65 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %66 = fadd float %64, %65
  store float %66, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %67 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %68 = add nuw nsw i32 %4, 1
  %69 = icmp eq i32 %68, 250000
  br i1 %69, label %28, label %3, !llvm.loop !284
}

; Function Attrs: nounwind ssp uwtable
define i32 @s131p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %36
  %4 = phi i32 [ 0, %0 ], [ %44, %36 ]
  br label %22

5:                                                ; preds = %36
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.171, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %3, %22
  %23 = phi i64 [ 0, %3 ], [ %28, %22 ]
  %24 = or i64 %23, 1
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %28 = add nuw nsw i64 %23, 4
  %29 = bitcast float* %25 to <4 x float>*
  %30 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !9
  %31 = bitcast float* %26 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !9
  %33 = fadd <4 x float> %30, %32
  %34 = bitcast float* %27 to <4 x float>*
  store <4 x float> %33, <4 x float>* %34, align 16, !tbaa !9
  %35 = icmp ult i64 %23, 31992
  br i1 %35, label %22, label %36, !llvm.loop !285

36:                                               ; preds = %22
  %37 = load <2 x float>, <2 x float>* bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997) to <2 x float>*), align 4, !tbaa !9
  %38 = load <2 x float>, <2 x float>* bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996) to <2 x float>*), align 16, !tbaa !9
  %39 = fadd <2 x float> %37, %38
  store <2 x float> %39, <2 x float>* bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996) to <2 x float>*), align 16, !tbaa !9
  %40 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %41 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %42 = fadd float %40, %41
  store float %42, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %43 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %44 = add nuw nsw i32 %4, 1
  %45 = icmp eq i32 %44, 250000
  br i1 %45, label %5, label %3, !llvm.loop !286
}

; Function Attrs: nounwind ssp uwtable
define i32 @s132() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %58
  %4 = phi i32 [ 0, %0 ], [ %88, %58 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 1), align 4, !tbaa !9
  %6 = insertelement <4 x float> poison, float %5, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> zeroinitializer
  %8 = insertelement <4 x float> poison, float %5, i32 0
  %9 = shufflevector <4 x float> %8, <4 x float> poison, <4 x i32> zeroinitializer
  br label %10

10:                                               ; preds = %10, %3
  %11 = phi i64 [ 0, %3 ], [ %33, %10 ]
  %12 = or i64 %11, 1
  %13 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 %11
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !9
  %22 = getelementptr inbounds float, float* %19, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !9
  %25 = fmul <4 x float> %21, %7
  %26 = fmul <4 x float> %24, %9
  %27 = fadd <4 x float> %15, %25
  %28 = fadd <4 x float> %18, %26
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %12
  %30 = bitcast float* %29 to <4 x float>*
  store <4 x float> %27, <4 x float>* %30, align 4, !tbaa !9
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %28, <4 x float>* %32, align 4, !tbaa !9
  %33 = add nuw i64 %11, 8
  %34 = icmp eq i64 %33, 248
  br i1 %34, label %58, label %10, !llvm.loop !287

35:                                               ; preds = %58
  %36 = tail call i64 @"\01_clock"() #19
  %37 = sub i64 %36, %2
  %38 = uitofp i64 %37 to double
  %39 = fdiv double %38, 1.000000e+06
  %40 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i64 0, i64 0), double %39)
  br label %41

41:                                               ; preds = %35, %44
  %42 = phi i64 [ %45, %44 ], [ 0, %35 ]
  %43 = phi float [ %55, %44 ], [ 0.000000e+00, %35 ]
  br label %50

44:                                               ; preds = %50
  %45 = add nuw nsw i64 %42, 1
  %46 = icmp eq i64 %45, 256
  br i1 %46, label %47, label %41, !llvm.loop !30

47:                                               ; preds = %44
  %48 = fpext float %55 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #19
  ret i32 0

50:                                               ; preds = %50, %41
  %51 = phi i64 [ 0, %41 ], [ %56, %50 ]
  %52 = phi float [ %43, %41 ], [ %55, %50 ]
  %53 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42, i64 %51
  %54 = load float, float* %53, align 4, !tbaa !9
  %55 = fadd float %52, %54
  %56 = add nuw nsw i64 %51, 1
  %57 = icmp eq i64 %56, 256
  br i1 %57, label %44, label %50, !llvm.loop !31

58:                                               ; preds = %10
  %59 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 248), align 16, !tbaa !9
  %60 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 249), align 4, !tbaa !9
  %61 = fmul float %60, %5
  %62 = fadd float %59, %61
  store float %62, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 249), align 4, !tbaa !9
  %63 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 249), align 4, !tbaa !9
  %64 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 250), align 8, !tbaa !9
  %65 = fmul float %64, %5
  %66 = fadd float %63, %65
  store float %66, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 250), align 8, !tbaa !9
  %67 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 250), align 8, !tbaa !9
  %68 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 251), align 4, !tbaa !9
  %69 = fmul float %68, %5
  %70 = fadd float %67, %69
  store float %70, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 251), align 4, !tbaa !9
  %71 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 251), align 4, !tbaa !9
  %72 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 252), align 16, !tbaa !9
  %73 = fmul float %72, %5
  %74 = fadd float %71, %73
  store float %74, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 252), align 16, !tbaa !9
  %75 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 252), align 16, !tbaa !9
  %76 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 253), align 4, !tbaa !9
  %77 = fmul float %76, %5
  %78 = fadd float %75, %77
  store float %78, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 253), align 4, !tbaa !9
  %79 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 253), align 4, !tbaa !9
  %80 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 254), align 8, !tbaa !9
  %81 = fmul float %80, %5
  %82 = fadd float %79, %81
  store float %82, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 254), align 8, !tbaa !9
  %83 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 254), align 8, !tbaa !9
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 255), align 4, !tbaa !9
  %85 = fmul float %84, %5
  %86 = fadd float %83, %85
  store float %86, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 255), align 4, !tbaa !9
  %87 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %88 = add nuw nsw i32 %4, 1
  %89 = icmp eq i32 %88, 20000000
  br i1 %89, label %35, label %3, !llvm.loop !288
}

; Function Attrs: nounwind ssp uwtable
define i32 @s132p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %31
  %4 = phi i32 [ 0, %0 ], [ %43, %31 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 1), align 4, !tbaa !9
  %6 = insertelement <4 x float> poison, float %5, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> zeroinitializer
  br label %45

8:                                                ; preds = %31
  %9 = tail call i64 @"\01_clock"() #19
  %10 = sub i64 %9, %2
  %11 = uitofp i64 %10 to double
  %12 = fdiv double %11, 1.000000e+06
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.173, i64 0, i64 0), double %12)
  br label %14

14:                                               ; preds = %8, %17
  %15 = phi i64 [ %18, %17 ], [ 0, %8 ]
  %16 = phi float [ %28, %17 ], [ 0.000000e+00, %8 ]
  br label %23

17:                                               ; preds = %23
  %18 = add nuw nsw i64 %15, 1
  %19 = icmp eq i64 %18, 256
  br i1 %19, label %20, label %14, !llvm.loop !30

20:                                               ; preds = %17
  %21 = fpext float %28 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #19
  ret i32 0

23:                                               ; preds = %23, %14
  %24 = phi i64 [ 0, %14 ], [ %29, %23 ]
  %25 = phi float [ %16, %14 ], [ %28, %23 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %15, i64 %24
  %27 = load float, float* %26, align 4, !tbaa !9
  %28 = fadd float %25, %27
  %29 = add nuw nsw i64 %24, 1
  %30 = icmp eq i64 %29, 256
  br i1 %30, label %17, label %23, !llvm.loop !31

31:                                               ; preds = %45
  %32 = load <2 x float>, <2 x float>* bitcast (float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 252) to <2 x float>*), align 16, !tbaa !9
  %33 = load <2 x float>, <2 x float>* bitcast (float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 253) to <2 x float>*), align 4, !tbaa !9
  %34 = insertelement <2 x float> poison, float %5, i32 0
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> zeroinitializer
  %36 = fmul <2 x float> %33, %35
  %37 = fadd <2 x float> %32, %36
  store <2 x float> %37, <2 x float>* bitcast (float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 253) to <2 x float>*), align 4, !tbaa !9
  %38 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 254), align 8, !tbaa !9
  %39 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 255), align 4, !tbaa !9
  %40 = fmul float %39, %5
  %41 = fadd float %38, %40
  store float %41, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 255), align 4, !tbaa !9
  %42 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %43 = add nuw nsw i32 %4, 1
  %44 = icmp eq i32 %43, 20000000
  br i1 %44, label %8, label %3, !llvm.loop !289

45:                                               ; preds = %3, %45
  %46 = phi i64 [ 0, %3 ], [ %53, %45 ]
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 %46
  %48 = or i64 %46, 1
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %48
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %48
  %51 = bitcast float* %47 to <4 x float>*
  %52 = load <4 x float>, <4 x float>* %51, align 16, !tbaa !9
  %53 = add nuw nsw i64 %46, 4
  %54 = bitcast float* %49 to <4 x float>*
  %55 = load <4 x float>, <4 x float>* %54, align 4, !tbaa !9
  %56 = fmul <4 x float> %55, %7
  %57 = fadd <4 x float> %52, %56
  %58 = bitcast float* %50 to <4 x float>*
  store <4 x float> %57, <4 x float>* %58, align 4, !tbaa !9
  %59 = icmp ult i64 %46, 248
  br i1 %59, label %45, label %31, !llvm.loop !290
}

; Function Attrs: nounwind ssp uwtable
define i32 @s141() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %24
  %4 = phi i32 [ 0, %0 ], [ %26, %24 ]
  br label %28

5:                                                ; preds = %24
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.174, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %11
  %12 = phi i64 [ %17, %11 ], [ 0, %5 ]
  %13 = phi float [ %16, %11 ], [ 0.000000e+00, %5 ]
  %14 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 65536
  br i1 %18, label %19, label %11, !llvm.loop !32

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %38
  %23 = icmp eq i64 %31, 256
  br i1 %23, label %24, label %28, !llvm.loop !291

24:                                               ; preds = %22
  %25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %26 = add nuw nsw i32 %4, 1
  %27 = icmp eq i32 %26, 39000
  br i1 %27, label %5, label %3, !llvm.loop !292

28:                                               ; preds = %22, %3
  %29 = phi i64 [ 0, %3 ], [ %31, %22 ]
  %30 = phi i32 [ 0, %3 ], [ %32, %22 ]
  %31 = add nuw nsw i64 %29, 1
  %32 = add nuw nsw i32 %30, 1
  %33 = trunc i64 %29 to i32
  %34 = mul i32 %32, %33
  %35 = lshr i32 %34, 1
  %36 = trunc i64 %29 to i32
  %37 = add nuw nsw i32 %35, %36
  br label %38

38:                                               ; preds = %28, %38
  %39 = phi i64 [ %29, %28 ], [ %47, %38 ]
  %40 = phi i32 [ %37, %28 ], [ %49, %38 ]
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %39, i64 %29
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = zext i32 %40 to i64
  %44 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fadd float %42, %45
  store float %46, float* %44, align 4, !tbaa !9
  %47 = add nuw nsw i64 %39, 1
  %48 = trunc i64 %47 to i32
  %49 = add nuw nsw i32 %40, %48
  %50 = icmp eq i64 %47, 256
  br i1 %50, label %22, label %38, !llvm.loop !293
}

; Function Attrs: nounwind ssp uwtable
define i32 @s141p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %24
  %4 = phi i32 [ 0, %0 ], [ %26, %24 ]
  br label %28

5:                                                ; preds = %24
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.175, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %11
  %12 = phi i64 [ %17, %11 ], [ 0, %5 ]
  %13 = phi float [ %16, %11 ], [ 0.000000e+00, %5 ]
  %14 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 65536
  br i1 %18, label %19, label %11, !llvm.loop !32

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %38
  %23 = icmp eq i64 %31, 256
  br i1 %23, label %24, label %28, !llvm.loop !294

24:                                               ; preds = %22
  %25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %26 = add nuw nsw i32 %4, 1
  %27 = icmp eq i32 %26, 39000
  br i1 %27, label %5, label %3, !llvm.loop !295

28:                                               ; preds = %22, %3
  %29 = phi i64 [ 0, %3 ], [ %31, %22 ]
  %30 = phi i32 [ 0, %3 ], [ %32, %22 ]
  %31 = add nuw nsw i64 %29, 1
  %32 = add nuw nsw i32 %30, 1
  %33 = trunc i64 %29 to i32
  %34 = mul i32 %32, %33
  %35 = lshr i32 %34, 1
  %36 = trunc i64 %29 to i32
  %37 = add nuw nsw i32 %35, %36
  br label %38

38:                                               ; preds = %28, %38
  %39 = phi i64 [ %29, %28 ], [ %47, %38 ]
  %40 = phi i32 [ %37, %28 ], [ %49, %38 ]
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %39, i64 %29
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = zext i32 %40 to i64
  %44 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fadd float %42, %45
  store float %46, float* %44, align 4, !tbaa !9
  %47 = add nuw nsw i64 %39, 1
  %48 = trunc i64 %47 to i32
  %49 = add nuw nsw i32 %40, %48
  %50 = icmp eq i64 %47, 256
  br i1 %50, label %22, label %38, !llvm.loop !296
}

; Function Attrs: nofree norecurse nosync nounwind ssp uwtable
define i32 @s151s(float* nocapture %0, float* nocapture readonly %1, i32 %2) local_unnamed_addr #11 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr float, float* %0, i64 31999
  %6 = getelementptr float, float* %0, i64 %4
  %7 = add nsw i64 %4, 31999
  %8 = getelementptr float, float* %0, i64 %7
  %9 = getelementptr float, float* %1, i64 31999
  %10 = icmp ugt float* %8, %0
  %11 = icmp ult float* %6, %5
  %12 = and i1 %10, %11
  %13 = icmp ugt float* %9, %0
  %14 = icmp ugt float* %5, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %19, %3
  %18 = phi i64 [ 0, %3 ], [ 31992, %19 ]
  br label %43

19:                                               ; preds = %3, %19
  %20 = phi i64 [ %40, %19 ], [ 0, %3 ]
  %21 = add nsw i64 %20, %4
  %22 = getelementptr inbounds float, float* %0, i64 %21
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !9, !alias.scope !297
  %25 = getelementptr inbounds float, float* %22, i64 4
  %26 = bitcast float* %25 to <4 x float>*
  %27 = load <4 x float>, <4 x float>* %26, align 4, !tbaa !9, !alias.scope !297
  %28 = getelementptr inbounds float, float* %1, i64 %20
  %29 = bitcast float* %28 to <4 x float>*
  %30 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !9, !alias.scope !300
  %31 = getelementptr inbounds float, float* %28, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !9, !alias.scope !300
  %34 = fadd <4 x float> %24, %30
  %35 = fadd <4 x float> %27, %33
  %36 = getelementptr inbounds float, float* %0, i64 %20
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> %34, <4 x float>* %37, align 4, !tbaa !9, !alias.scope !302, !noalias !304
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> %35, <4 x float>* %39, align 4, !tbaa !9, !alias.scope !302, !noalias !304
  %40 = add nuw i64 %20, 8
  %41 = icmp eq i64 %40, 31992
  br i1 %41, label %17, label %19, !llvm.loop !305

42:                                               ; preds = %43
  ret i32 0

43:                                               ; preds = %17, %43
  %44 = phi i64 [ %52, %43 ], [ %18, %17 ]
  %45 = add nsw i64 %44, %4
  %46 = getelementptr inbounds float, float* %0, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = getelementptr inbounds float, float* %1, i64 %44
  %49 = load float, float* %48, align 4, !tbaa !9
  %50 = fadd float %47, %49
  %51 = getelementptr inbounds float, float* %0, i64 %44
  store float %50, float* %51, align 4, !tbaa !9
  %52 = add nuw nsw i64 %44, 1
  %53 = icmp eq i64 %52, 31999
  br i1 %53, label %42, label %43, !llvm.loop !306
}

; Function Attrs: nounwind ssp uwtable
define i32 @s151() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %45, %0
  %4 = phi i32 [ 0, %0 ], [ %68, %45 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %26, %5 ]
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 4, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = fadd <4 x float> %10, %16
  %21 = fadd <4 x float> %13, %19
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !9
  %26 = add nuw i64 %6, 8
  %27 = icmp eq i64 %26, 31992
  br i1 %27, label %45, label %5, !llvm.loop !307

28:                                               ; preds = %45
  %29 = tail call i64 @"\01_clock"() #19
  %30 = sub i64 %29, %2
  %31 = uitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.176, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %40, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %39, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %36, %38
  %40 = add nuw nsw i64 %35, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %42, label %34, !llvm.loop !29

42:                                               ; preds = %34
  %43 = fpext float %39 to double
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %43) #19
  ret i32 0

45:                                               ; preds = %5
  %46 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %47 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31992), align 16, !tbaa !9
  %48 = fadd float %46, %47
  store float %48, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31992), align 16, !tbaa !9
  %49 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %50 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !9
  %51 = fadd float %49, %50
  store float %51, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %52 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !9
  %54 = fadd float %52, %53
  store float %54, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %55 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !9
  %57 = fadd float %55, %56
  store float %57, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %58 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %59 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %60 = fadd float %58, %59
  store float %60, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %61 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %63 = fadd float %61, %62
  store float %63, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %64 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %65 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %66 = fadd float %64, %65
  store float %66, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %67 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %68 = add nuw nsw i32 %4, 1
  %69 = icmp eq i32 %68, 250000
  br i1 %69, label %28, label %3, !llvm.loop !308
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind ssp uwtable willreturn
define i32 @s152s(float* nocapture %0, float* nocapture readonly %1, float* nocapture readonly %2, i32 %3) local_unnamed_addr #12 {
  %5 = sext i32 %3 to i64
  %6 = getelementptr inbounds float, float* %1, i64 %5
  %7 = load float, float* %6, align 4, !tbaa !9
  %8 = getelementptr inbounds float, float* %2, i64 %5
  %9 = load float, float* %8, align 4, !tbaa !9
  %10 = fmul float %7, %9
  %11 = getelementptr inbounds float, float* %0, i64 %5
  %12 = load float, float* %11, align 4, !tbaa !9
  %13 = fadd float %12, %10
  store float %13, float* %11, align 4, !tbaa !9
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @s152() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %44, %0
  %4 = phi i32 [ 0, %0 ], [ %46, %44 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %25, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fmul <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> %13, <4 x float>* %15, align 16, !tbaa !9
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fmul <4 x float> %13, %18
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !9
  %23 = fadd <4 x float> %22, %19
  %24 = bitcast float* %20 to <4 x float>*
  store <4 x float> %23, <4 x float>* %24, align 16, !tbaa !9
  %25 = add nuw i64 %6, 4
  %26 = icmp eq i64 %25, 32000
  br i1 %26, label %44, label %5, !llvm.loop !309

27:                                               ; preds = %44
  %28 = tail call i64 @"\01_clock"() #19
  %29 = sub i64 %28, %2
  %30 = uitofp i64 %29 to double
  %31 = fdiv double %30, 1.000000e+06
  %32 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.177, i64 0, i64 0), double %31)
  br label %33

33:                                               ; preds = %33, %27
  %34 = phi i64 [ 0, %27 ], [ %39, %33 ]
  %35 = phi float [ 0.000000e+00, %27 ], [ %38, %33 ]
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %37 = load float, float* %36, align 4, !tbaa !9
  %38 = fadd float %35, %37
  %39 = add nuw nsw i64 %34, 1
  %40 = icmp eq i64 %39, 32000
  br i1 %40, label %41, label %33, !llvm.loop !29

41:                                               ; preds = %33
  %42 = fpext float %38 to double
  %43 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %42) #19
  ret i32 0

44:                                               ; preds = %5
  %45 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %46 = add nuw nsw i32 %4, 1
  %47 = icmp eq i32 %46, 50000
  br i1 %47, label %27, label %3, !llvm.loop !310
}

; Function Attrs: nounwind ssp uwtable
define i32 @s161() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.178, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %56
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 25000
  br i1 %30, label %5, label %3, !llvm.loop !311

31:                                               ; preds = %3, %56
  %32 = phi i64 [ 0, %3 ], [ %57, %56 ]
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fcmp olt float %34, 0.000000e+00
  br i1 %35, label %47, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %40 = load float, float* %39, align 4, !tbaa !9
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %32
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fmul float %40, %42
  %44 = fadd float %38, %43
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %44, float* %45, align 4, !tbaa !9
  %46 = add nuw nsw i64 %32, 1
  br label %56

47:                                               ; preds = %31
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %49 = load float, float* %48, align 4, !tbaa !9
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %51 = load float, float* %50, align 4, !tbaa !9
  %52 = fmul float %51, %51
  %53 = fadd float %49, %52
  %54 = add nuw nsw i64 %32, 1
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %54
  store float %53, float* %55, align 4, !tbaa !9
  br label %56

56:                                               ; preds = %36, %47
  %57 = phi i64 [ %46, %36 ], [ %54, %47 ]
  %58 = icmp eq i64 %57, 31999
  br i1 %58, label %27, label %31, !llvm.loop !312
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1161() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.179, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %50
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 50000
  br i1 %30, label %5, label %3, !llvm.loop !313

31:                                               ; preds = %3, %50
  %32 = phi i64 [ 0, %3 ], [ %54, %50 ]
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fcmp olt float %34, 0.000000e+00
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %32
  %40 = load float, float* %39, align 4, !tbaa !9
  %41 = fmul float %38, %40
  %42 = fadd float %34, %41
  br label %50

43:                                               ; preds = %31
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = fmul float %47, %47
  %49 = fadd float %45, %48
  br label %50

50:                                               ; preds = %36, %43
  %51 = phi [32000 x float]* [ @a, %36 ], [ @b, %43 ]
  %52 = phi float [ %42, %36 ], [ %49, %43 ]
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* %51, i64 0, i64 %32
  store float %52, float* %53, align 4, !tbaa !9
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, 31999
  br i1 %55, label %27, label %31, !llvm.loop !314
}

; Function Attrs: nounwind ssp uwtable
define i32 @s162(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = icmp sgt i32 %0, 0
  br i1 %4, label %5, label %83

5:                                                ; preds = %1
  %6 = zext i32 %0 to i64
  %7 = getelementptr [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = add nuw nsw i64 %6, 31999
  %9 = getelementptr [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %10 = icmp ugt float* %9, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0)
  %11 = icmp ult float* %7, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999)
  %12 = and i1 %10, %11
  br label %13

13:                                               ; preds = %62, %5
  %14 = phi i32 [ %64, %62 ], [ 0, %5 ]
  br i1 %12, label %46, label %15

15:                                               ; preds = %13, %15
  %16 = phi i64 [ %44, %15 ], [ 0, %13 ]
  %17 = add nuw nsw i64 %16, %6
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !9, !alias.scope !315
  %21 = getelementptr inbounds float, float* %18, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !9, !alias.scope !315
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %16
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !9
  %27 = getelementptr inbounds float, float* %24, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !9
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %16
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !9
  %33 = getelementptr inbounds float, float* %30, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 16, !tbaa !9
  %36 = fmul <4 x float> %26, %32
  %37 = fmul <4 x float> %29, %35
  %38 = fadd <4 x float> %20, %36
  %39 = fadd <4 x float> %23, %37
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %16
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %38, <4 x float>* %41, align 16, !tbaa !9, !alias.scope !318, !noalias !315
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %39, <4 x float>* %43, align 16, !tbaa !9, !alias.scope !318, !noalias !315
  %44 = add nuw i64 %16, 8
  %45 = icmp eq i64 %44, 31992
  br i1 %45, label %46, label %15, !llvm.loop !320

46:                                               ; preds = %15, %13
  %47 = phi i64 [ 0, %13 ], [ 31992, %15 ]
  br label %48

48:                                               ; preds = %46, %48
  %49 = phi i64 [ %60, %48 ], [ %47, %46 ]
  %50 = add nuw nsw i64 %49, %6
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %52 = load float, float* %51, align 4, !tbaa !9
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %49
  %54 = load float, float* %53, align 4, !tbaa !9
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %49
  %56 = load float, float* %55, align 4, !tbaa !9
  %57 = fmul float %54, %56
  %58 = fadd float %52, %57
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  store float %58, float* %59, align 4, !tbaa !9
  %60 = add nuw nsw i64 %49, 1
  %61 = icmp eq i64 %60, 31999
  br i1 %61, label %62, label %48, !llvm.loop !321

62:                                               ; preds = %48
  %63 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %64 = add nuw nsw i32 %14, 1
  %65 = icmp eq i32 %64, 50000
  br i1 %65, label %66, label %13, !llvm.loop !322

66:                                               ; preds = %83, %62
  %67 = tail call i64 @"\01_clock"() #19
  %68 = sub i64 %67, %3
  %69 = uitofp i64 %68 to double
  %70 = fdiv double %69, 1.000000e+06
  %71 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.180, i64 0, i64 0), double %70)
  br label %72

72:                                               ; preds = %72, %66
  %73 = phi i64 [ 0, %66 ], [ %78, %72 ]
  %74 = phi float [ 0.000000e+00, %66 ], [ %77, %72 ]
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  %76 = load float, float* %75, align 4, !tbaa !9
  %77 = fadd float %74, %76
  %78 = add nuw nsw i64 %73, 1
  %79 = icmp eq i64 %78, 32000
  br i1 %79, label %80, label %72, !llvm.loop !29

80:                                               ; preds = %72
  %81 = fpext float %77 to double
  %82 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %81) #19
  ret i32 0

83:                                               ; preds = %1, %83
  %84 = phi i32 [ %86, %83 ], [ 0, %1 ]
  %85 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %86 = add nuw nsw i32 %84, 1
  %87 = icmp eq i32 %86, 50000
  br i1 %87, label %66, label %83, !llvm.loop !322
}

; Function Attrs: nounwind ssp uwtable
define i32 @s171(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = sext i32 %0 to i64
  %5 = icmp eq i32 %0, 1
  br label %6

6:                                                ; preds = %46, %1
  %7 = phi i32 [ 0, %1 ], [ %48, %46 ]
  br i1 %5, label %8, label %50

8:                                                ; preds = %6, %8
  %9 = phi i64 [ %27, %8 ], [ 0, %6 ]
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds float, float* %10, i64 4
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = mul nsw i64 %9, %4
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %16
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = getelementptr inbounds float, float* %17, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !9
  %23 = fadd <4 x float> %12, %19
  %24 = fadd <4 x float> %15, %22
  %25 = bitcast float* %17 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 16, !tbaa !9
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 16, !tbaa !9
  %27 = add nuw i64 %9, 8
  %28 = icmp eq i64 %27, 32000
  br i1 %28, label %46, label %8, !llvm.loop !323

29:                                               ; preds = %46
  %30 = tail call i64 @"\01_clock"() #19
  %31 = sub i64 %30, %3
  %32 = uitofp i64 %31 to double
  %33 = fdiv double %32, 1.000000e+06
  %34 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.181, i64 0, i64 0), double %33)
  br label %35

35:                                               ; preds = %35, %29
  %36 = phi i64 [ 0, %29 ], [ %41, %35 ]
  %37 = phi float [ 0.000000e+00, %29 ], [ %40, %35 ]
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %37, %39
  %41 = add nuw nsw i64 %36, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %43, label %35, !llvm.loop !29

43:                                               ; preds = %35
  %44 = fpext float %40 to double
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %44) #19
  ret i32 0

46:                                               ; preds = %50, %8
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %48 = add nuw nsw i32 %7, 1
  %49 = icmp eq i32 %48, 50000
  br i1 %49, label %29, label %6, !llvm.loop !324

50:                                               ; preds = %6, %50
  %51 = phi i64 [ %58, %50 ], [ 0, %6 ]
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !9
  %54 = mul nsw i64 %51, %4
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !9
  %57 = fadd float %53, %56
  store float %57, float* %55, align 4, !tbaa !9
  %58 = add nuw nsw i64 %51, 1
  %59 = icmp eq i64 %58, 32000
  br i1 %59, label %46, label %50, !llvm.loop !325
}

; Function Attrs: nounwind ssp uwtable
define i32 @s172(i32 %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0))
  %4 = tail call i64 @"\01_clock"() #19
  %5 = icmp slt i32 %0, 32001
  br i1 %5, label %6, label %42

6:                                                ; preds = %2
  %7 = add i32 %0, -1
  %8 = sext i32 %7 to i64
  %9 = sext i32 %1 to i64
  br label %10

10:                                               ; preds = %6, %21
  %11 = phi i32 [ %23, %21 ], [ 0, %6 ]
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi i64 [ %8, %10 ], [ %19, %12 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  store float %18, float* %16, align 4, !tbaa !9
  %19 = add i64 %13, %9
  %20 = icmp slt i64 %19, 32000
  br i1 %20, label %12, label %21, !llvm.loop !326

21:                                               ; preds = %12
  %22 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %23 = add nuw nsw i32 %11, 1
  %24 = icmp eq i32 %23, 50000
  br i1 %24, label %25, label %10, !llvm.loop !327

25:                                               ; preds = %42, %21
  %26 = tail call i64 @"\01_clock"() #19
  %27 = sub i64 %26, %4
  %28 = uitofp i64 %27 to double
  %29 = fdiv double %28, 1.000000e+06
  %30 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.182, i64 0, i64 0), double %29)
  br label %31

31:                                               ; preds = %31, %25
  %32 = phi i64 [ 0, %25 ], [ %37, %31 ]
  %33 = phi float [ 0.000000e+00, %25 ], [ %36, %31 ]
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fadd float %33, %35
  %37 = add nuw nsw i64 %32, 1
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %39, label %31, !llvm.loop !29

39:                                               ; preds = %31
  %40 = fpext float %36 to double
  %41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %40) #19
  ret i32 0

42:                                               ; preds = %2, %42
  %43 = phi i32 [ %45, %42 ], [ 0, %2 ]
  %44 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %45 = add nuw nsw i32 %43, 1
  %46 = icmp eq i32 %45, 50000
  br i1 %46, label %25, label %42, !llvm.loop !327
}

; Function Attrs: nounwind ssp uwtable
define i32 @s172p(i32 %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0))
  %4 = tail call i64 @"\01_clock"() #19
  %5 = icmp slt i32 %0, 32001
  br i1 %5, label %6, label %42

6:                                                ; preds = %2
  %7 = add i32 %0, -1
  %8 = sext i32 %7 to i64
  %9 = sext i32 %1 to i64
  br label %10

10:                                               ; preds = %6, %21
  %11 = phi i32 [ %23, %21 ], [ 0, %6 ]
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi i64 [ %8, %10 ], [ %19, %12 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  store float %18, float* %16, align 4, !tbaa !9
  %19 = add i64 %13, %9
  %20 = icmp slt i64 %19, 32000
  br i1 %20, label %12, label %21, !llvm.loop !328

21:                                               ; preds = %12
  %22 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %23 = add nuw nsw i32 %11, 1
  %24 = icmp eq i32 %23, 50000
  br i1 %24, label %25, label %10, !llvm.loop !329

25:                                               ; preds = %42, %21
  %26 = tail call i64 @"\01_clock"() #19
  %27 = sub i64 %26, %4
  %28 = uitofp i64 %27 to double
  %29 = fdiv double %28, 1.000000e+06
  %30 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.183, i64 0, i64 0), double %29)
  br label %31

31:                                               ; preds = %31, %25
  %32 = phi i64 [ 0, %25 ], [ %37, %31 ]
  %33 = phi float [ 0.000000e+00, %25 ], [ %36, %31 ]
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fadd float %33, %35
  %37 = add nuw nsw i64 %32, 1
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %39, label %31, !llvm.loop !29

39:                                               ; preds = %31
  %40 = fpext float %36 to double
  %41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %40) #19
  ret i32 0

42:                                               ; preds = %2, %42
  %43 = phi i32 [ %45, %42 ], [ 0, %2 ]
  %44 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %45 = add nuw nsw i32 %43, 1
  %46 = icmp eq i32 %45, 50000
  br i1 %46, label %25, label %42, !llvm.loop !329
}

; Function Attrs: nounwind ssp uwtable
define i32 @s173() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %36, %0
  %4 = phi i32 [ 0, %0 ], [ %38, %36 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %17, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fadd <4 x float> %9, %12
  %14 = add nuw nsw i64 %6, 16000
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %13, <4 x float>* %16, align 16, !tbaa !9
  %17 = add nuw i64 %6, 4
  %18 = icmp eq i64 %17, 16000
  br i1 %18, label %36, label %5, !llvm.loop !330

19:                                               ; preds = %36
  %20 = tail call i64 @"\01_clock"() #19
  %21 = sub i64 %20, %2
  %22 = uitofp i64 %21 to double
  %23 = fdiv double %22, 1.000000e+06
  %24 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.184, i64 0, i64 0), double %23)
  br label %25

25:                                               ; preds = %25, %19
  %26 = phi i64 [ 0, %19 ], [ %31, %25 ]
  %27 = phi float [ 0.000000e+00, %19 ], [ %30, %25 ]
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %29 = load float, float* %28, align 4, !tbaa !9
  %30 = fadd float %27, %29
  %31 = add nuw nsw i64 %26, 1
  %32 = icmp eq i64 %31, 32000
  br i1 %32, label %33, label %25, !llvm.loop !29

33:                                               ; preds = %25
  %34 = fpext float %30 to double
  %35 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %34) #19
  ret i32 0

36:                                               ; preds = %5
  %37 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %38 = add nuw nsw i32 %4, 1
  %39 = icmp eq i32 %38, 500000
  br i1 %39, label %19, label %3, !llvm.loop !331
}

; Function Attrs: nounwind ssp uwtable
define i32 @s174(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = icmp sgt i32 %0, 0
  br i1 %4, label %5, label %54

5:                                                ; preds = %1
  %6 = zext i32 %0 to i64
  %7 = zext i32 %0 to i64
  %8 = icmp ult i32 %0, 8
  %9 = and i64 %7, 4294967288
  %10 = icmp eq i64 %9, %7
  br label %11

11:                                               ; preds = %5, %50
  %12 = phi i32 [ %52, %50 ], [ 0, %5 ]
  br i1 %8, label %37, label %13

13:                                               ; preds = %11, %13
  %14 = phi i64 [ %34, %13 ], [ 0, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !9
  %18 = getelementptr inbounds float, float* %15, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 16, !tbaa !9
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !9
  %27 = fadd <4 x float> %17, %23
  %28 = fadd <4 x float> %20, %26
  %29 = add nuw nsw i64 %14, %6
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %27, <4 x float>* %31, align 4, !tbaa !9
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> %28, <4 x float>* %33, align 4, !tbaa !9
  %34 = add nuw i64 %14, 8
  %35 = icmp eq i64 %34, %9
  br i1 %35, label %36, label %13, !llvm.loop !332

36:                                               ; preds = %13
  br i1 %10, label %50, label %37

37:                                               ; preds = %11, %36
  %38 = phi i64 [ 0, %11 ], [ %9, %36 ]
  br label %39

39:                                               ; preds = %37, %39
  %40 = phi i64 [ %48, %39 ], [ %38, %37 ]
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = fadd float %42, %44
  %46 = add nuw nsw i64 %40, %6
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  store float %45, float* %47, align 4, !tbaa !9
  %48 = add nuw nsw i64 %40, 1
  %49 = icmp eq i64 %48, %7
  br i1 %49, label %50, label %39, !llvm.loop !333

50:                                               ; preds = %39, %36
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %52 = add nuw nsw i32 %12, 1
  %53 = icmp eq i32 %52, 500000
  br i1 %53, label %59, label %11, !llvm.loop !335

54:                                               ; preds = %1, %54
  %55 = phi i32 [ %57, %54 ], [ 0, %1 ]
  %56 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %57 = add nuw nsw i32 %55, 1
  %58 = icmp eq i32 %57, 500000
  br i1 %58, label %59, label %54, !llvm.loop !335

59:                                               ; preds = %54, %50
  %60 = tail call i64 @"\01_clock"() #19
  %61 = sub i64 %60, %3
  %62 = uitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  %64 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.185, i64 0, i64 0), double %63)
  br label %65

65:                                               ; preds = %65, %59
  %66 = phi i64 [ 0, %59 ], [ %71, %65 ]
  %67 = phi float [ 0.000000e+00, %59 ], [ %70, %65 ]
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %69 = load float, float* %68, align 4, !tbaa !9
  %70 = fadd float %67, %69
  %71 = add nuw nsw i64 %66, 1
  %72 = icmp eq i64 %71, 32000
  br i1 %72, label %73, label %65, !llvm.loop !29

73:                                               ; preds = %65
  %74 = fpext float %70 to double
  %75 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %74) #19
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @s175(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = sext i32 %0 to i64
  %5 = call i64 @llvm.smax.i64(i64 %4, i64 31999)
  %6 = add nsw i64 %5, -1
  %7 = udiv i64 %6, %4
  %8 = add nuw nsw i64 %7, 1
  %9 = icmp ugt i64 %7, 6
  %10 = icmp eq i32 %0, 1
  %11 = select i1 %9, i1 %10, i1 false
  %12 = and i64 %8, -8
  %13 = mul i64 %12, %4
  %14 = icmp eq i64 %8, %12
  br label %15

15:                                               ; preds = %1, %61
  %16 = phi i32 [ 0, %1 ], [ %63, %61 ]
  br i1 %11, label %17, label %42

17:                                               ; preds = %15, %17
  %18 = phi i64 [ %39, %17 ], [ 0, %15 ]
  %19 = mul i64 %18, %4
  %20 = add nsw i64 %19, %4
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %20
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !9
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !9
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !9
  %30 = getelementptr inbounds float, float* %27, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !9
  %33 = fadd <4 x float> %23, %29
  %34 = fadd <4 x float> %26, %32
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %33, <4 x float>* %36, align 16, !tbaa !9
  %37 = getelementptr inbounds float, float* %35, i64 4
  %38 = bitcast float* %37 to <4 x float>*
  store <4 x float> %34, <4 x float>* %38, align 16, !tbaa !9
  %39 = add nuw i64 %18, 8
  %40 = icmp eq i64 %39, %12
  br i1 %40, label %41, label %17, !llvm.loop !336

41:                                               ; preds = %17
  br i1 %14, label %61, label %42

42:                                               ; preds = %15, %41
  %43 = phi i64 [ 0, %15 ], [ %13, %41 ]
  br label %65

44:                                               ; preds = %61
  %45 = tail call i64 @"\01_clock"() #19
  %46 = sub i64 %45, %3
  %47 = uitofp i64 %46 to double
  %48 = fdiv double %47, 1.000000e+06
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.186, i64 0, i64 0), double %48)
  br label %50

50:                                               ; preds = %50, %44
  %51 = phi i64 [ 0, %44 ], [ %56, %50 ]
  %52 = phi float [ 0.000000e+00, %44 ], [ %55, %50 ]
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %51
  %54 = load float, float* %53, align 4, !tbaa !9
  %55 = fadd float %52, %54
  %56 = add nuw nsw i64 %51, 1
  %57 = icmp eq i64 %56, 32000
  br i1 %57, label %58, label %50, !llvm.loop !29

58:                                               ; preds = %50
  %59 = fpext float %55 to double
  %60 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %59) #19
  ret i32 0

61:                                               ; preds = %65, %41
  %62 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %63 = add nuw nsw i32 %16, 1
  %64 = icmp eq i32 %63, 50000
  br i1 %64, label %44, label %15, !llvm.loop !337

65:                                               ; preds = %42, %65
  %66 = phi i64 [ %67, %65 ], [ %43, %42 ]
  %67 = add nsw i64 %66, %4
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !9
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %66
  %71 = load float, float* %70, align 4, !tbaa !9
  %72 = fadd float %69, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  store float %72, float* %73, align 4, !tbaa !9
  %74 = icmp slt i64 %67, 31999
  br i1 %74, label %65, label %61, !llvm.loop !338
}

; Function Attrs: nounwind ssp uwtable
define i32 @s176() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %14

3:                                                ; preds = %3, %160
  %4 = phi i64 [ 0, %160 ], [ %9, %3 ]
  %5 = phi float [ 0.000000e+00, %160 ], [ %8, %3 ]
  %6 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %4
  %7 = load float, float* %6, align 4, !tbaa !9
  %8 = fadd float %5, %7
  %9 = add nuw nsw i64 %4, 1
  %10 = icmp eq i64 %9, 32000
  br i1 %10, label %11, label %3, !llvm.loop !29

11:                                               ; preds = %3
  %12 = fpext float %8 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #19
  ret i32 0

14:                                               ; preds = %0, %48
  %15 = phi i64 [ 0, %0 ], [ %49, %48 ]
  %16 = sub nuw nsw i64 15999, %15
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %15
  %18 = load float, float* %17, align 4, !tbaa !9
  %19 = insertelement <4 x float> poison, float %18, i32 0
  %20 = shufflevector <4 x float> %19, <4 x float> poison, <4 x i32> zeroinitializer
  %21 = insertelement <4 x float> poison, float %18, i32 0
  %22 = shufflevector <4 x float> %21, <4 x float> poison, <4 x i32> zeroinitializer
  br label %23

23:                                               ; preds = %23, %14
  %24 = phi i64 [ 0, %14 ], [ %44, %23 ]
  %25 = add nuw nsw i64 %16, %24
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !9
  %29 = getelementptr inbounds float, float* %26, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !9
  %32 = fmul <4 x float> %28, %20
  %33 = fmul <4 x float> %31, %22
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  %35 = bitcast float* %34 to <4 x float>*
  %36 = load <4 x float>, <4 x float>* %35, align 16, !tbaa !9
  %37 = getelementptr inbounds float, float* %34, i64 4
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 16, !tbaa !9
  %40 = fadd <4 x float> %36, %32
  %41 = fadd <4 x float> %39, %33
  %42 = bitcast float* %34 to <4 x float>*
  store <4 x float> %40, <4 x float>* %42, align 16, !tbaa !9
  %43 = bitcast float* %37 to <4 x float>*
  store <4 x float> %41, <4 x float>* %43, align 16, !tbaa !9
  %44 = add nuw i64 %24, 8
  %45 = icmp eq i64 %44, 16000
  br i1 %45, label %48, label %23, !llvm.loop !339

46:                                               ; preds = %48
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  br label %51

48:                                               ; preds = %23
  %49 = add nuw nsw i64 %15, 1
  %50 = icmp eq i64 %49, 16000
  br i1 %50, label %46, label %14, !llvm.loop !340

51:                                               ; preds = %83, %46
  %52 = phi i64 [ 0, %46 ], [ %84, %83 ]
  %53 = sub nuw nsw i64 15999, %52
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %52
  %55 = load float, float* %54, align 4, !tbaa !9
  %56 = insertelement <4 x float> poison, float %55, i32 0
  %57 = shufflevector <4 x float> %56, <4 x float> poison, <4 x i32> zeroinitializer
  %58 = insertelement <4 x float> poison, float %55, i32 0
  %59 = shufflevector <4 x float> %58, <4 x float> poison, <4 x i32> zeroinitializer
  br label %60

60:                                               ; preds = %60, %51
  %61 = phi i64 [ 0, %51 ], [ %81, %60 ]
  %62 = add nuw nsw i64 %53, %61
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %64 = bitcast float* %63 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %64, align 4, !tbaa !9
  %66 = getelementptr inbounds float, float* %63, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  %68 = load <4 x float>, <4 x float>* %67, align 4, !tbaa !9
  %69 = fmul <4 x float> %65, %57
  %70 = fmul <4 x float> %68, %59
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  %72 = bitcast float* %71 to <4 x float>*
  %73 = load <4 x float>, <4 x float>* %72, align 16, !tbaa !9
  %74 = getelementptr inbounds float, float* %71, i64 4
  %75 = bitcast float* %74 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 16, !tbaa !9
  %77 = fadd <4 x float> %73, %69
  %78 = fadd <4 x float> %76, %70
  %79 = bitcast float* %71 to <4 x float>*
  store <4 x float> %77, <4 x float>* %79, align 16, !tbaa !9
  %80 = bitcast float* %74 to <4 x float>*
  store <4 x float> %78, <4 x float>* %80, align 16, !tbaa !9
  %81 = add nuw i64 %61, 8
  %82 = icmp eq i64 %81, 16000
  br i1 %82, label %83, label %60, !llvm.loop !341

83:                                               ; preds = %60
  %84 = add nuw nsw i64 %52, 1
  %85 = icmp eq i64 %84, 16000
  br i1 %85, label %86, label %51, !llvm.loop !340

86:                                               ; preds = %83
  %87 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  br label %88

88:                                               ; preds = %120, %86
  %89 = phi i64 [ 0, %86 ], [ %121, %120 ]
  %90 = sub nuw nsw i64 15999, %89
  %91 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %89
  %92 = load float, float* %91, align 4, !tbaa !9
  %93 = insertelement <4 x float> poison, float %92, i32 0
  %94 = shufflevector <4 x float> %93, <4 x float> poison, <4 x i32> zeroinitializer
  %95 = insertelement <4 x float> poison, float %92, i32 0
  %96 = shufflevector <4 x float> %95, <4 x float> poison, <4 x i32> zeroinitializer
  br label %97

97:                                               ; preds = %97, %88
  %98 = phi i64 [ 0, %88 ], [ %118, %97 ]
  %99 = add nuw nsw i64 %90, %98
  %100 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %99
  %101 = bitcast float* %100 to <4 x float>*
  %102 = load <4 x float>, <4 x float>* %101, align 4, !tbaa !9
  %103 = getelementptr inbounds float, float* %100, i64 4
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 4, !tbaa !9
  %106 = fmul <4 x float> %102, %94
  %107 = fmul <4 x float> %105, %96
  %108 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %98
  %109 = bitcast float* %108 to <4 x float>*
  %110 = load <4 x float>, <4 x float>* %109, align 16, !tbaa !9
  %111 = getelementptr inbounds float, float* %108, i64 4
  %112 = bitcast float* %111 to <4 x float>*
  %113 = load <4 x float>, <4 x float>* %112, align 16, !tbaa !9
  %114 = fadd <4 x float> %110, %106
  %115 = fadd <4 x float> %113, %107
  %116 = bitcast float* %108 to <4 x float>*
  store <4 x float> %114, <4 x float>* %116, align 16, !tbaa !9
  %117 = bitcast float* %111 to <4 x float>*
  store <4 x float> %115, <4 x float>* %117, align 16, !tbaa !9
  %118 = add nuw i64 %98, 8
  %119 = icmp eq i64 %118, 16000
  br i1 %119, label %120, label %97, !llvm.loop !342

120:                                              ; preds = %97
  %121 = add nuw nsw i64 %89, 1
  %122 = icmp eq i64 %121, 16000
  br i1 %122, label %123, label %88, !llvm.loop !340

123:                                              ; preds = %120
  %124 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  br label %125

125:                                              ; preds = %157, %123
  %126 = phi i64 [ 0, %123 ], [ %158, %157 ]
  %127 = sub nuw nsw i64 15999, %126
  %128 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %126
  %129 = load float, float* %128, align 4, !tbaa !9
  %130 = insertelement <4 x float> poison, float %129, i32 0
  %131 = shufflevector <4 x float> %130, <4 x float> poison, <4 x i32> zeroinitializer
  %132 = insertelement <4 x float> poison, float %129, i32 0
  %133 = shufflevector <4 x float> %132, <4 x float> poison, <4 x i32> zeroinitializer
  br label %134

134:                                              ; preds = %134, %125
  %135 = phi i64 [ 0, %125 ], [ %155, %134 ]
  %136 = add nuw nsw i64 %127, %135
  %137 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %136
  %138 = bitcast float* %137 to <4 x float>*
  %139 = load <4 x float>, <4 x float>* %138, align 4, !tbaa !9
  %140 = getelementptr inbounds float, float* %137, i64 4
  %141 = bitcast float* %140 to <4 x float>*
  %142 = load <4 x float>, <4 x float>* %141, align 4, !tbaa !9
  %143 = fmul <4 x float> %139, %131
  %144 = fmul <4 x float> %142, %133
  %145 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %135
  %146 = bitcast float* %145 to <4 x float>*
  %147 = load <4 x float>, <4 x float>* %146, align 16, !tbaa !9
  %148 = getelementptr inbounds float, float* %145, i64 4
  %149 = bitcast float* %148 to <4 x float>*
  %150 = load <4 x float>, <4 x float>* %149, align 16, !tbaa !9
  %151 = fadd <4 x float> %147, %143
  %152 = fadd <4 x float> %150, %144
  %153 = bitcast float* %145 to <4 x float>*
  store <4 x float> %151, <4 x float>* %153, align 16, !tbaa !9
  %154 = bitcast float* %148 to <4 x float>*
  store <4 x float> %152, <4 x float>* %154, align 16, !tbaa !9
  %155 = add nuw i64 %135, 8
  %156 = icmp eq i64 %155, 16000
  br i1 %156, label %157, label %134, !llvm.loop !343

157:                                              ; preds = %134
  %158 = add nuw nsw i64 %126, 1
  %159 = icmp eq i64 %158, 16000
  br i1 %159, label %160, label %125, !llvm.loop !340

160:                                              ; preds = %157
  %161 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %162 = tail call i64 @"\01_clock"() #19
  %163 = sub i64 %162, %2
  %164 = uitofp i64 %163 to double
  %165 = fdiv double %164, 1.000000e+06
  %166 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.187, i64 0, i64 0), double %165)
  br label %3
}

; Function Attrs: nounwind ssp uwtable
define i32 @s211() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %28
  %4 = phi i32 [ 0, %0 ], [ %30, %28 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !9
  br label %32

6:                                                ; preds = %28
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %21, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %18, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %12, !llvm.loop !29

24:                                               ; preds = %12
  %25 = fadd float %18, %21
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #19
  ret i32 0

28:                                               ; preds = %32
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %4, 1
  %31 = icmp eq i32 %30, 50000
  br i1 %31, label %6, label %3, !llvm.loop !344

32:                                               ; preds = %3, %32
  %33 = phi float [ %5, %3 ], [ %48, %32 ]
  %34 = phi i64 [ 1, %3 ], [ %42, %32 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %34
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fmul float %36, %38
  %40 = fadd float %33, %39
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  store float %40, float* %41, align 4, !tbaa !9
  %42 = add nuw nsw i64 %34, 1
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %34
  %46 = load float, float* %45, align 4, !tbaa !9
  %47 = fmul float %38, %46
  %48 = fsub float %44, %47
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  store float %48, float* %49, align 4, !tbaa !9
  %50 = icmp eq i64 %42, 31999
  br i1 %50, label %28, label %32, !llvm.loop !345
}

; Function Attrs: nounwind ssp uwtable
define i32 @s211p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %25

3:                                                ; preds = %62
  %4 = tail call i64 @"\01_clock"() #19
  %5 = sub i64 %4, %2
  %6 = uitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.189, i64 0, i64 0), double %7)
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i64 [ 0, %3 ], [ %19, %9 ]
  %11 = phi float [ 0.000000e+00, %3 ], [ %18, %9 ]
  %12 = phi float [ 0.000000e+00, %3 ], [ %15, %9 ]
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10
  %14 = load float, float* %13, align 4, !tbaa !9
  %15 = fadd float %12, %14
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %10
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %11, %17
  %19 = add nuw nsw i64 %10, 1
  %20 = icmp eq i64 %19, 32000
  br i1 %20, label %21, label %9, !llvm.loop !29

21:                                               ; preds = %9
  %22 = fadd float %15, %18
  %23 = fpext float %22 to double
  %24 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %23) #19
  ret i32 0

25:                                               ; preds = %0, %62
  %26 = phi i32 [ 0, %0 ], [ %72, %62 ]
  %27 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !9
  %28 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 1), align 4, !tbaa !9
  %29 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 1), align 4, !tbaa !9
  %30 = fmul float %28, %29
  %31 = fadd float %27, %30
  store float %31, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 1), align 4, !tbaa !9
  %32 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 2), align 8, !tbaa !9
  %33 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 1), align 4, !tbaa !9
  %34 = fmul float %29, %33
  %35 = fsub float %32, %34
  store float %35, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), align 4, !tbaa !9
  br label %36

36:                                               ; preds = %36, %25
  %37 = phi i64 [ 0, %25 ], [ %60, %36 ]
  %38 = or i64 %37, 2
  %39 = or i64 %37, 3
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %39
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 4, !tbaa !9
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %38
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 8, !tbaa !9
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %38
  %47 = bitcast float* %46 to <4 x float>*
  %48 = load <4 x float>, <4 x float>* %47, align 8, !tbaa !9
  %49 = fmul <4 x float> %45, %48
  %50 = fsub <4 x float> %42, %49
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %38
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> %50, <4 x float>* %52, align 8, !tbaa !9
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %38
  %54 = bitcast float* %53 to <4 x float>*
  %55 = load <4 x float>, <4 x float>* %54, align 8, !tbaa !9
  %56 = fmul <4 x float> %48, %55
  %57 = fadd <4 x float> %50, %56
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> %57, <4 x float>* %59, align 8, !tbaa !9
  %60 = add nuw i64 %37, 4
  %61 = icmp eq i64 %60, 31996
  br i1 %61, label %62, label %36, !llvm.loop !346

62:                                               ; preds = %36
  %63 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !9
  %64 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31998), align 8, !tbaa !9
  %65 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31998), align 8, !tbaa !9
  %66 = fmul float %64, %65
  %67 = fsub float %63, %66
  store float %67, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %68 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31998), align 8, !tbaa !9
  %69 = fmul float %65, %68
  %70 = fadd float %67, %69
  store float %70, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %71 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %72 = add nuw nsw i32 %26, 1
  %73 = icmp eq i32 %72, 50000
  br i1 %73, label %3, label %25, !llvm.loop !347
}

; Function Attrs: nounwind ssp uwtable
define i32 @s212() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %28
  %4 = phi i32 [ 0, %0 ], [ %30, %28 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %32

6:                                                ; preds = %28
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.190, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %21, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %18, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %12, !llvm.loop !29

24:                                               ; preds = %12
  %25 = fadd float %18, %21
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #19
  ret i32 0

28:                                               ; preds = %32
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %4, 1
  %31 = icmp eq i32 %30, 50000
  br i1 %31, label %6, label %3, !llvm.loop !348

32:                                               ; preds = %3, %32
  %33 = phi float [ %5, %3 ], [ %41, %32 ]
  %34 = phi i64 [ 0, %3 ], [ %39, %32 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %38 = fmul float %36, %33
  store float %38, float* %37, align 4, !tbaa !9
  %39 = add nuw nsw i64 %34, 1
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %34
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fmul float %41, %43
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %46 = load float, float* %45, align 4, !tbaa !9
  %47 = fadd float %46, %44
  store float %47, float* %45, align 4, !tbaa !9
  %48 = icmp eq i64 %39, 31999
  br i1 %48, label %28, label %32, !llvm.loop !349
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1213() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %28
  %4 = phi i32 [ 0, %0 ], [ %30, %28 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !9
  br label %32

6:                                                ; preds = %28
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.191, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %21, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %18, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %12, !llvm.loop !29

24:                                               ; preds = %12
  %25 = fadd float %18, %21
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #19
  ret i32 0

28:                                               ; preds = %32
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %4, 1
  %31 = icmp eq i32 %30, 50000
  br i1 %31, label %6, label %3, !llvm.loop !350

32:                                               ; preds = %3, %32
  %33 = phi float [ %5, %3 ], [ %44, %32 ]
  %34 = phi i64 [ 1, %3 ], [ %39, %32 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = fadd float %33, %36
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  store float %37, float* %38, align 4, !tbaa !9
  %39 = add nuw nsw i64 %34, 1
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %34
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fmul float %41, %43
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  store float %44, float* %45, align 4, !tbaa !9
  %46 = icmp eq i64 %39, 31999
  br i1 %46, label %28, label %32, !llvm.loop !351
}

; Function Attrs: nounwind ssp uwtable
define i32 @s221() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %28
  %4 = phi i32 [ 0, %0 ], [ %30, %28 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !9
  br label %32

6:                                                ; preds = %28
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.192, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %21, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %18, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %12, !llvm.loop !29

24:                                               ; preds = %12
  %25 = fadd float %18, %21
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #19
  ret i32 0

28:                                               ; preds = %32
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %4, 1
  %31 = icmp eq i32 %30, 25000
  br i1 %31, label %6, label %3, !llvm.loop !352

32:                                               ; preds = %3, %32
  %33 = phi float [ %5, %3 ], [ %44, %32 ]
  %34 = phi i64 [ 1, %3 ], [ %46, %32 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %34
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fmul float %36, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fadd float %41, %39
  store float %42, float* %40, align 4, !tbaa !9
  %43 = fadd float %42, %33
  %44 = fadd float %38, %43
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  store float %44, float* %45, align 4, !tbaa !9
  %46 = add nuw nsw i64 %34, 1
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %28, label %32, !llvm.loop !353
}

; Function Attrs: nounwind ssp uwtable
define i32 @s221p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %63, %0
  %4 = phi i32 [ 0, %0 ], [ %65, %63 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %37, %5 ]
  %7 = shl i64 %6, 2
  %8 = or i64 %7, 1
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %10 = bitcast float* %9 to <16 x float>*
  %11 = load <16 x float>, <16 x float>* %10, align 4, !tbaa !9
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %13 = bitcast float* %12 to <16 x float>*
  %14 = load <16 x float>, <16 x float>* %13, align 4, !tbaa !9
  %15 = fmul <16 x float> %11, %14
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %17 = bitcast float* %16 to <16 x float>*
  %18 = load <16 x float>, <16 x float>* %17, align 4, !tbaa !9
  %19 = fadd <16 x float> %18, %15
  %20 = shufflevector <16 x float> %19, <16 x float> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %21 = fmul <16 x float> %11, %14
  %22 = fadd <16 x float> %18, %21
  %23 = shufflevector <16 x float> %22, <16 x float> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %24 = fmul <16 x float> %11, %14
  %25 = fadd <16 x float> %18, %24
  %26 = shufflevector <16 x float> %25, <16 x float> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %27 = or i64 %7, 4
  %28 = fmul <16 x float> %11, %14
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %30 = fadd <16 x float> %18, %28
  %31 = shufflevector <16 x float> %30, <16 x float> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %32 = getelementptr inbounds float, float* %29, i64 -3
  %33 = bitcast float* %32 to <16 x float>*
  %34 = shufflevector <4 x float> %20, <4 x float> %23, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %35 = shufflevector <4 x float> %26, <4 x float> %31, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %36 = shufflevector <8 x float> %34, <8 x float> %35, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %36, <16 x float>* %33, align 4, !tbaa !9
  %37 = add nuw i64 %6, 4
  %38 = icmp eq i64 %37, 8000
  br i1 %38, label %61, label %5, !llvm.loop !354

39:                                               ; preds = %63
  %40 = tail call i64 @"\01_clock"() #19
  %41 = sub i64 %40, %2
  %42 = uitofp i64 %41 to double
  %43 = fdiv double %42, 1.000000e+06
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.193, i64 0, i64 0), double %43)
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i64 [ 0, %39 ], [ %55, %45 ]
  %47 = phi float [ 0.000000e+00, %39 ], [ %54, %45 ]
  %48 = phi float [ 0.000000e+00, %39 ], [ %51, %45 ]
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %50 = load float, float* %49, align 4, !tbaa !9
  %51 = fadd float %48, %50
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %46
  %53 = load float, float* %52, align 4, !tbaa !9
  %54 = fadd float %47, %53
  %55 = add nuw nsw i64 %46, 1
  %56 = icmp eq i64 %55, 32000
  br i1 %56, label %57, label %45, !llvm.loop !29

57:                                               ; preds = %45
  %58 = fadd float %51, %54
  %59 = fpext float %58 to double
  %60 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %59) #19
  ret i32 0

61:                                               ; preds = %5
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !9
  br label %67

63:                                               ; preds = %67
  %64 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %65 = add nuw nsw i32 %4, 1
  %66 = icmp eq i32 %65, 25000
  br i1 %66, label %39, label %3, !llvm.loop !355

67:                                               ; preds = %61, %67
  %68 = phi float [ %62, %61 ], [ %75, %67 ]
  %69 = phi i64 [ 1, %61 ], [ %77, %67 ]
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !9
  %72 = fadd float %68, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %69
  %74 = load float, float* %73, align 4, !tbaa !9
  %75 = fadd float %72, %74
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  store float %75, float* %76, align 4, !tbaa !9
  %77 = add nuw nsw i64 %69, 1
  %78 = icmp eq i64 %77, 32000
  br i1 %78, label %63, label %67, !llvm.loop !356
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1221() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %40, %0
  %4 = phi i32 [ 0, %0 ], [ %42, %40 ]
  %5 = load <4 x float>, <4 x float>* bitcast ([32000 x float]* @b to <4 x float>*), align 16
  br label %6

6:                                                ; preds = %6, %3
  %7 = phi <4 x float> [ %5, %3 ], [ %13, %6 ]
  %8 = phi i64 [ 0, %3 ], [ %16, %6 ]
  %9 = add i64 %8, 4
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %9
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fadd <4 x float> %7, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %9
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> %13, <4 x float>* %15, align 16, !tbaa !9
  %16 = add nuw i64 %8, 4
  %17 = icmp eq i64 %16, 31996
  br i1 %17, label %40, label %6, !llvm.loop !357

18:                                               ; preds = %40
  %19 = tail call i64 @"\01_clock"() #19
  %20 = sub i64 %19, %2
  %21 = uitofp i64 %20 to double
  %22 = fdiv double %21, 1.000000e+06
  %23 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.194, i64 0, i64 0), double %22)
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi i64 [ 0, %18 ], [ %34, %24 ]
  %26 = phi float [ 0.000000e+00, %18 ], [ %33, %24 ]
  %27 = phi float [ 0.000000e+00, %18 ], [ %30, %24 ]
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %29 = load float, float* %28, align 4, !tbaa !9
  %30 = fadd float %27, %29
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %32 = load float, float* %31, align 4, !tbaa !9
  %33 = fadd float %26, %32
  %34 = add nuw nsw i64 %25, 1
  %35 = icmp eq i64 %34, 32000
  br i1 %35, label %36, label %24, !llvm.loop !29

36:                                               ; preds = %24
  %37 = fadd float %30, %33
  %38 = fpext float %37 to double
  %39 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %38) #19
  ret i32 0

40:                                               ; preds = %6
  %41 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %42 = add nuw nsw i32 %4, 1
  %43 = icmp eq i32 %42, 50000
  br i1 %43, label %18, label %3, !llvm.loop !358
}

; Function Attrs: nounwind ssp uwtable
define i32 @s222() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %28
  %4 = phi i32 [ 0, %0 ], [ %30, %28 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), align 16, !tbaa !9
  br label %32

6:                                                ; preds = %28
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %21, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %18, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %12, !llvm.loop !29

24:                                               ; preds = %12
  %25 = fadd float %18, %21
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #19
  ret i32 0

28:                                               ; preds = %32
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %4, 1
  %31 = icmp eq i32 %30, 25000
  br i1 %31, label %6, label %3, !llvm.loop !359

32:                                               ; preds = %3, %32
  %33 = phi float [ %5, %3 ], [ %43, %32 ]
  %34 = phi i64 [ 1, %3 ], [ %46, %32 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fmul float %36, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fadd float %41, %39
  %43 = fmul float %33, %33
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %34
  store float %43, float* %44, align 4, !tbaa !9
  %45 = fsub float %42, %39
  store float %45, float* %40, align 4, !tbaa !9
  %46 = add nuw nsw i64 %34, 1
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %28, label %32, !llvm.loop !360
}

; Function Attrs: nounwind ssp uwtable
define i32 @s222p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %28
  %4 = phi i32 [ 0, %0 ], [ %30, %28 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), align 16, !tbaa !9
  br label %32

6:                                                ; preds = %28
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.196, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %21, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %18, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %12, !llvm.loop !29

24:                                               ; preds = %12
  %25 = fadd float %18, %21
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #19
  ret i32 0

28:                                               ; preds = %32
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %4, 1
  %31 = icmp eq i32 %30, 25000
  br i1 %31, label %6, label %3, !llvm.loop !361

32:                                               ; preds = %3, %32
  %33 = phi float [ %5, %3 ], [ %35, %32 ]
  %34 = phi i64 [ 1, %3 ], [ %37, %32 ]
  %35 = fmul float %33, %33
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %34
  store float %35, float* %36, align 4, !tbaa !9
  %37 = add nuw nsw i64 %34, 1
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %28, label %32, !llvm.loop !362
}

; Function Attrs: nounwind ssp uwtable
define i32 @s231() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %32
  %4 = phi i32 [ 0, %0 ], [ %34, %32 ]
  br label %28

5:                                                ; preds = %32
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.197, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %36
  %29 = phi i64 [ 0, %3 ], [ %37, %36 ]
  %30 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !9
  br label %39

32:                                               ; preds = %36
  %33 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %34 = add nuw nsw i32 %4, 1
  %35 = icmp eq i32 %34, 19500
  br i1 %35, label %5, label %3, !llvm.loop !363

36:                                               ; preds = %39
  %37 = add nuw nsw i64 %29, 1
  %38 = icmp eq i64 %37, 256
  br i1 %38, label %32, label %28, !llvm.loop !364

39:                                               ; preds = %28, %39
  %40 = phi float [ %31, %28 ], [ %44, %39 ]
  %41 = phi i64 [ 1, %28 ], [ %46, %39 ]
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %29
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %40, %43
  %45 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %29
  store float %44, float* %45, align 4, !tbaa !9
  %46 = add nuw nsw i64 %41, 1
  %47 = icmp eq i64 %46, 256
  br i1 %47, label %36, label %39, !llvm.loop !365
}

; Function Attrs: nounwind ssp uwtable
define i32 @s231p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %33
  %4 = phi i32 [ 0, %0 ], [ %35, %33 ]
  br label %28

5:                                                ; preds = %33
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.198, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %37
  %29 = phi i64 [ 0, %3 ], [ %38, %37 ]
  %30 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %29
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !9
  br label %40

33:                                               ; preds = %37
  %34 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %35 = add nuw nsw i32 %4, 1
  %36 = icmp eq i32 %35, 19500
  br i1 %36, label %5, label %3, !llvm.loop !366

37:                                               ; preds = %40
  %38 = add nuw nsw i64 %29, 4
  %39 = icmp ult i64 %29, 252
  br i1 %39, label %28, label %33, !llvm.loop !367

40:                                               ; preds = %28, %40
  %41 = phi i64 [ 1, %28 ], [ %49, %40 ]
  %42 = phi <4 x float> [ %32, %28 ], [ %47, %40 ]
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41, i64 %29
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 %29
  %45 = bitcast float* %43 to <4 x float>*
  %46 = load <4 x float>, <4 x float>* %45, align 16, !tbaa !9
  %47 = fadd <4 x float> %42, %46
  %48 = bitcast float* %44 to <4 x float>*
  store <4 x float> %47, <4 x float>* %48, align 16, !tbaa !9
  %49 = add nuw nsw i64 %41, 1
  %50 = icmp eq i64 %49, 256
  br i1 %50, label %37, label %40, !llvm.loop !368
}

; Function Attrs: nounwind ssp uwtable
define i32 @s231pp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %44
  %4 = phi i32 [ 0, %0 ], [ %46, %44 ]
  br label %28

5:                                                ; preds = %44
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.199, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %48
  %29 = phi i64 [ 1, %3 ], [ %49, %48 ]
  %30 = add nsw i64 %29, -1
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi i64 [ 0, %28 ], [ %42, %31 ]
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 %32
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 16, !tbaa !9
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %32
  %37 = bitcast float* %36 to <4 x float>*
  %38 = load <4 x float>, <4 x float>* %37, align 16, !tbaa !9
  %39 = fadd <4 x float> %35, %38
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %32
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> %39, <4 x float>* %41, align 16, !tbaa !9
  %42 = add nuw i64 %32, 4
  %43 = icmp eq i64 %42, 256
  br i1 %43, label %48, label %31, !llvm.loop !369

44:                                               ; preds = %48
  %45 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %46 = add nuw nsw i32 %4, 1
  %47 = icmp eq i32 %46, 19500
  br i1 %47, label %5, label %3, !llvm.loop !370

48:                                               ; preds = %31
  %49 = add nuw nsw i64 %29, 1
  %50 = icmp eq i64 %49, 256
  br i1 %50, label %44, label %28, !llvm.loop !371
}

; Function Attrs: nounwind ssp uwtable
define i32 @s231ppp() local_unnamed_addr #7 {
  %1 = alloca [256 x [256 x float]], align 4
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = bitcast [256 x [256 x float]]* %1 to i8*
  br label %28

5:                                                ; preds = %79
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %3
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.200, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %0, %79
  %29 = phi i32 [ 0, %0 ], [ %81, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 262144, i8* nonnull %4) #19
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(262144) %4, i8 0, i64 262144, i1 false)
  br label %30

30:                                               ; preds = %28, %46
  %31 = phi i64 [ 1, %28 ], [ %47, %46 ]
  %32 = add nsw i64 %31, -1
  br label %33

33:                                               ; preds = %33, %30
  %34 = phi i64 [ 0, %30 ], [ %44, %33 ]
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %32, i64 %34
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 4, !tbaa !9
  %38 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %31, i64 %34
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 16, !tbaa !9
  %41 = fadd <4 x float> %37, %40
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %31, i64 %34
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %41, <4 x float>* %43, align 4, !tbaa !9
  %44 = add nuw i64 %34, 4
  %45 = icmp eq i64 %44, 256
  br i1 %45, label %46, label %33, !llvm.loop !372

46:                                               ; preds = %33
  %47 = add nuw nsw i64 %31, 1
  %48 = icmp eq i64 %47, 256
  br i1 %48, label %49, label %30, !llvm.loop !373

49:                                               ; preds = %46, %83
  %50 = phi i64 [ %84, %83 ], [ 0, %46 ]
  %51 = add nuw i64 %50, 1
  %52 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %51, i64 0
  %53 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %50, i64 0
  %54 = icmp ult float* %53, getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 1, i64 0)
  %55 = icmp ugt float* %52, getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 0)
  %56 = and i1 %54, %55
  br i1 %56, label %86, label %57

57:                                               ; preds = %49, %57
  %58 = phi i64 [ %77, %57 ], [ 0, %49 ]
  %59 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %58
  %60 = bitcast float* %59 to <4 x float>*
  %61 = load <4 x float>, <4 x float>* %60, align 16, !tbaa !9, !alias.scope !374
  %62 = getelementptr inbounds float, float* %59, i64 4
  %63 = bitcast float* %62 to <4 x float>*
  %64 = load <4 x float>, <4 x float>* %63, align 16, !tbaa !9, !alias.scope !374
  %65 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %50, i64 %58
  %66 = bitcast float* %65 to <4 x float>*
  %67 = load <4 x float>, <4 x float>* %66, align 4, !tbaa !9
  %68 = getelementptr inbounds float, float* %65, i64 4
  %69 = bitcast float* %68 to <4 x float>*
  %70 = load <4 x float>, <4 x float>* %69, align 4, !tbaa !9
  %71 = fadd <4 x float> %61, %67
  %72 = fadd <4 x float> %64, %70
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %50, i64 %58
  %74 = bitcast float* %73 to <4 x float>*
  store <4 x float> %71, <4 x float>* %74, align 16, !tbaa !9, !alias.scope !377, !noalias !374
  %75 = getelementptr inbounds float, float* %73, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  store <4 x float> %72, <4 x float>* %76, align 16, !tbaa !9, !alias.scope !377, !noalias !374
  %77 = add nuw i64 %58, 8
  %78 = icmp eq i64 %77, 256
  br i1 %78, label %83, label %57, !llvm.loop !379

79:                                               ; preds = %83
  %80 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  call void @llvm.lifetime.end.p0i8(i64 262144, i8* nonnull %4) #19
  %81 = add nuw nsw i32 %29, 1
  %82 = icmp eq i32 %81, 19500
  br i1 %82, label %5, label %28, !llvm.loop !380

83:                                               ; preds = %57, %86
  %84 = add nuw nsw i64 %50, 1
  %85 = icmp eq i64 %84, 256
  br i1 %85, label %79, label %49, !llvm.loop !381

86:                                               ; preds = %49, %86
  %87 = phi i64 [ %94, %86 ], [ 0, %49 ]
  %88 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %87
  %89 = load float, float* %88, align 4, !tbaa !9
  %90 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %1, i64 0, i64 %50, i64 %87
  %91 = load float, float* %90, align 4, !tbaa !9
  %92 = fadd float %89, %91
  %93 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %50, i64 %87
  store float %92, float* %93, align 4, !tbaa !9
  %94 = add nuw nsw i64 %87, 1
  %95 = icmp eq i64 %94, 256
  br i1 %95, label %83, label %86, !llvm.loop !382
}

; Function Attrs: nounwind ssp uwtable
define i32 @s232() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %33
  %4 = phi i32 [ 0, %0 ], [ %35, %33 ]
  br label %28

5:                                                ; preds = %33
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.201, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %37
  %29 = phi i64 [ 1, %3 ], [ %38, %37 ]
  %30 = phi i64 [ 2, %3 ], [ %39, %37 ]
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 0
  %32 = load float, float* %31, align 16, !tbaa !9
  br label %41

33:                                               ; preds = %37
  %34 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #19
  %35 = add nuw nsw i32 %4, 1
  %36 = icmp eq i32 %35, 19500
  br i1 %36, label %5, label %3, !llvm.loop !383

37:                                               ; preds = %41
  %38 = add nuw nsw i64 %29, 1
  %39 = add nuw nsw i64 %30, 1
  %40 = icmp eq i64 %38, 256
  br i1 %40, label %33, label %28, !llvm.loop !384

41:                                               ; preds = %28, %41
  %42 = phi float [ %32, %28 ], [ %47, %41 ]
  %43 = phi i64 [ 1, %28 ], [ %49, %41 ]
  %44 = fmul float %42, %42
  %45 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %43
  %46 = load float, float* %45, align 4, !tbaa !9
  %47 = fadd float %44, %46
  %48 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %43
  store float %47, float* %48, align 4, !tbaa !9
  %49 = add nuw nsw i64 %43, 1
  %50 = icmp eq i64 %49, %30
  br i1 %50, label %37, label %41, !llvm.loop !385
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1232() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %57
  %4 = phi i32 [ 0, %0 ], [ %59, %57 ]
  br label %28

5:                                                ; preds = %57
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.202, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %61, %3
  %29 = phi i64 [ 0, %3 ], [ %62, %61 ]
  %30 = sub nsw i64 256, %29
  %31 = icmp ult i64 %30, 2
  br i1 %31, label %55, label %32

32:                                               ; preds = %28
  %33 = and i64 %30, -2
  %34 = add i64 %29, %33
  br label %35

35:                                               ; preds = %35, %32
  %36 = phi i64 [ 0, %32 ], [ %51, %35 ]
  %37 = add i64 %29, %36
  %38 = add i64 %37, 1
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %37, i64 %29
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %38, i64 %29
  %41 = load float, float* %39, align 4, !tbaa !9
  %42 = load float, float* %40, align 4, !tbaa !9
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %37, i64 %29
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %38, i64 %29
  %45 = load float, float* %43, align 4, !tbaa !9
  %46 = load float, float* %44, align 4, !tbaa !9
  %47 = fadd float %41, %45
  %48 = fadd float %42, %46
  %49 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %37, i64 %29
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %38, i64 %29
  store float %47, float* %49, align 4, !tbaa !9
  store float %48, float* %50, align 4, !tbaa !9
  %51 = add nuw i64 %36, 2
  %52 = icmp eq i64 %51, %33
  br i1 %52, label %53, label %35, !llvm.loop !386

53:                                               ; preds = %35
  %54 = icmp eq i64 %30, %33
  br i1 %54, label %61, label %55

55:                                               ; preds = %28, %53
  %56 = phi i64 [ %29, %28 ], [ %34, %53 ]
  br label %64

57:                                               ; preds = %61
  %58 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #19
  %59 = add nuw nsw i32 %4, 1
  %60 = icmp eq i32 %59, 19500
  br i1 %60, label %5, label %3, !llvm.loop !387

61:                                               ; preds = %64, %53
  %62 = add nuw nsw i64 %29, 1
  %63 = icmp eq i64 %62, 256
  br i1 %63, label %57, label %28, !llvm.loop !388

64:                                               ; preds = %55, %64
  %65 = phi i64 [ %72, %64 ], [ %56, %55 ]
  %66 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %65, i64 %29
  %67 = load float, float* %66, align 4, !tbaa !9
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %65, i64 %29
  %69 = load float, float* %68, align 4, !tbaa !9
  %70 = fadd float %67, %69
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %65, i64 %29
  store float %70, float* %71, align 4, !tbaa !9
  %72 = add nuw nsw i64 %65, 1
  %73 = icmp eq i64 %72, 256
  br i1 %73, label %61, label %64, !llvm.loop !389
}

; Function Attrs: nounwind ssp uwtable
define i32 @s233() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %38
  %4 = phi i32 [ 0, %0 ], [ %40, %38 ]
  br label %34

5:                                                ; preds = %38
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.203, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %16, %15 ], [ 0, %5 ]
  %13 = phi float [ %31, %15 ], [ 0.000000e+00, %5 ]
  %14 = phi float [ %28, %15 ], [ 0.000000e+00, %5 ]
  br label %22

15:                                               ; preds = %22
  %16 = add nuw nsw i64 %12, 1
  %17 = icmp eq i64 %16, 256
  br i1 %17, label %18, label %11, !llvm.loop !30

18:                                               ; preds = %15
  %19 = fadd float %28, %31
  %20 = fpext float %19 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %22, %11
  %23 = phi i64 [ 0, %11 ], [ %32, %22 ]
  %24 = phi float [ %13, %11 ], [ %31, %22 ]
  %25 = phi float [ %14, %11 ], [ %28, %22 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %23
  %27 = load float, float* %26, align 4, !tbaa !9
  %28 = fadd float %25, %27
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %23
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = fadd float %24, %30
  %32 = add nuw nsw i64 %23, 1
  %33 = icmp eq i64 %32, 256
  br i1 %33, label %15, label %22, !llvm.loop !31

34:                                               ; preds = %3, %71
  %35 = phi i64 [ 1, %3 ], [ %78, %71 ]
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !9
  br label %62

38:                                               ; preds = %71
  %39 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %40 = add nuw nsw i32 %4, 1
  %41 = icmp eq i32 %40, 19500
  br i1 %41, label %5, label %3, !llvm.loop !390

42:                                               ; preds = %62
  %43 = add nsw i64 %35, -1
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %60, %44 ]
  %46 = or i64 %45, 1
  %47 = add i64 %45, 2
  %48 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %46, i64 %43
  %49 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %47, i64 %43
  %50 = load float, float* %48, align 4, !tbaa !9
  %51 = load float, float* %49, align 4, !tbaa !9
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %46, i64 %35
  %53 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %47, i64 %35
  %54 = load float, float* %52, align 4, !tbaa !9
  %55 = load float, float* %53, align 4, !tbaa !9
  %56 = fadd float %50, %54
  %57 = fadd float %51, %55
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %46, i64 %35
  %59 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %47, i64 %35
  store float %56, float* %58, align 4, !tbaa !9
  store float %57, float* %59, align 4, !tbaa !9
  %60 = add nuw i64 %45, 2
  %61 = icmp eq i64 %60, 254
  br i1 %61, label %71, label %44, !llvm.loop !391

62:                                               ; preds = %34, %62
  %63 = phi float [ %37, %34 ], [ %67, %62 ]
  %64 = phi i64 [ 1, %34 ], [ %69, %62 ]
  %65 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %64, i64 %35
  %66 = load float, float* %65, align 4, !tbaa !9
  %67 = fadd float %63, %66
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %64, i64 %35
  store float %67, float* %68, align 4, !tbaa !9
  %69 = add nuw nsw i64 %64, 1
  %70 = icmp eq i64 %69, 256
  br i1 %70, label %42, label %62, !llvm.loop !392

71:                                               ; preds = %44
  %72 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 255, i64 %43
  %73 = load float, float* %72, align 4, !tbaa !9
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 255, i64 %35
  %75 = load float, float* %74, align 4, !tbaa !9
  %76 = fadd float %73, %75
  %77 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 255, i64 %35
  store float %76, float* %77, align 4, !tbaa !9
  %78 = add nuw nsw i64 %35, 1
  %79 = icmp eq i64 %78, 256
  br i1 %79, label %38, label %34, !llvm.loop !393
}

; Function Attrs: nounwind ssp uwtable
define i32 @s233p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %51
  %4 = phi i32 [ 0, %0 ], [ %53, %51 ]
  br label %34

5:                                                ; preds = %51
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.204, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %16, %15 ], [ 0, %5 ]
  %13 = phi float [ %31, %15 ], [ 0.000000e+00, %5 ]
  %14 = phi float [ %28, %15 ], [ 0.000000e+00, %5 ]
  br label %22

15:                                               ; preds = %22
  %16 = add nuw nsw i64 %12, 1
  %17 = icmp eq i64 %16, 256
  br i1 %17, label %18, label %11, !llvm.loop !30

18:                                               ; preds = %15
  %19 = fadd float %28, %31
  %20 = fpext float %19 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %22, %11
  %23 = phi i64 [ 0, %11 ], [ %32, %22 ]
  %24 = phi float [ %13, %11 ], [ %31, %22 ]
  %25 = phi float [ %14, %11 ], [ %28, %22 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %23
  %27 = load float, float* %26, align 4, !tbaa !9
  %28 = fadd float %25, %27
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %23
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = fadd float %24, %30
  %32 = add nuw nsw i64 %23, 1
  %33 = icmp eq i64 %32, 256
  br i1 %33, label %15, label %22, !llvm.loop !31

34:                                               ; preds = %3, %76
  %35 = phi i64 [ 1, %3 ], [ %77, %76 ]
  %36 = add nsw i64 %35, -1
  br label %37

37:                                               ; preds = %37, %34
  %38 = phi i64 [ 0, %34 ], [ %49, %37 ]
  %39 = or i64 %38, 1
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %36, i64 %39
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 4, !tbaa !9
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %35, i64 %39
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 4, !tbaa !9
  %46 = fadd <4 x float> %42, %45
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %35, i64 %39
  %48 = bitcast float* %47 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !9
  %49 = add nuw i64 %38, 4
  %50 = icmp eq i64 %49, 252
  br i1 %50, label %55, label %37, !llvm.loop !394

51:                                               ; preds = %76
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %53 = add nuw nsw i32 %4, 1
  %54 = icmp eq i32 %53, 19500
  br i1 %54, label %5, label %3, !llvm.loop !395

55:                                               ; preds = %37
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %36, i64 253
  %57 = load float, float* %56, align 4, !tbaa !9
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %35, i64 253
  %59 = load float, float* %58, align 4, !tbaa !9
  %60 = fadd float %57, %59
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %35, i64 253
  store float %60, float* %61, align 4, !tbaa !9
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %36, i64 254
  %63 = load float, float* %62, align 8, !tbaa !9
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %35, i64 254
  %65 = load float, float* %64, align 8, !tbaa !9
  %66 = fadd float %63, %65
  %67 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %35, i64 254
  store float %66, float* %67, align 8, !tbaa !9
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %36, i64 255
  %69 = load float, float* %68, align 4, !tbaa !9
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %35, i64 255
  %71 = load float, float* %70, align 4, !tbaa !9
  %72 = fadd float %69, %71
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %35, i64 255
  store float %72, float* %73, align 4, !tbaa !9
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %35, i64 0
  %75 = load float, float* %74, align 16, !tbaa !9
  br label %79

76:                                               ; preds = %79
  %77 = add nuw nsw i64 %35, 1
  %78 = icmp eq i64 %77, 256
  br i1 %78, label %51, label %34, !llvm.loop !396

79:                                               ; preds = %55, %79
  %80 = phi float [ %75, %55 ], [ %84, %79 ]
  %81 = phi i64 [ 1, %55 ], [ %86, %79 ]
  %82 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %35, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !9
  %84 = fadd float %80, %83
  %85 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %35, i64 %81
  store float %84, float* %85, align 4, !tbaa !9
  %86 = add nuw nsw i64 %81, 1
  %87 = icmp eq i64 %86, 256
  br i1 %87, label %76, label %79, !llvm.loop !397
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2233() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %38
  %4 = phi i32 [ 0, %0 ], [ %40, %38 ]
  br label %34

5:                                                ; preds = %38
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.205, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %16, %15 ], [ 0, %5 ]
  %13 = phi float [ %31, %15 ], [ 0.000000e+00, %5 ]
  %14 = phi float [ %28, %15 ], [ 0.000000e+00, %5 ]
  br label %22

15:                                               ; preds = %22
  %16 = add nuw nsw i64 %12, 1
  %17 = icmp eq i64 %16, 256
  br i1 %17, label %18, label %11, !llvm.loop !30

18:                                               ; preds = %15
  %19 = fadd float %28, %31
  %20 = fpext float %19 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %22, %11
  %23 = phi i64 [ 0, %11 ], [ %32, %22 ]
  %24 = phi float [ %13, %11 ], [ %31, %22 ]
  %25 = phi float [ %14, %11 ], [ %28, %22 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %23
  %27 = load float, float* %26, align 4, !tbaa !9
  %28 = fadd float %25, %27
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %12, i64 %23
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = fadd float %24, %30
  %32 = add nuw nsw i64 %23, 1
  %33 = icmp eq i64 %32, 256
  br i1 %33, label %15, label %22, !llvm.loop !31

34:                                               ; preds = %3, %67
  %35 = phi i64 [ 1, %3 ], [ %86, %67 ]
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !9
  br label %58

38:                                               ; preds = %67
  %39 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %40 = add nuw nsw i32 %4, 1
  %41 = icmp eq i32 %40, 19500
  br i1 %41, label %5, label %3, !llvm.loop !398

42:                                               ; preds = %58
  %43 = add nsw i64 %35, -1
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %56, %44 ]
  %46 = or i64 %45, 1
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %43, i64 %46
  %48 = bitcast float* %47 to <4 x float>*
  %49 = load <4 x float>, <4 x float>* %48, align 4, !tbaa !9
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %35, i64 %46
  %51 = bitcast float* %50 to <4 x float>*
  %52 = load <4 x float>, <4 x float>* %51, align 4, !tbaa !9
  %53 = fadd <4 x float> %49, %52
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %35, i64 %46
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 4, !tbaa !9
  %56 = add nuw i64 %45, 4
  %57 = icmp eq i64 %56, 252
  br i1 %57, label %67, label %44, !llvm.loop !399

58:                                               ; preds = %34, %58
  %59 = phi float [ %37, %34 ], [ %63, %58 ]
  %60 = phi i64 [ 1, %34 ], [ %65, %58 ]
  %61 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %60, i64 %35
  %62 = load float, float* %61, align 4, !tbaa !9
  %63 = fadd float %59, %62
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %60, i64 %35
  store float %63, float* %64, align 4, !tbaa !9
  %65 = add nuw nsw i64 %60, 1
  %66 = icmp eq i64 %65, 256
  br i1 %66, label %42, label %58, !llvm.loop !400

67:                                               ; preds = %44
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %43, i64 253
  %69 = load float, float* %68, align 4, !tbaa !9
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %35, i64 253
  %71 = load float, float* %70, align 4, !tbaa !9
  %72 = fadd float %69, %71
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %35, i64 253
  store float %72, float* %73, align 4, !tbaa !9
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %43, i64 254
  %75 = load float, float* %74, align 8, !tbaa !9
  %76 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %35, i64 254
  %77 = load float, float* %76, align 8, !tbaa !9
  %78 = fadd float %75, %77
  %79 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %35, i64 254
  store float %78, float* %79, align 8, !tbaa !9
  %80 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %43, i64 255
  %81 = load float, float* %80, align 4, !tbaa !9
  %82 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %35, i64 255
  %83 = load float, float* %82, align 4, !tbaa !9
  %84 = fadd float %81, %83
  %85 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %35, i64 255
  store float %84, float* %85, align 4, !tbaa !9
  %86 = add nuw nsw i64 %35, 1
  %87 = icmp eq i64 %86, 256
  br i1 %87, label %38, label %34, !llvm.loop !401
}

; Function Attrs: nounwind ssp uwtable
define i32 @s235() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %37
  %4 = phi i32 [ 0, %0 ], [ %39, %37 ]
  br label %41

5:                                                ; preds = %37
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.206, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11, %22
  %20 = phi i64 [ %23, %22 ], [ 0, %11 ]
  %21 = phi float [ %34, %22 ], [ 0.000000e+00, %11 ]
  br label %29

22:                                               ; preds = %29
  %23 = add nuw nsw i64 %20, 1
  %24 = icmp eq i64 %23, 256
  br i1 %24, label %25, label %19, !llvm.loop !30

25:                                               ; preds = %22
  %26 = fadd float %16, %34
  %27 = fpext float %26 to double
  %28 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %27) #19
  ret i32 0

29:                                               ; preds = %29, %19
  %30 = phi i64 [ 0, %19 ], [ %35, %29 ]
  %31 = phi float [ %21, %19 ], [ %34, %29 ]
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %20, i64 %30
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = fadd float %31, %33
  %35 = add nuw nsw i64 %30, 1
  %36 = icmp eq i64 %35, 256
  br i1 %36, label %22, label %29, !llvm.loop !31

37:                                               ; preds = %53
  %38 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %39 = add nuw nsw i32 %4, 1
  %40 = icmp eq i32 %39, 39000
  br i1 %40, label %5, label %3, !llvm.loop !402

41:                                               ; preds = %3, %53
  %42 = phi i64 [ 0, %3 ], [ %54, %53 ]
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %42
  %46 = load float, float* %45, align 4, !tbaa !9
  %47 = fmul float %44, %46
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %49 = load float, float* %48, align 4, !tbaa !9
  %50 = fadd float %49, %47
  store float %50, float* %48, align 4, !tbaa !9
  %51 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %42
  %52 = load float, float* %51, align 4, !tbaa !9
  br label %56

53:                                               ; preds = %56
  %54 = add nuw nsw i64 %42, 1
  %55 = icmp eq i64 %54, 256
  br i1 %55, label %37, label %41, !llvm.loop !403

56:                                               ; preds = %41, %56
  %57 = phi float [ %52, %41 ], [ %62, %56 ]
  %58 = phi i64 [ 1, %41 ], [ %64, %56 ]
  %59 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %58, i64 %42
  %60 = load float, float* %59, align 4, !tbaa !9
  %61 = fmul float %50, %60
  %62 = fadd float %57, %61
  %63 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %58, i64 %42
  store float %62, float* %63, align 4, !tbaa !9
  %64 = add nuw nsw i64 %58, 1
  %65 = icmp eq i64 %64, 256
  br i1 %65, label %53, label %56, !llvm.loop !404
}

; Function Attrs: nounwind ssp uwtable
define i32 @s241() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.207, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %31
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 100000
  br i1 %30, label %5, label %3, !llvm.loop !405

31:                                               ; preds = %3, %31
  %32 = phi i64 [ 0, %3 ], [ %42, %31 ]
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = fmul float %34, %36
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fmul float %37, %39
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %40, float* %41, align 4, !tbaa !9
  %42 = add nuw nsw i64 %32, 1
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = fmul float %40, %44
  %46 = fmul float %39, %45
  store float %46, float* %33, align 4, !tbaa !9
  %47 = icmp eq i64 %42, 31999
  br i1 %47, label %27, label %31, !llvm.loop !406
}

; Function Attrs: nounwind ssp uwtable
define i32 @s242(float %0, float %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0))
  %4 = tail call i64 @"\01_clock"() #19
  br label %5

5:                                                ; preds = %2, %25
  %6 = phi i32 [ 0, %2 ], [ %27, %25 ]
  %7 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %29

8:                                                ; preds = %25
  %9 = tail call i64 @"\01_clock"() #19
  %10 = sub i64 %9, %4
  %11 = uitofp i64 %10 to double
  %12 = fdiv double %11, 1.000000e+06
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.208, i64 0, i64 0), double %12)
  br label %14

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %20, %14 ]
  %16 = phi float [ 0.000000e+00, %8 ], [ %19, %14 ]
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15
  %18 = load float, float* %17, align 4, !tbaa !9
  %19 = fadd float %16, %18
  %20 = add nuw nsw i64 %15, 1
  %21 = icmp eq i64 %20, 32000
  br i1 %21, label %22, label %14, !llvm.loop !29

22:                                               ; preds = %14
  %23 = fpext float %19 to double
  %24 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %23) #19
  ret i32 0

25:                                               ; preds = %29
  %26 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %27 = add nuw nsw i32 %6, 1
  %28 = icmp eq i32 %27, 10000
  br i1 %28, label %8, label %5, !llvm.loop !407

29:                                               ; preds = %5, %29
  %30 = phi float [ %7, %5 ], [ %42, %29 ]
  %31 = phi i64 [ 1, %5 ], [ %44, %29 ]
  %32 = fadd float %30, %0
  %33 = fadd float %32, %1
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fadd float %35, %33
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %38, %36
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %31
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fadd float %41, %39
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  store float %42, float* %43, align 4, !tbaa !9
  %44 = add nuw nsw i64 %31, 1
  %45 = icmp eq i64 %44, 32000
  br i1 %45, label %25, label %29, !llvm.loop !408
}

; Function Attrs: nounwind ssp uwtable
define i32 @s243() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %56, %0
  %4 = phi i32 [ 0, %0 ], [ %91, %56 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %32, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = fmul <4 x float> %12, %15
  %17 = fadd <4 x float> %9, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !9
  %22 = fmul <4 x float> %15, %21
  %23 = fadd <4 x float> %17, %22
  %24 = bitcast float* %7 to <4 x float>*
  store <4 x float> %23, <4 x float>* %24, align 16, !tbaa !9
  %25 = or i64 %6, 1
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !9
  %29 = fmul <4 x float> %15, %28
  %30 = fadd <4 x float> %23, %29
  %31 = bitcast float* %18 to <4 x float>*
  store <4 x float> %30, <4 x float>* %31, align 16, !tbaa !9
  %32 = add nuw i64 %6, 4
  %33 = icmp eq i64 %32, 31996
  br i1 %33, label %56, label %5, !llvm.loop !409

34:                                               ; preds = %56
  %35 = tail call i64 @"\01_clock"() #19
  %36 = sub i64 %35, %2
  %37 = uitofp i64 %36 to double
  %38 = fdiv double %37, 1.000000e+06
  %39 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.209, i64 0, i64 0), double %38)
  br label %40

40:                                               ; preds = %40, %34
  %41 = phi i64 [ 0, %34 ], [ %50, %40 ]
  %42 = phi float [ 0.000000e+00, %34 ], [ %49, %40 ]
  %43 = phi float [ 0.000000e+00, %34 ], [ %46, %40 ]
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fadd float %43, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  %48 = load float, float* %47, align 4, !tbaa !9
  %49 = fadd float %42, %48
  %50 = add nuw nsw i64 %41, 1
  %51 = icmp eq i64 %50, 32000
  br i1 %51, label %52, label %40, !llvm.loop !29

52:                                               ; preds = %40
  %53 = fadd float %46, %49
  %54 = fpext float %53 to double
  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %54) #19
  ret i32 0

56:                                               ; preds = %5
  %57 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %58 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31996), align 16, !tbaa !9
  %59 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31996), align 16, !tbaa !9
  %60 = fmul float %58, %59
  %61 = fadd float %57, %60
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31996), align 16, !tbaa !9
  %63 = fmul float %59, %62
  %64 = fadd float %61, %63
  store float %64, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %65 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %66 = fmul float %59, %65
  %67 = fadd float %64, %66
  store float %67, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %68 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %69 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31997), align 4, !tbaa !9
  %70 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31997), align 4, !tbaa !9
  %71 = fmul float %69, %70
  %72 = fadd float %68, %71
  %73 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31997), align 4, !tbaa !9
  %74 = fmul float %70, %73
  %75 = fadd float %72, %74
  store float %75, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %76 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %77 = fmul float %70, %76
  %78 = fadd float %75, %77
  store float %78, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %79 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %80 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31998), align 8, !tbaa !9
  %81 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31998), align 8, !tbaa !9
  %82 = fmul float %80, %81
  %83 = fadd float %79, %82
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31998), align 8, !tbaa !9
  %85 = fmul float %81, %84
  %86 = fadd float %83, %85
  store float %86, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %88 = fmul float %81, %87
  %89 = fadd float %86, %88
  store float %89, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %90 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %91 = add nuw nsw i32 %4, 1
  %92 = icmp eq i32 %91, 50000
  br i1 %92, label %34, label %3, !llvm.loop !410
}

; Function Attrs: nounwind ssp uwtable
define i32 @s244() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.210, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %31
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 50000
  br i1 %30, label %5, label %3, !llvm.loop !411

31:                                               ; preds = %3, %31
  %32 = phi i64 [ 0, %3 ], [ %43, %31 ]
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fmul float %36, %38
  %40 = fadd float %34, %39
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %40, float* %41, align 4, !tbaa !9
  %42 = fadd float %34, %36
  store float %42, float* %33, align 4, !tbaa !9
  %43 = add nuw nsw i64 %32, 1
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fmul float %38, %45
  %47 = fadd float %42, %46
  store float %47, float* %44, align 4, !tbaa !9
  %48 = icmp eq i64 %43, 31999
  br i1 %48, label %27, label %31, !llvm.loop !412
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1244() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.211, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %31
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 50000
  br i1 %30, label %5, label %3, !llvm.loop !413

31:                                               ; preds = %3, %31
  %32 = phi i64 [ 0, %3 ], [ %43, %31 ]
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = fmul float %36, %36
  %38 = fadd float %34, %37
  %39 = fmul float %34, %34
  %40 = fadd float %39, %38
  %41 = fadd float %36, %40
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %41, float* %42, align 4, !tbaa !9
  %43 = add nuw nsw i64 %32, 1
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fadd float %45, %41
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  store float %46, float* %47, align 4, !tbaa !9
  %48 = icmp eq i64 %43, 31999
  br i1 %48, label %27, label %31, !llvm.loop !414
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2244() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %47, %0
  %4 = phi i32 [ 0, %0 ], [ %64, %47 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %23, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fadd <4 x float> %9, %12
  %14 = or i64 %6, 1
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %13, <4 x float>* %16, align 4, !tbaa !9
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = fadd <4 x float> %9, %19
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 16, !tbaa !9
  %23 = add nuw i64 %6, 4
  %24 = icmp eq i64 %23, 31996
  br i1 %24, label %47, label %5, !llvm.loop !415

25:                                               ; preds = %47
  %26 = tail call i64 @"\01_clock"() #19
  %27 = sub i64 %26, %2
  %28 = uitofp i64 %27 to double
  %29 = fdiv double %28, 1.000000e+06
  %30 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.212, i64 0, i64 0), double %29)
  br label %31

31:                                               ; preds = %31, %25
  %32 = phi i64 [ 0, %25 ], [ %41, %31 ]
  %33 = phi float [ 0.000000e+00, %25 ], [ %40, %31 ]
  %34 = phi float [ 0.000000e+00, %25 ], [ %37, %31 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %33, %39
  %41 = add nuw nsw i64 %32, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %43, label %31, !llvm.loop !29

43:                                               ; preds = %31
  %44 = fadd float %37, %40
  %45 = fpext float %44 to double
  %46 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %45) #19
  ret i32 0

47:                                               ; preds = %5
  %48 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %49 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31996), align 16, !tbaa !9
  %50 = fadd float %48, %49
  store float %50, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %51 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31996), align 16, !tbaa !9
  %52 = fadd float %48, %51
  store float %52, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %54 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31997), align 4, !tbaa !9
  %55 = fadd float %53, %54
  store float %55, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31997), align 4, !tbaa !9
  %57 = fadd float %53, %56
  store float %57, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %58 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %59 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31998), align 8, !tbaa !9
  %60 = fadd float %58, %59
  store float %60, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %61 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31998), align 8, !tbaa !9
  %62 = fadd float %58, %61
  store float %62, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %63 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %64 = add nuw nsw i32 %4, 1
  %65 = icmp eq i32 %64, 50000
  br i1 %65, label %25, label %3, !llvm.loop !416
}

; Function Attrs: nounwind ssp uwtable
define i32 @s251() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %54, %0
  %4 = phi i32 [ 0, %0 ], [ %56, %54 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %35, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !9
  %22 = getelementptr inbounds float, float* %19, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !9
  %25 = fmul <4 x float> %15, %21
  %26 = fmul <4 x float> %18, %24
  %27 = fadd <4 x float> %9, %25
  %28 = fadd <4 x float> %12, %26
  %29 = fmul <4 x float> %27, %27
  %30 = fmul <4 x float> %28, %28
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %29, <4 x float>* %32, align 16, !tbaa !9
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %30, <4 x float>* %34, align 16, !tbaa !9
  %35 = add nuw i64 %6, 8
  %36 = icmp eq i64 %35, 32000
  br i1 %36, label %54, label %5, !llvm.loop !417

37:                                               ; preds = %54
  %38 = tail call i64 @"\01_clock"() #19
  %39 = sub i64 %38, %2
  %40 = uitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  %42 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.213, i64 0, i64 0), double %41)
  br label %43

43:                                               ; preds = %43, %37
  %44 = phi i64 [ 0, %37 ], [ %49, %43 ]
  %45 = phi float [ 0.000000e+00, %37 ], [ %48, %43 ]
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = fadd float %45, %47
  %49 = add nuw nsw i64 %44, 1
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %43, !llvm.loop !29

51:                                               ; preds = %43
  %52 = fpext float %48 to double
  %53 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %52) #19
  ret i32 0

54:                                               ; preds = %5
  %55 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %56 = add nuw nsw i32 %4, 1
  %57 = icmp eq i32 %56, 200000
  br i1 %57, label %37, label %3, !llvm.loop !418
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1251() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %46, %0
  %4 = phi i32 [ 0, %0 ], [ %48, %46 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %27, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fadd <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = fadd <4 x float> %16, %19
  %21 = bitcast float* %7 to <4 x float>*
  store <4 x float> %20, <4 x float>* %21, align 16, !tbaa !9
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !9
  %25 = fmul <4 x float> %13, %24
  %26 = bitcast float* %14 to <4 x float>*
  store <4 x float> %25, <4 x float>* %26, align 16, !tbaa !9
  %27 = add nuw i64 %6, 4
  %28 = icmp eq i64 %27, 32000
  br i1 %28, label %46, label %5, !llvm.loop !419

29:                                               ; preds = %46
  %30 = tail call i64 @"\01_clock"() #19
  %31 = sub i64 %30, %2
  %32 = uitofp i64 %31 to double
  %33 = fdiv double %32, 1.000000e+06
  %34 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.214, i64 0, i64 0), double %33)
  br label %35

35:                                               ; preds = %35, %29
  %36 = phi i64 [ 0, %29 ], [ %41, %35 ]
  %37 = phi float [ 0.000000e+00, %29 ], [ %40, %35 ]
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %37, %39
  %41 = add nuw nsw i64 %36, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %43, label %35, !llvm.loop !29

43:                                               ; preds = %35
  %44 = fpext float %40 to double
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %44) #19
  ret i32 0

46:                                               ; preds = %5
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %48 = add nuw nsw i32 %4, 1
  %49 = icmp eq i32 %48, 200000
  br i1 %49, label %29, label %3, !llvm.loop !420
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2251() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.215, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %26
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 50000
  br i1 %25, label %5, label %3, !llvm.loop !421

26:                                               ; preds = %3, %26
  %27 = phi i64 [ 0, %3 ], [ %41, %26 ]
  %28 = phi float [ 0.000000e+00, %3 ], [ %37, %26 ]
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %27
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = fmul float %28, %30
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  store float %31, float* %32, align 4, !tbaa !9
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %27
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %31, %39
  store float %40, float* %33, align 4, !tbaa !9
  %41 = add nuw nsw i64 %27, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %22, label %26, !llvm.loop !422
}

; Function Attrs: nounwind ssp uwtable
define i32 @s3251() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %48
  %4 = phi i32 [ 0, %0 ], [ %69, %48 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  %6 = insertelement <4 x float> poison, float %5, i32 3
  br label %7

7:                                                ; preds = %7, %3
  %8 = phi i64 [ 0, %3 ], [ %29, %7 ]
  %9 = phi <4 x float> [ %6, %3 ], [ %16, %7 ]
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = fadd <4 x float> %12, %15
  %17 = shufflevector <4 x float> %9, <4 x float> %16, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %18 = or i64 %8, 1
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = bitcast float* %19 to <4 x float>*
  store <4 x float> %16, <4 x float>* %20, align 4, !tbaa !9
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !9
  %24 = fmul <4 x float> %15, %23
  %25 = bitcast float* %10 to <4 x float>*
  store <4 x float> %24, <4 x float>* %25, align 16, !tbaa !9
  %26 = fmul <4 x float> %23, %17
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 16, !tbaa !9
  %29 = add nuw i64 %8, 4
  %30 = icmp eq i64 %29, 31996
  br i1 %30, label %48, label %7, !llvm.loop !423

31:                                               ; preds = %48
  %32 = tail call i64 @"\01_clock"() #19
  %33 = sub i64 %32, %2
  %34 = uitofp i64 %33 to double
  %35 = fdiv double %34, 1.000000e+06
  %36 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.216, i64 0, i64 0), double %35)
  br label %37

37:                                               ; preds = %37, %31
  %38 = phi i64 [ 0, %31 ], [ %43, %37 ]
  %39 = phi float [ 0.000000e+00, %31 ], [ %42, %37 ]
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fadd float %39, %41
  %43 = add nuw nsw i64 %38, 1
  %44 = icmp eq i64 %43, 32000
  br i1 %44, label %45, label %37, !llvm.loop !29

45:                                               ; preds = %37
  %46 = fpext float %42 to double
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %46) #19
  ret i32 0

48:                                               ; preds = %7
  %49 = extractelement <4 x float> %16, i32 3
  %50 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %51 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31996), align 16, !tbaa !9
  %52 = fadd float %50, %51
  store float %52, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31996), align 16, !tbaa !9
  %54 = fmul float %51, %53
  store float %54, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %55 = fmul float %53, %49
  store float %55, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31996), align 16, !tbaa !9
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %57 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31997), align 4, !tbaa !9
  %58 = fadd float %56, %57
  store float %58, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %59 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31997), align 4, !tbaa !9
  %60 = fmul float %57, %59
  store float %60, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %61 = fmul float %59, %52
  store float %61, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31997), align 4, !tbaa !9
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %63 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31998), align 8, !tbaa !9
  %64 = fadd float %62, %63
  store float %64, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %65 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 31998), align 8, !tbaa !9
  %66 = fmul float %63, %65
  store float %66, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %67 = fmul float %65, %58
  store float %67, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31998), align 8, !tbaa !9
  %68 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %69 = add nuw nsw i32 %4, 1
  %70 = icmp eq i32 %69, 50000
  br i1 %70, label %31, label %3, !llvm.loop !424
}

; Function Attrs: nounwind ssp uwtable
define i32 @s252() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %49, %0
  %4 = phi i32 [ 0, %0 ], [ %51, %49 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %30, %5 ]
  %7 = phi <4 x float> [ <float poison, float poison, float poison, float 0.000000e+00>, %3 ], [ %21, %5 ]
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = fmul <4 x float> %10, %16
  %21 = fmul <4 x float> %13, %19
  %22 = shufflevector <4 x float> %7, <4 x float> %20, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %23 = shufflevector <4 x float> %20, <4 x float> %21, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %24 = fadd <4 x float> %22, %20
  %25 = fadd <4 x float> %23, %21
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %24, <4 x float>* %27, align 16, !tbaa !9
  %28 = getelementptr inbounds float, float* %26, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> %25, <4 x float>* %29, align 16, !tbaa !9
  %30 = add nuw i64 %6, 8
  %31 = icmp eq i64 %30, 32000
  br i1 %31, label %49, label %5, !llvm.loop !425

32:                                               ; preds = %49
  %33 = tail call i64 @"\01_clock"() #19
  %34 = sub i64 %33, %2
  %35 = uitofp i64 %34 to double
  %36 = fdiv double %35, 1.000000e+06
  %37 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.217, i64 0, i64 0), double %36)
  br label %38

38:                                               ; preds = %38, %32
  %39 = phi i64 [ 0, %32 ], [ %44, %38 ]
  %40 = phi float [ 0.000000e+00, %32 ], [ %43, %38 ]
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fadd float %40, %42
  %44 = add nuw nsw i64 %39, 1
  %45 = icmp eq i64 %44, 32000
  br i1 %45, label %46, label %38, !llvm.loop !29

46:                                               ; preds = %38
  %47 = fpext float %43 to double
  %48 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %47) #19
  ret i32 0

49:                                               ; preds = %5
  %50 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %51 = add nuw nsw i32 %4, 1
  %52 = icmp eq i32 %51, 50000
  br i1 %52, label %32, label %3, !llvm.loop !426
}

; Function Attrs: nounwind ssp uwtable
define i32 @s252p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %20

3:                                                ; preds = %60
  %4 = tail call i64 @"\01_clock"() #19
  %5 = sub i64 %4, %2
  %6 = uitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.218, i64 0, i64 0), double %7)
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i64 [ 0, %3 ], [ %15, %9 ]
  %11 = phi float [ 0.000000e+00, %3 ], [ %14, %9 ]
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10
  %13 = load float, float* %12, align 4, !tbaa !9
  %14 = fadd float %11, %13
  %15 = add nuw nsw i64 %10, 1
  %16 = icmp eq i64 %15, 32000
  br i1 %16, label %17, label %9, !llvm.loop !29

17:                                               ; preds = %9
  %18 = fpext float %14 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %0, %60
  %21 = phi i32 [ 0, %0 ], [ %99, %60 ]
  %22 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !9
  %23 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !9
  %24 = fmul float %22, %23
  store float %24, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  %25 = insertelement <4 x float> poison, float %23, i32 3
  %26 = insertelement <4 x float> poison, float %22, i32 3
  br label %27

27:                                               ; preds = %27, %20
  %28 = phi i64 [ 0, %20 ], [ %58, %27 ]
  %29 = phi <4 x float> [ %25, %20 ], [ %45, %27 ]
  %30 = phi <4 x float> [ %26, %20 ], [ %37, %27 ]
  %31 = or i64 %28, 1
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !9
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 4, !tbaa !9
  %38 = shufflevector <4 x float> %30, <4 x float> %34, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %39 = shufflevector <4 x float> %34, <4 x float> %37, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 4, !tbaa !9
  %43 = getelementptr inbounds float, float* %40, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 4, !tbaa !9
  %46 = shufflevector <4 x float> %29, <4 x float> %42, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %47 = shufflevector <4 x float> %42, <4 x float> %45, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %48 = fmul <4 x float> %34, %42
  %49 = fmul <4 x float> %37, %45
  %50 = fmul <4 x float> %38, %46
  %51 = fmul <4 x float> %39, %47
  %52 = fadd <4 x float> %48, %50
  %53 = fadd <4 x float> %49, %51
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %52, <4 x float>* %55, align 4, !tbaa !9
  %56 = getelementptr inbounds float, float* %54, i64 4
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> %53, <4 x float>* %57, align 4, !tbaa !9
  %58 = add nuw i64 %28, 8
  %59 = icmp eq i64 %58, 31992
  br i1 %59, label %60, label %27, !llvm.loop !427

60:                                               ; preds = %27
  %61 = extractelement <4 x float> %37, i32 3
  %62 = extractelement <4 x float> %45, i32 3
  %63 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31993), align 4, !tbaa !9
  %64 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31993), align 4, !tbaa !9
  %65 = fmul float %63, %64
  %66 = fmul float %61, %62
  %67 = fadd float %65, %66
  store float %67, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31993), align 4, !tbaa !9
  %68 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31994), align 8, !tbaa !9
  %69 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31994), align 8, !tbaa !9
  %70 = fmul float %68, %69
  %71 = fmul float %63, %64
  %72 = fadd float %70, %71
  store float %72, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31994), align 8, !tbaa !9
  %73 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31995), align 4, !tbaa !9
  %74 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31995), align 4, !tbaa !9
  %75 = fmul float %73, %74
  %76 = fmul float %68, %69
  %77 = fadd float %75, %76
  store float %77, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31995), align 4, !tbaa !9
  %78 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31996), align 16, !tbaa !9
  %79 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31996), align 16, !tbaa !9
  %80 = fmul float %78, %79
  %81 = fmul float %73, %74
  %82 = fadd float %80, %81
  store float %82, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31996), align 16, !tbaa !9
  %83 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31997), align 4, !tbaa !9
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31997), align 4, !tbaa !9
  %85 = fmul float %83, %84
  %86 = fmul float %78, %79
  %87 = fadd float %85, %86
  store float %87, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31997), align 4, !tbaa !9
  %88 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31998), align 8, !tbaa !9
  %90 = fmul float %88, %89
  %91 = fmul float %83, %84
  %92 = fadd float %90, %91
  store float %92, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31998), align 8, !tbaa !9
  %93 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !9
  %94 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 31999), align 4, !tbaa !9
  %95 = fmul float %93, %94
  %96 = fmul float %88, %89
  %97 = fadd float %95, %96
  store float %97, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %98 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %99 = add nuw nsw i32 %21, 1
  %100 = icmp eq i32 %99, 50000
  br i1 %100, label %3, label %20, !llvm.loop !428
}

; Function Attrs: nounwind ssp uwtable
define i32 @s253() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.219, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %46
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 50000
  br i1 %30, label %5, label %3, !llvm.loop !429

31:                                               ; preds = %3, %46
  %32 = phi i64 [ 0, %3 ], [ %47, %46 ]
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = fcmp ogt float %34, %36
  br i1 %37, label %38, label %46

38:                                               ; preds = %31
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %40 = load float, float* %39, align 4, !tbaa !9
  %41 = fmul float %36, %40
  %42 = fsub float %34, %41
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = fadd float %44, %42
  store float %45, float* %43, align 4, !tbaa !9
  store float %42, float* %33, align 4, !tbaa !9
  br label %46

46:                                               ; preds = %31, %38
  %47 = add nuw nsw i64 %32, 1
  %48 = icmp eq i64 %47, 32000
  br i1 %48, label %27, label %31, !llvm.loop !430
}

; Function Attrs: nounwind ssp uwtable
define i32 @s254() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %45, %0
  %4 = phi i32 [ 0, %0 ], [ %47, %45 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !9
  %6 = insertelement <4 x float> poison, float %5, i32 3
  br label %7

7:                                                ; preds = %7, %3
  %8 = phi i64 [ 0, %3 ], [ %26, %7 ]
  %9 = phi <4 x float> [ %6, %3 ], [ %15, %7 ]
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds float, float* %10, i64 4
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = shufflevector <4 x float> %9, <4 x float> %12, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %17 = shufflevector <4 x float> %12, <4 x float> %15, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %18 = fadd <4 x float> %16, %12
  %19 = fadd <4 x float> %17, %15
  %20 = fmul <4 x float> %18, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %21 = fmul <4 x float> %19, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %20, <4 x float>* %23, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %21, <4 x float>* %25, align 16, !tbaa !9
  %26 = add nuw i64 %8, 8
  %27 = icmp eq i64 %26, 32000
  br i1 %27, label %45, label %7, !llvm.loop !431

28:                                               ; preds = %45
  %29 = tail call i64 @"\01_clock"() #19
  %30 = sub i64 %29, %2
  %31 = uitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.220, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %40, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %39, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %36, %38
  %40 = add nuw nsw i64 %35, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %42, label %34, !llvm.loop !29

42:                                               ; preds = %34
  %43 = fpext float %39 to double
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %43) #19
  ret i32 0

45:                                               ; preds = %7
  %46 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %47 = add nuw nsw i32 %4, 1
  %48 = icmp eq i32 %47, 200000
  br i1 %48, label %28, label %3, !llvm.loop !432
}

; Function Attrs: nounwind ssp uwtable
define i32 @s255() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %20

3:                                                ; preds = %24
  %4 = tail call i64 @"\01_clock"() #19
  %5 = sub i64 %4, %2
  %6 = uitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.221, i64 0, i64 0), double %7)
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i64 [ 0, %3 ], [ %15, %9 ]
  %11 = phi float [ 0.000000e+00, %3 ], [ %14, %9 ]
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10
  %13 = load float, float* %12, align 4, !tbaa !9
  %14 = fadd float %11, %13
  %15 = add nuw nsw i64 %10, 1
  %16 = icmp eq i64 %15, 32000
  br i1 %16, label %17, label %9, !llvm.loop !29

17:                                               ; preds = %9
  %18 = fpext float %14 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %0, %24
  %21 = phi i32 [ 0, %0 ], [ %26, %24 ]
  %22 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  %23 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !9
  br label %28

24:                                               ; preds = %28
  %25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %26 = add nuw nsw i32 %21, 1
  %27 = icmp eq i32 %26, 50000
  br i1 %27, label %3, label %20, !llvm.loop !433

28:                                               ; preds = %20, %28
  %29 = phi float [ %23, %20 ], [ %33, %28 ]
  %30 = phi i64 [ 0, %20 ], [ %38, %28 ]
  %31 = phi float [ %22, %20 ], [ %29, %28 ]
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = fadd float %29, %33
  %35 = fadd float %31, %34
  %36 = fmul float %35, 0x3FD54FDF40000000
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  store float %36, float* %37, align 4, !tbaa !9
  %38 = add nuw nsw i64 %30, 1
  %39 = icmp eq i64 %38, 32000
  br i1 %39, label %24, label %28, !llvm.loop !434
}

; Function Attrs: nounwind ssp uwtable
define i32 @s256() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %40
  %4 = phi i32 [ 0, %0 ], [ %42, %40 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %38

6:                                                ; preds = %40
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.222, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %17, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %20, label %12, !llvm.loop !29

20:                                               ; preds = %12, %23
  %21 = phi i64 [ %24, %23 ], [ 0, %12 ]
  %22 = phi float [ %35, %23 ], [ 0.000000e+00, %12 ]
  br label %30

23:                                               ; preds = %30
  %24 = add nuw nsw i64 %21, 1
  %25 = icmp eq i64 %24, 256
  br i1 %25, label %26, label %20, !llvm.loop !30

26:                                               ; preds = %23
  %27 = fadd float %17, %35
  %28 = fpext float %27 to double
  %29 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %28) #19
  ret i32 0

30:                                               ; preds = %30, %20
  %31 = phi i64 [ 0, %20 ], [ %36, %30 ]
  %32 = phi float [ %22, %20 ], [ %35, %30 ]
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %21, i64 %31
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fadd float %32, %34
  %36 = add nuw nsw i64 %31, 1
  %37 = icmp eq i64 %36, 256
  br i1 %37, label %23, label %30, !llvm.loop !31

38:                                               ; preds = %3, %44
  %39 = phi i64 [ 0, %3 ], [ %45, %44 ]
  br label %47

40:                                               ; preds = %44
  %41 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %42 = add nuw nsw i32 %4, 1
  %43 = icmp eq i32 %42, 1950
  br i1 %43, label %6, label %3, !llvm.loop !435

44:                                               ; preds = %47
  %45 = add nuw nsw i64 %39, 1
  %46 = icmp eq i64 %45, 256
  br i1 %46, label %40, label %38, !llvm.loop !436

47:                                               ; preds = %38, %47
  %48 = phi float [ %5, %38 ], [ %50, %47 ]
  %49 = phi i64 [ 1, %38 ], [ %59, %47 ]
  %50 = fsub float 1.000000e+00, %48
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  store float %50, float* %51, align 4, !tbaa !9
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %49, i64 %39
  %53 = load float, float* %52, align 4, !tbaa !9
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %49
  %55 = load float, float* %54, align 4, !tbaa !9
  %56 = fmul float %53, %55
  %57 = fadd float %50, %56
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %49, i64 %39
  store float %57, float* %58, align 4, !tbaa !9
  %59 = add nuw nsw i64 %49, 1
  %60 = icmp eq i64 %59, 256
  br i1 %60, label %44, label %47, !llvm.loop !437
}

; Function Attrs: nounwind ssp uwtable
define i32 @s256p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %74
  %4 = phi i32 [ 0, %0 ], [ %76, %74 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %38

6:                                                ; preds = %74
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.223, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %17, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %20, label %12, !llvm.loop !29

20:                                               ; preds = %12, %23
  %21 = phi i64 [ %24, %23 ], [ 0, %12 ]
  %22 = phi float [ %35, %23 ], [ 0.000000e+00, %12 ]
  br label %30

23:                                               ; preds = %30
  %24 = add nuw nsw i64 %21, 1
  %25 = icmp eq i64 %24, 256
  br i1 %25, label %26, label %20, !llvm.loop !30

26:                                               ; preds = %23
  %27 = fadd float %17, %35
  %28 = fpext float %27 to double
  %29 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %28) #19
  ret i32 0

30:                                               ; preds = %30, %20
  %31 = phi i64 [ 0, %20 ], [ %36, %30 ]
  %32 = phi float [ %22, %20 ], [ %35, %30 ]
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %21, i64 %31
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fadd float %32, %34
  %36 = add nuw nsw i64 %31, 1
  %37 = icmp eq i64 %36, 256
  br i1 %37, label %23, label %30, !llvm.loop !31

38:                                               ; preds = %3, %38
  %39 = phi float [ %5, %3 ], [ %41, %38 ]
  %40 = phi i64 [ 1, %3 ], [ %43, %38 ]
  %41 = fsub float 1.000000e+00, %39
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  store float %41, float* %42, align 4, !tbaa !9
  %43 = add nuw nsw i64 %40, 1
  %44 = icmp eq i64 %43, 256
  br i1 %44, label %45, label %38, !llvm.loop !438

45:                                               ; preds = %38
  %46 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 255), align 4, !tbaa !9
  %47 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 255), align 4, !tbaa !9
  br label %48

48:                                               ; preds = %45, %78
  %49 = phi i64 [ %84, %78 ], [ 0, %45 ]
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %72, %50 ]
  %52 = or i64 %51, 1
  %53 = add i64 %51, 2
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %56 = load float, float* %54, align 4, !tbaa !9
  %57 = load float, float* %55, align 8, !tbaa !9
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %52, i64 %49
  %59 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %53, i64 %49
  %60 = load float, float* %58, align 4, !tbaa !9
  %61 = load float, float* %59, align 4, !tbaa !9
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %52
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %53
  %64 = load float, float* %62, align 4, !tbaa !9
  %65 = load float, float* %63, align 8, !tbaa !9
  %66 = fmul float %60, %64
  %67 = fmul float %61, %65
  %68 = fadd float %56, %66
  %69 = fadd float %57, %67
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %52, i64 %49
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %53, i64 %49
  store float %68, float* %70, align 4, !tbaa !9
  store float %69, float* %71, align 4, !tbaa !9
  %72 = add nuw i64 %51, 2
  %73 = icmp eq i64 %72, 254
  br i1 %73, label %78, label %50, !llvm.loop !439

74:                                               ; preds = %78
  %75 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %76 = add nuw nsw i32 %4, 1
  %77 = icmp eq i32 %76, 1950
  br i1 %77, label %6, label %3, !llvm.loop !440

78:                                               ; preds = %50
  %79 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 255, i64 %49
  %80 = load float, float* %79, align 4, !tbaa !9
  %81 = fmul float %80, %47
  %82 = fadd float %46, %81
  %83 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 255, i64 %49
  store float %82, float* %83, align 4, !tbaa !9
  %84 = add nuw nsw i64 %49, 1
  %85 = icmp eq i64 %84, 256
  br i1 %85, label %74, label %48, !llvm.loop !441
}

; Function Attrs: nounwind ssp uwtable
define i32 @s256pp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %80
  %4 = phi i32 [ 0, %0 ], [ %82, %80 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %38

6:                                                ; preds = %80
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.224, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %17, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %20, label %12, !llvm.loop !29

20:                                               ; preds = %12, %23
  %21 = phi i64 [ %24, %23 ], [ 0, %12 ]
  %22 = phi float [ %35, %23 ], [ 0.000000e+00, %12 ]
  br label %30

23:                                               ; preds = %30
  %24 = add nuw nsw i64 %21, 1
  %25 = icmp eq i64 %24, 256
  br i1 %25, label %26, label %20, !llvm.loop !30

26:                                               ; preds = %23
  %27 = fadd float %17, %35
  %28 = fpext float %27 to double
  %29 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %28) #19
  ret i32 0

30:                                               ; preds = %30, %20
  %31 = phi i64 [ 0, %20 ], [ %36, %30 ]
  %32 = phi float [ %22, %20 ], [ %35, %30 ]
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %21, i64 %31
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fadd float %32, %34
  %36 = add nuw nsw i64 %31, 1
  %37 = icmp eq i64 %36, 256
  br i1 %37, label %23, label %30, !llvm.loop !31

38:                                               ; preds = %3, %38
  %39 = phi float [ %5, %3 ], [ %42, %38 ]
  %40 = phi i64 [ 0, %3 ], [ %46, %38 ]
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  store float %39, float* %41, align 8, !tbaa !9
  %42 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  %43 = fsub float 1.000000e+00, %42
  %44 = or i64 %40, 1
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  store float %43, float* %45, align 4, !tbaa !9
  %46 = add nuw nsw i64 %40, 2
  %47 = icmp ult i64 %40, 254
  br i1 %47, label %38, label %48, !llvm.loop !442

48:                                               ; preds = %38, %84
  %49 = phi i64 [ %85, %84 ], [ 1, %38 ]
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !9
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %49
  %53 = load float, float* %52, align 4, !tbaa !9
  %54 = insertelement <4 x float> poison, float %53, i32 0
  %55 = shufflevector <4 x float> %54, <4 x float> poison, <4 x i32> zeroinitializer
  %56 = insertelement <4 x float> poison, float %53, i32 0
  %57 = shufflevector <4 x float> %56, <4 x float> poison, <4 x i32> zeroinitializer
  %58 = insertelement <4 x float> poison, float %51, i32 0
  %59 = shufflevector <4 x float> %58, <4 x float> poison, <4 x i32> zeroinitializer
  %60 = insertelement <4 x float> poison, float %51, i32 0
  %61 = shufflevector <4 x float> %60, <4 x float> poison, <4 x i32> zeroinitializer
  br label %62

62:                                               ; preds = %62, %48
  %63 = phi i64 [ 0, %48 ], [ %78, %62 ]
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %49, i64 %63
  %65 = bitcast float* %64 to <4 x float>*
  %66 = load <4 x float>, <4 x float>* %65, align 16, !tbaa !9
  %67 = getelementptr inbounds float, float* %64, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  %69 = load <4 x float>, <4 x float>* %68, align 16, !tbaa !9
  %70 = fmul <4 x float> %66, %55
  %71 = fmul <4 x float> %69, %57
  %72 = fadd <4 x float> %59, %70
  %73 = fadd <4 x float> %61, %71
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %49, i64 %63
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> %72, <4 x float>* %75, align 16, !tbaa !9
  %76 = getelementptr inbounds float, float* %74, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  store <4 x float> %73, <4 x float>* %77, align 16, !tbaa !9
  %78 = add nuw i64 %63, 8
  %79 = icmp eq i64 %78, 256
  br i1 %79, label %84, label %62, !llvm.loop !443

80:                                               ; preds = %84
  %81 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %82 = add nuw nsw i32 %4, 1
  %83 = icmp eq i32 %82, 1950
  br i1 %83, label %6, label %3, !llvm.loop !444

84:                                               ; preds = %62
  %85 = add nuw nsw i64 %49, 1
  %86 = icmp eq i64 %85, 256
  br i1 %86, label %80, label %48, !llvm.loop !445
}

; Function Attrs: nounwind ssp uwtable
define i32 @s257() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %60
  %4 = phi i32 [ 0, %0 ], [ %62, %60 ]
  br label %37

5:                                                ; preds = %60
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.225, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11, %22
  %20 = phi i64 [ %23, %22 ], [ 0, %11 ]
  %21 = phi float [ %34, %22 ], [ 0.000000e+00, %11 ]
  br label %29

22:                                               ; preds = %29
  %23 = add nuw nsw i64 %20, 1
  %24 = icmp eq i64 %23, 256
  br i1 %24, label %25, label %19, !llvm.loop !30

25:                                               ; preds = %22
  %26 = fadd float %16, %34
  %27 = fpext float %26 to double
  %28 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %27) #19
  ret i32 0

29:                                               ; preds = %29, %19
  %30 = phi i64 [ 0, %19 ], [ %35, %29 ]
  %31 = phi float [ %21, %19 ], [ %34, %29 ]
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %20, i64 %30
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = fadd float %31, %33
  %35 = add nuw nsw i64 %30, 1
  %36 = icmp eq i64 %35, 256
  br i1 %36, label %22, label %29, !llvm.loop !31

37:                                               ; preds = %3, %64
  %38 = phi i64 [ 1, %3 ], [ %65, %64 ]
  %39 = add nsw i64 %38, -1
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %42 = load float, float* %40, align 4, !tbaa !9
  br label %43

43:                                               ; preds = %43, %37
  %44 = phi i64 [ 0, %37 ], [ %58, %43 ]
  %45 = or i64 %44, 1
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %44, i64 %38
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %45, i64 %38
  %48 = load float, float* %46, align 4, !tbaa !9
  %49 = load float, float* %47, align 4, !tbaa !9
  %50 = fsub float %48, %42
  %51 = fsub float %49, %42
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %44, i64 %38
  %53 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %45, i64 %38
  %54 = load float, float* %52, align 4, !tbaa !9
  %55 = load float, float* %53, align 4, !tbaa !9
  %56 = fadd float %50, %54
  %57 = fadd float %51, %55
  store float %56, float* %46, align 4, !tbaa !9
  store float %57, float* %47, align 4, !tbaa !9
  %58 = add nuw i64 %44, 2
  %59 = icmp eq i64 %58, 256
  br i1 %59, label %64, label %43, !llvm.loop !446

60:                                               ; preds = %64
  %61 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %62 = add nuw nsw i32 %4, 1
  %63 = icmp eq i32 %62, 1950
  br i1 %63, label %5, label %3, !llvm.loop !447

64:                                               ; preds = %43
  store float %51, float* %41, align 4, !tbaa !9
  %65 = add nuw nsw i64 %38, 1
  %66 = icmp eq i64 %65, 256
  br i1 %66, label %60, label %37, !llvm.loop !448
}

; Function Attrs: nounwind ssp uwtable
define i32 @s258() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.226, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %31
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 50000
  br i1 %30, label %5, label %3, !llvm.loop !449

31:                                               ; preds = %3, %31
  %32 = phi i64 [ 0, %3 ], [ %51, %31 ]
  %33 = phi float [ 0.000000e+00, %3 ], [ %40, %31 ]
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fcmp ogt float %35, 0.000000e+00
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fmul float %38, %38
  %40 = select i1 %36, float %39, float %33
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fmul float %40, %42
  %44 = fadd float %43, %38
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  store float %44, float* %45, align 4, !tbaa !9
  %46 = fadd float %40, 1.000000e+00
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %32
  %48 = load float, float* %47, align 4, !tbaa !9
  %49 = fmul float %46, %48
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %32
  store float %49, float* %50, align 4, !tbaa !9
  %51 = add nuw nsw i64 %32, 1
  %52 = icmp eq i64 %51, 256
  br i1 %52, label %27, label %31, !llvm.loop !450
}

; Function Attrs: nounwind ssp uwtable
define i32 @s261() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %28
  %4 = phi i32 [ 0, %0 ], [ %30, %28 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !9
  br label %32

6:                                                ; preds = %28
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.227, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %21, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %18, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %12, !llvm.loop !29

24:                                               ; preds = %12
  %25 = fadd float %18, %21
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #19
  ret i32 0

28:                                               ; preds = %32
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %4, 1
  %31 = icmp eq i32 %30, 50000
  br i1 %31, label %6, label %3, !llvm.loop !451

32:                                               ; preds = %3, %32
  %33 = phi float [ %5, %3 ], [ %45, %32 ]
  %34 = phi i64 [ 1, %3 ], [ %46, %32 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %36, %38
  %40 = fadd float %39, %33
  store float %40, float* %35, align 4, !tbaa !9
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %34
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = fmul float %42, %44
  store float %45, float* %41, align 4, !tbaa !9
  %46 = add nuw nsw i64 %34, 1
  %47 = icmp eq i64 %46, 32000
  br i1 %47, label %28, label %32, !llvm.loop !452
}

; Function Attrs: nounwind ssp uwtable
define i32 @s271() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %75, %0
  %4 = phi i32 [ 0, %0 ], [ %77, %75 ]
  br label %5

5:                                                ; preds = %55, %3
  %6 = phi i64 [ 0, %3 ], [ %56, %55 ]
  %7 = or i64 %6, 2
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 2
  %12 = bitcast float* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 8, !tbaa !9
  %14 = fcmp ogt <2 x float> %10, zeroinitializer
  %15 = fcmp ogt <2 x float> %13, zeroinitializer
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %17 = bitcast float* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 16, !tbaa !9
  %19 = getelementptr inbounds float, float* %16, i64 2
  %20 = bitcast float* %19 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 8, !tbaa !9
  %22 = extractelement <2 x i1> %14, i32 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %5
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %25 = load float, float* %24, align 16, !tbaa !9
  %26 = fmul <2 x float> %10, %18
  %27 = extractelement <2 x float> %26, i32 0
  %28 = fadd float %25, %27
  store float %28, float* %24, align 16, !tbaa !9
  br label %29

29:                                               ; preds = %23, %5
  %30 = extractelement <2 x i1> %14, i32 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %29
  %32 = or i64 %6, 1
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fmul <2 x float> %10, %18
  %36 = extractelement <2 x float> %35, i32 1
  %37 = fadd float %34, %36
  store float %37, float* %33, align 4, !tbaa !9
  br label %38

38:                                               ; preds = %31, %29
  %39 = extractelement <2 x i1> %15, i32 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %38
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %42 = load float, float* %41, align 8, !tbaa !9
  %43 = fmul <2 x float> %13, %21
  %44 = extractelement <2 x float> %43, i32 0
  %45 = fadd float %42, %44
  store float %45, float* %41, align 8, !tbaa !9
  br label %46

46:                                               ; preds = %40, %38
  %47 = extractelement <2 x i1> %15, i32 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %46
  %49 = or i64 %6, 3
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !9
  %52 = fmul <2 x float> %13, %21
  %53 = extractelement <2 x float> %52, i32 1
  %54 = fadd float %51, %53
  store float %54, float* %50, align 4, !tbaa !9
  br label %55

55:                                               ; preds = %48, %46
  %56 = add nuw i64 %6, 4
  %57 = icmp eq i64 %56, 32000
  br i1 %57, label %75, label %5, !llvm.loop !453

58:                                               ; preds = %75
  %59 = tail call i64 @"\01_clock"() #19
  %60 = sub i64 %59, %2
  %61 = uitofp i64 %60 to double
  %62 = fdiv double %61, 1.000000e+06
  %63 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i64 0, i64 0), double %62)
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi i64 [ 0, %58 ], [ %70, %64 ]
  %66 = phi float [ 0.000000e+00, %58 ], [ %69, %64 ]
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %68 = load float, float* %67, align 4, !tbaa !9
  %69 = fadd float %66, %68
  %70 = add nuw nsw i64 %65, 1
  %71 = icmp eq i64 %70, 32000
  br i1 %71, label %72, label %64, !llvm.loop !29

72:                                               ; preds = %64
  %73 = fpext float %69 to double
  %74 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %73) #19
  ret i32 0

75:                                               ; preds = %55
  %76 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %77 = add nuw nsw i32 %4, 1
  %78 = icmp eq i32 %77, 200000
  br i1 %78, label %58, label %3, !llvm.loop !454
}

; Function Attrs: nounwind ssp uwtable
define i32 @s272(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %1, %28
  %5 = phi i32 [ 0, %1 ], [ %30, %28 ]
  br label %32

6:                                                ; preds = %28
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %3
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.229, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %21, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %18, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %12, !llvm.loop !29

24:                                               ; preds = %12
  %25 = fadd float %18, %21
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #19
  ret i32 0

28:                                               ; preds = %50
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %5, 1
  %31 = icmp eq i32 %30, 50000
  br i1 %31, label %6, label %4, !llvm.loop !455

32:                                               ; preds = %4, %50
  %33 = phi i64 [ 0, %4 ], [ %51, %50 ]
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fcmp ult float %35, %0
  br i1 %36, label %50, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %33
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %33
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fmul float %39, %41
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = fadd float %44, %42
  store float %45, float* %43, align 4, !tbaa !9
  %46 = fmul float %39, %39
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %33
  %48 = load float, float* %47, align 4, !tbaa !9
  %49 = fadd float %46, %48
  store float %49, float* %47, align 4, !tbaa !9
  br label %50

50:                                               ; preds = %32, %37
  %51 = add nuw nsw i64 %33, 1
  %52 = icmp eq i64 %51, 32000
  br i1 %52, label %28, label %32, !llvm.loop !456
}

; Function Attrs: nounwind ssp uwtable
define i32 @s273() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %86, %0
  %4 = phi i32 [ 0, %0 ], [ %88, %86 ]
  br label %5

5:                                                ; preds = %50, %3
  %6 = phi i64 [ 0, %3 ], [ %57, %50 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fmul <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = fadd <4 x float> %16, %13
  %18 = bitcast float* %14 to <4 x float>*
  store <4 x float> %17, <4 x float>* %18, align 16, !tbaa !9
  %19 = fcmp olt <4 x float> %17, zeroinitializer
  %20 = extractelement <4 x i1> %19, i32 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %5
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %23 = load float, float* %22, align 16, !tbaa !9
  %24 = extractelement <4 x float> %13, i32 0
  %25 = fadd float %24, %23
  store float %25, float* %22, align 16, !tbaa !9
  br label %26

26:                                               ; preds = %21, %5
  %27 = extractelement <4 x i1> %19, i32 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %26
  %29 = or i64 %6, 1
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = extractelement <4 x float> %13, i32 1
  %33 = fadd float %32, %31
  store float %33, float* %30, align 4, !tbaa !9
  br label %34

34:                                               ; preds = %28, %26
  %35 = extractelement <4 x i1> %19, i32 2
  br i1 %35, label %36, label %42

36:                                               ; preds = %34
  %37 = or i64 %6, 2
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %39 = load float, float* %38, align 8, !tbaa !9
  %40 = extractelement <4 x float> %13, i32 2
  %41 = fadd float %40, %39
  store float %41, float* %38, align 8, !tbaa !9
  br label %42

42:                                               ; preds = %36, %34
  %43 = extractelement <4 x i1> %19, i32 3
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = or i64 %6, 3
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = extractelement <4 x float> %13, i32 3
  %49 = fadd float %48, %47
  store float %49, float* %46, align 4, !tbaa !9
  br label %50

50:                                               ; preds = %44, %42
  %51 = fmul <4 x float> %9, %17
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %53 = bitcast float* %52 to <4 x float>*
  %54 = load <4 x float>, <4 x float>* %53, align 16, !tbaa !9
  %55 = fadd <4 x float> %51, %54
  %56 = bitcast float* %52 to <4 x float>*
  store <4 x float> %55, <4 x float>* %56, align 16, !tbaa !9
  %57 = add nuw i64 %6, 4
  %58 = icmp eq i64 %57, 32000
  br i1 %58, label %86, label %5, !llvm.loop !457

59:                                               ; preds = %86
  %60 = tail call i64 @"\01_clock"() #19
  %61 = sub i64 %60, %2
  %62 = uitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  %64 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.230, i64 0, i64 0), double %63)
  br label %65

65:                                               ; preds = %65, %59
  %66 = phi i64 [ 0, %59 ], [ %79, %65 ]
  %67 = phi float [ 0.000000e+00, %59 ], [ %78, %65 ]
  %68 = phi float [ 0.000000e+00, %59 ], [ %75, %65 ]
  %69 = phi float [ 0.000000e+00, %59 ], [ %72, %65 ]
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %71 = load float, float* %70, align 4, !tbaa !9
  %72 = fadd float %69, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %66
  %74 = load float, float* %73, align 4, !tbaa !9
  %75 = fadd float %68, %74
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %66
  %77 = load float, float* %76, align 4, !tbaa !9
  %78 = fadd float %67, %77
  %79 = add nuw nsw i64 %66, 1
  %80 = icmp eq i64 %79, 32000
  br i1 %80, label %81, label %65, !llvm.loop !29

81:                                               ; preds = %65
  %82 = fadd float %72, %75
  %83 = fadd float %82, %78
  %84 = fpext float %83 to double
  %85 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %84) #19
  ret i32 0

86:                                               ; preds = %50
  %87 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %88 = add nuw nsw i32 %4, 1
  %89 = icmp eq i32 %88, 50000
  br i1 %89, label %59, label %3, !llvm.loop !458
}

; Function Attrs: nounwind ssp uwtable
define i32 @s273p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %86, %0
  %4 = phi i32 [ 0, %0 ], [ %88, %86 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %57, %5 ]
  %7 = shl i64 %6, 2
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = bitcast float* %8 to <16 x float>*
  %10 = load <16 x float>, <16 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %7
  %12 = bitcast float* %11 to <16 x float>*
  %13 = load <16 x float>, <16 x float>* %12, align 16, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %7
  %15 = bitcast float* %14 to <16 x float>*
  %16 = load <16 x float>, <16 x float>* %15, align 16, !tbaa !9
  %17 = fmul <16 x float> %13, %16
  %18 = fadd <16 x float> %10, %17
  %19 = shufflevector <16 x float> %18, <16 x float> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %20 = fmul <16 x float> %13, %16
  %21 = fadd <16 x float> %10, %20
  %22 = shufflevector <16 x float> %21, <16 x float> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %23 = fmul <16 x float> %13, %16
  %24 = fadd <16 x float> %10, %23
  %25 = shufflevector <16 x float> %24, <16 x float> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %26 = or i64 %7, 3
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = fmul <16 x float> %13, %16
  %29 = fadd <16 x float> %10, %28
  %30 = shufflevector <16 x float> %29, <16 x float> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %31 = getelementptr inbounds float, float* %27, i64 -3
  %32 = bitcast float* %31 to <16 x float>*
  %33 = shufflevector <4 x float> %19, <4 x float> %22, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %34 = shufflevector <4 x float> %25, <4 x float> %30, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %35 = shufflevector <8 x float> %33, <8 x float> %34, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %35, <16 x float>* %32, align 16, !tbaa !9
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7
  %37 = bitcast float* %36 to <16 x float>*
  %38 = load <16 x float>, <16 x float>* %37, align 16, !tbaa !9
  %39 = fmul <16 x float> %13, %18
  %40 = fadd <16 x float> %39, %38
  %41 = shufflevector <16 x float> %40, <16 x float> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %42 = fmul <16 x float> %13, %21
  %43 = fadd <16 x float> %42, %38
  %44 = shufflevector <16 x float> %43, <16 x float> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %45 = fmul <16 x float> %13, %24
  %46 = fadd <16 x float> %45, %38
  %47 = shufflevector <16 x float> %46, <16 x float> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %26
  %49 = fmul <16 x float> %13, %29
  %50 = fadd <16 x float> %49, %38
  %51 = shufflevector <16 x float> %50, <16 x float> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %52 = getelementptr inbounds float, float* %48, i64 -3
  %53 = bitcast float* %52 to <16 x float>*
  %54 = shufflevector <4 x float> %41, <4 x float> %44, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %55 = shufflevector <4 x float> %47, <4 x float> %51, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %56 = shufflevector <8 x float> %54, <8 x float> %55, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %56, <16 x float>* %53, align 16, !tbaa !9
  %57 = add nuw i64 %6, 4
  %58 = icmp eq i64 %57, 8000
  br i1 %58, label %86, label %5, !llvm.loop !459

59:                                               ; preds = %86
  %60 = tail call i64 @"\01_clock"() #19
  %61 = sub i64 %60, %2
  %62 = uitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  %64 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.231, i64 0, i64 0), double %63)
  br label %65

65:                                               ; preds = %65, %59
  %66 = phi i64 [ 0, %59 ], [ %79, %65 ]
  %67 = phi float [ 0.000000e+00, %59 ], [ %78, %65 ]
  %68 = phi float [ 0.000000e+00, %59 ], [ %75, %65 ]
  %69 = phi float [ 0.000000e+00, %59 ], [ %72, %65 ]
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %71 = load float, float* %70, align 4, !tbaa !9
  %72 = fadd float %69, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %66
  %74 = load float, float* %73, align 4, !tbaa !9
  %75 = fadd float %68, %74
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %66
  %77 = load float, float* %76, align 4, !tbaa !9
  %78 = fadd float %67, %77
  %79 = add nuw nsw i64 %66, 1
  %80 = icmp eq i64 %79, 32000
  br i1 %80, label %81, label %65, !llvm.loop !29

81:                                               ; preds = %65
  %82 = fadd float %72, %75
  %83 = fadd float %82, %78
  %84 = fpext float %83 to double
  %85 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %84) #19
  ret i32 0

86:                                               ; preds = %5
  %87 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %88 = add nuw nsw i32 %4, 1
  %89 = icmp eq i32 %88, 50000
  br i1 %89, label %59, label %3, !llvm.loop !460
}

; Function Attrs: nounwind ssp uwtable
define i32 @s274() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.232, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %48
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 50000
  br i1 %30, label %5, label %3, !llvm.loop !461

31:                                               ; preds = %3, %48
  %32 = phi i64 [ 0, %3 ], [ %49, %48 ]
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %32
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fmul float %36, %38
  %40 = fadd float %34, %39
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %40, float* %41, align 4, !tbaa !9
  %42 = fcmp ogt float %40, 0.000000e+00
  br i1 %42, label %43, label %47

43:                                               ; preds = %31
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fadd float %40, %45
  store float %46, float* %44, align 4, !tbaa !9
  br label %48

47:                                               ; preds = %31
  store float %39, float* %41, align 4, !tbaa !9
  br label %48

48:                                               ; preds = %43, %47
  %49 = add nuw nsw i64 %32, 1
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %27, label %31, !llvm.loop !462
}

; Function Attrs: nounwind ssp uwtable
define i32 @s275() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %28
  %4 = phi i32 [ 0, %0 ], [ %30, %28 ]
  br label %32

5:                                                ; preds = %28
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.233, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %49
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %4, 1
  %31 = icmp eq i32 %30, 1950
  br i1 %31, label %5, label %3, !llvm.loop !463

32:                                               ; preds = %3, %49
  %33 = phi i64 [ 0, %3 ], [ %50, %49 ]
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fcmp ogt float %35, 0.000000e+00
  br i1 %36, label %37, label %49

37:                                               ; preds = %32, %37
  %38 = phi float [ %45, %37 ], [ %35, %32 ]
  %39 = phi i64 [ %47, %37 ], [ 1, %32 ]
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %39, i64 %33
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %39, i64 %33
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fmul float %41, %43
  %45 = fadd float %38, %44
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %39, i64 %33
  store float %45, float* %46, align 4, !tbaa !9
  %47 = add nuw nsw i64 %39, 1
  %48 = icmp eq i64 %47, 256
  br i1 %48, label %49, label %37, !llvm.loop !464

49:                                               ; preds = %37, %32
  %50 = add nuw nsw i64 %33, 1
  %51 = icmp eq i64 %50, 256
  br i1 %51, label %28, label %32, !llvm.loop !465
}

; Function Attrs: nounwind ssp uwtable
define i32 @s275p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %31
  %4 = phi i32 [ 0, %0 ], [ %33, %31 ]
  br label %28

5:                                                ; preds = %31
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.234, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %35
  %29 = phi i64 [ 1, %3 ], [ %36, %35 ]
  %30 = add nsw i64 %29, -1
  br label %38

31:                                               ; preds = %35
  %32 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %33 = add nuw nsw i32 %4, 1
  %34 = icmp eq i32 %33, 1950
  br i1 %34, label %5, label %3, !llvm.loop !466

35:                                               ; preds = %53
  %36 = add nuw nsw i64 %29, 1
  %37 = icmp eq i64 %36, 256
  br i1 %37, label %31, label %28, !llvm.loop !467

38:                                               ; preds = %28, %53
  %39 = phi i64 [ 0, %28 ], [ %54, %53 ]
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %39
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fcmp ogt float %41, 0.000000e+00
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30, i64 %39
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %39
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %29, i64 %39
  %49 = load float, float* %48, align 4, !tbaa !9
  %50 = fmul float %47, %49
  %51 = fadd float %45, %50
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %39
  store float %51, float* %52, align 4, !tbaa !9
  br label %53

53:                                               ; preds = %38, %43
  %54 = add nuw nsw i64 %39, 1
  %55 = icmp eq i64 %54, 256
  br i1 %55, label %35, label %38, !llvm.loop !468
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2275() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %51
  %4 = phi i32 [ 0, %0 ], [ %53, %51 ]
  br label %28

5:                                                ; preds = %51
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.235, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %55, %3
  %29 = phi i64 [ 0, %3 ], [ %65, %55 ]
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %49, %30 ]
  %32 = or i64 %31, 1
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %31, i64 %29
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %32, i64 %29
  %35 = load float, float* %33, align 4, !tbaa !9
  %36 = load float, float* %34, align 4, !tbaa !9
  %37 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %31, i64 %29
  %38 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %32, i64 %29
  %39 = load float, float* %37, align 4, !tbaa !9
  %40 = load float, float* %38, align 4, !tbaa !9
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %31, i64 %29
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %32, i64 %29
  %43 = load float, float* %41, align 4, !tbaa !9
  %44 = load float, float* %42, align 4, !tbaa !9
  %45 = fmul float %39, %43
  %46 = fmul float %40, %44
  %47 = fadd float %35, %45
  %48 = fadd float %36, %46
  store float %47, float* %33, align 4, !tbaa !9
  store float %48, float* %34, align 4, !tbaa !9
  %49 = add nuw i64 %31, 2
  %50 = icmp eq i64 %49, 256
  br i1 %50, label %55, label %30, !llvm.loop !469

51:                                               ; preds = %55
  %52 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %53 = add nuw nsw i32 %4, 1
  %54 = icmp eq i32 %53, 19500
  br i1 %54, label %5, label %3, !llvm.loop !470

55:                                               ; preds = %30
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %57 = load float, float* %56, align 4, !tbaa !9
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %29
  %59 = load float, float* %58, align 4, !tbaa !9
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %29
  %61 = load float, float* %60, align 4, !tbaa !9
  %62 = fmul float %59, %61
  %63 = fadd float %57, %62
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  store float %63, float* %64, align 4, !tbaa !9
  %65 = add nuw nsw i64 %29, 1
  %66 = icmp eq i64 %65, 256
  br i1 %66, label %51, label %28, !llvm.loop !471
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2275p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %91
  %4 = phi i32 [ 0, %0 ], [ %93, %91 ]
  br label %28

5:                                                ; preds = %91
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.236, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %58, %3
  %29 = phi i64 [ 0, %3 ], [ %59, %58 ]
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %56, %30 ]
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %31
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !9
  %35 = getelementptr inbounds float, float* %32, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16, !tbaa !9
  %38 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %29, i64 %31
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 16, !tbaa !9
  %41 = getelementptr inbounds float, float* %38, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %43 = load <4 x float>, <4 x float>* %42, align 16, !tbaa !9
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %29, i64 %31
  %45 = bitcast float* %44 to <4 x float>*
  %46 = load <4 x float>, <4 x float>* %45, align 16, !tbaa !9
  %47 = getelementptr inbounds float, float* %44, i64 4
  %48 = bitcast float* %47 to <4 x float>*
  %49 = load <4 x float>, <4 x float>* %48, align 16, !tbaa !9
  %50 = fmul <4 x float> %40, %46
  %51 = fmul <4 x float> %43, %49
  %52 = fadd <4 x float> %34, %50
  %53 = fadd <4 x float> %37, %51
  %54 = bitcast float* %32 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 16, !tbaa !9
  %55 = bitcast float* %35 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 16, !tbaa !9
  %56 = add nuw i64 %31, 8
  %57 = icmp eq i64 %56, 256
  br i1 %57, label %58, label %30, !llvm.loop !472

58:                                               ; preds = %30
  %59 = add nuw nsw i64 %29, 1
  %60 = icmp eq i64 %59, 256
  br i1 %60, label %61, label %28, !llvm.loop !473

61:                                               ; preds = %58, %61
  %62 = phi i64 [ %89, %61 ], [ 0, %58 ]
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  %64 = bitcast float* %63 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %64, align 16, !tbaa !9
  %66 = getelementptr inbounds float, float* %63, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  %68 = load <4 x float>, <4 x float>* %67, align 16, !tbaa !9
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %70 = bitcast float* %69 to <4 x float>*
  %71 = load <4 x float>, <4 x float>* %70, align 16, !tbaa !9
  %72 = getelementptr inbounds float, float* %69, i64 4
  %73 = bitcast float* %72 to <4 x float>*
  %74 = load <4 x float>, <4 x float>* %73, align 16, !tbaa !9
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %62
  %76 = bitcast float* %75 to <4 x float>*
  %77 = load <4 x float>, <4 x float>* %76, align 16, !tbaa !9
  %78 = getelementptr inbounds float, float* %75, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  %80 = load <4 x float>, <4 x float>* %79, align 16, !tbaa !9
  %81 = fmul <4 x float> %71, %77
  %82 = fmul <4 x float> %74, %80
  %83 = fadd <4 x float> %65, %81
  %84 = fadd <4 x float> %68, %82
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %86 = bitcast float* %85 to <4 x float>*
  store <4 x float> %83, <4 x float>* %86, align 16, !tbaa !9
  %87 = getelementptr inbounds float, float* %85, i64 4
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> %84, <4 x float>* %88, align 16, !tbaa !9
  %89 = add nuw i64 %62, 8
  %90 = icmp eq i64 %89, 256
  br i1 %90, label %91, label %61, !llvm.loop !474

91:                                               ; preds = %61
  %92 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %93 = add nuw nsw i32 %4, 1
  %94 = icmp eq i32 %93, 19500
  br i1 %94, label %5, label %3, !llvm.loop !475
}

; Function Attrs: nounwind ssp uwtable
define i32 @s276() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %46, %0
  %4 = phi i32 [ 0, %0 ], [ %48, %46 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %27, %5 ]
  %7 = or i64 %6, 1
  %8 = icmp ult i64 %6, 15999
  %9 = icmp ult i64 %7, 15999
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %11 = bitcast float* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 8, !tbaa !9
  %13 = select i1 %8, [32000 x float]* @c, [32000 x float]* @d
  %14 = select i1 %9, [32000 x float]* @c, [32000 x float]* @d
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* %13, i64 0, i64 %6
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* %14, i64 0, i64 %7
  %17 = load float, float* %15, align 8, !tbaa !9
  %18 = load float, float* %16, align 4, !tbaa !9
  %19 = insertelement <2 x float> poison, float %17, i32 0
  %20 = insertelement <2 x float> %19, float %18, i32 1
  %21 = fmul <2 x float> %12, %20
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %23 = bitcast float* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 8, !tbaa !9
  %25 = fadd <2 x float> %24, %21
  %26 = bitcast float* %22 to <2 x float>*
  store <2 x float> %25, <2 x float>* %26, align 8, !tbaa !9
  %27 = add nuw i64 %6, 2
  %28 = icmp eq i64 %27, 32000
  br i1 %28, label %46, label %5, !llvm.loop !476

29:                                               ; preds = %46
  %30 = tail call i64 @"\01_clock"() #19
  %31 = sub i64 %30, %2
  %32 = uitofp i64 %31 to double
  %33 = fdiv double %32, 1.000000e+06
  %34 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.237, i64 0, i64 0), double %33)
  br label %35

35:                                               ; preds = %35, %29
  %36 = phi i64 [ 0, %29 ], [ %41, %35 ]
  %37 = phi float [ 0.000000e+00, %29 ], [ %40, %35 ]
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %37, %39
  %41 = add nuw nsw i64 %36, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %43, label %35, !llvm.loop !29

43:                                               ; preds = %35
  %44 = fpext float %40 to double
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %44) #19
  ret i32 0

46:                                               ; preds = %5
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %48 = add nuw nsw i32 %4, 1
  %49 = icmp eq i32 %48, 200000
  br i1 %49, label %29, label %3, !llvm.loop !477
}

; Function Attrs: nounwind ssp uwtable
define i32 @s276p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %115, %0
  %4 = phi i32 [ 0, %0 ], [ %122, %115 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %31, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !9
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !9
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !9
  %31 = add nuw i64 %6, 8
  %32 = icmp eq i64 %31, 15992
  br i1 %32, label %50, label %5, !llvm.loop !478

33:                                               ; preds = %115
  %34 = tail call i64 @"\01_clock"() #19
  %35 = sub i64 %34, %2
  %36 = uitofp i64 %35 to double
  %37 = fdiv double %36, 1.000000e+06
  %38 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.238, i64 0, i64 0), double %37)
  br label %39

39:                                               ; preds = %39, %33
  %40 = phi i64 [ 0, %33 ], [ %45, %39 ]
  %41 = phi float [ 0.000000e+00, %33 ], [ %44, %39 ]
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %41, %43
  %45 = add nuw nsw i64 %40, 1
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %39, !llvm.loop !29

47:                                               ; preds = %39
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #19
  ret i32 0

50:                                               ; preds = %5
  %51 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15992), align 16, !tbaa !9
  %52 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15992), align 16, !tbaa !9
  %53 = fmul float %51, %52
  %54 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15992), align 16, !tbaa !9
  %55 = fadd float %54, %53
  store float %55, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15992), align 16, !tbaa !9
  %56 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15993), align 4, !tbaa !9
  %57 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15993), align 4, !tbaa !9
  %58 = fmul float %56, %57
  %59 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15993), align 4, !tbaa !9
  %60 = fadd float %59, %58
  store float %60, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15993), align 4, !tbaa !9
  %61 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15994), align 8, !tbaa !9
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15994), align 8, !tbaa !9
  %63 = fmul float %61, %62
  %64 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15994), align 8, !tbaa !9
  %65 = fadd float %64, %63
  store float %65, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15994), align 8, !tbaa !9
  %66 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15995), align 4, !tbaa !9
  %67 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15995), align 4, !tbaa !9
  %68 = fmul float %66, %67
  %69 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15995), align 4, !tbaa !9
  %70 = fadd float %69, %68
  store float %70, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15995), align 4, !tbaa !9
  %71 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15996), align 16, !tbaa !9
  %72 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15996), align 16, !tbaa !9
  %73 = fmul float %71, %72
  %74 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15996), align 16, !tbaa !9
  %75 = fadd float %74, %73
  store float %75, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15996), align 16, !tbaa !9
  %76 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15997), align 4, !tbaa !9
  %77 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15997), align 4, !tbaa !9
  %78 = fmul float %76, %77
  %79 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15997), align 4, !tbaa !9
  %80 = fadd float %79, %78
  store float %80, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15997), align 4, !tbaa !9
  %81 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 15998), align 8, !tbaa !9
  %82 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 15998), align 8, !tbaa !9
  %83 = fmul float %81, %82
  %84 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15998), align 8, !tbaa !9
  %85 = fadd float %84, %83
  store float %85, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15998), align 8, !tbaa !9
  br label %86

86:                                               ; preds = %50, %86
  %87 = phi i64 [ %113, %86 ], [ 0, %50 ]
  %88 = add i64 %87, 15999
  %89 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %88
  %90 = bitcast float* %89 to <4 x float>*
  %91 = load <4 x float>, <4 x float>* %90, align 4, !tbaa !9
  %92 = getelementptr inbounds float, float* %89, i64 4
  %93 = bitcast float* %92 to <4 x float>*
  %94 = load <4 x float>, <4 x float>* %93, align 4, !tbaa !9
  %95 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %88
  %96 = bitcast float* %95 to <4 x float>*
  %97 = load <4 x float>, <4 x float>* %96, align 4, !tbaa !9
  %98 = getelementptr inbounds float, float* %95, i64 4
  %99 = bitcast float* %98 to <4 x float>*
  %100 = load <4 x float>, <4 x float>* %99, align 4, !tbaa !9
  %101 = fmul <4 x float> %91, %97
  %102 = fmul <4 x float> %94, %100
  %103 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %88
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 4, !tbaa !9
  %106 = getelementptr inbounds float, float* %103, i64 4
  %107 = bitcast float* %106 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 4, !tbaa !9
  %109 = fadd <4 x float> %105, %101
  %110 = fadd <4 x float> %108, %102
  %111 = bitcast float* %103 to <4 x float>*
  store <4 x float> %109, <4 x float>* %111, align 4, !tbaa !9
  %112 = bitcast float* %106 to <4 x float>*
  store <4 x float> %110, <4 x float>* %112, align 4, !tbaa !9
  %113 = add nuw i64 %87, 8
  %114 = icmp eq i64 %113, 16000
  br i1 %114, label %115, label %86, !llvm.loop !479

115:                                              ; preds = %86
  %116 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !9
  %117 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 31999), align 4, !tbaa !9
  %118 = fmul float %116, %117
  %119 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %120 = fadd float %119, %118
  store float %120, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4, !tbaa !9
  %121 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %122 = add nuw nsw i32 %4, 1
  %123 = icmp eq i32 %122, 200000
  br i1 %123, label %33, label %3, !llvm.loop !480
}

; Function Attrs: nounwind ssp uwtable
define i32 @s277() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.239, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %56
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 50000
  br i1 %30, label %5, label %3, !llvm.loop !481

31:                                               ; preds = %3, %56
  %32 = phi i64 [ 0, %3 ], [ %57, %56 ]
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fcmp ult float %34, 0.000000e+00
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = add nuw nsw i64 %32, 1
  br label %56

38:                                               ; preds = %31
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %40 = load float, float* %39, align 4, !tbaa !9
  %41 = fcmp ult float %40, 0.000000e+00
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %45 = load float, float* %44, align 4, !tbaa !9
  br i1 %41, label %46, label %49

46:                                               ; preds = %38
  %47 = fmul float %43, %45
  %48 = fadd float %34, %47
  store float %48, float* %33, align 4, !tbaa !9
  br label %49

49:                                               ; preds = %38, %46
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %32
  %51 = load float, float* %50, align 4, !tbaa !9
  %52 = fmul float %45, %51
  %53 = fadd float %43, %52
  %54 = add nuw nsw i64 %32, 1
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %54
  store float %53, float* %55, align 4, !tbaa !9
  br label %56

56:                                               ; preds = %36, %49
  %57 = phi i64 [ %37, %36 ], [ %54, %49 ]
  %58 = icmp eq i64 %57, 31999
  br i1 %58, label %27, label %31, !llvm.loop !482
}

; Function Attrs: nounwind ssp uwtable
define i32 @s278() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %32
  %4 = phi i32 [ 0, %0 ], [ %34, %32 ]
  br label %36

5:                                                ; preds = %32
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.240, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %25, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %24, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %21, %11 ]
  %15 = phi float [ 0.000000e+00, %5 ], [ %18, %11 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %23 = load float, float* %22, align 4, !tbaa !9
  %24 = fadd float %13, %23
  %25 = add nuw nsw i64 %12, 1
  %26 = icmp eq i64 %25, 32000
  br i1 %26, label %27, label %11, !llvm.loop !29

27:                                               ; preds = %11
  %28 = fadd float %18, %21
  %29 = fadd float %28, %24
  %30 = fpext float %29 to double
  %31 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %30) #19
  ret i32 0

32:                                               ; preds = %63
  %33 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %34 = add nuw nsw i32 %4, 1
  %35 = icmp eq i32 %34, 50000
  br i1 %35, label %5, label %3, !llvm.loop !483

36:                                               ; preds = %3, %63
  %37 = phi i64 [ 0, %3 ], [ %69, %63 ]
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fcmp ogt float %39, 0.000000e+00
  br i1 %40, label %52, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %37
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %37
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = fmul float %45, %47
  %49 = fsub float %48, %43
  store float %49, float* %42, align 4, !tbaa !9
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %37
  %51 = load float, float* %50, align 4, !tbaa !9
  br label %63

52:                                               ; preds = %36
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %37
  %54 = load float, float* %53, align 4, !tbaa !9
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %37
  %56 = load float, float* %55, align 4, !tbaa !9
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %37
  %58 = load float, float* %57, align 4, !tbaa !9
  %59 = fmul float %56, %58
  %60 = fsub float %59, %54
  store float %60, float* %53, align 4, !tbaa !9
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %62 = load float, float* %61, align 4, !tbaa !9
  br label %63

63:                                               ; preds = %52, %41
  %64 = phi float [ %56, %52 ], [ %45, %41 ]
  %65 = phi float [ %60, %52 ], [ %51, %41 ]
  %66 = phi float [ %62, %52 ], [ %49, %41 ]
  %67 = fmul float %65, %64
  %68 = fadd float %66, %67
  store float %68, float* %38, align 4, !tbaa !9
  %69 = add nuw nsw i64 %37, 1
  %70 = icmp eq i64 %69, 32000
  br i1 %70, label %32, label %36, !llvm.loop !484
}

; Function Attrs: nounwind ssp uwtable
define i32 @s279() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %32
  %4 = phi i32 [ 0, %0 ], [ %34, %32 ]
  br label %36

5:                                                ; preds = %32
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.241, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %25, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %24, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %21, %11 ]
  %15 = phi float [ 0.000000e+00, %5 ], [ %18, %11 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %23 = load float, float* %22, align 4, !tbaa !9
  %24 = fadd float %13, %23
  %25 = add nuw nsw i64 %12, 1
  %26 = icmp eq i64 %25, 32000
  br i1 %26, label %27, label %11, !llvm.loop !29

27:                                               ; preds = %11
  %28 = fadd float %18, %21
  %29 = fadd float %28, %24
  %30 = fpext float %29 to double
  %31 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %30) #19
  ret i32 0

32:                                               ; preds = %70
  %33 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %34 = add nuw nsw i32 %4, 1
  %35 = icmp eq i32 %34, 25000
  br i1 %35, label %5, label %3, !llvm.loop !485

36:                                               ; preds = %3, %70
  %37 = phi i64 [ 0, %3 ], [ %76, %70 ]
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fcmp ogt float %39, 0.000000e+00
  br i1 %40, label %59, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %37
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fmul float %45, %45
  %47 = fsub float %46, %43
  store float %47, float* %42, align 4, !tbaa !9
  %48 = fcmp ugt float %47, %39
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %37
  %51 = load float, float* %50, align 4, !tbaa !9
  br label %70

52:                                               ; preds = %41
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %37
  %54 = load float, float* %53, align 4, !tbaa !9
  %55 = fmul float %45, %54
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %37
  %57 = load float, float* %56, align 4, !tbaa !9
  %58 = fadd float %57, %55
  store float %58, float* %56, align 4, !tbaa !9
  br label %70

59:                                               ; preds = %36
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %37
  %61 = load float, float* %60, align 4, !tbaa !9
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %37
  %63 = load float, float* %62, align 4, !tbaa !9
  %64 = fmul float %63, %63
  %65 = fsub float %64, %61
  store float %65, float* %60, align 4, !tbaa !9
  %66 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %67 = load float, float* %66, align 4, !tbaa !9
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %37
  %69 = load float, float* %68, align 4, !tbaa !9
  br label %70

70:                                               ; preds = %49, %59, %52
  %71 = phi float [ %45, %49 ], [ %69, %59 ], [ %45, %52 ]
  %72 = phi float [ %51, %49 ], [ %65, %59 ], [ %58, %52 ]
  %73 = phi float [ %47, %49 ], [ %67, %59 ], [ %47, %52 ]
  %74 = fmul float %72, %71
  %75 = fadd float %73, %74
  store float %75, float* %38, align 4, !tbaa !9
  %76 = add nuw nsw i64 %37, 1
  %77 = icmp eq i64 %76, 32000
  br i1 %77, label %32, label %36, !llvm.loop !486
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1279() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %86, %0
  %4 = phi i32 [ 0, %0 ], [ %88, %86 ]
  br label %5

5:                                                ; preds = %56, %3
  %6 = phi i64 [ 0, %3 ], [ %57, %56 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = fcmp olt <4 x float> %9, zeroinitializer
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !9
  %14 = fcmp ogt <4 x float> %13, %9
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !9
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 16, !tbaa !9
  %21 = select <4 x i1> %10, <4 x i1> %14, <4 x i1> zeroinitializer
  %22 = extractelement <4 x i1> %21, i32 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %5
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %25 = load float, float* %24, align 16, !tbaa !9
  %26 = fmul <4 x float> %17, %20
  %27 = extractelement <4 x float> %26, i32 0
  %28 = fadd float %25, %27
  store float %28, float* %24, align 16, !tbaa !9
  br label %29

29:                                               ; preds = %23, %5
  %30 = extractelement <4 x i1> %21, i32 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %29
  %32 = or i64 %6, 1
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fmul <4 x float> %17, %20
  %36 = extractelement <4 x float> %35, i32 1
  %37 = fadd float %34, %36
  store float %37, float* %33, align 4, !tbaa !9
  br label %38

38:                                               ; preds = %31, %29
  %39 = extractelement <4 x i1> %21, i32 2
  br i1 %39, label %40, label %47

40:                                               ; preds = %38
  %41 = or i64 %6, 2
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %41
  %43 = load float, float* %42, align 8, !tbaa !9
  %44 = fmul <4 x float> %17, %20
  %45 = extractelement <4 x float> %44, i32 2
  %46 = fadd float %43, %45
  store float %46, float* %42, align 8, !tbaa !9
  br label %47

47:                                               ; preds = %40, %38
  %48 = extractelement <4 x i1> %21, i32 3
  br i1 %48, label %49, label %56

49:                                               ; preds = %47
  %50 = or i64 %6, 3
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %50
  %52 = load float, float* %51, align 4, !tbaa !9
  %53 = fmul <4 x float> %17, %20
  %54 = extractelement <4 x float> %53, i32 3
  %55 = fadd float %52, %54
  store float %55, float* %51, align 4, !tbaa !9
  br label %56

56:                                               ; preds = %49, %47
  %57 = add nuw i64 %6, 4
  %58 = icmp eq i64 %57, 32000
  br i1 %58, label %86, label %5, !llvm.loop !487

59:                                               ; preds = %86
  %60 = tail call i64 @"\01_clock"() #19
  %61 = sub i64 %60, %2
  %62 = uitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  %64 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.242, i64 0, i64 0), double %63)
  br label %65

65:                                               ; preds = %65, %59
  %66 = phi i64 [ 0, %59 ], [ %79, %65 ]
  %67 = phi float [ 0.000000e+00, %59 ], [ %78, %65 ]
  %68 = phi float [ 0.000000e+00, %59 ], [ %75, %65 ]
  %69 = phi float [ 0.000000e+00, %59 ], [ %72, %65 ]
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %71 = load float, float* %70, align 4, !tbaa !9
  %72 = fadd float %69, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %66
  %74 = load float, float* %73, align 4, !tbaa !9
  %75 = fadd float %68, %74
  %76 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %66
  %77 = load float, float* %76, align 4, !tbaa !9
  %78 = fadd float %67, %77
  %79 = add nuw nsw i64 %66, 1
  %80 = icmp eq i64 %79, 32000
  br i1 %80, label %81, label %65, !llvm.loop !29

81:                                               ; preds = %65
  %82 = fadd float %72, %75
  %83 = fadd float %82, %78
  %84 = fpext float %83 to double
  %85 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %84) #19
  ret i32 0

86:                                               ; preds = %56
  %87 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %88 = add nuw nsw i32 %4, 1
  %89 = icmp eq i32 %88, 50000
  br i1 %89, label %59, label %3, !llvm.loop !488
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2710(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = fcmp ogt float %0, 0.000000e+00
  br i1 %4, label %5, label %40

5:                                                ; preds = %1, %36
  %6 = phi i32 [ %38, %36 ], [ 0, %1 ]
  br label %7

7:                                                ; preds = %33, %5
  %8 = phi i64 [ %34, %33 ], [ 0, %5 ]
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %10 = load float, float* %9, align 4, !tbaa !9
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %12 = load float, float* %11, align 4, !tbaa !9
  %13 = fcmp ogt float %10, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fmul float %16, %16
  %18 = fadd float %10, %17
  store float %18, float* %11, align 4, !tbaa !9
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fmul float %20, %20
  %22 = fadd float %10, %21
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  store float %22, float* %23, align 4, !tbaa !9
  br label %33

24:                                               ; preds = %7
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %26 = load float, float* %25, align 4, !tbaa !9
  %27 = fmul float %12, %26
  %28 = fadd float %10, %27
  store float %28, float* %9, align 4, !tbaa !9
  %29 = fmul float %26, %26
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fadd float %29, %31
  store float %32, float* %30, align 4, !tbaa !9
  br label %33

33:                                               ; preds = %24, %14
  %34 = add nuw nsw i64 %8, 1
  %35 = icmp eq i64 %34, 32000
  br i1 %35, label %36, label %7, !llvm.loop !489

36:                                               ; preds = %33
  %37 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %38 = add nuw nsw i32 %6, 1
  %39 = icmp eq i32 %38, 25000
  br i1 %39, label %42, label %5, !llvm.loop !490

40:                                               ; preds = %1, %69
  %41 = phi i32 [ %71, %69 ], [ 0, %1 ]
  br label %73

42:                                               ; preds = %69, %36
  %43 = tail call i64 @"\01_clock"() #19
  %44 = sub i64 %43, %3
  %45 = uitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.243, i64 0, i64 0), double %46)
  br label %48

48:                                               ; preds = %48, %42
  %49 = phi i64 [ 0, %42 ], [ %62, %48 ]
  %50 = phi float [ 0.000000e+00, %42 ], [ %61, %48 ]
  %51 = phi float [ 0.000000e+00, %42 ], [ %58, %48 ]
  %52 = phi float [ 0.000000e+00, %42 ], [ %55, %48 ]
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %54 = load float, float* %53, align 4, !tbaa !9
  %55 = fadd float %52, %54
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %49
  %57 = load float, float* %56, align 4, !tbaa !9
  %58 = fadd float %51, %57
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %49
  %60 = load float, float* %59, align 4, !tbaa !9
  %61 = fadd float %50, %60
  %62 = add nuw nsw i64 %49, 1
  %63 = icmp eq i64 %62, 32000
  br i1 %63, label %64, label %48, !llvm.loop !29

64:                                               ; preds = %48
  %65 = fadd float %55, %58
  %66 = fadd float %65, %61
  %67 = fpext float %66 to double
  %68 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %67) #19
  ret i32 0

69:                                               ; preds = %91
  %70 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %71 = add nuw nsw i32 %41, 1
  %72 = icmp eq i32 %71, 25000
  br i1 %72, label %42, label %40, !llvm.loop !490

73:                                               ; preds = %40, %91
  %74 = phi i64 [ 0, %40 ], [ %96, %91 ]
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %74
  %76 = load float, float* %75, align 4, !tbaa !9
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %74
  %78 = load float, float* %77, align 4, !tbaa !9
  %79 = fcmp ogt float %76, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %73
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %74
  %82 = load float, float* %81, align 4, !tbaa !9
  %83 = fmul float %78, %82
  %84 = fadd float %76, %83
  store float %84, float* %75, align 4, !tbaa !9
  %85 = fmul float %82, %82
  br label %91

86:                                               ; preds = %73
  %87 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %74
  %88 = load float, float* %87, align 4, !tbaa !9
  %89 = fmul float %88, %88
  %90 = fadd float %76, %89
  store float %90, float* %77, align 4, !tbaa !9
  br label %91

91:                                               ; preds = %80, %86
  %92 = phi float [ %85, %80 ], [ %89, %86 ]
  %93 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %74
  %94 = load float, float* %93, align 4, !tbaa !9
  %95 = fadd float %92, %94
  store float %95, float* %93, align 4, !tbaa !9
  %96 = add nuw nsw i64 %74, 1
  %97 = icmp eq i64 %96, 32000
  br i1 %97, label %69, label %73, !llvm.loop !489
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2710p(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = fcmp ogt float %0, 0.000000e+00
  br i1 %4, label %5, label %67

5:                                                ; preds = %1, %36
  %6 = phi i32 [ %38, %36 ], [ 0, %1 ]
  br label %7

7:                                                ; preds = %5, %33
  %8 = phi i64 [ 0, %5 ], [ %34, %33 ]
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  %10 = load float, float* %9, align 4, !tbaa !9
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %12 = load float, float* %11, align 4, !tbaa !9
  %13 = fcmp ogt float %10, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %8
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fmul float %16, %16
  %18 = fadd float %10, %17
  store float %18, float* %11, align 4, !tbaa !9
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fmul float %20, %20
  %22 = fadd float %10, %21
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  store float %22, float* %23, align 4, !tbaa !9
  br label %33

24:                                               ; preds = %7
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %26 = load float, float* %25, align 4, !tbaa !9
  %27 = fmul float %12, %26
  %28 = fadd float %10, %27
  store float %28, float* %9, align 4, !tbaa !9
  %29 = fmul float %26, %26
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fadd float %29, %31
  store float %32, float* %30, align 4, !tbaa !9
  br label %33

33:                                               ; preds = %24, %14
  %34 = add nuw nsw i64 %8, 1
  %35 = icmp eq i64 %34, 32000
  br i1 %35, label %36, label %7, !llvm.loop !491

36:                                               ; preds = %33
  %37 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %38 = add nuw nsw i32 %6, 1
  %39 = icmp eq i32 %38, 25000
  br i1 %39, label %40, label %5, !llvm.loop !492

40:                                               ; preds = %94, %36
  %41 = tail call i64 @"\01_clock"() #19
  %42 = sub i64 %41, %3
  %43 = uitofp i64 %42 to double
  %44 = fdiv double %43, 1.000000e+06
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.244, i64 0, i64 0), double %44)
  br label %46

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %60, %46 ]
  %48 = phi float [ 0.000000e+00, %40 ], [ %59, %46 ]
  %49 = phi float [ 0.000000e+00, %40 ], [ %56, %46 ]
  %50 = phi float [ 0.000000e+00, %40 ], [ %53, %46 ]
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %52 = load float, float* %51, align 4, !tbaa !9
  %53 = fadd float %50, %52
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %55 = load float, float* %54, align 4, !tbaa !9
  %56 = fadd float %49, %55
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %58 = load float, float* %57, align 4, !tbaa !9
  %59 = fadd float %48, %58
  %60 = add nuw nsw i64 %47, 1
  %61 = icmp eq i64 %60, 32000
  br i1 %61, label %62, label %46, !llvm.loop !29

62:                                               ; preds = %46
  %63 = fadd float %53, %56
  %64 = fadd float %63, %59
  %65 = fpext float %64 to double
  %66 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %65) #19
  ret i32 0

67:                                               ; preds = %1, %94
  %68 = phi i32 [ %96, %94 ], [ 0, %1 ]
  br label %69

69:                                               ; preds = %67, %87
  %70 = phi i64 [ 0, %67 ], [ %92, %87 ]
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !9
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %70
  %74 = load float, float* %73, align 4, !tbaa !9
  %75 = fcmp ogt float %72, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %70
  %78 = load float, float* %77, align 4, !tbaa !9
  %79 = fmul float %74, %78
  %80 = fadd float %72, %79
  store float %80, float* %71, align 4, !tbaa !9
  %81 = fmul float %78, %78
  br label %87

82:                                               ; preds = %69
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %70
  %84 = load float, float* %83, align 4, !tbaa !9
  %85 = fmul float %84, %84
  %86 = fadd float %72, %85
  store float %86, float* %73, align 4, !tbaa !9
  br label %87

87:                                               ; preds = %76, %82
  %88 = phi float [ %81, %76 ], [ %85, %82 ]
  %89 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %70
  %90 = load float, float* %89, align 4, !tbaa !9
  %91 = fadd float %88, %90
  store float %91, float* %89, align 4, !tbaa !9
  %92 = add nuw nsw i64 %70, 1
  %93 = icmp eq i64 %92, 32000
  br i1 %93, label %94, label %69, !llvm.loop !493

94:                                               ; preds = %87
  %95 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %96 = add nuw nsw i32 %68, 1
  %97 = icmp eq i32 %96, 25000
  br i1 %97, label %40, label %67, !llvm.loop !492
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2711() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %75, %0
  %4 = phi i32 [ 0, %0 ], [ %77, %75 ]
  br label %5

5:                                                ; preds = %55, %3
  %6 = phi i64 [ 0, %3 ], [ %56, %55 ]
  %7 = or i64 %6, 2
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 2
  %12 = bitcast float* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 8, !tbaa !9
  %14 = fcmp une <2 x float> %10, zeroinitializer
  %15 = fcmp une <2 x float> %13, zeroinitializer
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %17 = bitcast float* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 16, !tbaa !9
  %19 = getelementptr inbounds float, float* %16, i64 2
  %20 = bitcast float* %19 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 8, !tbaa !9
  %22 = extractelement <2 x i1> %14, i32 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %5
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %25 = load float, float* %24, align 16, !tbaa !9
  %26 = fmul <2 x float> %10, %18
  %27 = extractelement <2 x float> %26, i32 0
  %28 = fadd float %25, %27
  store float %28, float* %24, align 16, !tbaa !9
  br label %29

29:                                               ; preds = %23, %5
  %30 = extractelement <2 x i1> %14, i32 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %29
  %32 = or i64 %6, 1
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fmul <2 x float> %10, %18
  %36 = extractelement <2 x float> %35, i32 1
  %37 = fadd float %34, %36
  store float %37, float* %33, align 4, !tbaa !9
  br label %38

38:                                               ; preds = %31, %29
  %39 = extractelement <2 x i1> %15, i32 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %38
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %42 = load float, float* %41, align 8, !tbaa !9
  %43 = fmul <2 x float> %13, %21
  %44 = extractelement <2 x float> %43, i32 0
  %45 = fadd float %42, %44
  store float %45, float* %41, align 8, !tbaa !9
  br label %46

46:                                               ; preds = %40, %38
  %47 = extractelement <2 x i1> %15, i32 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %46
  %49 = or i64 %6, 3
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !9
  %52 = fmul <2 x float> %13, %21
  %53 = extractelement <2 x float> %52, i32 1
  %54 = fadd float %51, %53
  store float %54, float* %50, align 4, !tbaa !9
  br label %55

55:                                               ; preds = %48, %46
  %56 = add nuw i64 %6, 4
  %57 = icmp eq i64 %56, 32000
  br i1 %57, label %75, label %5, !llvm.loop !494

58:                                               ; preds = %75
  %59 = tail call i64 @"\01_clock"() #19
  %60 = sub i64 %59, %2
  %61 = uitofp i64 %60 to double
  %62 = fdiv double %61, 1.000000e+06
  %63 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.245, i64 0, i64 0), double %62)
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi i64 [ 0, %58 ], [ %70, %64 ]
  %66 = phi float [ 0.000000e+00, %58 ], [ %69, %64 ]
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %65
  %68 = load float, float* %67, align 4, !tbaa !9
  %69 = fadd float %66, %68
  %70 = add nuw nsw i64 %65, 1
  %71 = icmp eq i64 %70, 32000
  br i1 %71, label %72, label %64, !llvm.loop !29

72:                                               ; preds = %64
  %73 = fpext float %69 to double
  %74 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %73) #19
  ret i32 0

75:                                               ; preds = %55
  %76 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %77 = add nuw nsw i32 %4, 1
  %78 = icmp eq i32 %77, 200000
  br i1 %78, label %58, label %3, !llvm.loop !495
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2712() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %76, %0
  %4 = phi i32 [ 0, %0 ], [ %78, %76 ]
  br label %5

5:                                                ; preds = %56, %3
  %6 = phi i64 [ 0, %3 ], [ %57, %56 ]
  %7 = or i64 %6, 2
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 2
  %12 = bitcast float* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 8, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 16, !tbaa !9
  %17 = getelementptr inbounds float, float* %14, i64 2
  %18 = bitcast float* %17 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 8, !tbaa !9
  %20 = fcmp ogt <2 x float> %10, %16
  %21 = fcmp ogt <2 x float> %13, %19
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %23 = bitcast float* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 16, !tbaa !9
  %25 = getelementptr inbounds float, float* %22, i64 2
  %26 = bitcast float* %25 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 8, !tbaa !9
  %28 = extractelement <2 x i1> %20, i32 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %5
  %30 = fmul <2 x float> %16, %24
  %31 = fadd <2 x float> %10, %30
  %32 = extractelement <2 x float> %31, i32 0
  store float %32, float* %8, align 16, !tbaa !9
  br label %33

33:                                               ; preds = %29, %5
  %34 = extractelement <2 x i1> %20, i32 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %33
  %36 = or i64 %6, 1
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = fmul <2 x float> %16, %24
  %39 = fadd <2 x float> %10, %38
  %40 = extractelement <2 x float> %39, i32 1
  store float %40, float* %37, align 4, !tbaa !9
  br label %41

41:                                               ; preds = %35, %33
  %42 = extractelement <2 x i1> %21, i32 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %41
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %45 = fmul <2 x float> %19, %27
  %46 = fadd <2 x float> %13, %45
  %47 = extractelement <2 x float> %46, i32 0
  store float %47, float* %44, align 8, !tbaa !9
  br label %48

48:                                               ; preds = %43, %41
  %49 = extractelement <2 x i1> %21, i32 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %48
  %51 = or i64 %6, 3
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %51
  %53 = fmul <2 x float> %19, %27
  %54 = fadd <2 x float> %13, %53
  %55 = extractelement <2 x float> %54, i32 1
  store float %55, float* %52, align 4, !tbaa !9
  br label %56

56:                                               ; preds = %50, %48
  %57 = add nuw i64 %6, 4
  %58 = icmp eq i64 %57, 32000
  br i1 %58, label %76, label %5, !llvm.loop !496

59:                                               ; preds = %76
  %60 = tail call i64 @"\01_clock"() #19
  %61 = sub i64 %60, %2
  %62 = uitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  %64 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.246, i64 0, i64 0), double %63)
  br label %65

65:                                               ; preds = %65, %59
  %66 = phi i64 [ 0, %59 ], [ %71, %65 ]
  %67 = phi float [ 0.000000e+00, %59 ], [ %70, %65 ]
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %69 = load float, float* %68, align 4, !tbaa !9
  %70 = fadd float %67, %69
  %71 = add nuw nsw i64 %66, 1
  %72 = icmp eq i64 %71, 32000
  br i1 %72, label %73, label %65, !llvm.loop !29

73:                                               ; preds = %65
  %74 = fpext float %70 to double
  %75 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %74) #19
  ret i32 0

76:                                               ; preds = %56
  %77 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %78 = add nuw nsw i32 %4, 1
  %79 = icmp eq i32 %78, 200000
  br i1 %79, label %59, label %3, !llvm.loop !497
}

; Function Attrs: nounwind ssp uwtable
define i32 @s281() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %27
  %4 = phi i32 [ 0, %0 ], [ %29, %27 ]
  br label %31

5:                                                ; preds = %27
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.247, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %21, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %20, %11 ]
  %14 = phi float [ 0.000000e+00, %5 ], [ %17, %11 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %11, !llvm.loop !29

23:                                               ; preds = %11
  %24 = fadd float %17, %20
  %25 = fpext float %24 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %31
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %4, 1
  %30 = icmp eq i32 %29, 50000
  br i1 %30, label %5, label %3, !llvm.loop !498

31:                                               ; preds = %3, %31
  %32 = phi i64 [ 0, %3 ], [ %44, %31 ]
  %33 = sub nuw nsw i64 31999, %32
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %37 = load float, float* %36, align 4, !tbaa !9
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fmul float %37, %39
  %41 = fadd float %35, %40
  %42 = fadd float %41, -1.000000e+00
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %42, float* %43, align 4, !tbaa !9
  store float %41, float* %36, align 4, !tbaa !9
  %44 = add nuw nsw i64 %32, 1
  %45 = icmp eq i64 %44, 32000
  br i1 %45, label %27, label %31, !llvm.loop !499
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1281() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %53, %0
  %4 = phi i32 [ 0, %0 ], [ %55, %53 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %29, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fmul <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = fmul <4 x float> %16, %19
  %21 = fadd <4 x float> %13, %20
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !9
  %25 = fadd <4 x float> %24, %21
  %26 = fadd <4 x float> %25, <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %27 = bitcast float* %14 to <4 x float>*
  store <4 x float> %26, <4 x float>* %27, align 16, !tbaa !9
  %28 = bitcast float* %7 to <4 x float>*
  store <4 x float> %25, <4 x float>* %28, align 16, !tbaa !9
  %29 = add nuw i64 %6, 4
  %30 = icmp eq i64 %29, 32000
  br i1 %30, label %53, label %5, !llvm.loop !500

31:                                               ; preds = %53
  %32 = tail call i64 @"\01_clock"() #19
  %33 = sub i64 %32, %2
  %34 = uitofp i64 %33 to double
  %35 = fdiv double %34, 1.000000e+06
  %36 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.248, i64 0, i64 0), double %35)
  br label %37

37:                                               ; preds = %37, %31
  %38 = phi i64 [ 0, %31 ], [ %47, %37 ]
  %39 = phi float [ 0.000000e+00, %31 ], [ %46, %37 ]
  %40 = phi float [ 0.000000e+00, %31 ], [ %43, %37 ]
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fadd float %40, %42
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %38
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fadd float %39, %45
  %47 = add nuw nsw i64 %38, 1
  %48 = icmp eq i64 %47, 32000
  br i1 %48, label %49, label %37, !llvm.loop !29

49:                                               ; preds = %37
  %50 = fadd float %43, %46
  %51 = fpext float %50 to double
  %52 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %51) #19
  ret i32 0

53:                                               ; preds = %5
  %54 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %55 = add nuw nsw i32 %4, 1
  %56 = icmp eq i32 %55, 200000
  br i1 %56, label %31, label %3, !llvm.loop !501
}

; Function Attrs: nounwind ssp uwtable
define i32 @s291() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.249, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %26
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 100000
  br i1 %25, label %5, label %3, !llvm.loop !502

26:                                               ; preds = %3, %26
  %27 = phi i64 [ 0, %3 ], [ %37, %26 ]
  %28 = phi i64 [ 31999, %3 ], [ %27, %26 ]
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = and i64 %28, 4294967295
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = fadd float %30, %33
  %35 = fmul float %34, 5.000000e-01
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  store float %35, float* %36, align 4, !tbaa !9
  %37 = add nuw nsw i64 %27, 1
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %22, label %26, !llvm.loop !503
}

; Function Attrs: nounwind ssp uwtable
define i32 @s292() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %23
  %4 = phi i32 [ 0, %0 ], [ %25, %23 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8, !tbaa !9
  br label %27

6:                                                ; preds = %23
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.250, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %17, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %20, label %12, !llvm.loop !29

20:                                               ; preds = %12
  %21 = fpext float %17 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #19
  ret i32 0

23:                                               ; preds = %27
  %24 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %25 = add nuw nsw i32 %4, 1
  %26 = icmp eq i32 %25, 50000
  br i1 %26, label %6, label %3, !llvm.loop !504

27:                                               ; preds = %3, %27
  %28 = phi float [ %5, %3 ], [ %35, %27 ]
  %29 = phi i64 [ 0, %3 ], [ %40, %27 ]
  %30 = phi i64 [ 31999, %3 ], [ %29, %27 ]
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %32 = load float, float* %31, align 4, !tbaa !9
  %33 = and i64 %30, 4294967295
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fadd float %32, %35
  %37 = fadd float %36, %28
  %38 = fmul float %37, 0x3FD54FDF40000000
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  store float %38, float* %39, align 4, !tbaa !9
  %40 = add nuw nsw i64 %29, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %23, label %27, !llvm.loop !505
}

; Function Attrs: nounwind ssp uwtable
define i32 @s293() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.251, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %26
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 200000
  br i1 %25, label %5, label %3, !llvm.loop !506

26:                                               ; preds = %3, %26
  %27 = phi i64 [ 0, %3 ], [ %30, %26 ]
  %28 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  store float %28, float* %29, align 4, !tbaa !9
  %30 = add nuw nsw i64 %27, 1
  %31 = icmp eq i64 %30, 32000
  br i1 %31, label %22, label %26, !llvm.loop !507
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2101() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %49, %0
  %4 = phi i32 [ 0, %0 ], [ %51, %49 ]
  br i1 icmp ult (i64 add (i64 ptrtoint ([256 x [256 x float]]* @aa to i64), i64 262140), i64 ptrtoint ([256 x [256 x float]]* @aa to i64)), label %53, label %5

5:                                                ; preds = %3, %5
  %6 = phi i64 [ %24, %5 ], [ 0, %3 ]
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %6, i64 %6
  %9 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %7, i64 %7
  %10 = load float, float* %8, align 8, !tbaa !9
  %11 = load float, float* %9, align 4, !tbaa !9
  %12 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %6, i64 %6
  %13 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %7, i64 %7
  %14 = load float, float* %12, align 8, !tbaa !9
  %15 = load float, float* %13, align 4, !tbaa !9
  %16 = fmul float %10, %14
  %17 = fmul float %11, %15
  %18 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %6, i64 %6
  %19 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7, i64 %7
  %20 = load float, float* %18, align 8, !tbaa !9
  %21 = load float, float* %19, align 4, !tbaa !9
  %22 = fadd float %20, %16
  %23 = fadd float %21, %17
  store float %22, float* %18, align 8, !tbaa !9
  store float %23, float* %19, align 4, !tbaa !9
  %24 = add nuw i64 %6, 2
  %25 = icmp eq i64 %24, 256
  br i1 %25, label %49, label %5, !llvm.loop !508

26:                                               ; preds = %49
  %27 = tail call i64 @"\01_clock"() #19
  %28 = sub i64 %27, %2
  %29 = uitofp i64 %28 to double
  %30 = fdiv double %29, 1.000000e+06
  %31 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.252, i64 0, i64 0), double %30)
  br label %32

32:                                               ; preds = %26, %35
  %33 = phi i64 [ %36, %35 ], [ 0, %26 ]
  %34 = phi float [ %46, %35 ], [ 0.000000e+00, %26 ]
  br label %41

35:                                               ; preds = %41
  %36 = add nuw nsw i64 %33, 1
  %37 = icmp eq i64 %36, 256
  br i1 %37, label %38, label %32, !llvm.loop !30

38:                                               ; preds = %35
  %39 = fpext float %46 to double
  %40 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %39) #19
  ret i32 0

41:                                               ; preds = %41, %32
  %42 = phi i64 [ 0, %32 ], [ %47, %41 ]
  %43 = phi float [ %34, %32 ], [ %46, %41 ]
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %33, i64 %42
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fadd float %43, %45
  %47 = add nuw nsw i64 %42, 1
  %48 = icmp eq i64 %47, 256
  br i1 %48, label %35, label %41, !llvm.loop !31

49:                                               ; preds = %5, %53
  %50 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %51 = add nuw nsw i32 %4, 1
  %52 = icmp eq i32 %51, 500000
  br i1 %52, label %26, label %3, !llvm.loop !509

53:                                               ; preds = %3, %53
  %54 = phi i64 [ %63, %53 ], [ 0, %3 ]
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %54, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !9
  %57 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %54, i64 %54
  %58 = load float, float* %57, align 4, !tbaa !9
  %59 = fmul float %56, %58
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %54, i64 %54
  %61 = load float, float* %60, align 4, !tbaa !9
  %62 = fadd float %61, %59
  store float %62, float* %60, align 4, !tbaa !9
  %63 = add nuw nsw i64 %54, 1
  %64 = icmp eq i64 %63, 256
  br i1 %64, label %49, label %53, !llvm.loop !510
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2102() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %37
  %4 = phi i32 [ 0, %0 ], [ %39, %37 ]
  br label %28

5:                                                ; preds = %37
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.253, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %41, %3
  %29 = phi i64 [ 0, %3 ], [ %43, %41 ]
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %35, %30 ]
  %32 = or i64 %31, 1
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %31, i64 %29
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %32, i64 %29
  store float 0.000000e+00, float* %33, align 4, !tbaa !9
  store float 0.000000e+00, float* %34, align 4, !tbaa !9
  %35 = add nuw i64 %31, 2
  %36 = icmp eq i64 %35, 256
  br i1 %36, label %41, label %30, !llvm.loop !511

37:                                               ; preds = %41
  %38 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %39 = add nuw nsw i32 %4, 1
  %40 = icmp eq i32 %39, 19500
  br i1 %40, label %5, label %3, !llvm.loop !512

41:                                               ; preds = %30
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %29
  store float 1.000000e+00, float* %42, align 4, !tbaa !9
  %43 = add nuw nsw i64 %29, 1
  %44 = icmp eq i64 %43, 256
  br i1 %44, label %37, label %28, !llvm.loop !513
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2102p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %35
  %4 = phi i32 [ 0, %0 ], [ %37, %35 ]
  br label %28

5:                                                ; preds = %35
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.254, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %5, %14
  %12 = phi i64 [ %15, %14 ], [ 0, %5 ]
  %13 = phi float [ %25, %14 ], [ 0.000000e+00, %5 ]
  br label %20

14:                                               ; preds = %20
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 256
  br i1 %16, label %17, label %11, !llvm.loop !30

17:                                               ; preds = %14
  %18 = fpext float %25 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %20, %11
  %21 = phi i64 [ 0, %11 ], [ %26, %20 ]
  %22 = phi float [ %13, %11 ], [ %25, %20 ]
  %23 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fadd float %22, %24
  %26 = add nuw nsw i64 %21, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %14, label %20, !llvm.loop !31

28:                                               ; preds = %3, %28
  %29 = phi i64 [ 0, %3 ], [ %33, %28 ]
  %30 = getelementptr [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 0
  %31 = bitcast float* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1024) %31, i8 0, i64 1024, i1 false)
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %29, i64 %29
  store float 1.000000e+00, float* %32, align 4, !tbaa !9
  %33 = add nuw nsw i64 %29, 1
  %34 = icmp eq i64 %33, 256
  br i1 %34, label %35, label %28, !llvm.loop !514

35:                                               ; preds = %28
  %36 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %37 = add nuw nsw i32 %4, 1
  %38 = icmp eq i32 %37, 19500
  br i1 %38, label %5, label %3, !llvm.loop !515
}

; Function Attrs: nounwind ssp uwtable
define i32 @s2111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %16
  %4 = phi i32 [ 0, %0 ], [ %18, %16 ]
  br label %11

5:                                                ; preds = %16
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.255, i64 0, i64 0), double %9)
  br label %32

11:                                               ; preds = %3, %20
  %12 = phi i64 [ 1, %3 ], [ %21, %20 ]
  %13 = add nsw i64 %12, -1
  %14 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 0
  %15 = load float, float* %14, align 16, !tbaa !9
  br label %23

16:                                               ; preds = %20
  %17 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %18 = add nuw nsw i32 %4, 1
  %19 = icmp eq i32 %18, 19500
  br i1 %19, label %5, label %3, !llvm.loop !516

20:                                               ; preds = %23
  %21 = add nuw nsw i64 %12, 1
  %22 = icmp eq i64 %21, 256
  br i1 %22, label %16, label %11, !llvm.loop !517

23:                                               ; preds = %11, %23
  %24 = phi float [ %15, %11 ], [ %28, %23 ]
  %25 = phi i64 [ 1, %11 ], [ %30, %23 ]
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %13, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !9
  %28 = fadd float %24, %27
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %12, i64 %25
  store float %28, float* %29, align 4, !tbaa !9
  %30 = add nuw nsw i64 %25, 1
  %31 = icmp eq i64 %30, 256
  br i1 %31, label %20, label %23, !llvm.loop !518

32:                                               ; preds = %5, %40
  %33 = phi i64 [ 0, %5 ], [ %41, %40 ]
  %34 = phi float [ 0.000000e+00, %5 ], [ %48, %40 ]
  br label %43

35:                                               ; preds = %40
  %36 = fcmp oeq float %48, 0.000000e+00
  %37 = select i1 %36, float 3.000000e+00, float %48
  store float %37, float* @temp, align 4, !tbaa !9
  %38 = fpext float %37 to double
  %39 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %38) #19
  ret i32 0

40:                                               ; preds = %43
  %41 = add nuw nsw i64 %33, 1
  %42 = icmp eq i64 %41, 256
  br i1 %42, label %35, label %32, !llvm.loop !519

43:                                               ; preds = %32, %43
  %44 = phi i64 [ 0, %32 ], [ %49, %43 ]
  %45 = phi float [ %34, %32 ], [ %48, %43 ]
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %33, i64 %44
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = fadd float %47, %45
  %49 = add nuw nsw i64 %44, 1
  %50 = icmp eq i64 %49, 256
  br i1 %50, label %40, label %43, !llvm.loop !520
}

; Function Attrs: nounwind ssp uwtable
define i32 @s311() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.256, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %26
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %31) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 500000
  br i1 %25, label %5, label %3, !llvm.loop !521

26:                                               ; preds = %3, %26
  %27 = phi i64 [ 0, %3 ], [ %32, %26 ]
  %28 = phi float [ 0.000000e+00, %3 ], [ %31, %26 ]
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = fadd float %28, %30
  %32 = add nuw nsw i64 %27, 1
  %33 = icmp eq i64 %32, 32000
  br i1 %33, label %22, label %26, !llvm.loop !522
}

; Function Attrs: nofree norecurse nosync nounwind readonly ssp uwtable
define float @test(float* nocapture readonly %0) local_unnamed_addr #2 {
  %2 = load float, float* %0, align 4, !tbaa !9
  %3 = fadd float %2, 0.000000e+00
  %4 = getelementptr inbounds float, float* %0, i64 1
  %5 = load float, float* %4, align 4, !tbaa !9
  %6 = fadd float %3, %5
  %7 = getelementptr inbounds float, float* %0, i64 2
  %8 = load float, float* %7, align 4, !tbaa !9
  %9 = fadd float %6, %8
  %10 = getelementptr inbounds float, float* %0, i64 3
  %11 = load float, float* %10, align 4, !tbaa !9
  %12 = fadd float %9, %11
  ret float %12
}

; Function Attrs: nounwind ssp uwtable
define i32 @s31111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %20

3:                                                ; preds = %20
  %4 = tail call i64 @"\01_clock"() #19
  %5 = sub i64 %4, %2
  %6 = uitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.257, i64 0, i64 0), double %7)
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i64 [ 0, %3 ], [ %15, %9 ]
  %11 = phi float [ 0.000000e+00, %3 ], [ %14, %9 ]
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10
  %13 = load float, float* %12, align 4, !tbaa !9
  %14 = fadd float %11, %13
  %15 = add nuw nsw i64 %10, 1
  %16 = icmp eq i64 %15, 32000
  br i1 %16, label %17, label %9, !llvm.loop !29

17:                                               ; preds = %9
  %18 = fpext float %14 to double
  %19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %18) #19
  ret i32 0

20:                                               ; preds = %0, %20
  %21 = phi i32 [ 0, %0 ], [ %95, %20 ]
  %22 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  %23 = fadd float %22, 0.000000e+00
  %24 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 1), align 4, !tbaa !9
  %25 = fadd float %23, %24
  %26 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 2), align 8, !tbaa !9
  %27 = fadd float %25, %26
  %28 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 3), align 4, !tbaa !9
  %29 = fadd float %27, %28
  %30 = fadd float %29, 0.000000e+00
  %31 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 4), align 16, !tbaa !9
  %32 = fadd float %31, 0.000000e+00
  %33 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 5), align 4, !tbaa !9
  %34 = fadd float %32, %33
  %35 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 6), align 8, !tbaa !9
  %36 = fadd float %34, %35
  %37 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 7), align 4, !tbaa !9
  %38 = fadd float %36, %37
  %39 = fadd float %30, %38
  %40 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 8), align 16, !tbaa !9
  %41 = fadd float %40, 0.000000e+00
  %42 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 9), align 4, !tbaa !9
  %43 = fadd float %41, %42
  %44 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 10), align 8, !tbaa !9
  %45 = fadd float %43, %44
  %46 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 11), align 4, !tbaa !9
  %47 = fadd float %45, %46
  %48 = fadd float %39, %47
  %49 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 12), align 16, !tbaa !9
  %50 = fadd float %49, 0.000000e+00
  %51 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 13), align 4, !tbaa !9
  %52 = fadd float %50, %51
  %53 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 14), align 8, !tbaa !9
  %54 = fadd float %52, %53
  %55 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 15), align 4, !tbaa !9
  %56 = fadd float %54, %55
  %57 = fadd float %48, %56
  %58 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16), align 16, !tbaa !9
  %59 = fadd float %58, 0.000000e+00
  %60 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 17), align 4, !tbaa !9
  %61 = fadd float %59, %60
  %62 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 18), align 8, !tbaa !9
  %63 = fadd float %61, %62
  %64 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 19), align 4, !tbaa !9
  %65 = fadd float %63, %64
  %66 = fadd float %57, %65
  %67 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 20), align 16, !tbaa !9
  %68 = fadd float %67, 0.000000e+00
  %69 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 21), align 4, !tbaa !9
  %70 = fadd float %68, %69
  %71 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 22), align 8, !tbaa !9
  %72 = fadd float %70, %71
  %73 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 23), align 4, !tbaa !9
  %74 = fadd float %72, %73
  %75 = fadd float %66, %74
  %76 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 24), align 16, !tbaa !9
  %77 = fadd float %76, 0.000000e+00
  %78 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 25), align 4, !tbaa !9
  %79 = fadd float %77, %78
  %80 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 26), align 8, !tbaa !9
  %81 = fadd float %79, %80
  %82 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 27), align 4, !tbaa !9
  %83 = fadd float %81, %82
  %84 = fadd float %75, %83
  %85 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 28), align 16, !tbaa !9
  %86 = fadd float %85, 0.000000e+00
  %87 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 29), align 4, !tbaa !9
  %88 = fadd float %86, %87
  %89 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 30), align 8, !tbaa !9
  %90 = fadd float %88, %89
  %91 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31), align 4, !tbaa !9
  %92 = fadd float %90, %91
  %93 = fadd float %84, %92
  %94 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %93) #19
  %95 = add nuw nsw i32 %21, 1
  %96 = icmp eq i32 %95, 100000000
  br i1 %96, label %3, label %20, !llvm.loop !523
}

; Function Attrs: nounwind ssp uwtable
define i32 @s312() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %13
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.258, i64 0, i64 0), double %9)
  store float %22, float* @temp, align 4, !tbaa !9
  %11 = fpext float %22 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #19
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %22) #19
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 500000
  br i1 %16, label %5, label %3, !llvm.loop !524

17:                                               ; preds = %3, %17
  %18 = phi i64 [ 0, %3 ], [ %23, %17 ]
  %19 = phi float [ 1.000000e+00, %3 ], [ %22, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !9
  %22 = fmul float %19, %21
  %23 = add nuw nsw i64 %18, 1
  %24 = icmp eq i64 %23, 32000
  br i1 %24, label %13, label %17, !llvm.loop !525
}

; Function Attrs: nounwind ssp uwtable
define i32 @s313() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %13
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i64 0, i64 0), double %9)
  store float %25, float* @temp, align 4, !tbaa !9
  %11 = fpext float %25 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #19
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %25) #19
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 250000
  br i1 %16, label %5, label %3, !llvm.loop !526

17:                                               ; preds = %3, %17
  %18 = phi i64 [ 0, %3 ], [ %26, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %25, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !9
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %23 = load float, float* %22, align 4, !tbaa !9
  %24 = fmul float %21, %23
  %25 = fadd float %19, %24
  %26 = add nuw nsw i64 %18, 1
  %27 = icmp eq i64 %26, 32000
  br i1 %27, label %13, label %17, !llvm.loop !527
}

; Function Attrs: nounwind ssp uwtable
define i32 @s314() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %11

3:                                                ; preds = %14
  %4 = tail call i64 @"\01_clock"() #19
  %5 = sub i64 %4, %2
  %6 = uitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.260, i64 0, i64 0), double %7)
  store float %24, float* @temp, align 4, !tbaa !9
  %9 = fpext float %24 to double
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %9) #19
  ret i32 0

11:                                               ; preds = %0, %14
  %12 = phi i32 [ 0, %0 ], [ %16, %14 ]
  %13 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %18

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %24) #19
  %16 = add nuw nsw i32 %12, 1
  %17 = icmp eq i32 %16, 250000
  br i1 %17, label %3, label %11, !llvm.loop !528

18:                                               ; preds = %11, %18
  %19 = phi i64 [ 1, %11 ], [ %25, %18 ]
  %20 = phi float [ %13, %11 ], [ %24, %18 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 4, !tbaa !9
  %23 = fcmp ogt float %22, %20
  %24 = select i1 %23, float %22, float %20
  %25 = add nuw nsw i64 %19, 1
  %26 = icmp eq i64 %25, 32000
  br i1 %26, label %14, label %18, !llvm.loop !529
}

; Function Attrs: nounwind ssp uwtable
define i32 @s315() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0))
  br label %2

2:                                                ; preds = %2, %0
  %3 = phi i64 [ 0, %0 ], [ %16, %2 ]
  %4 = phi <2 x i32> [ <i32 0, i32 1>, %0 ], [ %17, %2 ]
  %5 = mul <2 x i32> %4, <i32 7, i32 7>
  %6 = mul <2 x i32> %4, <i32 7, i32 7>
  %7 = add <2 x i32> %6, <i32 14, i32 14>
  %8 = urem <2 x i32> %5, <i32 32000, i32 32000>
  %9 = urem <2 x i32> %7, <i32 32000, i32 32000>
  %10 = sitofp <2 x i32> %8 to <2 x float>
  %11 = sitofp <2 x i32> %9 to <2 x float>
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %3
  %13 = bitcast float* %12 to <2 x float>*
  store <2 x float> %10, <2 x float>* %13, align 16, !tbaa !9
  %14 = getelementptr inbounds float, float* %12, i64 2
  %15 = bitcast float* %14 to <2 x float>*
  store <2 x float> %11, <2 x float>* %15, align 8, !tbaa !9
  %16 = add nuw i64 %3, 4
  %17 = add <2 x i32> %4, <i32 4, i32 4>
  %18 = icmp eq i64 %16, 32000
  br i1 %18, label %19, label %2, !llvm.loop !530

19:                                               ; preds = %2
  %20 = tail call i64 @"\01_clock"() #19
  br label %30

21:                                               ; preds = %33
  %22 = tail call i64 @"\01_clock"() #19
  %23 = sub i64 %22, %20
  %24 = uitofp i64 %23 to double
  %25 = fdiv double %24, 1.000000e+06
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.261, i64 0, i64 0), double %25)
  %27 = fadd float %35, 1.000000e+00
  store float %27, float* @temp, align 4, !tbaa !9
  %28 = fpext float %27 to double
  %29 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %28) #19
  ret i32 0

30:                                               ; preds = %19, %33
  %31 = phi i32 [ 0, %19 ], [ %37, %33 ]
  %32 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %39

33:                                               ; preds = %39
  %34 = sitofp i32 %48 to float
  %35 = fadd float %46, %34
  %36 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %35) #19
  %37 = add nuw nsw i32 %31, 1
  %38 = icmp eq i32 %37, 50000
  br i1 %38, label %21, label %30, !llvm.loop !531

39:                                               ; preds = %30, %39
  %40 = phi i64 [ 1, %30 ], [ %49, %39 ]
  %41 = phi i32 [ 0, %30 ], [ %48, %39 ]
  %42 = phi float [ %32, %30 ], [ %46, %39 ]
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = fcmp ogt float %44, %42
  %46 = select i1 %45, float %44, float %42
  %47 = trunc i64 %40 to i32
  %48 = select i1 %45, i32 %47, i32 %41
  %49 = add nuw nsw i64 %40, 1
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %33, label %39, !llvm.loop !532
}

; Function Attrs: nounwind ssp uwtable
define i32 @s316() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %11

3:                                                ; preds = %14
  %4 = tail call i64 @"\01_clock"() #19
  %5 = sub i64 %4, %2
  %6 = uitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.262, i64 0, i64 0), double %7)
  store float %24, float* @temp, align 4, !tbaa !9
  %9 = fpext float %24 to double
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %9) #19
  ret i32 0

11:                                               ; preds = %0, %14
  %12 = phi i32 [ 0, %0 ], [ %16, %14 ]
  %13 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %18

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %24) #19
  %16 = add nuw nsw i32 %12, 1
  %17 = icmp eq i32 %16, 250000
  br i1 %17, label %3, label %11, !llvm.loop !533

18:                                               ; preds = %11, %18
  %19 = phi i64 [ 1, %11 ], [ %25, %18 ]
  %20 = phi float [ %13, %11 ], [ %24, %18 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 4, !tbaa !9
  %23 = fcmp olt float %22, %20
  %24 = select i1 %23, float %22, float %20
  %25 = add nuw nsw i64 %19, 1
  %26 = icmp eq i64 %25, 32000
  br i1 %26, label %14, label %18, !llvm.loop !534
}

; Function Attrs: nounwind ssp uwtable
define i32 @s317() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %13
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.263, i64 0, i64 0), double %9)
  store float %20, float* @temp, align 4, !tbaa !9
  %11 = fpext float %20 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #19
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %20) #19
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 250000
  br i1 %16, label %5, label %3, !llvm.loop !535

17:                                               ; preds = %3, %17
  %18 = phi i32 [ 0, %3 ], [ %21, %17 ]
  %19 = phi float [ 1.000000e+00, %3 ], [ %20, %17 ]
  %20 = fmul float %19, 0x3FEFAE1480000000
  %21 = add nuw nsw i32 %18, 1
  %22 = icmp eq i32 %21, 16000
  br i1 %22, label %13, label %17, !llvm.loop !536
}

; Function Attrs: nounwind ssp uwtable
define i32 @s318(i32 %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = sext i32 %0 to i64
  br label %14

5:                                                ; preds = %18
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %3
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.264, i64 0, i64 0), double %9)
  %11 = fadd float %20, 1.000000e+00
  store float %11, float* @temp, align 4, !tbaa !9
  %12 = fpext float %11 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #19
  ret i32 0

14:                                               ; preds = %1, %18
  %15 = phi i32 [ 0, %1 ], [ %22, %18 ]
  %16 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  %17 = tail call float @llvm.fabs.f32(float %16)
  br label %24

18:                                               ; preds = %24
  %19 = sitofp i32 %33 to float
  %20 = fadd float %34, %19
  %21 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %20) #19
  %22 = add nuw nsw i32 %15, 1
  %23 = icmp eq i32 %22, 25000
  br i1 %23, label %5, label %14, !llvm.loop !537

24:                                               ; preds = %14, %24
  %25 = phi i64 [ %4, %14 ], [ %35, %24 ]
  %26 = phi i32 [ 1, %14 ], [ %36, %24 ]
  %27 = phi float [ %17, %14 ], [ %34, %24 ]
  %28 = phi i32 [ 0, %14 ], [ %33, %24 ]
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = tail call float @llvm.fabs.f32(float %30)
  %32 = fcmp ugt float %31, %27
  %33 = select i1 %32, i32 %26, i32 %28
  %34 = select i1 %32, float %31, float %27
  %35 = add i64 %25, %4
  %36 = add nuw nsw i32 %26, 1
  %37 = icmp eq i32 %36, 32000
  br i1 %37, label %18, label %24, !llvm.loop !538
}

; Function Attrs: nounwind ssp uwtable
define i32 @s319() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %13
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.265, i64 0, i64 0), double %9)
  store float %31, float* @temp, align 4, !tbaa !9
  %11 = fpext float %31 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #19
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %31) #19
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 100000
  br i1 %16, label %5, label %3, !llvm.loop !539

17:                                               ; preds = %3, %17
  %18 = phi i64 [ 0, %3 ], [ %32, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %31, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !9
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %23 = load float, float* %22, align 4, !tbaa !9
  %24 = fadd float %21, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  store float %24, float* %25, align 4, !tbaa !9
  %26 = fadd float %19, %24
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %18
  %28 = load float, float* %27, align 4, !tbaa !9
  %29 = fadd float %21, %28
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  store float %29, float* %30, align 4, !tbaa !9
  %31 = fadd float %26, %29
  %32 = add nuw nsw i64 %18, 1
  %33 = icmp eq i64 %32, 32000
  br i1 %33, label %13, label %17, !llvm.loop !540
}

; Function Attrs: nounwind ssp uwtable
define i32 @s319p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %32, %0
  %4 = phi i32 [ 0, %0 ], [ %34, %32 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %22, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fadd <4 x float> %9, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> %13, <4 x float>* %15, align 16, !tbaa !9
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fadd <4 x float> %9, %18
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 16, !tbaa !9
  %22 = add nuw i64 %6, 4
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %36, label %5, !llvm.loop !541

24:                                               ; preds = %32
  %25 = tail call i64 @"\01_clock"() #19
  %26 = sub i64 %25, %2
  %27 = uitofp i64 %26 to double
  %28 = fdiv double %27, 1.000000e+06
  %29 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.266, i64 0, i64 0), double %28)
  store float %44, float* @temp, align 4, !tbaa !9
  %30 = fpext float %44 to double
  %31 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %30) #19
  ret i32 0

32:                                               ; preds = %36
  %33 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %44) #19
  %34 = add nuw nsw i32 %4, 1
  %35 = icmp eq i32 %34, 100000
  br i1 %35, label %24, label %3, !llvm.loop !542

36:                                               ; preds = %5, %36
  %37 = phi i64 [ %45, %36 ], [ 0, %5 ]
  %38 = phi float [ %44, %36 ], [ 0.000000e+00, %5 ]
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %40 = load float, float* %39, align 4, !tbaa !9
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fadd float %40, %42
  %44 = fadd float %38, %43
  %45 = add nuw nsw i64 %37, 1
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %32, label %36, !llvm.loop !543
}

; Function Attrs: nounwind ssp uwtable
define i32 @s319pp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %13
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.267, i64 0, i64 0), double %9)
  store float %31, float* @temp, align 4, !tbaa !9
  %11 = fpext float %31 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #19
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %31) #19
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 100000
  br i1 %16, label %5, label %3, !llvm.loop !544

17:                                               ; preds = %3, %17
  %18 = phi i64 [ 0, %3 ], [ %32, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %31, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !9
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %23 = load float, float* %22, align 4, !tbaa !9
  %24 = fadd float %21, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  store float %24, float* %25, align 4, !tbaa !9
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %18
  %27 = load float, float* %26, align 4, !tbaa !9
  %28 = fadd float %21, %27
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  store float %28, float* %29, align 4, !tbaa !9
  %30 = fadd float %24, %28
  %31 = fadd float %19, %30
  %32 = add nuw nsw i64 %18, 1
  %33 = icmp eq i64 %32, 32000
  br i1 %33, label %13, label %17, !llvm.loop !545
}

; Function Attrs: nounwind ssp uwtable
define i32 @s319ppp() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %13
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.268, i64 0, i64 0), double %9)
  store float %70, float* @temp, align 4, !tbaa !9
  %11 = fpext float %70 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #19
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %70) #19
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 100000
  br i1 %16, label %5, label %3, !llvm.loop !546

17:                                               ; preds = %3, %17
  %18 = phi i64 [ 0, %3 ], [ %71, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %70, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %21 = load float, float* %20, align 16, !tbaa !9
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %23 = load float, float* %22, align 16, !tbaa !9
  %24 = fadd float %21, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  store float %24, float* %25, align 16, !tbaa !9
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %18
  %27 = load float, float* %26, align 16, !tbaa !9
  %28 = fadd float %21, %27
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  store float %28, float* %29, align 16, !tbaa !9
  %30 = or i64 %18, 1
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %30
  %32 = load float, float* %31, align 4, !tbaa !9
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %30
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fadd float %32, %34
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  store float %35, float* %36, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %30
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %32, %38
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  store float %39, float* %40, align 4, !tbaa !9
  %41 = or i64 %18, 2
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %41
  %43 = load float, float* %42, align 8, !tbaa !9
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %41
  %45 = load float, float* %44, align 8, !tbaa !9
  %46 = fadd float %43, %45
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  store float %46, float* %47, align 8, !tbaa !9
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %41
  %49 = load float, float* %48, align 8, !tbaa !9
  %50 = fadd float %43, %49
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  store float %50, float* %51, align 8, !tbaa !9
  %52 = or i64 %18, 3
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %52
  %54 = load float, float* %53, align 4, !tbaa !9
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %52
  %56 = load float, float* %55, align 4, !tbaa !9
  %57 = fadd float %54, %56
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  store float %57, float* %58, align 4, !tbaa !9
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %52
  %60 = load float, float* %59, align 4, !tbaa !9
  %61 = fadd float %54, %60
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %52
  store float %61, float* %62, align 4, !tbaa !9
  %63 = fadd float %24, %28
  %64 = fadd float %63, %35
  %65 = fadd float %64, %39
  %66 = fadd float %65, %46
  %67 = fadd float %66, %50
  %68 = fadd float %67, %57
  %69 = fadd float %68, %61
  %70 = fadd float %19, %69
  %71 = add nuw nsw i64 %18, 4
  %72 = icmp ult i64 %18, 31996
  br i1 %72, label %17, label %13, !llvm.loop !547
}

; Function Attrs: nounwind ssp uwtable
define i32 @s3110() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %14

3:                                                ; preds = %23
  %4 = tail call i64 @"\01_clock"() #19
  %5 = sub i64 %4, %2
  %6 = uitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.269, i64 0, i64 0), double %7)
  %9 = fadd float %25, 1.000000e+00
  %10 = fadd float %9, %26
  %11 = fadd float %10, 1.000000e+00
  store float %11, float* @temp, align 4, !tbaa !9
  %12 = fpext float %11 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #19
  ret i32 0

14:                                               ; preds = %0, %23
  %15 = phi i32 [ 0, %0 ], [ %29, %23 ]
  %16 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 0), align 16, !tbaa !9
  br label %17

17:                                               ; preds = %14, %31
  %18 = phi i64 [ 0, %14 ], [ %32, %31 ]
  %19 = phi i32 [ 0, %14 ], [ %45, %31 ]
  %20 = phi float [ %16, %14 ], [ %44, %31 ]
  %21 = phi i32 [ 0, %14 ], [ %43, %31 ]
  %22 = trunc i64 %18 to i32
  br label %34

23:                                               ; preds = %31
  %24 = sitofp i32 %45 to float
  %25 = fadd float %44, %24
  %26 = sitofp i32 %43 to float
  %27 = fadd float %25, %26
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %27) #19
  %29 = add nuw nsw i32 %15, 1
  %30 = icmp eq i32 %29, 19500
  br i1 %30, label %3, label %14, !llvm.loop !548

31:                                               ; preds = %34
  %32 = add nuw nsw i64 %18, 1
  %33 = icmp eq i64 %32, 256
  br i1 %33, label %23, label %17, !llvm.loop !549

34:                                               ; preds = %17, %34
  %35 = phi i64 [ 0, %17 ], [ %46, %34 ]
  %36 = phi i32 [ %19, %17 ], [ %45, %34 ]
  %37 = phi float [ %20, %17 ], [ %44, %34 ]
  %38 = phi i32 [ %21, %17 ], [ %43, %34 ]
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %18, i64 %35
  %40 = load float, float* %39, align 4, !tbaa !9
  %41 = fcmp ogt float %40, %37
  %42 = trunc i64 %35 to i32
  %43 = select i1 %41, i32 %42, i32 %38
  %44 = select i1 %41, float %40, float %37
  %45 = select i1 %41, i32 %22, i32 %36
  %46 = add nuw nsw i64 %35, 1
  %47 = icmp eq i64 %46, 256
  br i1 %47, label %31, label %34, !llvm.loop !550
}

; Function Attrs: nounwind ssp uwtable
define i32 @s13110() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %14

3:                                                ; preds = %20
  %4 = tail call i64 @"\01_clock"() #19
  %5 = sub i64 %4, %2
  %6 = uitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.270, i64 0, i64 0), double %7)
  %9 = fadd float %21, 1.000000e+00
  %10 = fadd float %9, 0.000000e+00
  %11 = fadd float %10, 1.000000e+00
  store float %11, float* @temp, align 4, !tbaa !9
  %12 = fpext float %11 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #19
  ret i32 0

14:                                               ; preds = %0, %20
  %15 = phi i32 [ 0, %0 ], [ %23, %20 ]
  %16 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 0), align 16, !tbaa !9
  br label %17

17:                                               ; preds = %14, %25
  %18 = phi i64 [ 0, %14 ], [ %26, %25 ]
  %19 = phi float [ %16, %14 ], [ %34, %25 ]
  br label %28

20:                                               ; preds = %25
  %21 = fadd float %34, 0.000000e+00
  %22 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %21) #19
  %23 = add nuw nsw i32 %15, 1
  %24 = icmp eq i32 %23, 19500
  br i1 %24, label %3, label %14, !llvm.loop !551

25:                                               ; preds = %28
  %26 = add nuw nsw i64 %18, 1
  %27 = icmp eq i64 %26, 256
  br i1 %27, label %20, label %17, !llvm.loop !552

28:                                               ; preds = %17, %28
  %29 = phi i64 [ 0, %17 ], [ %35, %28 ]
  %30 = phi float [ %19, %17 ], [ %34, %28 ]
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %18, i64 %29
  %32 = load float, float* %31, align 4, !tbaa !9
  %33 = fcmp ogt float %32, %30
  %34 = select i1 %33, float %32, float %30
  %35 = add nuw nsw i64 %29, 1
  %36 = icmp eq i64 %35, 256
  br i1 %36, label %25, label %28, !llvm.loop !553
}

; Function Attrs: nounwind ssp uwtable
define i32 @s3111() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %13
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.271, i64 0, i64 0), double %9)
  store float %24, float* @temp, align 4, !tbaa !9
  %11 = fpext float %24 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #19
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %24) #19
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 25000
  br i1 %16, label %5, label %3, !llvm.loop !554

17:                                               ; preds = %3, %17
  %18 = phi i64 [ 0, %3 ], [ %25, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %24, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !9
  %22 = fcmp ogt float %21, 0.000000e+00
  %23 = fadd float %19, %21
  %24 = select i1 %22, float %23, float %19
  %25 = add nuw nsw i64 %18, 1
  %26 = icmp eq i64 %25, 32000
  br i1 %26, label %13, label %17, !llvm.loop !555
}

; Function Attrs: nounwind ssp uwtable
define i32 @s3112() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %23
  %4 = phi i32 [ 0, %0 ], [ %25, %23 ]
  br label %27

5:                                                ; preds = %23
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), double %9)
  store float %32, float* @temp, align 4, !tbaa !9
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fadd float %32, %16
  %21 = fpext float %20 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #19
  ret i32 0

23:                                               ; preds = %27
  %24 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %32) #19
  %25 = add nuw nsw i32 %4, 1
  %26 = icmp eq i32 %25, 50000
  br i1 %26, label %5, label %3, !llvm.loop !556

27:                                               ; preds = %3, %27
  %28 = phi i64 [ 0, %3 ], [ %34, %27 ]
  %29 = phi float [ 0.000000e+00, %3 ], [ %32, %27 ]
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fadd float %29, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  store float %32, float* %33, align 4, !tbaa !9
  %34 = add nuw nsw i64 %28, 1
  %35 = icmp eq i64 %34, 32000
  br i1 %35, label %23, label %27, !llvm.loop !557
}

; Function Attrs: nounwind ssp uwtable
define i32 @s3113() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %11

3:                                                ; preds = %18
  %4 = tail call i64 @"\01_clock"() #19
  %5 = sub i64 %4, %2
  %6 = uitofp i64 %5 to double
  %7 = fdiv double %6, 1.000000e+06
  %8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.273, i64 0, i64 0), double %7)
  store float %29, float* @temp, align 4, !tbaa !9
  %9 = fpext float %29 to double
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %9) #19
  ret i32 0

11:                                               ; preds = %0, %18
  %12 = phi i32 [ 0, %0 ], [ %20, %18 ]
  %13 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  %14 = tail call float @llvm.fabs.f32(float %13)
  %15 = tail call float @llvm.fabs.f32(float %13)
  %16 = fcmp ogt float %15, %14
  %17 = select i1 %16, float %15, float %14
  br label %22

18:                                               ; preds = %22
  %19 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %29) #19
  %20 = add nuw nsw i32 %12, 1
  %21 = icmp eq i32 %20, 200000
  br i1 %21, label %3, label %11, !llvm.loop !558

22:                                               ; preds = %11, %22
  %23 = phi i64 [ 1, %11 ], [ %30, %22 ]
  %24 = phi float [ %17, %11 ], [ %29, %22 ]
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %26 = load float, float* %25, align 4, !tbaa !9
  %27 = tail call float @llvm.fabs.f32(float %26)
  %28 = fcmp ogt float %27, %24
  %29 = select i1 %28, float %27, float %24
  %30 = add nuw nsw i64 %23, 1
  %31 = icmp eq i64 %30, 32000
  br i1 %31, label %18, label %22, !llvm.loop !559
}

; Function Attrs: nounwind ssp uwtable
define i32 @s321() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %23
  %4 = phi i32 [ 0, %0 ], [ %25, %23 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16, !tbaa !9
  br label %27

6:                                                ; preds = %23
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %17, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %20, label %12, !llvm.loop !29

20:                                               ; preds = %12
  %21 = fpext float %17 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #19
  ret i32 0

23:                                               ; preds = %27
  %24 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %25 = add nuw nsw i32 %4, 1
  %26 = icmp eq i32 %25, 50000
  br i1 %26, label %6, label %3, !llvm.loop !560

27:                                               ; preds = %3, %27
  %28 = phi float [ %5, %3 ], [ %35, %27 ]
  %29 = phi i64 [ 1, %3 ], [ %36, %27 ]
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fmul float %28, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = fadd float %34, %32
  store float %35, float* %33, align 4, !tbaa !9
  %36 = add nuw nsw i64 %29, 1
  %37 = icmp eq i64 %36, 32000
  br i1 %37, label %23, label %27, !llvm.loop !561
}

; Function Attrs: nounwind ssp uwtable
define i32 @s322() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %23
  %4 = phi i32 [ 0, %0 ], [ %25, %23 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 1), align 4, !tbaa !9
  br label %27

6:                                                ; preds = %23
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.275, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %17, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %20, label %12, !llvm.loop !29

20:                                               ; preds = %12
  %21 = fpext float %17 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #19
  ret i32 0

23:                                               ; preds = %27
  %24 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %25 = add nuw nsw i32 %4, 1
  %26 = icmp eq i32 %25, 25000
  br i1 %26, label %6, label %3, !llvm.loop !562

27:                                               ; preds = %3, %27
  %28 = phi float [ %5, %3 ], [ %42, %27 ]
  %29 = phi i64 [ 2, %3 ], [ %43, %27 ]
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = fmul float %28, %33
  %35 = fadd float %31, %34
  %36 = add nsw i64 %29, -2
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %29
  %40 = load float, float* %39, align 4, !tbaa !9
  %41 = fmul float %38, %40
  %42 = fadd float %35, %41
  store float %42, float* %30, align 4, !tbaa !9
  %43 = add nuw nsw i64 %29, 1
  %44 = icmp eq i64 %43, 32000
  br i1 %44, label %23, label %27, !llvm.loop !563
}

; Function Attrs: nounwind ssp uwtable
define i32 @s323() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %28
  %4 = phi i32 [ 0, %0 ], [ %30, %28 ]
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), align 16, !tbaa !9
  br label %32

6:                                                ; preds = %28
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %2
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.276, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %21, %12 ]
  %15 = phi float [ 0.000000e+00, %6 ], [ %18, %12 ]
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %14, %20
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %12, !llvm.loop !29

24:                                               ; preds = %12
  %25 = fadd float %18, %21
  %26 = fpext float %25 to double
  %27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %26) #19
  ret i32 0

28:                                               ; preds = %32
  %29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %30 = add nuw nsw i32 %4, 1
  %31 = icmp eq i32 %30, 25000
  br i1 %31, label %6, label %3, !llvm.loop !564

32:                                               ; preds = %3, %32
  %33 = phi float [ %5, %3 ], [ %45, %32 ]
  %34 = phi i64 [ 1, %3 ], [ %47, %32 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %34
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fmul float %36, %38
  %40 = fadd float %33, %39
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  store float %40, float* %41, align 4, !tbaa !9
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %34
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fmul float %36, %43
  %45 = fadd float %40, %44
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  store float %45, float* %46, align 4, !tbaa !9
  %47 = add nuw nsw i64 %34, 1
  %48 = icmp eq i64 %47, 32000
  br i1 %48, label %28, label %32, !llvm.loop !565
}

; Function Attrs: nounwind ssp uwtable
define i32 @s331() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %15
  %4 = phi i32 [ 0, %0 ], [ %18, %15 ]
  br label %20

5:                                                ; preds = %15
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.277, i64 0, i64 0), double %9)
  %11 = add nsw i32 %27, 1
  %12 = sitofp i32 %11 to float
  store float %12, float* @temp, align 4, !tbaa !9
  %13 = fpext float %12 to double
  %14 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %13) #19
  ret i32 0

15:                                               ; preds = %20
  %16 = sitofp i32 %27 to float
  %17 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %16) #19
  %18 = add nuw nsw i32 %4, 1
  %19 = icmp eq i32 %18, 50000
  br i1 %19, label %5, label %3, !llvm.loop !566

20:                                               ; preds = %3, %20
  %21 = phi i64 [ 0, %3 ], [ %28, %20 ]
  %22 = phi i32 [ -1, %3 ], [ %27, %20 ]
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fcmp olt float %24, 0.000000e+00
  %26 = trunc i64 %21 to i32
  %27 = select i1 %25, i32 %26, i32 %22
  %28 = add nuw nsw i64 %21, 1
  %29 = icmp eq i64 %28, 32000
  br i1 %29, label %15, label %20, !llvm.loop !567
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone ssp uwtable willreturn
define i32 @max(i32 %0, i32 %1) local_unnamed_addr #13 {
  %3 = icmp sgt i32 %1, %0
  %4 = select i1 %3, i32 %1, i32 %0
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define i32 @s332(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %1, %16
  %5 = phi i32 [ 0, %1 ], [ %22, %16 ]
  br label %6

6:                                                ; preds = %4, %11
  %7 = phi i64 [ 0, %4 ], [ %12, %11 ]
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %9 = load float, float* %8, align 4, !tbaa !9
  %10 = fcmp ogt float %9, %0
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = add nuw nsw i64 %7, 1
  %13 = icmp eq i64 %12, 32000
  br i1 %13, label %16, label %6, !llvm.loop !568

14:                                               ; preds = %6
  %15 = trunc i64 %7 to i32
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi float [ %9, %14 ], [ -1.000000e+00, %11 ]
  %18 = phi i32 [ %15, %14 ], [ -2, %11 ]
  %19 = sitofp i32 %18 to float
  %20 = fadd float %17, %19
  %21 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %20) #19
  %22 = add nuw nsw i32 %5, 1
  %23 = icmp eq i32 %22, 50000
  br i1 %23, label %24, label %4, !llvm.loop !569

24:                                               ; preds = %16
  %25 = tail call i64 @"\01_clock"() #19
  %26 = sub i64 %25, %3
  %27 = uitofp i64 %26 to double
  %28 = fdiv double %27, 1.000000e+06
  %29 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.278, i64 0, i64 0), double %28)
  store float %17, float* @temp, align 4, !tbaa !9
  %30 = fpext float %17 to double
  %31 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %30) #19
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @s341() local_unnamed_addr #7 {
  %1 = tail call i64 @"\01_clock"() #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %0, %23
  %5 = phi i32 [ 0, %0 ], [ %25, %23 ]
  br label %27

6:                                                ; preds = %23
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %3
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.279, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %17, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %20, label %12, !llvm.loop !29

20:                                               ; preds = %12
  %21 = fpext float %17 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #19
  ret i32 0

23:                                               ; preds = %37
  %24 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %25 = add nuw nsw i32 %5, 1
  %26 = icmp eq i32 %25, 50000
  br i1 %26, label %6, label %4, !llvm.loop !570

27:                                               ; preds = %4, %37
  %28 = phi i64 [ 0, %4 ], [ %39, %37 ]
  %29 = phi i32 [ -1, %4 ], [ %38, %37 ]
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fcmp ogt float %31, 0.000000e+00
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = add nsw i32 %29, 1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  store float %31, float* %36, align 4, !tbaa !9
  br label %37

37:                                               ; preds = %27, %33
  %38 = phi i32 [ %34, %33 ], [ %29, %27 ]
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, 32000
  br i1 %40, label %23, label %27, !llvm.loop !571
}

; Function Attrs: nounwind ssp uwtable
define i32 @s342() local_unnamed_addr #7 {
  %1 = tail call i64 @"\01_clock"() #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %0, %23
  %5 = phi i32 [ 0, %0 ], [ %25, %23 ]
  br label %27

6:                                                ; preds = %23
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %3
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.280, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %17, %12 ]
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %20, label %12, !llvm.loop !29

20:                                               ; preds = %12
  %21 = fpext float %17 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #19
  ret i32 0

23:                                               ; preds = %38
  %24 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %25 = add nuw nsw i32 %5, 1
  %26 = icmp eq i32 %25, 50000
  br i1 %26, label %6, label %4, !llvm.loop !572

27:                                               ; preds = %4, %38
  %28 = phi i64 [ 0, %4 ], [ %40, %38 ]
  %29 = phi i32 [ -1, %4 ], [ %39, %38 ]
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fcmp ogt float %31, 0.000000e+00
  br i1 %32, label %33, label %38

33:                                               ; preds = %27
  %34 = add nsw i32 %29, 1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !9
  store float %37, float* %30, align 4, !tbaa !9
  br label %38

38:                                               ; preds = %27, %33
  %39 = phi i32 [ %34, %33 ], [ %29, %27 ]
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %23, label %27, !llvm.loop !573
}

; Function Attrs: nounwind ssp uwtable
define i32 @s343() local_unnamed_addr #7 {
  %1 = tail call i64 @"\01_clock"() #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %0, %26
  %5 = phi i32 [ 0, %0 ], [ %28, %26 ]
  br label %23

6:                                                ; preds = %26
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %3
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.281, i64 0, i64 0), double %10)
  br label %12

12:                                               ; preds = %6, %12
  %13 = phi i64 [ %18, %12 ], [ 0, %6 ]
  %14 = phi float [ %17, %12 ], [ 0.000000e+00, %6 ]
  %15 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %13
  %16 = load float, float* %15, align 4, !tbaa !9
  %17 = fadd float %14, %16
  %18 = add nuw nsw i64 %13, 1
  %19 = icmp eq i64 %18, 65536
  br i1 %19, label %20, label %12, !llvm.loop !32

20:                                               ; preds = %12
  %21 = fpext float %17 to double
  %22 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %21) #19
  ret i32 0

23:                                               ; preds = %4, %30
  %24 = phi i64 [ 0, %4 ], [ %31, %30 ]
  %25 = phi i32 [ -1, %4 ], [ %46, %30 ]
  br label %33

26:                                               ; preds = %30
  %27 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %28 = add nuw nsw i32 %5, 1
  %29 = icmp eq i32 %28, 1950
  br i1 %29, label %6, label %4, !llvm.loop !574

30:                                               ; preds = %45
  %31 = add nuw nsw i64 %24, 1
  %32 = icmp eq i64 %31, 256
  br i1 %32, label %26, label %23, !llvm.loop !575

33:                                               ; preds = %23, %45
  %34 = phi i64 [ 0, %23 ], [ %47, %45 ]
  %35 = phi i32 [ %25, %23 ], [ %46, %45 ]
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %34, i64 %24
  %37 = load float, float* %36, align 4, !tbaa !9
  %38 = fcmp ogt float %37, 0.000000e+00
  br i1 %38, label %39, label %45

39:                                               ; preds = %33
  %40 = add nsw i32 %35, 1
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %34, i64 %24
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %43
  store float %42, float* %44, align 4, !tbaa !9
  br label %45

45:                                               ; preds = %33, %39
  %46 = phi i32 [ %40, %39 ], [ %35, %33 ]
  %47 = add nuw nsw i64 %34, 1
  %48 = icmp eq i64 %47, 256
  br i1 %48, label %30, label %33, !llvm.loop !576
}

; Function Attrs: nounwind ssp uwtable
define i32 @s351() local_unnamed_addr #7 {
  %1 = tail call i64 @"\01_clock"() #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !9
  %5 = insertelement <4 x float> poison, float %4, i32 0
  %6 = shufflevector <4 x float> %5, <4 x float> poison, <4 x i32> zeroinitializer
  br label %7

7:                                                ; preds = %0, %26
  %8 = phi i32 [ 0, %0 ], [ %28, %26 ]
  br label %30

9:                                                ; preds = %26
  %10 = tail call i64 @"\01_clock"() #19
  %11 = sub i64 %10, %3
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+06
  %14 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.282, i64 0, i64 0), double %13)
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %21, %15 ]
  %17 = phi float [ 0.000000e+00, %9 ], [ %20, %15 ]
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %16
  %19 = load float, float* %18, align 4, !tbaa !9
  %20 = fadd float %17, %19
  %21 = add nuw nsw i64 %16, 1
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %23, label %15, !llvm.loop !29

23:                                               ; preds = %15
  %24 = fpext float %20 to double
  %25 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %24) #19
  ret i32 0

26:                                               ; preds = %30
  %27 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %28 = add nuw nsw i32 %8, 1
  %29 = icmp eq i32 %28, 400000
  br i1 %29, label %9, label %7, !llvm.loop !577

30:                                               ; preds = %7, %30
  %31 = phi i64 [ 0, %7 ], [ %48, %30 ]
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %34 = bitcast float* %32 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !9
  %36 = fmul <4 x float> %6, %35
  %37 = bitcast float* %33 to <4 x float>*
  %38 = load <4 x float>, <4 x float>* %37, align 4, !tbaa !9
  %39 = fadd <4 x float> %38, %36
  %40 = bitcast float* %33 to <4 x float>*
  store <4 x float> %39, <4 x float>* %40, align 4, !tbaa !9
  %41 = add nuw nsw i64 %31, 4
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fmul float %4, %43
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %46 = load float, float* %45, align 4, !tbaa !9
  %47 = fadd float %46, %44
  store float %47, float* %45, align 4, !tbaa !9
  %48 = add nuw nsw i64 %31, 5
  %49 = icmp ult i64 %31, 31995
  br i1 %49, label %30, label %26, !llvm.loop !578
}

; Function Attrs: nounwind ssp uwtable
define i32 @s351p() local_unnamed_addr #7 {
  %1 = tail call i64 @"\01_clock"() #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !9
  %5 = insertelement <4 x float> poison, float %4, i32 0
  %6 = shufflevector <4 x float> %5, <4 x float> poison, <4 x i32> zeroinitializer
  %7 = insertelement <4 x float> poison, float %4, i32 0
  %8 = shufflevector <4 x float> %7, <4 x float> poison, <4 x i32> zeroinitializer
  br label %9

9:                                                ; preds = %50, %0
  %10 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i64 [ 0, %9 ], [ %31, %11 ]
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %12
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fmul <4 x float> %6, %15
  %20 = fmul <4 x float> %8, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !9
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !9
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !9
  %31 = add nuw i64 %12, 8
  %32 = icmp eq i64 %31, 32000
  br i1 %32, label %50, label %11, !llvm.loop !579

33:                                               ; preds = %50
  %34 = tail call i64 @"\01_clock"() #19
  %35 = sub i64 %34, %3
  %36 = uitofp i64 %35 to double
  %37 = fdiv double %36, 1.000000e+06
  %38 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.283, i64 0, i64 0), double %37)
  br label %39

39:                                               ; preds = %39, %33
  %40 = phi i64 [ 0, %33 ], [ %45, %39 ]
  %41 = phi float [ 0.000000e+00, %33 ], [ %44, %39 ]
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %41, %43
  %45 = add nuw nsw i64 %40, 1
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %39, !llvm.loop !29

47:                                               ; preds = %39
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #19
  ret i32 0

50:                                               ; preds = %11
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %52 = add nuw nsw i32 %10, 1
  %53 = icmp eq i32 %52, 400000
  br i1 %53, label %33, label %9, !llvm.loop !580
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1351() local_unnamed_addr #7 {
  %1 = tail call i64 @"\01_clock"() #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %45, %0
  %5 = phi i32 [ 0, %0 ], [ %47, %45 ]
  br label %6

6:                                                ; preds = %6, %4
  %7 = phi i64 [ 0, %4 ], [ %26, %6 ]
  %8 = getelementptr [32000 x float], [32000 x float]* @c, i64 0, i64 %7
  %9 = getelementptr [32000 x float], [32000 x float]* @b, i64 0, i64 %7
  %10 = getelementptr [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %11 = bitcast float* %9 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr float, float* %9, i64 4
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = bitcast float* %8 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !9
  %18 = getelementptr float, float* %8, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 16, !tbaa !9
  %21 = fadd <4 x float> %12, %17
  %22 = fadd <4 x float> %15, %20
  %23 = bitcast float* %10 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 16, !tbaa !9
  %24 = getelementptr float, float* %10, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %22, <4 x float>* %25, align 16, !tbaa !9
  %26 = add nuw i64 %7, 8
  %27 = icmp eq i64 %26, 32000
  br i1 %27, label %45, label %6, !llvm.loop !581

28:                                               ; preds = %45
  %29 = tail call i64 @"\01_clock"() #19
  %30 = sub i64 %29, %3
  %31 = uitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.284, i64 0, i64 0), double %32)
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ 0, %28 ], [ %40, %34 ]
  %36 = phi float [ 0.000000e+00, %28 ], [ %39, %34 ]
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fadd float %36, %38
  %40 = add nuw nsw i64 %35, 1
  %41 = icmp eq i64 %40, 32000
  br i1 %41, label %42, label %34, !llvm.loop !29

42:                                               ; preds = %34
  %43 = fpext float %39 to double
  %44 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %43) #19
  ret i32 0

45:                                               ; preds = %6
  %46 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %47 = add nuw nsw i32 %5, 1
  %48 = icmp eq i32 %47, 400000
  br i1 %48, label %28, label %4, !llvm.loop !582
}

; Function Attrs: nounwind ssp uwtable
define i32 @s352() local_unnamed_addr #7 {
  %1 = tail call i64 @"\01_clock"() #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %0, %14
  %5 = phi i32 [ 0, %0 ], [ %16, %14 ]
  br label %18

6:                                                ; preds = %14
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %3
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.285, i64 0, i64 0), double %10)
  store float %52, float* @temp, align 4, !tbaa !9
  %12 = fpext float %52 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #19
  ret i32 0

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %52) #19
  %16 = add nuw nsw i32 %5, 1
  %17 = icmp eq i32 %16, 400000
  br i1 %17, label %6, label %4, !llvm.loop !583

18:                                               ; preds = %4, %18
  %19 = phi i64 [ 0, %4 ], [ %53, %18 ]
  %20 = phi float [ 0.000000e+00, %4 ], [ %52, %18 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 4, !tbaa !9
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %24 = load float, float* %23, align 4, !tbaa !9
  %25 = fmul float %22, %24
  %26 = fadd float %20, %25
  %27 = add nuw nsw i64 %19, 1
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4, !tbaa !9
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fmul float %29, %31
  %33 = fadd float %26, %32
  %34 = add nuw nsw i64 %19, 2
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %37 = bitcast float* %35 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 4, !tbaa !9
  %39 = bitcast float* %36 to <2 x float>*
  %40 = load <2 x float>, <2 x float>* %39, align 4, !tbaa !9
  %41 = fmul <2 x float> %38, %40
  %42 = extractelement <2 x float> %41, i32 0
  %43 = fadd float %33, %42
  %44 = extractelement <2 x float> %41, i32 1
  %45 = fadd float %43, %44
  %46 = add nuw nsw i64 %19, 4
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !9
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %46
  %50 = load float, float* %49, align 4, !tbaa !9
  %51 = fmul float %48, %50
  %52 = fadd float %45, %51
  %53 = add nuw nsw i64 %19, 5
  %54 = icmp ult i64 %19, 31995
  br i1 %54, label %18, label %14, !llvm.loop !584
}

; Function Attrs: nounwind ssp uwtable
define i32 @s352p() local_unnamed_addr #7 {
  %1 = tail call i64 @"\01_clock"() #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %0, %14
  %5 = phi i32 [ 0, %0 ], [ %16, %14 ]
  br label %18

6:                                                ; preds = %14
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %3
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.286, i64 0, i64 0), double %10)
  store float %45, float* @temp, align 4, !tbaa !9
  %12 = fpext float %45 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #19
  ret i32 0

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %45) #19
  %16 = add nuw nsw i32 %5, 1
  %17 = icmp eq i32 %16, 400000
  br i1 %17, label %6, label %4, !llvm.loop !585

18:                                               ; preds = %4, %18
  %19 = phi i64 [ 0, %4 ], [ %46, %18 ]
  %20 = phi float [ 0.000000e+00, %4 ], [ %45, %18 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 16, !tbaa !9
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %24 = load float, float* %23, align 16, !tbaa !9
  %25 = fmul float %22, %24
  %26 = or i64 %19, 1
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %29 = bitcast float* %27 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4, !tbaa !9
  %31 = bitcast float* %28 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4, !tbaa !9
  %33 = fmul <2 x float> %30, %32
  %34 = or i64 %19, 3
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %38 = load float, float* %37, align 4, !tbaa !9
  %39 = fmul float %36, %38
  %40 = fadd float %20, %25
  %41 = extractelement <2 x float> %33, i32 0
  %42 = fadd float %40, %41
  %43 = extractelement <2 x float> %33, i32 1
  %44 = fadd float %42, %43
  %45 = fadd float %44, %39
  %46 = add nuw nsw i64 %19, 4
  %47 = icmp ult i64 %19, 31996
  br i1 %47, label %18, label %14, !llvm.loop !586
}

; Function Attrs: nounwind ssp uwtable
define i32 @s353(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i64 @"\01_clock"() #19
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i64 0, i64 0))
  %4 = tail call i64 @"\01_clock"() #19
  %5 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16, !tbaa !9
  %6 = insertelement <4 x float> poison, float %5, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %1, %27
  %9 = phi i32 [ 0, %1 ], [ %29, %27 ]
  br label %31

10:                                               ; preds = %27
  %11 = tail call i64 @"\01_clock"() #19
  %12 = sub i64 %11, %4
  %13 = uitofp i64 %12 to double
  %14 = fdiv double %13, 1.000000e+06
  %15 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.287, i64 0, i64 0), double %14)
  br label %16

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %22, %16 ]
  %18 = phi float [ 0.000000e+00, %10 ], [ %21, %16 ]
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %20 = load float, float* %19, align 4, !tbaa !9
  %21 = fadd float %18, %20
  %22 = add nuw nsw i64 %17, 1
  %23 = icmp eq i64 %22, 32000
  br i1 %23, label %24, label %16, !llvm.loop !29

24:                                               ; preds = %16
  %25 = fpext float %21 to double
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %25) #19
  ret i32 0

27:                                               ; preds = %31
  %28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %29 = add nuw nsw i32 %9, 1
  %30 = icmp eq i32 %29, 50000
  br i1 %30, label %10, label %8, !llvm.loop !587

31:                                               ; preds = %8, %31
  %32 = phi i64 [ 0, %8 ], [ %76, %31 ]
  %33 = getelementptr inbounds i32, i32* %0, i64 %32
  %34 = load i32, i32* %33, align 4, !tbaa !588
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !9
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %39 = add nuw nsw i64 %32, 1
  %40 = getelementptr inbounds i32, i32* %0, i64 %39
  %41 = load i32, i32* %40, align 4, !tbaa !588
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = add nuw nsw i64 %32, 2
  %46 = getelementptr inbounds i32, i32* %0, i64 %45
  %47 = load i32, i32* %46, align 4, !tbaa !588
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !9
  %51 = add nuw nsw i64 %32, 3
  %52 = getelementptr inbounds i32, i32* %0, i64 %51
  %53 = load i32, i32* %52, align 4, !tbaa !588
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %54
  %56 = load float, float* %55, align 4, !tbaa !9
  %57 = insertelement <4 x float> poison, float %37, i32 0
  %58 = insertelement <4 x float> %57, float %44, i32 1
  %59 = insertelement <4 x float> %58, float %50, i32 2
  %60 = insertelement <4 x float> %59, float %56, i32 3
  %61 = fmul <4 x float> %7, %60
  %62 = bitcast float* %38 to <4 x float>*
  %63 = load <4 x float>, <4 x float>* %62, align 4, !tbaa !9
  %64 = fadd <4 x float> %63, %61
  %65 = bitcast float* %38 to <4 x float>*
  store <4 x float> %64, <4 x float>* %65, align 4, !tbaa !9
  %66 = add nuw nsw i64 %32, 4
  %67 = getelementptr inbounds i32, i32* %0, i64 %66
  %68 = load i32, i32* %67, align 4, !tbaa !588
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !9
  %72 = fmul float %5, %71
  %73 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %74 = load float, float* %73, align 4, !tbaa !9
  %75 = fadd float %74, %72
  store float %75, float* %73, align 4, !tbaa !9
  %76 = add nuw nsw i64 %32, 5
  %77 = icmp ult i64 %32, 31995
  br i1 %77, label %31, label %27, !llvm.loop !590
}

; Function Attrs: nounwind ssp uwtable
define i32 @s421() local_unnamed_addr #7 {
  %1 = load i8*, i8** bitcast (float** @xx to i8**), align 8, !tbaa !591
  call void @memset_pattern16(i8* %1, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %11

4:                                                ; preds = %43
  %5 = tail call i64 @"\01_clock"() #19
  %6 = sub i64 %5, %3
  %7 = uitofp i64 %6 to double
  %8 = fdiv double %7, 1.000000e+06
  %9 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.288, i64 0, i64 0), double %8)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !9
  %10 = load float*, float** @xx, align 8, !tbaa !591
  br label %57

11:                                               ; preds = %0, %43
  %12 = phi i32 [ 0, %0 ], [ %45, %43 ]
  %13 = load float*, float** @xx, align 8, !tbaa !591
  store float* %13, float** @yy, align 8, !tbaa !591
  %14 = getelementptr float, float* %13, i64 32000
  %15 = icmp ult float* %13, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999)
  %16 = icmp ugt float* %14, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0)
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %20, %11
  %19 = phi i64 [ 0, %11 ], [ 31992, %20 ]
  br label %47

20:                                               ; preds = %11, %20
  %21 = phi i64 [ %41, %20 ], [ 0, %11 ]
  %22 = or i64 %21, 1
  %23 = getelementptr inbounds float, float* %13, i64 %22
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 4, !tbaa !9, !alias.scope !593, !noalias !596
  %26 = getelementptr inbounds float, float* %23, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !9, !alias.scope !593, !noalias !596
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %30 = bitcast float* %29 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 16, !tbaa !9, !alias.scope !596
  %32 = getelementptr inbounds float, float* %29, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 16, !tbaa !9, !alias.scope !596
  %35 = fadd <4 x float> %25, %31
  %36 = fadd <4 x float> %28, %34
  %37 = getelementptr inbounds float, float* %13, i64 %21
  %38 = bitcast float* %37 to <4 x float>*
  store <4 x float> %35, <4 x float>* %38, align 4, !tbaa !9, !alias.scope !593, !noalias !596
  %39 = getelementptr inbounds float, float* %37, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> %36, <4 x float>* %40, align 4, !tbaa !9, !alias.scope !593, !noalias !596
  %41 = add nuw i64 %21, 8
  %42 = icmp eq i64 %41, 31992
  br i1 %42, label %18, label %20, !llvm.loop !598

43:                                               ; preds = %47
  %44 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #19
  %45 = add nuw nsw i32 %12, 1
  %46 = icmp eq i32 %45, 200000
  br i1 %46, label %4, label %11, !llvm.loop !599

47:                                               ; preds = %18, %47
  %48 = phi i64 [ %49, %47 ], [ %19, %18 ]
  %49 = add nuw nsw i64 %48, 1
  %50 = getelementptr inbounds float, float* %13, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !9
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %53 = load float, float* %52, align 4, !tbaa !9
  %54 = fadd float %51, %53
  %55 = getelementptr inbounds float, float* %13, i64 %48
  store float %54, float* %55, align 4, !tbaa !9
  %56 = icmp eq i64 %49, 31999
  br i1 %56, label %43, label %47, !llvm.loop !600

57:                                               ; preds = %4, %57
  %58 = phi float [ 0.000000e+00, %4 ], [ %62, %57 ]
  %59 = phi i64 [ 0, %4 ], [ %63, %57 ]
  %60 = getelementptr inbounds float, float* %10, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !9
  %62 = fadd float %61, %58
  store float %62, float* @temp, align 4, !tbaa !9
  %63 = add nuw nsw i64 %59, 1
  %64 = icmp eq i64 %63, 32000
  br i1 %64, label %65, label %57, !llvm.loop !601

65:                                               ; preds = %57
  %66 = fpext float %62 to double
  %67 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %66) #19
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @s1421() local_unnamed_addr #7 {
  %1 = load i8*, i8** bitcast (float** @xx to i8**), align 8, !tbaa !591
  call void @memset_pattern16(i8* %1, i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  store float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), float** @xx, align 8, !tbaa !591
  br label %4

4:                                                ; preds = %0, %45
  %5 = phi float* [ getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), %0 ], [ %46, %45 ]
  %6 = phi i32 [ 0, %0 ], [ %43, %45 ]
  %7 = getelementptr float, float* %5, i64 16000
  %8 = icmp ugt float* %7, getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0)
  %9 = icmp ult float* %5, getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000)
  %10 = and i1 %8, %9
  %11 = or i1 %10, and (i1 icmp ult (float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000)), i1 icmp ult (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000)))
  br i1 %11, label %47, label %12

12:                                               ; preds = %4, %12
  %13 = phi i64 [ %32, %12 ], [ 0, %4 ]
  %14 = getelementptr inbounds float, float* %5, i64 %13
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 4, !tbaa !9, !alias.scope !602
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !9, !alias.scope !602
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !9, !alias.scope !605
  %23 = getelementptr inbounds float, float* %20, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 16, !tbaa !9, !alias.scope !605
  %26 = fadd <4 x float> %16, %22
  %27 = fadd <4 x float> %19, %25
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> %26, <4 x float>* %29, align 16, !tbaa !9, !alias.scope !607, !noalias !609
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %27, <4 x float>* %31, align 16, !tbaa !9, !alias.scope !607, !noalias !609
  %32 = add nuw i64 %13, 8
  %33 = icmp eq i64 %32, 16000
  br i1 %33, label %41, label %12, !llvm.loop !610

34:                                               ; preds = %41
  %35 = tail call i64 @"\01_clock"() #19
  %36 = sub i64 %35, %3
  %37 = uitofp i64 %36 to double
  %38 = fdiv double %37, 1.000000e+06
  %39 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.289, i64 0, i64 0), double %38)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !9
  %40 = load float*, float** @xx, align 8, !tbaa !591
  br label %57

41:                                               ; preds = %12, %47
  %42 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #19
  %43 = add nuw nsw i32 %6, 1
  %44 = icmp eq i32 %43, 400000
  br i1 %44, label %34, label %45, !llvm.loop !611

45:                                               ; preds = %41
  %46 = load float*, float** @xx, align 8, !tbaa !591
  br label %4

47:                                               ; preds = %4, %47
  %48 = phi i64 [ %55, %47 ], [ 0, %4 ]
  %49 = getelementptr inbounds float, float* %5, i64 %48
  %50 = load float, float* %49, align 4, !tbaa !9
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %52 = load float, float* %51, align 4, !tbaa !9
  %53 = fadd float %50, %52
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %48
  store float %53, float* %54, align 4, !tbaa !9
  %55 = add nuw nsw i64 %48, 1
  %56 = icmp eq i64 %55, 16000
  br i1 %56, label %41, label %47, !llvm.loop !612

57:                                               ; preds = %34, %57
  %58 = phi float [ 0.000000e+00, %34 ], [ %62, %57 ]
  %59 = phi i64 [ 0, %34 ], [ %63, %57 ]
  %60 = getelementptr inbounds float, float* %40, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !9
  %62 = fadd float %61, %58
  store float %62, float* @temp, align 4, !tbaa !9
  %63 = add nuw nsw i64 %59, 1
  %64 = icmp eq i64 %63, 16000
  br i1 %64, label %65, label %57, !llvm.loop !613

65:                                               ; preds = %57
  %66 = fpext float %62 to double
  %67 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %66) #19
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @s422() local_unnamed_addr #7 {
  store float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 4), float** @xx, align 8, !tbaa !591
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast (float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 4) to i8*), i8 0, i64 128000, i1 false)
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %44
  %4 = phi i32 [ 0, %0 ], [ %46, %44 ]
  %5 = load float*, float** @xx, align 8, !tbaa !591
  %6 = getelementptr float, float* %5, i64 32000
  %7 = icmp ult float* %5, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 32008)
  %8 = icmp ugt float* %6, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 8)
  %9 = and i1 %7, %8
  %10 = icmp ult float* %5, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 1, i64 0)
  %11 = icmp ugt float* %6, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0)
  %12 = and i1 %10, %11
  %13 = or i1 %9, %12
  br i1 %13, label %48, label %14

14:                                               ; preds = %3, %14
  %15 = phi i64 [ %35, %14 ], [ 0, %3 ]
  %16 = add nuw nsw i64 %15, 8
  %17 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %16
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9, !alias.scope !614
  %20 = getelementptr inbounds float, float* %17, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !9, !alias.scope !614
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 16, !tbaa !9, !alias.scope !617
  %26 = getelementptr inbounds float, float* %23, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 16, !tbaa !9, !alias.scope !617
  %29 = fadd <4 x float> %19, %25
  %30 = fadd <4 x float> %22, %28
  %31 = getelementptr inbounds float, float* %5, i64 %15
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %29, <4 x float>* %32, align 4, !tbaa !9, !alias.scope !619, !noalias !621
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %30, <4 x float>* %34, align 4, !tbaa !9, !alias.scope !619, !noalias !621
  %35 = add nuw i64 %15, 8
  %36 = icmp eq i64 %35, 32000
  br i1 %36, label %44, label %14, !llvm.loop !622

37:                                               ; preds = %44
  %38 = tail call i64 @"\01_clock"() #19
  %39 = sub i64 %38, %2
  %40 = uitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  %42 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.290, i64 0, i64 0), double %41)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !9
  %43 = load float*, float** @xx, align 8, !tbaa !591
  br label %59

44:                                               ; preds = %14, %48
  %45 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %46 = add nuw nsw i32 %4, 1
  %47 = icmp eq i32 %46, 400000
  br i1 %47, label %37, label %3, !llvm.loop !623

48:                                               ; preds = %3, %48
  %49 = phi i64 [ %57, %48 ], [ 0, %3 ]
  %50 = add nuw nsw i64 %49, 8
  %51 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %50
  %52 = load float, float* %51, align 4, !tbaa !9
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %49
  %54 = load float, float* %53, align 4, !tbaa !9
  %55 = fadd float %52, %54
  %56 = getelementptr inbounds float, float* %5, i64 %49
  store float %55, float* %56, align 4, !tbaa !9
  %57 = add nuw nsw i64 %49, 1
  %58 = icmp eq i64 %57, 32000
  br i1 %58, label %44, label %48, !llvm.loop !624

59:                                               ; preds = %37, %59
  %60 = phi float [ 0.000000e+00, %37 ], [ %64, %59 ]
  %61 = phi i64 [ 0, %37 ], [ %65, %59 ]
  %62 = getelementptr inbounds float, float* %43, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !9
  %64 = fadd float %63, %60
  store float %64, float* @temp, align 4, !tbaa !9
  %65 = add nuw nsw i64 %61, 1
  %66 = icmp eq i64 %65, 32000
  br i1 %66, label %67, label %59, !llvm.loop !625

67:                                               ; preds = %59
  %68 = fpext float %64 to double
  %69 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %68) #19
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @s423() local_unnamed_addr #7 {
  store float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64), float** @xx, align 8, !tbaa !591
  call void @memset_pattern16(i8* bitcast (float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 64) to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %42
  %4 = phi i32 [ 0, %0 ], [ %44, %42 ]
  %5 = load float*, float** @xx, align 8, !tbaa !591
  %6 = getelementptr float, float* %5, i64 31999
  %7 = icmp ugt float* %6, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 1)
  %8 = icmp ult float* %5, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 32000)
  %9 = and i1 %7, %8
  %10 = or i1 %9, and (i1 icmp ult (float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 1), float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999)), i1 icmp ult (float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 32000)))
  br i1 %10, label %11, label %13

11:                                               ; preds = %13, %3
  %12 = phi i64 [ 0, %3 ], [ 31992, %13 ]
  br label %46

13:                                               ; preds = %3, %13
  %14 = phi i64 [ %34, %13 ], [ 0, %3 ]
  %15 = getelementptr inbounds float, float* %5, i64 %14
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 4, !tbaa !9, !alias.scope !626
  %18 = getelementptr inbounds float, float* %15, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !9, !alias.scope !626
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !9, !alias.scope !629
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !9, !alias.scope !629
  %27 = fadd <4 x float> %17, %23
  %28 = fadd <4 x float> %20, %26
  %29 = or i64 %14, 1
  %30 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %29
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %27, <4 x float>* %31, align 4, !tbaa !9, !alias.scope !631, !noalias !633
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> %28, <4 x float>* %33, align 4, !tbaa !9, !alias.scope !631, !noalias !633
  %34 = add nuw i64 %14, 8
  %35 = icmp eq i64 %34, 31992
  br i1 %35, label %11, label %13, !llvm.loop !634

36:                                               ; preds = %42
  %37 = tail call i64 @"\01_clock"() #19
  %38 = sub i64 %37, %2
  %39 = uitofp i64 %38 to double
  %40 = fdiv double %39, 1.000000e+06
  %41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.291, i64 0, i64 0), double %40)
  br label %59

42:                                               ; preds = %46
  %43 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #19
  %44 = add nuw nsw i32 %4, 1
  %45 = icmp eq i32 %44, 200000
  br i1 %45, label %36, label %3, !llvm.loop !635

46:                                               ; preds = %11, %46
  %47 = phi i64 [ %53, %46 ], [ %12, %11 ]
  %48 = getelementptr inbounds float, float* %5, i64 %47
  %49 = load float, float* %48, align 4, !tbaa !9
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %51 = load float, float* %50, align 4, !tbaa !9
  %52 = fadd float %49, %51
  %53 = add nuw nsw i64 %47, 1
  %54 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %53
  store float %52, float* %54, align 4, !tbaa !9
  %55 = icmp eq i64 %53, 31999
  br i1 %55, label %42, label %46, !llvm.loop !636

56:                                               ; preds = %59
  store float %64, float* @temp, align 4, !tbaa !9
  %57 = fpext float %64 to double
  %58 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %57) #19
  ret i32 0

59:                                               ; preds = %36, %59
  %60 = phi i64 [ 0, %36 ], [ %65, %59 ]
  %61 = phi float [ 0.000000e+00, %36 ], [ %64, %59 ]
  %62 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %60
  %63 = load float, float* %62, align 4, !tbaa !9
  %64 = fadd float %63, %61
  %65 = add nuw nsw i64 %60, 1
  %66 = icmp eq i64 %65, 32000
  br i1 %66, label %56, label %59, !llvm.loop !637
}

; Function Attrs: nounwind ssp uwtable
define i32 @s424() local_unnamed_addr #7 {
  store float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 63), float** @xx, align 8, !tbaa !591
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(128000) bitcast (float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 63) to i8*), i8 0, i64 128000, i1 false)
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %47
  %4 = phi i32 [ 0, %0 ], [ %49, %47 ]
  %5 = load float*, float** @xx, align 8, !tbaa !591
  %6 = getelementptr float, float* %5, i64 1
  %7 = getelementptr float, float* %5, i64 32000
  %8 = icmp ult float* %6, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 31999)
  %9 = icmp ugt float* %7, getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0)
  %10 = and i1 %8, %9
  %11 = icmp ult float* %6, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999)
  %12 = icmp ugt float* %7, getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0)
  %13 = and i1 %11, %12
  %14 = or i1 %10, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %17, %3
  %16 = phi i64 [ 0, %3 ], [ 31992, %17 ]
  br label %51

17:                                               ; preds = %3, %17
  %18 = phi i64 [ %38, %17 ], [ 0, %3 ]
  %19 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %18
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !9, !alias.scope !638
  %22 = getelementptr inbounds float, float* %19, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !9, !alias.scope !638
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %26 = bitcast float* %25 to <4 x float>*
  %27 = load <4 x float>, <4 x float>* %26, align 16, !tbaa !9, !alias.scope !641
  %28 = getelementptr inbounds float, float* %25, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  %30 = load <4 x float>, <4 x float>* %29, align 16, !tbaa !9, !alias.scope !641
  %31 = fadd <4 x float> %21, %27
  %32 = fadd <4 x float> %24, %30
  %33 = or i64 %18, 1
  %34 = getelementptr inbounds float, float* %5, i64 %33
  %35 = bitcast float* %34 to <4 x float>*
  store <4 x float> %31, <4 x float>* %35, align 4, !tbaa !9, !alias.scope !643, !noalias !645
  %36 = getelementptr inbounds float, float* %34, i64 4
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> %32, <4 x float>* %37, align 4, !tbaa !9, !alias.scope !643, !noalias !645
  %38 = add nuw i64 %18, 8
  %39 = icmp eq i64 %38, 31992
  br i1 %39, label %15, label %17, !llvm.loop !646

40:                                               ; preds = %47
  %41 = tail call i64 @"\01_clock"() #19
  %42 = sub i64 %41, %2
  %43 = uitofp i64 %42 to double
  %44 = fdiv double %43, 1.000000e+06
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.292, i64 0, i64 0), double %44)
  store float 0.000000e+00, float* @temp, align 4, !tbaa !9
  %46 = load float*, float** @xx, align 8, !tbaa !591
  br label %61

47:                                               ; preds = %51
  %48 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00) #19
  %49 = add nuw nsw i32 %4, 1
  %50 = icmp eq i32 %49, 200000
  br i1 %50, label %40, label %3, !llvm.loop !647

51:                                               ; preds = %15, %51
  %52 = phi i64 [ %58, %51 ], [ %16, %15 ]
  %53 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %52
  %54 = load float, float* %53, align 4, !tbaa !9
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %56 = load float, float* %55, align 4, !tbaa !9
  %57 = fadd float %54, %56
  %58 = add nuw nsw i64 %52, 1
  %59 = getelementptr inbounds float, float* %5, i64 %58
  store float %57, float* %59, align 4, !tbaa !9
  %60 = icmp eq i64 %58, 31999
  br i1 %60, label %47, label %51, !llvm.loop !648

61:                                               ; preds = %40, %61
  %62 = phi float [ 0.000000e+00, %40 ], [ %66, %61 ]
  %63 = phi i64 [ 0, %40 ], [ %67, %61 ]
  %64 = getelementptr inbounds float, float* %46, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !9
  %66 = fadd float %65, %62
  store float %66, float* @temp, align 4, !tbaa !9
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, 32000
  br i1 %68, label %69, label %61, !llvm.loop !649

69:                                               ; preds = %61
  %70 = fpext float %66 to double
  %71 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %70) #19
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @s431() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %42, %0
  %4 = phi i32 [ 0, %0 ], [ %44, %42 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %23, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fadd <4 x float> %9, %15
  %20 = fadd <4 x float> %12, %18
  %21 = bitcast float* %7 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 16, !tbaa !9
  %22 = bitcast float* %10 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 16, !tbaa !9
  %23 = add nuw i64 %6, 8
  %24 = icmp eq i64 %23, 32000
  br i1 %24, label %42, label %5, !llvm.loop !650

25:                                               ; preds = %42
  %26 = tail call i64 @"\01_clock"() #19
  %27 = sub i64 %26, %2
  %28 = uitofp i64 %27 to double
  %29 = fdiv double %28, 1.000000e+06
  %30 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.293, i64 0, i64 0), double %29)
  br label %31

31:                                               ; preds = %31, %25
  %32 = phi i64 [ 0, %25 ], [ %37, %31 ]
  %33 = phi float [ 0.000000e+00, %25 ], [ %36, %31 ]
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fadd float %33, %35
  %37 = add nuw nsw i64 %32, 1
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %39, label %31, !llvm.loop !29

39:                                               ; preds = %31
  %40 = fpext float %36 to double
  %41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %40) #19
  ret i32 0

42:                                               ; preds = %5
  %43 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %44 = add nuw nsw i32 %4, 1
  %45 = icmp eq i32 %44, 500000
  br i1 %45, label %25, label %3, !llvm.loop !651
}

; Function Attrs: nounwind ssp uwtable
define i32 @s441() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %49, %0
  %4 = phi i32 [ 0, %0 ], [ %51, %49 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %30, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fmul <4 x float> %12, %12
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = fmul <4 x float> %16, %16
  %18 = bitcast float* %10 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = fmul <4 x float> %16, %19
  %21 = fcmp ugt <4 x float> %9, zeroinitializer
  %22 = fcmp oeq <4 x float> %9, zeroinitializer
  %23 = select <4 x i1> %21, <4 x float> %13, <4 x float> %20
  %24 = select <4 x i1> %22, <4 x float> %17, <4 x float> %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %26 = bitcast float* %25 to <4 x float>*
  %27 = load <4 x float>, <4 x float>* %26, align 16, !tbaa !9
  %28 = fadd <4 x float> %27, %24
  %29 = bitcast float* %25 to <4 x float>*
  store <4 x float> %28, <4 x float>* %29, align 16, !tbaa !9
  %30 = add nuw i64 %6, 4
  %31 = icmp eq i64 %30, 32000
  br i1 %31, label %49, label %5, !llvm.loop !652

32:                                               ; preds = %49
  %33 = tail call i64 @"\01_clock"() #19
  %34 = sub i64 %33, %2
  %35 = uitofp i64 %34 to double
  %36 = fdiv double %35, 1.000000e+06
  %37 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.294, i64 0, i64 0), double %36)
  br label %38

38:                                               ; preds = %38, %32
  %39 = phi i64 [ 0, %32 ], [ %44, %38 ]
  %40 = phi float [ 0.000000e+00, %32 ], [ %43, %38 ]
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fadd float %40, %42
  %44 = add nuw nsw i64 %39, 1
  %45 = icmp eq i64 %44, 32000
  br i1 %45, label %46, label %38, !llvm.loop !29

46:                                               ; preds = %38
  %47 = fpext float %43 to double
  %48 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %47) #19
  ret i32 0

49:                                               ; preds = %5
  %50 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %51 = add nuw nsw i32 %4, 1
  %52 = icmp eq i32 %51, 50000
  br i1 %52, label %32, label %3, !llvm.loop !653
}

; Function Attrs: nounwind ssp uwtable
define i32 @s442() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.295, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %46
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 25000
  br i1 %25, label %5, label %3, !llvm.loop !654

26:                                               ; preds = %3, %46
  %27 = phi i64 [ 0, %3 ], [ %51, %46 ]
  %28 = getelementptr inbounds [32000 x i32], [32000 x i32]* @indx, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4, !tbaa !588
  switch i32 %29, label %30 [
    i32 4, label %42
    i32 2, label %34
    i32 3, label %38
  ]

30:                                               ; preds = %26
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %32 = load float, float* %31, align 4, !tbaa !9
  %33 = fmul float %32, %32
  br label %46

34:                                               ; preds = %26
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %27
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = fmul float %36, %36
  br label %46

38:                                               ; preds = %26
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %40 = load float, float* %39, align 4, !tbaa !9
  %41 = fmul float %40, %40
  br label %46

42:                                               ; preds = %26
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %27
  %44 = load float, float* %43, align 4, !tbaa !9
  %45 = fmul float %44, %44
  br label %46

46:                                               ; preds = %30, %34, %38, %42
  %47 = phi float [ %33, %30 ], [ %37, %34 ], [ %41, %38 ], [ %45, %42 ]
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %49 = load float, float* %48, align 4, !tbaa !9
  %50 = fadd float %49, %47
  store float %50, float* %48, align 4, !tbaa !9
  %51 = add nuw nsw i64 %27, 1
  %52 = icmp eq i64 %51, 32000
  br i1 %52, label %22, label %26, !llvm.loop !655
}

; Function Attrs: nounwind ssp uwtable
define i32 @s443() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %43, %0
  %4 = phi i32 [ 0, %0 ], [ %45, %43 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %24, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = fcmp ugt <4 x float> %9, zeroinitializer
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = select <4 x i1> %10, <4 x float> %13, <4 x float> %16
  %18 = fmul <4 x float> %13, %17
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !9
  %22 = fadd <4 x float> %21, %18
  %23 = bitcast float* %19 to <4 x float>*
  store <4 x float> %22, <4 x float>* %23, align 16, !tbaa !9
  %24 = add nuw i64 %6, 4
  %25 = icmp eq i64 %24, 32000
  br i1 %25, label %43, label %5, !llvm.loop !656

26:                                               ; preds = %43
  %27 = tail call i64 @"\01_clock"() #19
  %28 = sub i64 %27, %2
  %29 = uitofp i64 %28 to double
  %30 = fdiv double %29, 1.000000e+06
  %31 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.296, i64 0, i64 0), double %30)
  br label %32

32:                                               ; preds = %32, %26
  %33 = phi i64 [ 0, %26 ], [ %38, %32 ]
  %34 = phi float [ 0.000000e+00, %26 ], [ %37, %32 ]
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = fadd float %34, %36
  %38 = add nuw nsw i64 %33, 1
  %39 = icmp eq i64 %38, 32000
  br i1 %39, label %40, label %32, !llvm.loop !29

40:                                               ; preds = %32
  %41 = fpext float %37 to double
  %42 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %41) #19
  ret i32 0

43:                                               ; preds = %5
  %44 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %45 = add nuw nsw i32 %4, 1
  %46 = icmp eq i32 %45, 100000
  br i1 %46, label %26, label %3, !llvm.loop !657
}

; Function Attrs: nounwind ssp uwtable
define i32 @s451() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %37, %0
  %4 = phi i32 [ 0, %0 ], [ %39, %37 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %18, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 8, !tbaa !9
  %10 = call <2 x float> @llvm.sin.v2f32(<2 x float> %9)
  %11 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %12 = bitcast float* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 8, !tbaa !9
  %14 = call <2 x float> @llvm.cos.v2f32(<2 x float> %13)
  %15 = fadd <2 x float> %10, %14
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %17 = bitcast float* %16 to <2 x float>*
  store <2 x float> %15, <2 x float>* %17, align 8, !tbaa !9
  %18 = add nuw i64 %6, 2
  %19 = icmp eq i64 %18, 32000
  br i1 %19, label %37, label %5, !llvm.loop !658

20:                                               ; preds = %37
  %21 = tail call i64 @"\01_clock"() #19
  %22 = sub i64 %21, %2
  %23 = uitofp i64 %22 to double
  %24 = fdiv double %23, 1.000000e+06
  %25 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.297, i64 0, i64 0), double %24)
  br label %26

26:                                               ; preds = %26, %20
  %27 = phi i64 [ 0, %20 ], [ %32, %26 ]
  %28 = phi float [ 0.000000e+00, %20 ], [ %31, %26 ]
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = fadd float %28, %30
  %32 = add nuw nsw i64 %27, 1
  %33 = icmp eq i64 %32, 32000
  br i1 %33, label %34, label %26, !llvm.loop !29

34:                                               ; preds = %26
  %35 = fpext float %31 to double
  %36 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %35) #19
  ret i32 0

37:                                               ; preds = %5
  %38 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %39 = add nuw nsw i32 %4, 1
  %40 = icmp eq i32 %39, 10000
  br i1 %40, label %20, label %3, !llvm.loop !659
}

; Function Attrs: nounwind ssp uwtable
define i32 @s452() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %54, %0
  %4 = phi i32 [ 0, %0 ], [ %56, %54 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %34, %5 ]
  %7 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3 ], [ %35, %5 ]
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !9
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16, !tbaa !9
  %17 = getelementptr inbounds float, float* %14, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = trunc <4 x i64> %7 to <4 x i32>
  %21 = add <4 x i32> %20, <i32 1, i32 1, i32 1, i32 1>
  %22 = trunc <4 x i64> %7 to <4 x i32>
  %23 = add <4 x i32> %22, <i32 5, i32 5, i32 5, i32 5>
  %24 = sitofp <4 x i32> %21 to <4 x float>
  %25 = sitofp <4 x i32> %23 to <4 x float>
  %26 = fmul <4 x float> %16, %24
  %27 = fmul <4 x float> %19, %25
  %28 = fadd <4 x float> %10, %26
  %29 = fadd <4 x float> %13, %27
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %28, <4 x float>* %31, align 16, !tbaa !9
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> %29, <4 x float>* %33, align 16, !tbaa !9
  %34 = add nuw i64 %6, 8
  %35 = add <4 x i64> %7, <i64 8, i64 8, i64 8, i64 8>
  %36 = icmp eq i64 %34, 32000
  br i1 %36, label %54, label %5, !llvm.loop !660

37:                                               ; preds = %54
  %38 = tail call i64 @"\01_clock"() #19
  %39 = sub i64 %38, %2
  %40 = uitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  %42 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.298, i64 0, i64 0), double %41)
  br label %43

43:                                               ; preds = %43, %37
  %44 = phi i64 [ 0, %37 ], [ %49, %43 ]
  %45 = phi float [ 0.000000e+00, %37 ], [ %48, %43 ]
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = fadd float %45, %47
  %49 = add nuw nsw i64 %44, 1
  %50 = icmp eq i64 %49, 32000
  br i1 %50, label %51, label %43, !llvm.loop !29

51:                                               ; preds = %43
  %52 = fpext float %48 to double
  %53 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %52) #19
  ret i32 0

54:                                               ; preds = %5
  %55 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %56 = add nuw nsw i32 %4, 1
  %57 = icmp eq i32 %56, 200000
  br i1 %57, label %37, label %3, !llvm.loop !661
}

; Function Attrs: nounwind ssp uwtable
define i32 @s453() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.299, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %26
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 100000
  br i1 %25, label %5, label %3, !llvm.loop !662

26:                                               ; preds = %3, %26
  %27 = phi i64 [ 0, %3 ], [ %34, %26 ]
  %28 = phi float [ 0.000000e+00, %3 ], [ %29, %26 ]
  %29 = fadd float %28, 2.000000e+00
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %31 = load float, float* %30, align 4, !tbaa !9
  %32 = fmul float %29, %31
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  store float %32, float* %33, align 4, !tbaa !9
  %34 = add nuw nsw i64 %27, 1
  %35 = icmp eq i64 %34, 32000
  br i1 %35, label %22, label %26, !llvm.loop !663
}

; Function Attrs: nounwind ssp uwtable
define i32 @s453p() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %48, %0
  %4 = phi i32 [ 0, %0 ], [ %50, %48 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %28, %5 ]
  %7 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %3 ], [ %29, %5 ]
  %8 = trunc <4 x i64> %7 to <4 x i32>
  %9 = trunc <4 x i64> %7 to <4 x i32>
  %10 = shl <4 x i32> %8, <i32 1, i32 1, i32 1, i32 1>
  %11 = add <4 x i32> %10, <i32 2, i32 2, i32 2, i32 2>
  %12 = shl <4 x i32> %9, <i32 1, i32 1, i32 1, i32 1>
  %13 = add <4 x i32> %12, <i32 10, i32 10, i32 10, i32 10>
  %14 = sitofp <4 x i32> %11 to <4 x float>
  %15 = sitofp <4 x i32> %13 to <4 x float>
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = getelementptr inbounds float, float* %16, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !9
  %22 = fmul <4 x float> %18, %14
  %23 = fmul <4 x float> %21, %15
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %22, <4 x float>* %25, align 16, !tbaa !9
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %23, <4 x float>* %27, align 16, !tbaa !9
  %28 = add nuw i64 %6, 8
  %29 = add <4 x i64> %7, <i64 8, i64 8, i64 8, i64 8>
  %30 = icmp eq i64 %28, 32000
  br i1 %30, label %48, label %5, !llvm.loop !664

31:                                               ; preds = %48
  %32 = tail call i64 @"\01_clock"() #19
  %33 = sub i64 %32, %2
  %34 = uitofp i64 %33 to double
  %35 = fdiv double %34, 1.000000e+06
  %36 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.300, i64 0, i64 0), double %35)
  br label %37

37:                                               ; preds = %37, %31
  %38 = phi i64 [ 0, %31 ], [ %43, %37 ]
  %39 = phi float [ 0.000000e+00, %31 ], [ %42, %37 ]
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %41 = load float, float* %40, align 4, !tbaa !9
  %42 = fadd float %39, %41
  %43 = add nuw nsw i64 %38, 1
  %44 = icmp eq i64 %43, 32000
  br i1 %44, label %45, label %37, !llvm.loop !29

45:                                               ; preds = %37
  %46 = fpext float %42 to double
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %46) #19
  ret i32 0

48:                                               ; preds = %5
  %49 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %50 = add nuw nsw i32 %4, 1
  %51 = icmp eq i32 %50, 100000
  br i1 %51, label %31, label %3, !llvm.loop !665
}

; Function Attrs: nounwind ssp uwtable
define i32 @s471() local_unnamed_addr #7 {
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @x to i8*), i8 0, i64 128000, i1 false)
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %34, %0
  %4 = phi i32 [ 0, %0 ], [ %36, %34 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %26, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = fmul <4 x float> %12, %12
  %14 = fadd <4 x float> %9, %13
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %6
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %14, <4 x float>* %16, align 16, !tbaa !9
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 16, !tbaa !9
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !9
  %23 = fmul <4 x float> %12, %22
  %24 = fadd <4 x float> %19, %23
  %25 = bitcast float* %7 to <4 x float>*
  store <4 x float> %24, <4 x float>* %25, align 16, !tbaa !9
  %26 = add nuw i64 %6, 4
  %27 = icmp eq i64 %26, 32000
  br i1 %27, label %34, label %5, !llvm.loop !666

28:                                               ; preds = %34
  %29 = tail call i64 @"\01_clock"() #19
  %30 = sub i64 %29, %2
  %31 = uitofp i64 %30 to double
  %32 = fdiv double %31, 1.000000e+06
  %33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.301, i64 0, i64 0), double %32)
  br label %51

34:                                               ; preds = %5
  %35 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %36 = add nuw nsw i32 %4, 1
  %37 = icmp eq i32 %36, 25000
  br i1 %37, label %28, label %3, !llvm.loop !667

38:                                               ; preds = %51
  store float %56, float* @temp, align 4, !tbaa !9
  br label %39

39:                                               ; preds = %38, %39
  %40 = phi i64 [ %45, %39 ], [ 0, %38 ]
  %41 = phi float [ %44, %39 ], [ 0.000000e+00, %38 ]
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %41, %43
  %45 = add nuw nsw i64 %40, 1
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %39, !llvm.loop !29

47:                                               ; preds = %39
  %48 = fadd float %44, %56
  %49 = fpext float %48 to double
  %50 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %49) #19
  ret i32 0

51:                                               ; preds = %28, %51
  %52 = phi i64 [ 0, %28 ], [ %57, %51 ]
  %53 = phi float [ 0.000000e+00, %28 ], [ %56, %51 ]
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %52
  %55 = load float, float* %54, align 4, !tbaa !9
  %56 = fadd float %55, %53
  %57 = add nuw nsw i64 %52, 1
  %58 = icmp eq i64 %57, 32000
  br i1 %58, label %38, label %51, !llvm.loop !668
}

; Function Attrs: nounwind ssp uwtable
define i32 @s481() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.302, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %32
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 50000
  br i1 %25, label %5, label %3, !llvm.loop !669

26:                                               ; preds = %3, %32
  %27 = phi i64 [ 0, %3 ], [ %41, %32 ]
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %29 = load float, float* %28, align 4, !tbaa !9
  %30 = fcmp olt float %29, 0.000000e+00
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  tail call void @exit(i32 0) #20
  unreachable

32:                                               ; preds = %26
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %34 = load float, float* %33, align 4, !tbaa !9
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %27
  %36 = load float, float* %35, align 4, !tbaa !9
  %37 = fmul float %34, %36
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %39, %37
  store float %40, float* %38, align 4, !tbaa !9
  %41 = add nuw nsw i64 %27, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %22, label %26, !llvm.loop !670
}

; Function Attrs: noreturn
declare void @exit(i32) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define i32 @s482() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %36
  %4 = phi i32 [ 0, %0 ], [ %38, %36 ]
  br label %22

5:                                                ; preds = %36
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.303, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %22, %3
  %23 = phi i64 [ %33, %22 ], [ 0, %3 ]
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = load float, float* %24, align 4, !tbaa !9
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %27 = load float, float* %26, align 4, !tbaa !9
  %28 = fmul float %25, %27
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = fadd float %30, %28
  store float %31, float* %29, align 4, !tbaa !9
  %32 = fcmp ule float %27, %25
  %33 = add nuw nsw i64 %23, 1
  %34 = icmp ult i64 %23, 31999
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %22, label %36, !llvm.loop !671

36:                                               ; preds = %22
  %37 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %38 = add nuw nsw i32 %4, 1
  %39 = icmp eq i32 %38, 50000
  br i1 %39, label %5, label %3, !llvm.loop !672
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone ssp uwtable willreturn
define i32 @min(i32 %0, i32 %1) local_unnamed_addr #13 {
  %3 = icmp slt i32 %0, %1
  %4 = select i1 %3, i32 %0, i32 %1
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define i32 @s491(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %52, %1
  %5 = phi i32 [ 0, %1 ], [ %54, %52 ]
  br label %6

6:                                                ; preds = %6, %4
  %7 = phi i64 [ 0, %4 ], [ %33, %6 ]
  %8 = or i64 %7, 1
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %11 = load float, float* %9, align 8, !tbaa !9
  %12 = load float, float* %10, align 4, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %15 = load float, float* %13, align 8, !tbaa !9
  %16 = load float, float* %14, align 4, !tbaa !9
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %7
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %8
  %19 = load float, float* %17, align 8, !tbaa !9
  %20 = load float, float* %18, align 4, !tbaa !9
  %21 = fmul float %15, %19
  %22 = fmul float %16, %20
  %23 = fadd float %11, %21
  %24 = fadd float %12, %22
  %25 = getelementptr inbounds i32, i32* %0, i64 %7
  %26 = getelementptr inbounds i32, i32* %0, i64 %8
  %27 = load i32, i32* %25, align 4, !tbaa !588
  %28 = load i32, i32* %26, align 4, !tbaa !588
  %29 = sext i32 %27 to i64
  %30 = sext i32 %28 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  store float %23, float* %31, align 4, !tbaa !9
  store float %24, float* %32, align 4, !tbaa !9
  %33 = add nuw i64 %7, 2
  %34 = icmp eq i64 %33, 32000
  br i1 %34, label %52, label %6, !llvm.loop !673

35:                                               ; preds = %52
  %36 = tail call i64 @"\01_clock"() #19
  %37 = sub i64 %36, %3
  %38 = uitofp i64 %37 to double
  %39 = fdiv double %38, 1.000000e+06
  %40 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.304, i64 0, i64 0), double %39)
  br label %41

41:                                               ; preds = %41, %35
  %42 = phi i64 [ 0, %35 ], [ %47, %41 ]
  %43 = phi float [ 0.000000e+00, %35 ], [ %46, %41 ]
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %42
  %45 = load float, float* %44, align 4, !tbaa !9
  %46 = fadd float %43, %45
  %47 = add nuw nsw i64 %42, 1
  %48 = icmp eq i64 %47, 32000
  br i1 %48, label %49, label %41, !llvm.loop !29

49:                                               ; preds = %41
  %50 = fpext float %46 to double
  %51 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %50) #19
  ret i32 0

52:                                               ; preds = %6
  %53 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %54 = add nuw nsw i32 %5, 1
  %55 = icmp eq i32 %54, 50000
  br i1 %55, label %35, label %4, !llvm.loop !674
}

; Function Attrs: nounwind ssp uwtable
define i32 @s4112(i32* noalias nocapture readonly %0, float %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i64 0, i64 0))
  %4 = tail call i64 @"\01_clock"() #19
  %5 = insertelement <2 x float> poison, float %1, i32 0
  %6 = shufflevector <2 x float> %5, <2 x float> poison, <2 x i32> zeroinitializer
  br label %7

7:                                                ; preds = %49, %2
  %8 = phi i32 [ 0, %2 ], [ %51, %49 ]
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %30, %9 ]
  %11 = or i64 %10, 1
  %12 = getelementptr inbounds i32, i32* %0, i64 %10
  %13 = getelementptr inbounds i32, i32* %0, i64 %11
  %14 = load i32, i32* %12, align 4, !tbaa !588
  %15 = load i32, i32* %13, align 4, !tbaa !588
  %16 = sext i32 %14 to i64
  %17 = sext i32 %15 to i64
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %16
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %17
  %20 = load float, float* %18, align 4, !tbaa !9
  %21 = load float, float* %19, align 4, !tbaa !9
  %22 = insertelement <2 x float> poison, float %20, i32 0
  %23 = insertelement <2 x float> %22, float %21, i32 1
  %24 = fmul <2 x float> %23, %6
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %10
  %26 = bitcast float* %25 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 8, !tbaa !9
  %28 = fadd <2 x float> %27, %24
  %29 = bitcast float* %25 to <2 x float>*
  store <2 x float> %28, <2 x float>* %29, align 8, !tbaa !9
  %30 = add nuw i64 %10, 2
  %31 = icmp eq i64 %30, 32000
  br i1 %31, label %49, label %9, !llvm.loop !675

32:                                               ; preds = %49
  %33 = tail call i64 @"\01_clock"() #19
  %34 = sub i64 %33, %4
  %35 = uitofp i64 %34 to double
  %36 = fdiv double %35, 1.000000e+06
  %37 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.305, i64 0, i64 0), double %36)
  br label %38

38:                                               ; preds = %38, %32
  %39 = phi i64 [ 0, %32 ], [ %44, %38 ]
  %40 = phi float [ 0.000000e+00, %32 ], [ %43, %38 ]
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fadd float %40, %42
  %44 = add nuw nsw i64 %39, 1
  %45 = icmp eq i64 %44, 32000
  br i1 %45, label %46, label %38, !llvm.loop !29

46:                                               ; preds = %38
  %47 = fpext float %43 to double
  %48 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %47) #19
  ret i32 0

49:                                               ; preds = %9
  %50 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %51 = add nuw nsw i32 %8, 1
  %52 = icmp eq i32 %51, 50000
  br i1 %52, label %32, label %7, !llvm.loop !676
}

; Function Attrs: nounwind ssp uwtable
define i32 @s4113(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %46, %1
  %5 = phi i32 [ 0, %1 ], [ %48, %46 ]
  br label %6

6:                                                ; preds = %6, %4
  %7 = phi i64 [ 0, %4 ], [ %27, %6 ]
  %8 = or i64 %7, 1
  %9 = getelementptr inbounds i32, i32* %0, i64 %7
  %10 = getelementptr inbounds i32, i32* %0, i64 %8
  %11 = load i32, i32* %9, align 4, !tbaa !588
  %12 = load i32, i32* %10, align 4, !tbaa !588
  %13 = sext i32 %11 to i64
  %14 = sext i32 %12 to i64
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14
  %17 = load float, float* %15, align 4, !tbaa !9
  %18 = load float, float* %16, align 4, !tbaa !9
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %7
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %8
  %21 = load float, float* %19, align 8, !tbaa !9
  %22 = load float, float* %20, align 4, !tbaa !9
  %23 = fadd float %17, %21
  %24 = fadd float %18, %22
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %13
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %14
  store float %23, float* %25, align 4, !tbaa !9
  store float %24, float* %26, align 4, !tbaa !9
  %27 = add nuw i64 %7, 2
  %28 = icmp eq i64 %27, 32000
  br i1 %28, label %46, label %6, !llvm.loop !677

29:                                               ; preds = %46
  %30 = tail call i64 @"\01_clock"() #19
  %31 = sub i64 %30, %3
  %32 = uitofp i64 %31 to double
  %33 = fdiv double %32, 1.000000e+06
  %34 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.306, i64 0, i64 0), double %33)
  br label %35

35:                                               ; preds = %35, %29
  %36 = phi i64 [ 0, %29 ], [ %41, %35 ]
  %37 = phi float [ 0.000000e+00, %29 ], [ %40, %35 ]
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %37, %39
  %41 = add nuw nsw i64 %36, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %43, label %35, !llvm.loop !29

43:                                               ; preds = %35
  %44 = fpext float %40 to double
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %44) #19
  ret i32 0

46:                                               ; preds = %6
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %48 = add nuw nsw i32 %5, 1
  %49 = icmp eq i32 %48, 50000
  br i1 %49, label %29, label %4, !llvm.loop !678
}

; Function Attrs: nounwind ssp uwtable
define i32 @s4114(i32* nocapture readonly %0, i32 %1) local_unnamed_addr #7 {
  %3 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0))
  %4 = tail call i64 @"\01_clock"() #19
  %5 = icmp slt i32 %1, 32001
  br i1 %5, label %6, label %89

6:                                                ; preds = %2
  %7 = add i32 %1, -1
  %8 = sext i32 %7 to i64
  %9 = call i64 @llvm.smax.i64(i64 %8, i64 31999)
  %10 = add nuw i64 %9, 1
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 2
  %13 = and i64 %11, -2
  %14 = add i64 %13, %8
  %15 = icmp eq i64 %11, %13
  br label %16

16:                                               ; preds = %6, %68
  %17 = phi i32 [ %70, %68 ], [ 0, %6 ]
  br i1 %12, label %49, label %18

18:                                               ; preds = %16, %18
  %19 = phi i64 [ %46, %18 ], [ 0, %16 ]
  %20 = add i64 %19, %8
  %21 = add i64 %20, 1
  %22 = getelementptr inbounds i32, i32* %0, i64 %20
  %23 = getelementptr inbounds i32, i32* %0, i64 %21
  %24 = load i32, i32* %22, align 4, !tbaa !588
  %25 = load i32, i32* %23, align 4, !tbaa !588
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %27 = bitcast float* %26 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 4, !tbaa !9
  %29 = sub i32 31999, %24
  %30 = sub i32 31999, %25
  %31 = sext i32 %29 to i64
  %32 = sext i32 %30 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %35 = load float, float* %33, align 4, !tbaa !9
  %36 = load float, float* %34, align 4, !tbaa !9
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %20
  %38 = bitcast float* %37 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4, !tbaa !9
  %40 = insertelement <2 x float> poison, float %35, i32 0
  %41 = insertelement <2 x float> %40, float %36, i32 1
  %42 = fmul <2 x float> %41, %39
  %43 = fadd <2 x float> %28, %42
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %20
  %45 = bitcast float* %44 to <2 x float>*
  store <2 x float> %43, <2 x float>* %45, align 4, !tbaa !9
  %46 = add nuw i64 %19, 2
  %47 = icmp eq i64 %46, %13
  br i1 %47, label %48, label %18, !llvm.loop !679

48:                                               ; preds = %18
  br i1 %15, label %68, label %49

49:                                               ; preds = %16, %48
  %50 = phi i64 [ %8, %16 ], [ %14, %48 ]
  br label %51

51:                                               ; preds = %49, %51
  %52 = phi i64 [ %66, %51 ], [ %50, %49 ]
  %53 = getelementptr inbounds i32, i32* %0, i64 %52
  %54 = load i32, i32* %53, align 4, !tbaa !588
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %52
  %56 = load float, float* %55, align 4, !tbaa !9
  %57 = sub i32 31999, %54
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %58
  %60 = load float, float* %59, align 4, !tbaa !9
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %52
  %62 = load float, float* %61, align 4, !tbaa !9
  %63 = fmul float %60, %62
  %64 = fadd float %56, %63
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  store float %64, float* %65, align 4, !tbaa !9
  %66 = add nsw i64 %52, 1
  %67 = icmp slt i64 %52, 31999
  br i1 %67, label %51, label %68, !llvm.loop !680

68:                                               ; preds = %51, %48
  %69 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %70 = add nuw nsw i32 %17, 1
  %71 = icmp eq i32 %70, 50000
  br i1 %71, label %72, label %16, !llvm.loop !681

72:                                               ; preds = %89, %68
  %73 = tail call i64 @"\01_clock"() #19
  %74 = sub i64 %73, %4
  %75 = uitofp i64 %74 to double
  %76 = fdiv double %75, 1.000000e+06
  %77 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.307, i64 0, i64 0), double %76)
  br label %78

78:                                               ; preds = %78, %72
  %79 = phi i64 [ 0, %72 ], [ %84, %78 ]
  %80 = phi float [ 0.000000e+00, %72 ], [ %83, %78 ]
  %81 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %82 = load float, float* %81, align 4, !tbaa !9
  %83 = fadd float %80, %82
  %84 = add nuw nsw i64 %79, 1
  %85 = icmp eq i64 %84, 32000
  br i1 %85, label %86, label %78, !llvm.loop !29

86:                                               ; preds = %78
  %87 = fpext float %83 to double
  %88 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %87) #19
  ret i32 0

89:                                               ; preds = %2, %89
  %90 = phi i32 [ %92, %89 ], [ 0, %2 ]
  %91 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %92 = add nuw nsw i32 %90, 1
  %93 = icmp eq i32 %92, 50000
  br i1 %93, label %72, label %89, !llvm.loop !681
}

; Function Attrs: nounwind ssp uwtable
define i32 @s4115(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %1, %14
  %5 = phi i32 [ 0, %1 ], [ %16, %14 ]
  br label %18

6:                                                ; preds = %14
  %7 = tail call i64 @"\01_clock"() #19
  %8 = sub i64 %7, %3
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, 1.000000e+06
  %11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.308, i64 0, i64 0), double %10)
  store float %29, float* @temp, align 4, !tbaa !9
  %12 = fpext float %29 to double
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %12) #19
  ret i32 0

14:                                               ; preds = %18
  %15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %16 = add nuw nsw i32 %5, 1
  %17 = icmp eq i32 %16, 50000
  br i1 %17, label %6, label %4, !llvm.loop !682

18:                                               ; preds = %4, %18
  %19 = phi i64 [ 0, %4 ], [ %30, %18 ]
  %20 = phi float [ 0.000000e+00, %4 ], [ %29, %18 ]
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %22 = load float, float* %21, align 4, !tbaa !9
  %23 = getelementptr inbounds i32, i32* %0, i64 %19
  %24 = load i32, i32* %23, align 4, !tbaa !588
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !9
  %28 = fmul float %22, %27
  %29 = fadd float %20, %28
  %30 = add nuw nsw i64 %19, 1
  %31 = icmp eq i64 %30, 32000
  br i1 %31, label %14, label %18, !llvm.loop !683
}

; Function Attrs: nounwind ssp uwtable
define i32 @s4116(i32* noalias nocapture readonly %0, i32 %1, i32 %2) local_unnamed_addr #7 {
  %4 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i64 0, i64 0))
  %5 = tail call i64 @"\01_clock"() #19
  %6 = add nsw i32 %1, -1
  %7 = sext i32 %6 to i64
  %8 = sext i32 %2 to i64
  br label %9

9:                                                ; preds = %3, %19
  %10 = phi i32 [ 0, %3 ], [ %21, %19 ]
  br label %23

11:                                               ; preds = %19
  %12 = tail call i64 @"\01_clock"() #19
  %13 = sub i64 %12, %5
  %14 = uitofp i64 %13 to double
  %15 = fdiv double %14, 1.000000e+06
  %16 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.309, i64 0, i64 0), double %15)
  store float %35, float* @temp, align 4, !tbaa !9
  %17 = fpext float %35 to double
  %18 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %17) #19
  ret i32 0

19:                                               ; preds = %23
  %20 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %21 = add nuw nsw i32 %10, 1
  %22 = icmp eq i32 %21, 5000000
  br i1 %22, label %11, label %9, !llvm.loop !684

23:                                               ; preds = %9, %23
  %24 = phi i64 [ 0, %9 ], [ %36, %23 ]
  %25 = phi float [ 0.000000e+00, %9 ], [ %35, %23 ]
  %26 = add nsw i64 %24, %8
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !9
  %29 = getelementptr inbounds i32, i32* %0, i64 %24
  %30 = load i32, i32* %29, align 4, !tbaa !588
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %7, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = fmul float %28, %33
  %35 = fadd float %25, %34
  %36 = add nuw nsw i64 %24, 1
  %37 = icmp eq i64 %36, 255
  br i1 %37, label %19, label %23, !llvm.loop !685
}

; Function Attrs: nounwind ssp uwtable
define i32 @s4117() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %46, %0
  %4 = phi i32 [ 0, %0 ], [ %48, %46 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %27, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 8, !tbaa !9
  %10 = lshr exact i64 %6, 1
  %11 = lshr exact i64 %6, 1
  %12 = and i64 %10, 2147483647
  %13 = and i64 %11, 2147483647
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %12
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %13
  %16 = load float, float* %14, align 4, !tbaa !9
  %17 = load float, float* %15, align 4, !tbaa !9
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 8, !tbaa !9
  %21 = insertelement <2 x float> poison, float %16, i32 0
  %22 = insertelement <2 x float> %21, float %17, i32 1
  %23 = fmul <2 x float> %22, %20
  %24 = fadd <2 x float> %9, %23
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %26 = bitcast float* %25 to <2 x float>*
  store <2 x float> %24, <2 x float>* %26, align 8, !tbaa !9
  %27 = add nuw i64 %6, 2
  %28 = icmp eq i64 %27, 32000
  br i1 %28, label %46, label %5, !llvm.loop !686

29:                                               ; preds = %46
  %30 = tail call i64 @"\01_clock"() #19
  %31 = sub i64 %30, %2
  %32 = uitofp i64 %31 to double
  %33 = fdiv double %32, 1.000000e+06
  %34 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.310, i64 0, i64 0), double %33)
  br label %35

35:                                               ; preds = %35, %29
  %36 = phi i64 [ 0, %29 ], [ %41, %35 ]
  %37 = phi float [ 0.000000e+00, %29 ], [ %40, %35 ]
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %39 = load float, float* %38, align 4, !tbaa !9
  %40 = fadd float %37, %39
  %41 = add nuw nsw i64 %36, 1
  %42 = icmp eq i64 %41, 32000
  br i1 %42, label %43, label %35, !llvm.loop !29

43:                                               ; preds = %35
  %44 = fpext float %40 to double
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %44) #19
  ret i32 0

46:                                               ; preds = %5
  %47 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %48 = add nuw nsw i32 %4, 1
  %49 = icmp eq i32 %48, 50000
  br i1 %49, label %29, label %3, !llvm.loop !687
}

; Function Attrs: nounwind ssp uwtable
define i32 @s4121() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %31, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !9
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !9
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !9
  %31 = add nuw i64 %6, 8
  %32 = icmp eq i64 %31, 32000
  br i1 %32, label %50, label %5, !llvm.loop !688

33:                                               ; preds = %50
  %34 = tail call i64 @"\01_clock"() #19
  %35 = sub i64 %34, %2
  %36 = uitofp i64 %35 to double
  %37 = fdiv double %36, 1.000000e+06
  %38 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.311, i64 0, i64 0), double %37)
  br label %39

39:                                               ; preds = %39, %33
  %40 = phi i64 [ 0, %33 ], [ %45, %39 ]
  %41 = phi float [ 0.000000e+00, %33 ], [ %44, %39 ]
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %41, %43
  %45 = add nuw nsw i64 %40, 1
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %39, !llvm.loop !29

47:                                               ; preds = %39
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #19
  ret i32 0

50:                                               ; preds = %5
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 50000
  br i1 %53, label %33, label %3, !llvm.loop !689
}

; Function Attrs: nounwind ssp uwtable
define i32 @va() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %3
  %4 = phi i32 [ 0, %0 ], [ %6, %3 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @a to i8*), i8* noundef nonnull align 16 dereferenceable(128000) bitcast ([32000 x float]* @b to i8*), i64 128000, i1 false)
  %5 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %6 = add nuw nsw i32 %4, 1
  %7 = icmp eq i32 %6, 500000
  br i1 %7, label %8, label %3, !llvm.loop !690

8:                                                ; preds = %3
  %9 = tail call i64 @"\01_clock"() #19
  %10 = sub i64 %9, %2
  %11 = uitofp i64 %10 to double
  %12 = fdiv double %11, 1.000000e+06
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.312, i64 0, i64 0), double %12)
  br label %14

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %20, %14 ]
  %16 = phi float [ 0.000000e+00, %8 ], [ %19, %14 ]
  %17 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %15
  %18 = load float, float* %17, align 4, !tbaa !9
  %19 = fadd float %16, %18
  %20 = add nuw nsw i64 %15, 1
  %21 = icmp eq i64 %20, 32000
  br i1 %21, label %22, label %14, !llvm.loop !29

22:                                               ; preds = %14
  %23 = fpext float %19 to double
  %24 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %23) #19
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @vag(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %40, %1
  %5 = phi i32 [ 0, %1 ], [ %42, %40 ]
  br label %6

6:                                                ; preds = %6, %4
  %7 = phi i64 [ 0, %4 ], [ %21, %6 ]
  %8 = or i64 %7, 1
  %9 = getelementptr inbounds i32, i32* %0, i64 %7
  %10 = getelementptr inbounds i32, i32* %0, i64 %8
  %11 = load i32, i32* %9, align 4, !tbaa !588
  %12 = load i32, i32* %10, align 4, !tbaa !588
  %13 = sext i32 %11 to i64
  %14 = sext i32 %12 to i64
  %15 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %13
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %14
  %17 = load float, float* %15, align 4, !tbaa !9
  %18 = load float, float* %16, align 4, !tbaa !9
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %8
  store float %17, float* %19, align 8, !tbaa !9
  store float %18, float* %20, align 4, !tbaa !9
  %21 = add nuw i64 %7, 2
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %40, label %6, !llvm.loop !691

23:                                               ; preds = %40
  %24 = tail call i64 @"\01_clock"() #19
  %25 = sub i64 %24, %3
  %26 = uitofp i64 %25 to double
  %27 = fdiv double %26, 1.000000e+06
  %28 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.313, i64 0, i64 0), double %27)
  br label %29

29:                                               ; preds = %29, %23
  %30 = phi i64 [ 0, %23 ], [ %35, %29 ]
  %31 = phi float [ 0.000000e+00, %23 ], [ %34, %29 ]
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = fadd float %31, %33
  %35 = add nuw nsw i64 %30, 1
  %36 = icmp eq i64 %35, 32000
  br i1 %36, label %37, label %29, !llvm.loop !29

37:                                               ; preds = %29
  %38 = fpext float %34 to double
  %39 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %38) #19
  ret i32 0

40:                                               ; preds = %6
  %41 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %42 = add nuw nsw i32 %5, 1
  %43 = icmp eq i32 %42, 100000
  br i1 %43, label %23, label %4, !llvm.loop !692
}

; Function Attrs: nounwind ssp uwtable
define i32 @vas(i32* noalias nocapture readonly %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  br label %4

4:                                                ; preds = %40, %1
  %5 = phi i32 [ 0, %1 ], [ %42, %40 ]
  br label %6

6:                                                ; preds = %6, %4
  %7 = phi i64 [ 0, %4 ], [ %21, %6 ]
  %8 = or i64 %7, 1
  %9 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %7
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %8
  %11 = load float, float* %9, align 8, !tbaa !9
  %12 = load float, float* %10, align 4, !tbaa !9
  %13 = getelementptr inbounds i32, i32* %0, i64 %7
  %14 = getelementptr inbounds i32, i32* %0, i64 %8
  %15 = load i32, i32* %13, align 4, !tbaa !588
  %16 = load i32, i32* %14, align 4, !tbaa !588
  %17 = sext i32 %15 to i64
  %18 = sext i32 %16 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %17
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  store float %11, float* %19, align 4, !tbaa !9
  store float %12, float* %20, align 4, !tbaa !9
  %21 = add nuw i64 %7, 2
  %22 = icmp eq i64 %21, 32000
  br i1 %22, label %40, label %6, !llvm.loop !693

23:                                               ; preds = %40
  %24 = tail call i64 @"\01_clock"() #19
  %25 = sub i64 %24, %3
  %26 = uitofp i64 %25 to double
  %27 = fdiv double %26, 1.000000e+06
  %28 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.314, i64 0, i64 0), double %27)
  br label %29

29:                                               ; preds = %29, %23
  %30 = phi i64 [ 0, %23 ], [ %35, %29 ]
  %31 = phi float [ 0.000000e+00, %23 ], [ %34, %29 ]
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = fadd float %31, %33
  %35 = add nuw nsw i64 %30, 1
  %36 = icmp eq i64 %35, 32000
  br i1 %36, label %37, label %29, !llvm.loop !29

37:                                               ; preds = %29
  %38 = fpext float %34 to double
  %39 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %38) #19
  ret i32 0

40:                                               ; preds = %6
  %41 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %42 = add nuw nsw i32 %5, 1
  %43 = icmp eq i32 %42, 100000
  br i1 %43, label %23, label %4, !llvm.loop !694
}

; Function Attrs: nounwind ssp uwtable
define i32 @vif() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %57, %0
  %4 = phi i32 [ 0, %0 ], [ %59, %57 ]
  br label %5

5:                                                ; preds = %37, %3
  %6 = phi i64 [ 0, %3 ], [ %38, %37 ]
  %7 = or i64 %6, 2
  %8 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 16, !tbaa !9
  %11 = getelementptr inbounds float, float* %8, i64 2
  %12 = bitcast float* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 8, !tbaa !9
  %14 = fcmp ogt <2 x float> %10, zeroinitializer
  %15 = fcmp ogt <2 x float> %13, zeroinitializer
  %16 = extractelement <2 x i1> %14, i32 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %5
  %18 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %19 = extractelement <2 x float> %10, i32 0
  store float %19, float* %18, align 16, !tbaa !9
  br label %20

20:                                               ; preds = %17, %5
  %21 = extractelement <2 x i1> %14, i32 1
  br i1 %21, label %22, label %26

22:                                               ; preds = %20
  %23 = or i64 %6, 1
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = extractelement <2 x float> %10, i32 1
  store float %25, float* %24, align 4, !tbaa !9
  br label %26

26:                                               ; preds = %22, %20
  %27 = extractelement <2 x i1> %15, i32 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %7
  %30 = extractelement <2 x float> %13, i32 0
  store float %30, float* %29, align 8, !tbaa !9
  br label %31

31:                                               ; preds = %28, %26
  %32 = extractelement <2 x i1> %15, i32 1
  br i1 %32, label %33, label %37

33:                                               ; preds = %31
  %34 = or i64 %6, 3
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = extractelement <2 x float> %13, i32 1
  store float %36, float* %35, align 4, !tbaa !9
  br label %37

37:                                               ; preds = %33, %31
  %38 = add nuw i64 %6, 4
  %39 = icmp eq i64 %38, 32000
  br i1 %39, label %57, label %5, !llvm.loop !695

40:                                               ; preds = %57
  %41 = tail call i64 @"\01_clock"() #19
  %42 = sub i64 %41, %2
  %43 = uitofp i64 %42 to double
  %44 = fdiv double %43, 1.000000e+06
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.315, i64 0, i64 0), double %44)
  br label %46

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %52, %46 ]
  %48 = phi float [ 0.000000e+00, %40 ], [ %51, %46 ]
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %50 = load float, float* %49, align 4, !tbaa !9
  %51 = fadd float %48, %50
  %52 = add nuw nsw i64 %47, 1
  %53 = icmp eq i64 %52, 32000
  br i1 %53, label %54, label %46, !llvm.loop !29

54:                                               ; preds = %46
  %55 = fpext float %51 to double
  %56 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %55) #19
  ret i32 0

57:                                               ; preds = %37
  %58 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %59 = add nuw nsw i32 %4, 1
  %60 = icmp eq i32 %59, 50000
  br i1 %60, label %40, label %3, !llvm.loop !696
}

; Function Attrs: nounwind ssp uwtable
define i32 @vpv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %42, %0
  %4 = phi i32 [ 0, %0 ], [ %44, %42 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %23, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fadd <4 x float> %9, %15
  %20 = fadd <4 x float> %12, %18
  %21 = bitcast float* %13 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 16, !tbaa !9
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 16, !tbaa !9
  %23 = add nuw i64 %6, 8
  %24 = icmp eq i64 %23, 32000
  br i1 %24, label %42, label %5, !llvm.loop !697

25:                                               ; preds = %42
  %26 = tail call i64 @"\01_clock"() #19
  %27 = sub i64 %26, %2
  %28 = uitofp i64 %27 to double
  %29 = fdiv double %28, 1.000000e+06
  %30 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.316, i64 0, i64 0), double %29)
  br label %31

31:                                               ; preds = %31, %25
  %32 = phi i64 [ 0, %25 ], [ %37, %31 ]
  %33 = phi float [ 0.000000e+00, %25 ], [ %36, %31 ]
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fadd float %33, %35
  %37 = add nuw nsw i64 %32, 1
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %39, label %31, !llvm.loop !29

39:                                               ; preds = %31
  %40 = fpext float %36 to double
  %41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %40) #19
  ret i32 0

42:                                               ; preds = %5
  %43 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %44 = add nuw nsw i32 %4, 1
  %45 = icmp eq i32 %44, 500000
  br i1 %45, label %25, label %3, !llvm.loop !698
}

; Function Attrs: nounwind ssp uwtable
define i32 @vtv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %42, %0
  %4 = phi i32 [ 0, %0 ], [ %44, %42 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %23, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = bitcast float* %13 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 16, !tbaa !9
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 16, !tbaa !9
  %23 = add nuw i64 %6, 8
  %24 = icmp eq i64 %23, 32000
  br i1 %24, label %42, label %5, !llvm.loop !699

25:                                               ; preds = %42
  %26 = tail call i64 @"\01_clock"() #19
  %27 = sub i64 %26, %2
  %28 = uitofp i64 %27 to double
  %29 = fdiv double %28, 1.000000e+06
  %30 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.317, i64 0, i64 0), double %29)
  br label %31

31:                                               ; preds = %31, %25
  %32 = phi i64 [ 0, %25 ], [ %37, %31 ]
  %33 = phi float [ 0.000000e+00, %25 ], [ %36, %31 ]
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fadd float %33, %35
  %37 = add nuw nsw i64 %32, 1
  %38 = icmp eq i64 %37, 32000
  br i1 %38, label %39, label %31, !llvm.loop !29

39:                                               ; preds = %31
  %40 = fpext float %36 to double
  %41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %40) #19
  ret i32 0

42:                                               ; preds = %5
  %43 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %44 = add nuw nsw i32 %4, 1
  %45 = icmp eq i32 %44, 500000
  br i1 %45, label %25, label %3, !llvm.loop !700
}

; Function Attrs: nounwind ssp uwtable
define i32 @vpvtv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %31, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !9
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !9
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !9
  %31 = add nuw i64 %6, 8
  %32 = icmp eq i64 %31, 32000
  br i1 %32, label %50, label %5, !llvm.loop !701

33:                                               ; preds = %50
  %34 = tail call i64 @"\01_clock"() #19
  %35 = sub i64 %34, %2
  %36 = uitofp i64 %35 to double
  %37 = fdiv double %36, 1.000000e+06
  %38 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.318, i64 0, i64 0), double %37)
  br label %39

39:                                               ; preds = %39, %33
  %40 = phi i64 [ 0, %33 ], [ %45, %39 ]
  %41 = phi float [ 0.000000e+00, %33 ], [ %44, %39 ]
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %41, %43
  %45 = add nuw nsw i64 %40, 1
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %39, !llvm.loop !29

47:                                               ; preds = %39
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #19
  ret i32 0

50:                                               ; preds = %5
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 200000
  br i1 %53, label %33, label %3, !llvm.loop !702
}

; Function Attrs: nounwind ssp uwtable
define i32 @vpvts(float %0) local_unnamed_addr #7 {
  %2 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i64 0, i64 0))
  %3 = tail call i64 @"\01_clock"() #19
  %4 = insertelement <4 x float> poison, float %0, i32 0
  %5 = shufflevector <4 x float> %4, <4 x float> poison, <4 x i32> zeroinitializer
  %6 = insertelement <4 x float> poison, float %0, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %49, %1
  %9 = phi i32 [ 0, %1 ], [ %51, %49 ]
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi i64 [ 0, %8 ], [ %30, %10 ]
  %12 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %11
  %13 = bitcast float* %12 to <4 x float>*
  %14 = load <4 x float>, <4 x float>* %13, align 16, !tbaa !9
  %15 = getelementptr inbounds float, float* %12, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 16, !tbaa !9
  %18 = fmul <4 x float> %14, %5
  %19 = fmul <4 x float> %17, %7
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %11
  %21 = bitcast float* %20 to <4 x float>*
  %22 = load <4 x float>, <4 x float>* %21, align 16, !tbaa !9
  %23 = getelementptr inbounds float, float* %20, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  %25 = load <4 x float>, <4 x float>* %24, align 16, !tbaa !9
  %26 = fadd <4 x float> %22, %18
  %27 = fadd <4 x float> %25, %19
  %28 = bitcast float* %20 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 16, !tbaa !9
  %29 = bitcast float* %23 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !9
  %30 = add nuw i64 %11, 8
  %31 = icmp eq i64 %30, 32000
  br i1 %31, label %49, label %10, !llvm.loop !703

32:                                               ; preds = %49
  %33 = tail call i64 @"\01_clock"() #19
  %34 = sub i64 %33, %3
  %35 = uitofp i64 %34 to double
  %36 = fdiv double %35, 1.000000e+06
  %37 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.319, i64 0, i64 0), double %36)
  br label %38

38:                                               ; preds = %38, %32
  %39 = phi i64 [ 0, %32 ], [ %44, %38 ]
  %40 = phi float [ 0.000000e+00, %32 ], [ %43, %38 ]
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %42 = load float, float* %41, align 4, !tbaa !9
  %43 = fadd float %40, %42
  %44 = add nuw nsw i64 %39, 1
  %45 = icmp eq i64 %44, 32000
  br i1 %45, label %46, label %38, !llvm.loop !29

46:                                               ; preds = %38
  %47 = fpext float %43 to double
  %48 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %47) #19
  ret i32 0

49:                                               ; preds = %10
  %50 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %51 = add nuw nsw i32 %9, 1
  %52 = icmp eq i32 %51, 50000
  br i1 %52, label %32, label %8, !llvm.loop !704
}

; Function Attrs: nounwind ssp uwtable
define i32 @vpvpv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %31, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fadd <4 x float> %9, %15
  %20 = fadd <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !9
  %27 = fadd <4 x float> %23, %19
  %28 = fadd <4 x float> %26, %20
  %29 = bitcast float* %21 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !9
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !9
  %31 = add nuw i64 %6, 8
  %32 = icmp eq i64 %31, 32000
  br i1 %32, label %50, label %5, !llvm.loop !705

33:                                               ; preds = %50
  %34 = tail call i64 @"\01_clock"() #19
  %35 = sub i64 %34, %2
  %36 = uitofp i64 %35 to double
  %37 = fdiv double %36, 1.000000e+06
  %38 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.320, i64 0, i64 0), double %37)
  br label %39

39:                                               ; preds = %39, %33
  %40 = phi i64 [ 0, %33 ], [ %45, %39 ]
  %41 = phi float [ 0.000000e+00, %33 ], [ %44, %39 ]
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %41, %43
  %45 = add nuw nsw i64 %40, 1
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %39, !llvm.loop !29

47:                                               ; preds = %39
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #19
  ret i32 0

50:                                               ; preds = %5
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 200000
  br i1 %53, label %33, label %3, !llvm.loop !706
}

; Function Attrs: nounwind ssp uwtable
define i32 @vtvtv() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %50, %0
  %4 = phi i32 [ 0, %0 ], [ %52, %50 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %31, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds float, float* %7, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds float, float* %13, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = fmul <4 x float> %9, %15
  %20 = fmul <4 x float> %12, %18
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 16, !tbaa !9
  %24 = getelementptr inbounds float, float* %21, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 16, !tbaa !9
  %27 = fmul <4 x float> %19, %23
  %28 = fmul <4 x float> %20, %26
  %29 = bitcast float* %7 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 16, !tbaa !9
  %30 = bitcast float* %10 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 16, !tbaa !9
  %31 = add nuw i64 %6, 8
  %32 = icmp eq i64 %31, 32000
  br i1 %32, label %50, label %5, !llvm.loop !707

33:                                               ; preds = %50
  %34 = tail call i64 @"\01_clock"() #19
  %35 = sub i64 %34, %2
  %36 = uitofp i64 %35 to double
  %37 = fdiv double %36, 1.000000e+06
  %38 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.321, i64 0, i64 0), double %37)
  br label %39

39:                                               ; preds = %39, %33
  %40 = phi i64 [ 0, %33 ], [ %45, %39 ]
  %41 = phi float [ 0.000000e+00, %33 ], [ %44, %39 ]
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %43 = load float, float* %42, align 4, !tbaa !9
  %44 = fadd float %41, %43
  %45 = add nuw nsw i64 %40, 1
  %46 = icmp eq i64 %45, 32000
  br i1 %46, label %47, label %39, !llvm.loop !29

47:                                               ; preds = %39
  %48 = fpext float %44 to double
  %49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %48) #19
  ret i32 0

50:                                               ; preds = %5
  %51 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %52 = add nuw nsw i32 %4, 1
  %53 = icmp eq i32 %52, 200000
  br i1 %53, label %33, label %3, !llvm.loop !708
}

; Function Attrs: nounwind ssp uwtable
define i32 @vsumr() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %22
  %4 = phi i32 [ 0, %0 ], [ %24, %22 ]
  br label %26

5:                                                ; preds = %22
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i64 0, i64 0), double %9)
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi i64 [ 0, %5 ], [ %17, %11 ]
  %13 = phi float [ 0.000000e+00, %5 ], [ %16, %11 ]
  %14 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %12
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fadd float %13, %15
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, 32000
  br i1 %18, label %19, label %11, !llvm.loop !29

19:                                               ; preds = %11
  %20 = fpext float %16 to double
  %21 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %20) #19
  ret i32 0

22:                                               ; preds = %26
  %23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %31) #19
  %24 = add nuw nsw i32 %4, 1
  %25 = icmp eq i32 %24, 500000
  br i1 %25, label %5, label %3, !llvm.loop !709

26:                                               ; preds = %3, %26
  %27 = phi i64 [ 0, %3 ], [ %32, %26 ]
  %28 = phi float [ 0.000000e+00, %3 ], [ %31, %26 ]
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %30 = load float, float* %29, align 4, !tbaa !9
  %31 = fadd float %28, %30
  %32 = add nuw nsw i64 %27, 1
  %33 = icmp eq i64 %32, 32000
  br i1 %33, label %22, label %26, !llvm.loop !710
}

; Function Attrs: nounwind ssp uwtable
define i32 @vdotr() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %0, %13
  %4 = phi i32 [ 0, %0 ], [ %15, %13 ]
  br label %17

5:                                                ; preds = %13
  %6 = tail call i64 @"\01_clock"() #19
  %7 = sub i64 %6, %2
  %8 = uitofp i64 %7 to double
  %9 = fdiv double %8, 1.000000e+06
  %10 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.323, i64 0, i64 0), double %9)
  store float %25, float* @temp, align 4, !tbaa !9
  %11 = fpext float %25 to double
  %12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %11) #19
  ret i32 0

13:                                               ; preds = %17
  %14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %25) #19
  %15 = add nuw nsw i32 %4, 1
  %16 = icmp eq i32 %15, 500000
  br i1 %16, label %5, label %3, !llvm.loop !711

17:                                               ; preds = %3, %17
  %18 = phi i64 [ 0, %3 ], [ %26, %17 ]
  %19 = phi float [ 0.000000e+00, %3 ], [ %25, %17 ]
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %21 = load float, float* %20, align 4, !tbaa !9
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %23 = load float, float* %22, align 4, !tbaa !9
  %24 = fmul float %21, %23
  %25 = fadd float %19, %24
  %26 = add nuw nsw i64 %18, 1
  %27 = icmp eq i64 %26, 32000
  br i1 %27, label %13, label %17, !llvm.loop !712
}

; Function Attrs: nounwind ssp uwtable
define i32 @vbor() local_unnamed_addr #7 {
  %1 = tail call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i64 0, i64 0))
  %2 = tail call i64 @"\01_clock"() #19
  br label %3

3:                                                ; preds = %84, %0
  %4 = phi i32 [ 0, %0 ], [ %86, %84 ]
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i64 [ 0, %3 ], [ %76, %5 ]
  %7 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %6
  %8 = bitcast float* %7 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16, !tbaa !9
  %10 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %6
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16, !tbaa !9
  %13 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %6
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 16, !tbaa !9
  %16 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %6
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 16, !tbaa !9
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %6
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !9
  %22 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %6
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !9
  %25 = fmul <4 x float> %9, %12
  %26 = fmul <4 x float> %25, %15
  %27 = fmul <4 x float> %25, %18
  %28 = fadd <4 x float> %26, %27
  %29 = fmul <4 x float> %25, %21
  %30 = fadd <4 x float> %28, %29
  %31 = fmul <4 x float> %25, %24
  %32 = fadd <4 x float> %30, %31
  %33 = fmul <4 x float> %9, %15
  %34 = fmul <4 x float> %33, %18
  %35 = fadd <4 x float> %34, %32
  %36 = fmul <4 x float> %33, %21
  %37 = fadd <4 x float> %36, %35
  %38 = fmul <4 x float> %33, %24
  %39 = fadd <4 x float> %38, %37
  %40 = fmul <4 x float> %9, %18
  %41 = fmul <4 x float> %40, %21
  %42 = fadd <4 x float> %41, %39
  %43 = fmul <4 x float> %40, %24
  %44 = fadd <4 x float> %43, %42
  %45 = fmul <4 x float> %9, %21
  %46 = fmul <4 x float> %45, %24
  %47 = fadd <4 x float> %46, %44
  %48 = fmul <4 x float> %12, %15
  %49 = fmul <4 x float> %48, %18
  %50 = fmul <4 x float> %48, %21
  %51 = fadd <4 x float> %49, %50
  %52 = fmul <4 x float> %48, %24
  %53 = fadd <4 x float> %51, %52
  %54 = fmul <4 x float> %12, %18
  %55 = fmul <4 x float> %54, %21
  %56 = fadd <4 x float> %55, %53
  %57 = fmul <4 x float> %54, %24
  %58 = fadd <4 x float> %57, %56
  %59 = fmul <4 x float> %12, %21
  %60 = fmul <4 x float> %59, %24
  %61 = fadd <4 x float> %60, %58
  %62 = fmul <4 x float> %15, %18
  %63 = fmul <4 x float> %62, %21
  %64 = fmul <4 x float> %62, %24
  %65 = fadd <4 x float> %63, %64
  %66 = fmul <4 x float> %15, %21
  %67 = fmul <4 x float> %66, %24
  %68 = fadd <4 x float> %67, %65
  %69 = fmul <4 x float> %18, %21
  %70 = fmul <4 x float> %69, %24
  %71 = fmul <4 x float> %61, %47
  %72 = fmul <4 x float> %68, %71
  %73 = fmul <4 x float> %70, %72
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %6
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> %73, <4 x float>* %75, align 16, !tbaa !9
  %76 = add nuw i64 %6, 4
  %77 = icmp eq i64 %76, 256
  br i1 %77, label %84, label %5, !llvm.loop !713

78:                                               ; preds = %84
  %79 = tail call i64 @"\01_clock"() #19
  %80 = sub i64 %79, %2
  %81 = uitofp i64 %80 to double
  %82 = fdiv double %81, 1.000000e+06
  %83 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.324, i64 0, i64 0), double %82)
  br label %91

84:                                               ; preds = %5
  %85 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00) #19
  %86 = add nuw nsw i32 %4, 1
  %87 = icmp eq i32 %86, 500000
  br i1 %87, label %78, label %3, !llvm.loop !714

88:                                               ; preds = %91
  store float %96, float* @temp, align 4, !tbaa !9
  %89 = fpext float %96 to double
  %90 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %89) #19
  ret i32 0

91:                                               ; preds = %78, %91
  %92 = phi i64 [ 0, %78 ], [ %97, %91 ]
  %93 = phi float [ 0.000000e+00, %78 ], [ %96, %91 ]
  %94 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %92
  %95 = load float, float* %94, align 4, !tbaa !9
  %96 = fadd float %95, %93
  %97 = add nuw nsw i64 %92, 1
  %98 = icmp eq i64 %97, 32000
  br i1 %98, label %88, label %91, !llvm.loop !715
}

; Function Attrs: nofree nounwind ssp uwtable
define void @set(i32* nocapture %0, float* nocapture %1, float* nocapture %2) local_unnamed_addr #4 {
  %4 = tail call align 16 dereferenceable_or_null(128000) i8* @malloc(i64 128000) #21
  store i8* %4, i8** bitcast (float** @xx to i8**), align 8, !tbaa !591
  %5 = tail call i32 @putchar(i32 10)
  br label %6

6:                                                ; preds = %6, %3
  %7 = phi i64 [ 0, %3 ], [ %38, %6 ]
  %8 = mul i64 %7, 5
  %9 = add i64 %8, 5
  %10 = add nuw nsw i64 %8, 4
  %11 = add i64 %8, 9
  %12 = getelementptr inbounds i32, i32* %0, i64 %8
  %13 = getelementptr inbounds i32, i32* %0, i64 %9
  %14 = trunc i64 %10 to i32
  %15 = trunc i64 %11 to i32
  store i32 %14, i32* %12, align 4, !tbaa !588
  store i32 %15, i32* %13, align 4, !tbaa !588
  %16 = add nuw nsw i64 %8, 2
  %17 = add i64 %8, 7
  %18 = or i64 %8, 1
  %19 = add i64 %8, 6
  %20 = getelementptr inbounds i32, i32* %0, i64 %18
  %21 = getelementptr inbounds i32, i32* %0, i64 %19
  %22 = trunc i64 %16 to i32
  %23 = trunc i64 %17 to i32
  store i32 %22, i32* %20, align 4, !tbaa !588
  store i32 %23, i32* %21, align 4, !tbaa !588
  %24 = getelementptr inbounds i32, i32* %0, i64 %16
  %25 = getelementptr inbounds i32, i32* %0, i64 %17
  %26 = trunc i64 %8 to i32
  %27 = trunc i64 %9 to i32
  store i32 %26, i32* %24, align 4, !tbaa !588
  store i32 %27, i32* %25, align 4, !tbaa !588
  %28 = add nuw nsw i64 %8, 3
  %29 = add i64 %8, 8
  %30 = getelementptr inbounds i32, i32* %0, i64 %28
  %31 = getelementptr inbounds i32, i32* %0, i64 %29
  %32 = trunc i64 %28 to i32
  %33 = trunc i64 %29 to i32
  store i32 %32, i32* %30, align 4, !tbaa !588
  store i32 %33, i32* %31, align 4, !tbaa !588
  %34 = getelementptr inbounds i32, i32* %0, i64 %10
  %35 = getelementptr inbounds i32, i32* %0, i64 %11
  %36 = trunc i64 %18 to i32
  %37 = trunc i64 %19 to i32
  store i32 %36, i32* %34, align 4, !tbaa !588
  store i32 %37, i32* %35, align 4, !tbaa !588
  %38 = add nuw i64 %7, 2
  %39 = icmp eq i64 %38, 6400
  br i1 %39, label %475, label %6, !llvm.loop !716

40:                                               ; preds = %475, %40
  %41 = phi i64 [ %42, %40 ], [ 0, %475 ]
  %42 = add nuw nsw i64 %41, 1
  %43 = trunc i64 %42 to i32
  %44 = sitofp i32 %43 to float
  %45 = fdiv float 1.000000e+00, %44
  %46 = insertelement <4 x float> poison, float %45, i32 0
  %47 = shufflevector <4 x float> %46, <4 x float> poison, <4 x i32> zeroinitializer
  %48 = insertelement <4 x float> poison, float %45, i32 0
  %49 = shufflevector <4 x float> %48, <4 x float> poison, <4 x i32> zeroinitializer
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 0
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> %47, <4 x float>* %51, align 16, !tbaa !9
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 4
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> %49, <4 x float>* %53, align 16, !tbaa !9
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 8
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %47, <4 x float>* %55, align 16, !tbaa !9
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 12
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> %49, <4 x float>* %57, align 16, !tbaa !9
  %58 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 16
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> %47, <4 x float>* %59, align 16, !tbaa !9
  %60 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 20
  %61 = bitcast float* %60 to <4 x float>*
  store <4 x float> %49, <4 x float>* %61, align 16, !tbaa !9
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 24
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> %47, <4 x float>* %63, align 16, !tbaa !9
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 28
  %65 = bitcast float* %64 to <4 x float>*
  store <4 x float> %49, <4 x float>* %65, align 16, !tbaa !9
  %66 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 32
  %67 = bitcast float* %66 to <4 x float>*
  store <4 x float> %47, <4 x float>* %67, align 16, !tbaa !9
  %68 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 36
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> %49, <4 x float>* %69, align 16, !tbaa !9
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 40
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> %47, <4 x float>* %71, align 16, !tbaa !9
  %72 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 44
  %73 = bitcast float* %72 to <4 x float>*
  store <4 x float> %49, <4 x float>* %73, align 16, !tbaa !9
  %74 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 48
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> %47, <4 x float>* %75, align 16, !tbaa !9
  %76 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 52
  %77 = bitcast float* %76 to <4 x float>*
  store <4 x float> %49, <4 x float>* %77, align 16, !tbaa !9
  %78 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 56
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> %47, <4 x float>* %79, align 16, !tbaa !9
  %80 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 60
  %81 = bitcast float* %80 to <4 x float>*
  store <4 x float> %49, <4 x float>* %81, align 16, !tbaa !9
  %82 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 64
  %83 = bitcast float* %82 to <4 x float>*
  store <4 x float> %47, <4 x float>* %83, align 16, !tbaa !9
  %84 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 68
  %85 = bitcast float* %84 to <4 x float>*
  store <4 x float> %49, <4 x float>* %85, align 16, !tbaa !9
  %86 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 72
  %87 = bitcast float* %86 to <4 x float>*
  store <4 x float> %47, <4 x float>* %87, align 16, !tbaa !9
  %88 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 76
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> %49, <4 x float>* %89, align 16, !tbaa !9
  %90 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 80
  %91 = bitcast float* %90 to <4 x float>*
  store <4 x float> %47, <4 x float>* %91, align 16, !tbaa !9
  %92 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 84
  %93 = bitcast float* %92 to <4 x float>*
  store <4 x float> %49, <4 x float>* %93, align 16, !tbaa !9
  %94 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 88
  %95 = bitcast float* %94 to <4 x float>*
  store <4 x float> %47, <4 x float>* %95, align 16, !tbaa !9
  %96 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 92
  %97 = bitcast float* %96 to <4 x float>*
  store <4 x float> %49, <4 x float>* %97, align 16, !tbaa !9
  %98 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 96
  %99 = bitcast float* %98 to <4 x float>*
  store <4 x float> %47, <4 x float>* %99, align 16, !tbaa !9
  %100 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 100
  %101 = bitcast float* %100 to <4 x float>*
  store <4 x float> %49, <4 x float>* %101, align 16, !tbaa !9
  %102 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 104
  %103 = bitcast float* %102 to <4 x float>*
  store <4 x float> %47, <4 x float>* %103, align 16, !tbaa !9
  %104 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 108
  %105 = bitcast float* %104 to <4 x float>*
  store <4 x float> %49, <4 x float>* %105, align 16, !tbaa !9
  %106 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 112
  %107 = bitcast float* %106 to <4 x float>*
  store <4 x float> %47, <4 x float>* %107, align 16, !tbaa !9
  %108 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 116
  %109 = bitcast float* %108 to <4 x float>*
  store <4 x float> %49, <4 x float>* %109, align 16, !tbaa !9
  %110 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 120
  %111 = bitcast float* %110 to <4 x float>*
  store <4 x float> %47, <4 x float>* %111, align 16, !tbaa !9
  %112 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 124
  %113 = bitcast float* %112 to <4 x float>*
  store <4 x float> %49, <4 x float>* %113, align 16, !tbaa !9
  %114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 128
  %115 = bitcast float* %114 to <4 x float>*
  store <4 x float> %47, <4 x float>* %115, align 16, !tbaa !9
  %116 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 132
  %117 = bitcast float* %116 to <4 x float>*
  store <4 x float> %49, <4 x float>* %117, align 16, !tbaa !9
  %118 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 136
  %119 = bitcast float* %118 to <4 x float>*
  store <4 x float> %47, <4 x float>* %119, align 16, !tbaa !9
  %120 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 140
  %121 = bitcast float* %120 to <4 x float>*
  store <4 x float> %49, <4 x float>* %121, align 16, !tbaa !9
  %122 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 144
  %123 = bitcast float* %122 to <4 x float>*
  store <4 x float> %47, <4 x float>* %123, align 16, !tbaa !9
  %124 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 148
  %125 = bitcast float* %124 to <4 x float>*
  store <4 x float> %49, <4 x float>* %125, align 16, !tbaa !9
  %126 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 152
  %127 = bitcast float* %126 to <4 x float>*
  store <4 x float> %47, <4 x float>* %127, align 16, !tbaa !9
  %128 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 156
  %129 = bitcast float* %128 to <4 x float>*
  store <4 x float> %49, <4 x float>* %129, align 16, !tbaa !9
  %130 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 160
  %131 = bitcast float* %130 to <4 x float>*
  store <4 x float> %47, <4 x float>* %131, align 16, !tbaa !9
  %132 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 164
  %133 = bitcast float* %132 to <4 x float>*
  store <4 x float> %49, <4 x float>* %133, align 16, !tbaa !9
  %134 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 168
  %135 = bitcast float* %134 to <4 x float>*
  store <4 x float> %47, <4 x float>* %135, align 16, !tbaa !9
  %136 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 172
  %137 = bitcast float* %136 to <4 x float>*
  store <4 x float> %49, <4 x float>* %137, align 16, !tbaa !9
  %138 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 176
  %139 = bitcast float* %138 to <4 x float>*
  store <4 x float> %47, <4 x float>* %139, align 16, !tbaa !9
  %140 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 180
  %141 = bitcast float* %140 to <4 x float>*
  store <4 x float> %49, <4 x float>* %141, align 16, !tbaa !9
  %142 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 184
  %143 = bitcast float* %142 to <4 x float>*
  store <4 x float> %47, <4 x float>* %143, align 16, !tbaa !9
  %144 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 188
  %145 = bitcast float* %144 to <4 x float>*
  store <4 x float> %49, <4 x float>* %145, align 16, !tbaa !9
  %146 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 192
  %147 = bitcast float* %146 to <4 x float>*
  store <4 x float> %47, <4 x float>* %147, align 16, !tbaa !9
  %148 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 196
  %149 = bitcast float* %148 to <4 x float>*
  store <4 x float> %49, <4 x float>* %149, align 16, !tbaa !9
  %150 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 200
  %151 = bitcast float* %150 to <4 x float>*
  store <4 x float> %47, <4 x float>* %151, align 16, !tbaa !9
  %152 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 204
  %153 = bitcast float* %152 to <4 x float>*
  store <4 x float> %49, <4 x float>* %153, align 16, !tbaa !9
  %154 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 208
  %155 = bitcast float* %154 to <4 x float>*
  store <4 x float> %47, <4 x float>* %155, align 16, !tbaa !9
  %156 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 212
  %157 = bitcast float* %156 to <4 x float>*
  store <4 x float> %49, <4 x float>* %157, align 16, !tbaa !9
  %158 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 216
  %159 = bitcast float* %158 to <4 x float>*
  store <4 x float> %47, <4 x float>* %159, align 16, !tbaa !9
  %160 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 220
  %161 = bitcast float* %160 to <4 x float>*
  store <4 x float> %49, <4 x float>* %161, align 16, !tbaa !9
  %162 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 224
  %163 = bitcast float* %162 to <4 x float>*
  store <4 x float> %47, <4 x float>* %163, align 16, !tbaa !9
  %164 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 228
  %165 = bitcast float* %164 to <4 x float>*
  store <4 x float> %49, <4 x float>* %165, align 16, !tbaa !9
  %166 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 232
  %167 = bitcast float* %166 to <4 x float>*
  store <4 x float> %47, <4 x float>* %167, align 16, !tbaa !9
  %168 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 236
  %169 = bitcast float* %168 to <4 x float>*
  store <4 x float> %49, <4 x float>* %169, align 16, !tbaa !9
  %170 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 240
  %171 = bitcast float* %170 to <4 x float>*
  store <4 x float> %47, <4 x float>* %171, align 16, !tbaa !9
  %172 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 244
  %173 = bitcast float* %172 to <4 x float>*
  store <4 x float> %49, <4 x float>* %173, align 16, !tbaa !9
  %174 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 248
  %175 = bitcast float* %174 to <4 x float>*
  store <4 x float> %47, <4 x float>* %175, align 16, !tbaa !9
  %176 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %41, i64 252
  %177 = bitcast float* %176 to <4 x float>*
  store <4 x float> %49, <4 x float>* %177, align 16, !tbaa !9
  %178 = icmp eq i64 %42, 256
  br i1 %178, label %179, label %40, !llvm.loop !23

179:                                              ; preds = %40, %179
  %180 = phi i64 [ %181, %179 ], [ 0, %40 ]
  %181 = add nuw nsw i64 %180, 1
  %182 = trunc i64 %181 to i32
  %183 = sitofp i32 %182 to float
  %184 = fdiv float 1.000000e+00, %183
  %185 = insertelement <4 x float> poison, float %184, i32 0
  %186 = shufflevector <4 x float> %185, <4 x float> poison, <4 x i32> zeroinitializer
  %187 = insertelement <4 x float> poison, float %184, i32 0
  %188 = shufflevector <4 x float> %187, <4 x float> poison, <4 x i32> zeroinitializer
  %189 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 0
  %190 = bitcast float* %189 to <4 x float>*
  store <4 x float> %186, <4 x float>* %190, align 16, !tbaa !9
  %191 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 4
  %192 = bitcast float* %191 to <4 x float>*
  store <4 x float> %188, <4 x float>* %192, align 16, !tbaa !9
  %193 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 8
  %194 = bitcast float* %193 to <4 x float>*
  store <4 x float> %186, <4 x float>* %194, align 16, !tbaa !9
  %195 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 12
  %196 = bitcast float* %195 to <4 x float>*
  store <4 x float> %188, <4 x float>* %196, align 16, !tbaa !9
  %197 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 16
  %198 = bitcast float* %197 to <4 x float>*
  store <4 x float> %186, <4 x float>* %198, align 16, !tbaa !9
  %199 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 20
  %200 = bitcast float* %199 to <4 x float>*
  store <4 x float> %188, <4 x float>* %200, align 16, !tbaa !9
  %201 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 24
  %202 = bitcast float* %201 to <4 x float>*
  store <4 x float> %186, <4 x float>* %202, align 16, !tbaa !9
  %203 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 28
  %204 = bitcast float* %203 to <4 x float>*
  store <4 x float> %188, <4 x float>* %204, align 16, !tbaa !9
  %205 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 32
  %206 = bitcast float* %205 to <4 x float>*
  store <4 x float> %186, <4 x float>* %206, align 16, !tbaa !9
  %207 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 36
  %208 = bitcast float* %207 to <4 x float>*
  store <4 x float> %188, <4 x float>* %208, align 16, !tbaa !9
  %209 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 40
  %210 = bitcast float* %209 to <4 x float>*
  store <4 x float> %186, <4 x float>* %210, align 16, !tbaa !9
  %211 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 44
  %212 = bitcast float* %211 to <4 x float>*
  store <4 x float> %188, <4 x float>* %212, align 16, !tbaa !9
  %213 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 48
  %214 = bitcast float* %213 to <4 x float>*
  store <4 x float> %186, <4 x float>* %214, align 16, !tbaa !9
  %215 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 52
  %216 = bitcast float* %215 to <4 x float>*
  store <4 x float> %188, <4 x float>* %216, align 16, !tbaa !9
  %217 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 56
  %218 = bitcast float* %217 to <4 x float>*
  store <4 x float> %186, <4 x float>* %218, align 16, !tbaa !9
  %219 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 60
  %220 = bitcast float* %219 to <4 x float>*
  store <4 x float> %188, <4 x float>* %220, align 16, !tbaa !9
  %221 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 64
  %222 = bitcast float* %221 to <4 x float>*
  store <4 x float> %186, <4 x float>* %222, align 16, !tbaa !9
  %223 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 68
  %224 = bitcast float* %223 to <4 x float>*
  store <4 x float> %188, <4 x float>* %224, align 16, !tbaa !9
  %225 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 72
  %226 = bitcast float* %225 to <4 x float>*
  store <4 x float> %186, <4 x float>* %226, align 16, !tbaa !9
  %227 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 76
  %228 = bitcast float* %227 to <4 x float>*
  store <4 x float> %188, <4 x float>* %228, align 16, !tbaa !9
  %229 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 80
  %230 = bitcast float* %229 to <4 x float>*
  store <4 x float> %186, <4 x float>* %230, align 16, !tbaa !9
  %231 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 84
  %232 = bitcast float* %231 to <4 x float>*
  store <4 x float> %188, <4 x float>* %232, align 16, !tbaa !9
  %233 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 88
  %234 = bitcast float* %233 to <4 x float>*
  store <4 x float> %186, <4 x float>* %234, align 16, !tbaa !9
  %235 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 92
  %236 = bitcast float* %235 to <4 x float>*
  store <4 x float> %188, <4 x float>* %236, align 16, !tbaa !9
  %237 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 96
  %238 = bitcast float* %237 to <4 x float>*
  store <4 x float> %186, <4 x float>* %238, align 16, !tbaa !9
  %239 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 100
  %240 = bitcast float* %239 to <4 x float>*
  store <4 x float> %188, <4 x float>* %240, align 16, !tbaa !9
  %241 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 104
  %242 = bitcast float* %241 to <4 x float>*
  store <4 x float> %186, <4 x float>* %242, align 16, !tbaa !9
  %243 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 108
  %244 = bitcast float* %243 to <4 x float>*
  store <4 x float> %188, <4 x float>* %244, align 16, !tbaa !9
  %245 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 112
  %246 = bitcast float* %245 to <4 x float>*
  store <4 x float> %186, <4 x float>* %246, align 16, !tbaa !9
  %247 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 116
  %248 = bitcast float* %247 to <4 x float>*
  store <4 x float> %188, <4 x float>* %248, align 16, !tbaa !9
  %249 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 120
  %250 = bitcast float* %249 to <4 x float>*
  store <4 x float> %186, <4 x float>* %250, align 16, !tbaa !9
  %251 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 124
  %252 = bitcast float* %251 to <4 x float>*
  store <4 x float> %188, <4 x float>* %252, align 16, !tbaa !9
  %253 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 128
  %254 = bitcast float* %253 to <4 x float>*
  store <4 x float> %186, <4 x float>* %254, align 16, !tbaa !9
  %255 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 132
  %256 = bitcast float* %255 to <4 x float>*
  store <4 x float> %188, <4 x float>* %256, align 16, !tbaa !9
  %257 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 136
  %258 = bitcast float* %257 to <4 x float>*
  store <4 x float> %186, <4 x float>* %258, align 16, !tbaa !9
  %259 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 140
  %260 = bitcast float* %259 to <4 x float>*
  store <4 x float> %188, <4 x float>* %260, align 16, !tbaa !9
  %261 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 144
  %262 = bitcast float* %261 to <4 x float>*
  store <4 x float> %186, <4 x float>* %262, align 16, !tbaa !9
  %263 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 148
  %264 = bitcast float* %263 to <4 x float>*
  store <4 x float> %188, <4 x float>* %264, align 16, !tbaa !9
  %265 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 152
  %266 = bitcast float* %265 to <4 x float>*
  store <4 x float> %186, <4 x float>* %266, align 16, !tbaa !9
  %267 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 156
  %268 = bitcast float* %267 to <4 x float>*
  store <4 x float> %188, <4 x float>* %268, align 16, !tbaa !9
  %269 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 160
  %270 = bitcast float* %269 to <4 x float>*
  store <4 x float> %186, <4 x float>* %270, align 16, !tbaa !9
  %271 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 164
  %272 = bitcast float* %271 to <4 x float>*
  store <4 x float> %188, <4 x float>* %272, align 16, !tbaa !9
  %273 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 168
  %274 = bitcast float* %273 to <4 x float>*
  store <4 x float> %186, <4 x float>* %274, align 16, !tbaa !9
  %275 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 172
  %276 = bitcast float* %275 to <4 x float>*
  store <4 x float> %188, <4 x float>* %276, align 16, !tbaa !9
  %277 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 176
  %278 = bitcast float* %277 to <4 x float>*
  store <4 x float> %186, <4 x float>* %278, align 16, !tbaa !9
  %279 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 180
  %280 = bitcast float* %279 to <4 x float>*
  store <4 x float> %188, <4 x float>* %280, align 16, !tbaa !9
  %281 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 184
  %282 = bitcast float* %281 to <4 x float>*
  store <4 x float> %186, <4 x float>* %282, align 16, !tbaa !9
  %283 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 188
  %284 = bitcast float* %283 to <4 x float>*
  store <4 x float> %188, <4 x float>* %284, align 16, !tbaa !9
  %285 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 192
  %286 = bitcast float* %285 to <4 x float>*
  store <4 x float> %186, <4 x float>* %286, align 16, !tbaa !9
  %287 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 196
  %288 = bitcast float* %287 to <4 x float>*
  store <4 x float> %188, <4 x float>* %288, align 16, !tbaa !9
  %289 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 200
  %290 = bitcast float* %289 to <4 x float>*
  store <4 x float> %186, <4 x float>* %290, align 16, !tbaa !9
  %291 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 204
  %292 = bitcast float* %291 to <4 x float>*
  store <4 x float> %188, <4 x float>* %292, align 16, !tbaa !9
  %293 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 208
  %294 = bitcast float* %293 to <4 x float>*
  store <4 x float> %186, <4 x float>* %294, align 16, !tbaa !9
  %295 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 212
  %296 = bitcast float* %295 to <4 x float>*
  store <4 x float> %188, <4 x float>* %296, align 16, !tbaa !9
  %297 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 216
  %298 = bitcast float* %297 to <4 x float>*
  store <4 x float> %186, <4 x float>* %298, align 16, !tbaa !9
  %299 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 220
  %300 = bitcast float* %299 to <4 x float>*
  store <4 x float> %188, <4 x float>* %300, align 16, !tbaa !9
  %301 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 224
  %302 = bitcast float* %301 to <4 x float>*
  store <4 x float> %186, <4 x float>* %302, align 16, !tbaa !9
  %303 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 228
  %304 = bitcast float* %303 to <4 x float>*
  store <4 x float> %188, <4 x float>* %304, align 16, !tbaa !9
  %305 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 232
  %306 = bitcast float* %305 to <4 x float>*
  store <4 x float> %186, <4 x float>* %306, align 16, !tbaa !9
  %307 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 236
  %308 = bitcast float* %307 to <4 x float>*
  store <4 x float> %188, <4 x float>* %308, align 16, !tbaa !9
  %309 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 240
  %310 = bitcast float* %309 to <4 x float>*
  store <4 x float> %186, <4 x float>* %310, align 16, !tbaa !9
  %311 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 244
  %312 = bitcast float* %311 to <4 x float>*
  store <4 x float> %188, <4 x float>* %312, align 16, !tbaa !9
  %313 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 248
  %314 = bitcast float* %313 to <4 x float>*
  store <4 x float> %186, <4 x float>* %314, align 16, !tbaa !9
  %315 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %180, i64 252
  %316 = bitcast float* %315 to <4 x float>*
  store <4 x float> %188, <4 x float>* %316, align 16, !tbaa !9
  %317 = icmp eq i64 %181, 256
  br i1 %317, label %318, label %179, !llvm.loop !23

318:                                              ; preds = %179, %318
  %319 = phi i64 [ %320, %318 ], [ 0, %179 ]
  %320 = add nuw nsw i64 %319, 1
  %321 = trunc i64 %320 to i32
  %322 = sitofp i32 %321 to float
  %323 = fdiv float 1.000000e+00, %322
  %324 = insertelement <4 x float> poison, float %323, i32 0
  %325 = shufflevector <4 x float> %324, <4 x float> poison, <4 x i32> zeroinitializer
  %326 = insertelement <4 x float> poison, float %323, i32 0
  %327 = shufflevector <4 x float> %326, <4 x float> poison, <4 x i32> zeroinitializer
  %328 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 0
  %329 = bitcast float* %328 to <4 x float>*
  store <4 x float> %325, <4 x float>* %329, align 16, !tbaa !9
  %330 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 4
  %331 = bitcast float* %330 to <4 x float>*
  store <4 x float> %327, <4 x float>* %331, align 16, !tbaa !9
  %332 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 8
  %333 = bitcast float* %332 to <4 x float>*
  store <4 x float> %325, <4 x float>* %333, align 16, !tbaa !9
  %334 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 12
  %335 = bitcast float* %334 to <4 x float>*
  store <4 x float> %327, <4 x float>* %335, align 16, !tbaa !9
  %336 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 16
  %337 = bitcast float* %336 to <4 x float>*
  store <4 x float> %325, <4 x float>* %337, align 16, !tbaa !9
  %338 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 20
  %339 = bitcast float* %338 to <4 x float>*
  store <4 x float> %327, <4 x float>* %339, align 16, !tbaa !9
  %340 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 24
  %341 = bitcast float* %340 to <4 x float>*
  store <4 x float> %325, <4 x float>* %341, align 16, !tbaa !9
  %342 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 28
  %343 = bitcast float* %342 to <4 x float>*
  store <4 x float> %327, <4 x float>* %343, align 16, !tbaa !9
  %344 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 32
  %345 = bitcast float* %344 to <4 x float>*
  store <4 x float> %325, <4 x float>* %345, align 16, !tbaa !9
  %346 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 36
  %347 = bitcast float* %346 to <4 x float>*
  store <4 x float> %327, <4 x float>* %347, align 16, !tbaa !9
  %348 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 40
  %349 = bitcast float* %348 to <4 x float>*
  store <4 x float> %325, <4 x float>* %349, align 16, !tbaa !9
  %350 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 44
  %351 = bitcast float* %350 to <4 x float>*
  store <4 x float> %327, <4 x float>* %351, align 16, !tbaa !9
  %352 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 48
  %353 = bitcast float* %352 to <4 x float>*
  store <4 x float> %325, <4 x float>* %353, align 16, !tbaa !9
  %354 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 52
  %355 = bitcast float* %354 to <4 x float>*
  store <4 x float> %327, <4 x float>* %355, align 16, !tbaa !9
  %356 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 56
  %357 = bitcast float* %356 to <4 x float>*
  store <4 x float> %325, <4 x float>* %357, align 16, !tbaa !9
  %358 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 60
  %359 = bitcast float* %358 to <4 x float>*
  store <4 x float> %327, <4 x float>* %359, align 16, !tbaa !9
  %360 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 64
  %361 = bitcast float* %360 to <4 x float>*
  store <4 x float> %325, <4 x float>* %361, align 16, !tbaa !9
  %362 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 68
  %363 = bitcast float* %362 to <4 x float>*
  store <4 x float> %327, <4 x float>* %363, align 16, !tbaa !9
  %364 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 72
  %365 = bitcast float* %364 to <4 x float>*
  store <4 x float> %325, <4 x float>* %365, align 16, !tbaa !9
  %366 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 76
  %367 = bitcast float* %366 to <4 x float>*
  store <4 x float> %327, <4 x float>* %367, align 16, !tbaa !9
  %368 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 80
  %369 = bitcast float* %368 to <4 x float>*
  store <4 x float> %325, <4 x float>* %369, align 16, !tbaa !9
  %370 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 84
  %371 = bitcast float* %370 to <4 x float>*
  store <4 x float> %327, <4 x float>* %371, align 16, !tbaa !9
  %372 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 88
  %373 = bitcast float* %372 to <4 x float>*
  store <4 x float> %325, <4 x float>* %373, align 16, !tbaa !9
  %374 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 92
  %375 = bitcast float* %374 to <4 x float>*
  store <4 x float> %327, <4 x float>* %375, align 16, !tbaa !9
  %376 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 96
  %377 = bitcast float* %376 to <4 x float>*
  store <4 x float> %325, <4 x float>* %377, align 16, !tbaa !9
  %378 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 100
  %379 = bitcast float* %378 to <4 x float>*
  store <4 x float> %327, <4 x float>* %379, align 16, !tbaa !9
  %380 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 104
  %381 = bitcast float* %380 to <4 x float>*
  store <4 x float> %325, <4 x float>* %381, align 16, !tbaa !9
  %382 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 108
  %383 = bitcast float* %382 to <4 x float>*
  store <4 x float> %327, <4 x float>* %383, align 16, !tbaa !9
  %384 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 112
  %385 = bitcast float* %384 to <4 x float>*
  store <4 x float> %325, <4 x float>* %385, align 16, !tbaa !9
  %386 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 116
  %387 = bitcast float* %386 to <4 x float>*
  store <4 x float> %327, <4 x float>* %387, align 16, !tbaa !9
  %388 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 120
  %389 = bitcast float* %388 to <4 x float>*
  store <4 x float> %325, <4 x float>* %389, align 16, !tbaa !9
  %390 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 124
  %391 = bitcast float* %390 to <4 x float>*
  store <4 x float> %327, <4 x float>* %391, align 16, !tbaa !9
  %392 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 128
  %393 = bitcast float* %392 to <4 x float>*
  store <4 x float> %325, <4 x float>* %393, align 16, !tbaa !9
  %394 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 132
  %395 = bitcast float* %394 to <4 x float>*
  store <4 x float> %327, <4 x float>* %395, align 16, !tbaa !9
  %396 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 136
  %397 = bitcast float* %396 to <4 x float>*
  store <4 x float> %325, <4 x float>* %397, align 16, !tbaa !9
  %398 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 140
  %399 = bitcast float* %398 to <4 x float>*
  store <4 x float> %327, <4 x float>* %399, align 16, !tbaa !9
  %400 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 144
  %401 = bitcast float* %400 to <4 x float>*
  store <4 x float> %325, <4 x float>* %401, align 16, !tbaa !9
  %402 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 148
  %403 = bitcast float* %402 to <4 x float>*
  store <4 x float> %327, <4 x float>* %403, align 16, !tbaa !9
  %404 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 152
  %405 = bitcast float* %404 to <4 x float>*
  store <4 x float> %325, <4 x float>* %405, align 16, !tbaa !9
  %406 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 156
  %407 = bitcast float* %406 to <4 x float>*
  store <4 x float> %327, <4 x float>* %407, align 16, !tbaa !9
  %408 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 160
  %409 = bitcast float* %408 to <4 x float>*
  store <4 x float> %325, <4 x float>* %409, align 16, !tbaa !9
  %410 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 164
  %411 = bitcast float* %410 to <4 x float>*
  store <4 x float> %327, <4 x float>* %411, align 16, !tbaa !9
  %412 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 168
  %413 = bitcast float* %412 to <4 x float>*
  store <4 x float> %325, <4 x float>* %413, align 16, !tbaa !9
  %414 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 172
  %415 = bitcast float* %414 to <4 x float>*
  store <4 x float> %327, <4 x float>* %415, align 16, !tbaa !9
  %416 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 176
  %417 = bitcast float* %416 to <4 x float>*
  store <4 x float> %325, <4 x float>* %417, align 16, !tbaa !9
  %418 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 180
  %419 = bitcast float* %418 to <4 x float>*
  store <4 x float> %327, <4 x float>* %419, align 16, !tbaa !9
  %420 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 184
  %421 = bitcast float* %420 to <4 x float>*
  store <4 x float> %325, <4 x float>* %421, align 16, !tbaa !9
  %422 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 188
  %423 = bitcast float* %422 to <4 x float>*
  store <4 x float> %327, <4 x float>* %423, align 16, !tbaa !9
  %424 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 192
  %425 = bitcast float* %424 to <4 x float>*
  store <4 x float> %325, <4 x float>* %425, align 16, !tbaa !9
  %426 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 196
  %427 = bitcast float* %426 to <4 x float>*
  store <4 x float> %327, <4 x float>* %427, align 16, !tbaa !9
  %428 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 200
  %429 = bitcast float* %428 to <4 x float>*
  store <4 x float> %325, <4 x float>* %429, align 16, !tbaa !9
  %430 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 204
  %431 = bitcast float* %430 to <4 x float>*
  store <4 x float> %327, <4 x float>* %431, align 16, !tbaa !9
  %432 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 208
  %433 = bitcast float* %432 to <4 x float>*
  store <4 x float> %325, <4 x float>* %433, align 16, !tbaa !9
  %434 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 212
  %435 = bitcast float* %434 to <4 x float>*
  store <4 x float> %327, <4 x float>* %435, align 16, !tbaa !9
  %436 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 216
  %437 = bitcast float* %436 to <4 x float>*
  store <4 x float> %325, <4 x float>* %437, align 16, !tbaa !9
  %438 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 220
  %439 = bitcast float* %438 to <4 x float>*
  store <4 x float> %327, <4 x float>* %439, align 16, !tbaa !9
  %440 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 224
  %441 = bitcast float* %440 to <4 x float>*
  store <4 x float> %325, <4 x float>* %441, align 16, !tbaa !9
  %442 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 228
  %443 = bitcast float* %442 to <4 x float>*
  store <4 x float> %327, <4 x float>* %443, align 16, !tbaa !9
  %444 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 232
  %445 = bitcast float* %444 to <4 x float>*
  store <4 x float> %325, <4 x float>* %445, align 16, !tbaa !9
  %446 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 236
  %447 = bitcast float* %446 to <4 x float>*
  store <4 x float> %327, <4 x float>* %447, align 16, !tbaa !9
  %448 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 240
  %449 = bitcast float* %448 to <4 x float>*
  store <4 x float> %325, <4 x float>* %449, align 16, !tbaa !9
  %450 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 244
  %451 = bitcast float* %450 to <4 x float>*
  store <4 x float> %327, <4 x float>* %451, align 16, !tbaa !9
  %452 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 248
  %453 = bitcast float* %452 to <4 x float>*
  store <4 x float> %325, <4 x float>* %453, align 16, !tbaa !9
  %454 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %319, i64 252
  %455 = bitcast float* %454 to <4 x float>*
  store <4 x float> %327, <4 x float>* %455, align 16, !tbaa !9
  %456 = icmp eq i64 %320, 256
  br i1 %456, label %457, label %318, !llvm.loop !23

457:                                              ; preds = %318, %457
  %458 = phi i64 [ %472, %457 ], [ 0, %318 ]
  %459 = phi <4 x i64> [ %473, %457 ], [ <i64 0, i64 1, i64 2, i64 3>, %318 ]
  %460 = trunc <4 x i64> %459 to <4 x i32>
  %461 = add <4 x i32> %460, <i32 1, i32 1, i32 1, i32 1>
  %462 = trunc <4 x i64> %459 to <4 x i32>
  %463 = add <4 x i32> %462, <i32 1, i32 1, i32 1, i32 1>
  %464 = and <4 x i32> %461, <i32 3, i32 3, i32 3, i32 3>
  %465 = and <4 x i32> %463, <i32 3, i32 3, i32 3, i32 3>
  %466 = add nuw nsw <4 x i32> %464, <i32 1, i32 1, i32 1, i32 1>
  %467 = add nuw nsw <4 x i32> %465, <i32 1, i32 1, i32 1, i32 1>
  %468 = getelementptr inbounds [32000 x i32], [32000 x i32]* @indx, i64 0, i64 %458
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %469, align 16, !tbaa !588
  %470 = getelementptr inbounds i32, i32* %468, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> %467, <4 x i32>* %471, align 16, !tbaa !588
  %472 = add nuw i64 %458, 8
  %473 = add <4 x i64> %459, <i64 8, i64 8, i64 8, i64 8>
  %474 = icmp eq i64 %472, 32000
  br i1 %474, label %476, label %457, !llvm.loop !717

475:                                              ; preds = %6
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @a to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @b to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @c to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @d to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  call void @memset_pattern16(i8* bitcast ([32000 x float]* @e to i8*), i8* bitcast ([4 x float]* @.memset_pattern.490 to i8*), i64 128000) #19
  br label %40

476:                                              ; preds = %457
  store float 1.000000e+00, float* %1, align 4, !tbaa !9
  store float 2.000000e+00, float* %2, align 4, !tbaa !9
  ret void
}

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn allocsize(0)
declare noalias noundef align 16 i8* @malloc(i64 noundef) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define i32 @main() local_unnamed_addr #7 {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  %3 = tail call align 16 dereferenceable_or_null(128000) i8* @malloc(i64 128000) #21
  %4 = bitcast i8* %3 to i32*
  %5 = bitcast float* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19
  %6 = bitcast float* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19
  call void @set(i32* %4, float* nonnull %1, float* nonnull %2)
  %7 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @str, i64 0, i64 0))
  %8 = tail call i32 @s273()
  %9 = tail call i32 @s273p()
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19
  ret i32 0
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #16

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #17

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #17

; Function Attrs: argmemonly nofree
declare void @memset_pattern16(i8* nocapture writeonly, i8* nocapture readonly, i64) local_unnamed_addr #18

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #16

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <2 x float> @llvm.sin.v2f32(<2 x float>) #16

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <2 x float> @llvm.cos.v2f32(<2 x float>) #16

attributes #0 = { nofree norecurse nosync nounwind ssp uwtable writeonly "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree norecurse nosync nounwind readonly ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #3 = { alwaysinline mustprogress nofree norecurse nosync nounwind readnone ssp uwtable willreturn "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #4 = { nofree nounwind ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #5 = { nofree nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #6 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #7 = { nounwind ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #8 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #9 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #10 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #11 = { nofree norecurse nosync nounwind ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind ssp uwtable willreturn "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind readnone ssp uwtable willreturn "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #14 = { noreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #15 = { inaccessiblememonly mustprogress nofree nounwind willreturn allocsize(0) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.5a,+zcm,+zcz" }
attributes #16 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #17 = { nofree nounwind }
attributes #18 = { argmemonly nofree }
attributes #19 = { nounwind }
attributes #20 = { noreturn nounwind }
attributes #21 = { allocsize(0) }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 1, !"branch-target-enforcement", i32 0}
!2 = !{i32 1, !"sign-return-address", i32 0}
!3 = !{i32 1, !"sign-return-address-all", i32 0}
!4 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!5 = !{i32 7, !"PIC Level", i32 2}
!6 = !{i32 7, !"uwtable", i32 1}
!7 = !{i32 7, !"frame-pointer", i32 1}
!8 = !{!"Homebrew clang version 13.0.1"}
!9 = !{!10, !10, i64 0}
!10 = !{!"float", !11, i64 0}
!11 = !{!"omnipotent char", !12, i64 0}
!12 = !{!"Simple C/C++ TBAA"}
!13 = distinct !{!13, !14, !15}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !14, !15}
!17 = distinct !{!17, !14, !15}
!18 = distinct !{!18, !14, !15}
!19 = distinct !{!19, !14, !15}
!20 = distinct !{!20, !14, !15}
!21 = distinct !{!21, !14, !15}
!22 = distinct !{!22, !14, !15}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !14, !15}
!26 = distinct !{!26, !14}
!27 = distinct !{!27, !14, !15}
!28 = distinct !{!28, !14}
!29 = distinct !{!29, !14}
!30 = distinct !{!30, !14}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !14}
!33 = distinct !{!33, !14, !15}
!34 = distinct !{!34, !14, !15}
!35 = distinct !{!35, !14, !15}
!36 = distinct !{!36, !14, !15}
!37 = distinct !{!37, !14, !15}
!38 = distinct !{!38, !14, !15}
!39 = distinct !{!39, !14, !15}
!40 = distinct !{!40, !14, !15}
!41 = distinct !{!41, !14, !15}
!42 = distinct !{!42, !14, !15}
!43 = distinct !{!43, !14, !15}
!44 = distinct !{!44, !14, !15}
!45 = distinct !{!45, !14, !15}
!46 = distinct !{!46, !14, !15}
!47 = distinct !{!47, !14, !15}
!48 = distinct !{!48, !14, !15}
!49 = distinct !{!49, !14, !15}
!50 = distinct !{!50, !14, !15}
!51 = distinct !{!51, !14, !15}
!52 = distinct !{!52, !14, !15}
!53 = distinct !{!53, !14, !15}
!54 = distinct !{!54, !14, !15}
!55 = distinct !{!55, !14, !15}
!56 = distinct !{!56, !14, !15}
!57 = distinct !{!57, !14, !15}
!58 = distinct !{!58, !14, !15}
!59 = distinct !{!59, !14, !15}
!60 = distinct !{!60, !14, !15}
!61 = distinct !{!61, !14, !15}
!62 = distinct !{!62, !14, !15}
!63 = distinct !{!63, !14, !15}
!64 = distinct !{!64, !14, !15}
!65 = distinct !{!65, !14, !15}
!66 = distinct !{!66, !14, !15}
!67 = distinct !{!67, !14, !15}
!68 = distinct !{!68, !14, !15}
!69 = distinct !{!69, !14, !15}
!70 = distinct !{!70, !14, !15}
!71 = distinct !{!71, !14, !15}
!72 = distinct !{!72, !14, !15}
!73 = distinct !{!73, !14, !15}
!74 = distinct !{!74, !14, !15}
!75 = distinct !{!75, !14, !15}
!76 = distinct !{!76, !14, !15}
!77 = distinct !{!77, !14, !15}
!78 = distinct !{!78, !14, !15}
!79 = distinct !{!79, !14, !15}
!80 = distinct !{!80, !14, !15}
!81 = distinct !{!81, !14, !15}
!82 = distinct !{!82, !14, !15}
!83 = distinct !{!83, !14, !15}
!84 = distinct !{!84, !14, !15}
!85 = distinct !{!85, !14, !15}
!86 = distinct !{!86, !14, !15}
!87 = distinct !{!87, !14, !15}
!88 = distinct !{!88, !14, !15}
!89 = distinct !{!89, !14, !15}
!90 = distinct !{!90, !14, !15}
!91 = distinct !{!91, !14, !15}
!92 = distinct !{!92, !14, !15}
!93 = distinct !{!93, !14, !15}
!94 = distinct !{!94, !14, !15}
!95 = distinct !{!95, !14, !15}
!96 = distinct !{!96, !14, !15}
!97 = distinct !{!97, !14, !15}
!98 = distinct !{!98, !14, !15}
!99 = distinct !{!99, !14, !15}
!100 = distinct !{!100, !14, !15}
!101 = distinct !{!101, !14, !15}
!102 = distinct !{!102, !14, !15}
!103 = distinct !{!103, !14, !15}
!104 = distinct !{!104, !14, !15}
!105 = distinct !{!105, !14, !15}
!106 = distinct !{!106, !14, !15}
!107 = distinct !{!107, !14, !15}
!108 = distinct !{!108, !14, !15}
!109 = distinct !{!109, !14, !15}
!110 = distinct !{!110, !14, !15}
!111 = distinct !{!111, !14, !15}
!112 = distinct !{!112, !14, !15}
!113 = distinct !{!113, !14, !15}
!114 = distinct !{!114, !14, !15}
!115 = distinct !{!115, !14, !15}
!116 = distinct !{!116, !14, !15}
!117 = distinct !{!117, !14, !15}
!118 = distinct !{!118, !14, !15}
!119 = distinct !{!119, !14, !15}
!120 = distinct !{!120, !14, !15}
!121 = distinct !{!121, !14, !15}
!122 = distinct !{!122, !14, !15}
!123 = distinct !{!123, !14, !15}
!124 = distinct !{!124, !14, !15}
!125 = distinct !{!125, !14, !15}
!126 = distinct !{!126, !14, !15}
!127 = distinct !{!127, !14, !15}
!128 = distinct !{!128, !14, !15}
!129 = distinct !{!129, !14, !15}
!130 = distinct !{!130, !14, !15}
!131 = distinct !{!131, !14, !15}
!132 = distinct !{!132, !14, !15}
!133 = distinct !{!133, !14, !15}
!134 = distinct !{!134, !14, !15}
!135 = distinct !{!135, !14, !15}
!136 = distinct !{!136, !14, !15}
!137 = distinct !{!137, !14, !15}
!138 = distinct !{!138, !14, !15}
!139 = distinct !{!139, !14, !15}
!140 = distinct !{!140, !14, !15}
!141 = distinct !{!141, !14, !15}
!142 = distinct !{!142, !14, !15}
!143 = distinct !{!143, !14, !15}
!144 = distinct !{!144, !14, !15}
!145 = distinct !{!145, !14, !15}
!146 = distinct !{!146, !14, !15}
!147 = distinct !{!147, !14, !15}
!148 = distinct !{!148, !14, !15}
!149 = distinct !{!149, !14, !15}
!150 = distinct !{!150, !14, !15}
!151 = distinct !{!151, !14, !15}
!152 = distinct !{!152, !14, !15}
!153 = distinct !{!153, !14, !15}
!154 = distinct !{!154, !14, !15}
!155 = distinct !{!155, !14, !15}
!156 = distinct !{!156, !14, !15}
!157 = distinct !{!157, !14, !15}
!158 = distinct !{!158, !14, !15}
!159 = distinct !{!159, !14, !15}
!160 = distinct !{!160, !14, !15}
!161 = distinct !{!161, !14, !15}
!162 = distinct !{!162, !14, !15}
!163 = distinct !{!163, !14, !15}
!164 = distinct !{!164, !14, !15}
!165 = distinct !{!165, !14, !15}
!166 = distinct !{!166, !14, !15}
!167 = distinct !{!167, !14, !15}
!168 = distinct !{!168, !14, !15}
!169 = distinct !{!169, !14, !15}
!170 = distinct !{!170, !14, !15}
!171 = distinct !{!171, !14, !15}
!172 = distinct !{!172, !14, !15}
!173 = distinct !{!173, !14, !15}
!174 = distinct !{!174, !14, !15}
!175 = distinct !{!175, !14, !15}
!176 = distinct !{!176, !14, !15}
!177 = distinct !{!177, !14, !15}
!178 = distinct !{!178, !14, !15}
!179 = distinct !{!179, !14, !15}
!180 = distinct !{!180, !14, !15}
!181 = distinct !{!181, !14, !15}
!182 = distinct !{!182, !14, !15}
!183 = distinct !{!183, !14, !15}
!184 = distinct !{!184, !14, !15}
!185 = distinct !{!185, !14, !15}
!186 = distinct !{!186, !14, !15}
!187 = distinct !{!187, !14, !15}
!188 = distinct !{!188, !14, !15}
!189 = distinct !{!189, !14, !15}
!190 = distinct !{!190, !14, !15}
!191 = distinct !{!191, !14, !15}
!192 = distinct !{!192, !14, !15}
!193 = distinct !{!193, !14, !15}
!194 = distinct !{!194, !14, !15}
!195 = distinct !{!195, !14, !15}
!196 = distinct !{!196, !14, !15}
!197 = distinct !{!197, !14, !15}
!198 = distinct !{!198, !14, !15}
!199 = distinct !{!199, !14, !15}
!200 = distinct !{!200, !14, !15}
!201 = distinct !{!201, !14, !15}
!202 = distinct !{!202, !14, !15}
!203 = distinct !{!203, !14, !15}
!204 = distinct !{!204, !14, !15}
!205 = distinct !{!205, !14}
!206 = distinct !{!206, !14, !15}
!207 = distinct !{!207, !14}
!208 = distinct !{!208, !14, !15}
!209 = distinct !{!209, !14}
!210 = distinct !{!210, !14}
!211 = distinct !{!211, !14}
!212 = distinct !{!212, !14, !15}
!213 = distinct !{!213, !14}
!214 = distinct !{!214, !14, !15}
!215 = distinct !{!215, !14}
!216 = distinct !{!216, !14, !15}
!217 = distinct !{!217, !14}
!218 = distinct !{!218, !14, !15}
!219 = distinct !{!219, !14}
!220 = distinct !{!220, !14}
!221 = distinct !{!221, !14}
!222 = distinct !{!222, !14}
!223 = distinct !{!223, !14}
!224 = distinct !{!224, !14}
!225 = distinct !{!225, !14}
!226 = distinct !{!226, !14}
!227 = distinct !{!227, !14}
!228 = distinct !{!228, !14, !15}
!229 = distinct !{!229, !14}
!230 = distinct !{!230, !14}
!231 = distinct !{!231, !14}
!232 = distinct !{!232, !14}
!233 = distinct !{!233, !14}
!234 = distinct !{!234, !14}
!235 = distinct !{!235, !14}
!236 = distinct !{!236, !14, !15}
!237 = distinct !{!237, !14}
!238 = distinct !{!238, !14}
!239 = distinct !{!239, !14}
!240 = distinct !{!240, !14}
!241 = distinct !{!241, !14}
!242 = distinct !{!242, !14, !15}
!243 = distinct !{!243, !14}
!244 = distinct !{!244, !14}
!245 = distinct !{!245, !14, !15}
!246 = distinct !{!246, !14}
!247 = distinct !{!247, !14}
!248 = distinct !{!248, !14, !15}
!249 = distinct !{!249, !14}
!250 = distinct !{!250, !14, !15}
!251 = distinct !{!251, !14}
!252 = distinct !{!252, !14}
!253 = distinct !{!253, !14}
!254 = distinct !{!254, !14}
!255 = distinct !{!255, !14}
!256 = distinct !{!256, !14}
!257 = distinct !{!257, !14}
!258 = distinct !{!258, !14, !15}
!259 = distinct !{!259, !14}
!260 = distinct !{!260, !14, !15}
!261 = distinct !{!261, !14}
!262 = distinct !{!262, !14}
!263 = distinct !{!263, !14, !15}
!264 = distinct !{!264, !14}
!265 = distinct !{!265, !14}
!266 = distinct !{!266, !14}
!267 = distinct !{!267, !14}
!268 = distinct !{!268, !14}
!269 = distinct !{!269, !14}
!270 = distinct !{!270, !14}
!271 = distinct !{!271, !14}
!272 = distinct !{!272, !14}
!273 = distinct !{!273, !14}
!274 = distinct !{!274, !14}
!275 = distinct !{!275, !14, !15}
!276 = distinct !{!276, !14}
!277 = distinct !{!277, !14, !15}
!278 = distinct !{!278, !14}
!279 = distinct !{!279, !14}
!280 = distinct !{!280, !14}
!281 = distinct !{!281, !14}
!282 = distinct !{!282, !14}
!283 = distinct !{!283, !14, !15}
!284 = distinct !{!284, !14}
!285 = distinct !{!285, !14}
!286 = distinct !{!286, !14}
!287 = distinct !{!287, !14, !15}
!288 = distinct !{!288, !14}
!289 = distinct !{!289, !14}
!290 = distinct !{!290, !14}
!291 = distinct !{!291, !14}
!292 = distinct !{!292, !14}
!293 = distinct !{!293, !14}
!294 = distinct !{!294, !14}
!295 = distinct !{!295, !14}
!296 = distinct !{!296, !14}
!297 = !{!298}
!298 = distinct !{!298, !299}
!299 = distinct !{!299, !"LVerDomain"}
!300 = !{!301}
!301 = distinct !{!301, !299}
!302 = !{!303}
!303 = distinct !{!303, !299}
!304 = !{!298, !301}
!305 = distinct !{!305, !14, !15}
!306 = distinct !{!306, !14, !15}
!307 = distinct !{!307, !14, !15}
!308 = distinct !{!308, !14}
!309 = distinct !{!309, !14, !15}
!310 = distinct !{!310, !14}
!311 = distinct !{!311, !14}
!312 = distinct !{!312, !14}
!313 = distinct !{!313, !14}
!314 = distinct !{!314, !14}
!315 = !{!316}
!316 = distinct !{!316, !317}
!317 = distinct !{!317, !"LVerDomain"}
!318 = !{!319}
!319 = distinct !{!319, !317}
!320 = distinct !{!320, !14, !15}
!321 = distinct !{!321, !14, !15}
!322 = distinct !{!322, !14}
!323 = distinct !{!323, !14, !15}
!324 = distinct !{!324, !14}
!325 = distinct !{!325, !14, !15}
!326 = distinct !{!326, !14}
!327 = distinct !{!327, !14}
!328 = distinct !{!328, !14}
!329 = distinct !{!329, !14}
!330 = distinct !{!330, !14, !15}
!331 = distinct !{!331, !14}
!332 = distinct !{!332, !14, !15}
!333 = distinct !{!333, !14, !334, !15}
!334 = !{!"llvm.loop.unroll.runtime.disable"}
!335 = distinct !{!335, !14}
!336 = distinct !{!336, !14, !15}
!337 = distinct !{!337, !14}
!338 = distinct !{!338, !14, !15}
!339 = distinct !{!339, !14, !15}
!340 = distinct !{!340, !14}
!341 = distinct !{!341, !14, !15}
!342 = distinct !{!342, !14, !15}
!343 = distinct !{!343, !14, !15}
!344 = distinct !{!344, !14}
!345 = distinct !{!345, !14}
!346 = distinct !{!346, !14, !15}
!347 = distinct !{!347, !14}
!348 = distinct !{!348, !14}
!349 = distinct !{!349, !14}
!350 = distinct !{!350, !14}
!351 = distinct !{!351, !14}
!352 = distinct !{!352, !14}
!353 = distinct !{!353, !14}
!354 = distinct !{!354, !14, !15}
!355 = distinct !{!355, !14}
!356 = distinct !{!356, !14}
!357 = distinct !{!357, !14, !15}
!358 = distinct !{!358, !14}
!359 = distinct !{!359, !14}
!360 = distinct !{!360, !14}
!361 = distinct !{!361, !14}
!362 = distinct !{!362, !14}
!363 = distinct !{!363, !14}
!364 = distinct !{!364, !14}
!365 = distinct !{!365, !14}
!366 = distinct !{!366, !14}
!367 = distinct !{!367, !14}
!368 = distinct !{!368, !14}
!369 = distinct !{!369, !14, !15}
!370 = distinct !{!370, !14}
!371 = distinct !{!371, !14}
!372 = distinct !{!372, !14, !15}
!373 = distinct !{!373, !14}
!374 = !{!375}
!375 = distinct !{!375, !376}
!376 = distinct !{!376, !"LVerDomain"}
!377 = !{!378}
!378 = distinct !{!378, !376}
!379 = distinct !{!379, !14, !15}
!380 = distinct !{!380, !14}
!381 = distinct !{!381, !14}
!382 = distinct !{!382, !14, !15}
!383 = distinct !{!383, !14}
!384 = distinct !{!384, !14}
!385 = distinct !{!385, !14}
!386 = distinct !{!386, !14, !15}
!387 = distinct !{!387, !14}
!388 = distinct !{!388, !14}
!389 = distinct !{!389, !14, !15}
!390 = distinct !{!390, !14}
!391 = distinct !{!391, !14, !15}
!392 = distinct !{!392, !14}
!393 = distinct !{!393, !14}
!394 = distinct !{!394, !14, !15}
!395 = distinct !{!395, !14}
!396 = distinct !{!396, !14}
!397 = distinct !{!397, !14}
!398 = distinct !{!398, !14}
!399 = distinct !{!399, !14, !15}
!400 = distinct !{!400, !14}
!401 = distinct !{!401, !14}
!402 = distinct !{!402, !14}
!403 = distinct !{!403, !14}
!404 = distinct !{!404, !14}
!405 = distinct !{!405, !14}
!406 = distinct !{!406, !14}
!407 = distinct !{!407, !14}
!408 = distinct !{!408, !14}
!409 = distinct !{!409, !14, !15}
!410 = distinct !{!410, !14}
!411 = distinct !{!411, !14}
!412 = distinct !{!412, !14}
!413 = distinct !{!413, !14}
!414 = distinct !{!414, !14}
!415 = distinct !{!415, !14, !15}
!416 = distinct !{!416, !14}
!417 = distinct !{!417, !14, !15}
!418 = distinct !{!418, !14}
!419 = distinct !{!419, !14, !15}
!420 = distinct !{!420, !14}
!421 = distinct !{!421, !14}
!422 = distinct !{!422, !14}
!423 = distinct !{!423, !14, !15}
!424 = distinct !{!424, !14}
!425 = distinct !{!425, !14, !15}
!426 = distinct !{!426, !14}
!427 = distinct !{!427, !14, !15}
!428 = distinct !{!428, !14}
!429 = distinct !{!429, !14}
!430 = distinct !{!430, !14}
!431 = distinct !{!431, !14, !15}
!432 = distinct !{!432, !14}
!433 = distinct !{!433, !14}
!434 = distinct !{!434, !14}
!435 = distinct !{!435, !14}
!436 = distinct !{!436, !14}
!437 = distinct !{!437, !14}
!438 = distinct !{!438, !14}
!439 = distinct !{!439, !14, !15}
!440 = distinct !{!440, !14}
!441 = distinct !{!441, !14}
!442 = distinct !{!442, !14}
!443 = distinct !{!443, !14, !15}
!444 = distinct !{!444, !14}
!445 = distinct !{!445, !14}
!446 = distinct !{!446, !14, !15}
!447 = distinct !{!447, !14}
!448 = distinct !{!448, !14}
!449 = distinct !{!449, !14}
!450 = distinct !{!450, !14}
!451 = distinct !{!451, !14}
!452 = distinct !{!452, !14}
!453 = distinct !{!453, !14, !15}
!454 = distinct !{!454, !14}
!455 = distinct !{!455, !14}
!456 = distinct !{!456, !14}
!457 = distinct !{!457, !14, !15}
!458 = distinct !{!458, !14}
!459 = distinct !{!459, !14, !15}
!460 = distinct !{!460, !14}
!461 = distinct !{!461, !14}
!462 = distinct !{!462, !14}
!463 = distinct !{!463, !14}
!464 = distinct !{!464, !14}
!465 = distinct !{!465, !14}
!466 = distinct !{!466, !14}
!467 = distinct !{!467, !14}
!468 = distinct !{!468, !14}
!469 = distinct !{!469, !14, !15}
!470 = distinct !{!470, !14}
!471 = distinct !{!471, !14}
!472 = distinct !{!472, !14, !15}
!473 = distinct !{!473, !14}
!474 = distinct !{!474, !14, !15}
!475 = distinct !{!475, !14}
!476 = distinct !{!476, !14, !15}
!477 = distinct !{!477, !14}
!478 = distinct !{!478, !14, !15}
!479 = distinct !{!479, !14, !15}
!480 = distinct !{!480, !14}
!481 = distinct !{!481, !14}
!482 = distinct !{!482, !14}
!483 = distinct !{!483, !14}
!484 = distinct !{!484, !14}
!485 = distinct !{!485, !14}
!486 = distinct !{!486, !14}
!487 = distinct !{!487, !14, !15}
!488 = distinct !{!488, !14}
!489 = distinct !{!489, !14}
!490 = distinct !{!490, !14}
!491 = distinct !{!491, !14}
!492 = distinct !{!492, !14}
!493 = distinct !{!493, !14}
!494 = distinct !{!494, !14, !15}
!495 = distinct !{!495, !14}
!496 = distinct !{!496, !14, !15}
!497 = distinct !{!497, !14}
!498 = distinct !{!498, !14}
!499 = distinct !{!499, !14}
!500 = distinct !{!500, !14, !15}
!501 = distinct !{!501, !14}
!502 = distinct !{!502, !14}
!503 = distinct !{!503, !14}
!504 = distinct !{!504, !14}
!505 = distinct !{!505, !14}
!506 = distinct !{!506, !14}
!507 = distinct !{!507, !14}
!508 = distinct !{!508, !14, !15}
!509 = distinct !{!509, !14}
!510 = distinct !{!510, !14, !15}
!511 = distinct !{!511, !14, !15}
!512 = distinct !{!512, !14}
!513 = distinct !{!513, !14}
!514 = distinct !{!514, !14}
!515 = distinct !{!515, !14}
!516 = distinct !{!516, !14}
!517 = distinct !{!517, !14}
!518 = distinct !{!518, !14}
!519 = distinct !{!519, !14}
!520 = distinct !{!520, !14}
!521 = distinct !{!521, !14}
!522 = distinct !{!522, !14}
!523 = distinct !{!523, !14}
!524 = distinct !{!524, !14}
!525 = distinct !{!525, !14}
!526 = distinct !{!526, !14}
!527 = distinct !{!527, !14}
!528 = distinct !{!528, !14}
!529 = distinct !{!529, !14}
!530 = distinct !{!530, !14, !15}
!531 = distinct !{!531, !14}
!532 = distinct !{!532, !14}
!533 = distinct !{!533, !14}
!534 = distinct !{!534, !14}
!535 = distinct !{!535, !14}
!536 = distinct !{!536, !14}
!537 = distinct !{!537, !14}
!538 = distinct !{!538, !14}
!539 = distinct !{!539, !14}
!540 = distinct !{!540, !14}
!541 = distinct !{!541, !14, !15}
!542 = distinct !{!542, !14}
!543 = distinct !{!543, !14}
!544 = distinct !{!544, !14}
!545 = distinct !{!545, !14}
!546 = distinct !{!546, !14}
!547 = distinct !{!547, !14}
!548 = distinct !{!548, !14}
!549 = distinct !{!549, !14}
!550 = distinct !{!550, !14}
!551 = distinct !{!551, !14}
!552 = distinct !{!552, !14}
!553 = distinct !{!553, !14}
!554 = distinct !{!554, !14}
!555 = distinct !{!555, !14}
!556 = distinct !{!556, !14}
!557 = distinct !{!557, !14}
!558 = distinct !{!558, !14}
!559 = distinct !{!559, !14}
!560 = distinct !{!560, !14}
!561 = distinct !{!561, !14}
!562 = distinct !{!562, !14}
!563 = distinct !{!563, !14}
!564 = distinct !{!564, !14}
!565 = distinct !{!565, !14}
!566 = distinct !{!566, !14}
!567 = distinct !{!567, !14}
!568 = distinct !{!568, !14}
!569 = distinct !{!569, !14}
!570 = distinct !{!570, !14}
!571 = distinct !{!571, !14}
!572 = distinct !{!572, !14}
!573 = distinct !{!573, !14}
!574 = distinct !{!574, !14}
!575 = distinct !{!575, !14}
!576 = distinct !{!576, !14}
!577 = distinct !{!577, !14}
!578 = distinct !{!578, !14}
!579 = distinct !{!579, !14, !15}
!580 = distinct !{!580, !14}
!581 = distinct !{!581, !14, !15}
!582 = distinct !{!582, !14}
!583 = distinct !{!583, !14}
!584 = distinct !{!584, !14}
!585 = distinct !{!585, !14}
!586 = distinct !{!586, !14}
!587 = distinct !{!587, !14}
!588 = !{!589, !589, i64 0}
!589 = !{!"int", !11, i64 0}
!590 = distinct !{!590, !14}
!591 = !{!592, !592, i64 0}
!592 = !{!"any pointer", !11, i64 0}
!593 = !{!594}
!594 = distinct !{!594, !595}
!595 = distinct !{!595, !"LVerDomain"}
!596 = !{!597}
!597 = distinct !{!597, !595}
!598 = distinct !{!598, !14, !15}
!599 = distinct !{!599, !14}
!600 = distinct !{!600, !14, !15}
!601 = distinct !{!601, !14}
!602 = !{!603}
!603 = distinct !{!603, !604}
!604 = distinct !{!604, !"LVerDomain"}
!605 = !{!606}
!606 = distinct !{!606, !604}
!607 = !{!608}
!608 = distinct !{!608, !604}
!609 = !{!603, !606}
!610 = distinct !{!610, !14, !15}
!611 = distinct !{!611, !14}
!612 = distinct !{!612, !14, !15}
!613 = distinct !{!613, !14}
!614 = !{!615}
!615 = distinct !{!615, !616}
!616 = distinct !{!616, !"LVerDomain"}
!617 = !{!618}
!618 = distinct !{!618, !616}
!619 = !{!620}
!620 = distinct !{!620, !616}
!621 = !{!615, !618}
!622 = distinct !{!622, !14, !15}
!623 = distinct !{!623, !14}
!624 = distinct !{!624, !14, !15}
!625 = distinct !{!625, !14}
!626 = !{!627}
!627 = distinct !{!627, !628}
!628 = distinct !{!628, !"LVerDomain"}
!629 = !{!630}
!630 = distinct !{!630, !628}
!631 = !{!632}
!632 = distinct !{!632, !628}
!633 = !{!627, !630}
!634 = distinct !{!634, !14, !15}
!635 = distinct !{!635, !14}
!636 = distinct !{!636, !14, !15}
!637 = distinct !{!637, !14}
!638 = !{!639}
!639 = distinct !{!639, !640}
!640 = distinct !{!640, !"LVerDomain"}
!641 = !{!642}
!642 = distinct !{!642, !640}
!643 = !{!644}
!644 = distinct !{!644, !640}
!645 = !{!639, !642}
!646 = distinct !{!646, !14, !15}
!647 = distinct !{!647, !14}
!648 = distinct !{!648, !14, !15}
!649 = distinct !{!649, !14}
!650 = distinct !{!650, !14, !15}
!651 = distinct !{!651, !14}
!652 = distinct !{!652, !14, !15}
!653 = distinct !{!653, !14}
!654 = distinct !{!654, !14}
!655 = distinct !{!655, !14}
!656 = distinct !{!656, !14, !15}
!657 = distinct !{!657, !14}
!658 = distinct !{!658, !14, !15}
!659 = distinct !{!659, !14}
!660 = distinct !{!660, !14, !15}
!661 = distinct !{!661, !14}
!662 = distinct !{!662, !14}
!663 = distinct !{!663, !14}
!664 = distinct !{!664, !14, !15}
!665 = distinct !{!665, !14}
!666 = distinct !{!666, !14, !15}
!667 = distinct !{!667, !14}
!668 = distinct !{!668, !14}
!669 = distinct !{!669, !14}
!670 = distinct !{!670, !14}
!671 = distinct !{!671, !14}
!672 = distinct !{!672, !14}
!673 = distinct !{!673, !14, !15}
!674 = distinct !{!674, !14}
!675 = distinct !{!675, !14, !15}
!676 = distinct !{!676, !14}
!677 = distinct !{!677, !14, !15}
!678 = distinct !{!678, !14}
!679 = distinct !{!679, !14, !15}
!680 = distinct !{!680, !14, !15}
!681 = distinct !{!681, !14}
!682 = distinct !{!682, !14}
!683 = distinct !{!683, !14}
!684 = distinct !{!684, !14}
!685 = distinct !{!685, !14}
!686 = distinct !{!686, !14, !15}
!687 = distinct !{!687, !14}
!688 = distinct !{!688, !14, !15}
!689 = distinct !{!689, !14}
!690 = distinct !{!690, !14}
!691 = distinct !{!691, !14, !15}
!692 = distinct !{!692, !14}
!693 = distinct !{!693, !14, !15}
!694 = distinct !{!694, !14}
!695 = distinct !{!695, !14, !15}
!696 = distinct !{!696, !14}
!697 = distinct !{!697, !14, !15}
!698 = distinct !{!698, !14}
!699 = distinct !{!699, !14, !15}
!700 = distinct !{!700, !14}
!701 = distinct !{!701, !14, !15}
!702 = distinct !{!702, !14}
!703 = distinct !{!703, !14, !15}
!704 = distinct !{!704, !14}
!705 = distinct !{!705, !14, !15}
!706 = distinct !{!706, !14}
!707 = distinct !{!707, !14, !15}
!708 = distinct !{!708, !14}
!709 = distinct !{!709, !14}
!710 = distinct !{!710, !14}
!711 = distinct !{!711, !14}
!712 = distinct !{!712, !14}
!713 = distinct !{!713, !14, !15}
!714 = distinct !{!714, !14}
!715 = distinct !{!715, !14}
!716 = distinct !{!716, !14, !15}
!717 = distinct !{!717, !14, !15}
