; ModuleID = 'tsc.c'
source_filename = "tsc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@a = common dso_local global [32000 x float] zeroinitializer, align 16
@b = common dso_local global [32000 x float] zeroinitializer, align 16
@c = common dso_local global [32000 x float] zeroinitializer, align 16
@d = common dso_local global [32000 x float] zeroinitializer, align 16
@e = common dso_local global [32000 x float] zeroinitializer, align 16
@aa = common dso_local global [256 x [256 x float]] zeroinitializer, align 16
@bb = common dso_local global [256 x [256 x float]] zeroinitializer, align 16
@cc = common dso_local global [256 x [256 x float]] zeroinitializer, align 16
@array = common dso_local global [65536 x float] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%f \0A\00", align 1
@temp = common dso_local global float 0.000000e+00, align 4
@.str.1 = private unnamed_addr constant [6 x i8] c"s000 \00", align 1
@X = common dso_local global [32000 x float] zeroinitializer, align 16
@Y = common dso_local global [32000 x float] zeroinitializer, align 16
@Z = common dso_local global [32000 x float] zeroinitializer, align 16
@U = common dso_local global [32000 x float] zeroinitializer, align 16
@V = common dso_local global [32000 x float] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [6 x i8] c"s111 \00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"s112 \00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"s113 \00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"s114 \00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"s115 \00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"s116 \00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"s118 \00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"s119 \00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"s121 \00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"s122 \00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"s123 \00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"s124 \00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"s125 \00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"s126 \00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"s127 \00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"s128 \00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"s131 \00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"s132 \00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"s141 \00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"s151 \00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"s152 \00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"s161 \00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"s162 \00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"s171 \00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"s172 \00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"s173 \00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"s174 \00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"s175 \00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"s176 \00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"s211 \00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"s212 \00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"s221 \00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"s222 \00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"s231 \00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"s232 \00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"s233 \00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"s234 \00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"s235 \00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"s241 \00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"s242 \00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"s243 \00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"s244 \00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"s251 \00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"s252 \00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"s253 \00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"s254 \00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"s255 \00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"s256 \00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"s257 \00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"s258 \00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"s261 \00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"s271 \00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"s272 \00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"s273 \00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"s274 \00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"s275 \00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"s276 \00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"s277 \00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"s278 \00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"s279 \00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"s2710\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"s2711\00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c"s2712\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"s281 \00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"s291 \00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"s292 \00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"s293 \00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"s2101\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"s2102\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"s2111\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"s311 \00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"s312 \00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"s313 \00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"s314 \00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"s315 \00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"s316 \00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"s317 \00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"s318 \00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"s319 \00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"s3110\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"s3111\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"s3112\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"s3113\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"s321 \00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"s322 \00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c"s323 \00", align 1
@.str.88 = private unnamed_addr constant [6 x i8] c"s331 \00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"s332 \00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"s341 \00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"s342 \00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"s343 \00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"s351 \00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"s352 \00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c"s353 \00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"s411 \00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"s412 \00", align 1
@.str.98 = private unnamed_addr constant [6 x i8] c"s413 \00", align 1
@.str.99 = private unnamed_addr constant [6 x i8] c"s414 \00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"s415 \00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"s421 \00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c"s422 \00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"s423 \00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"s424 \00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"s431 \00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c"s432 \00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"s441 \00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"s442 \00", align 1
@.str.109 = private unnamed_addr constant [6 x i8] c"s443 \00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"s451 \00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"s452 \00", align 1
@.str.112 = private unnamed_addr constant [6 x i8] c"s453 \00", align 1
@.str.113 = private unnamed_addr constant [6 x i8] c"s471 \00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"s481 \00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"s482 \00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"s491 \00", align 1
@.str.117 = private unnamed_addr constant [6 x i8] c"s4112\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"s4113\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"s4114\00", align 1
@.str.120 = private unnamed_addr constant [6 x i8] c"s4115\00", align 1
@.str.121 = private unnamed_addr constant [6 x i8] c"s4116\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"s4117\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"s4121\00", align 1
@.str.124 = private unnamed_addr constant [4 x i8] c"va\09\00", align 1
@.str.125 = private unnamed_addr constant [6 x i8] c"vag  \00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"vas  \00", align 1
@.str.127 = private unnamed_addr constant [6 x i8] c"vif  \00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"vpv  \00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"vtv  \00", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c"vpvtv\00", align 1
@.str.131 = private unnamed_addr constant [6 x i8] c"vpvts\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"vpvpv\00", align 1
@.str.133 = private unnamed_addr constant [6 x i8] c"vtvtv\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"vsumr\00", align 1
@.str.135 = private unnamed_addr constant [6 x i8] c"vdotr\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"vbor \00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"S000\09 %.2f \09\09\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"S111\09 %.2f \09\09\00", align 1
@.str.139 = private unnamed_addr constant [16 x i8] c"S1111\09 %.2f \09\09 \00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"S112\09 %.2f \09\09\00", align 1
@.str.141 = private unnamed_addr constant [16 x i8] c"S1112\09 %.2f \09\09 \00", align 1
@.str.142 = private unnamed_addr constant [14 x i8] c"S113\09 %.2f \09\09\00", align 1
@.str.143 = private unnamed_addr constant [15 x i8] c"S1113\09 %.2f \09\09\00", align 1
@.str.144 = private unnamed_addr constant [14 x i8] c"S114\09 %.2f \09\09\00", align 1
@.str.145 = private unnamed_addr constant [14 x i8] c"S115\09 %.2f \09\09\00", align 1
@.str.146 = private unnamed_addr constant [15 x i8] c"S1115\09 %.2f \09\09\00", align 1
@.str.147 = private unnamed_addr constant [14 x i8] c"S116\09 %.2f \09\09\00", align 1
@.str.148 = private unnamed_addr constant [14 x i8] c"S118\09 %.2f \09\09\00", align 1
@.str.149 = private unnamed_addr constant [15 x i8] c"S119\09 %.2f \09\09 \00", align 1
@.str.150 = private unnamed_addr constant [16 x i8] c"S1119\09 %.2f \09\09 \00", align 1
@.str.151 = private unnamed_addr constant [14 x i8] c"S121\09 %.2f \09\09\00", align 1
@.str.152 = private unnamed_addr constant [14 x i8] c"S122\09 %.2f \09\09\00", align 1
@.str.153 = private unnamed_addr constant [14 x i8] c"S123\09 %.2f \09\09\00", align 1
@.str.154 = private unnamed_addr constant [14 x i8] c"S124\09 %.2f \09\09\00", align 1
@.str.155 = private unnamed_addr constant [14 x i8] c"S125\09 %.2f \09\09\00", align 1
@.str.156 = private unnamed_addr constant [14 x i8] c"S126\09 %.2f \09\09\00", align 1
@.str.157 = private unnamed_addr constant [14 x i8] c"S127\09 %.2f \09\09\00", align 1
@.str.158 = private unnamed_addr constant [14 x i8] c"S128\09 %.2f \09\09\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"S131\09 %.2f \09\09\00", align 1
@.str.160 = private unnamed_addr constant [14 x i8] c"S132\09 %.2f \09\09\00", align 1
@.str.161 = private unnamed_addr constant [14 x i8] c"S141\09 %.2f \09\09\00", align 1
@.str.162 = private unnamed_addr constant [14 x i8] c"S151\09 %.2f \09\09\00", align 1
@.str.163 = private unnamed_addr constant [14 x i8] c"S152\09 %.2f \09\09\00", align 1
@.str.164 = private unnamed_addr constant [14 x i8] c"S161\09 %.2f \09\09\00", align 1
@.str.165 = private unnamed_addr constant [15 x i8] c"S1161\09 %.2f \09\09\00", align 1
@.str.166 = private unnamed_addr constant [14 x i8] c"S162\09 %.2f \09\09\00", align 1
@.str.167 = private unnamed_addr constant [14 x i8] c"S171\09 %.2f \09\09\00", align 1
@.str.168 = private unnamed_addr constant [14 x i8] c"S172\09 %.2f \09\09\00", align 1
@.str.169 = private unnamed_addr constant [14 x i8] c"S173\09 %.2f \09\09\00", align 1
@.str.170 = private unnamed_addr constant [14 x i8] c"S174\09 %.2f \09\09\00", align 1
@.str.171 = private unnamed_addr constant [14 x i8] c"S175\09 %.2f \09\09\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"S176\09 %.2f \09\09\00", align 1
@.str.173 = private unnamed_addr constant [14 x i8] c"S211\09 %.2f \09\09\00", align 1
@.str.174 = private unnamed_addr constant [14 x i8] c"S212\09 %.2f \09\09\00", align 1
@.str.175 = private unnamed_addr constant [15 x i8] c"S1213\09 %.2f \09\09\00", align 1
@.str.176 = private unnamed_addr constant [14 x i8] c"S221\09 %.2f \09\09\00", align 1
@.str.177 = private unnamed_addr constant [15 x i8] c"S221p\09 %.2f \09\09\00", align 1
@.str.178 = private unnamed_addr constant [15 x i8] c"S1221\09 %.2f \09\09\00", align 1
@.str.179 = private unnamed_addr constant [14 x i8] c"S222\09 %.2f \09\09\00", align 1
@.str.180 = private unnamed_addr constant [14 x i8] c"S231\09 %.2f \09\09\00", align 1
@.str.181 = private unnamed_addr constant [15 x i8] c"S231p\09 %.2f \09\09\00", align 1
@.str.182 = private unnamed_addr constant [16 x i8] c"S231pp\09 %.2f \09\09\00", align 1
@.str.183 = private unnamed_addr constant [17 x i8] c"S231ppp\09 %.2f \09\09\00", align 1
@.str.184 = private unnamed_addr constant [14 x i8] c"S232\09 %.2f \09\09\00", align 1
@.str.185 = private unnamed_addr constant [15 x i8] c"S1232\09 %.2f \09\09\00", align 1
@.str.186 = private unnamed_addr constant [14 x i8] c"S233\09 %.2f \09\09\00", align 1
@.str.187 = private unnamed_addr constant [15 x i8] c"S2233\09 %.2f \09\09\00", align 1
@.str.188 = private unnamed_addr constant [14 x i8] c"S235\09 %.2f \09\09\00", align 1
@.str.189 = private unnamed_addr constant [14 x i8] c"S241\09 %.2f \09\09\00", align 1
@.str.190 = private unnamed_addr constant [14 x i8] c"S242\09 %.2f \09\09\00", align 1
@.str.191 = private unnamed_addr constant [14 x i8] c"S243\09 %.2f \09\09\00", align 1
@.str.192 = private unnamed_addr constant [14 x i8] c"S244\09 %.2f \09\09\00", align 1
@.str.193 = private unnamed_addr constant [15 x i8] c"S1244\09 %.2f \09\09\00", align 1
@.str.194 = private unnamed_addr constant [15 x i8] c"S2244\09 %.2f \09\09\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"S251\09 %.2f \09\09\00", align 1
@.str.196 = private unnamed_addr constant [15 x i8] c"S1251\09 %.2f \09\09\00", align 1
@.str.197 = private unnamed_addr constant [15 x i8] c"S2251\09 %.2f \09\09\00", align 1
@.str.198 = private unnamed_addr constant [15 x i8] c"S3251\09 %.2f \09\09\00", align 1
@.str.199 = private unnamed_addr constant [14 x i8] c"S252\09 %.2f \09\09\00", align 1
@.str.200 = private unnamed_addr constant [14 x i8] c"S253\09 %.2f \09\09\00", align 1
@.str.201 = private unnamed_addr constant [14 x i8] c"S254\09 %.2f \09\09\00", align 1
@.str.202 = private unnamed_addr constant [14 x i8] c"S255\09 %.2f \09\09\00", align 1
@.str.203 = private unnamed_addr constant [14 x i8] c"S256\09 %.2f \09\09\00", align 1
@.str.204 = private unnamed_addr constant [15 x i8] c"S256p\09 %.2f \09\09\00", align 1
@.str.205 = private unnamed_addr constant [16 x i8] c"S256pp\09 %.2f \09\09\00", align 1
@.str.206 = private unnamed_addr constant [14 x i8] c"S257\09 %.2f \09\09\00", align 1
@.str.207 = private unnamed_addr constant [14 x i8] c"S258\09 %.2f \09\09\00", align 1
@.str.208 = private unnamed_addr constant [14 x i8] c"S261\09 %.2f \09\09\00", align 1
@.str.209 = private unnamed_addr constant [14 x i8] c"S271\09 %.2f \09\09\00", align 1
@.str.210 = private unnamed_addr constant [14 x i8] c"S272\09 %.2f \09\09\00", align 1
@.str.211 = private unnamed_addr constant [14 x i8] c"S273\09 %.2f \09\09\00", align 1
@.str.212 = private unnamed_addr constant [14 x i8] c"S274\09 %.2f \09\09\00", align 1
@.str.213 = private unnamed_addr constant [14 x i8] c"S275\09 %.2f \09\09\00", align 1
@.str.214 = private unnamed_addr constant [15 x i8] c"S2275\09 %.2f \09\09\00", align 1
@.str.215 = private unnamed_addr constant [14 x i8] c"S276\09 %.2f \09\09\00", align 1
@.str.216 = private unnamed_addr constant [15 x i8] c"S276p\09 %.2f \09\09\00", align 1
@.str.217 = private unnamed_addr constant [14 x i8] c"S277\09 %.2f \09\09\00", align 1
@.str.218 = private unnamed_addr constant [14 x i8] c"S278\09 %.2f \09\09\00", align 1
@.str.219 = private unnamed_addr constant [14 x i8] c"S279\09 %.2f \09\09\00", align 1
@.str.220 = private unnamed_addr constant [15 x i8] c"S1279\09 %.2f \09\09\00", align 1
@.str.221 = private unnamed_addr constant [15 x i8] c"S2710\09 %.2f \09\09\00", align 1
@.str.222 = private unnamed_addr constant [15 x i8] c"S2711\09 %.2f \09\09\00", align 1
@.str.223 = private unnamed_addr constant [15 x i8] c"S2712\09 %.2f \09\09\00", align 1
@.str.224 = private unnamed_addr constant [14 x i8] c"S281\09 %.2f \09\09\00", align 1
@.str.225 = private unnamed_addr constant [15 x i8] c"S1281\09 %.2f \09\09\00", align 1
@.str.226 = private unnamed_addr constant [14 x i8] c"S291\09 %.2f \09\09\00", align 1
@.str.227 = private unnamed_addr constant [14 x i8] c"S292\09 %.2f \09\09\00", align 1
@.str.228 = private unnamed_addr constant [14 x i8] c"S293\09 %.2f \09\09\00", align 1
@.str.229 = private unnamed_addr constant [15 x i8] c"S2101\09 %.2f \09\09\00", align 1
@.str.230 = private unnamed_addr constant [15 x i8] c"S2102\09 %.2f \09\09\00", align 1
@.str.231 = private unnamed_addr constant [15 x i8] c"S2111\09 %.2f \09\09\00", align 1
@.str.232 = private unnamed_addr constant [14 x i8] c"S311\09 %.2f \09\09\00", align 1
@.str.233 = private unnamed_addr constant [16 x i8] c"S31111\09 %.2f \09\09\00", align 1
@.str.234 = private unnamed_addr constant [14 x i8] c"S312\09 %.2f \09\09\00", align 1
@.str.235 = private unnamed_addr constant [14 x i8] c"S313\09 %.2f \09\09\00", align 1
@.str.236 = private unnamed_addr constant [14 x i8] c"S314\09 %.2f \09\09\00", align 1
@.str.237 = private unnamed_addr constant [14 x i8] c"S315\09 %.2f \09\09\00", align 1
@.str.238 = private unnamed_addr constant [14 x i8] c"S316\09 %.2f \09\09\00", align 1
@.str.239 = private unnamed_addr constant [14 x i8] c"S317\09 %.2f \09\09\00", align 1
@.str.240 = private unnamed_addr constant [14 x i8] c"S318\09 %.2f \09\09\00", align 1
@.str.241 = private unnamed_addr constant [14 x i8] c"S319\09 %.2f \09\09\00", align 1
@.str.242 = private unnamed_addr constant [15 x i8] c"S319p\09 %.2f \09\09\00", align 1
@.str.243 = private unnamed_addr constant [16 x i8] c"S319pp\09 %.2f \09\09\00", align 1
@.str.244 = private unnamed_addr constant [17 x i8] c"S319ppp\09 %.2f \09\09\00", align 1
@.str.245 = private unnamed_addr constant [15 x i8] c"S3110\09 %.2f \09\09\00", align 1
@.str.246 = private unnamed_addr constant [16 x i8] c"S13110\09 %.2f \09\09\00", align 1
@.str.247 = private unnamed_addr constant [15 x i8] c"S3111\09 %.2f \09\09\00", align 1
@.str.248 = private unnamed_addr constant [15 x i8] c"S3112\09 %.2f \09\09\00", align 1
@.str.249 = private unnamed_addr constant [15 x i8] c"S3113\09 %.2f \09\09\00", align 1
@.str.250 = private unnamed_addr constant [14 x i8] c"S321\09 %.2f \09\09\00", align 1
@.str.251 = private unnamed_addr constant [14 x i8] c"S322\09 %.2f \09\09\00", align 1
@.str.252 = private unnamed_addr constant [14 x i8] c"S323\09 %.2f \09\09\00", align 1
@.str.253 = private unnamed_addr constant [14 x i8] c"S331\09 %.2f \09\09\00", align 1
@.str.254 = private unnamed_addr constant [14 x i8] c"S332\09 %.2f \09\09\00", align 1
@.str.255 = private unnamed_addr constant [14 x i8] c"S341\09 %.2f \09\09\00", align 1
@.str.256 = private unnamed_addr constant [14 x i8] c"S342\09 %.2f \09\09\00", align 1
@.str.257 = private unnamed_addr constant [14 x i8] c"S343\09 %.2f \09\09\00", align 1
@.str.258 = private unnamed_addr constant [14 x i8] c"S351\09 %.2f \09\09\00", align 1
@.str.259 = private unnamed_addr constant [15 x i8] c"S1351\09 %.2f \09\09\00", align 1
@.str.260 = private unnamed_addr constant [14 x i8] c"S352\09 %.2f \09\09\00", align 1
@.str.261 = private unnamed_addr constant [14 x i8] c"S353\09 %.2f \09\09\00", align 1
@xx = common dso_local global float* null, align 8
@yy = common dso_local global float* null, align 8
@.str.262 = private unnamed_addr constant [14 x i8] c"S421\09 %.2f \09\09\00", align 1
@.str.263 = private unnamed_addr constant [15 x i8] c"S1421\09 %.2f \09\09\00", align 1
@.str.264 = private unnamed_addr constant [14 x i8] c"S422\09 %.2f \09\09\00", align 1
@.str.265 = private unnamed_addr constant [14 x i8] c"S423\09 %.2f \09\09\00", align 1
@.str.266 = private unnamed_addr constant [14 x i8] c"S424\09 %.2f \09\09\00", align 1
@.str.267 = private unnamed_addr constant [14 x i8] c"S431\09 %.2f \09\09\00", align 1
@.str.268 = private unnamed_addr constant [14 x i8] c"S441\09 %.2f \09\09\00", align 1
@indx = common dso_local global [32000 x i32] zeroinitializer, align 16
@.str.269 = private unnamed_addr constant [14 x i8] c"S442\09 %.2f \09\09\00", align 1
@.str.270 = private unnamed_addr constant [14 x i8] c"S443\09 %.2f \09\09\00", align 1
@.str.271 = private unnamed_addr constant [14 x i8] c"S451\09 %.2f \09\09\00", align 1
@.str.272 = private unnamed_addr constant [14 x i8] c"S452\09 %.2f \09\09\00", align 1
@.str.273 = private unnamed_addr constant [14 x i8] c"S453\09 %.2f \09\09\00", align 1
@x = common dso_local global [32000 x float] zeroinitializer, align 16
@.str.274 = private unnamed_addr constant [14 x i8] c"S471\09 %.2f \09\09\00", align 1
@.str.275 = private unnamed_addr constant [14 x i8] c"S481\09 %.2f \09\09\00", align 1
@.str.276 = private unnamed_addr constant [14 x i8] c"S482\09 %.2f \09\09\00", align 1
@.str.277 = private unnamed_addr constant [14 x i8] c"S491\09 %.2f \09\09\00", align 1
@.str.278 = private unnamed_addr constant [15 x i8] c"S4112\09 %.2f \09\09\00", align 1
@.str.279 = private unnamed_addr constant [15 x i8] c"S4113\09 %.2f \09\09\00", align 1
@.str.280 = private unnamed_addr constant [15 x i8] c"S4114\09 %.2f \09\09\00", align 1
@.str.281 = private unnamed_addr constant [15 x i8] c"S4115\09 %.2f \09\09\00", align 1
@.str.282 = private unnamed_addr constant [15 x i8] c"S4116\09 %.2f \09\09\00", align 1
@.str.283 = private unnamed_addr constant [15 x i8] c"S4117\09 %.2f \09\09\00", align 1
@.str.284 = private unnamed_addr constant [15 x i8] c"S4121\09 %.2f \09\09\00", align 1
@.str.285 = private unnamed_addr constant [12 x i8] c"va\09 %.2f \09\09\00", align 1
@.str.286 = private unnamed_addr constant [13 x i8] c"vag\09 %.2f \09\09\00", align 1
@.str.287 = private unnamed_addr constant [13 x i8] c"vas\09 %.2f \09\09\00", align 1
@.str.288 = private unnamed_addr constant [13 x i8] c"vif\09 %.2f \09\09\00", align 1
@.str.289 = private unnamed_addr constant [13 x i8] c"vpv\09 %.2f \09\09\00", align 1
@.str.290 = private unnamed_addr constant [13 x i8] c"vtv\09 %.2f \09\09\00", align 1
@.str.291 = private unnamed_addr constant [15 x i8] c"vpvtv\09 %.2f \09\09\00", align 1
@.str.292 = private unnamed_addr constant [15 x i8] c"vpvts\09 %.2f \09\09\00", align 1
@.str.293 = private unnamed_addr constant [15 x i8] c"vpvpv\09 %.2f \09\09\00", align 1
@.str.294 = private unnamed_addr constant [15 x i8] c"vtvtv\09 %.2f \09\09\00", align 1
@.str.295 = private unnamed_addr constant [15 x i8] c"vsumr\09 %.2f \09\09\00", align 1
@.str.296 = private unnamed_addr constant [15 x i8] c"vdotr\09 %.2f \09\09\00", align 1
@.str.297 = private unnamed_addr constant [14 x i8] c"vbor\09 %.2f \09\09\00", align 1
@.str.298 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.299 = private unnamed_addr constant [30 x i8] c"Loop \09 Time(Sec) \09 Checksum \0A\00", align 1
@temp_int = common dso_local global i32 0, align 4
@tt = common dso_local global [256 x [256 x float]] zeroinitializer, align 16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set1d(float* %0, float %1, i32 %2) #0 {
  %4 = alloca float*, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store float* %0, float** %4, align 8
  store float %1, float* %5, align 4
  store i32 %2, i32* %6, align 4
  %10 = load i32, i32* %6, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %31

12:                                               ; preds = %3
  store i32 0, i32* %7, align 4
  br label %13

13:                                               ; preds = %27, %12
  %14 = load i32, i32* %7, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %30

16:                                               ; preds = %13
  %17 = load i32, i32* %7, align 4
  %18 = add nsw i32 %17, 1
  %19 = sitofp i32 %18 to float
  %20 = fpext float %19 to double
  %21 = fdiv double 1.000000e+00, %20
  %22 = fptrunc double %21 to float
  %23 = load float*, float** %4, align 8
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, float* %23, i64 %25
  store float %22, float* %26, align 4
  br label %27

27:                                               ; preds = %16
  %28 = load i32, i32* %7, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %7, align 4
  br label %13

30:                                               ; preds = %13
  br label %72

31:                                               ; preds = %3
  %32 = load i32, i32* %6, align 4
  %33 = icmp eq i32 %32, -2
  br i1 %33, label %34, label %56

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  br label %35

35:                                               ; preds = %52, %34
  %36 = load i32, i32* %8, align 4
  %37 = icmp slt i32 %36, 32000
  br i1 %37, label %38, label %55

38:                                               ; preds = %35
  %39 = load i32, i32* %8, align 4
  %40 = add nsw i32 %39, 1
  %41 = load i32, i32* %8, align 4
  %42 = add nsw i32 %41, 1
  %43 = mul nsw i32 %40, %42
  %44 = sitofp i32 %43 to float
  %45 = fpext float %44 to double
  %46 = fdiv double 1.000000e+00, %45
  %47 = fptrunc double %46 to float
  %48 = load float*, float** %4, align 8
  %49 = load i32, i32* %8, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds float, float* %48, i64 %50
  store float %47, float* %51, align 4
  br label %52

52:                                               ; preds = %38
  %53 = load i32, i32* %8, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %8, align 4
  br label %35

55:                                               ; preds = %35
  br label %71

56:                                               ; preds = %31
  store i32 0, i32* %9, align 4
  br label %57

57:                                               ; preds = %66, %56
  %58 = load i32, i32* %9, align 4
  %59 = icmp slt i32 %58, 32000
  br i1 %59, label %60, label %70

60:                                               ; preds = %57
  %61 = load float, float* %5, align 4
  %62 = load float*, float** %4, align 8
  %63 = load i32, i32* %9, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds float, float* %62, i64 %64
  store float %61, float* %65, align 4
  br label %66

66:                                               ; preds = %60
  %67 = load i32, i32* %6, align 4
  %68 = load i32, i32* %9, align 4
  %69 = add nsw i32 %68, %67
  store i32 %69, i32* %9, align 4
  br label %57

70:                                               ; preds = %57
  br label %71

71:                                               ; preds = %70, %55
  br label %72

72:                                               ; preds = %71, %30
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set1ds(i32 %0, float* %1, float %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca float*, align 8
  %7 = alloca float, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store float* %1, float** %6, align 8
  store float %2, float* %7, align 4
  store i32 %3, i32* %8, align 4
  %12 = load i32, i32* %8, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %33

14:                                               ; preds = %4
  store i32 0, i32* %9, align 4
  br label %15

15:                                               ; preds = %29, %14
  %16 = load i32, i32* %9, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %32

18:                                               ; preds = %15
  %19 = load i32, i32* %9, align 4
  %20 = add nsw i32 %19, 1
  %21 = sitofp i32 %20 to float
  %22 = fpext float %21 to double
  %23 = fdiv double 1.000000e+00, %22
  %24 = fptrunc double %23 to float
  %25 = load float*, float** %6, align 8
  %26 = load i32, i32* %9, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, float* %25, i64 %27
  store float %24, float* %28, align 4
  br label %29

29:                                               ; preds = %18
  %30 = load i32, i32* %9, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %9, align 4
  br label %15

32:                                               ; preds = %15
  br label %74

33:                                               ; preds = %4
  %34 = load i32, i32* %8, align 4
  %35 = icmp eq i32 %34, -2
  br i1 %35, label %36, label %58

36:                                               ; preds = %33
  store i32 0, i32* %10, align 4
  br label %37

37:                                               ; preds = %54, %36
  %38 = load i32, i32* %10, align 4
  %39 = icmp slt i32 %38, 32000
  br i1 %39, label %40, label %57

40:                                               ; preds = %37
  %41 = load i32, i32* %10, align 4
  %42 = add nsw i32 %41, 1
  %43 = load i32, i32* %10, align 4
  %44 = add nsw i32 %43, 1
  %45 = mul nsw i32 %42, %44
  %46 = sitofp i32 %45 to float
  %47 = fpext float %46 to double
  %48 = fdiv double 1.000000e+00, %47
  %49 = fptrunc double %48 to float
  %50 = load float*, float** %6, align 8
  %51 = load i32, i32* %10, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float, float* %50, i64 %52
  store float %49, float* %53, align 4
  br label %54

54:                                               ; preds = %40
  %55 = load i32, i32* %10, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %10, align 4
  br label %37

57:                                               ; preds = %37
  br label %73

58:                                               ; preds = %33
  store i32 0, i32* %11, align 4
  br label %59

59:                                               ; preds = %68, %58
  %60 = load i32, i32* %11, align 4
  %61 = icmp slt i32 %60, 32000
  br i1 %61, label %62, label %72

62:                                               ; preds = %59
  %63 = load float, float* %7, align 4
  %64 = load float*, float** %6, align 8
  %65 = load i32, i32* %11, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds float, float* %64, i64 %66
  store float %63, float* %67, align 4
  br label %68

68:                                               ; preds = %62
  %69 = load i32, i32* %8, align 4
  %70 = load i32, i32* %11, align 4
  %71 = add nsw i32 %70, %69
  store i32 %71, i32* %11, align 4
  br label %59

72:                                               ; preds = %59
  br label %73

73:                                               ; preds = %72, %57
  br label %74

74:                                               ; preds = %73, %32
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set2d([256 x float]* %0, float %1, i32 %2) #0 {
  %4 = alloca [256 x float]*, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store [256 x float]* %0, [256 x float]** %4, align 8
  store float %1, float* %5, align 4
  store i32 %2, i32* %6, align 4
  %13 = load i32, i32* %6, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %45

15:                                               ; preds = %3
  store i32 0, i32* %7, align 4
  br label %16

16:                                               ; preds = %41, %15
  %17 = load i32, i32* %7, align 4
  %18 = icmp slt i32 %17, 256
  br i1 %18, label %19, label %44

19:                                               ; preds = %16
  store i32 0, i32* %8, align 4
  br label %20

20:                                               ; preds = %37, %19
  %21 = load i32, i32* %8, align 4
  %22 = icmp slt i32 %21, 256
  br i1 %22, label %23, label %40

23:                                               ; preds = %20
  %24 = load i32, i32* %7, align 4
  %25 = add nsw i32 %24, 1
  %26 = sitofp i32 %25 to float
  %27 = fpext float %26 to double
  %28 = fdiv double 1.000000e+00, %27
  %29 = fptrunc double %28 to float
  %30 = load [256 x float]*, [256 x float]** %4, align 8
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [256 x float], [256 x float]* %30, i64 %32
  %34 = load i32, i32* %8, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [256 x float], [256 x float]* %33, i64 0, i64 %35
  store float %29, float* %36, align 4
  br label %37

37:                                               ; preds = %23
  %38 = load i32, i32* %8, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %8, align 4
  br label %20

40:                                               ; preds = %20
  br label %41

41:                                               ; preds = %40
  %42 = load i32, i32* %7, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %7, align 4
  br label %16

44:                                               ; preds = %16
  br label %108

45:                                               ; preds = %3
  %46 = load i32, i32* %6, align 4
  %47 = icmp eq i32 %46, -2
  br i1 %47, label %48, label %81

48:                                               ; preds = %45
  store i32 0, i32* %9, align 4
  br label %49

49:                                               ; preds = %77, %48
  %50 = load i32, i32* %9, align 4
  %51 = icmp slt i32 %50, 256
  br i1 %51, label %52, label %80

52:                                               ; preds = %49
  store i32 0, i32* %10, align 4
  br label %53

53:                                               ; preds = %73, %52
  %54 = load i32, i32* %10, align 4
  %55 = icmp slt i32 %54, 256
  br i1 %55, label %56, label %76

56:                                               ; preds = %53
  %57 = load i32, i32* %9, align 4
  %58 = add nsw i32 %57, 1
  %59 = load i32, i32* %9, align 4
  %60 = add nsw i32 %59, 1
  %61 = mul nsw i32 %58, %60
  %62 = sitofp i32 %61 to float
  %63 = fpext float %62 to double
  %64 = fdiv double 1.000000e+00, %63
  %65 = fptrunc double %64 to float
  %66 = load [256 x float]*, [256 x float]** %4, align 8
  %67 = load i32, i32* %9, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [256 x float], [256 x float]* %66, i64 %68
  %70 = load i32, i32* %10, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [256 x float], [256 x float]* %69, i64 0, i64 %71
  store float %65, float* %72, align 4
  br label %73

73:                                               ; preds = %56
  %74 = load i32, i32* %10, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %10, align 4
  br label %53

76:                                               ; preds = %53
  br label %77

77:                                               ; preds = %76
  %78 = load i32, i32* %9, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %9, align 4
  br label %49

80:                                               ; preds = %49
  br label %107

81:                                               ; preds = %45
  store i32 0, i32* %11, align 4
  br label %82

82:                                               ; preds = %103, %81
  %83 = load i32, i32* %11, align 4
  %84 = icmp slt i32 %83, 256
  br i1 %84, label %85, label %106

85:                                               ; preds = %82
  store i32 0, i32* %12, align 4
  br label %86

86:                                               ; preds = %98, %85
  %87 = load i32, i32* %12, align 4
  %88 = icmp slt i32 %87, 256
  br i1 %88, label %89, label %102

89:                                               ; preds = %86
  %90 = load float, float* %5, align 4
  %91 = load [256 x float]*, [256 x float]** %4, align 8
  %92 = load i32, i32* %11, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [256 x float], [256 x float]* %91, i64 %93
  %95 = load i32, i32* %12, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [256 x float], [256 x float]* %94, i64 0, i64 %96
  store float %90, float* %97, align 4
  br label %98

98:                                               ; preds = %89
  %99 = load i32, i32* %6, align 4
  %100 = load i32, i32* %12, align 4
  %101 = add nsw i32 %100, %99
  store i32 %101, i32* %12, align 4
  br label %86

102:                                              ; preds = %86
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %11, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %11, align 4
  br label %82

106:                                              ; preds = %82
  br label %107

107:                                              ; preds = %106, %80
  br label %108

108:                                              ; preds = %107, %44
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local float @sum1d(float* %0) #0 {
  %2 = alloca float*, align 8
  %3 = alloca float, align 4
  %4 = alloca i32, align 4
  store float* %0, float** %2, align 8
  store float 0.000000e+00, float* %3, align 4
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %16, %1
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 32000
  br i1 %7, label %8, label %19

8:                                                ; preds = %5
  %9 = load float*, float** %2, align 8
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds float, float* %9, i64 %11
  %13 = load float, float* %12, align 4
  %14 = load float, float* %3, align 4
  %15 = fadd float %14, %13
  store float %15, float* %3, align 4
  br label %16

16:                                               ; preds = %8
  %17 = load i32, i32* %4, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %4, align 4
  br label %5

19:                                               ; preds = %5
  %20 = load float, float* %3, align 4
  ret float %20
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @s471s() #1 {
  ret i32 0
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local float @f(float %0, float %1) #1 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  store float %0, float* %3, align 4
  store float %1, float* %4, align 4
  %5 = load float, float* %3, align 4
  %6 = load float, float* %4, align 4
  %7 = fmul float %5, %6
  ret float %7
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @check(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca i32, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca float, align 4
  %15 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store float 0.000000e+00, float* %3, align 4
  store float 0.000000e+00, float* %4, align 4
  store float 0.000000e+00, float* %5, align 4
  store float 0.000000e+00, float* %6, align 4
  store float 0.000000e+00, float* %7, align 4
  store i32 0, i32* %8, align 4
  br label %16

16:                                               ; preds = %50, %1
  %17 = load i32, i32* %8, align 4
  %18 = icmp slt i32 %17, 32000
  br i1 %18, label %19, label %53

19:                                               ; preds = %16
  %20 = load i32, i32* %8, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load float, float* %3, align 4
  %25 = fadd float %24, %23
  store float %25, float* %3, align 4
  %26 = load i32, i32* %8, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load float, float* %4, align 4
  %31 = fadd float %30, %29
  store float %31, float* %4, align 4
  %32 = load i32, i32* %8, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = load float, float* %5, align 4
  %37 = fadd float %36, %35
  store float %37, float* %5, align 4
  %38 = load i32, i32* %8, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = load float, float* %6, align 4
  %43 = fadd float %42, %41
  store float %43, float* %6, align 4
  %44 = load i32, i32* %8, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %45
  %47 = load float, float* %46, align 4
  %48 = load float, float* %7, align 4
  %49 = fadd float %48, %47
  store float %49, float* %7, align 4
  br label %50

50:                                               ; preds = %19
  %51 = load i32, i32* %8, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %8, align 4
  br label %16

53:                                               ; preds = %16
  store float 0.000000e+00, float* %9, align 4
  store float 0.000000e+00, float* %10, align 4
  store float 0.000000e+00, float* %11, align 4
  store i32 0, i32* %12, align 4
  br label %54

54:                                               ; preds = %93, %53
  %55 = load i32, i32* %12, align 4
  %56 = icmp slt i32 %55, 256
  br i1 %56, label %57, label %96

57:                                               ; preds = %54
  store i32 0, i32* %13, align 4
  br label %58

58:                                               ; preds = %89, %57
  %59 = load i32, i32* %13, align 4
  %60 = icmp slt i32 %59, 256
  br i1 %60, label %61, label %92

61:                                               ; preds = %58
  %62 = load i32, i32* %12, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %63
  %65 = load i32, i32* %13, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [256 x float], [256 x float]* %64, i64 0, i64 %66
  %68 = load float, float* %67, align 4
  %69 = load float, float* %9, align 4
  %70 = fadd float %69, %68
  store float %70, float* %9, align 4
  %71 = load i32, i32* %12, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %72
  %74 = load i32, i32* %13, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [256 x float], [256 x float]* %73, i64 0, i64 %75
  %77 = load float, float* %76, align 4
  %78 = load float, float* %10, align 4
  %79 = fadd float %78, %77
  store float %79, float* %10, align 4
  %80 = load i32, i32* %12, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %81
  %83 = load i32, i32* %13, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [256 x float], [256 x float]* %82, i64 0, i64 %84
  %86 = load float, float* %85, align 4
  %87 = load float, float* %11, align 4
  %88 = fadd float %87, %86
  store float %88, float* %11, align 4
  br label %89

89:                                               ; preds = %61
  %90 = load i32, i32* %13, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %13, align 4
  br label %58

92:                                               ; preds = %58
  br label %93

93:                                               ; preds = %92
  %94 = load i32, i32* %12, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %12, align 4
  br label %54

96:                                               ; preds = %54
  store float 0.000000e+00, float* %14, align 4
  store i32 0, i32* %15, align 4
  br label %97

97:                                               ; preds = %107, %96
  %98 = load i32, i32* %15, align 4
  %99 = icmp slt i32 %98, 65536
  br i1 %99, label %100, label %110

100:                                              ; preds = %97
  %101 = load i32, i32* %15, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %102
  %104 = load float, float* %103, align 4
  %105 = load float, float* %14, align 4
  %106 = fadd float %105, %104
  store float %106, float* %14, align 4
  br label %107

107:                                              ; preds = %100
  %108 = load i32, i32* %15, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %15, align 4
  br label %97

110:                                              ; preds = %97
  %111 = load i32, i32* %2, align 4
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %117

113:                                              ; preds = %110
  %114 = load float, float* %3, align 4
  %115 = fpext float %114 to double
  %116 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %115)
  br label %117

117:                                              ; preds = %113, %110
  %118 = load i32, i32* %2, align 4
  %119 = icmp eq i32 %118, 2
  br i1 %119, label %120, label %124

120:                                              ; preds = %117
  %121 = load float, float* %4, align 4
  %122 = fpext float %121 to double
  %123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %122)
  br label %124

124:                                              ; preds = %120, %117
  %125 = load i32, i32* %2, align 4
  %126 = icmp eq i32 %125, 3
  br i1 %126, label %127, label %131

127:                                              ; preds = %124
  %128 = load float, float* %5, align 4
  %129 = fpext float %128 to double
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %129)
  br label %131

131:                                              ; preds = %127, %124
  %132 = load i32, i32* %2, align 4
  %133 = icmp eq i32 %132, 4
  br i1 %133, label %134, label %138

134:                                              ; preds = %131
  %135 = load float, float* %6, align 4
  %136 = fpext float %135 to double
  %137 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %136)
  br label %138

138:                                              ; preds = %134, %131
  %139 = load i32, i32* %2, align 4
  %140 = icmp eq i32 %139, 5
  br i1 %140, label %141, label %145

141:                                              ; preds = %138
  %142 = load float, float* %7, align 4
  %143 = fpext float %142 to double
  %144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %143)
  br label %145

145:                                              ; preds = %141, %138
  %146 = load i32, i32* %2, align 4
  %147 = icmp eq i32 %146, 11
  br i1 %147, label %148, label %152

148:                                              ; preds = %145
  %149 = load float, float* %9, align 4
  %150 = fpext float %149 to double
  %151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %150)
  br label %152

152:                                              ; preds = %148, %145
  %153 = load i32, i32* %2, align 4
  %154 = icmp eq i32 %153, 22
  br i1 %154, label %155, label %159

155:                                              ; preds = %152
  %156 = load float, float* %10, align 4
  %157 = fpext float %156 to double
  %158 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %157)
  br label %159

159:                                              ; preds = %155, %152
  %160 = load i32, i32* %2, align 4
  %161 = icmp eq i32 %160, 33
  br i1 %161, label %162, label %166

162:                                              ; preds = %159
  %163 = load float, float* %11, align 4
  %164 = fpext float %163 to double
  %165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %164)
  br label %166

166:                                              ; preds = %162, %159
  %167 = load i32, i32* %2, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %166
  %170 = load float, float* %14, align 4
  %171 = fpext float %170 to double
  %172 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %171)
  br label %173

173:                                              ; preds = %169, %166
  %174 = load i32, i32* %2, align 4
  %175 = icmp eq i32 %174, 12
  br i1 %175, label %176, label %182

176:                                              ; preds = %173
  %177 = load float, float* %3, align 4
  %178 = load float, float* %4, align 4
  %179 = fadd float %177, %178
  %180 = fpext float %179 to double
  %181 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %180)
  br label %182

182:                                              ; preds = %176, %173
  %183 = load i32, i32* %2, align 4
  %184 = icmp eq i32 %183, 25
  br i1 %184, label %185, label %191

185:                                              ; preds = %182
  %186 = load float, float* %4, align 4
  %187 = load float, float* %7, align 4
  %188 = fadd float %186, %187
  %189 = fpext float %188 to double
  %190 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %189)
  br label %191

191:                                              ; preds = %185, %182
  %192 = load i32, i32* %2, align 4
  %193 = icmp eq i32 %192, 13
  br i1 %193, label %194, label %200

194:                                              ; preds = %191
  %195 = load float, float* %3, align 4
  %196 = load float, float* %5, align 4
  %197 = fadd float %195, %196
  %198 = fpext float %197 to double
  %199 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %198)
  br label %200

200:                                              ; preds = %194, %191
  %201 = load i32, i32* %2, align 4
  %202 = icmp eq i32 %201, 123
  br i1 %202, label %203, label %211

203:                                              ; preds = %200
  %204 = load float, float* %3, align 4
  %205 = load float, float* %4, align 4
  %206 = fadd float %204, %205
  %207 = load float, float* %5, align 4
  %208 = fadd float %206, %207
  %209 = fpext float %208 to double
  %210 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %209)
  br label %211

211:                                              ; preds = %203, %200
  %212 = load i32, i32* %2, align 4
  %213 = icmp eq i32 %212, 1122
  br i1 %213, label %214, label %220

214:                                              ; preds = %211
  %215 = load float, float* %9, align 4
  %216 = load float, float* %10, align 4
  %217 = fadd float %215, %216
  %218 = fpext float %217 to double
  %219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %218)
  br label %220

220:                                              ; preds = %214, %211
  %221 = load i32, i32* %2, align 4
  %222 = icmp eq i32 %221, 112233
  br i1 %222, label %223, label %231

223:                                              ; preds = %220
  %224 = load float, float* %9, align 4
  %225 = load float, float* %10, align 4
  %226 = fadd float %224, %225
  %227 = load float, float* %11, align 4
  %228 = fadd float %226, %227
  %229 = fpext float %228 to double
  %230 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %229)
  br label %231

231:                                              ; preds = %223, %220
  %232 = load i32, i32* %2, align 4
  %233 = icmp eq i32 %232, 111
  br i1 %233, label %234, label %240

234:                                              ; preds = %231
  %235 = load float, float* %9, align 4
  %236 = load float, float* %3, align 4
  %237 = fadd float %235, %236
  %238 = fpext float %237 to double
  %239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %238)
  br label %240

240:                                              ; preds = %234, %231
  %241 = load i32, i32* %2, align 4
  %242 = icmp eq i32 %241, -1
  br i1 %242, label %243, label %247

243:                                              ; preds = %240
  %244 = load float, float* @temp, align 4
  %245 = fpext float %244 to double
  %246 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %245)
  br label %247

247:                                              ; preds = %243, %240
  %248 = load i32, i32* %2, align 4
  %249 = icmp eq i32 %248, -12
  br i1 %249, label %250, label %256

250:                                              ; preds = %247
  %251 = load float, float* @temp, align 4
  %252 = load float, float* %4, align 4
  %253 = fadd float %251, %252
  %254 = fpext float %253 to double
  %255 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %254)
  br label %256

256:                                              ; preds = %250, %247
  ret void
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @init(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store float 0.000000e+00, float* %3, align 4
  store float 0.000000e+00, float* %4, align 4
  store float 5.000000e-01, float* %5, align 4
  store float 1.000000e+00, float* %6, align 4
  store float 2.000000e+00, float* %7, align 4
  store float 0x3EB0C6F7A0000000, float* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 -1, i32* %10, align 4
  store i32 -2, i32* %11, align 4
  %13 = load i8*, i8** %2, align 8
  %14 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #8
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %55, label %16

16:                                               ; preds = %1
  store i32 0, i32* %12, align 4
  br label %17

17:                                               ; preds = %51, %16
  %18 = load i32, i32* %12, align 4
  %19 = icmp slt i32 %18, 32000
  br i1 %19, label %20, label %54

20:                                               ; preds = %17
  %21 = load i32, i32* %12, align 4
  %22 = add nsw i32 1, %21
  %23 = sitofp i32 %22 to float
  %24 = load i32, i32* %12, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @X, i64 0, i64 %25
  store float %23, float* %26, align 4
  %27 = load i32, i32* %12, align 4
  %28 = add nsw i32 2, %27
  %29 = sitofp i32 %28 to float
  %30 = load i32, i32* %12, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @Y, i64 0, i64 %31
  store float %29, float* %32, align 4
  %33 = load i32, i32* %12, align 4
  %34 = add nsw i32 3, %33
  %35 = sitofp i32 %34 to float
  %36 = load i32, i32* %12, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @Z, i64 0, i64 %37
  store float %35, float* %38, align 4
  %39 = load i32, i32* %12, align 4
  %40 = add nsw i32 4, %39
  %41 = sitofp i32 %40 to float
  %42 = load i32, i32* %12, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @U, i64 0, i64 %43
  store float %41, float* %44, align 4
  %45 = load i32, i32* %12, align 4
  %46 = add nsw i32 5, %45
  %47 = sitofp i32 %46 to float
  %48 = load i32, i32* %12, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @V, i64 0, i64 %49
  store float %47, float* %50, align 4
  br label %51

51:                                               ; preds = %20
  %52 = load i32, i32* %12, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %12, align 4
  br label %17

54:                                               ; preds = %17
  br label %2055

55:                                               ; preds = %1
  %56 = load i8*, i8** %2, align 8
  %57 = call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #8
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %75, label %59

59:                                               ; preds = %55
  %60 = load float, float* %6, align 4
  %61 = load i32, i32* %9, align 4
  %62 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %60, i32 %61)
  %63 = load float, float* %3, align 4
  %64 = load i32, i32* %11, align 4
  %65 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %63, i32 %64)
  %66 = load float, float* %3, align 4
  %67 = load i32, i32* %11, align 4
  %68 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %66, i32 %67)
  %69 = load float, float* %3, align 4
  %70 = load i32, i32* %11, align 4
  %71 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %69, i32 %70)
  %72 = load float, float* %3, align 4
  %73 = load i32, i32* %11, align 4
  %74 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %72, i32 %73)
  br label %2054

75:                                               ; preds = %55
  %76 = load i8*, i8** %2, align 8
  %77 = call i32 @strcmp(i8* %76, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #8
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %86, label %79

79:                                               ; preds = %75
  %80 = load float, float* %6, align 4
  %81 = load i32, i32* %9, align 4
  %82 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %80, i32 %81)
  %83 = load float, float* %3, align 4
  %84 = load i32, i32* %11, align 4
  %85 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %83, i32 %84)
  br label %2053

86:                                               ; preds = %75
  %87 = load i8*, i8** %2, align 8
  %88 = call i32 @strcmp(i8* %87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #8
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %86
  %91 = load float, float* %6, align 4
  %92 = load i32, i32* %9, align 4
  %93 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %91, i32 %92)
  %94 = load float, float* %3, align 4
  %95 = load i32, i32* %11, align 4
  %96 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %94, i32 %95)
  br label %2052

97:                                               ; preds = %86
  %98 = load i8*, i8** %2, align 8
  %99 = call i32 @strcmp(i8* %98, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #8
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %97
  %102 = load float, float* %3, align 4
  %103 = load i32, i32* %10, align 4
  %104 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %102, i32 %103)
  %105 = load float, float* %3, align 4
  %106 = load i32, i32* %11, align 4
  %107 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %105, i32 %106)
  br label %2051

108:                                              ; preds = %97
  %109 = load i8*, i8** %2, align 8
  %110 = call i32 @strcmp(i8* %109, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #8
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %125, label %112

112:                                              ; preds = %108
  %113 = load float, float* %6, align 4
  %114 = load i32, i32* %9, align 4
  %115 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %113, i32 %114)
  %116 = load float, float* %8, align 4
  %117 = load i32, i32* %9, align 4
  %118 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %116, i32 %117)
  %119 = load float, float* %8, align 4
  %120 = load i32, i32* %9, align 4
  %121 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %119, i32 %120)
  %122 = load float, float* %8, align 4
  %123 = load i32, i32* %9, align 4
  %124 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %122, i32 %123)
  br label %2050

125:                                              ; preds = %108
  %126 = load i8*, i8** %2, align 8
  %127 = call i32 @strcmp(i8* %126, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)) #8
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %125
  %130 = load float, float* %6, align 4
  %131 = load i32, i32* %9, align 4
  %132 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %130, i32 %131)
  br label %2049

133:                                              ; preds = %125
  %134 = load i8*, i8** %2, align 8
  %135 = call i32 @strcmp(i8* %134, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #8
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %133
  %138 = load float, float* %6, align 4
  %139 = load i32, i32* %9, align 4
  %140 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %138, i32 %139)
  %141 = load float, float* %8, align 4
  %142 = load i32, i32* %9, align 4
  %143 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %141, i32 %142)
  br label %2048

144:                                              ; preds = %133
  %145 = load i8*, i8** %2, align 8
  %146 = call i32 @strcmp(i8* %145, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)) #8
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %155, label %148

148:                                              ; preds = %144
  %149 = load float, float* %6, align 4
  %150 = load i32, i32* %9, align 4
  %151 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %149, i32 %150)
  %152 = load float, float* %3, align 4
  %153 = load i32, i32* %11, align 4
  %154 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %152, i32 %153)
  br label %2047

155:                                              ; preds = %144
  %156 = load i8*, i8** %2, align 8
  %157 = call i32 @strcmp(i8* %156, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)) #8
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %166, label %159

159:                                              ; preds = %155
  %160 = load float, float* %6, align 4
  %161 = load i32, i32* %9, align 4
  %162 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %160, i32 %161)
  %163 = load float, float* %3, align 4
  %164 = load i32, i32* %11, align 4
  %165 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %163, i32 %164)
  br label %2046

166:                                              ; preds = %155
  %167 = load i8*, i8** %2, align 8
  %168 = call i32 @strcmp(i8* %167, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #8
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %177, label %170

170:                                              ; preds = %166
  %171 = load float, float* %6, align 4
  %172 = load i32, i32* %9, align 4
  %173 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %171, i32 %172)
  %174 = load float, float* %3, align 4
  %175 = load i32, i32* %11, align 4
  %176 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %174, i32 %175)
  br label %2045

177:                                              ; preds = %166
  %178 = load i8*, i8** %2, align 8
  %179 = call i32 @strcmp(i8* %178, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #8
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %197, label %181

181:                                              ; preds = %177
  %182 = load float, float* %4, align 4
  %183 = load i32, i32* %9, align 4
  %184 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %182, i32 %183)
  %185 = load float, float* %6, align 4
  %186 = load i32, i32* %9, align 4
  %187 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %185, i32 %186)
  %188 = load float, float* %6, align 4
  %189 = load i32, i32* %9, align 4
  %190 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %188, i32 %189)
  %191 = load float, float* %3, align 4
  %192 = load i32, i32* %10, align 4
  %193 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %191, i32 %192)
  %194 = load float, float* %3, align 4
  %195 = load i32, i32* %10, align 4
  %196 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %194, i32 %195)
  br label %2044

197:                                              ; preds = %177
  %198 = load i8*, i8** %2, align 8
  %199 = call i32 @strcmp(i8* %198, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #8
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %217, label %201

201:                                              ; preds = %197
  %202 = load float, float* %4, align 4
  %203 = load i32, i32* %9, align 4
  %204 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %202, i32 %203)
  %205 = load float, float* %6, align 4
  %206 = load i32, i32* %9, align 4
  %207 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %205, i32 %206)
  %208 = load float, float* %6, align 4
  %209 = load i32, i32* %9, align 4
  %210 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %208, i32 %209)
  %211 = load float, float* %3, align 4
  %212 = load i32, i32* %10, align 4
  %213 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %211, i32 %212)
  %214 = load float, float* %3, align 4
  %215 = load i32, i32* %10, align 4
  %216 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %214, i32 %215)
  br label %2043

217:                                              ; preds = %197
  %218 = load i8*, i8** %2, align 8
  %219 = call i32 @strcmp(i8* %218, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #8
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %234, label %221

221:                                              ; preds = %217
  %222 = load float, float* %4, align 4
  %223 = load i32, i32* %9, align 4
  %224 = call i32 @set1ds(i32 1024000000, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0), float %222, i32 %223)
  %225 = load float, float* %6, align 4
  %226 = load i32, i32* %9, align 4
  %227 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %225, i32 %226)
  %228 = load float, float* %5, align 4
  %229 = load i32, i32* %9, align 4
  %230 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %228, i32 %229)
  %231 = load float, float* %7, align 4
  %232 = load i32, i32* %9, align 4
  %233 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %231, i32 %232)
  br label %2042

234:                                              ; preds = %217
  %235 = load i8*, i8** %2, align 8
  %236 = call i32 @strcmp(i8* %235, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)) #8
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %248, label %238

238:                                              ; preds = %234
  %239 = load float, float* %6, align 4
  %240 = load i32, i32* %9, align 4
  %241 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %239, i32 %240)
  %242 = load float, float* %3, align 4
  %243 = load i32, i32* %10, align 4
  %244 = call i32 @set1ds(i32 1024000000, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0), float %242, i32 %243)
  %245 = load float, float* %3, align 4
  %246 = load i32, i32* %10, align 4
  %247 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %245, i32 %246)
  br label %2041

248:                                              ; preds = %234
  %249 = load i8*, i8** %2, align 8
  %250 = call i32 @strcmp(i8* %249, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0)) #8
  %251 = icmp ne i32 %250, 0
  br i1 %251, label %268, label %252

252:                                              ; preds = %248
  %253 = load float, float* %4, align 4
  %254 = load i32, i32* %9, align 4
  %255 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %253, i32 %254)
  %256 = load float, float* %6, align 4
  %257 = load i32, i32* %9, align 4
  %258 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %256, i32 %257)
  %259 = load float, float* %3, align 4
  %260 = load i32, i32* %10, align 4
  %261 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %259, i32 %260)
  %262 = load float, float* %3, align 4
  %263 = load i32, i32* %10, align 4
  %264 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %262, i32 %263)
  %265 = load float, float* %3, align 4
  %266 = load i32, i32* %10, align 4
  %267 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %265, i32 %266)
  br label %2040

268:                                              ; preds = %248
  %269 = load i8*, i8** %2, align 8
  %270 = call i32 @strcmp(i8* %269, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #8
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %285, label %272

272:                                              ; preds = %268
  %273 = load float, float* %4, align 4
  %274 = load i32, i32* %9, align 4
  %275 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %273, i32 %274)
  %276 = load float, float* %7, align 4
  %277 = load i32, i32* %9, align 4
  %278 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %276, i32 %277)
  %279 = load float, float* %6, align 4
  %280 = load i32, i32* %9, align 4
  %281 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %279, i32 %280)
  %282 = load float, float* %6, align 4
  %283 = load i32, i32* %9, align 4
  %284 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %282, i32 %283)
  br label %2039

285:                                              ; preds = %268
  %286 = load i8*, i8** %2, align 8
  %287 = call i32 @strcmp(i8* %286, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #8
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %296, label %289

289:                                              ; preds = %285
  %290 = load float, float* %6, align 4
  %291 = load i32, i32* %9, align 4
  %292 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %290, i32 %291)
  %293 = load float, float* %3, align 4
  %294 = load i32, i32* %11, align 4
  %295 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %293, i32 %294)
  br label %2038

296:                                              ; preds = %285
  %297 = load i8*, i8** %2, align 8
  %298 = call i32 @strcmp(i8* %297, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #8
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %310, label %300

300:                                              ; preds = %296
  %301 = load float, float* %6, align 4
  %302 = load i32, i32* %9, align 4
  %303 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %301, i32 %302)
  %304 = load float, float* %3, align 4
  %305 = load i32, i32* %10, align 4
  %306 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %304, i32 %305)
  %307 = load float, float* %3, align 4
  %308 = load i32, i32* %10, align 4
  %309 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %307, i32 %308)
  br label %2037

310:                                              ; preds = %296
  %311 = load i8*, i8** %2, align 8
  %312 = call i32 @strcmp(i8* %311, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #8
  %313 = icmp ne i32 %312, 0
  br i1 %313, label %321, label %314

314:                                              ; preds = %310
  %315 = load float, float* %6, align 4
  %316 = load i32, i32* %9, align 4
  %317 = call i32 @set1ds(i32 1024000000, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0), float %315, i32 %316)
  %318 = load float, float* %3, align 4
  %319 = load i32, i32* %11, align 4
  %320 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %318, i32 %319)
  br label %2036

321:                                              ; preds = %310
  %322 = load i8*, i8** %2, align 8
  %323 = call i32 @strcmp(i8* %322, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #8
  %324 = icmp ne i32 %323, 0
  br i1 %324, label %332, label %325

325:                                              ; preds = %321
  %326 = load float, float* %6, align 4
  %327 = load i32, i32* %9, align 4
  %328 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %326, i32 %327)
  %329 = load float, float* %3, align 4
  %330 = load i32, i32* %11, align 4
  %331 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %329, i32 %330)
  br label %2035

332:                                              ; preds = %321
  %333 = load i8*, i8** %2, align 8
  %334 = call i32 @strcmp(i8* %333, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #8
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %352, label %336

336:                                              ; preds = %332
  %337 = load float, float* %6, align 4
  %338 = load i32, i32* %9, align 4
  %339 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %337, i32 %338)
  %340 = load float, float* %4, align 4
  %341 = load i32, i32* %9, align 4
  %342 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %340, i32 %341)
  %343 = load float, float* %3, align 4
  %344 = load i32, i32* %10, align 4
  %345 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %343, i32 %344)
  %346 = load float, float* %3, align 4
  %347 = load i32, i32* %10, align 4
  %348 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %346, i32 %347)
  %349 = load float, float* %3, align 4
  %350 = load i32, i32* %10, align 4
  %351 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %349, i32 %350)
  br label %2034

352:                                              ; preds = %332
  %353 = load i8*, i8** %2, align 8
  %354 = call i32 @strcmp(i8* %353, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0)) #8
  %355 = icmp ne i32 %354, 0
  br i1 %355, label %374, label %356

356:                                              ; preds = %352
  %357 = load float, float* %6, align 4
  %358 = load i32, i32* %9, align 4
  %359 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %357, i32 %358)
  %360 = load float, float* %6, align 4
  %361 = call i32 @set1ds(i32 16000, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %360, i32 2)
  %362 = load float, float* %6, align 4
  %363 = fneg float %362
  %364 = call i32 @set1ds(i32 16000, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 1), float %363, i32 2)
  %365 = load float, float* %6, align 4
  %366 = load i32, i32* %9, align 4
  %367 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %365, i32 %366)
  %368 = load float, float* %3, align 4
  %369 = load i32, i32* %10, align 4
  %370 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %368, i32 %369)
  %371 = load float, float* %3, align 4
  %372 = load i32, i32* %10, align 4
  %373 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %371, i32 %372)
  br label %2033

374:                                              ; preds = %352
  %375 = load i8*, i8** %2, align 8
  %376 = call i32 @strcmp(i8* %375, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0)) #8
  %377 = icmp ne i32 %376, 0
  br i1 %377, label %388, label %378

378:                                              ; preds = %374
  %379 = load float, float* %6, align 4
  %380 = load i32, i32* %9, align 4
  %381 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %379, i32 %380)
  %382 = load float, float* %3, align 4
  %383 = load i32, i32* %10, align 4
  %384 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %382, i32 %383)
  %385 = load float, float* %3, align 4
  %386 = load i32, i32* %10, align 4
  %387 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %385, i32 %386)
  br label %2032

388:                                              ; preds = %374
  %389 = load i8*, i8** %2, align 8
  %390 = call i32 @strcmp(i8* %389, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #8
  %391 = icmp ne i32 %390, 0
  br i1 %391, label %399, label %392

392:                                              ; preds = %388
  %393 = load float, float* %6, align 4
  %394 = load i32, i32* %9, align 4
  %395 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %393, i32 %394)
  %396 = load float, float* %3, align 4
  %397 = load i32, i32* %11, align 4
  %398 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %396, i32 %397)
  br label %2031

399:                                              ; preds = %388
  %400 = load i8*, i8** %2, align 8
  %401 = call i32 @strcmp(i8* %400, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0)) #8
  %402 = icmp ne i32 %401, 0
  br i1 %402, label %410, label %403

403:                                              ; preds = %399
  %404 = load float, float* %6, align 4
  %405 = load i32, i32* %9, align 4
  %406 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %404, i32 %405)
  %407 = load float, float* %3, align 4
  %408 = load i32, i32* %11, align 4
  %409 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %407, i32 %408)
  br label %2030

410:                                              ; preds = %399
  %411 = load i8*, i8** %2, align 8
  %412 = call i32 @strcmp(i8* %411, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0)) #8
  %413 = icmp ne i32 %412, 0
  br i1 %413, label %421, label %414

414:                                              ; preds = %410
  %415 = load float, float* %6, align 4
  %416 = load i32, i32* %9, align 4
  %417 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %415, i32 %416)
  %418 = load float, float* %3, align 4
  %419 = load i32, i32* %11, align 4
  %420 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %418, i32 %419)
  br label %2029

421:                                              ; preds = %410
  %422 = load i8*, i8** %2, align 8
  %423 = call i32 @strcmp(i8* %422, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)) #8
  %424 = icmp ne i32 %423, 0
  br i1 %424, label %432, label %425

425:                                              ; preds = %421
  %426 = load float, float* %6, align 4
  %427 = load i32, i32* %9, align 4
  %428 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %426, i32 %427)
  %429 = load float, float* %3, align 4
  %430 = load i32, i32* %11, align 4
  %431 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %429, i32 %430)
  br label %2028

432:                                              ; preds = %421
  %433 = load i8*, i8** %2, align 8
  %434 = call i32 @strcmp(i8* %433, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0)) #8
  %435 = icmp ne i32 %434, 0
  br i1 %435, label %443, label %436

436:                                              ; preds = %432
  %437 = load float, float* %6, align 4
  %438 = load i32, i32* %9, align 4
  %439 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %437, i32 %438)
  %440 = load float, float* %3, align 4
  %441 = load i32, i32* %11, align 4
  %442 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %440, i32 %441)
  br label %2027

443:                                              ; preds = %432
  %444 = load i8*, i8** %2, align 8
  %445 = call i32 @strcmp(i8* %444, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)) #8
  %446 = icmp ne i32 %445, 0
  br i1 %446, label %457, label %447

447:                                              ; preds = %443
  %448 = load float, float* %6, align 4
  %449 = load i32, i32* %9, align 4
  %450 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %448, i32 %449)
  %451 = load float, float* %3, align 4
  %452 = load i32, i32* %10, align 4
  %453 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %451, i32 %452)
  %454 = load float, float* %3, align 4
  %455 = load i32, i32* %10, align 4
  %456 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %454, i32 %455)
  br label %2026

457:                                              ; preds = %443
  %458 = load i8*, i8** %2, align 8
  %459 = call i32 @strcmp(i8* %458, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0)) #8
  %460 = icmp ne i32 %459, 0
  br i1 %460, label %477, label %461

461:                                              ; preds = %457
  %462 = load float, float* %4, align 4
  %463 = load i32, i32* %9, align 4
  %464 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %462, i32 %463)
  %465 = load float, float* %6, align 4
  %466 = load i32, i32* %9, align 4
  %467 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %465, i32 %466)
  %468 = load float, float* %3, align 4
  %469 = load i32, i32* %10, align 4
  %470 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %468, i32 %469)
  %471 = load float, float* %3, align 4
  %472 = load i32, i32* %10, align 4
  %473 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %471, i32 %472)
  %474 = load float, float* %3, align 4
  %475 = load i32, i32* %10, align 4
  %476 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %474, i32 %475)
  br label %2025

477:                                              ; preds = %457
  %478 = load i8*, i8** %2, align 8
  %479 = call i32 @strcmp(i8* %478, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0)) #8
  %480 = icmp ne i32 %479, 0
  br i1 %480, label %494, label %481

481:                                              ; preds = %477
  %482 = load float, float* %3, align 4
  %483 = load i32, i32* %10, align 4
  %484 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %482, i32 %483)
  %485 = load float, float* %6, align 4
  %486 = load i32, i32* %9, align 4
  %487 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %485, i32 %486)
  %488 = load float, float* %6, align 4
  %489 = load i32, i32* %9, align 4
  %490 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %488, i32 %489)
  %491 = load float, float* %3, align 4
  %492 = load i32, i32* %10, align 4
  %493 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %491, i32 %492)
  br label %2024

494:                                              ; preds = %477
  %495 = load i8*, i8** %2, align 8
  %496 = call i32 @strcmp(i8* %495, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0)) #8
  %497 = icmp ne i32 %496, 0
  br i1 %497, label %511, label %498

498:                                              ; preds = %494
  %499 = load float, float* %6, align 4
  %500 = load i32, i32* %9, align 4
  %501 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %499, i32 %500)
  %502 = load float, float* %3, align 4
  %503 = load i32, i32* %10, align 4
  %504 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %502, i32 %503)
  %505 = load float, float* %3, align 4
  %506 = load i32, i32* %10, align 4
  %507 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %505, i32 %506)
  %508 = load float, float* %3, align 4
  %509 = load i32, i32* %10, align 4
  %510 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %508, i32 %509)
  br label %2023

511:                                              ; preds = %494
  %512 = load i8*, i8** %2, align 8
  %513 = call i32 @strcmp(i8* %512, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)) #8
  %514 = icmp ne i32 %513, 0
  br i1 %514, label %525, label %515

515:                                              ; preds = %511
  %516 = load float, float* %4, align 4
  %517 = load i32, i32* %9, align 4
  %518 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %516, i32 %517)
  %519 = load float, float* %6, align 4
  %520 = load i32, i32* %9, align 4
  %521 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %519, i32 %520)
  %522 = load float, float* %6, align 4
  %523 = load i32, i32* %9, align 4
  %524 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %522, i32 %523)
  br label %2022

525:                                              ; preds = %511
  %526 = load i8*, i8** %2, align 8
  %527 = call i32 @strcmp(i8* %526, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0)) #8
  %528 = icmp ne i32 %527, 0
  br i1 %528, label %536, label %529

529:                                              ; preds = %525
  %530 = load float, float* %6, align 4
  %531 = load i32, i32* %9, align 4
  %532 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %530, i32 %531)
  %533 = load float, float* %3, align 4
  %534 = load i32, i32* %11, align 4
  %535 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %533, i32 %534)
  br label %2021

536:                                              ; preds = %525
  %537 = load i8*, i8** %2, align 8
  %538 = call i32 @strcmp(i8* %537, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0)) #8
  %539 = icmp ne i32 %538, 0
  br i1 %539, label %547, label %540

540:                                              ; preds = %536
  %541 = load float, float* %6, align 4
  %542 = load i32, i32* %9, align 4
  %543 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %541, i32 %542)
  %544 = load float, float* %4, align 4
  %545 = load i32, i32* %9, align 4
  %546 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %544, i32 %545)
  br label %2020

547:                                              ; preds = %536
  %548 = load i8*, i8** %2, align 8
  %549 = call i32 @strcmp(i8* %548, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0)) #8
  %550 = icmp ne i32 %549, 0
  br i1 %550, label %561, label %551

551:                                              ; preds = %547
  %552 = load float, float* %3, align 4
  %553 = load i32, i32* %10, align 4
  %554 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %552, i32 %553)
  %555 = load float, float* %3, align 4
  %556 = load i32, i32* %10, align 4
  %557 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %555, i32 %556)
  %558 = load float, float* %3, align 4
  %559 = load i32, i32* %10, align 4
  %560 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %558, i32 %559)
  br label %2019

561:                                              ; preds = %547
  %562 = load i8*, i8** %2, align 8
  %563 = call i32 @strcmp(i8* %562, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0)) #8
  %564 = icmp ne i32 %563, 0
  br i1 %564, label %575, label %565

565:                                              ; preds = %561
  %566 = load float, float* %6, align 4
  %567 = load i32, i32* %9, align 4
  %568 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %566, i32 %567)
  %569 = load float, float* %3, align 4
  %570 = load i32, i32* %10, align 4
  %571 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %569, i32 %570)
  %572 = load float, float* %3, align 4
  %573 = load i32, i32* %10, align 4
  %574 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %572, i32 %573)
  br label %2018

575:                                              ; preds = %561
  %576 = load i8*, i8** %2, align 8
  %577 = call i32 @strcmp(i8* %576, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0)) #8
  %578 = icmp ne i32 %577, 0
  br i1 %578, label %595, label %579

579:                                              ; preds = %575
  %580 = load float, float* %6, align 4
  %581 = load i32, i32* %9, align 4
  %582 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %580, i32 %581)
  %583 = load float, float* %3, align 4
  %584 = load i32, i32* %10, align 4
  %585 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %583, i32 %584)
  %586 = load float, float* %3, align 4
  %587 = load i32, i32* %10, align 4
  %588 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %586, i32 %587)
  %589 = load float, float* %6, align 4
  %590 = load i32, i32* %9, align 4
  %591 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %589, i32 %590)
  %592 = load float, float* %3, align 4
  %593 = load i32, i32* %11, align 4
  %594 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %592, i32 %593)
  br label %2017

595:                                              ; preds = %575
  %596 = load i8*, i8** %2, align 8
  %597 = call i32 @strcmp(i8* %596, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0)) #8
  %598 = icmp ne i32 %597, 0
  br i1 %598, label %612, label %599

599:                                              ; preds = %595
  %600 = load float, float* %6, align 4
  %601 = load i32, i32* %9, align 4
  %602 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %600, i32 %601)
  %603 = load float, float* %6, align 4
  %604 = load i32, i32* %9, align 4
  %605 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %603, i32 %604)
  %606 = load float, float* %6, align 4
  %607 = load i32, i32* %9, align 4
  %608 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %606, i32 %607)
  %609 = load float, float* %6, align 4
  %610 = load i32, i32* %9, align 4
  %611 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %609, i32 %610)
  br label %2016

612:                                              ; preds = %595
  %613 = load i8*, i8** %2, align 8
  %614 = call i32 @strcmp(i8* %613, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)) #8
  %615 = icmp ne i32 %614, 0
  br i1 %615, label %629, label %616

616:                                              ; preds = %612
  %617 = load float, float* %8, align 4
  %618 = load i32, i32* %9, align 4
  %619 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %617, i32 %618)
  %620 = load float, float* %8, align 4
  %621 = load i32, i32* %9, align 4
  %622 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %620, i32 %621)
  %623 = load float, float* %8, align 4
  %624 = load i32, i32* %9, align 4
  %625 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %623, i32 %624)
  %626 = load float, float* %8, align 4
  %627 = load i32, i32* %9, align 4
  %628 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %626, i32 %627)
  br label %2015

629:                                              ; preds = %612
  %630 = load i8*, i8** %2, align 8
  %631 = call i32 @strcmp(i8* %630, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)) #8
  %632 = icmp ne i32 %631, 0
  br i1 %632, label %649, label %633

633:                                              ; preds = %629
  %634 = load float, float* %4, align 4
  %635 = load i32, i32* %9, align 4
  %636 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %634, i32 %635)
  %637 = load float, float* %6, align 4
  %638 = load i32, i32* %9, align 4
  %639 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %637, i32 %638)
  %640 = load float, float* %3, align 4
  %641 = load i32, i32* %10, align 4
  %642 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %640, i32 %641)
  %643 = load float, float* %3, align 4
  %644 = load i32, i32* %10, align 4
  %645 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %643, i32 %644)
  %646 = load float, float* %3, align 4
  %647 = load i32, i32* %10, align 4
  %648 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %646, i32 %647)
  br label %2014

649:                                              ; preds = %629
  %650 = load i8*, i8** %2, align 8
  %651 = call i32 @strcmp(i8* %650, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0)) #8
  %652 = icmp ne i32 %651, 0
  br i1 %652, label %666, label %653

653:                                              ; preds = %649
  %654 = load float, float* %4, align 4
  %655 = load i32, i32* %9, align 4
  %656 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %654, i32 %655)
  %657 = load float, float* %6, align 4
  %658 = load i32, i32* %9, align 4
  %659 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %657, i32 %658)
  %660 = load float, float* %8, align 4
  %661 = load i32, i32* %9, align 4
  %662 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %660, i32 %661)
  %663 = load float, float* %8, align 4
  %664 = load i32, i32* %9, align 4
  %665 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %663, i32 %664)
  br label %2013

666:                                              ; preds = %649
  %667 = load i8*, i8** %2, align 8
  %668 = call i32 @strcmp(i8* %667, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0)) #8
  %669 = icmp ne i32 %668, 0
  br i1 %669, label %686, label %670

670:                                              ; preds = %666
  %671 = load float, float* %4, align 4
  %672 = load i32, i32* %9, align 4
  %673 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %671, i32 %672)
  %674 = load float, float* %6, align 4
  %675 = load i32, i32* %9, align 4
  %676 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %674, i32 %675)
  %677 = load float, float* %3, align 4
  %678 = load i32, i32* %10, align 4
  %679 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %677, i32 %678)
  %680 = load float, float* %3, align 4
  %681 = load i32, i32* %10, align 4
  %682 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %680, i32 %681)
  %683 = load float, float* %3, align 4
  %684 = load i32, i32* %10, align 4
  %685 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %683, i32 %684)
  br label %2012

686:                                              ; preds = %666
  %687 = load i8*, i8** %2, align 8
  %688 = call i32 @strcmp(i8* %687, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0)) #8
  %689 = icmp ne i32 %688, 0
  br i1 %689, label %700, label %690

690:                                              ; preds = %686
  %691 = load float, float* %4, align 4
  %692 = load i32, i32* %9, align 4
  %693 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %691, i32 %692)
  %694 = load float, float* %6, align 4
  %695 = load i32, i32* %9, align 4
  %696 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %694, i32 %695)
  %697 = load float, float* %6, align 4
  %698 = load i32, i32* %9, align 4
  %699 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %697, i32 %698)
  br label %2011

700:                                              ; preds = %686
  %701 = load i8*, i8** %2, align 8
  %702 = call i32 @strcmp(i8* %701, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0)) #8
  %703 = icmp ne i32 %702, 0
  br i1 %703, label %717, label %704

704:                                              ; preds = %700
  %705 = load float, float* %6, align 4
  %706 = load i32, i32* %9, align 4
  %707 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %705, i32 %706)
  %708 = load float, float* %8, align 4
  %709 = load i32, i32* %9, align 4
  %710 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %708, i32 %709)
  %711 = load float, float* %6, align 4
  %712 = load i32, i32* %9, align 4
  %713 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %711, i32 %712)
  %714 = load float, float* %3, align 4
  %715 = load i32, i32* %10, align 4
  %716 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %714, i32 %715)
  br label %2010

717:                                              ; preds = %700
  %718 = load i8*, i8** %2, align 8
  %719 = call i32 @strcmp(i8* %718, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0)) #8
  %720 = icmp ne i32 %719, 0
  br i1 %720, label %728, label %721

721:                                              ; preds = %717
  %722 = load float, float* %4, align 4
  %723 = load i32, i32* %9, align 4
  %724 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %722, i32 %723)
  %725 = load float, float* %6, align 4
  %726 = load i32, i32* %9, align 4
  %727 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %725, i32 %726)
  br label %2009

728:                                              ; preds = %717
  %729 = load i8*, i8** %2, align 8
  %730 = call i32 @strcmp(i8* %729, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0)) #8
  %731 = icmp ne i32 %730, 0
  br i1 %731, label %739, label %732

732:                                              ; preds = %728
  %733 = load float, float* %4, align 4
  %734 = load i32, i32* %9, align 4
  %735 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %733, i32 %734)
  %736 = load float, float* %6, align 4
  %737 = load i32, i32* %9, align 4
  %738 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %736, i32 %737)
  br label %2008

739:                                              ; preds = %728
  %740 = load i8*, i8** %2, align 8
  %741 = call i32 @strcmp(i8* %740, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0)) #8
  %742 = icmp ne i32 %741, 0
  br i1 %742, label %753, label %743

743:                                              ; preds = %739
  %744 = load float, float* %6, align 4
  %745 = load i32, i32* %9, align 4
  %746 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %744, i32 %745)
  %747 = load float, float* %7, align 4
  %748 = load i32, i32* %9, align 4
  %749 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %747, i32 %748)
  %750 = load float, float* %6, align 4
  %751 = load i32, i32* %9, align 4
  %752 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %750, i32 %751)
  br label %2007

753:                                              ; preds = %739
  %754 = load i8*, i8** %2, align 8
  %755 = call i32 @strcmp(i8* %754, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0)) #8
  %756 = icmp ne i32 %755, 0
  br i1 %756, label %767, label %757

757:                                              ; preds = %753
  %758 = load float, float* %6, align 4
  %759 = load i32, i32* %9, align 4
  %760 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %758, i32 %759)
  %761 = load float, float* %7, align 4
  %762 = load i32, i32* %9, align 4
  %763 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %761, i32 %762)
  %764 = load float, float* %6, align 4
  %765 = load i32, i32* %9, align 4
  %766 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %764, i32 %765)
  br label %2006

767:                                              ; preds = %753
  %768 = load i8*, i8** %2, align 8
  %769 = call i32 @strcmp(i8* %768, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0)) #8
  %770 = icmp ne i32 %769, 0
  br i1 %770, label %790, label %771

771:                                              ; preds = %767
  %772 = load float, float* %3, align 4
  %773 = load i32, i32* %10, align 4
  %774 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %772, i32 %773)
  %775 = load float, float* %4, align 4
  %776 = load i32, i32* %9, align 4
  %777 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %775, i32 %776)
  %778 = load float, float* %3, align 4
  %779 = load i32, i32* %10, align 4
  %780 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %778, i32 %779)
  %781 = load float, float* %3, align 4
  %782 = load i32, i32* %10, align 4
  %783 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %781, i32 %782)
  %784 = load float, float* %4, align 4
  %785 = load i32, i32* %9, align 4
  %786 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %784, i32 %785)
  %787 = load float, float* %3, align 4
  %788 = load i32, i32* %10, align 4
  %789 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %787, i32 %788)
  br label %2005

790:                                              ; preds = %767
  %791 = load i8*, i8** %2, align 8
  %792 = call i32 @strcmp(i8* %791, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #8
  %793 = icmp ne i32 %792, 0
  br i1 %793, label %807, label %794

794:                                              ; preds = %790
  %795 = load float, float* %6, align 4
  %796 = load i32, i32* %9, align 4
  %797 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %795, i32 %796)
  %798 = load float, float* %3, align 4
  %799 = load i32, i32* %11, align 4
  %800 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %798, i32 %799)
  %801 = load float, float* %3, align 4
  %802 = load i32, i32* %11, align 4
  %803 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %801, i32 %802)
  %804 = load float, float* %6, align 4
  %805 = load i32, i32* %9, align 4
  %806 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %804, i32 %805)
  br label %2004

807:                                              ; preds = %790
  %808 = load i8*, i8** %2, align 8
  %809 = call i32 @strcmp(i8* %808, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0)) #8
  %810 = icmp ne i32 %809, 0
  br i1 %810, label %821, label %811

811:                                              ; preds = %807
  %812 = load float, float* %6, align 4
  %813 = load i32, i32* %9, align 4
  %814 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %812, i32 %813)
  %815 = load float, float* %3, align 4
  %816 = load i32, i32* %10, align 4
  %817 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %815, i32 %816)
  %818 = load float, float* %3, align 4
  %819 = load i32, i32* %10, align 4
  %820 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %818, i32 %819)
  br label %2003

821:                                              ; preds = %807
  %822 = load i8*, i8** %2, align 8
  %823 = call i32 @strcmp(i8* %822, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0)) #8
  %824 = icmp ne i32 %823, 0
  br i1 %824, label %841, label %825

825:                                              ; preds = %821
  %826 = load float, float* %6, align 4
  %827 = load i32, i32* %9, align 4
  %828 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %826, i32 %827)
  %829 = load float, float* %6, align 4
  %830 = load i32, i32* %9, align 4
  %831 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %829, i32 %830)
  %832 = load float, float* %3, align 4
  %833 = load i32, i32* %10, align 4
  %834 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %832, i32 %833)
  %835 = load float, float* %3, align 4
  %836 = load i32, i32* %10, align 4
  %837 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %835, i32 %836)
  %838 = load float, float* %7, align 4
  %839 = load i32, i32* %9, align 4
  %840 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %838, i32 %839)
  br label %2002

841:                                              ; preds = %821
  %842 = load i8*, i8** %2, align 8
  %843 = call i32 @strcmp(i8* %842, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0)) #8
  %844 = icmp ne i32 %843, 0
  br i1 %844, label %861, label %845

845:                                              ; preds = %841
  %846 = load float, float* %6, align 4
  %847 = load i32, i32* %9, align 4
  %848 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %846, i32 %847)
  %849 = load float, float* %6, align 4
  %850 = load i32, i32* %9, align 4
  %851 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %849, i32 %850)
  %852 = load float, float* %6, align 4
  %853 = load i32, i32* %9, align 4
  %854 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %852, i32 %853)
  %855 = load float, float* %8, align 4
  %856 = load i32, i32* %9, align 4
  %857 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %855, i32 %856)
  %858 = load float, float* %3, align 4
  %859 = load i32, i32* %10, align 4
  %860 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %858, i32 %859)
  br label %2001

861:                                              ; preds = %841
  %862 = load i8*, i8** %2, align 8
  %863 = call i32 @strcmp(i8* %862, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0)) #8
  %864 = icmp ne i32 %863, 0
  br i1 %864, label %881, label %865

865:                                              ; preds = %861
  %866 = load float, float* %4, align 4
  %867 = load i32, i32* %9, align 4
  %868 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %866, i32 %867)
  %869 = load float, float* %6, align 4
  %870 = load i32, i32* %9, align 4
  %871 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %869, i32 %870)
  %872 = load float, float* %6, align 4
  %873 = load i32, i32* %9, align 4
  %874 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %872, i32 %873)
  %875 = load float, float* %3, align 4
  %876 = load i32, i32* %10, align 4
  %877 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %875, i32 %876)
  %878 = load float, float* %3, align 4
  %879 = load i32, i32* %10, align 4
  %880 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %878, i32 %879)
  br label %2000

881:                                              ; preds = %861
  %882 = load i8*, i8** %2, align 8
  %883 = call i32 @strcmp(i8* %882, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0)) #8
  %884 = icmp ne i32 %883, 0
  br i1 %884, label %895, label %885

885:                                              ; preds = %881
  %886 = load float, float* %6, align 4
  %887 = load i32, i32* %9, align 4
  %888 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %886, i32 %887)
  %889 = load float, float* %8, align 4
  %890 = load i32, i32* %9, align 4
  %891 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %889, i32 %890)
  %892 = load float, float* %8, align 4
  %893 = load i32, i32* %9, align 4
  %894 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %892, i32 %893)
  br label %1999

895:                                              ; preds = %881
  %896 = load i8*, i8** %2, align 8
  %897 = call i32 @strcmp(i8* %896, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0)) #8
  %898 = icmp ne i32 %897, 0
  br i1 %898, label %912, label %899

899:                                              ; preds = %895
  %900 = load float, float* %6, align 4
  %901 = load i32, i32* %9, align 4
  %902 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %900, i32 %901)
  %903 = load float, float* %3, align 4
  %904 = load i32, i32* %10, align 4
  %905 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %903, i32 %904)
  %906 = load float, float* %3, align 4
  %907 = load i32, i32* %10, align 4
  %908 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %906, i32 %907)
  %909 = load float, float* %3, align 4
  %910 = load i32, i32* %10, align 4
  %911 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %909, i32 %910)
  br label %1998

912:                                              ; preds = %895
  %913 = load i8*, i8** %2, align 8
  %914 = call i32 @strcmp(i8* %913, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0)) #8
  %915 = icmp ne i32 %914, 0
  br i1 %915, label %936, label %916

916:                                              ; preds = %912
  %917 = load float, float* %6, align 4
  %918 = load i32, i32* %9, align 4
  %919 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %917, i32 %918)
  %920 = load float, float* %6, align 4
  %921 = load i32, i32* %9, align 4
  %922 = call i32 @set1ds(i32 16000, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %920, i32 %921)
  %923 = load float, float* %6, align 4
  %924 = fneg float %923
  %925 = load i32, i32* %9, align 4
  %926 = call i32 @set1ds(i32 16000, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), float %924, i32 %925)
  %927 = load float, float* %3, align 4
  %928 = load i32, i32* %10, align 4
  %929 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %927, i32 %928)
  %930 = load float, float* %3, align 4
  %931 = load i32, i32* %10, align 4
  %932 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %930, i32 %931)
  %933 = load float, float* %3, align 4
  %934 = load i32, i32* %10, align 4
  %935 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %933, i32 %934)
  br label %1997

936:                                              ; preds = %912
  %937 = load i8*, i8** %2, align 8
  %938 = call i32 @strcmp(i8* %937, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0)) #8
  %939 = icmp ne i32 %938, 0
  br i1 %939, label %960, label %940

940:                                              ; preds = %936
  %941 = load float, float* %6, align 4
  %942 = fneg float %941
  %943 = load i32, i32* %9, align 4
  %944 = call i32 @set1ds(i32 16000, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %942, i32 %943)
  %945 = load float, float* %6, align 4
  %946 = load i32, i32* %9, align 4
  %947 = call i32 @set1ds(i32 16000, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), float %945, i32 %946)
  %948 = load float, float* %6, align 4
  %949 = load i32, i32* %9, align 4
  %950 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %948, i32 %949)
  %951 = load float, float* %3, align 4
  %952 = load i32, i32* %10, align 4
  %953 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %951, i32 %952)
  %954 = load float, float* %3, align 4
  %955 = load i32, i32* %10, align 4
  %956 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %954, i32 %955)
  %957 = load float, float* %3, align 4
  %958 = load i32, i32* %10, align 4
  %959 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %957, i32 %958)
  br label %1996

960:                                              ; preds = %936
  %961 = load i8*, i8** %2, align 8
  %962 = call i32 @strcmp(i8* %961, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #8
  %963 = icmp ne i32 %962, 0
  br i1 %963, label %984, label %964

964:                                              ; preds = %960
  %965 = load float, float* %6, align 4
  %966 = fneg float %965
  %967 = load i32, i32* %9, align 4
  %968 = call i32 @set1ds(i32 16000, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %966, i32 %967)
  %969 = load float, float* %6, align 4
  %970 = load i32, i32* %9, align 4
  %971 = call i32 @set1ds(i32 16000, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), float %969, i32 %970)
  %972 = load float, float* %6, align 4
  %973 = load i32, i32* %9, align 4
  %974 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %972, i32 %973)
  %975 = load float, float* %3, align 4
  %976 = load i32, i32* %10, align 4
  %977 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %975, i32 %976)
  %978 = load float, float* %3, align 4
  %979 = load i32, i32* %10, align 4
  %980 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %978, i32 %979)
  %981 = load float, float* %3, align 4
  %982 = load i32, i32* %10, align 4
  %983 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %981, i32 %982)
  br label %1995

984:                                              ; preds = %960
  %985 = load i8*, i8** %2, align 8
  %986 = call i32 @strcmp(i8* %985, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0)) #8
  %987 = icmp ne i32 %986, 0
  br i1 %987, label %1004, label %988

988:                                              ; preds = %984
  %989 = load float, float* %6, align 4
  %990 = load i32, i32* %9, align 4
  %991 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %989, i32 %990)
  %992 = load float, float* %6, align 4
  %993 = load i32, i32* %9, align 4
  %994 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %992, i32 %993)
  %995 = load float, float* %3, align 4
  %996 = load i32, i32* %10, align 4
  %997 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %995, i32 %996)
  %998 = load float, float* %3, align 4
  %999 = load i32, i32* %10, align 4
  %1000 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %998, i32 %999)
  %1001 = load float, float* %3, align 4
  %1002 = load i32, i32* %10, align 4
  %1003 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %1001, i32 %1002)
  br label %1994

1004:                                             ; preds = %984
  %1005 = load i8*, i8** %2, align 8
  %1006 = call i32 @strcmp(i8* %1005, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0)) #8
  %1007 = icmp ne i32 %1006, 0
  br i1 %1007, label %1018, label %1008

1008:                                             ; preds = %1004
  %1009 = load float, float* %6, align 4
  %1010 = load i32, i32* %9, align 4
  %1011 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1009, i32 %1010)
  %1012 = load float, float* %3, align 4
  %1013 = load i32, i32* %10, align 4
  %1014 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1012, i32 %1013)
  %1015 = load float, float* %3, align 4
  %1016 = load i32, i32* %10, align 4
  %1017 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1015, i32 %1016)
  br label %1993

1018:                                             ; preds = %1004
  %1019 = load i8*, i8** %2, align 8
  %1020 = call i32 @strcmp(i8* %1019, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0)) #8
  %1021 = icmp ne i32 %1020, 0
  br i1 %1021, label %1032, label %1022

1022:                                             ; preds = %1018
  %1023 = load float, float* %6, align 4
  %1024 = load i32, i32* %9, align 4
  %1025 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1023, i32 %1024)
  %1026 = load float, float* %3, align 4
  %1027 = load i32, i32* %10, align 4
  %1028 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1026, i32 %1027)
  %1029 = load float, float* %3, align 4
  %1030 = load i32, i32* %10, align 4
  %1031 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1029, i32 %1030)
  br label %1992

1032:                                             ; preds = %1018
  %1033 = load i8*, i8** %2, align 8
  %1034 = call i32 @strcmp(i8* %1033, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0)) #8
  %1035 = icmp ne i32 %1034, 0
  br i1 %1035, label %1046, label %1036

1036:                                             ; preds = %1032
  %1037 = load float, float* %4, align 4
  %1038 = load i32, i32* %9, align 4
  %1039 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1037, i32 %1038)
  %1040 = load float, float* %6, align 4
  %1041 = load i32, i32* %9, align 4
  %1042 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1040, i32 %1041)
  %1043 = load float, float* %6, align 4
  %1044 = load i32, i32* %9, align 4
  %1045 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1043, i32 %1044)
  br label %1991

1046:                                             ; preds = %1032
  %1047 = load i8*, i8** %2, align 8
  %1048 = call i32 @strcmp(i8* %1047, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0)) #8
  %1049 = icmp ne i32 %1048, 0
  br i1 %1049, label %1057, label %1050

1050:                                             ; preds = %1046
  %1051 = load float, float* %4, align 4
  %1052 = load i32, i32* %9, align 4
  %1053 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1051, i32 %1052)
  %1054 = load float, float* %6, align 4
  %1055 = load i32, i32* %9, align 4
  %1056 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1054, i32 %1055)
  br label %1990

1057:                                             ; preds = %1046
  %1058 = load i8*, i8** %2, align 8
  %1059 = call i32 @strcmp(i8* %1058, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0)) #8
  %1060 = icmp ne i32 %1059, 0
  br i1 %1060, label %1068, label %1061

1061:                                             ; preds = %1057
  %1062 = load float, float* %4, align 4
  %1063 = load i32, i32* %9, align 4
  %1064 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1062, i32 %1063)
  %1065 = load float, float* %6, align 4
  %1066 = load i32, i32* %9, align 4
  %1067 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1065, i32 %1066)
  br label %1989

1068:                                             ; preds = %1057
  %1069 = load i8*, i8** %2, align 8
  %1070 = call i32 @strcmp(i8* %1069, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0)) #8
  %1071 = icmp ne i32 %1070, 0
  br i1 %1071, label %1076, label %1072

1072:                                             ; preds = %1068
  %1073 = load float, float* %3, align 4
  %1074 = load i32, i32* %10, align 4
  %1075 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1073, i32 %1074)
  br label %1988

1076:                                             ; preds = %1068
  %1077 = load i8*, i8** %2, align 8
  %1078 = call i32 @strcmp(i8* %1077, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0)) #8
  %1079 = icmp ne i32 %1078, 0
  br i1 %1079, label %1090, label %1080

1080:                                             ; preds = %1076
  %1081 = load float, float* %6, align 4
  %1082 = load i32, i32* %9, align 4
  %1083 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %1081, i32 %1082)
  %1084 = load float, float* %3, align 4
  %1085 = load i32, i32* %10, align 4
  %1086 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %1084, i32 %1085)
  %1087 = load float, float* %3, align 4
  %1088 = load i32, i32* %10, align 4
  %1089 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %1087, i32 %1088)
  br label %1987

1090:                                             ; preds = %1076
  %1091 = load i8*, i8** %2, align 8
  %1092 = call i32 @strcmp(i8* %1091, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0)) #8
  %1093 = icmp ne i32 %1092, 0
  br i1 %1093, label %1098, label %1094

1094:                                             ; preds = %1090
  %1095 = load float, float* %4, align 4
  %1096 = load i32, i32* %9, align 4
  %1097 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %1095, i32 %1096)
  br label %1986

1098:                                             ; preds = %1090
  %1099 = load i8*, i8** %2, align 8
  %1100 = call i32 @strcmp(i8* %1099, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0)) #8
  %1101 = icmp ne i32 %1100, 0
  br i1 %1101, label %1106, label %1102

1102:                                             ; preds = %1098
  %1103 = load float, float* %4, align 4
  %1104 = load i32, i32* %9, align 4
  %1105 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %1103, i32 %1104)
  br label %1985

1106:                                             ; preds = %1098
  %1107 = load i8*, i8** %2, align 8
  %1108 = call i32 @strcmp(i8* %1107, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0)) #8
  %1109 = icmp ne i32 %1108, 0
  br i1 %1109, label %1114, label %1110

1110:                                             ; preds = %1106
  %1111 = load float, float* %3, align 4
  %1112 = load i32, i32* %10, align 4
  %1113 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1111, i32 %1112)
  br label %1984

1114:                                             ; preds = %1106
  %1115 = load i8*, i8** %2, align 8
  %1116 = call i32 @strcmp(i8* %1115, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0)) #8
  %1117 = icmp ne i32 %1116, 0
  br i1 %1117, label %1121, label %1118

1118:                                             ; preds = %1114
  %1119 = load i32, i32* %9, align 4
  %1120 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float 0x3FF0000100000000, i32 %1119)
  br label %1983

1121:                                             ; preds = %1114
  %1122 = load i8*, i8** %2, align 8
  %1123 = call i32 @strcmp(i8* %1122, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0)) #8
  %1124 = icmp ne i32 %1123, 0
  br i1 %1124, label %1132, label %1125

1125:                                             ; preds = %1121
  %1126 = load float, float* %3, align 4
  %1127 = load i32, i32* %10, align 4
  %1128 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1126, i32 %1127)
  %1129 = load float, float* %3, align 4
  %1130 = load i32, i32* %10, align 4
  %1131 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1129, i32 %1130)
  br label %1982

1132:                                             ; preds = %1121
  %1133 = load i8*, i8** %2, align 8
  %1134 = call i32 @strcmp(i8* %1133, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0)) #8
  %1135 = icmp ne i32 %1134, 0
  br i1 %1135, label %1140, label %1136

1136:                                             ; preds = %1132
  %1137 = load float, float* %3, align 4
  %1138 = load i32, i32* %10, align 4
  %1139 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1137, i32 %1138)
  br label %1981

1140:                                             ; preds = %1132
  %1141 = load i8*, i8** %2, align 8
  %1142 = call i32 @strcmp(i8* %1141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0)) #8
  %1143 = icmp ne i32 %1142, 0
  br i1 %1143, label %1148, label %1144

1144:                                             ; preds = %1140
  %1145 = load float, float* %3, align 4
  %1146 = load i32, i32* %10, align 4
  %1147 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1145, i32 %1146)
  br label %1980

1148:                                             ; preds = %1140
  %1149 = load i8*, i8** %2, align 8
  %1150 = call i32 @strcmp(i8* %1149, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0)) #8
  %1151 = icmp ne i32 %1150, 0
  br i1 %1151, label %1156, label %1152

1152:                                             ; preds = %1148
  %1153 = load float, float* %3, align 4
  %1154 = load i32, i32* %10, align 4
  %1155 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1153, i32 %1154)
  br label %1979

1156:                                             ; preds = %1148
  %1157 = load i8*, i8** %2, align 8
  %1158 = call i32 @strcmp(i8* %1157, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0)) #8
  %1159 = icmp ne i32 %1158, 0
  br i1 %1159, label %1161, label %1160

1160:                                             ; preds = %1156
  br label %1978

1161:                                             ; preds = %1156
  %1162 = load i8*, i8** %2, align 8
  %1163 = call i32 @strcmp(i8* %1162, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0)) #8
  %1164 = icmp ne i32 %1163, 0
  br i1 %1164, label %1171, label %1165

1165:                                             ; preds = %1161
  %1166 = load float, float* %3, align 4
  %1167 = load i32, i32* %10, align 4
  %1168 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1166, i32 %1167)
  %1169 = load float, float* %7, align 4
  %1170 = fneg float %1169
  store float %1170, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4
  br label %1977

1171:                                             ; preds = %1161
  %1172 = load i8*, i8** %2, align 8
  %1173 = call i32 @strcmp(i8* %1172, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0)) #8
  %1174 = icmp ne i32 %1173, 0
  br i1 %1174, label %1191, label %1175

1175:                                             ; preds = %1171
  %1176 = load float, float* %4, align 4
  %1177 = load i32, i32* %9, align 4
  %1178 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1176, i32 %1177)
  %1179 = load float, float* %4, align 4
  %1180 = load i32, i32* %9, align 4
  %1181 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1179, i32 %1180)
  %1182 = load float, float* %3, align 4
  %1183 = load i32, i32* %10, align 4
  %1184 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1182, i32 %1183)
  %1185 = load float, float* %3, align 4
  %1186 = load i32, i32* %10, align 4
  %1187 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1185, i32 %1186)
  %1188 = load float, float* %3, align 4
  %1189 = load i32, i32* %10, align 4
  %1190 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %1188, i32 %1189)
  br label %1976

1191:                                             ; preds = %1171
  %1192 = load i8*, i8** %2, align 8
  %1193 = call i32 @strcmp(i8* %1192, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0)) #8
  %1194 = icmp ne i32 %1193, 0
  br i1 %1194, label %1200, label %1195

1195:                                             ; preds = %1191
  %1196 = load float, float* %3, align 4
  %1197 = load i32, i32* %10, align 4
  %1198 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %1196, i32 %1197)
  %1199 = load float, float* %7, align 4
  store float %1199, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 255, i64 255), align 4
  br label %1975

1200:                                             ; preds = %1191
  %1201 = load i8*, i8** %2, align 8
  %1202 = call i32 @strcmp(i8* %1201, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0)) #8
  %1203 = icmp ne i32 %1202, 0
  br i1 %1203, label %1208, label %1204

1204:                                             ; preds = %1200
  %1205 = load float, float* %3, align 4
  %1206 = load i32, i32* %10, align 4
  %1207 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1205, i32 %1206)
  br label %1974

1208:                                             ; preds = %1200
  %1209 = load i8*, i8** %2, align 8
  %1210 = call i32 @strcmp(i8* %1209, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #8
  %1211 = icmp ne i32 %1210, 0
  br i1 %1211, label %1219, label %1212

1212:                                             ; preds = %1208
  %1213 = load float, float* %3, align 4
  %1214 = load i32, i32* %11, align 4
  %1215 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1213, i32 %1214)
  %1216 = load float, float* %4, align 4
  %1217 = load i32, i32* %9, align 4
  %1218 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1216, i32 %1217)
  br label %1973

1219:                                             ; preds = %1208
  %1220 = load i8*, i8** %2, align 8
  %1221 = call i32 @strcmp(i8* %1220, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0)) #8
  %1222 = icmp ne i32 %1221, 0
  br i1 %1222, label %1229, label %1223

1223:                                             ; preds = %1219
  %1224 = load float, float* %3, align 4
  %1225 = load i32, i32* %10, align 4
  %1226 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1224, i32 %1225)
  %1227 = load float, float* %7, align 4
  %1228 = fneg float %1227
  store float %1228, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4
  br label %1972

1229:                                             ; preds = %1219
  %1230 = load i8*, i8** %2, align 8
  %1231 = call i32 @strcmp(i8* %1230, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0)) #8
  %1232 = icmp ne i32 %1231, 0
  br i1 %1232, label %1240, label %1233

1233:                                             ; preds = %1229
  %1234 = load float, float* %6, align 4
  %1235 = load i32, i32* %9, align 4
  %1236 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1234, i32 %1235)
  %1237 = load float, float* %4, align 4
  %1238 = load i32, i32* %9, align 4
  %1239 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1237, i32 %1238)
  br label %1971

1240:                                             ; preds = %1229
  %1241 = load i8*, i8** %2, align 8
  %1242 = call i32 @strcmp(i8* %1241, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #8
  %1243 = icmp ne i32 %1242, 0
  br i1 %1243, label %1254, label %1244

1244:                                             ; preds = %1240
  %1245 = load float, float* %6, align 4
  %1246 = load i32, i32* %9, align 4
  %1247 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1245, i32 %1246)
  %1248 = load float, float* %4, align 4
  %1249 = load i32, i32* %9, align 4
  %1250 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1248, i32 %1249)
  %1251 = load float, float* %4, align 4
  %1252 = load i32, i32* %9, align 4
  %1253 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1251, i32 %1252)
  br label %1970

1254:                                             ; preds = %1240
  %1255 = load i8*, i8** %2, align 8
  %1256 = call i32 @strcmp(i8* %1255, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i64 0, i64 0)) #8
  %1257 = icmp ne i32 %1256, 0
  br i1 %1257, label %1274, label %1258

1258:                                             ; preds = %1254
  %1259 = load float, float* %6, align 4
  %1260 = load i32, i32* %9, align 4
  %1261 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1259, i32 %1260)
  %1262 = load float, float* %6, align 4
  %1263 = load i32, i32* %9, align 4
  %1264 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1262, i32 %1263)
  %1265 = load float, float* %3, align 4
  %1266 = load i32, i32* %10, align 4
  %1267 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1265, i32 %1266)
  %1268 = load float, float* %3, align 4
  %1269 = load i32, i32* %10, align 4
  %1270 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1268, i32 %1269)
  %1271 = load float, float* %3, align 4
  %1272 = load i32, i32* %10, align 4
  %1273 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %1271, i32 %1272)
  br label %1969

1274:                                             ; preds = %1254
  %1275 = load i8*, i8** %2, align 8
  %1276 = call i32 @strcmp(i8* %1275, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0)) #8
  %1277 = icmp ne i32 %1276, 0
  br i1 %1277, label %1284, label %1278

1278:                                             ; preds = %1274
  %1279 = load float, float* %3, align 4
  %1280 = load i32, i32* %10, align 4
  %1281 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1279, i32 %1280)
  %1282 = load float, float* %6, align 4
  %1283 = fneg float %1282
  store float %1283, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4
  br label %1968

1284:                                             ; preds = %1274
  %1285 = load i8*, i8** %2, align 8
  %1286 = call i32 @strcmp(i8* %1285, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0)) #8
  %1287 = icmp ne i32 %1286, 0
  br i1 %1287, label %1293, label %1288

1288:                                             ; preds = %1284
  %1289 = load float, float* %3, align 4
  %1290 = load i32, i32* %11, align 4
  %1291 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1289, i32 %1290)
  %1292 = load float, float* %7, align 4
  store float %1292, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4
  br label %1967

1293:                                             ; preds = %1284
  %1294 = load i8*, i8** %2, align 8
  %1295 = call i32 @strcmp(i8* %1294, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0)) #8
  %1296 = icmp ne i32 %1295, 0
  br i1 %1296, label %1304, label %1297

1297:                                             ; preds = %1293
  %1298 = load float, float* %4, align 4
  %1299 = load i32, i32* %9, align 4
  %1300 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1298, i32 %1299)
  %1301 = load float, float* %3, align 4
  %1302 = load i32, i32* %10, align 4
  %1303 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1301, i32 %1302)
  br label %1966

1304:                                             ; preds = %1293
  %1305 = load i8*, i8** %2, align 8
  %1306 = call i32 @strcmp(i8* %1305, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0)) #8
  %1307 = icmp ne i32 %1306, 0
  br i1 %1307, label %1315, label %1308

1308:                                             ; preds = %1304
  %1309 = load float, float* %3, align 4
  %1310 = load i32, i32* %10, align 4
  %1311 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1309, i32 %1310)
  %1312 = load float, float* %3, align 4
  %1313 = load i32, i32* %10, align 4
  %1314 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1312, i32 %1313)
  br label %1965

1315:                                             ; preds = %1304
  %1316 = load i8*, i8** %2, align 8
  %1317 = call i32 @strcmp(i8* %1316, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #8
  %1318 = icmp ne i32 %1317, 0
  br i1 %1318, label %1326, label %1319

1319:                                             ; preds = %1315
  %1320 = load float, float* %3, align 4
  %1321 = load i32, i32* %10, align 4
  %1322 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %1320, i32 %1321)
  %1323 = load float, float* %6, align 4
  %1324 = load i32, i32* %9, align 4
  %1325 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %1323, i32 %1324)
  br label %1964

1326:                                             ; preds = %1315
  %1327 = load i8*, i8** %2, align 8
  %1328 = call i32 @strcmp(i8* %1327, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0)) #8
  %1329 = icmp ne i32 %1328, 0
  br i1 %1329, label %1337, label %1330

1330:                                             ; preds = %1326
  %1331 = load float, float* %6, align 4
  %1332 = load i32, i32* %9, align 4
  %1333 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1331, i32 %1332)
  %1334 = load float, float* %6, align 4
  %1335 = load i32, i32* %9, align 4
  %1336 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1334, i32 %1335)
  store float 1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16
  br label %1963

1337:                                             ; preds = %1326
  %1338 = load i8*, i8** %2, align 8
  %1339 = call i32 @strcmp(i8* %1338, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0)) #8
  %1340 = icmp ne i32 %1339, 0
  br i1 %1340, label %1348, label %1341

1341:                                             ; preds = %1337
  %1342 = load float, float* %3, align 4
  %1343 = load i32, i32* %10, align 4
  %1344 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1342, i32 %1343)
  %1345 = load float, float* %3, align 4
  %1346 = load i32, i32* %10, align 4
  %1347 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1345, i32 %1346)
  br label %1962

1348:                                             ; preds = %1337
  %1349 = load i8*, i8** %2, align 8
  %1350 = call i32 @strcmp(i8* %1349, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i64 0, i64 0)) #8
  %1351 = icmp ne i32 %1350, 0
  br i1 %1351, label %1359, label %1352

1352:                                             ; preds = %1348
  %1353 = load float, float* %6, align 4
  %1354 = load i32, i32* %9, align 4
  %1355 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1353, i32 %1354)
  %1356 = load float, float* %6, align 4
  %1357 = load i32, i32* %9, align 4
  %1358 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1356, i32 %1357)
  store float 1.000000e+00, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16
  br label %1961

1359:                                             ; preds = %1348
  %1360 = load i8*, i8** %2, align 8
  %1361 = call i32 @strcmp(i8* %1360, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i64 0, i64 0)) #8
  %1362 = icmp ne i32 %1361, 0
  br i1 %1362, label %1373, label %1363

1363:                                             ; preds = %1359
  %1364 = load float, float* %6, align 4
  %1365 = load i32, i32* %9, align 4
  %1366 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1364, i32 %1365)
  %1367 = load float, float* %3, align 4
  %1368 = load i32, i32* %10, align 4
  %1369 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1367, i32 %1368)
  %1370 = load float, float* %3, align 4
  %1371 = load i32, i32* %10, align 4
  %1372 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1370, i32 %1371)
  br label %1960

1373:                                             ; preds = %1359
  %1374 = load i8*, i8** %2, align 8
  %1375 = call i32 @strcmp(i8* %1374, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i64 0, i64 0)) #8
  %1376 = icmp ne i32 %1375, 0
  br i1 %1376, label %1387, label %1377

1377:                                             ; preds = %1373
  %1378 = load float, float* %6, align 4
  %1379 = load i32, i32* %9, align 4
  %1380 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1378, i32 %1379)
  %1381 = load float, float* %3, align 4
  %1382 = load i32, i32* %10, align 4
  %1383 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1381, i32 %1382)
  %1384 = load float, float* %3, align 4
  %1385 = load i32, i32* %10, align 4
  %1386 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1384, i32 %1385)
  br label %1959

1387:                                             ; preds = %1373
  %1388 = load i8*, i8** %2, align 8
  %1389 = call i32 @strcmp(i8* %1388, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i64 0, i64 0)) #8
  %1390 = icmp ne i32 %1389, 0
  br i1 %1390, label %1407, label %1391

1391:                                             ; preds = %1387
  %1392 = load float, float* %4, align 4
  %1393 = load i32, i32* %9, align 4
  %1394 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1392, i32 %1393)
  %1395 = load float, float* %6, align 4
  %1396 = load i32, i32* %9, align 4
  %1397 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1395, i32 %1396)
  %1398 = load float, float* %6, align 4
  %1399 = load i32, i32* %9, align 4
  %1400 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1398, i32 %1399)
  %1401 = load float, float* %3, align 4
  %1402 = load i32, i32* %10, align 4
  %1403 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1401, i32 %1402)
  %1404 = load float, float* %3, align 4
  %1405 = load i32, i32* %10, align 4
  %1406 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %1404, i32 %1405)
  br label %1958

1407:                                             ; preds = %1387
  %1408 = load i8*, i8** %2, align 8
  %1409 = call i32 @strcmp(i8* %1408, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i64 0, i64 0)) #8
  %1410 = icmp ne i32 %1409, 0
  br i1 %1410, label %1421, label %1411

1411:                                             ; preds = %1407
  %1412 = load float, float* %6, align 4
  %1413 = load i32, i32* %9, align 4
  %1414 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %1412, i32 %1413)
  %1415 = load float, float* %3, align 4
  %1416 = load i32, i32* %10, align 4
  %1417 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float %1415, i32 %1416)
  %1418 = load float, float* %3, align 4
  %1419 = load i32, i32* %10, align 4
  %1420 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %1418, i32 %1419)
  br label %1957

1421:                                             ; preds = %1407
  %1422 = load i8*, i8** %2, align 8
  %1423 = call i32 @strcmp(i8* %1422, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0)) #8
  %1424 = icmp ne i32 %1423, 0
  br i1 %1424, label %1437, label %1425

1425:                                             ; preds = %1421
  %1426 = load float, float* %6, align 4
  %1427 = load i32, i32* %9, align 4
  %1428 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1426, i32 %1427)
  %1429 = load float, float* %3, align 4
  %1430 = load i32, i32* %10, align 4
  %1431 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1429, i32 %1430)
  %1432 = load float, float* %3, align 4
  %1433 = load i32, i32* %10, align 4
  %1434 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1432, i32 %1433)
  %1435 = load float, float* %6, align 4
  %1436 = fneg float %1435
  store float %1436, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 31999), align 4
  br label %1956

1437:                                             ; preds = %1421
  %1438 = load i8*, i8** %2, align 8
  %1439 = call i32 @strcmp(i8* %1438, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0)) #8
  %1440 = icmp ne i32 %1439, 0
  br i1 %1440, label %1445, label %1441

1441:                                             ; preds = %1437
  %1442 = load float, float* %3, align 4
  %1443 = load i32, i32* %11, align 4
  %1444 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1442, i32 %1443)
  br label %1955

1445:                                             ; preds = %1437
  %1446 = load i8*, i8** %2, align 8
  %1447 = call i32 @strcmp(i8* %1446, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0)) #8
  %1448 = icmp ne i32 %1447, 0
  br i1 %1448, label %1456, label %1449

1449:                                             ; preds = %1445
  %1450 = load float, float* %6, align 4
  %1451 = load i32, i32* %9, align 4
  %1452 = call i32 @set1d(float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0), float %1450, i32 %1451)
  %1453 = load float, float* %3, align 4
  %1454 = load i32, i32* %11, align 4
  %1455 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1453, i32 %1454)
  br label %1954

1456:                                             ; preds = %1445
  %1457 = load i8*, i8** %2, align 8
  %1458 = call i32 @strcmp(i8* %1457, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0)) #8
  %1459 = icmp ne i32 %1458, 0
  br i1 %1459, label %1467, label %1460

1460:                                             ; preds = %1456
  %1461 = load float, float* %4, align 4
  %1462 = load i32, i32* %9, align 4
  %1463 = call i32 @set1d(float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0), float %1461, i32 %1462)
  %1464 = load float, float* %3, align 4
  %1465 = load i32, i32* %11, align 4
  %1466 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1464, i32 %1465)
  br label %1953

1467:                                             ; preds = %1456
  %1468 = load i8*, i8** %2, align 8
  %1469 = call i32 @strcmp(i8* %1468, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0)) #8
  %1470 = icmp ne i32 %1469, 0
  br i1 %1470, label %1478, label %1471

1471:                                             ; preds = %1467
  %1472 = load float, float* %6, align 4
  %1473 = load i32, i32* %9, align 4
  %1474 = call i32 @set1d(float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0), float %1472, i32 %1473)
  %1475 = load float, float* %3, align 4
  %1476 = load i32, i32* %11, align 4
  %1477 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1475, i32 %1476)
  br label %1952

1478:                                             ; preds = %1467
  %1479 = load i8*, i8** %2, align 8
  %1480 = call i32 @strcmp(i8* %1479, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #8
  %1481 = icmp ne i32 %1480, 0
  br i1 %1481, label %1489, label %1482

1482:                                             ; preds = %1478
  %1483 = load float, float* %6, align 4
  %1484 = load i32, i32* %9, align 4
  %1485 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1483, i32 %1484)
  %1486 = load float, float* %3, align 4
  %1487 = load i32, i32* %11, align 4
  %1488 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1486, i32 %1487)
  br label %1951

1489:                                             ; preds = %1478
  %1490 = load i8*, i8** %2, align 8
  %1491 = call i32 @strcmp(i8* %1490, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i64 0, i64 0)) #8
  %1492 = icmp ne i32 %1491, 0
  br i1 %1492, label %1500, label %1493

1493:                                             ; preds = %1489
  %1494 = load float, float* %6, align 4
  %1495 = load i32, i32* %9, align 4
  %1496 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1494, i32 %1495)
  %1497 = load float, float* %3, align 4
  %1498 = load i32, i32* %11, align 4
  %1499 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1497, i32 %1498)
  br label %1950

1500:                                             ; preds = %1489
  %1501 = load i8*, i8** %2, align 8
  %1502 = call i32 @strcmp(i8* %1501, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0)) #8
  %1503 = icmp ne i32 %1502, 0
  br i1 %1503, label %1524, label %1504

1504:                                             ; preds = %1500
  %1505 = load float, float* %6, align 4
  %1506 = load i32, i32* %9, align 4
  %1507 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1505, i32 %1506)
  %1508 = load float, float* %3, align 4
  %1509 = load i32, i32* %10, align 4
  %1510 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1508, i32 %1509)
  %1511 = load float, float* %3, align 4
  %1512 = load i32, i32* %10, align 4
  %1513 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1511, i32 %1512)
  %1514 = load float, float* %6, align 4
  %1515 = fneg float %1514
  %1516 = load i32, i32* %9, align 4
  %1517 = call i32 @set1ds(i32 10666, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1515, i32 %1516)
  %1518 = load float, float* %4, align 4
  %1519 = load i32, i32* %9, align 4
  %1520 = call i32 @set1ds(i32 10666, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 10666), float %1518, i32 %1519)
  %1521 = load float, float* %6, align 4
  %1522 = load i32, i32* %9, align 4
  %1523 = call i32 @set1ds(i32 10667, float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 21333), float %1521, i32 %1522)
  br label %1949

1524:                                             ; preds = %1500
  %1525 = load i8*, i8** %2, align 8
  %1526 = call i32 @strcmp(i8* %1525, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0)) #8
  %1527 = icmp ne i32 %1526, 0
  br i1 %1527, label %1544, label %1528

1528:                                             ; preds = %1524
  %1529 = load float, float* %6, align 4
  %1530 = load i32, i32* %9, align 4
  %1531 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1529, i32 %1530)
  %1532 = load float, float* %3, align 4
  %1533 = load i32, i32* %10, align 4
  %1534 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1532, i32 %1533)
  %1535 = load float, float* %3, align 4
  %1536 = load i32, i32* %10, align 4
  %1537 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1535, i32 %1536)
  %1538 = load float, float* %3, align 4
  %1539 = load i32, i32* %10, align 4
  %1540 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1538, i32 %1539)
  %1541 = load float, float* %3, align 4
  %1542 = load i32, i32* %10, align 4
  %1543 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %1541, i32 %1542)
  br label %1948

1544:                                             ; preds = %1524
  %1545 = load i8*, i8** %2, align 8
  %1546 = call i32 @strcmp(i8* %1545, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0)) #8
  %1547 = icmp ne i32 %1546, 0
  br i1 %1547, label %1558, label %1548

1548:                                             ; preds = %1544
  %1549 = load float, float* %6, align 4
  %1550 = load i32, i32* %9, align 4
  %1551 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1549, i32 %1550)
  %1552 = load float, float* %3, align 4
  %1553 = load i32, i32* %10, align 4
  %1554 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1552, i32 %1553)
  %1555 = load float, float* %3, align 4
  %1556 = load i32, i32* %10, align 4
  %1557 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1555, i32 %1556)
  br label %1947

1558:                                             ; preds = %1544
  %1559 = load i8*, i8** %2, align 8
  %1560 = call i32 @strcmp(i8* %1559, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0)) #8
  %1561 = icmp ne i32 %1560, 0
  br i1 %1561, label %1569, label %1562

1562:                                             ; preds = %1558
  %1563 = load float, float* %3, align 4
  %1564 = load i32, i32* %10, align 4
  %1565 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1563, i32 %1564)
  %1566 = load float, float* %3, align 4
  %1567 = load i32, i32* %10, align 4
  %1568 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1566, i32 %1567)
  br label %1946

1569:                                             ; preds = %1558
  %1570 = load i8*, i8** %2, align 8
  %1571 = call i32 @strcmp(i8* %1570, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i64 0, i64 0)) #8
  %1572 = icmp ne i32 %1571, 0
  br i1 %1572, label %1583, label %1573

1573:                                             ; preds = %1569
  %1574 = load float, float* %4, align 4
  %1575 = load i32, i32* %9, align 4
  %1576 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1574, i32 %1575)
  %1577 = load float, float* %6, align 4
  %1578 = load i32, i32* %9, align 4
  %1579 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1577, i32 %1578)
  %1580 = load float, float* %8, align 4
  %1581 = load i32, i32* %9, align 4
  %1582 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1580, i32 %1581)
  br label %1945

1583:                                             ; preds = %1569
  %1584 = load i8*, i8** %2, align 8
  %1585 = call i32 @strcmp(i8* %1584, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0)) #8
  %1586 = icmp ne i32 %1585, 0
  br i1 %1586, label %1594, label %1587

1587:                                             ; preds = %1583
  %1588 = load float, float* %4, align 4
  %1589 = load i32, i32* %9, align 4
  %1590 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1588, i32 %1589)
  %1591 = load float, float* %3, align 4
  %1592 = load i32, i32* %11, align 4
  %1593 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1591, i32 %1592)
  br label %1944

1594:                                             ; preds = %1583
  %1595 = load i8*, i8** %2, align 8
  %1596 = call i32 @strcmp(i8* %1595, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i64 0, i64 0)) #8
  %1597 = icmp ne i32 %1596, 0
  br i1 %1597, label %1614, label %1598

1598:                                             ; preds = %1594
  %1599 = load float, float* %6, align 4
  %1600 = load i32, i32* %9, align 4
  %1601 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1599, i32 %1600)
  %1602 = load float, float* %6, align 4
  %1603 = load i32, i32* %9, align 4
  %1604 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1602, i32 %1603)
  %1605 = load float, float* %6, align 4
  %1606 = load i32, i32* %9, align 4
  %1607 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1605, i32 %1606)
  %1608 = load float, float* %3, align 4
  %1609 = load i32, i32* %10, align 4
  %1610 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1608, i32 %1609)
  %1611 = load float, float* %3, align 4
  %1612 = load i32, i32* %10, align 4
  %1613 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %1611, i32 %1612)
  br label %1943

1614:                                             ; preds = %1594
  %1615 = load i8*, i8** %2, align 8
  %1616 = call i32 @strcmp(i8* %1615, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0)) #8
  %1617 = icmp ne i32 %1616, 0
  br i1 %1617, label %1631, label %1618

1618:                                             ; preds = %1614
  %1619 = load float, float* %6, align 4
  %1620 = load i32, i32* %9, align 4
  %1621 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1619, i32 %1620)
  %1622 = load float, float* %3, align 4
  %1623 = load i32, i32* %10, align 4
  %1624 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1622, i32 %1623)
  %1625 = load float, float* %3, align 4
  %1626 = load i32, i32* %10, align 4
  %1627 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1625, i32 %1626)
  %1628 = load float, float* %3, align 4
  %1629 = load i32, i32* %10, align 4
  %1630 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1628, i32 %1629)
  br label %1942

1631:                                             ; preds = %1614
  %1632 = load i8*, i8** %2, align 8
  %1633 = call i32 @strcmp(i8* %1632, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i64 0, i64 0)) #8
  %1634 = icmp ne i32 %1633, 0
  br i1 %1634, label %1645, label %1635

1635:                                             ; preds = %1631
  %1636 = load float, float* %6, align 4
  %1637 = load i32, i32* %9, align 4
  %1638 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1636, i32 %1637)
  %1639 = load float, float* %3, align 4
  %1640 = load i32, i32* %10, align 4
  %1641 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1639, i32 %1640)
  %1642 = load float, float* %3, align 4
  %1643 = load i32, i32* %10, align 4
  %1644 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1642, i32 %1643)
  br label %1941

1645:                                             ; preds = %1631
  %1646 = load i8*, i8** %2, align 8
  %1647 = call i32 @strcmp(i8* %1646, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0)) #8
  %1648 = icmp ne i32 %1647, 0
  br i1 %1648, label %1662, label %1649

1649:                                             ; preds = %1645
  %1650 = load float, float* %4, align 4
  %1651 = load i32, i32* %9, align 4
  %1652 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1650, i32 %1651)
  %1653 = load float, float* %6, align 4
  %1654 = load i32, i32* %9, align 4
  %1655 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1653, i32 %1654)
  %1656 = load float, float* %3, align 4
  %1657 = load i32, i32* %10, align 4
  %1658 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1656, i32 %1657)
  %1659 = load float, float* %3, align 4
  %1660 = load i32, i32* %10, align 4
  %1661 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1659, i32 %1660)
  br label %1940

1662:                                             ; preds = %1645
  %1663 = load i8*, i8** %2, align 8
  %1664 = call i32 @strcmp(i8* %1663, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i64 0, i64 0)) #8
  %1665 = icmp ne i32 %1664, 0
  br i1 %1665, label %1673, label %1666

1666:                                             ; preds = %1662
  %1667 = load float, float* %6, align 4
  %1668 = load i32, i32* %9, align 4
  %1669 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1667, i32 %1668)
  %1670 = load float, float* %3, align 4
  %1671 = load i32, i32* %10, align 4
  %1672 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1670, i32 %1671)
  br label %1939

1673:                                             ; preds = %1662
  %1674 = load i8*, i8** %2, align 8
  %1675 = call i32 @strcmp(i8* %1674, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i64 0, i64 0)) #8
  %1676 = icmp ne i32 %1675, 0
  br i1 %1676, label %1687, label %1677

1677:                                             ; preds = %1673
  %1678 = load float, float* %4, align 4
  %1679 = load i32, i32* %9, align 4
  %1680 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1678, i32 %1679)
  %1681 = load float, float* %6, align 4
  %1682 = load i32, i32* %9, align 4
  %1683 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1681, i32 %1682)
  %1684 = load float, float* %3, align 4
  %1685 = load i32, i32* %11, align 4
  %1686 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1684, i32 %1685)
  br label %1938

1687:                                             ; preds = %1673
  %1688 = load i8*, i8** %2, align 8
  %1689 = call i32 @strcmp(i8* %1688, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0)) #8
  %1690 = icmp ne i32 %1689, 0
  br i1 %1690, label %1704, label %1691

1691:                                             ; preds = %1687
  %1692 = load float, float* %4, align 4
  %1693 = load i32, i32* %9, align 4
  %1694 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1692, i32 %1693)
  %1695 = load float, float* %6, align 4
  %1696 = load i32, i32* %9, align 4
  %1697 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1695, i32 %1696)
  %1698 = load float, float* %3, align 4
  %1699 = load i32, i32* %10, align 4
  %1700 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1698, i32 %1699)
  %1701 = load float, float* %3, align 4
  %1702 = load i32, i32* %10, align 4
  %1703 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1701, i32 %1702)
  br label %1937

1704:                                             ; preds = %1687
  %1705 = load i8*, i8** %2, align 8
  %1706 = call i32 @strcmp(i8* %1705, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i64 0, i64 0)) #8
  %1707 = icmp ne i32 %1706, 0
  br i1 %1707, label %1715, label %1708

1708:                                             ; preds = %1704
  %1709 = load float, float* %3, align 4
  %1710 = load i32, i32* %10, align 4
  %1711 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1709, i32 %1710)
  %1712 = load float, float* %3, align 4
  %1713 = load i32, i32* %10, align 4
  %1714 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1712, i32 %1713)
  br label %1936

1715:                                             ; preds = %1704
  %1716 = load i8*, i8** %2, align 8
  %1717 = call i32 @strcmp(i8* %1716, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i64 0, i64 0)) #8
  %1718 = icmp ne i32 %1717, 0
  br i1 %1718, label %1726, label %1719

1719:                                             ; preds = %1715
  %1720 = load float, float* %3, align 4
  %1721 = load i32, i32* %10, align 4
  %1722 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1720, i32 %1721)
  %1723 = load float, float* %3, align 4
  %1724 = load i32, i32* %10, align 4
  %1725 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %1723, i32 %1724)
  br label %1935

1726:                                             ; preds = %1715
  %1727 = load i8*, i8** %2, align 8
  %1728 = call i32 @strcmp(i8* %1727, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0)) #8
  %1729 = icmp ne i32 %1728, 0
  br i1 %1729, label %1743, label %1730

1730:                                             ; preds = %1726
  %1731 = load float, float* %4, align 4
  %1732 = load i32, i32* %9, align 4
  %1733 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1731, i32 %1732)
  %1734 = load float, float* %6, align 4
  %1735 = load i32, i32* %9, align 4
  %1736 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1734, i32 %1735)
  %1737 = load float, float* %3, align 4
  %1738 = load i32, i32* %10, align 4
  %1739 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1737, i32 %1738)
  %1740 = load float, float* %3, align 4
  %1741 = load i32, i32* %10, align 4
  %1742 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1740, i32 %1741)
  br label %1934

1743:                                             ; preds = %1726
  %1744 = load i8*, i8** %2, align 8
  %1745 = call i32 @strcmp(i8* %1744, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i64 0, i64 0)) #8
  %1746 = icmp ne i32 %1745, 0
  br i1 %1746, label %1757, label %1747

1747:                                             ; preds = %1743
  %1748 = load float, float* %6, align 4
  %1749 = load i32, i32* %9, align 4
  %1750 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1748, i32 %1749)
  %1751 = load float, float* %3, align 4
  %1752 = load i32, i32* %10, align 4
  %1753 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1751, i32 %1752)
  %1754 = load float, float* %3, align 4
  %1755 = load i32, i32* %10, align 4
  %1756 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1754, i32 %1755)
  br label %1933

1757:                                             ; preds = %1743
  %1758 = load i8*, i8** %2, align 8
  %1759 = call i32 @strcmp(i8* %1758, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0)) #8
  %1760 = icmp ne i32 %1759, 0
  br i1 %1760, label %1768, label %1761

1761:                                             ; preds = %1757
  %1762 = load float, float* %4, align 4
  %1763 = load i32, i32* %9, align 4
  %1764 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1762, i32 %1763)
  %1765 = load float, float* %3, align 4
  %1766 = load i32, i32* %11, align 4
  %1767 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1765, i32 %1766)
  br label %1932

1768:                                             ; preds = %1757
  %1769 = load i8*, i8** %2, align 8
  %1770 = call i32 @strcmp(i8* %1769, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i64 0, i64 0)) #8
  %1771 = icmp ne i32 %1770, 0
  br i1 %1771, label %1779, label %1772

1772:                                             ; preds = %1768
  %1773 = load float, float* %4, align 4
  %1774 = load i32, i32* %9, align 4
  %1775 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1773, i32 %1774)
  %1776 = load float, float* %3, align 4
  %1777 = load i32, i32* %11, align 4
  %1778 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1776, i32 %1777)
  br label %1931

1779:                                             ; preds = %1768
  %1780 = load i8*, i8** %2, align 8
  %1781 = call i32 @strcmp(i8* %1780, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i64 0, i64 0)) #8
  %1782 = icmp ne i32 %1781, 0
  br i1 %1782, label %1790, label %1783

1783:                                             ; preds = %1779
  %1784 = load float, float* %4, align 4
  %1785 = load i32, i32* %9, align 4
  %1786 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1784, i32 %1785)
  %1787 = load float, float* %3, align 4
  %1788 = load i32, i32* %11, align 4
  %1789 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1787, i32 %1788)
  br label %1930

1790:                                             ; preds = %1779
  %1791 = load i8*, i8** %2, align 8
  %1792 = call i32 @strcmp(i8* %1791, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i64 0, i64 0)) #8
  %1793 = icmp ne i32 %1792, 0
  br i1 %1793, label %1801, label %1794

1794:                                             ; preds = %1790
  %1795 = load float, float* %4, align 4
  %1796 = load i32, i32* %9, align 4
  %1797 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1795, i32 %1796)
  %1798 = load float, float* %3, align 4
  %1799 = load i32, i32* %11, align 4
  %1800 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1798, i32 %1799)
  br label %1929

1801:                                             ; preds = %1790
  %1802 = load i8*, i8** %2, align 8
  %1803 = call i32 @strcmp(i8* %1802, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i64 0, i64 0)) #8
  %1804 = icmp ne i32 %1803, 0
  br i1 %1804, label %1812, label %1805

1805:                                             ; preds = %1801
  %1806 = load float, float* %4, align 4
  %1807 = load i32, i32* %9, align 4
  %1808 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1806, i32 %1807)
  %1809 = load float, float* %3, align 4
  %1810 = load i32, i32* %11, align 4
  %1811 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1809, i32 %1810)
  br label %1928

1812:                                             ; preds = %1801
  %1813 = load i8*, i8** %2, align 8
  %1814 = call i32 @strcmp(i8* %1813, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i64 0, i64 0)) #8
  %1815 = icmp ne i32 %1814, 0
  br i1 %1815, label %1823, label %1816

1816:                                             ; preds = %1812
  %1817 = load float, float* %6, align 4
  %1818 = load i32, i32* %9, align 4
  %1819 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1817, i32 %1818)
  %1820 = load float, float* %6, align 4
  %1821 = load i32, i32* %9, align 4
  %1822 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1820, i32 %1821)
  br label %1927

1823:                                             ; preds = %1812
  %1824 = load i8*, i8** %2, align 8
  %1825 = call i32 @strcmp(i8* %1824, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0)) #8
  %1826 = icmp ne i32 %1825, 0
  br i1 %1826, label %1837, label %1827

1827:                                             ; preds = %1823
  %1828 = load float, float* %6, align 4
  %1829 = load i32, i32* %9, align 4
  %1830 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1828, i32 %1829)
  %1831 = load float, float* %3, align 4
  %1832 = load i32, i32* %10, align 4
  %1833 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1831, i32 %1832)
  %1834 = load float, float* %3, align 4
  %1835 = load i32, i32* %10, align 4
  %1836 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1834, i32 %1835)
  br label %1926

1837:                                             ; preds = %1823
  %1838 = load i8*, i8** %2, align 8
  %1839 = call i32 @strcmp(i8* %1838, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i64 0, i64 0)) #8
  %1840 = icmp ne i32 %1839, 0
  br i1 %1840, label %1848, label %1841

1841:                                             ; preds = %1837
  %1842 = load float, float* %6, align 4
  %1843 = load i32, i32* %9, align 4
  %1844 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1842, i32 %1843)
  %1845 = load float, float* %3, align 4
  %1846 = load i32, i32* %11, align 4
  %1847 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1845, i32 %1846)
  br label %1925

1848:                                             ; preds = %1837
  %1849 = load i8*, i8** %2, align 8
  %1850 = call i32 @strcmp(i8* %1849, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0)) #8
  %1851 = icmp ne i32 %1850, 0
  br i1 %1851, label %1863, label %1852

1852:                                             ; preds = %1848
  %1853 = load float, float* %3, align 4
  %1854 = load i32, i32* %11, align 4
  %1855 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1853, i32 %1854)
  %1856 = load float, float* %6, align 4
  %1857 = load i32, i32* %9, align 4
  %1858 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1856, i32 %1857)
  %1859 = load float, float* %6, align 4
  %1860 = fneg float %1859
  %1861 = load i32, i32* %9, align 4
  %1862 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1860, i32 %1861)
  br label %1924

1863:                                             ; preds = %1848
  %1864 = load i8*, i8** %2, align 8
  %1865 = call i32 @strcmp(i8* %1864, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i64 0, i64 0)) #8
  %1866 = icmp ne i32 %1865, 0
  br i1 %1866, label %1877, label %1867

1867:                                             ; preds = %1863
  %1868 = load float, float* %6, align 4
  %1869 = load i32, i32* %9, align 4
  %1870 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1868, i32 %1869)
  %1871 = load float, float* %7, align 4
  %1872 = load i32, i32* %9, align 4
  %1873 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1871, i32 %1872)
  %1874 = load float, float* %5, align 4
  %1875 = load i32, i32* %9, align 4
  %1876 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1874, i32 %1875)
  br label %1923

1877:                                             ; preds = %1863
  %1878 = load i8*, i8** %2, align 8
  %1879 = call i32 @strcmp(i8* %1878, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i64 0, i64 0)) #8
  %1880 = icmp ne i32 %1879, 0
  br i1 %1880, label %1885, label %1881

1881:                                             ; preds = %1877
  %1882 = load float, float* %3, align 4
  %1883 = load i32, i32* %10, align 4
  %1884 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1882, i32 %1883)
  br label %1922

1885:                                             ; preds = %1877
  %1886 = load i8*, i8** %2, align 8
  %1887 = call i32 @strcmp(i8* %1886, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i64 0, i64 0)) #8
  %1888 = icmp ne i32 %1887, 0
  br i1 %1888, label %1896, label %1889

1889:                                             ; preds = %1885
  %1890 = load float, float* %3, align 4
  %1891 = load i32, i32* %10, align 4
  %1892 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1890, i32 %1891)
  %1893 = load float, float* %3, align 4
  %1894 = load i32, i32* %10, align 4
  %1895 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1893, i32 %1894)
  br label %1921

1896:                                             ; preds = %1885
  %1897 = load i8*, i8** %2, align 8
  %1898 = call i32 @strcmp(i8* %1897, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i64 0, i64 0)) #8
  %1899 = icmp ne i32 %1898, 0
  br i1 %1899, label %1919, label %1900

1900:                                             ; preds = %1896
  %1901 = load float, float* %3, align 4
  %1902 = load i32, i32* %10, align 4
  %1903 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float %1901, i32 %1902)
  %1904 = load float, float* %3, align 4
  %1905 = load i32, i32* %10, align 4
  %1906 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float %1904, i32 %1905)
  %1907 = load float, float* %6, align 4
  %1908 = load i32, i32* %10, align 4
  %1909 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float %1907, i32 %1908)
  %1910 = load float, float* %7, align 4
  %1911 = load i32, i32* %10, align 4
  %1912 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float %1910, i32 %1911)
  %1913 = load float, float* %5, align 4
  %1914 = load i32, i32* %10, align 4
  %1915 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float %1913, i32 %1914)
  %1916 = load float, float* %3, align 4
  %1917 = load i32, i32* %10, align 4
  %1918 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float %1916, i32 %1917)
  br label %1920

1919:                                             ; preds = %1896
  br label %1920

1920:                                             ; preds = %1919, %1900
  br label %1921

1921:                                             ; preds = %1920, %1889
  br label %1922

1922:                                             ; preds = %1921, %1881
  br label %1923

1923:                                             ; preds = %1922, %1867
  br label %1924

1924:                                             ; preds = %1923, %1852
  br label %1925

1925:                                             ; preds = %1924, %1841
  br label %1926

1926:                                             ; preds = %1925, %1827
  br label %1927

1927:                                             ; preds = %1926, %1816
  br label %1928

1928:                                             ; preds = %1927, %1805
  br label %1929

1929:                                             ; preds = %1928, %1794
  br label %1930

1930:                                             ; preds = %1929, %1783
  br label %1931

1931:                                             ; preds = %1930, %1772
  br label %1932

1932:                                             ; preds = %1931, %1761
  br label %1933

1933:                                             ; preds = %1932, %1747
  br label %1934

1934:                                             ; preds = %1933, %1730
  br label %1935

1935:                                             ; preds = %1934, %1719
  br label %1936

1936:                                             ; preds = %1935, %1708
  br label %1937

1937:                                             ; preds = %1936, %1691
  br label %1938

1938:                                             ; preds = %1937, %1677
  br label %1939

1939:                                             ; preds = %1938, %1666
  br label %1940

1940:                                             ; preds = %1939, %1649
  br label %1941

1941:                                             ; preds = %1940, %1635
  br label %1942

1942:                                             ; preds = %1941, %1618
  br label %1943

1943:                                             ; preds = %1942, %1598
  br label %1944

1944:                                             ; preds = %1943, %1587
  br label %1945

1945:                                             ; preds = %1944, %1573
  br label %1946

1946:                                             ; preds = %1945, %1562
  br label %1947

1947:                                             ; preds = %1946, %1548
  br label %1948

1948:                                             ; preds = %1947, %1528
  br label %1949

1949:                                             ; preds = %1948, %1504
  br label %1950

1950:                                             ; preds = %1949, %1493
  br label %1951

1951:                                             ; preds = %1950, %1482
  br label %1952

1952:                                             ; preds = %1951, %1471
  br label %1953

1953:                                             ; preds = %1952, %1460
  br label %1954

1954:                                             ; preds = %1953, %1449
  br label %1955

1955:                                             ; preds = %1954, %1441
  br label %1956

1956:                                             ; preds = %1955, %1425
  br label %1957

1957:                                             ; preds = %1956, %1411
  br label %1958

1958:                                             ; preds = %1957, %1391
  br label %1959

1959:                                             ; preds = %1958, %1377
  br label %1960

1960:                                             ; preds = %1959, %1363
  br label %1961

1961:                                             ; preds = %1960, %1352
  br label %1962

1962:                                             ; preds = %1961, %1341
  br label %1963

1963:                                             ; preds = %1962, %1330
  br label %1964

1964:                                             ; preds = %1963, %1319
  br label %1965

1965:                                             ; preds = %1964, %1308
  br label %1966

1966:                                             ; preds = %1965, %1297
  br label %1967

1967:                                             ; preds = %1966, %1288
  br label %1968

1968:                                             ; preds = %1967, %1278
  br label %1969

1969:                                             ; preds = %1968, %1258
  br label %1970

1970:                                             ; preds = %1969, %1244
  br label %1971

1971:                                             ; preds = %1970, %1233
  br label %1972

1972:                                             ; preds = %1971, %1223
  br label %1973

1973:                                             ; preds = %1972, %1212
  br label %1974

1974:                                             ; preds = %1973, %1204
  br label %1975

1975:                                             ; preds = %1974, %1195
  br label %1976

1976:                                             ; preds = %1975, %1175
  br label %1977

1977:                                             ; preds = %1976, %1165
  br label %1978

1978:                                             ; preds = %1977, %1160
  br label %1979

1979:                                             ; preds = %1978, %1152
  br label %1980

1980:                                             ; preds = %1979, %1144
  br label %1981

1981:                                             ; preds = %1980, %1136
  br label %1982

1982:                                             ; preds = %1981, %1125
  br label %1983

1983:                                             ; preds = %1982, %1118
  br label %1984

1984:                                             ; preds = %1983, %1110
  br label %1985

1985:                                             ; preds = %1984, %1102
  br label %1986

1986:                                             ; preds = %1985, %1094
  br label %1987

1987:                                             ; preds = %1986, %1080
  br label %1988

1988:                                             ; preds = %1987, %1072
  br label %1989

1989:                                             ; preds = %1988, %1061
  br label %1990

1990:                                             ; preds = %1989, %1050
  br label %1991

1991:                                             ; preds = %1990, %1036
  br label %1992

1992:                                             ; preds = %1991, %1022
  br label %1993

1993:                                             ; preds = %1992, %1008
  br label %1994

1994:                                             ; preds = %1993, %988
  br label %1995

1995:                                             ; preds = %1994, %964
  br label %1996

1996:                                             ; preds = %1995, %940
  br label %1997

1997:                                             ; preds = %1996, %916
  br label %1998

1998:                                             ; preds = %1997, %899
  br label %1999

1999:                                             ; preds = %1998, %885
  br label %2000

2000:                                             ; preds = %1999, %865
  br label %2001

2001:                                             ; preds = %2000, %845
  br label %2002

2002:                                             ; preds = %2001, %825
  br label %2003

2003:                                             ; preds = %2002, %811
  br label %2004

2004:                                             ; preds = %2003, %794
  br label %2005

2005:                                             ; preds = %2004, %771
  br label %2006

2006:                                             ; preds = %2005, %757
  br label %2007

2007:                                             ; preds = %2006, %743
  br label %2008

2008:                                             ; preds = %2007, %732
  br label %2009

2009:                                             ; preds = %2008, %721
  br label %2010

2010:                                             ; preds = %2009, %704
  br label %2011

2011:                                             ; preds = %2010, %690
  br label %2012

2012:                                             ; preds = %2011, %670
  br label %2013

2013:                                             ; preds = %2012, %653
  br label %2014

2014:                                             ; preds = %2013, %633
  br label %2015

2015:                                             ; preds = %2014, %616
  br label %2016

2016:                                             ; preds = %2015, %599
  br label %2017

2017:                                             ; preds = %2016, %579
  br label %2018

2018:                                             ; preds = %2017, %565
  br label %2019

2019:                                             ; preds = %2018, %551
  br label %2020

2020:                                             ; preds = %2019, %540
  br label %2021

2021:                                             ; preds = %2020, %529
  br label %2022

2022:                                             ; preds = %2021, %515
  br label %2023

2023:                                             ; preds = %2022, %498
  br label %2024

2024:                                             ; preds = %2023, %481
  br label %2025

2025:                                             ; preds = %2024, %461
  br label %2026

2026:                                             ; preds = %2025, %447
  br label %2027

2027:                                             ; preds = %2026, %436
  br label %2028

2028:                                             ; preds = %2027, %425
  br label %2029

2029:                                             ; preds = %2028, %414
  br label %2030

2030:                                             ; preds = %2029, %403
  br label %2031

2031:                                             ; preds = %2030, %392
  br label %2032

2032:                                             ; preds = %2031, %378
  br label %2033

2033:                                             ; preds = %2032, %356
  br label %2034

2034:                                             ; preds = %2033, %336
  br label %2035

2035:                                             ; preds = %2034, %325
  br label %2036

2036:                                             ; preds = %2035, %314
  br label %2037

2037:                                             ; preds = %2036, %300
  br label %2038

2038:                                             ; preds = %2037, %289
  br label %2039

2039:                                             ; preds = %2038, %272
  br label %2040

2040:                                             ; preds = %2039, %252
  br label %2041

2041:                                             ; preds = %2040, %238
  br label %2042

2042:                                             ; preds = %2041, %221
  br label %2043

2043:                                             ; preds = %2042, %201
  br label %2044

2044:                                             ; preds = %2043, %181
  br label %2045

2045:                                             ; preds = %2044, %170
  br label %2046

2046:                                             ; preds = %2045, %159
  br label %2047

2047:                                             ; preds = %2046, %148
  br label %2048

2048:                                             ; preds = %2047, %137
  br label %2049

2049:                                             ; preds = %2048, %129
  br label %2050

2050:                                             ; preds = %2049, %112
  br label %2051

2051:                                             ; preds = %2050, %101
  br label %2052

2052:                                             ; preds = %2051, %90
  br label %2053

2053:                                             ; preds = %2052, %79
  br label %2054

2054:                                             ; preds = %2053, %59
  br label %2055

2055:                                             ; preds = %2054, %54
  ret i32 0
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s000() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %30, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 100000
  br i1 %11, label %12, label %33

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %25, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %28

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @Y, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fadd float %20, 1.000000e+00
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @X, i64 0, i64 %23
  store float %21, float* %24, align 4
  br label %25

25:                                               ; preds = %16
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %6, align 4
  br label %13

28:                                               ; preds = %13
  %29 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @X, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @Y, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @Z, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @U, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @V, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %30

30:                                               ; preds = %28
  %31 = load i32, i32* %5, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %5, align 4
  br label %9

33:                                               ; preds = %9
  %34 = call i64 @clock() #9
  store i64 %34, i64* %2, align 8
  %35 = load i64, i64* %2, align 8
  %36 = load i64, i64* %1, align 8
  %37 = sub nsw i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = load i64, i64* %3, align 8
  %39 = sitofp i64 %38 to double
  %40 = fdiv double %39, 1.000000e+06
  store double %40, double* %4, align 8
  %41 = load double, double* %4, align 8
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.137, i64 0, i64 0), double %41)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: nounwind
declare dso_local i64 @clock() #4

declare dso_local i32 @dummy(float*, float*, float*, float*, float*, [256 x float]*, [256 x float]*, [256 x float]*, float) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s111() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %35, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 100000
  br i1 %11, label %12, label %38

12:                                               ; preds = %9
  store i32 1, i32* %6, align 4
  br label %13

13:                                               ; preds = %30, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %33

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sub nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %26, float* %29, align 4
  br label %30

30:                                               ; preds = %16
  %31 = load i32, i32* %6, align 4
  %32 = add nsw i32 %31, 2
  store i32 %32, i32* %6, align 4
  br label %13

33:                                               ; preds = %13
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %35

35:                                               ; preds = %33
  %36 = load i32, i32* %5, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %5, align 4
  br label %9

38:                                               ; preds = %9
  %39 = call i64 @clock() #9
  store i64 %39, i64* %2, align 8
  %40 = load i64, i64* %2, align 8
  %41 = load i64, i64* %1, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %3, align 8
  %43 = load i64, i64* %3, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %4, align 8
  %46 = load double, double* %4, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i64 0, i64 0), double %46)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1111() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %75, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 100000
  br i1 %11, label %12, label %78

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %70, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 16000
  br i1 %15, label %16, label %73

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fmul float %29, %33
  %35 = fadd float %25, %34
  %36 = load i32, i32* %6, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fmul float %39, %43
  %45 = fadd float %35, %44
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = load i32, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %51
  %53 = load float, float* %52, align 4
  %54 = fmul float %49, %53
  %55 = fadd float %45, %54
  %56 = load i32, i32* %6, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %57
  %59 = load float, float* %58, align 4
  %60 = load i32, i32* %6, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %61
  %63 = load float, float* %62, align 4
  %64 = fmul float %59, %63
  %65 = fadd float %55, %64
  %66 = load i32, i32* %6, align 4
  %67 = mul nsw i32 2, %66
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  store float %65, float* %69, align 4
  br label %70

70:                                               ; preds = %16
  %71 = load i32, i32* %6, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %6, align 4
  br label %13

73:                                               ; preds = %13
  %74 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %5, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %5, align 4
  br label %9

78:                                               ; preds = %9
  %79 = call i64 @clock() #9
  store i64 %79, i64* %2, align 8
  %80 = load i64, i64* %2, align 8
  %81 = load i64, i64* %1, align 8
  %82 = sub nsw i64 %80, %81
  store i64 %82, i64* %3, align 8
  %83 = load i64, i64* %3, align 8
  %84 = sitofp i64 %83 to double
  %85 = fdiv double %84, 1.000000e+06
  store double %85, double* %4, align 8
  %86 = load double, double* %4, align 8
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.139, i64 0, i64 0), double %86)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s112() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %35, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 150000
  br i1 %11, label %12, label %38

12:                                               ; preds = %9
  store i32 31998, i32* %6, align 4
  br label %13

13:                                               ; preds = %30, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp sge i32 %14, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fadd float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %25, float* %29, align 4
  br label %30

30:                                               ; preds = %16
  %31 = load i32, i32* %6, align 4
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* %6, align 4
  br label %13

33:                                               ; preds = %13
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %35

35:                                               ; preds = %33
  %36 = load i32, i32* %5, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %5, align 4
  br label %9

38:                                               ; preds = %9
  %39 = call i64 @clock() #9
  store i64 %39, i64* %2, align 8
  %40 = load i64, i64* %2, align 8
  %41 = load i64, i64* %1, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %3, align 8
  %43 = load i64, i64* %3, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %4, align 8
  %46 = load double, double* %4, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i64 0, i64 0), double %46)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1112() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %30, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 150000
  br i1 %11, label %12, label %33

12:                                               ; preds = %9
  store i32 31999, i32* %6, align 4
  br label %13

13:                                               ; preds = %25, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp sge i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fadd float %20, 1.000000e+00
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  store float %21, float* %24, align 4
  br label %25

25:                                               ; preds = %16
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %26, -1
  store i32 %27, i32* %6, align 4
  br label %13

28:                                               ; preds = %13
  %29 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %30

30:                                               ; preds = %28
  %31 = load i32, i32* %5, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %5, align 4
  br label %9

33:                                               ; preds = %9
  %34 = call i64 @clock() #9
  store i64 %34, i64* %2, align 8
  %35 = load i64, i64* %2, align 8
  %36 = load i64, i64* %1, align 8
  %37 = sub nsw i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = load i64, i64* %3, align 8
  %39 = sitofp i64 %38 to double
  %40 = fdiv double %39, 1.000000e+06
  store double %40, double* %4, align 8
  %41 = load double, double* %4, align 8
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.141, i64 0, i64 0), double %41)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s113() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %31, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 200000
  br i1 %11, label %12, label %34

12:                                               ; preds = %9
  store i32 1, i32* %6, align 4
  br label %13

13:                                               ; preds = %26, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = fadd float %17, %21
  %23 = load i32, i32* %6, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  store float %22, float* %25, align 4
  br label %26

26:                                               ; preds = %16
  %27 = load i32, i32* %6, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %6, align 4
  br label %13

29:                                               ; preds = %13
  %30 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %31

31:                                               ; preds = %29
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %5, align 4
  br label %9

34:                                               ; preds = %9
  %35 = call i64 @clock() #9
  store i64 %35, i64* %2, align 8
  %36 = load i64, i64* %2, align 8
  %37 = load i64, i64* %1, align 8
  %38 = sub nsw i64 %36, %37
  store i64 %38, i64* %3, align 8
  %39 = load i64, i64* %3, align 8
  %40 = sitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  store double %41, double* %4, align 8
  %42 = load double, double* %4, align 8
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.142, i64 0, i64 0), double %42)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1113() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %31, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 100000
  br i1 %11, label %12, label %34

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %26, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16000), align 16
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = fadd float %17, %21
  %23 = load i32, i32* %6, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  store float %22, float* %25, align 4
  br label %26

26:                                               ; preds = %16
  %27 = load i32, i32* %6, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %6, align 4
  br label %13

29:                                               ; preds = %13
  %30 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %31

31:                                               ; preds = %29
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %5, align 4
  br label %9

34:                                               ; preds = %9
  %35 = call i64 @clock() #9
  store i64 %35, i64* %2, align 8
  %36 = load i64, i64* %2, align 8
  %37 = load i64, i64* %1, align 8
  %38 = sub nsw i64 %36, %37
  store i64 %38, i64* %3, align 8
  %39 = load i64, i64* %3, align 8
  %40 = sitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  store double %41, double* %4, align 8
  %42 = load double, double* %4, align 8
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.143, i64 0, i64 0), double %42)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s114() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %53, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 39000
  br i1 %12, label %13, label %56

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %48, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %51

17:                                               ; preds = %14
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %44, %17
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %6, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %47

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [256 x float], [256 x float]* %25, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %31
  %33 = load i32, i32* %7, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x float], [256 x float]* %32, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fadd float %29, %36
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %39
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [256 x float], [256 x float]* %40, i64 0, i64 %42
  store float %37, float* %43, align 4
  br label %44

44:                                               ; preds = %22
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  br label %18

47:                                               ; preds = %18
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %6, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %6, align 4
  br label %14

51:                                               ; preds = %14
  %52 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %10

56:                                               ; preds = %10
  %57 = call i64 @clock() #9
  store i64 %57, i64* %2, align 8
  %58 = load i64, i64* %2, align 8
  %59 = load i64, i64* %1, align 8
  %60 = sub nsw i64 %58, %59
  store i64 %60, i64* %3, align 8
  %61 = load i64, i64* %3, align 8
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  store double %63, double* %4, align 8
  %64 = load double, double* %4, align 8
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.144, i64 0, i64 0), double %64)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s115() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %50, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 195000
  br i1 %12, label %13, label %53

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %45, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %48

17:                                               ; preds = %14
  %18 = load i32, i32* %6, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %7, align 4
  br label %20

20:                                               ; preds = %41, %17
  %21 = load i32, i32* %7, align 4
  %22 = icmp slt i32 %21, 256
  br i1 %22, label %23, label %44

23:                                               ; preds = %20
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %25
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %26, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = fmul float %30, %34
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fsub float %39, %35
  store float %40, float* %38, align 4
  br label %41

41:                                               ; preds = %23
  %42 = load i32, i32* %7, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %7, align 4
  br label %20

44:                                               ; preds = %20
  br label %45

45:                                               ; preds = %44
  %46 = load i32, i32* %6, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %6, align 4
  br label %14

48:                                               ; preds = %14
  %49 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %5, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %5, align 4
  br label %10

53:                                               ; preds = %10
  %54 = call i64 @clock() #9
  store i64 %54, i64* %2, align 8
  %55 = load i64, i64* %2, align 8
  %56 = load i64, i64* %1, align 8
  %57 = sub nsw i64 %55, %56
  store i64 %57, i64* %3, align 8
  %58 = load i64, i64* %3, align 8
  %59 = sitofp i64 %58 to double
  %60 = fdiv double %59, 1.000000e+06
  store double %60, double* %4, align 8
  %61 = load double, double* %4, align 8
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.145, i64 0, i64 0), double %61)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1115() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %60, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 19500
  br i1 %12, label %13, label %63

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %55, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %58

17:                                               ; preds = %14
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %51, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %54

21:                                               ; preds = %18
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %23
  %25 = load i32, i32* %7, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [256 x float], [256 x float]* %24, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [256 x float], [256 x float]* %31, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fmul float %28, %35
  %37 = load i32, i32* %6, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %38
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [256 x float], [256 x float]* %39, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fadd float %36, %43
  %45 = load i32, i32* %6, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %46
  %48 = load i32, i32* %7, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [256 x float], [256 x float]* %47, i64 0, i64 %49
  store float %44, float* %50, align 4
  br label %51

51:                                               ; preds = %21
  %52 = load i32, i32* %7, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %7, align 4
  br label %18

54:                                               ; preds = %18
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %6, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %6, align 4
  br label %14

58:                                               ; preds = %14
  %59 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %5, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %5, align 4
  br label %10

63:                                               ; preds = %10
  %64 = call i64 @clock() #9
  store i64 %64, i64* %2, align 8
  %65 = load i64, i64* %2, align 8
  %66 = load i64, i64* %1, align 8
  %67 = sub nsw i64 %65, %66
  store i64 %67, i64* %3, align 8
  %68 = load i64, i64* %3, align 8
  %69 = sitofp i64 %68 to double
  %70 = fdiv double %69, 1.000000e+06
  store double %70, double* %4, align 8
  %71 = load double, double* %4, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.146, i64 0, i64 0), double %71)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s116() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %95, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 500000
  br i1 %11, label %12, label %98

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %90, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31995
  br i1 %15, label %16, label %93

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = add nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fmul float %21, %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %26, float* %29, align 4
  %30 = load i32, i32* %6, align 4
  %31 = add nsw i32 %30, 2
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, 1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fmul float %34, %39
  %41 = load i32, i32* %6, align 4
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  store float %40, float* %44, align 4
  %45 = load i32, i32* %6, align 4
  %46 = add nsw i32 %45, 3
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = load i32, i32* %6, align 4
  %51 = add nsw i32 %50, 2
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 4
  %55 = fmul float %49, %54
  %56 = load i32, i32* %6, align 4
  %57 = add nsw i32 %56, 2
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %58
  store float %55, float* %59, align 4
  %60 = load i32, i32* %6, align 4
  %61 = add nsw i32 %60, 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %62
  %64 = load float, float* %63, align 4
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 3
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4
  %70 = fmul float %64, %69
  %71 = load i32, i32* %6, align 4
  %72 = add nsw i32 %71, 3
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %73
  store float %70, float* %74, align 4
  %75 = load i32, i32* %6, align 4
  %76 = add nsw i32 %75, 5
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %77
  %79 = load float, float* %78, align 4
  %80 = load i32, i32* %6, align 4
  %81 = add nsw i32 %80, 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 4
  %85 = fmul float %79, %84
  %86 = load i32, i32* %6, align 4
  %87 = add nsw i32 %86, 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %88
  store float %85, float* %89, align 4
  br label %90

90:                                               ; preds = %16
  %91 = load i32, i32* %6, align 4
  %92 = add nsw i32 %91, 5
  store i32 %92, i32* %6, align 4
  br label %13

93:                                               ; preds = %13
  %94 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %95

95:                                               ; preds = %93
  %96 = load i32, i32* %5, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %5, align 4
  br label %9

98:                                               ; preds = %9
  %99 = call i64 @clock() #9
  store i64 %99, i64* %2, align 8
  %100 = load i64, i64* %2, align 8
  %101 = load i64, i64* %1, align 8
  %102 = sub nsw i64 %100, %101
  store i64 %102, i64* %3, align 8
  %103 = load i64, i64* %3, align 8
  %104 = sitofp i64 %103 to double
  %105 = fdiv double %104, 1.000000e+06
  store double %105, double* %4, align 8
  %106 = load double, double* %4, align 8
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147, i64 0, i64 0), double %106)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s118() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %53, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 39000
  br i1 %12, label %13, label %56

13:                                               ; preds = %10
  store i32 1, i32* %6, align 4
  br label %14

14:                                               ; preds = %48, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %51

17:                                               ; preds = %14
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %44, %17
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %6, align 4
  %21 = sub nsw i32 %20, 1
  %22 = icmp sle i32 %19, %21
  br i1 %22, label %23, label %47

23:                                               ; preds = %18
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %26, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %6, align 4
  %32 = load i32, i32* %7, align 4
  %33 = sub nsw i32 %31, %32
  %34 = sub nsw i32 %33, 1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fmul float %30, %37
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4
  %43 = fadd float %42, %38
  store float %43, float* %41, align 4
  br label %44

44:                                               ; preds = %23
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  br label %18

47:                                               ; preds = %18
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %6, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %6, align 4
  br label %14

51:                                               ; preds = %14
  %52 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %10

56:                                               ; preds = %10
  %57 = call i64 @clock() #9
  store i64 %57, i64* %2, align 8
  %58 = load i64, i64* %2, align 8
  %59 = load i64, i64* %1, align 8
  %60 = sub nsw i64 %58, %59
  store i64 %60, i64* %3, align 8
  %61 = load i64, i64* %3, align 8
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  store double %63, double* %4, align 8
  %64 = load double, double* %4, align 8
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.148, i64 0, i64 0), double %64)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s119() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %54, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 39000
  br i1 %12, label %13, label %57

13:                                               ; preds = %10
  store i32 1, i32* %6, align 4
  br label %14

14:                                               ; preds = %49, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %52

17:                                               ; preds = %14
  store i32 1, i32* %7, align 4
  br label %18

18:                                               ; preds = %45, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %48

21:                                               ; preds = %18
  %22 = load i32, i32* %6, align 4
  %23 = sub nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %24
  %26 = load i32, i32* %7, align 4
  %27 = sub nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %25, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %32
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [256 x float], [256 x float]* %33, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fadd float %30, %37
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %40
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [256 x float], [256 x float]* %41, i64 0, i64 %43
  store float %38, float* %44, align 4
  br label %45

45:                                               ; preds = %21
  %46 = load i32, i32* %7, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %7, align 4
  br label %18

48:                                               ; preds = %18
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %6, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %6, align 4
  br label %14

52:                                               ; preds = %14
  %53 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %54

54:                                               ; preds = %52
  %55 = load i32, i32* %5, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %5, align 4
  br label %10

57:                                               ; preds = %10
  %58 = call i64 @clock() #9
  store i64 %58, i64* %2, align 8
  %59 = load i64, i64* %2, align 8
  %60 = load i64, i64* %1, align 8
  %61 = sub nsw i64 %59, %60
  store i64 %61, i64* %3, align 8
  %62 = load i64, i64* %3, align 8
  %63 = sitofp i64 %62 to double
  %64 = fdiv double %63, 1.000000e+06
  store double %64, double* %4, align 8
  %65 = load double, double* %4, align 8
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.149, i64 0, i64 0), double %65)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1119() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %53, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 39000
  br i1 %12, label %13, label %56

13:                                               ; preds = %10
  store i32 1, i32* %6, align 4
  br label %14

14:                                               ; preds = %48, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %51

17:                                               ; preds = %14
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %44, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %47

21:                                               ; preds = %18
  %22 = load i32, i32* %6, align 4
  %23 = sub nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %24
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [256 x float], [256 x float]* %25, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %31
  %33 = load i32, i32* %7, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x float], [256 x float]* %32, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fadd float %29, %36
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %39
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [256 x float], [256 x float]* %40, i64 0, i64 %42
  store float %37, float* %43, align 4
  br label %44

44:                                               ; preds = %21
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  br label %18

47:                                               ; preds = %18
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %6, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %6, align 4
  br label %14

51:                                               ; preds = %14
  %52 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %10

56:                                               ; preds = %10
  %57 = call i64 @clock() #9
  store i64 %57, i64* %2, align 8
  %58 = load i64, i64* %2, align 8
  %59 = load i64, i64* %1, align 8
  %60 = sub nsw i64 %58, %59
  store i64 %60, i64* %3, align 8
  %61 = load i64, i64* %3, align 8
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  store double %63, double* %4, align 8
  %64 = load double, double* %4, align 8
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.150, i64 0, i64 0), double %64)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s121() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %37, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 150000
  br i1 %12, label %13, label %40

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %32, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 31999
  br i1 %16, label %17, label %35

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %5, align 4
  %20 = load i32, i32* %5, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = fadd float %23, %27
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  store float %28, float* %31, align 4
  br label %32

32:                                               ; preds = %17
  %33 = load i32, i32* %7, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %7, align 4
  br label %14

35:                                               ; preds = %14
  %36 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %6, align 4
  br label %10

40:                                               ; preds = %10
  %41 = call i64 @clock() #9
  store i64 %41, i64* %2, align 8
  %42 = load i64, i64* %2, align 8
  %43 = load i64, i64* %1, align 8
  %44 = sub nsw i64 %42, %43
  store i64 %44, i64* %3, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  store double %47, double* %4, align 8
  %48 = load double, double* %4, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.151, i64 0, i64 0), double %48)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s122(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %13 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0))
  %14 = call i64 @clock() #9
  store i64 %14, i64* %5, align 8
  store i32 0, i32* %11, align 4
  br label %15

15:                                               ; preds = %44, %2
  %16 = load i32, i32* %11, align 4
  %17 = icmp slt i32 %16, 50000
  br i1 %17, label %18, label %47

18:                                               ; preds = %15
  store i32 1, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %19 = load i32, i32* %3, align 4
  %20 = sub nsw i32 %19, 1
  store i32 %20, i32* %12, align 4
  br label %21

21:                                               ; preds = %38, %18
  %22 = load i32, i32* %12, align 4
  %23 = icmp slt i32 %22, 32000
  br i1 %23, label %24, label %42

24:                                               ; preds = %21
  %25 = load i32, i32* %9, align 4
  %26 = load i32, i32* %10, align 4
  %27 = add nsw i32 %26, %25
  store i32 %27, i32* %10, align 4
  %28 = load i32, i32* %10, align 4
  %29 = sub nsw i32 32000, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = load i32, i32* %12, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fadd float %36, %32
  store float %37, float* %35, align 4
  br label %38

38:                                               ; preds = %24
  %39 = load i32, i32* %4, align 4
  %40 = load i32, i32* %12, align 4
  %41 = add nsw i32 %40, %39
  store i32 %41, i32* %12, align 4
  br label %21

42:                                               ; preds = %21
  %43 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %44

44:                                               ; preds = %42
  %45 = load i32, i32* %11, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %11, align 4
  br label %15

47:                                               ; preds = %15
  %48 = call i64 @clock() #9
  store i64 %48, i64* %6, align 8
  %49 = load i64, i64* %6, align 8
  %50 = load i64, i64* %5, align 8
  %51 = sub nsw i64 %49, %50
  store i64 %51, i64* %7, align 8
  %52 = load i64, i64* %7, align 8
  %53 = sitofp i64 %52 to double
  %54 = fdiv double %53, 1.000000e+06
  store double %54, double* %8, align 8
  %55 = load double, double* %8, align 8
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.152, i64 0, i64 0), double %55)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s123() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %68, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 50000
  br i1 %12, label %13, label %71

13:                                               ; preds = %10
  store i32 -1, i32* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %63, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 16000
  br i1 %16, label %17, label %66

17:                                               ; preds = %14
  %18 = load i32, i32* %5, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %5, align 4
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = fmul float %27, %31
  %33 = fadd float %23, %32
  %34 = load i32, i32* %5, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  store float %33, float* %36, align 4
  %37 = load i32, i32* %7, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = fcmp ogt float %40, 0.000000e+00
  br i1 %41, label %42, label %62

42:                                               ; preds = %17
  %43 = load i32, i32* %5, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %5, align 4
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %46
  %48 = load float, float* %47, align 4
  %49 = load i32, i32* %7, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %50
  %52 = load float, float* %51, align 4
  %53 = load i32, i32* %7, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %54
  %56 = load float, float* %55, align 4
  %57 = fmul float %52, %56
  %58 = fadd float %48, %57
  %59 = load i32, i32* %5, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %60
  store float %58, float* %61, align 4
  br label %62

62:                                               ; preds = %42, %17
  br label %63

63:                                               ; preds = %62
  %64 = load i32, i32* %7, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %7, align 4
  br label %14

66:                                               ; preds = %14
  %67 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %68

68:                                               ; preds = %66
  %69 = load i32, i32* %6, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %6, align 4
  br label %10

71:                                               ; preds = %10
  %72 = call i64 @clock() #9
  store i64 %72, i64* %2, align 8
  %73 = load i64, i64* %2, align 8
  %74 = load i64, i64* %1, align 8
  %75 = sub nsw i64 %73, %74
  store i64 %75, i64* %3, align 8
  %76 = load i64, i64* %3, align 8
  %77 = sitofp i64 %76 to double
  %78 = fdiv double %77, 1.000000e+06
  store double %78, double* %4, align 8
  %79 = load double, double* %4, align 8
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.153, i64 0, i64 0), double %79)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s124() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %69, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 50000
  br i1 %12, label %13, label %72

13:                                               ; preds = %10
  store i32 -1, i32* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %64, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %67

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = fcmp ogt float %21, 0.000000e+00
  br i1 %22, label %23, label %43

23:                                               ; preds = %17
  %24 = load i32, i32* %5, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %5, align 4
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fmul float %33, %37
  %39 = fadd float %29, %38
  %40 = load i32, i32* %5, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  store float %39, float* %42, align 4
  br label %63

43:                                               ; preds = %17
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %5, align 4
  %46 = load i32, i32* %7, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = load i32, i32* %7, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %51
  %53 = load float, float* %52, align 4
  %54 = load i32, i32* %7, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %55
  %57 = load float, float* %56, align 4
  %58 = fmul float %53, %57
  %59 = fadd float %49, %58
  %60 = load i32, i32* %5, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %61
  store float %59, float* %62, align 4
  br label %63

63:                                               ; preds = %43, %23
  br label %64

64:                                               ; preds = %63
  %65 = load i32, i32* %7, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %7, align 4
  br label %14

67:                                               ; preds = %14
  %68 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %69

69:                                               ; preds = %67
  %70 = load i32, i32* %6, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %6, align 4
  br label %10

72:                                               ; preds = %10
  %73 = call i64 @clock() #9
  store i64 %73, i64* %2, align 8
  %74 = load i64, i64* %2, align 8
  %75 = load i64, i64* %1, align 8
  %76 = sub nsw i64 %74, %75
  store i64 %76, i64* %3, align 8
  %77 = load i64, i64* %3, align 8
  %78 = sitofp i64 %77 to double
  %79 = fdiv double %78, 1.000000e+06
  store double %79, double* %4, align 8
  %80 = load double, double* %4, align 8
  %81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.154, i64 0, i64 0), double %80)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s125() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %60, %0
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 19500
  br i1 %13, label %14, label %63

14:                                               ; preds = %11
  store i32 -1, i32* %5, align 4
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %55, %14
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 256
  br i1 %17, label %18, label %58

18:                                               ; preds = %15
  store i32 0, i32* %8, align 4
  br label %19

19:                                               ; preds = %51, %18
  %20 = load i32, i32* %8, align 4
  %21 = icmp slt i32 %20, 256
  br i1 %21, label %22, label %54

22:                                               ; preds = %19
  %23 = load i32, i32* %5, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %5, align 4
  %25 = load i32, i32* %7, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %26
  %28 = load i32, i32* %8, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [256 x float], [256 x float]* %27, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = load i32, i32* %7, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %33
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x float], [256 x float]* %34, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %40
  %42 = load i32, i32* %8, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [256 x float], [256 x float]* %41, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = fmul float %38, %45
  %47 = fadd float %31, %46
  %48 = load i32, i32* %5, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %49
  store float %47, float* %50, align 4
  br label %51

51:                                               ; preds = %22
  %52 = load i32, i32* %8, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %8, align 4
  br label %19

54:                                               ; preds = %19
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %7, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %7, align 4
  br label %15

58:                                               ; preds = %15
  %59 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %6, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %6, align 4
  br label %11

63:                                               ; preds = %11
  %64 = call i64 @clock() #9
  store i64 %64, i64* %2, align 8
  %65 = load i64, i64* %2, align 8
  %66 = load i64, i64* %1, align 8
  %67 = sub nsw i64 %65, %66
  store i64 %67, i64* %3, align 8
  %68 = load i64, i64* %3, align 8
  %69 = sitofp i64 %68 to double
  %70 = fdiv double %69, 1.000000e+06
  store double %70, double* %4, align 8
  %71 = load double, double* %4, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i64 0, i64 0), double %71)
  call void @check(i32 0)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s126() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %64, %0
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 1950
  br i1 %13, label %14, label %67

14:                                               ; preds = %11
  store i32 1, i32* %5, align 4
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %59, %14
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 256
  br i1 %17, label %18, label %62

18:                                               ; preds = %15
  store i32 1, i32* %8, align 4
  br label %19

19:                                               ; preds = %53, %18
  %20 = load i32, i32* %8, align 4
  %21 = icmp slt i32 %20, 256
  br i1 %21, label %22, label %56

22:                                               ; preds = %19
  %23 = load i32, i32* %8, align 4
  %24 = sub nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %25
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %26, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %5, align 4
  %32 = sub nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = load i32, i32* %8, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %37
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x float], [256 x float]* %38, i64 0, i64 %40
  %42 = load float, float* %41, align 4
  %43 = fmul float %35, %42
  %44 = fadd float %30, %43
  %45 = load i32, i32* %8, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %46
  %48 = load i32, i32* %7, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [256 x float], [256 x float]* %47, i64 0, i64 %49
  store float %44, float* %50, align 4
  %51 = load i32, i32* %5, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %5, align 4
  br label %53

53:                                               ; preds = %22
  %54 = load i32, i32* %8, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %8, align 4
  br label %19

56:                                               ; preds = %19
  %57 = load i32, i32* %5, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %5, align 4
  br label %59

59:                                               ; preds = %56
  %60 = load i32, i32* %7, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %7, align 4
  br label %15

62:                                               ; preds = %15
  %63 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %64

64:                                               ; preds = %62
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %6, align 4
  br label %11

67:                                               ; preds = %11
  %68 = call i64 @clock() #9
  store i64 %68, i64* %2, align 8
  %69 = load i64, i64* %2, align 8
  %70 = load i64, i64* %1, align 8
  %71 = sub nsw i64 %69, %70
  store i64 %71, i64* %3, align 8
  %72 = load i64, i64* %3, align 8
  %73 = sitofp i64 %72 to double
  %74 = fdiv double %73, 1.000000e+06
  store double %74, double* %4, align 8
  %75 = load double, double* %4, align 8
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i64 0, i64 0), double %75)
  call void @check(i32 22)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s127() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %61, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 100000
  br i1 %12, label %13, label %64

13:                                               ; preds = %10
  store i32 -1, i32* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %56, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 16000
  br i1 %16, label %17, label %59

17:                                               ; preds = %14
  %18 = load i32, i32* %5, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %5, align 4
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = fmul float %27, %31
  %33 = fadd float %23, %32
  %34 = load i32, i32* %5, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  store float %33, float* %36, align 4
  %37 = load i32, i32* %5, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %5, align 4
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  %42 = load float, float* %41, align 4
  %43 = load i32, i32* %7, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = load i32, i32* %7, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %48
  %50 = load float, float* %49, align 4
  %51 = fmul float %46, %50
  %52 = fadd float %42, %51
  %53 = load i32, i32* %5, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  store float %52, float* %55, align 4
  br label %56

56:                                               ; preds = %17
  %57 = load i32, i32* %7, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %7, align 4
  br label %14

59:                                               ; preds = %14
  %60 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %61

61:                                               ; preds = %59
  %62 = load i32, i32* %6, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %6, align 4
  br label %10

64:                                               ; preds = %10
  %65 = call i64 @clock() #9
  store i64 %65, i64* %2, align 8
  %66 = load i64, i64* %2, align 8
  %67 = load i64, i64* %1, align 8
  %68 = sub nsw i64 %66, %67
  store i64 %68, i64* %3, align 8
  %69 = load i64, i64* %3, align 8
  %70 = sitofp i64 %69 to double
  %71 = fdiv double %70, 1.000000e+06
  store double %71, double* %4, align 8
  %72 = load double, double* %4, align 8
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i64 0, i64 0), double %72)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s128() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %52, %0
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 100000
  br i1 %13, label %14, label %55

14:                                               ; preds = %11
  store i32 -1, i32* %5, align 4
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %47, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 16000
  br i1 %17, label %18, label %50

18:                                               ; preds = %15
  %19 = load i32, i32* %5, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %6, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fsub float %24, %28
  %30 = load i32, i32* %8, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  store float %29, float* %32, align 4
  %33 = load i32, i32* %6, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %5, align 4
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %40
  %42 = load float, float* %41, align 4
  %43 = fadd float %38, %42
  %44 = load i32, i32* %6, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %45
  store float %43, float* %46, align 4
  br label %47

47:                                               ; preds = %18
  %48 = load i32, i32* %8, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %8, align 4
  br label %15

50:                                               ; preds = %15
  %51 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00)
  br label %52

52:                                               ; preds = %50
  %53 = load i32, i32* %7, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %7, align 4
  br label %11

55:                                               ; preds = %11
  %56 = call i64 @clock() #9
  store i64 %56, i64* %2, align 8
  %57 = load i64, i64* %2, align 8
  %58 = load i64, i64* %1, align 8
  %59 = sub nsw i64 %57, %58
  store i64 %59, i64* %3, align 8
  %60 = load i64, i64* %3, align 8
  %61 = sitofp i64 %60 to double
  %62 = fdiv double %61, 1.000000e+06
  store double %62, double* %4, align 8
  %63 = load double, double* %4, align 8
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.158, i64 0, i64 0), double %63)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s131() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 1, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %37, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 250000
  br i1 %12, label %13, label %40

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %32, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 31999
  br i1 %16, label %17, label %35

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = load i32, i32* %5, align 4
  %20 = add nsw i32 %18, %19
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = fadd float %23, %27
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  store float %28, float* %31, align 4
  br label %32

32:                                               ; preds = %17
  %33 = load i32, i32* %7, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %7, align 4
  br label %14

35:                                               ; preds = %14
  %36 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %6, align 4
  br label %10

40:                                               ; preds = %10
  %41 = call i64 @clock() #9
  store i64 %41, i64* %2, align 8
  %42 = load i64, i64* %2, align 8
  %43 = load i64, i64* %1, align 8
  %44 = sub nsw i64 %42, %43
  store i64 %44, i64* %3, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  store double %47, double* %4, align 8
  %48 = load double, double* %4, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i64 0, i64 0), double %48)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s132() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0))
  %11 = call i64 @clock() #9
  store i64 %11, i64* %1, align 8
  store i32 0, i32* %5, align 4
  %12 = load i32, i32* %5, align 4
  store i32 %12, i32* %6, align 4
  %13 = load i32, i32* %5, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %49, %0
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 20000000
  br i1 %17, label %18, label %52

18:                                               ; preds = %15
  store i32 1, i32* %9, align 4
  br label %19

19:                                               ; preds = %44, %18
  %20 = load i32, i32* %9, align 4
  %21 = icmp slt i32 %20, 256
  br i1 %21, label %22, label %47

22:                                               ; preds = %19
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %24
  %26 = load i32, i32* %9, align 4
  %27 = sub nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %25, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %9, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 1), align 4
  %36 = fmul float %34, %35
  %37 = fadd float %30, %36
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %39
  %41 = load i32, i32* %9, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [256 x float], [256 x float]* %40, i64 0, i64 %42
  store float %37, float* %43, align 4
  br label %44

44:                                               ; preds = %22
  %45 = load i32, i32* %9, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %9, align 4
  br label %19

47:                                               ; preds = %19
  %48 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %8, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %8, align 4
  br label %15

52:                                               ; preds = %15
  %53 = call i64 @clock() #9
  store i64 %53, i64* %2, align 8
  %54 = load i64, i64* %2, align 8
  %55 = load i64, i64* %1, align 8
  %56 = sub nsw i64 %54, %55
  store i64 %56, i64* %3, align 8
  %57 = load i64, i64* %3, align 8
  %58 = sitofp i64 %57 to double
  %59 = fdiv double %58, 1.000000e+06
  store double %59, double* %4, align 8
  %60 = load double, double* %4, align 8
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.160, i64 0, i64 0), double %60)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s141() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %60, %0
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 39000
  br i1 %13, label %14, label %63

14:                                               ; preds = %11
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %55, %14
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 256
  br i1 %17, label %18, label %58

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = add nsw i32 %19, 1
  %21 = load i32, i32* %7, align 4
  %22 = add nsw i32 %21, 1
  %23 = sub nsw i32 %22, 1
  %24 = mul nsw i32 %20, %23
  %25 = sdiv i32 %24, 2
  %26 = load i32, i32* %7, align 4
  %27 = add nsw i32 %26, 1
  %28 = add nsw i32 %25, %27
  %29 = sub nsw i32 %28, 1
  store i32 %29, i32* %5, align 4
  %30 = load i32, i32* %7, align 4
  store i32 %30, i32* %8, align 4
  br label %31

31:                                               ; preds = %51, %18
  %32 = load i32, i32* %8, align 4
  %33 = icmp slt i32 %32, 256
  br i1 %33, label %34, label %54

34:                                               ; preds = %31
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %36
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x float], [256 x float]* %37, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = load i32, i32* %5, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = fadd float %45, %41
  store float %46, float* %44, align 4
  %47 = load i32, i32* %8, align 4
  %48 = add nsw i32 %47, 1
  %49 = load i32, i32* %5, align 4
  %50 = add nsw i32 %49, %48
  store i32 %50, i32* %5, align 4
  br label %51

51:                                               ; preds = %34
  %52 = load i32, i32* %8, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %8, align 4
  br label %31

54:                                               ; preds = %31
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %7, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %7, align 4
  br label %15

58:                                               ; preds = %15
  %59 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %6, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %6, align 4
  br label %11

63:                                               ; preds = %11
  %64 = call i64 @clock() #9
  store i64 %64, i64* %2, align 8
  %65 = load i64, i64* %2, align 8
  %66 = load i64, i64* %1, align 8
  %67 = sub nsw i64 %65, %66
  store i64 %67, i64* %3, align 8
  %68 = load i64, i64* %3, align 8
  %69 = sitofp i64 %68 to double
  %70 = fdiv double %69, 1.000000e+06
  store double %70, double* %4, align 8
  %71 = load double, double* %4, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.161, i64 0, i64 0), double %71)
  call void @check(i32 0)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s151s(float* %0, float* %1, i32 %2) #0 {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %8

8:                                                ; preds = %29, %3
  %9 = load i32, i32* %7, align 4
  %10 = icmp slt i32 %9, 31999
  br i1 %10, label %11, label %32

11:                                               ; preds = %8
  %12 = load float*, float** %4, align 8
  %13 = load i32, i32* %7, align 4
  %14 = load i32, i32* %6, align 4
  %15 = add nsw i32 %13, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds float, float* %12, i64 %16
  %18 = load float, float* %17, align 4
  %19 = load float*, float** %5, align 8
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds float, float* %19, i64 %21
  %23 = load float, float* %22, align 4
  %24 = fadd float %18, %23
  %25 = load float*, float** %4, align 8
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, float* %25, i64 %27
  store float %24, float* %28, align 4
  br label %29

29:                                               ; preds = %11
  %30 = load i32, i32* %7, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %7, align 4
  br label %8

32:                                               ; preds = %8
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s151() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0))
  %7 = call i64 @clock() #9
  store i64 %7, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %8

8:                                                ; preds = %14, %0
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 250000
  br i1 %10, label %11, label %17

11:                                               ; preds = %8
  %12 = call i32 @s151s(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), i32 1)
  %13 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %14

14:                                               ; preds = %11
  %15 = load i32, i32* %5, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %5, align 4
  br label %8

17:                                               ; preds = %8
  %18 = call i64 @clock() #9
  store i64 %18, i64* %2, align 8
  %19 = load i64, i64* %2, align 8
  %20 = load i64, i64* %1, align 8
  %21 = sub nsw i64 %19, %20
  store i64 %21, i64* %3, align 8
  %22 = load i64, i64* %3, align 8
  %23 = sitofp i64 %22 to double
  %24 = fdiv double %23, 1.000000e+06
  store double %24, double* %4, align 8
  %25 = load double, double* %4, align 8
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.162, i64 0, i64 0), double %25)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s152s(float* %0, float* %1, float* %2, i32 %3) #0 {
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  %7 = alloca float*, align 8
  %8 = alloca i32, align 4
  store float* %0, float** %5, align 8
  store float* %1, float** %6, align 8
  store float* %2, float** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load float*, float** %6, align 8
  %10 = load i32, i32* %8, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds float, float* %9, i64 %11
  %13 = load float, float* %12, align 4
  %14 = load float*, float** %7, align 8
  %15 = load i32, i32* %8, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds float, float* %14, i64 %16
  %18 = load float, float* %17, align 4
  %19 = fmul float %13, %18
  %20 = load float*, float** %5, align 8
  %21 = load i32, i32* %8, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds float, float* %20, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fadd float %24, %19
  store float %25, float* %23, align 4
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s152() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %36, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %39

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %31, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %34

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  store float %25, float* %28, align 4
  %29 = load i32, i32* %6, align 4
  %30 = call i32 @s152s(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), i32 %29)
  br label %31

31:                                               ; preds = %16
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %6, align 4
  br label %13

34:                                               ; preds = %13
  %35 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %36

36:                                               ; preds = %34
  %37 = load i32, i32* %5, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %5, align 4
  br label %9

39:                                               ; preds = %9
  %40 = call i64 @clock() #9
  store i64 %40, i64* %2, align 8
  %41 = load i64, i64* %2, align 8
  %42 = load i64, i64* %1, align 8
  %43 = sub nsw i64 %41, %42
  store i64 %43, i64* %3, align 8
  %44 = load i64, i64* %3, align 8
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  store double %46, double* %4, align 8
  %47 = load double, double* %4, align 8
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.163, i64 0, i64 0), double %47)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s161() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %66, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 25000
  br i1 %11, label %12, label %69

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %61, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %64

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  br label %41

23:                                               ; preds = %16
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fmul float %31, %35
  %37 = fadd float %27, %36
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  store float %37, float* %40, align 4
  br label %60

41:                                               ; preds = %22
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = load i32, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %51
  %53 = load float, float* %52, align 4
  %54 = fmul float %49, %53
  %55 = fadd float %45, %54
  %56 = load i32, i32* %6, align 4
  %57 = add nsw i32 %56, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %58
  store float %55, float* %59, align 4
  br label %60

60:                                               ; preds = %41, %23
  br label %61

61:                                               ; preds = %60
  %62 = load i32, i32* %6, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %6, align 4
  br label %13

64:                                               ; preds = %13
  %65 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %66

66:                                               ; preds = %64
  %67 = load i32, i32* %5, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %5, align 4
  br label %9

69:                                               ; preds = %9
  %70 = call i64 @clock() #9
  store i64 %70, i64* %2, align 8
  %71 = load i64, i64* %2, align 8
  %72 = load i64, i64* %1, align 8
  %73 = sub nsw i64 %71, %72
  store i64 %73, i64* %3, align 8
  %74 = load i64, i64* %3, align 8
  %75 = sitofp i64 %74 to double
  %76 = fdiv double %75, 1.000000e+06
  store double %76, double* %4, align 8
  %77 = load double, double* %4, align 8
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.164, i64 0, i64 0), double %77)
  call void @check(i32 13)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1161() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %65, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %68

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %60, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %63

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  br label %41

23:                                               ; preds = %16
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fmul float %31, %35
  %37 = fadd float %27, %36
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  store float %37, float* %40, align 4
  br label %59

41:                                               ; preds = %22
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = load i32, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %51
  %53 = load float, float* %52, align 4
  %54 = fmul float %49, %53
  %55 = fadd float %45, %54
  %56 = load i32, i32* %6, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %57
  store float %55, float* %58, align 4
  br label %59

59:                                               ; preds = %41, %23
  br label %60

60:                                               ; preds = %59
  %61 = load i32, i32* %6, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %6, align 4
  br label %13

63:                                               ; preds = %13
  %64 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %65

65:                                               ; preds = %63
  %66 = load i32, i32* %5, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %5, align 4
  br label %9

68:                                               ; preds = %9
  %69 = call i64 @clock() #9
  store i64 %69, i64* %2, align 8
  %70 = load i64, i64* %2, align 8
  %71 = load i64, i64* %1, align 8
  %72 = sub nsw i64 %70, %71
  store i64 %72, i64* %3, align 8
  %73 = load i64, i64* %3, align 8
  %74 = sitofp i64 %73 to double
  %75 = fdiv double %74, 1.000000e+06
  store double %75, double* %4, align 8
  %76 = load double, double* %4, align 8
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.165, i64 0, i64 0), double %76)
  call void @check(i32 13)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s162(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %47, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %50

14:                                               ; preds = %11
  %15 = load i32, i32* %2, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %45

17:                                               ; preds = %14
  store i32 0, i32* %8, align 4
  br label %18

18:                                               ; preds = %41, %17
  %19 = load i32, i32* %8, align 4
  %20 = icmp slt i32 %19, 31999
  br i1 %20, label %21, label %44

21:                                               ; preds = %18
  %22 = load i32, i32* %8, align 4
  %23 = load i32, i32* %2, align 4
  %24 = add nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = load i32, i32* %8, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = load i32, i32* %8, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fmul float %31, %35
  %37 = fadd float %27, %36
  %38 = load i32, i32* %8, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  store float %37, float* %40, align 4
  br label %41

41:                                               ; preds = %21
  %42 = load i32, i32* %8, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %8, align 4
  br label %18

44:                                               ; preds = %18
  br label %45

45:                                               ; preds = %44, %14
  %46 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %47

47:                                               ; preds = %45
  %48 = load i32, i32* %7, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %11

50:                                               ; preds = %11
  %51 = call i64 @clock() #9
  store i64 %51, i64* %4, align 8
  %52 = load i64, i64* %4, align 8
  %53 = load i64, i64* %3, align 8
  %54 = sub nsw i64 %52, %53
  store i64 %54, i64* %5, align 8
  %55 = load i64, i64* %5, align 8
  %56 = sitofp i64 %55 to double
  %57 = fdiv double %56, 1.000000e+06
  store double %57, double* %6, align 8
  %58 = load double, double* %6, align 8
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), double %58)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s171(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %35, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %38

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %30, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %33

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load i32, i32* %8, align 4
  %24 = load i32, i32* %2, align 4
  %25 = mul nsw i32 %23, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fadd float %28, %22
  store float %29, float* %27, align 4
  br label %30

30:                                               ; preds = %18
  %31 = load i32, i32* %8, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %8, align 4
  br label %15

33:                                               ; preds = %15
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %35

35:                                               ; preds = %33
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %11

38:                                               ; preds = %11
  %39 = call i64 @clock() #9
  store i64 %39, i64* %4, align 8
  %40 = load i64, i64* %4, align 8
  %41 = load i64, i64* %3, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %5, align 8
  %43 = load i64, i64* %5, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %6, align 8
  %46 = load double, double* %6, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.167, i64 0, i64 0), double %46)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s172(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %11 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0))
  %12 = call i64 @clock() #9
  store i64 %12, i64* %5, align 8
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %38, %2
  %14 = load i32, i32* %9, align 4
  %15 = icmp slt i32 %14, 50000
  br i1 %15, label %16, label %41

16:                                               ; preds = %13
  %17 = load i32, i32* %3, align 4
  %18 = sub nsw i32 %17, 1
  store i32 %18, i32* %10, align 4
  br label %19

19:                                               ; preds = %32, %16
  %20 = load i32, i32* %10, align 4
  %21 = icmp slt i32 %20, 32000
  br i1 %21, label %22, label %36

22:                                               ; preds = %19
  %23 = load i32, i32* %10, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %10, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fadd float %30, %26
  store float %31, float* %29, align 4
  br label %32

32:                                               ; preds = %22
  %33 = load i32, i32* %4, align 4
  %34 = load i32, i32* %10, align 4
  %35 = add nsw i32 %34, %33
  store i32 %35, i32* %10, align 4
  br label %19

36:                                               ; preds = %19
  %37 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %9, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %9, align 4
  br label %13

41:                                               ; preds = %13
  %42 = call i64 @clock() #9
  store i64 %42, i64* %6, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %5, align 8
  %45 = sub nsw i64 %43, %44
  store i64 %45, i64* %7, align 8
  %46 = load i64, i64* %7, align 8
  %47 = sitofp i64 %46 to double
  %48 = fdiv double %47, 1.000000e+06
  store double %48, double* %8, align 8
  %49 = load double, double* %8, align 8
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i64 0, i64 0), double %49)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s173() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 16000, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %37, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 500000
  br i1 %12, label %13, label %40

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %32, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 16000
  br i1 %16, label %17, label %35

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = load i32, i32* %7, align 4
  %28 = load i32, i32* %5, align 4
  %29 = add nsw i32 %27, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  store float %26, float* %31, align 4
  br label %32

32:                                               ; preds = %17
  %33 = load i32, i32* %7, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %7, align 4
  br label %14

35:                                               ; preds = %14
  %36 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %6, align 4
  br label %10

40:                                               ; preds = %10
  %41 = call i64 @clock() #9
  store i64 %41, i64* %2, align 8
  %42 = load i64, i64* %2, align 8
  %43 = load i64, i64* %1, align 8
  %44 = sub nsw i64 %42, %43
  store i64 %44, i64* %3, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  store double %47, double* %4, align 8
  %48 = load double, double* %4, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.169, i64 0, i64 0), double %48)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s174(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %39, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 500000
  br i1 %13, label %14, label %42

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %34, %14
  %16 = load i32, i32* %8, align 4
  %17 = load i32, i32* %2, align 4
  %18 = icmp slt i32 %16, %17
  br i1 %18, label %19, label %37

19:                                               ; preds = %15
  %20 = load i32, i32* %8, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load i32, i32* %8, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = fadd float %23, %27
  %29 = load i32, i32* %8, align 4
  %30 = load i32, i32* %2, align 4
  %31 = add nsw i32 %29, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %28, float* %33, align 4
  br label %34

34:                                               ; preds = %19
  %35 = load i32, i32* %8, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %8, align 4
  br label %15

37:                                               ; preds = %15
  %38 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %39

39:                                               ; preds = %37
  %40 = load i32, i32* %7, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %7, align 4
  br label %11

42:                                               ; preds = %11
  %43 = call i64 @clock() #9
  store i64 %43, i64* %4, align 8
  %44 = load i64, i64* %4, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sub nsw i64 %44, %45
  store i64 %46, i64* %5, align 8
  %47 = load i64, i64* %5, align 8
  %48 = sitofp i64 %47 to double
  %49 = fdiv double %48, 1.000000e+06
  store double %49, double* %6, align 8
  %50 = load double, double* %6, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.170, i64 0, i64 0), double %50)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s175(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %39, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %42

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %33, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 31999
  br i1 %17, label %18, label %37

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = load i32, i32* %2, align 4
  %21 = add nsw i32 %19, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fadd float %24, %28
  %30 = load i32, i32* %8, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  store float %29, float* %32, align 4
  br label %33

33:                                               ; preds = %18
  %34 = load i32, i32* %2, align 4
  %35 = load i32, i32* %8, align 4
  %36 = add nsw i32 %35, %34
  store i32 %36, i32* %8, align 4
  br label %15

37:                                               ; preds = %15
  %38 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %39

39:                                               ; preds = %37
  %40 = load i32, i32* %7, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %7, align 4
  br label %11

42:                                               ; preds = %11
  %43 = call i64 @clock() #9
  store i64 %43, i64* %4, align 8
  %44 = load i64, i64* %4, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sub nsw i64 %44, %45
  store i64 %46, i64* %5, align 8
  %47 = load i64, i64* %5, align 8
  %48 = sitofp i64 %47 to double
  %49 = fdiv double %48, 1.000000e+06
  store double %49, double* %6, align 8
  %50 = load double, double* %6, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.171, i64 0, i64 0), double %50)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s176() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 16000, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %52, %0
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 4
  br i1 %13, label %14, label %55

14:                                               ; preds = %11
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %47, %14
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 16000
  br i1 %17, label %18, label %50

18:                                               ; preds = %15
  store i32 0, i32* %8, align 4
  br label %19

19:                                               ; preds = %43, %18
  %20 = load i32, i32* %8, align 4
  %21 = load i32, i32* %5, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %46

23:                                               ; preds = %19
  %24 = load i32, i32* %8, align 4
  %25 = load i32, i32* %5, align 4
  %26 = add nsw i32 %24, %25
  %27 = load i32, i32* %7, align 4
  %28 = sub nsw i32 %26, %27
  %29 = sub nsw i32 %28, 1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = load i32, i32* %7, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fmul float %32, %36
  %38 = load i32, i32* %8, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = fadd float %41, %37
  store float %42, float* %40, align 4
  br label %43

43:                                               ; preds = %23
  %44 = load i32, i32* %8, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %8, align 4
  br label %19

46:                                               ; preds = %19
  br label %47

47:                                               ; preds = %46
  %48 = load i32, i32* %7, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %15

50:                                               ; preds = %15
  %51 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %52

52:                                               ; preds = %50
  %53 = load i32, i32* %6, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %6, align 4
  br label %11

55:                                               ; preds = %11
  %56 = call i64 @clock() #9
  store i64 %56, i64* %2, align 8
  %57 = load i64, i64* %2, align 8
  %58 = load i64, i64* %1, align 8
  %59 = sub nsw i64 %57, %58
  store i64 %59, i64* %3, align 8
  %60 = load i64, i64* %3, align 8
  %61 = sitofp i64 %60 to double
  %62 = fdiv double %61, 1.000000e+06
  store double %62, double* %4, align 8
  %63 = load double, double* %4, align 8
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i64 0, i64 0), double %63)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s211() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %58, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %61

12:                                               ; preds = %9
  store i32 1, i32* %6, align 4
  br label %13

13:                                               ; preds = %53, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %56

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sub nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fmul float %25, %29
  %31 = fadd float %21, %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  store float %31, float* %34, align 4
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, 1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = load i32, i32* %6, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %45
  %47 = load float, float* %46, align 4
  %48 = fmul float %43, %47
  %49 = fsub float %39, %48
  %50 = load i32, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %51
  store float %49, float* %52, align 4
  br label %53

53:                                               ; preds = %16
  %54 = load i32, i32* %6, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %6, align 4
  br label %13

56:                                               ; preds = %13
  %57 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %58

58:                                               ; preds = %56
  %59 = load i32, i32* %5, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %5, align 4
  br label %9

61:                                               ; preds = %9
  %62 = call i64 @clock() #9
  store i64 %62, i64* %2, align 8
  %63 = load i64, i64* %2, align 8
  %64 = load i64, i64* %1, align 8
  %65 = sub nsw i64 %63, %64
  store i64 %65, i64* %3, align 8
  %66 = load i64, i64* %3, align 8
  %67 = sitofp i64 %66 to double
  %68 = fdiv double %67, 1.000000e+06
  store double %68, double* %4, align 8
  %69 = load double, double* %4, align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.173, i64 0, i64 0), double %69)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s212() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %46, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %49

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %41, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %44

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %24, %20
  store float %25, float* %23, align 4
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = fmul float %30, %34
  %36 = load i32, i32* %6, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fadd float %39, %35
  store float %40, float* %38, align 4
  br label %41

41:                                               ; preds = %16
  %42 = load i32, i32* %6, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %6, align 4
  br label %13

44:                                               ; preds = %13
  %45 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %46

46:                                               ; preds = %44
  %47 = load i32, i32* %5, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %5, align 4
  br label %9

49:                                               ; preds = %9
  %50 = call i64 @clock() #9
  store i64 %50, i64* %2, align 8
  %51 = load i64, i64* %2, align 8
  %52 = load i64, i64* %1, align 8
  %53 = sub nsw i64 %51, %52
  store i64 %53, i64* %3, align 8
  %54 = load i64, i64* %3, align 8
  %55 = sitofp i64 %54 to double
  %56 = fdiv double %55, 1.000000e+06
  store double %56, double* %4, align 8
  %57 = load double, double* %4, align 8
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.174, i64 0, i64 0), double %57)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1213() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %48, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %51

12:                                               ; preds = %9
  store i32 1, i32* %6, align 4
  br label %13

13:                                               ; preds = %43, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %46

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sub nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %26, float* %29, align 4
  %30 = load i32, i32* %6, align 4
  %31 = add nsw i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = fmul float %34, %38
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  store float %39, float* %42, align 4
  br label %43

43:                                               ; preds = %16
  %44 = load i32, i32* %6, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %6, align 4
  br label %13

46:                                               ; preds = %13
  %47 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %48

48:                                               ; preds = %46
  %49 = load i32, i32* %5, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %5, align 4
  br label %9

51:                                               ; preds = %9
  %52 = call i64 @clock() #9
  store i64 %52, i64* %2, align 8
  %53 = load i64, i64* %2, align 8
  %54 = load i64, i64* %1, align 8
  %55 = sub nsw i64 %53, %54
  store i64 %55, i64* %3, align 8
  %56 = load i64, i64* %3, align 8
  %57 = sitofp i64 %56 to double
  %58 = fdiv double %57, 1.000000e+06
  store double %58, double* %4, align 8
  %59 = load double, double* %4, align 8
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.175, i64 0, i64 0), double %59)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s221() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %54, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 25000
  br i1 %11, label %12, label %57

12:                                               ; preds = %9
  store i32 1, i32* %6, align 4
  br label %13

13:                                               ; preds = %49, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %52

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, %25
  store float %30, float* %28, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sub nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = load i32, i32* %6, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fadd float %35, %39
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %42
  %44 = load float, float* %43, align 4
  %45 = fadd float %40, %44
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  store float %45, float* %48, align 4
  br label %49

49:                                               ; preds = %16
  %50 = load i32, i32* %6, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %6, align 4
  br label %13

52:                                               ; preds = %13
  %53 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %54

54:                                               ; preds = %52
  %55 = load i32, i32* %5, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %5, align 4
  br label %9

57:                                               ; preds = %9
  %58 = call i64 @clock() #9
  store i64 %58, i64* %2, align 8
  %59 = load i64, i64* %2, align 8
  %60 = load i64, i64* %1, align 8
  %61 = sub nsw i64 %59, %60
  store i64 %61, i64* %3, align 8
  %62 = load i64, i64* %3, align 8
  %63 = sitofp i64 %62 to double
  %64 = fdiv double %63, 1.000000e+06
  store double %64, double* %4, align 8
  %65 = load double, double* %4, align 8
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.176, i64 0, i64 0), double %65)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s221p() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %63, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 25000
  br i1 %12, label %13, label %66

13:                                               ; preds = %10
  store i32 1, i32* %6, align 4
  br label %14

14:                                               ; preds = %32, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %35

17:                                               ; preds = %14
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fmul float %21, %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fadd float %30, %26
  store float %31, float* %29, align 4
  br label %32

32:                                               ; preds = %17
  %33 = load i32, i32* %6, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %6, align 4
  br label %14

35:                                               ; preds = %14
  store i32 1, i32* %7, align 4
  br label %36

36:                                               ; preds = %58, %35
  %37 = load i32, i32* %7, align 4
  %38 = icmp slt i32 %37, 32000
  br i1 %38, label %39, label %61

39:                                               ; preds = %36
  %40 = load i32, i32* %7, align 4
  %41 = sub nsw i32 %40, 1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %42
  %44 = load float, float* %43, align 4
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  %48 = load float, float* %47, align 4
  %49 = fadd float %44, %48
  %50 = load i32, i32* %7, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %51
  %53 = load float, float* %52, align 4
  %54 = fadd float %49, %53
  %55 = load i32, i32* %7, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  store float %54, float* %57, align 4
  br label %58

58:                                               ; preds = %39
  %59 = load i32, i32* %7, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %7, align 4
  br label %36

61:                                               ; preds = %36
  %62 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %63

63:                                               ; preds = %61
  %64 = load i32, i32* %5, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %5, align 4
  br label %10

66:                                               ; preds = %10
  %67 = call i64 @clock() #9
  store i64 %67, i64* %2, align 8
  %68 = load i64, i64* %2, align 8
  %69 = load i64, i64* %1, align 8
  %70 = sub nsw i64 %68, %69
  store i64 %70, i64* %3, align 8
  %71 = load i64, i64* %3, align 8
  %72 = sitofp i64 %71 to double
  %73 = fdiv double %72, 1.000000e+06
  store double %73, double* %4, align 8
  %74 = load double, double* %4, align 8
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.177, i64 0, i64 0), double %74)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1221() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %35, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %38

12:                                               ; preds = %9
  store i32 4, i32* %6, align 4
  br label %13

13:                                               ; preds = %30, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %33

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sub nsw i32 %17, 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  store float %26, float* %29, align 4
  br label %30

30:                                               ; preds = %16
  %31 = load i32, i32* %6, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %6, align 4
  br label %13

33:                                               ; preds = %13
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %35

35:                                               ; preds = %33
  %36 = load i32, i32* %5, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %5, align 4
  br label %9

38:                                               ; preds = %9
  %39 = call i64 @clock() #9
  store i64 %39, i64* %2, align 8
  %40 = load i64, i64* %2, align 8
  %41 = load i64, i64* %1, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %3, align 8
  %43 = load i64, i64* %3, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %4, align 8
  %46 = load double, double* %4, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.178, i64 0, i64 0), double %46)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s222() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %64, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 25000
  br i1 %11, label %12, label %67

12:                                               ; preds = %9
  store i32 1, i32* %6, align 4
  br label %13

13:                                               ; preds = %59, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %62

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, %25
  store float %30, float* %28, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sub nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = load i32, i32* %6, align 4
  %37 = sub nsw i32 %36, 1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = fmul float %35, %40
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %43
  store float %41, float* %44, align 4
  %45 = load i32, i32* %6, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %46
  %48 = load float, float* %47, align 4
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %50
  %52 = load float, float* %51, align 4
  %53 = fmul float %48, %52
  %54 = load i32, i32* %6, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 4
  %58 = fsub float %57, %53
  store float %58, float* %56, align 4
  br label %59

59:                                               ; preds = %16
  %60 = load i32, i32* %6, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %6, align 4
  br label %13

62:                                               ; preds = %13
  %63 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %64

64:                                               ; preds = %62
  %65 = load i32, i32* %5, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %5, align 4
  br label %9

67:                                               ; preds = %9
  %68 = call i64 @clock() #9
  store i64 %68, i64* %2, align 8
  %69 = load i64, i64* %2, align 8
  %70 = load i64, i64* %1, align 8
  %71 = sub nsw i64 %69, %70
  store i64 %71, i64* %3, align 8
  %72 = load i64, i64* %3, align 8
  %73 = sitofp i64 %72 to double
  %74 = fdiv double %73, 1.000000e+06
  store double %74, double* %4, align 8
  %75 = load double, double* %4, align 8
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.179, i64 0, i64 0), double %75)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s231() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %53, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 19500
  br i1 %12, label %13, label %56

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %48, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %51

17:                                               ; preds = %14
  store i32 1, i32* %7, align 4
  br label %18

18:                                               ; preds = %44, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %47

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4
  %23 = sub nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [256 x float], [256 x float]* %25, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %31
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x float], [256 x float]* %32, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fadd float %29, %36
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %39
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [256 x float], [256 x float]* %40, i64 0, i64 %42
  store float %37, float* %43, align 4
  br label %44

44:                                               ; preds = %21
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  br label %18

47:                                               ; preds = %18
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %6, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %6, align 4
  br label %14

51:                                               ; preds = %14
  %52 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %10

56:                                               ; preds = %10
  %57 = call i64 @clock() #9
  store i64 %57, i64* %2, align 8
  %58 = load i64, i64* %2, align 8
  %59 = load i64, i64* %1, align 8
  %60 = sub nsw i64 %58, %59
  store i64 %60, i64* %3, align 8
  %61 = load i64, i64* %3, align 8
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  store double %63, double* %4, align 8
  %64 = load double, double* %4, align 8
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.180, i64 0, i64 0), double %64)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s231p() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %128, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 19500
  br i1 %12, label %13, label %131

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %123, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %126

17:                                               ; preds = %14
  store i32 1, i32* %7, align 4
  br label %18

18:                                               ; preds = %119, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %122

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4
  %23 = sub nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [256 x float], [256 x float]* %25, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %31
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x float], [256 x float]* %32, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fadd float %29, %36
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %39
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [256 x float], [256 x float]* %40, i64 0, i64 %42
  store float %37, float* %43, align 4
  %44 = load i32, i32* %7, align 4
  %45 = sub nsw i32 %44, 1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %46
  %48 = load i32, i32* %6, align 4
  %49 = add nsw i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [256 x float], [256 x float]* %47, i64 0, i64 %50
  %52 = load float, float* %51, align 4
  %53 = load i32, i32* %7, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %54
  %56 = load i32, i32* %6, align 4
  %57 = add nsw i32 %56, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [256 x float], [256 x float]* %55, i64 0, i64 %58
  %60 = load float, float* %59, align 4
  %61 = fadd float %52, %60
  %62 = load i32, i32* %7, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %63
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [256 x float], [256 x float]* %64, i64 0, i64 %67
  store float %61, float* %68, align 4
  %69 = load i32, i32* %7, align 4
  %70 = sub nsw i32 %69, 1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %71
  %73 = load i32, i32* %6, align 4
  %74 = add nsw i32 %73, 2
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [256 x float], [256 x float]* %72, i64 0, i64 %75
  %77 = load float, float* %76, align 4
  %78 = load i32, i32* %7, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %79
  %81 = load i32, i32* %6, align 4
  %82 = add nsw i32 %81, 2
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [256 x float], [256 x float]* %80, i64 0, i64 %83
  %85 = load float, float* %84, align 4
  %86 = fadd float %77, %85
  %87 = load i32, i32* %7, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %88
  %90 = load i32, i32* %6, align 4
  %91 = add nsw i32 %90, 2
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [256 x float], [256 x float]* %89, i64 0, i64 %92
  store float %86, float* %93, align 4
  %94 = load i32, i32* %7, align 4
  %95 = sub nsw i32 %94, 1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %96
  %98 = load i32, i32* %6, align 4
  %99 = add nsw i32 %98, 3
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [256 x float], [256 x float]* %97, i64 0, i64 %100
  %102 = load float, float* %101, align 4
  %103 = load i32, i32* %7, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %104
  %106 = load i32, i32* %6, align 4
  %107 = add nsw i32 %106, 3
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [256 x float], [256 x float]* %105, i64 0, i64 %108
  %110 = load float, float* %109, align 4
  %111 = fadd float %102, %110
  %112 = load i32, i32* %7, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %113
  %115 = load i32, i32* %6, align 4
  %116 = add nsw i32 %115, 3
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [256 x float], [256 x float]* %114, i64 0, i64 %117
  store float %111, float* %118, align 4
  br label %119

119:                                              ; preds = %21
  %120 = load i32, i32* %7, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %7, align 4
  br label %18

122:                                              ; preds = %18
  br label %123

123:                                              ; preds = %122
  %124 = load i32, i32* %6, align 4
  %125 = add nsw i32 %124, 4
  store i32 %125, i32* %6, align 4
  br label %14

126:                                              ; preds = %14
  %127 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %128

128:                                              ; preds = %126
  %129 = load i32, i32* %5, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %5, align 4
  br label %10

131:                                              ; preds = %10
  %132 = call i64 @clock() #9
  store i64 %132, i64* %2, align 8
  %133 = load i64, i64* %2, align 8
  %134 = load i64, i64* %1, align 8
  %135 = sub nsw i64 %133, %134
  store i64 %135, i64* %3, align 8
  %136 = load i64, i64* %3, align 8
  %137 = sitofp i64 %136 to double
  %138 = fdiv double %137, 1.000000e+06
  store double %138, double* %4, align 8
  %139 = load double, double* %4, align 8
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.181, i64 0, i64 0), double %139)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s231pp() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %53, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 19500
  br i1 %12, label %13, label %56

13:                                               ; preds = %10
  store i32 1, i32* %6, align 4
  br label %14

14:                                               ; preds = %48, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %51

17:                                               ; preds = %14
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %44, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %47

21:                                               ; preds = %18
  %22 = load i32, i32* %6, align 4
  %23 = sub nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %24
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [256 x float], [256 x float]* %25, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %31
  %33 = load i32, i32* %7, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x float], [256 x float]* %32, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fadd float %29, %36
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %39
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [256 x float], [256 x float]* %40, i64 0, i64 %42
  store float %37, float* %43, align 4
  br label %44

44:                                               ; preds = %21
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  br label %18

47:                                               ; preds = %18
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %6, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %6, align 4
  br label %14

51:                                               ; preds = %14
  %52 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %10

56:                                               ; preds = %10
  %57 = call i64 @clock() #9
  store i64 %57, i64* %2, align 8
  %58 = load i64, i64* %2, align 8
  %59 = load i64, i64* %1, align 8
  %60 = sub nsw i64 %58, %59
  store i64 %60, i64* %3, align 8
  %61 = load i64, i64* %3, align 8
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  store double %63, double* %4, align 8
  %64 = load double, double* %4, align 8
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.182, i64 0, i64 0), double %64)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s231ppp() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca [256 x [256 x float]], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0))
  %12 = call i64 @clock() #9
  store i64 %12, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %13

13:                                               ; preds = %91, %0
  %14 = load i32, i32* %5, align 4
  %15 = icmp slt i32 %14, 19500
  br i1 %15, label %16, label %94

16:                                               ; preds = %13
  %17 = bitcast [256 x [256 x float]]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 0, i64 262144, i1 false)
  store i32 1, i32* %7, align 4
  br label %18

18:                                               ; preds = %52, %16
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %55

21:                                               ; preds = %18
  store i32 0, i32* %8, align 4
  br label %22

22:                                               ; preds = %48, %21
  %23 = load i32, i32* %8, align 4
  %24 = icmp slt i32 %23, 256
  br i1 %24, label %25, label %51

25:                                               ; preds = %22
  %26 = load i32, i32* %7, align 4
  %27 = sub nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %6, i64 0, i64 %28
  %30 = load i32, i32* %8, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x float], [256 x float]* %29, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %35
  %37 = load i32, i32* %8, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [256 x float], [256 x float]* %36, i64 0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = fadd float %33, %40
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %6, i64 0, i64 %43
  %45 = load i32, i32* %8, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [256 x float], [256 x float]* %44, i64 0, i64 %46
  store float %41, float* %47, align 4
  br label %48

48:                                               ; preds = %25
  %49 = load i32, i32* %8, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %8, align 4
  br label %22

51:                                               ; preds = %22
  br label %52

52:                                               ; preds = %51
  %53 = load i32, i32* %7, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %7, align 4
  br label %18

55:                                               ; preds = %18
  store i32 0, i32* %9, align 4
  br label %56

56:                                               ; preds = %86, %55
  %57 = load i32, i32* %9, align 4
  %58 = icmp slt i32 %57, 256
  br i1 %58, label %59, label %89

59:                                               ; preds = %56
  store i32 0, i32* %10, align 4
  br label %60

60:                                               ; preds = %82, %59
  %61 = load i32, i32* %10, align 4
  %62 = icmp slt i32 %61, 256
  br i1 %62, label %63, label %85

63:                                               ; preds = %60
  %64 = load i32, i32* %10, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [256 x float], [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), i64 0, i64 %65
  %67 = load float, float* %66, align 4
  %68 = load i32, i32* %9, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* %6, i64 0, i64 %69
  %71 = load i32, i32* %10, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [256 x float], [256 x float]* %70, i64 0, i64 %72
  %74 = load float, float* %73, align 4
  %75 = fadd float %67, %74
  %76 = load i32, i32* %9, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %77
  %79 = load i32, i32* %10, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [256 x float], [256 x float]* %78, i64 0, i64 %80
  store float %75, float* %81, align 4
  br label %82

82:                                               ; preds = %63
  %83 = load i32, i32* %10, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %10, align 4
  br label %60

85:                                               ; preds = %60
  br label %86

86:                                               ; preds = %85
  %87 = load i32, i32* %9, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %9, align 4
  br label %56

89:                                               ; preds = %56
  %90 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %91

91:                                               ; preds = %89
  %92 = load i32, i32* %5, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %5, align 4
  br label %13

94:                                               ; preds = %13
  %95 = call i64 @clock() #9
  store i64 %95, i64* %2, align 8
  %96 = load i64, i64* %2, align 8
  %97 = load i64, i64* %1, align 8
  %98 = sub nsw i64 %96, %97
  store i64 %98, i64* %3, align 8
  %99 = load i64, i64* %3, align 8
  %100 = sitofp i64 %99 to double
  %101 = fdiv double %100, 1.000000e+06
  store double %101, double* %4, align 8
  %102 = load double, double* %4, align 8
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.183, i64 0, i64 0), double %102)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s232() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %63, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 19500
  br i1 %12, label %13, label %66

13:                                               ; preds = %10
  store i32 1, i32* %6, align 4
  br label %14

14:                                               ; preds = %58, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %61

17:                                               ; preds = %14
  store i32 1, i32* %7, align 4
  br label %18

18:                                               ; preds = %54, %17
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %6, align 4
  %21 = icmp sle i32 %19, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %18
  %23 = load i32, i32* %6, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %24
  %26 = load i32, i32* %7, align 4
  %27 = sub nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %25, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %32
  %34 = load i32, i32* %7, align 4
  %35 = sub nsw i32 %34, 1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x float], [256 x float]* %33, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = fmul float %30, %38
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %41
  %43 = load i32, i32* %7, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [256 x float], [256 x float]* %42, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = fadd float %39, %46
  %48 = load i32, i32* %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %49
  %51 = load i32, i32* %7, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [256 x float], [256 x float]* %50, i64 0, i64 %52
  store float %47, float* %53, align 4
  br label %54

54:                                               ; preds = %22
  %55 = load i32, i32* %7, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %7, align 4
  br label %18

57:                                               ; preds = %18
  br label %58

58:                                               ; preds = %57
  %59 = load i32, i32* %6, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %6, align 4
  br label %14

61:                                               ; preds = %14
  %62 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00)
  br label %63

63:                                               ; preds = %61
  %64 = load i32, i32* %5, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %5, align 4
  br label %10

66:                                               ; preds = %10
  %67 = call i64 @clock() #9
  store i64 %67, i64* %2, align 8
  %68 = load i64, i64* %2, align 8
  %69 = load i64, i64* %1, align 8
  %70 = sub nsw i64 %68, %69
  store i64 %70, i64* %3, align 8
  %71 = load i64, i64* %3, align 8
  %72 = sitofp i64 %71 to double
  %73 = fdiv double %72, 1.000000e+06
  store double %73, double* %4, align 8
  %74 = load double, double* %4, align 8
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.184, i64 0, i64 0), double %74)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1232() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %53, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 19500
  br i1 %12, label %13, label %56

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %48, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %51

17:                                               ; preds = %14
  %18 = load i32, i32* %6, align 4
  store i32 %18, i32* %7, align 4
  br label %19

19:                                               ; preds = %44, %17
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %20, 256
  br i1 %21, label %22, label %47

22:                                               ; preds = %19
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [256 x float], [256 x float]* %25, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %31
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x float], [256 x float]* %32, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fadd float %29, %36
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %39
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [256 x float], [256 x float]* %40, i64 0, i64 %42
  store float %37, float* %43, align 4
  br label %44

44:                                               ; preds = %22
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  br label %19

47:                                               ; preds = %19
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %6, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %6, align 4
  br label %14

51:                                               ; preds = %14
  %52 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00)
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %10

56:                                               ; preds = %10
  %57 = call i64 @clock() #9
  store i64 %57, i64* %2, align 8
  %58 = load i64, i64* %2, align 8
  %59 = load i64, i64* %1, align 8
  %60 = sub nsw i64 %58, %59
  store i64 %60, i64* %3, align 8
  %61 = load i64, i64* %3, align 8
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  store double %63, double* %4, align 8
  %64 = load double, double* %4, align 8
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.185, i64 0, i64 0), double %64)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s233() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %84, %0
  %12 = load i32, i32* %5, align 4
  %13 = icmp slt i32 %12, 19500
  br i1 %13, label %14, label %87

14:                                               ; preds = %11
  store i32 1, i32* %6, align 4
  br label %15

15:                                               ; preds = %79, %14
  %16 = load i32, i32* %6, align 4
  %17 = icmp slt i32 %16, 256
  br i1 %17, label %18, label %82

18:                                               ; preds = %15
  store i32 1, i32* %7, align 4
  br label %19

19:                                               ; preds = %45, %18
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %20, 256
  br i1 %21, label %22, label %48

22:                                               ; preds = %19
  %23 = load i32, i32* %7, align 4
  %24 = sub nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %26, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %32
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [256 x float], [256 x float]* %33, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fadd float %30, %37
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %40
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [256 x float], [256 x float]* %41, i64 0, i64 %43
  store float %38, float* %44, align 4
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %7, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %7, align 4
  br label %19

48:                                               ; preds = %19
  store i32 1, i32* %8, align 4
  br label %49

49:                                               ; preds = %75, %48
  %50 = load i32, i32* %8, align 4
  %51 = icmp slt i32 %50, 256
  br i1 %51, label %52, label %78

52:                                               ; preds = %49
  %53 = load i32, i32* %8, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %54
  %56 = load i32, i32* %6, align 4
  %57 = sub nsw i32 %56, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [256 x float], [256 x float]* %55, i64 0, i64 %58
  %60 = load float, float* %59, align 4
  %61 = load i32, i32* %8, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %62
  %64 = load i32, i32* %6, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [256 x float], [256 x float]* %63, i64 0, i64 %65
  %67 = load float, float* %66, align 4
  %68 = fadd float %60, %67
  %69 = load i32, i32* %8, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %70
  %72 = load i32, i32* %6, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [256 x float], [256 x float]* %71, i64 0, i64 %73
  store float %68, float* %74, align 4
  br label %75

75:                                               ; preds = %52
  %76 = load i32, i32* %8, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %8, align 4
  br label %49

78:                                               ; preds = %49
  br label %79

79:                                               ; preds = %78
  %80 = load i32, i32* %6, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %6, align 4
  br label %15

82:                                               ; preds = %15
  %83 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %84

84:                                               ; preds = %82
  %85 = load i32, i32* %5, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %5, align 4
  br label %11

87:                                               ; preds = %11
  %88 = call i64 @clock() #9
  store i64 %88, i64* %2, align 8
  %89 = load i64, i64* %2, align 8
  %90 = load i64, i64* %1, align 8
  %91 = sub nsw i64 %89, %90
  store i64 %91, i64* %3, align 8
  %92 = load i64, i64* %3, align 8
  %93 = sitofp i64 %92 to double
  %94 = fdiv double %93, 1.000000e+06
  store double %94, double* %4, align 8
  %95 = load double, double* %4, align 8
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.186, i64 0, i64 0), double %95)
  call void @check(i32 1122)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2233() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %84, %0
  %12 = load i32, i32* %5, align 4
  %13 = icmp slt i32 %12, 19500
  br i1 %13, label %14, label %87

14:                                               ; preds = %11
  store i32 1, i32* %6, align 4
  br label %15

15:                                               ; preds = %79, %14
  %16 = load i32, i32* %6, align 4
  %17 = icmp slt i32 %16, 256
  br i1 %17, label %18, label %82

18:                                               ; preds = %15
  store i32 1, i32* %7, align 4
  br label %19

19:                                               ; preds = %45, %18
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %20, 256
  br i1 %21, label %22, label %48

22:                                               ; preds = %19
  %23 = load i32, i32* %7, align 4
  %24 = sub nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %26, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %32
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [256 x float], [256 x float]* %33, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fadd float %30, %37
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %40
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [256 x float], [256 x float]* %41, i64 0, i64 %43
  store float %38, float* %44, align 4
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %7, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %7, align 4
  br label %19

48:                                               ; preds = %19
  store i32 1, i32* %8, align 4
  br label %49

49:                                               ; preds = %75, %48
  %50 = load i32, i32* %8, align 4
  %51 = icmp slt i32 %50, 256
  br i1 %51, label %52, label %78

52:                                               ; preds = %49
  %53 = load i32, i32* %6, align 4
  %54 = sub nsw i32 %53, 1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %55
  %57 = load i32, i32* %8, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [256 x float], [256 x float]* %56, i64 0, i64 %58
  %60 = load float, float* %59, align 4
  %61 = load i32, i32* %6, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %62
  %64 = load i32, i32* %8, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [256 x float], [256 x float]* %63, i64 0, i64 %65
  %67 = load float, float* %66, align 4
  %68 = fadd float %60, %67
  %69 = load i32, i32* %6, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %70
  %72 = load i32, i32* %8, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [256 x float], [256 x float]* %71, i64 0, i64 %73
  store float %68, float* %74, align 4
  br label %75

75:                                               ; preds = %52
  %76 = load i32, i32* %8, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %8, align 4
  br label %49

78:                                               ; preds = %49
  br label %79

79:                                               ; preds = %78
  %80 = load i32, i32* %6, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %6, align 4
  br label %15

82:                                               ; preds = %15
  %83 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %84

84:                                               ; preds = %82
  %85 = load i32, i32* %5, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %5, align 4
  br label %11

87:                                               ; preds = %11
  %88 = call i64 @clock() #9
  store i64 %88, i64* %2, align 8
  %89 = load i64, i64* %2, align 8
  %90 = load i64, i64* %1, align 8
  %91 = sub nsw i64 %89, %90
  store i64 %91, i64* %3, align 8
  %92 = load i64, i64* %3, align 8
  %93 = sitofp i64 %92 to double
  %94 = fdiv double %93, 1.000000e+06
  store double %94, double* %4, align 8
  %95 = load double, double* %4, align 8
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.187, i64 0, i64 0), double %95)
  call void @check(i32 1122)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s235() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %72, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 39000
  br i1 %12, label %13, label %75

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %67, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %70

17:                                               ; preds = %14
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fmul float %21, %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fadd float %30, %26
  store float %31, float* %29, align 4
  store i32 1, i32* %7, align 4
  br label %32

32:                                               ; preds = %63, %17
  %33 = load i32, i32* %7, align 4
  %34 = icmp slt i32 %33, 256
  br i1 %34, label %35, label %66

35:                                               ; preds = %32
  %36 = load i32, i32* %7, align 4
  %37 = sub nsw i32 %36, 1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %38
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [256 x float], [256 x float]* %39, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = load i32, i32* %7, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %45
  %47 = load i32, i32* %6, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [256 x float], [256 x float]* %46, i64 0, i64 %48
  %50 = load float, float* %49, align 4
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 4
  %55 = fmul float %50, %54
  %56 = fadd float %43, %55
  %57 = load i32, i32* %7, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %58
  %60 = load i32, i32* %6, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [256 x float], [256 x float]* %59, i64 0, i64 %61
  store float %56, float* %62, align 4
  br label %63

63:                                               ; preds = %35
  %64 = load i32, i32* %7, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %7, align 4
  br label %32

66:                                               ; preds = %32
  br label %67

67:                                               ; preds = %66
  %68 = load i32, i32* %6, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %6, align 4
  br label %14

70:                                               ; preds = %14
  %71 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %72

72:                                               ; preds = %70
  %73 = load i32, i32* %5, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %5, align 4
  br label %10

75:                                               ; preds = %10
  %76 = call i64 @clock() #9
  store i64 %76, i64* %2, align 8
  %77 = load i64, i64* %2, align 8
  %78 = load i64, i64* %1, align 8
  %79 = sub nsw i64 %77, %78
  store i64 %79, i64* %3, align 8
  %80 = load i64, i64* %3, align 8
  %81 = sitofp i64 %80 to double
  %82 = fdiv double %81, 1.000000e+06
  store double %82, double* %4, align 8
  %83 = load double, double* %4, align 8
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i64 0, i64 0), double %83)
  call void @check(i32 111)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s241() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %57, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 100000
  br i1 %11, label %12, label %60

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %52, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %55

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fmul float %25, %29
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %30, float* %33, align 4
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4
  %43 = fmul float %37, %42
  %44 = load i32, i32* %6, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %45
  %47 = load float, float* %46, align 4
  %48 = fmul float %43, %47
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %50
  store float %48, float* %51, align 4
  br label %52

52:                                               ; preds = %16
  %53 = load i32, i32* %6, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %6, align 4
  br label %13

55:                                               ; preds = %13
  %56 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %57

57:                                               ; preds = %55
  %58 = load i32, i32* %5, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %5, align 4
  br label %9

60:                                               ; preds = %9
  %61 = call i64 @clock() #9
  store i64 %61, i64* %2, align 8
  %62 = load i64, i64* %2, align 8
  %63 = load i64, i64* %1, align 8
  %64 = sub nsw i64 %62, %63
  store i64 %64, i64* %3, align 8
  %65 = load i64, i64* %3, align 8
  %66 = sitofp i64 %65 to double
  %67 = fdiv double %66, 1.000000e+06
  store double %67, double* %4, align 8
  %68 = load double, double* %4, align 8
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.189, i64 0, i64 0), double %68)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s242(float %0, float %1) #0 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store float %0, float* %3, align 4
  store float %1, float* %4, align 4
  %11 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0))
  %12 = call i64 @clock() #9
  store i64 %12, i64* %5, align 8
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %53, %2
  %14 = load i32, i32* %9, align 4
  %15 = icmp slt i32 %14, 10000
  br i1 %15, label %16, label %56

16:                                               ; preds = %13
  store i32 1, i32* %10, align 4
  br label %17

17:                                               ; preds = %48, %16
  %18 = load i32, i32* %10, align 4
  %19 = icmp slt i32 %18, 32000
  br i1 %19, label %20, label %51

20:                                               ; preds = %17
  %21 = load i32, i32* %10, align 4
  %22 = sub nsw i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = load float, float* %3, align 4
  %27 = fadd float %25, %26
  %28 = load float, float* %4, align 4
  %29 = fadd float %27, %28
  %30 = load i32, i32* %10, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fadd float %29, %33
  %35 = load i32, i32* %10, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = fadd float %34, %38
  %40 = load i32, i32* %10, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fadd float %39, %43
  %45 = load i32, i32* %10, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  store float %44, float* %47, align 4
  br label %48

48:                                               ; preds = %20
  %49 = load i32, i32* %10, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %10, align 4
  br label %17

51:                                               ; preds = %17
  %52 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %9, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %9, align 4
  br label %13

56:                                               ; preds = %13
  %57 = call i64 @clock() #9
  store i64 %57, i64* %6, align 8
  %58 = load i64, i64* %6, align 8
  %59 = load i64, i64* %5, align 8
  %60 = sub nsw i64 %58, %59
  store i64 %60, i64* %7, align 8
  %61 = load i64, i64* %7, align 8
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  store double %63, double* %8, align 8
  %64 = load double, double* %8, align 8
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.190, i64 0, i64 0), double %64)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s243() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %74, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %77

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %69, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %72

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fmul float %24, %28
  %30 = fadd float %20, %29
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %30, float* %33, align 4
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = fmul float %41, %45
  %47 = fadd float %37, %46
  %48 = load i32, i32* %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %49
  store float %47, float* %50, align 4
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %52
  %54 = load float, float* %53, align 4
  %55 = load i32, i32* %6, align 4
  %56 = add nsw i32 %55, 1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %57
  %59 = load float, float* %58, align 4
  %60 = load i32, i32* %6, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %61
  %63 = load float, float* %62, align 4
  %64 = fmul float %59, %63
  %65 = fadd float %54, %64
  %66 = load i32, i32* %6, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  store float %65, float* %68, align 4
  br label %69

69:                                               ; preds = %16
  %70 = load i32, i32* %6, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %6, align 4
  br label %13

72:                                               ; preds = %13
  %73 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %74

74:                                               ; preds = %72
  %75 = load i32, i32* %5, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %5, align 4
  br label %9

77:                                               ; preds = %9
  %78 = call i64 @clock() #9
  store i64 %78, i64* %2, align 8
  %79 = load i64, i64* %2, align 8
  %80 = load i64, i64* %1, align 8
  %81 = sub nsw i64 %79, %80
  store i64 %81, i64* %3, align 8
  %82 = load i64, i64* %3, align 8
  %83 = sitofp i64 %82 to double
  %84 = fdiv double %83, 1.000000e+06
  store double %84, double* %4, align 8
  %85 = load double, double* %4, align 8
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.191, i64 0, i64 0), double %85)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s244() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %70, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %73

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %65, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %68

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fmul float %24, %28
  %30 = fadd float %20, %29
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %30, float* %33, align 4
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = fadd float %37, %41
  %43 = load i32, i32* %6, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %44
  store float %42, float* %45, align 4
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = load i32, i32* %6, align 4
  %51 = add nsw i32 %50, 1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 4
  %55 = load i32, i32* %6, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %56
  %58 = load float, float* %57, align 4
  %59 = fmul float %54, %58
  %60 = fadd float %49, %59
  %61 = load i32, i32* %6, align 4
  %62 = add nsw i32 %61, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  store float %60, float* %64, align 4
  br label %65

65:                                               ; preds = %16
  %66 = load i32, i32* %6, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %6, align 4
  br label %13

68:                                               ; preds = %13
  %69 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %70

70:                                               ; preds = %68
  %71 = load i32, i32* %5, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %5, align 4
  br label %9

73:                                               ; preds = %9
  %74 = call i64 @clock() #9
  store i64 %74, i64* %2, align 8
  %75 = load i64, i64* %2, align 8
  %76 = load i64, i64* %1, align 8
  %77 = sub nsw i64 %75, %76
  store i64 %77, i64* %3, align 8
  %78 = load i64, i64* %3, align 8
  %79 = sitofp i64 %78 to double
  %80 = fdiv double %79, 1.000000e+06
  store double %80, double* %4, align 8
  %81 = load double, double* %4, align 8
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.192, i64 0, i64 0), double %81)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1244() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %67, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %70

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %62, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %65

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fmul float %24, %28
  %30 = fadd float %20, %29
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = fmul float %34, %38
  %40 = fadd float %30, %39
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %42
  %44 = load float, float* %43, align 4
  %45 = fadd float %40, %44
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  store float %45, float* %48, align 4
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %52 = load float, float* %51, align 4
  %53 = load i32, i32* %6, align 4
  %54 = add nsw i32 %53, 1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 4
  %58 = fadd float %52, %57
  %59 = load i32, i32* %6, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %60
  store float %58, float* %61, align 4
  br label %62

62:                                               ; preds = %16
  %63 = load i32, i32* %6, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %6, align 4
  br label %13

65:                                               ; preds = %13
  %66 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %67

67:                                               ; preds = %65
  %68 = load i32, i32* %5, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %5, align 4
  br label %9

70:                                               ; preds = %9
  %71 = call i64 @clock() #9
  store i64 %71, i64* %2, align 8
  %72 = load i64, i64* %2, align 8
  %73 = load i64, i64* %1, align 8
  %74 = sub nsw i64 %72, %73
  store i64 %74, i64* %3, align 8
  %75 = load i64, i64* %3, align 8
  %76 = sitofp i64 %75 to double
  %77 = fdiv double %76, 1.000000e+06
  store double %77, double* %4, align 8
  %78 = load double, double* %4, align 8
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.193, i64 0, i64 0), double %78)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2244() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %47, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %50

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %42, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %45

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fadd float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %25, float* %29, align 4
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fadd float %33, %37
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  store float %38, float* %41, align 4
  br label %42

42:                                               ; preds = %16
  %43 = load i32, i32* %6, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %6, align 4
  br label %13

45:                                               ; preds = %13
  %46 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %47

47:                                               ; preds = %45
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  br label %9

50:                                               ; preds = %9
  %51 = call i64 @clock() #9
  store i64 %51, i64* %2, align 8
  %52 = load i64, i64* %2, align 8
  %53 = load i64, i64* %1, align 8
  %54 = sub nsw i64 %52, %53
  store i64 %54, i64* %3, align 8
  %55 = load i64, i64* %3, align 8
  %56 = sitofp i64 %55 to double
  %57 = fdiv double %56, 1.000000e+06
  store double %57, double* %4, align 8
  %58 = load double, double* %4, align 8
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.194, i64 0, i64 0), double %58)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s251() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %43, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 200000
  br i1 %12, label %13, label %46

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %38, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %41

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fmul float %25, %29
  %31 = fadd float %21, %30
  store float %31, float* %5, align 4
  %32 = load float, float* %5, align 4
  %33 = load float, float* %5, align 4
  %34 = fmul float %32, %33
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  store float %34, float* %37, align 4
  br label %38

38:                                               ; preds = %17
  %39 = load i32, i32* %7, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %7, align 4
  br label %14

41:                                               ; preds = %14
  %42 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %6, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %6, align 4
  br label %10

46:                                               ; preds = %10
  %47 = call i64 @clock() #9
  store i64 %47, i64* %2, align 8
  %48 = load i64, i64* %2, align 8
  %49 = load i64, i64* %1, align 8
  %50 = sub nsw i64 %48, %49
  store i64 %50, i64* %3, align 8
  %51 = load i64, i64* %3, align 8
  %52 = sitofp i64 %51 to double
  %53 = fdiv double %52, 1.000000e+06
  store double %53, double* %4, align 8
  %54 = load double, double* %4, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i64 0, i64 0), double %54)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1251() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %53, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 200000
  br i1 %12, label %13, label %56

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %48, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %51

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  store float %26, float* %5, align 4
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = fadd float %30, %34
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  store float %35, float* %38, align 4
  %39 = load float, float* %5, align 4
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fmul float %39, %43
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %46
  store float %44, float* %47, align 4
  br label %48

48:                                               ; preds = %17
  %49 = load i32, i32* %7, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %7, align 4
  br label %14

51:                                               ; preds = %14
  %52 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %6, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %6, align 4
  br label %10

56:                                               ; preds = %10
  %57 = call i64 @clock() #9
  store i64 %57, i64* %2, align 8
  %58 = load i64, i64* %2, align 8
  %59 = load i64, i64* %1, align 8
  %60 = sub nsw i64 %58, %59
  store i64 %60, i64* %3, align 8
  %61 = load i64, i64* %3, align 8
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  store double %63, double* %4, align 8
  %64 = load double, double* %4, align 8
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.196, i64 0, i64 0), double %64)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2251() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %53, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 50000
  br i1 %12, label %13, label %56

13:                                               ; preds = %10
  store float 0.000000e+00, float* %6, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %48, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %51

17:                                               ; preds = %14
  %18 = load float, float* %6, align 4
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = fmul float %18, %22
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  store float %23, float* %26, align 4
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = fadd float %30, %34
  store float %35, float* %6, align 4
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fadd float %39, %43
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %46
  store float %44, float* %47, align 4
  br label %48

48:                                               ; preds = %17
  %49 = load i32, i32* %7, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %7, align 4
  br label %14

51:                                               ; preds = %14
  %52 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %10

56:                                               ; preds = %10
  %57 = call i64 @clock() #9
  store i64 %57, i64* %2, align 8
  %58 = load i64, i64* %2, align 8
  %59 = load i64, i64* %1, align 8
  %60 = sub nsw i64 %58, %59
  store i64 %60, i64* %3, align 8
  %61 = load i64, i64* %3, align 8
  %62 = sitofp i64 %61 to double
  %63 = fdiv double %62, 1.000000e+06
  store double %63, double* %4, align 8
  %64 = load double, double* %4, align 8
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.197, i64 0, i64 0), double %64)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s3251() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %59, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %62

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %54, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %57

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fadd float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %25, float* %29, align 4
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fmul float %33, %37
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  store float %38, float* %41, align 4
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fmul float %45, %49
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %52
  store float %50, float* %53, align 4
  br label %54

54:                                               ; preds = %16
  %55 = load i32, i32* %6, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %6, align 4
  br label %13

57:                                               ; preds = %13
  %58 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %59

59:                                               ; preds = %57
  %60 = load i32, i32* %5, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %5, align 4
  br label %9

62:                                               ; preds = %9
  %63 = call i64 @clock() #9
  store i64 %63, i64* %2, align 8
  %64 = load i64, i64* %2, align 8
  %65 = load i64, i64* %1, align 8
  %66 = sub nsw i64 %64, %65
  store i64 %66, i64* %3, align 8
  %67 = load i64, i64* %3, align 8
  %68 = sitofp i64 %67 to double
  %69 = fdiv double %68, 1.000000e+06
  store double %69, double* %4, align 8
  %70 = load double, double* %4, align 8
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.198, i64 0, i64 0), double %70)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s252() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %40, %0
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %43

14:                                               ; preds = %11
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %35, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %38

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = fmul float %22, %26
  store float %27, float* %6, align 4
  %28 = load float, float* %6, align 4
  %29 = load float, float* %5, align 4
  %30 = fadd float %28, %29
  %31 = load i32, i32* %8, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %30, float* %33, align 4
  %34 = load float, float* %6, align 4
  store float %34, float* %5, align 4
  br label %35

35:                                               ; preds = %18
  %36 = load i32, i32* %8, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %8, align 4
  br label %15

38:                                               ; preds = %15
  %39 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %40

40:                                               ; preds = %38
  %41 = load i32, i32* %7, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %7, align 4
  br label %11

43:                                               ; preds = %11
  %44 = call i64 @clock() #9
  store i64 %44, i64* %2, align 8
  %45 = load i64, i64* %2, align 8
  %46 = load i64, i64* %1, align 8
  %47 = sub nsw i64 %45, %46
  store i64 %47, i64* %3, align 8
  %48 = load i64, i64* %3, align 8
  %49 = sitofp i64 %48 to double
  %50 = fdiv double %49, 1.000000e+06
  store double %50, double* %4, align 8
  %51 = load double, double* %4, align 8
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.199, i64 0, i64 0), double %51)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s253() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %58, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 50000
  br i1 %12, label %13, label %61

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %53, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %56

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fcmp ogt float %21, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %17
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = load i32, i32* %7, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fmul float %35, %39
  %41 = fsub float %31, %40
  store float %41, float* %5, align 4
  %42 = load float, float* %5, align 4
  %43 = load i32, i32* %7, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = fadd float %46, %42
  store float %47, float* %45, align 4
  %48 = load float, float* %5, align 4
  %49 = load i32, i32* %7, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  store float %48, float* %51, align 4
  br label %52

52:                                               ; preds = %27, %17
  br label %53

53:                                               ; preds = %52
  %54 = load i32, i32* %7, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %7, align 4
  br label %14

56:                                               ; preds = %14
  %57 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %58

58:                                               ; preds = %56
  %59 = load i32, i32* %6, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %6, align 4
  br label %10

61:                                               ; preds = %10
  %62 = call i64 @clock() #9
  store i64 %62, i64* %2, align 8
  %63 = load i64, i64* %2, align 8
  %64 = load i64, i64* %1, align 8
  %65 = sub nsw i64 %63, %64
  store i64 %65, i64* %3, align 8
  %66 = load i64, i64* %3, align 8
  %67 = sitofp i64 %66 to double
  %68 = fdiv double %67, 1.000000e+06
  store double %68, double* %4, align 8
  %69 = load double, double* %4, align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.200, i64 0, i64 0), double %69)
  call void @check(i32 13)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s254() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %38, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 200000
  br i1 %12, label %13, label %41

13:                                               ; preds = %10
  %14 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4
  store float %14, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %33, %13
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %36

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load float, float* %5, align 4
  %24 = fadd float %22, %23
  %25 = fmul float %24, 5.000000e-01
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  store float %25, float* %28, align 4
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  store float %32, float* %5, align 4
  br label %33

33:                                               ; preds = %18
  %34 = load i32, i32* %7, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %7, align 4
  br label %15

36:                                               ; preds = %15
  %37 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %6, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %6, align 4
  br label %10

41:                                               ; preds = %10
  %42 = call i64 @clock() #9
  store i64 %42, i64* %2, align 8
  %43 = load i64, i64* %2, align 8
  %44 = load i64, i64* %1, align 8
  %45 = sub nsw i64 %43, %44
  store i64 %45, i64* %3, align 8
  %46 = load i64, i64* %3, align 8
  %47 = sitofp i64 %46 to double
  %48 = fdiv double %47, 1.000000e+06
  store double %48, double* %4, align 8
  %49 = load double, double* %4, align 8
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.201, i64 0, i64 0), double %49)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s255() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %43, %0
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %46

14:                                               ; preds = %11
  %15 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31999), align 4
  store float %15, float* %5, align 4
  %16 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 31998), align 8
  store float %16, float* %6, align 4
  store i32 0, i32* %8, align 4
  br label %17

17:                                               ; preds = %38, %14
  %18 = load i32, i32* %8, align 4
  %19 = icmp slt i32 %18, 32000
  br i1 %19, label %20, label %41

20:                                               ; preds = %17
  %21 = load i32, i32* %8, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load float, float* %5, align 4
  %26 = fadd float %24, %25
  %27 = load float, float* %6, align 4
  %28 = fadd float %26, %27
  %29 = fmul float %28, 0x3FD54FDF40000000
  %30 = load i32, i32* %8, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  store float %29, float* %32, align 4
  %33 = load float, float* %5, align 4
  store float %33, float* %6, align 4
  %34 = load i32, i32* %8, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  store float %37, float* %5, align 4
  br label %38

38:                                               ; preds = %20
  %39 = load i32, i32* %8, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %8, align 4
  br label %17

41:                                               ; preds = %17
  %42 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %7, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %7, align 4
  br label %11

46:                                               ; preds = %11
  %47 = call i64 @clock() #9
  store i64 %47, i64* %2, align 8
  %48 = load i64, i64* %2, align 8
  %49 = load i64, i64* %1, align 8
  %50 = sub nsw i64 %48, %49
  store i64 %50, i64* %3, align 8
  %51 = load i64, i64* %3, align 8
  %52 = sitofp i64 %51 to double
  %53 = fdiv double %52, 1.000000e+06
  store double %53, double* %4, align 8
  %54 = load double, double* %4, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.202, i64 0, i64 0), double %54)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s256() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %63, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 1950
  br i1 %12, label %13, label %66

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %58, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %61

17:                                               ; preds = %14
  store i32 1, i32* %7, align 4
  br label %18

18:                                               ; preds = %54, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %57

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4
  %23 = sub nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = fsub float 1.000000e+00, %26
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  store float %27, float* %30, align 4
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %36
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x float], [256 x float]* %37, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = fmul float %41, %45
  %47 = fadd float %34, %46
  %48 = load i32, i32* %7, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %49
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [256 x float], [256 x float]* %50, i64 0, i64 %52
  store float %47, float* %53, align 4
  br label %54

54:                                               ; preds = %21
  %55 = load i32, i32* %7, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %7, align 4
  br label %18

57:                                               ; preds = %18
  br label %58

58:                                               ; preds = %57
  %59 = load i32, i32* %6, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %6, align 4
  br label %14

61:                                               ; preds = %14
  %62 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %63

63:                                               ; preds = %61
  %64 = load i32, i32* %5, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %5, align 4
  br label %10

66:                                               ; preds = %10
  %67 = call i64 @clock() #9
  store i64 %67, i64* %2, align 8
  %68 = load i64, i64* %2, align 8
  %69 = load i64, i64* %1, align 8
  %70 = sub nsw i64 %68, %69
  store i64 %70, i64* %3, align 8
  %71 = load i64, i64* %3, align 8
  %72 = sitofp i64 %71 to double
  %73 = fdiv double %72, 1.000000e+06
  store double %73, double* %4, align 8
  %74 = load double, double* %4, align 8
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.203, i64 0, i64 0), double %74)
  call void @check(i32 111)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s256p() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %72, %0
  %12 = load i32, i32* %5, align 4
  %13 = icmp slt i32 %12, 1950
  br i1 %13, label %14, label %75

14:                                               ; preds = %11
  store i32 1, i32* %6, align 4
  br label %15

15:                                               ; preds = %28, %14
  %16 = load i32, i32* %6, align 4
  %17 = icmp slt i32 %16, 256
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = load i32, i32* %6, align 4
  %20 = sub nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = fsub float 1.000000e+00, %23
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  store float %24, float* %27, align 4
  br label %28

28:                                               ; preds = %18
  %29 = load i32, i32* %6, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %6, align 4
  br label %15

31:                                               ; preds = %15
  store i32 0, i32* %7, align 4
  br label %32

32:                                               ; preds = %67, %31
  %33 = load i32, i32* %7, align 4
  %34 = icmp slt i32 %33, 256
  br i1 %34, label %35, label %70

35:                                               ; preds = %32
  store i32 1, i32* %8, align 4
  br label %36

36:                                               ; preds = %63, %35
  %37 = load i32, i32* %8, align 4
  %38 = icmp slt i32 %37, 256
  br i1 %38, label %39, label %66

39:                                               ; preds = %36
  %40 = load i32, i32* %8, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = load i32, i32* %8, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %45
  %47 = load i32, i32* %7, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [256 x float], [256 x float]* %46, i64 0, i64 %48
  %50 = load float, float* %49, align 4
  %51 = load i32, i32* %8, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %52
  %54 = load float, float* %53, align 4
  %55 = fmul float %50, %54
  %56 = fadd float %43, %55
  %57 = load i32, i32* %8, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %58
  %60 = load i32, i32* %7, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [256 x float], [256 x float]* %59, i64 0, i64 %61
  store float %56, float* %62, align 4
  br label %63

63:                                               ; preds = %39
  %64 = load i32, i32* %8, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %8, align 4
  br label %36

66:                                               ; preds = %36
  br label %67

67:                                               ; preds = %66
  %68 = load i32, i32* %7, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %7, align 4
  br label %32

70:                                               ; preds = %32
  %71 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %72

72:                                               ; preds = %70
  %73 = load i32, i32* %5, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %5, align 4
  br label %11

75:                                               ; preds = %11
  %76 = call i64 @clock() #9
  store i64 %76, i64* %2, align 8
  %77 = load i64, i64* %2, align 8
  %78 = load i64, i64* %1, align 8
  %79 = sub nsw i64 %77, %78
  store i64 %79, i64* %3, align 8
  %80 = load i64, i64* %3, align 8
  %81 = sitofp i64 %80 to double
  %82 = fdiv double %81, 1.000000e+06
  store double %82, double* %4, align 8
  %83 = load double, double* %4, align 8
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.204, i64 0, i64 0), double %83)
  call void @check(i32 111)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s256pp() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %75, %0
  %12 = load i32, i32* %5, align 4
  %13 = icmp slt i32 %12, 1950
  br i1 %13, label %14, label %78

14:                                               ; preds = %11
  store i32 0, i32* %6, align 4
  br label %15

15:                                               ; preds = %31, %14
  %16 = load i32, i32* %6, align 4
  %17 = icmp slt i32 %16, 256
  br i1 %17, label %18, label %34

18:                                               ; preds = %15
  %19 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16
  %20 = load i32, i32* %6, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  store float %19, float* %22, align 4
  %23 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16
  %24 = fpext float %23 to double
  %25 = fsub double 1.000000e+00, %24
  %26 = fptrunc double %25 to float
  %27 = load i32, i32* %6, align 4
  %28 = add nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  store float %26, float* %30, align 4
  br label %31

31:                                               ; preds = %18
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 2
  store i32 %33, i32* %6, align 4
  br label %15

34:                                               ; preds = %15
  store i32 1, i32* %7, align 4
  br label %35

35:                                               ; preds = %70, %34
  %36 = load i32, i32* %7, align 4
  %37 = icmp slt i32 %36, 256
  br i1 %37, label %38, label %73

38:                                               ; preds = %35
  store i32 0, i32* %8, align 4
  br label %39

39:                                               ; preds = %66, %38
  %40 = load i32, i32* %8, align 4
  %41 = icmp slt i32 %40, 256
  br i1 %41, label %42, label %69

42:                                               ; preds = %39
  %43 = load i32, i32* %7, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = load i32, i32* %7, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %48
  %50 = load i32, i32* %8, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [256 x float], [256 x float]* %49, i64 0, i64 %51
  %53 = load float, float* %52, align 4
  %54 = load i32, i32* %7, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %55
  %57 = load float, float* %56, align 4
  %58 = fmul float %53, %57
  %59 = fadd float %46, %58
  %60 = load i32, i32* %7, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %61
  %63 = load i32, i32* %8, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [256 x float], [256 x float]* %62, i64 0, i64 %64
  store float %59, float* %65, align 4
  br label %66

66:                                               ; preds = %42
  %67 = load i32, i32* %8, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %8, align 4
  br label %39

69:                                               ; preds = %39
  br label %70

70:                                               ; preds = %69
  %71 = load i32, i32* %7, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %7, align 4
  br label %35

73:                                               ; preds = %35
  %74 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %5, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %5, align 4
  br label %11

78:                                               ; preds = %11
  %79 = call i64 @clock() #9
  store i64 %79, i64* %2, align 8
  %80 = load i64, i64* %2, align 8
  %81 = load i64, i64* %1, align 8
  %82 = sub nsw i64 %80, %81
  store i64 %82, i64* %3, align 8
  %83 = load i64, i64* %3, align 8
  %84 = sitofp i64 %83 to double
  %85 = fdiv double %84, 1.000000e+06
  store double %85, double* %4, align 8
  %86 = load double, double* %4, align 8
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.205, i64 0, i64 0), double %86)
  call void @check(i32 111)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s257() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %65, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 1950
  br i1 %12, label %13, label %68

13:                                               ; preds = %10
  store i32 1, i32* %6, align 4
  br label %14

14:                                               ; preds = %60, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %63

17:                                               ; preds = %14
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %56, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %59

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %23
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [256 x float], [256 x float]* %24, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = load i32, i32* %6, align 4
  %30 = sub nsw i32 %29, 1
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fsub float %28, %33
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  store float %34, float* %37, align 4
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %43
  %45 = load i32, i32* %6, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [256 x float], [256 x float]* %44, i64 0, i64 %46
  %48 = load float, float* %47, align 4
  %49 = fadd float %41, %48
  %50 = load i32, i32* %7, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %51
  %53 = load i32, i32* %6, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [256 x float], [256 x float]* %52, i64 0, i64 %54
  store float %49, float* %55, align 4
  br label %56

56:                                               ; preds = %21
  %57 = load i32, i32* %7, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %7, align 4
  br label %18

59:                                               ; preds = %18
  br label %60

60:                                               ; preds = %59
  %61 = load i32, i32* %6, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %6, align 4
  br label %14

63:                                               ; preds = %14
  %64 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %65

65:                                               ; preds = %63
  %66 = load i32, i32* %5, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %5, align 4
  br label %10

68:                                               ; preds = %10
  %69 = call i64 @clock() #9
  store i64 %69, i64* %2, align 8
  %70 = load i64, i64* %2, align 8
  %71 = load i64, i64* %1, align 8
  %72 = sub nsw i64 %70, %71
  store i64 %72, i64* %3, align 8
  %73 = load i64, i64* %3, align 8
  %74 = sitofp i64 %73 to double
  %75 = fdiv double %74, 1.000000e+06
  store double %75, double* %4, align 8
  %76 = load double, double* %4, align 8
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.206, i64 0, i64 0), double %76)
  call void @check(i32 111)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s258() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %64, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 50000
  br i1 %12, label %13, label %67

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %59, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %62

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = fpext float %21 to double
  %23 = fcmp ogt double %22, 0.000000e+00
  br i1 %23, label %24, label %34

24:                                               ; preds = %17
  %25 = load i32, i32* %7, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = fmul float %28, %32
  store float %33, float* %5, align 4
  br label %34

34:                                               ; preds = %24, %17
  %35 = load float, float* %5, align 4
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fmul float %35, %39
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %42
  %44 = load float, float* %43, align 4
  %45 = fadd float %40, %44
  %46 = load i32, i32* %7, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  store float %45, float* %48, align 4
  %49 = load float, float* %5, align 4
  %50 = fadd float %49, 1.000000e+00
  %51 = load i32, i32* %7, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [256 x float], [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), i64 0, i64 %52
  %54 = load float, float* %53, align 4
  %55 = fmul float %50, %54
  %56 = load i32, i32* %7, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %57
  store float %55, float* %58, align 4
  br label %59

59:                                               ; preds = %34
  %60 = load i32, i32* %7, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %7, align 4
  br label %14

62:                                               ; preds = %14
  %63 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %64

64:                                               ; preds = %62
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %6, align 4
  br label %10

67:                                               ; preds = %10
  %68 = call i64 @clock() #9
  store i64 %68, i64* %2, align 8
  %69 = load i64, i64* %2, align 8
  %70 = load i64, i64* %1, align 8
  %71 = sub nsw i64 %69, %70
  store i64 %71, i64* %3, align 8
  %72 = load i64, i64* %3, align 8
  %73 = sitofp i64 %72 to double
  %74 = fdiv double %73, 1.000000e+06
  store double %74, double* %4, align 8
  %75 = load double, double* %4, align 8
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.207, i64 0, i64 0), double %75)
  call void @check(i32 25)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s261() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %55, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 50000
  br i1 %12, label %13, label %58

13:                                               ; preds = %10
  store i32 1, i32* %7, align 4
  br label %14

14:                                               ; preds = %50, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %53

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  store float %26, float* %5, align 4
  %27 = load float, float* %5, align 4
  %28 = load i32, i32* %7, align 4
  %29 = sub nsw i32 %28, 1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = fadd float %27, %32
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  store float %33, float* %36, align 4
  %37 = load i32, i32* %7, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %42
  %44 = load float, float* %43, align 4
  %45 = fmul float %40, %44
  store float %45, float* %5, align 4
  %46 = load float, float* %5, align 4
  %47 = load i32, i32* %7, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %48
  store float %46, float* %49, align 4
  br label %50

50:                                               ; preds = %17
  %51 = load i32, i32* %7, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %7, align 4
  br label %14

53:                                               ; preds = %14
  %54 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %55

55:                                               ; preds = %53
  %56 = load i32, i32* %6, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %6, align 4
  br label %10

58:                                               ; preds = %10
  %59 = call i64 @clock() #9
  store i64 %59, i64* %2, align 8
  %60 = load i64, i64* %2, align 8
  %61 = load i64, i64* %1, align 8
  %62 = sub nsw i64 %60, %61
  store i64 %62, i64* %3, align 8
  %63 = load i64, i64* %3, align 8
  %64 = sitofp i64 %63 to double
  %65 = fdiv double %64, 1.000000e+06
  store double %65, double* %4, align 8
  %66 = load double, double* %4, align 8
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.208, i64 0, i64 0), double %66)
  call void @check(i32 13)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s271() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %43, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 200000
  br i1 %11, label %12, label %46

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %38, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %41

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, 0.000000e+00
  br i1 %21, label %22, label %37

22:                                               ; preds = %16
  %23 = load i32, i32* %6, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fmul float %26, %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fadd float %35, %31
  store float %36, float* %34, align 4
  br label %37

37:                                               ; preds = %22, %16
  br label %38

38:                                               ; preds = %37
  %39 = load i32, i32* %6, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %6, align 4
  br label %13

41:                                               ; preds = %13
  %42 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %5, align 4
  br label %9

46:                                               ; preds = %9
  %47 = call i64 @clock() #9
  store i64 %47, i64* %2, align 8
  %48 = load i64, i64* %2, align 8
  %49 = load i64, i64* %1, align 8
  %50 = sub nsw i64 %48, %49
  store i64 %50, i64* %3, align 8
  %51 = load i64, i64* %3, align 8
  %52 = sitofp i64 %51 to double
  %53 = fdiv double %52, 1.000000e+06
  store double %53, double* %4, align 8
  %54 = load double, double* %4, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.209, i64 0, i64 0), double %54)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s272(float %0) #0 {
  %2 = alloca float, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store float %0, float* %2, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %60, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %63

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %55, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %58

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load float, float* %2, align 4
  %24 = fcmp oge float %22, %23
  br i1 %24, label %25, label %54

25:                                               ; preds = %18
  %26 = load i32, i32* %8, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %8, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fmul float %29, %33
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = fadd float %38, %34
  store float %39, float* %37, align 4
  %40 = load i32, i32* %8, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = load i32, i32* %8, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %45
  %47 = load float, float* %46, align 4
  %48 = fmul float %43, %47
  %49 = load i32, i32* %8, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %50
  %52 = load float, float* %51, align 4
  %53 = fadd float %52, %48
  store float %53, float* %51, align 4
  br label %54

54:                                               ; preds = %25, %18
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %8, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %8, align 4
  br label %15

58:                                               ; preds = %15
  %59 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %7, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %7, align 4
  br label %11

63:                                               ; preds = %11
  %64 = call i64 @clock() #9
  store i64 %64, i64* %4, align 8
  %65 = load i64, i64* %4, align 8
  %66 = load i64, i64* %3, align 8
  %67 = sub nsw i64 %65, %66
  store i64 %67, i64* %5, align 8
  %68 = load i64, i64* %5, align 8
  %69 = sitofp i64 %68 to double
  %70 = fdiv double %69, 1.000000e+06
  store double %70, double* %6, align 8
  %71 = load double, double* %6, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.210, i64 0, i64 0), double %71)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s273() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %71, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %74

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %66, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %69

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, %25
  store float %30, float* %28, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = fcmp olt float %34, 0.000000e+00
  br i1 %35, label %36, label %51

36:                                               ; preds = %16
  %37 = load i32, i32* %6, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %42
  %44 = load float, float* %43, align 4
  %45 = fmul float %40, %44
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fadd float %49, %45
  store float %50, float* %48, align 4
  br label %51

51:                                               ; preds = %36, %16
  %52 = load i32, i32* %6, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = load float, float* %54, align 4
  %56 = load i32, i32* %6, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %57
  %59 = load float, float* %58, align 4
  %60 = fmul float %55, %59
  %61 = load i32, i32* %6, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %62
  %64 = load float, float* %63, align 4
  %65 = fadd float %64, %60
  store float %65, float* %63, align 4
  br label %66

66:                                               ; preds = %51
  %67 = load i32, i32* %6, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %6, align 4
  br label %13

69:                                               ; preds = %13
  %70 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %71

71:                                               ; preds = %69
  %72 = load i32, i32* %5, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %5, align 4
  br label %9

74:                                               ; preds = %9
  %75 = call i64 @clock() #9
  store i64 %75, i64* %2, align 8
  %76 = load i64, i64* %2, align 8
  %77 = load i64, i64* %1, align 8
  %78 = sub nsw i64 %76, %77
  store i64 %78, i64* %3, align 8
  %79 = load i64, i64* %3, align 8
  %80 = sitofp i64 %79 to double
  %81 = fdiv double %80, 1.000000e+06
  store double %81, double* %4, align 8
  %82 = load double, double* %4, align 8
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.211, i64 0, i64 0), double %82)
  call void @check(i32 123)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s274() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %71, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %74

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %66, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %69

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fmul float %24, %28
  %30 = fadd float %20, %29
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %30, float* %33, align 4
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fcmp ogt float %37, 0.000000e+00
  br i1 %38, label %39, label %52

39:                                               ; preds = %16
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = load i32, i32* %6, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %45
  %47 = load float, float* %46, align 4
  %48 = fadd float %43, %47
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %50
  store float %48, float* %51, align 4
  br label %65

52:                                               ; preds = %16
  %53 = load i32, i32* %6, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %54
  %56 = load float, float* %55, align 4
  %57 = load i32, i32* %6, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %58
  %60 = load float, float* %59, align 4
  %61 = fmul float %56, %60
  %62 = load i32, i32* %6, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %63
  store float %61, float* %64, align 4
  br label %65

65:                                               ; preds = %52, %39
  br label %66

66:                                               ; preds = %65
  %67 = load i32, i32* %6, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %6, align 4
  br label %13

69:                                               ; preds = %13
  %70 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %71

71:                                               ; preds = %69
  %72 = load i32, i32* %5, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %5, align 4
  br label %9

74:                                               ; preds = %9
  %75 = call i64 @clock() #9
  store i64 %75, i64* %2, align 8
  %76 = load i64, i64* %2, align 8
  %77 = load i64, i64* %1, align 8
  %78 = sub nsw i64 %76, %77
  store i64 %78, i64* %3, align 8
  %79 = load i64, i64* %3, align 8
  %80 = sitofp i64 %79 to double
  %81 = fdiv double %80, 1.000000e+06
  store double %81, double* %4, align 8
  %82 = load double, double* %4, align 8
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.212, i64 0, i64 0), double %82)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s275() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %68, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 1950
  br i1 %12, label %13, label %71

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %63, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %66

17:                                               ; preds = %14
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [256 x float], [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = fcmp ogt float %21, 0.000000e+00
  br i1 %22, label %23, label %62

23:                                               ; preds = %17
  store i32 1, i32* %7, align 4
  br label %24

24:                                               ; preds = %58, %23
  %25 = load i32, i32* %7, align 4
  %26 = icmp slt i32 %25, 256
  br i1 %26, label %27, label %61

27:                                               ; preds = %24
  %28 = load i32, i32* %7, align 4
  %29 = sub nsw i32 %28, 1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [256 x float], [256 x float]* %31, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %37
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x float], [256 x float]* %38, i64 0, i64 %40
  %42 = load float, float* %41, align 4
  %43 = load i32, i32* %7, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %44
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [256 x float], [256 x float]* %45, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fmul float %42, %49
  %51 = fadd float %35, %50
  %52 = load i32, i32* %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %53
  %55 = load i32, i32* %6, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [256 x float], [256 x float]* %54, i64 0, i64 %56
  store float %51, float* %57, align 4
  br label %58

58:                                               ; preds = %27
  %59 = load i32, i32* %7, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %7, align 4
  br label %24

61:                                               ; preds = %24
  br label %62

62:                                               ; preds = %61, %17
  br label %63

63:                                               ; preds = %62
  %64 = load i32, i32* %6, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %6, align 4
  br label %14

66:                                               ; preds = %14
  %67 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %68

68:                                               ; preds = %66
  %69 = load i32, i32* %5, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %5, align 4
  br label %10

71:                                               ; preds = %10
  %72 = call i64 @clock() #9
  store i64 %72, i64* %2, align 8
  %73 = load i64, i64* %2, align 8
  %74 = load i64, i64* %1, align 8
  %75 = sub nsw i64 %73, %74
  store i64 %75, i64* %3, align 8
  %76 = load i64, i64* %3, align 8
  %77 = sitofp i64 %76 to double
  %78 = fdiv double %77, 1.000000e+06
  store double %78, double* %4, align 8
  %79 = load double, double* %4, align 8
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.213, i64 0, i64 0), double %79)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2275() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %77, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 19500
  br i1 %12, label %13, label %80

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %72, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %75

17:                                               ; preds = %14
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %51, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %54

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %23
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [256 x float], [256 x float]* %24, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [256 x float], [256 x float]* %31, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %37
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x float], [256 x float]* %38, i64 0, i64 %40
  %42 = load float, float* %41, align 4
  %43 = fmul float %35, %42
  %44 = fadd float %28, %43
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %46
  %48 = load i32, i32* %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [256 x float], [256 x float]* %47, i64 0, i64 %49
  store float %44, float* %50, align 4
  br label %51

51:                                               ; preds = %21
  %52 = load i32, i32* %7, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %7, align 4
  br label %18

54:                                               ; preds = %18
  %55 = load i32, i32* %6, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  %58 = load float, float* %57, align 4
  %59 = load i32, i32* %6, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %62 = load float, float* %61, align 4
  %63 = load i32, i32* %6, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %64
  %66 = load float, float* %65, align 4
  %67 = fmul float %62, %66
  %68 = fadd float %58, %67
  %69 = load i32, i32* %6, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %70
  store float %68, float* %71, align 4
  br label %72

72:                                               ; preds = %54
  %73 = load i32, i32* %6, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %6, align 4
  br label %14

75:                                               ; preds = %14
  %76 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %77

77:                                               ; preds = %75
  %78 = load i32, i32* %5, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %5, align 4
  br label %10

80:                                               ; preds = %10
  %81 = call i64 @clock() #9
  store i64 %81, i64* %2, align 8
  %82 = load i64, i64* %2, align 8
  %83 = load i64, i64* %1, align 8
  %84 = sub nsw i64 %82, %83
  store i64 %84, i64* %3, align 8
  %85 = load i64, i64* %3, align 8
  %86 = sitofp i64 %85 to double
  %87 = fdiv double %86, 1.000000e+06
  store double %87, double* %4, align 8
  %88 = load double, double* %4, align 8
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.214, i64 0, i64 0), double %88)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s276() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 16000, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %58, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 200000
  br i1 %12, label %13, label %61

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %53, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %56

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = add nsw i32 %18, 1
  %20 = load i32, i32* %5, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %37

22:                                               ; preds = %17
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fmul float %26, %30
  %32 = load i32, i32* %7, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fadd float %35, %31
  store float %36, float* %34, align 4
  br label %52

37:                                               ; preds = %17
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = fmul float %41, %45
  %47 = load i32, i32* %7, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %48
  %50 = load float, float* %49, align 4
  %51 = fadd float %50, %46
  store float %51, float* %49, align 4
  br label %52

52:                                               ; preds = %37, %22
  br label %53

53:                                               ; preds = %52
  %54 = load i32, i32* %7, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %7, align 4
  br label %14

56:                                               ; preds = %14
  %57 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %58

58:                                               ; preds = %56
  %59 = load i32, i32* %6, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %6, align 4
  br label %10

61:                                               ; preds = %10
  %62 = call i64 @clock() #9
  store i64 %62, i64* %2, align 8
  %63 = load i64, i64* %2, align 8
  %64 = load i64, i64* %1, align 8
  %65 = sub nsw i64 %63, %64
  store i64 %65, i64* %3, align 8
  %66 = load i64, i64* %3, align 8
  %67 = sitofp i64 %66 to double
  %68 = fdiv double %67, 1.000000e+06
  store double %68, double* %4, align 8
  %69 = load double, double* %4, align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.215, i64 0, i64 0), double %69)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s276p() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 16000, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %64, %0
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 200000
  br i1 %13, label %14, label %67

14:                                               ; preds = %11
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %35, %14
  %16 = load i32, i32* %7, align 4
  %17 = load i32, i32* %5, align 4
  %18 = sub nsw i32 %17, 1
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %38

20:                                               ; preds = %15
  %21 = load i32, i32* %7, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %7, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fmul float %24, %28
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fadd float %33, %29
  store float %34, float* %32, align 4
  br label %35

35:                                               ; preds = %20
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %15

38:                                               ; preds = %15
  %39 = load i32, i32* %5, align 4
  %40 = sub nsw i32 %39, 1
  store i32 %40, i32* %8, align 4
  br label %41

41:                                               ; preds = %59, %38
  %42 = load i32, i32* %8, align 4
  %43 = icmp slt i32 %42, 32000
  br i1 %43, label %44, label %62

44:                                               ; preds = %41
  %45 = load i32, i32* %8, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %46
  %48 = load float, float* %47, align 4
  %49 = load i32, i32* %8, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %50
  %52 = load float, float* %51, align 4
  %53 = fmul float %48, %52
  %54 = load i32, i32* %8, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  %57 = load float, float* %56, align 4
  %58 = fadd float %57, %53
  store float %58, float* %56, align 4
  br label %59

59:                                               ; preds = %44
  %60 = load i32, i32* %8, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %8, align 4
  br label %41

62:                                               ; preds = %41
  %63 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %64

64:                                               ; preds = %62
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %6, align 4
  br label %11

67:                                               ; preds = %11
  %68 = call i64 @clock() #9
  store i64 %68, i64* %2, align 8
  %69 = load i64, i64* %2, align 8
  %70 = load i64, i64* %1, align 8
  %71 = sub nsw i64 %69, %70
  store i64 %71, i64* %3, align 8
  %72 = load i64, i64* %3, align 8
  %73 = sitofp i64 %72 to double
  %74 = fdiv double %73, 1.000000e+06
  store double %74, double* %4, align 8
  %75 = load double, double* %4, align 8
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.216, i64 0, i64 0), double %75)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s277() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %70, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %73

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %65, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 31999
  br i1 %15, label %16, label %68

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp oge float %20, 0.000000e+00
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  br label %64

23:                                               ; preds = %16
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = fcmp oge float %27, 0.000000e+00
  br i1 %28, label %29, label %30

29:                                               ; preds = %23
  br label %45

30:                                               ; preds = %23
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = fmul float %34, %38
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fadd float %43, %39
  store float %44, float* %42, align 4
  br label %45

45:                                               ; preds = %30, %29
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = load i32, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %51
  %53 = load float, float* %52, align 4
  %54 = load i32, i32* %6, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %55
  %57 = load float, float* %56, align 4
  %58 = fmul float %53, %57
  %59 = fadd float %49, %58
  %60 = load i32, i32* %6, align 4
  %61 = add nsw i32 %60, 1
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %62
  store float %59, float* %63, align 4
  br label %64

64:                                               ; preds = %45, %22
  br label %65

65:                                               ; preds = %64
  %66 = load i32, i32* %6, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %6, align 4
  br label %13

68:                                               ; preds = %13
  %69 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %70

70:                                               ; preds = %68
  %71 = load i32, i32* %5, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %5, align 4
  br label %9

73:                                               ; preds = %9
  %74 = call i64 @clock() #9
  store i64 %74, i64* %2, align 8
  %75 = load i64, i64* %2, align 8
  %76 = load i64, i64* %1, align 8
  %77 = sub nsw i64 %75, %76
  store i64 %77, i64* %3, align 8
  %78 = load i64, i64* %3, align 8
  %79 = sitofp i64 %78 to double
  %80 = fdiv double %79, 1.000000e+06
  store double %80, double* %4, align 8
  %81 = load double, double* %4, align 8
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.217, i64 0, i64 0), double %81)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s278() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %84, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %87

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %79, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %82

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, 0.000000e+00
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  br label %42

23:                                               ; preds = %16
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = fneg float %27
  %29 = load i32, i32* %6, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fmul float %32, %36
  %38 = fadd float %28, %37
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  store float %38, float* %41, align 4
  br label %61

42:                                               ; preds = %22
  %43 = load i32, i32* %6, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = fneg float %46
  %48 = load i32, i32* %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %49
  %51 = load float, float* %50, align 4
  %52 = load i32, i32* %6, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %53
  %55 = load float, float* %54, align 4
  %56 = fmul float %51, %55
  %57 = fadd float %47, %56
  %58 = load i32, i32* %6, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %59
  store float %57, float* %60, align 4
  br label %61

61:                                               ; preds = %42, %23
  %62 = load i32, i32* %6, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %63
  %65 = load float, float* %64, align 4
  %66 = load i32, i32* %6, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %67
  %69 = load float, float* %68, align 4
  %70 = load i32, i32* %6, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %71
  %73 = load float, float* %72, align 4
  %74 = fmul float %69, %73
  %75 = fadd float %65, %74
  %76 = load i32, i32* %6, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %77
  store float %75, float* %78, align 4
  br label %79

79:                                               ; preds = %61
  %80 = load i32, i32* %6, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %6, align 4
  br label %13

82:                                               ; preds = %13
  %83 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %84

84:                                               ; preds = %82
  %85 = load i32, i32* %5, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %5, align 4
  br label %9

87:                                               ; preds = %9
  %88 = call i64 @clock() #9
  store i64 %88, i64* %2, align 8
  %89 = load i64, i64* %2, align 8
  %90 = load i64, i64* %1, align 8
  %91 = sub nsw i64 %89, %90
  store i64 %91, i64* %3, align 8
  %92 = load i64, i64* %3, align 8
  %93 = sitofp i64 %92 to double
  %94 = fdiv double %93, 1.000000e+06
  store double %94, double* %4, align 8
  %95 = load double, double* %4, align 8
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.218, i64 0, i64 0), double %95)
  call void @check(i32 123)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s279() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %109, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 25000
  br i1 %11, label %12, label %112

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %104, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %107

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, 0.000000e+00
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  br label %67

23:                                               ; preds = %16
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = fneg float %27
  %29 = load i32, i32* %6, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fmul float %32, %36
  %38 = fadd float %28, %37
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  store float %38, float* %41, align 4
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fcmp ole float %45, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %23
  br label %86

52:                                               ; preds = %23
  %53 = load i32, i32* %6, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %54
  %56 = load float, float* %55, align 4
  %57 = load i32, i32* %6, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %58
  %60 = load float, float* %59, align 4
  %61 = fmul float %56, %60
  %62 = load i32, i32* %6, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %63
  %65 = load float, float* %64, align 4
  %66 = fadd float %65, %61
  store float %66, float* %64, align 4
  br label %86

67:                                               ; preds = %22
  %68 = load i32, i32* %6, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %69
  %71 = load float, float* %70, align 4
  %72 = fneg float %71
  %73 = load i32, i32* %6, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %74
  %76 = load float, float* %75, align 4
  %77 = load i32, i32* %6, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %78
  %80 = load float, float* %79, align 4
  %81 = fmul float %76, %80
  %82 = fadd float %72, %81
  %83 = load i32, i32* %6, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %84
  store float %82, float* %85, align 4
  br label %86

86:                                               ; preds = %67, %52, %51
  %87 = load i32, i32* %6, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %88
  %90 = load float, float* %89, align 4
  %91 = load i32, i32* %6, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %92
  %94 = load float, float* %93, align 4
  %95 = load i32, i32* %6, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %96
  %98 = load float, float* %97, align 4
  %99 = fmul float %94, %98
  %100 = fadd float %90, %99
  %101 = load i32, i32* %6, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %102
  store float %100, float* %103, align 4
  br label %104

104:                                              ; preds = %86
  %105 = load i32, i32* %6, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %6, align 4
  br label %13

107:                                              ; preds = %13
  %108 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %109

109:                                              ; preds = %107
  %110 = load i32, i32* %5, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %5, align 4
  br label %9

112:                                              ; preds = %9
  %113 = call i64 @clock() #9
  store i64 %113, i64* %2, align 8
  %114 = load i64, i64* %2, align 8
  %115 = load i64, i64* %1, align 8
  %116 = sub nsw i64 %114, %115
  store i64 %116, i64* %3, align 8
  %117 = load i64, i64* %3, align 8
  %118 = sitofp i64 %117 to double
  %119 = fdiv double %118, 1.000000e+06
  store double %119, double* %4, align 8
  %120 = load double, double* %4, align 8
  %121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.219, i64 0, i64 0), double %120)
  call void @check(i32 123)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1279() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %54, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %57

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %49, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %52

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %22, label %48

22:                                               ; preds = %16
  %23 = load i32, i32* %6, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fcmp ogt float %26, %30
  br i1 %31, label %32, label %47

32:                                               ; preds = %22
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = load i32, i32* %6, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = fmul float %36, %40
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = fadd float %45, %41
  store float %46, float* %44, align 4
  br label %47

47:                                               ; preds = %32, %22
  br label %48

48:                                               ; preds = %47, %16
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %6, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %6, align 4
  br label %13

52:                                               ; preds = %13
  %53 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %54

54:                                               ; preds = %52
  %55 = load i32, i32* %5, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %5, align 4
  br label %9

57:                                               ; preds = %9
  %58 = call i64 @clock() #9
  store i64 %58, i64* %2, align 8
  %59 = load i64, i64* %2, align 8
  %60 = load i64, i64* %1, align 8
  %61 = sub nsw i64 %59, %60
  store i64 %61, i64* %3, align 8
  %62 = load i64, i64* %3, align 8
  %63 = sitofp i64 %62 to double
  %64 = fdiv double %63, 1.000000e+06
  store double %64, double* %4, align 8
  %65 = load double, double* %4, align 8
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.220, i64 0, i64 0), double %65)
  call void @check(i32 123)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2710(float %0) #0 {
  %2 = alloca float, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store float %0, float* %2, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %117, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 25000
  br i1 %13, label %14, label %120

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %112, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %115

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = fcmp ogt float %22, %26
  br i1 %27, label %28, label %57

28:                                               ; preds = %18
  %29 = load i32, i32* %8, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = load i32, i32* %8, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fmul float %32, %36
  %38 = load i32, i32* %8, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = fadd float %41, %37
  store float %42, float* %40, align 4
  %43 = load i32, i32* %8, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = load i32, i32* %8, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %48
  %50 = load float, float* %49, align 4
  %51 = fmul float %46, %50
  %52 = load i32, i32* %8, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %53
  %55 = load float, float* %54, align 4
  %56 = fadd float %55, %51
  store float %56, float* %54, align 4
  br label %111

57:                                               ; preds = %18
  %58 = load i32, i32* %8, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %59
  %61 = load float, float* %60, align 4
  %62 = load i32, i32* %8, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %63
  %65 = load float, float* %64, align 4
  %66 = load i32, i32* %8, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %67
  %69 = load float, float* %68, align 4
  %70 = fmul float %65, %69
  %71 = fadd float %61, %70
  %72 = load i32, i32* %8, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %73
  store float %71, float* %74, align 4
  %75 = load float, float* %2, align 4
  %76 = fcmp ogt float %75, 0.000000e+00
  br i1 %76, label %77, label %95

77:                                               ; preds = %57
  %78 = load i32, i32* %8, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 4
  %82 = load i32, i32* %8, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %83
  %85 = load float, float* %84, align 4
  %86 = load i32, i32* %8, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %87
  %89 = load float, float* %88, align 4
  %90 = fmul float %85, %89
  %91 = fadd float %81, %90
  %92 = load i32, i32* %8, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %93
  store float %91, float* %94, align 4
  br label %110

95:                                               ; preds = %57
  %96 = load i32, i32* %8, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %97
  %99 = load float, float* %98, align 4
  %100 = load i32, i32* %8, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %101
  %103 = load float, float* %102, align 4
  %104 = fmul float %99, %103
  %105 = load i32, i32* %8, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %106
  %108 = load float, float* %107, align 4
  %109 = fadd float %108, %104
  store float %109, float* %107, align 4
  br label %110

110:                                              ; preds = %95, %77
  br label %111

111:                                              ; preds = %110, %28
  br label %112

112:                                              ; preds = %111
  %113 = load i32, i32* %8, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %8, align 4
  br label %15

115:                                              ; preds = %15
  %116 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %117

117:                                              ; preds = %115
  %118 = load i32, i32* %7, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %7, align 4
  br label %11

120:                                              ; preds = %11
  %121 = call i64 @clock() #9
  store i64 %121, i64* %4, align 8
  %122 = load i64, i64* %4, align 8
  %123 = load i64, i64* %3, align 8
  %124 = sub nsw i64 %122, %123
  store i64 %124, i64* %5, align 8
  %125 = load i64, i64* %5, align 8
  %126 = sitofp i64 %125 to double
  %127 = fdiv double %126, 1.000000e+06
  store double %127, double* %6, align 8
  %128 = load double, double* %6, align 8
  %129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.221, i64 0, i64 0), double %128)
  call void @check(i32 123)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2711() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %43, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 200000
  br i1 %11, label %12, label %46

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %38, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %41

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp une float %20, 0.000000e+00
  br i1 %21, label %22, label %37

22:                                               ; preds = %16
  %23 = load i32, i32* %6, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fmul float %26, %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fadd float %35, %31
  store float %36, float* %34, align 4
  br label %37

37:                                               ; preds = %22, %16
  br label %38

38:                                               ; preds = %37
  %39 = load i32, i32* %6, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %6, align 4
  br label %13

41:                                               ; preds = %13
  %42 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %5, align 4
  br label %9

46:                                               ; preds = %9
  %47 = call i64 @clock() #9
  store i64 %47, i64* %2, align 8
  %48 = load i64, i64* %2, align 8
  %49 = load i64, i64* %1, align 8
  %50 = sub nsw i64 %48, %49
  store i64 %50, i64* %3, align 8
  %51 = load i64, i64* %3, align 8
  %52 = sitofp i64 %51 to double
  %53 = fdiv double %52, 1.000000e+06
  store double %53, double* %4, align 8
  %54 = load double, double* %4, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.222, i64 0, i64 0), double %54)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2712() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %47, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 200000
  br i1 %11, label %12, label %50

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %42, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %45

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fcmp ogt float %20, %24
  br i1 %25, label %26, label %41

26:                                               ; preds = %16
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = fmul float %30, %34
  %36 = load i32, i32* %6, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fadd float %39, %35
  store float %40, float* %38, align 4
  br label %41

41:                                               ; preds = %26, %16
  br label %42

42:                                               ; preds = %41
  %43 = load i32, i32* %6, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %6, align 4
  br label %13

45:                                               ; preds = %13
  %46 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %47

47:                                               ; preds = %45
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  br label %9

50:                                               ; preds = %9
  %51 = call i64 @clock() #9
  store i64 %51, i64* %2, align 8
  %52 = load i64, i64* %2, align 8
  %53 = load i64, i64* %1, align 8
  %54 = sub nsw i64 %52, %53
  store i64 %54, i64* %3, align 8
  %55 = load i64, i64* %3, align 8
  %56 = sitofp i64 %55 to double
  %57 = fdiv double %56, 1.000000e+06
  store double %57, double* %4, align 8
  %58 = load double, double* %4, align 8
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.223, i64 0, i64 0), double %58)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s281() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %48, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 50000
  br i1 %12, label %13, label %51

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %43, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %46

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sub nsw i32 32000, %18
  %20 = sub nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = fmul float %27, %31
  %33 = fadd float %23, %32
  store float %33, float* %5, align 4
  %34 = load float, float* %5, align 4
  %35 = fsub float %34, 1.000000e+00
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  store float %35, float* %38, align 4
  %39 = load float, float* %5, align 4
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  store float %39, float* %42, align 4
  br label %43

43:                                               ; preds = %17
  %44 = load i32, i32* %7, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %7, align 4
  br label %14

46:                                               ; preds = %14
  %47 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %48

48:                                               ; preds = %46
  %49 = load i32, i32* %6, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %6, align 4
  br label %10

51:                                               ; preds = %10
  %52 = call i64 @clock() #9
  store i64 %52, i64* %2, align 8
  %53 = load i64, i64* %2, align 8
  %54 = load i64, i64* %1, align 8
  %55 = sub nsw i64 %53, %54
  store i64 %55, i64* %3, align 8
  %56 = load i64, i64* %3, align 8
  %57 = sitofp i64 %56 to double
  %58 = fdiv double %57, 1.000000e+06
  store double %58, double* %4, align 8
  %59 = load double, double* %4, align 8
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.224, i64 0, i64 0), double %59)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1281() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %56, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 200000
  br i1 %12, label %13, label %59

13:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %51, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %54

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fmul float %21, %25
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = fmul float %30, %34
  %36 = fadd float %26, %35
  %37 = load i32, i32* %7, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = fadd float %36, %40
  store float %41, float* %5, align 4
  %42 = load float, float* %5, align 4
  %43 = fsub float %42, 1.000000e+00
  %44 = load i32, i32* %7, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %45
  store float %43, float* %46, align 4
  %47 = load float, float* %5, align 4
  %48 = load i32, i32* %7, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %49
  store float %47, float* %50, align 4
  br label %51

51:                                               ; preds = %17
  %52 = load i32, i32* %7, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %7, align 4
  br label %14

54:                                               ; preds = %14
  %55 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %56

56:                                               ; preds = %54
  %57 = load i32, i32* %6, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %6, align 4
  br label %10

59:                                               ; preds = %10
  %60 = call i64 @clock() #9
  store i64 %60, i64* %2, align 8
  %61 = load i64, i64* %2, align 8
  %62 = load i64, i64* %1, align 8
  %63 = sub nsw i64 %61, %62
  store i64 %63, i64* %3, align 8
  %64 = load i64, i64* %3, align 8
  %65 = sitofp i64 %64 to double
  %66 = fdiv double %65, 1.000000e+06
  store double %66, double* %4, align 8
  %67 = load double, double* %4, align 8
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.225, i64 0, i64 0), double %67)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s291() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %37, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 100000
  br i1 %12, label %13, label %40

13:                                               ; preds = %10
  store i32 31999, i32* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %32, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %35

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %5, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = fmul float %26, 5.000000e-01
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  store float %27, float* %30, align 4
  %31 = load i32, i32* %7, align 4
  store i32 %31, i32* %5, align 4
  br label %32

32:                                               ; preds = %17
  %33 = load i32, i32* %7, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %7, align 4
  br label %14

35:                                               ; preds = %14
  %36 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %6, align 4
  br label %10

40:                                               ; preds = %10
  %41 = call i64 @clock() #9
  store i64 %41, i64* %2, align 8
  %42 = load i64, i64* %2, align 8
  %43 = load i64, i64* %1, align 8
  %44 = sub nsw i64 %42, %43
  store i64 %44, i64* %3, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  store double %47, double* %4, align 8
  %48 = load double, double* %4, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.226, i64 0, i64 0), double %48)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s292() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %44, %0
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %47

14:                                               ; preds = %11
  store i32 31999, i32* %5, align 4
  store i32 31998, i32* %6, align 4
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %39, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %42

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = fadd float %22, %26
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = fadd float %27, %31
  %33 = fmul float %32, 0x3FD54FDF40000000
  %34 = load i32, i32* %8, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  store float %33, float* %36, align 4
  %37 = load i32, i32* %5, align 4
  store i32 %37, i32* %6, align 4
  %38 = load i32, i32* %8, align 4
  store i32 %38, i32* %5, align 4
  br label %39

39:                                               ; preds = %18
  %40 = load i32, i32* %8, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %8, align 4
  br label %15

42:                                               ; preds = %15
  %43 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %44

44:                                               ; preds = %42
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  br label %11

47:                                               ; preds = %11
  %48 = call i64 @clock() #9
  store i64 %48, i64* %2, align 8
  %49 = load i64, i64* %2, align 8
  %50 = load i64, i64* %1, align 8
  %51 = sub nsw i64 %49, %50
  store i64 %51, i64* %3, align 8
  %52 = load i64, i64* %3, align 8
  %53 = sitofp i64 %52 to double
  %54 = fdiv double %53, 1.000000e+06
  store double %54, double* %4, align 8
  %55 = load double, double* %4, align 8
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.227, i64 0, i64 0), double %55)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s293() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %26, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 200000
  br i1 %11, label %12, label %29

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %21, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %24

16:                                               ; preds = %13
  %17 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  store float %17, float* %20, align 4
  br label %21

21:                                               ; preds = %16
  %22 = load i32, i32* %6, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %6, align 4
  br label %13

24:                                               ; preds = %13
  %25 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %26

26:                                               ; preds = %24
  %27 = load i32, i32* %5, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %5, align 4
  br label %9

29:                                               ; preds = %9
  %30 = call i64 @clock() #9
  store i64 %30, i64* %2, align 8
  %31 = load i64, i64* %2, align 8
  %32 = load i64, i64* %1, align 8
  %33 = sub nsw i64 %31, %32
  store i64 %33, i64* %3, align 8
  %34 = load i64, i64* %3, align 8
  %35 = sitofp i64 %34 to double
  %36 = fdiv double %35, 1.000000e+06
  store double %36, double* %4, align 8
  %37 = load double, double* %4, align 8
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i64 0, i64 0), double %37)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2101() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %45, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 500000
  br i1 %11, label %12, label %48

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %40, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 256
  br i1 %15, label %16, label %43

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %18
  %20 = load i32, i32* %6, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [256 x float], [256 x float]* %19, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %26, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fmul float %23, %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %33
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x float], [256 x float]* %34, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = fadd float %38, %31
  store float %39, float* %37, align 4
  br label %40

40:                                               ; preds = %16
  %41 = load i32, i32* %6, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %6, align 4
  br label %13

43:                                               ; preds = %13
  %44 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %45

45:                                               ; preds = %43
  %46 = load i32, i32* %5, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %5, align 4
  br label %9

48:                                               ; preds = %9
  %49 = call i64 @clock() #9
  store i64 %49, i64* %2, align 8
  %50 = load i64, i64* %2, align 8
  %51 = load i64, i64* %1, align 8
  %52 = sub nsw i64 %50, %51
  store i64 %52, i64* %3, align 8
  %53 = load i64, i64* %3, align 8
  %54 = sitofp i64 %53 to double
  %55 = fdiv double %54, 1.000000e+06
  store double %55, double* %4, align 8
  %56 = load double, double* %4, align 8
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.229, i64 0, i64 0), double %56)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2102() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %43, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 19500
  br i1 %12, label %13, label %46

13:                                               ; preds = %10
  store i32 0, i32* %6, align 4
  br label %14

14:                                               ; preds = %38, %13
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 256
  br i1 %16, label %17, label %41

17:                                               ; preds = %14
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %28, %17
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %21, label %31

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %23
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [256 x float], [256 x float]* %24, i64 0, i64 %26
  store float 0.000000e+00, float* %27, align 4
  br label %28

28:                                               ; preds = %21
  %29 = load i32, i32* %7, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %7, align 4
  br label %18

31:                                               ; preds = %18
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %33
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x float], [256 x float]* %34, i64 0, i64 %36
  store float 1.000000e+00, float* %37, align 4
  br label %38

38:                                               ; preds = %31
  %39 = load i32, i32* %6, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %6, align 4
  br label %14

41:                                               ; preds = %14
  %42 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %5, align 4
  br label %10

46:                                               ; preds = %10
  %47 = call i64 @clock() #9
  store i64 %47, i64* %2, align 8
  %48 = load i64, i64* %2, align 8
  %49 = load i64, i64* %1, align 8
  %50 = sub nsw i64 %48, %49
  store i64 %50, i64* %3, align 8
  %51 = load i64, i64* %3, align 8
  %52 = sitofp i64 %51 to double
  %53 = fdiv double %52, 1.000000e+06
  store double %53, double* %4, align 8
  %54 = load double, double* %4, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.230, i64 0, i64 0), double %54)
  call void @check(i32 11)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s2111() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0))
  %11 = call i64 @clock() #9
  store i64 %11, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %56, %0
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, 19500
  br i1 %14, label %15, label %59

15:                                               ; preds = %12
  store i32 1, i32* %6, align 4
  br label %16

16:                                               ; preds = %51, %15
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 256
  br i1 %18, label %19, label %54

19:                                               ; preds = %16
  store i32 1, i32* %7, align 4
  br label %20

20:                                               ; preds = %47, %19
  %21 = load i32, i32* %7, align 4
  %22 = icmp slt i32 %21, 256
  br i1 %22, label %23, label %50

23:                                               ; preds = %20
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %25
  %27 = load i32, i32* %7, align 4
  %28 = sub nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [256 x float], [256 x float]* %26, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = load i32, i32* %6, align 4
  %33 = sub nsw i32 %32, 1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %34
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [256 x float], [256 x float]* %35, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fadd float %31, %39
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %42
  %44 = load i32, i32* %7, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [256 x float], [256 x float]* %43, i64 0, i64 %45
  store float %40, float* %46, align 4
  br label %47

47:                                               ; preds = %23
  %48 = load i32, i32* %7, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %20

50:                                               ; preds = %20
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %6, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %6, align 4
  br label %16

54:                                               ; preds = %16
  %55 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %56

56:                                               ; preds = %54
  %57 = load i32, i32* %5, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %5, align 4
  br label %12

59:                                               ; preds = %12
  %60 = call i64 @clock() #9
  store i64 %60, i64* %2, align 8
  %61 = load i64, i64* %2, align 8
  %62 = load i64, i64* %1, align 8
  %63 = sub nsw i64 %61, %62
  store i64 %63, i64* %3, align 8
  %64 = load i64, i64* %3, align 8
  %65 = sitofp i64 %64 to double
  %66 = fdiv double %65, 1.000000e+06
  store double %66, double* %4, align 8
  %67 = load double, double* %4, align 8
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.231, i64 0, i64 0), double %67)
  store float 0.000000e+00, float* @temp, align 4
  store i32 0, i32* %8, align 4
  br label %69

69:                                               ; preds = %90, %59
  %70 = load i32, i32* %8, align 4
  %71 = icmp slt i32 %70, 256
  br i1 %71, label %72, label %93

72:                                               ; preds = %69
  store i32 0, i32* %9, align 4
  br label %73

73:                                               ; preds = %86, %72
  %74 = load i32, i32* %9, align 4
  %75 = icmp slt i32 %74, 256
  br i1 %75, label %76, label %89

76:                                               ; preds = %73
  %77 = load i32, i32* %8, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %78
  %80 = load i32, i32* %9, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [256 x float], [256 x float]* %79, i64 0, i64 %81
  %83 = load float, float* %82, align 4
  %84 = load float, float* @temp, align 4
  %85 = fadd float %84, %83
  store float %85, float* @temp, align 4
  br label %86

86:                                               ; preds = %76
  %87 = load i32, i32* %9, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %9, align 4
  br label %73

89:                                               ; preds = %73
  br label %90

90:                                               ; preds = %89
  %91 = load i32, i32* %8, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %8, align 4
  br label %69

93:                                               ; preds = %69
  %94 = load float, float* @temp, align 4
  %95 = fcmp oeq float %94, 0.000000e+00
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  store float 3.000000e+00, float* @temp, align 4
  br label %97

97:                                               ; preds = %96, %93
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s311() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %30, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 500000
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %24, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %27

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load float, float* %5, align 4
  %23 = fadd float %22, %21
  store float %23, float* %5, align 4
  br label %24

24:                                               ; preds = %17
  %25 = load i32, i32* %7, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %7, align 4
  br label %14

27:                                               ; preds = %14
  %28 = load float, float* %5, align 4
  %29 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %28)
  br label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %6, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %6, align 4
  br label %10

33:                                               ; preds = %10
  %34 = call i64 @clock() #9
  store i64 %34, i64* %2, align 8
  %35 = load i64, i64* %2, align 8
  %36 = load i64, i64* %1, align 8
  %37 = sub nsw i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = load i64, i64* %3, align 8
  %39 = sitofp i64 %38 to double
  %40 = fdiv double %39, 1.000000e+06
  store double %40, double* %4, align 8
  %41 = load double, double* %4, align 8
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.232, i64 0, i64 0), double %41)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local float @test(float* %0) #0 {
  %2 = alloca float*, align 8
  %3 = alloca float, align 4
  %4 = alloca i32, align 4
  store float* %0, float** %2, align 8
  store float 0.000000e+00, float* %3, align 4
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %16, %1
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 4
  br i1 %7, label %8, label %19

8:                                                ; preds = %5
  %9 = load float*, float** %2, align 8
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds float, float* %9, i64 %11
  %13 = load float, float* %12, align 4
  %14 = load float, float* %3, align 4
  %15 = fadd float %14, %13
  store float %15, float* %3, align 4
  br label %16

16:                                               ; preds = %8
  %17 = load i32, i32* %4, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %4, align 4
  br label %5

19:                                               ; preds = %5
  %20 = load float, float* %3, align 4
  ret float %20
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s31111() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %9

9:                                                ; preds = %39, %0
  %10 = load i32, i32* %6, align 4
  %11 = icmp slt i32 %10, 100000000
  br i1 %11, label %12, label %42

12:                                               ; preds = %9
  store float 0.000000e+00, float* %5, align 4
  %13 = call float @test(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0))
  %14 = load float, float* %5, align 4
  %15 = fadd float %14, %13
  store float %15, float* %5, align 4
  %16 = call float @test(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 4))
  %17 = load float, float* %5, align 4
  %18 = fadd float %17, %16
  store float %18, float* %5, align 4
  %19 = call float @test(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 8))
  %20 = load float, float* %5, align 4
  %21 = fadd float %20, %19
  store float %21, float* %5, align 4
  %22 = call float @test(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 12))
  %23 = load float, float* %5, align 4
  %24 = fadd float %23, %22
  store float %24, float* %5, align 4
  %25 = call float @test(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 16))
  %26 = load float, float* %5, align 4
  %27 = fadd float %26, %25
  store float %27, float* %5, align 4
  %28 = call float @test(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 20))
  %29 = load float, float* %5, align 4
  %30 = fadd float %29, %28
  store float %30, float* %5, align 4
  %31 = call float @test(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 24))
  %32 = load float, float* %5, align 4
  %33 = fadd float %32, %31
  store float %33, float* %5, align 4
  %34 = call float @test(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 28))
  %35 = load float, float* %5, align 4
  %36 = fadd float %35, %34
  store float %36, float* %5, align 4
  %37 = load float, float* %5, align 4
  %38 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %37)
  br label %39

39:                                               ; preds = %12
  %40 = load i32, i32* %6, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %6, align 4
  br label %9

42:                                               ; preds = %9
  %43 = call i64 @clock() #9
  store i64 %43, i64* %2, align 8
  %44 = load i64, i64* %2, align 8
  %45 = load i64, i64* %1, align 8
  %46 = sub nsw i64 %44, %45
  store i64 %46, i64* %3, align 8
  %47 = load i64, i64* %3, align 8
  %48 = sitofp i64 %47 to double
  %49 = fdiv double %48, 1.000000e+06
  store double %49, double* %4, align 8
  %50 = load double, double* %4, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.233, i64 0, i64 0), double %50)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s312() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %30, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 500000
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  store float 1.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %24, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %27

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load float, float* %5, align 4
  %23 = fmul float %22, %21
  store float %23, float* %5, align 4
  br label %24

24:                                               ; preds = %17
  %25 = load i32, i32* %7, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %7, align 4
  br label %14

27:                                               ; preds = %14
  %28 = load float, float* %5, align 4
  %29 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %28)
  br label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %6, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %6, align 4
  br label %10

33:                                               ; preds = %10
  %34 = call i64 @clock() #9
  store i64 %34, i64* %2, align 8
  %35 = load i64, i64* %2, align 8
  %36 = load i64, i64* %1, align 8
  %37 = sub nsw i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = load i64, i64* %3, align 8
  %39 = sitofp i64 %38 to double
  %40 = fdiv double %39, 1.000000e+06
  store double %40, double* %4, align 8
  %41 = load double, double* %4, align 8
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.234, i64 0, i64 0), double %41)
  %43 = load float, float* %5, align 4
  store float %43, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s313() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %35, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 250000
  br i1 %12, label %13, label %38

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %29, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %32

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fmul float %21, %25
  %27 = load float, float* %5, align 4
  %28 = fadd float %27, %26
  store float %28, float* %5, align 4
  br label %29

29:                                               ; preds = %17
  %30 = load i32, i32* %7, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %7, align 4
  br label %14

32:                                               ; preds = %14
  %33 = load float, float* %5, align 4
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %33)
  br label %35

35:                                               ; preds = %32
  %36 = load i32, i32* %6, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %6, align 4
  br label %10

38:                                               ; preds = %10
  %39 = call i64 @clock() #9
  store i64 %39, i64* %2, align 8
  %40 = load i64, i64* %2, align 8
  %41 = load i64, i64* %1, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %3, align 8
  %43 = load i64, i64* %3, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %4, align 8
  %46 = load double, double* %4, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.235, i64 0, i64 0), double %46)
  %48 = load float, float* %5, align 4
  store float %48, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s314() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %37, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 250000
  br i1 %12, label %13, label %40

13:                                               ; preds = %10
  %14 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16
  store float %14, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %31, %13
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %34

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load float, float* %5, align 4
  %24 = fcmp ogt float %22, %23
  br i1 %24, label %25, label %30

25:                                               ; preds = %18
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  store float %29, float* %5, align 4
  br label %30

30:                                               ; preds = %25, %18
  br label %31

31:                                               ; preds = %30
  %32 = load i32, i32* %7, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %7, align 4
  br label %15

34:                                               ; preds = %15
  %35 = load float, float* %5, align 4
  %36 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %35)
  br label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %6, align 4
  br label %10

40:                                               ; preds = %10
  %41 = call i64 @clock() #9
  store i64 %41, i64* %2, align 8
  %42 = load i64, i64* %2, align 8
  %43 = load i64, i64* %1, align 8
  %44 = sub nsw i64 %42, %43
  store i64 %44, i64* %3, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  store double %47, double* %4, align 8
  %48 = load double, double* %4, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.236, i64 0, i64 0), double %48)
  %50 = load float, float* %5, align 4
  store float %50, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s315() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0))
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %23, %0
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, 32000
  br i1 %14, label %15, label %26

15:                                               ; preds = %12
  %16 = load i32, i32* %5, align 4
  %17 = mul nsw i32 %16, 7
  %18 = srem i32 %17, 32000
  %19 = sitofp i32 %18 to float
  %20 = load i32, i32* %5, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  store float %19, float* %22, align 4
  br label %23

23:                                               ; preds = %15
  %24 = load i32, i32* %5, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %5, align 4
  br label %12

26:                                               ; preds = %12
  %27 = call i64 @clock() #9
  store i64 %27, i64* %1, align 8
  store i32 0, i32* %9, align 4
  br label %28

28:                                               ; preds = %60, %26
  %29 = load i32, i32* %9, align 4
  %30 = icmp slt i32 %29, 50000
  br i1 %30, label %31, label %63

31:                                               ; preds = %28
  %32 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16
  store float %32, float* %6, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %10, align 4
  br label %33

33:                                               ; preds = %50, %31
  %34 = load i32, i32* %10, align 4
  %35 = icmp slt i32 %34, 32000
  br i1 %35, label %36, label %53

36:                                               ; preds = %33
  %37 = load i32, i32* %10, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = load float, float* %6, align 4
  %42 = fcmp ogt float %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %36
  %44 = load i32, i32* %10, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %45
  %47 = load float, float* %46, align 4
  store float %47, float* %6, align 4
  %48 = load i32, i32* %10, align 4
  store i32 %48, i32* %8, align 4
  br label %49

49:                                               ; preds = %43, %36
  br label %50

50:                                               ; preds = %49
  %51 = load i32, i32* %10, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %10, align 4
  br label %33

53:                                               ; preds = %33
  %54 = load float, float* %6, align 4
  %55 = load i32, i32* %8, align 4
  %56 = sitofp i32 %55 to float
  %57 = fadd float %54, %56
  store float %57, float* %7, align 4
  %58 = load float, float* %7, align 4
  %59 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %58)
  br label %60

60:                                               ; preds = %53
  %61 = load i32, i32* %9, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %9, align 4
  br label %28

63:                                               ; preds = %28
  %64 = call i64 @clock() #9
  store i64 %64, i64* %2, align 8
  %65 = load i64, i64* %2, align 8
  %66 = load i64, i64* %1, align 8
  %67 = sub nsw i64 %65, %66
  store i64 %67, i64* %3, align 8
  %68 = load i64, i64* %3, align 8
  %69 = sitofp i64 %68 to double
  %70 = fdiv double %69, 1.000000e+06
  store double %70, double* %4, align 8
  %71 = load double, double* %4, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.237, i64 0, i64 0), double %71)
  %73 = load i32, i32* %8, align 4
  %74 = sitofp i32 %73 to float
  %75 = load float, float* %6, align 4
  %76 = fadd float %74, %75
  %77 = fadd float %76, 1.000000e+00
  store float %77, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s316() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %37, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 250000
  br i1 %12, label %13, label %40

13:                                               ; preds = %10
  %14 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16
  store float %14, float* %5, align 4
  store i32 1, i32* %7, align 4
  br label %15

15:                                               ; preds = %31, %13
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %34

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load float, float* %5, align 4
  %24 = fcmp olt float %22, %23
  br i1 %24, label %25, label %30

25:                                               ; preds = %18
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  store float %29, float* %5, align 4
  br label %30

30:                                               ; preds = %25, %18
  br label %31

31:                                               ; preds = %30
  %32 = load i32, i32* %7, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %7, align 4
  br label %15

34:                                               ; preds = %15
  %35 = load float, float* %5, align 4
  %36 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %35)
  br label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %6, align 4
  br label %10

40:                                               ; preds = %10
  %41 = call i64 @clock() #9
  store i64 %41, i64* %2, align 8
  %42 = load i64, i64* %2, align 8
  %43 = load i64, i64* %1, align 8
  %44 = sub nsw i64 %42, %43
  store i64 %44, i64* %3, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  store double %47, double* %4, align 8
  %48 = load double, double* %4, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.238, i64 0, i64 0), double %48)
  %50 = load float, float* %5, align 4
  store float %50, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s317() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %26, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 250000
  br i1 %12, label %13, label %29

13:                                               ; preds = %10
  store float 1.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %20, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 16000
  br i1 %16, label %17, label %23

17:                                               ; preds = %14
  %18 = load float, float* %5, align 4
  %19 = fmul float %18, 0x3FEFAE1480000000
  store float %19, float* %5, align 4
  br label %20

20:                                               ; preds = %17
  %21 = load i32, i32* %7, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %7, align 4
  br label %14

23:                                               ; preds = %14
  %24 = load float, float* %5, align 4
  %25 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %24)
  br label %26

26:                                               ; preds = %23
  %27 = load i32, i32* %6, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %6, align 4
  br label %10

29:                                               ; preds = %10
  %30 = call i64 @clock() #9
  store i64 %30, i64* %2, align 8
  %31 = load i64, i64* %2, align 8
  %32 = load i64, i64* %1, align 8
  %33 = sub nsw i64 %31, %32
  store i64 %33, i64* %3, align 8
  %34 = load i64, i64* %3, align 8
  %35 = sitofp i64 %34 to double
  %36 = fdiv double %35, 1.000000e+06
  store double %36, double* %4, align 8
  %37 = load double, double* %4, align 8
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.239, i64 0, i64 0), double %37)
  %39 = load float, float* %5, align 4
  store float %39, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s318(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %13 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0))
  %14 = call i64 @clock() #9
  store i64 %14, i64* %3, align 8
  store i32 0, i32* %11, align 4
  br label %15

15:                                               ; preds = %63, %1
  %16 = load i32, i32* %11, align 4
  %17 = icmp slt i32 %16, 25000
  br i1 %17, label %18, label %66

18:                                               ; preds = %15
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %19 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16
  %20 = fpext float %19 to double
  %21 = call double @llvm.fabs.f64(double %20)
  %22 = fptrunc double %21 to float
  store float %22, float* %9, align 4
  %23 = load i32, i32* %2, align 4
  %24 = load i32, i32* %7, align 4
  %25 = add nsw i32 %24, %23
  store i32 %25, i32* %7, align 4
  store i32 1, i32* %12, align 4
  br label %26

26:                                               ; preds = %53, %18
  %27 = load i32, i32* %12, align 4
  %28 = icmp slt i32 %27, 32000
  br i1 %28, label %29, label %56

29:                                               ; preds = %26
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fpext float %33 to double
  %35 = call double @llvm.fabs.f64(double %34)
  %36 = load float, float* %9, align 4
  %37 = fpext float %36 to double
  %38 = fcmp ole double %35, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %29
  br label %49

40:                                               ; preds = %29
  %41 = load i32, i32* %12, align 4
  store i32 %41, i32* %8, align 4
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = fpext float %45 to double
  %47 = call double @llvm.fabs.f64(double %46)
  %48 = fptrunc double %47 to float
  store float %48, float* %9, align 4
  br label %49

49:                                               ; preds = %40, %39
  %50 = load i32, i32* %2, align 4
  %51 = load i32, i32* %7, align 4
  %52 = add nsw i32 %51, %50
  store i32 %52, i32* %7, align 4
  br label %53

53:                                               ; preds = %49
  %54 = load i32, i32* %12, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %12, align 4
  br label %26

56:                                               ; preds = %26
  %57 = load float, float* %9, align 4
  %58 = load i32, i32* %8, align 4
  %59 = sitofp i32 %58 to float
  %60 = fadd float %57, %59
  store float %60, float* %10, align 4
  %61 = load float, float* %10, align 4
  %62 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %61)
  br label %63

63:                                               ; preds = %56
  %64 = load i32, i32* %11, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %11, align 4
  br label %15

66:                                               ; preds = %15
  %67 = call i64 @clock() #9
  store i64 %67, i64* %4, align 8
  %68 = load i64, i64* %4, align 8
  %69 = load i64, i64* %3, align 8
  %70 = sub nsw i64 %68, %69
  store i64 %70, i64* %5, align 8
  %71 = load i64, i64* %5, align 8
  %72 = sitofp i64 %71 to double
  %73 = fdiv double %72, 1.000000e+06
  store double %73, double* %6, align 8
  %74 = load double, double* %6, align 8
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.240, i64 0, i64 0), double %74)
  %76 = load float, float* %9, align 4
  %77 = load i32, i32* %8, align 4
  %78 = sitofp i32 %77 to float
  %79 = fadd float %76, %78
  %80 = fadd float %79, 1.000000e+00
  store float %80, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s319() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %60, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 100000
  br i1 %12, label %13, label %63

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %54, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %57

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %26, float* %29, align 4
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load float, float* %5, align 4
  %35 = fadd float %34, %33
  store float %35, float* %5, align 4
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fadd float %39, %43
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %46
  store float %44, float* %47, align 4
  %48 = load i32, i32* %7, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %49
  %51 = load float, float* %50, align 4
  %52 = load float, float* %5, align 4
  %53 = fadd float %52, %51
  store float %53, float* %5, align 4
  br label %54

54:                                               ; preds = %17
  %55 = load i32, i32* %7, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %7, align 4
  br label %14

57:                                               ; preds = %14
  %58 = load float, float* %5, align 4
  %59 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %58)
  br label %60

60:                                               ; preds = %57
  %61 = load i32, i32* %6, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %6, align 4
  br label %10

63:                                               ; preds = %10
  %64 = call i64 @clock() #9
  store i64 %64, i64* %2, align 8
  %65 = load i64, i64* %2, align 8
  %66 = load i64, i64* %1, align 8
  %67 = sub nsw i64 %65, %66
  store i64 %67, i64* %3, align 8
  %68 = load i64, i64* %3, align 8
  %69 = sitofp i64 %68 to double
  %70 = fdiv double %69, 1.000000e+06
  store double %70, double* %4, align 8
  %71 = load double, double* %4, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.241, i64 0, i64 0), double %71)
  %73 = load float, float* %5, align 4
  store float %73, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s319p() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %68, %0
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 100000
  br i1 %13, label %14, label %71

14:                                               ; preds = %11
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %43, %14
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %46

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = fadd float %22, %26
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  store float %27, float* %30, align 4
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = fadd float %34, %38
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  store float %39, float* %42, align 4
  br label %43

43:                                               ; preds = %18
  %44 = load i32, i32* %7, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %7, align 4
  br label %15

46:                                               ; preds = %15
  store i32 0, i32* %8, align 4
  br label %47

47:                                               ; preds = %62, %46
  %48 = load i32, i32* %8, align 4
  %49 = icmp slt i32 %48, 32000
  br i1 %49, label %50, label %65

50:                                               ; preds = %47
  %51 = load i32, i32* %8, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 4
  %55 = load i32, i32* %8, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %56
  %58 = load float, float* %57, align 4
  %59 = fadd float %54, %58
  %60 = load float, float* %5, align 4
  %61 = fadd float %60, %59
  store float %61, float* %5, align 4
  br label %62

62:                                               ; preds = %50
  %63 = load i32, i32* %8, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %8, align 4
  br label %47

65:                                               ; preds = %47
  %66 = load float, float* %5, align 4
  %67 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %66)
  br label %68

68:                                               ; preds = %65
  %69 = load i32, i32* %6, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %6, align 4
  br label %11

71:                                               ; preds = %11
  %72 = call i64 @clock() #9
  store i64 %72, i64* %2, align 8
  %73 = load i64, i64* %2, align 8
  %74 = load i64, i64* %1, align 8
  %75 = sub nsw i64 %73, %74
  store i64 %75, i64* %3, align 8
  %76 = load i64, i64* %3, align 8
  %77 = sitofp i64 %76 to double
  %78 = fdiv double %77, 1.000000e+06
  store double %78, double* %4, align 8
  %79 = load double, double* %4, align 8
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.242, i64 0, i64 0), double %79)
  %81 = load float, float* %5, align 4
  store float %81, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s319pp() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %59, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 100000
  br i1 %12, label %13, label %62

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %53, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %56

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %26, float* %29, align 4
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fadd float %33, %37
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  store float %38, float* %41, align 4
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = load i32, i32* %7, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fadd float %45, %49
  %51 = load float, float* %5, align 4
  %52 = fadd float %51, %50
  store float %52, float* %5, align 4
  br label %53

53:                                               ; preds = %17
  %54 = load i32, i32* %7, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %7, align 4
  br label %14

56:                                               ; preds = %14
  %57 = load float, float* %5, align 4
  %58 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %57)
  br label %59

59:                                               ; preds = %56
  %60 = load i32, i32* %6, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %6, align 4
  br label %10

62:                                               ; preds = %10
  %63 = call i64 @clock() #9
  store i64 %63, i64* %2, align 8
  %64 = load i64, i64* %2, align 8
  %65 = load i64, i64* %1, align 8
  %66 = sub nsw i64 %64, %65
  store i64 %66, i64* %3, align 8
  %67 = load i64, i64* %3, align 8
  %68 = sitofp i64 %67 to double
  %69 = fdiv double %68, 1.000000e+06
  store double %69, double* %4, align 8
  %70 = load double, double* %4, align 8
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.243, i64 0, i64 0), double %70)
  %72 = load float, float* %5, align 4
  store float %72, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s319ppp() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %185, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 100000
  br i1 %12, label %13, label %188

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %179, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %182

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %26, float* %29, align 4
  %30 = load i32, i32* %7, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fadd float %33, %37
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %40
  store float %38, float* %41, align 4
  %42 = load i32, i32* %7, align 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = load i32, i32* %7, align 4
  %48 = add nsw i32 %47, 1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %49
  %51 = load float, float* %50, align 4
  %52 = fadd float %46, %51
  %53 = load i32, i32* %7, align 4
  %54 = add nsw i32 %53, 1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %55
  store float %52, float* %56, align 4
  %57 = load i32, i32* %7, align 4
  %58 = add nsw i32 %57, 1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %59
  %61 = load float, float* %60, align 4
  %62 = load i32, i32* %7, align 4
  %63 = add nsw i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %64
  %66 = load float, float* %65, align 4
  %67 = fadd float %61, %66
  %68 = load i32, i32* %7, align 4
  %69 = add nsw i32 %68, 1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %70
  store float %67, float* %71, align 4
  %72 = load i32, i32* %7, align 4
  %73 = add nsw i32 %72, 2
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %74
  %76 = load float, float* %75, align 4
  %77 = load i32, i32* %7, align 4
  %78 = add nsw i32 %77, 2
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %79
  %81 = load float, float* %80, align 4
  %82 = fadd float %76, %81
  %83 = load i32, i32* %7, align 4
  %84 = add nsw i32 %83, 2
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %85
  store float %82, float* %86, align 4
  %87 = load i32, i32* %7, align 4
  %88 = add nsw i32 %87, 2
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %89
  %91 = load float, float* %90, align 4
  %92 = load i32, i32* %7, align 4
  %93 = add nsw i32 %92, 2
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %94
  %96 = load float, float* %95, align 4
  %97 = fadd float %91, %96
  %98 = load i32, i32* %7, align 4
  %99 = add nsw i32 %98, 2
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %100
  store float %97, float* %101, align 4
  %102 = load i32, i32* %7, align 4
  %103 = add nsw i32 %102, 3
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %104
  %106 = load float, float* %105, align 4
  %107 = load i32, i32* %7, align 4
  %108 = add nsw i32 %107, 3
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %109
  %111 = load float, float* %110, align 4
  %112 = fadd float %106, %111
  %113 = load i32, i32* %7, align 4
  %114 = add nsw i32 %113, 3
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %115
  store float %112, float* %116, align 4
  %117 = load i32, i32* %7, align 4
  %118 = add nsw i32 %117, 3
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %119
  %121 = load float, float* %120, align 4
  %122 = load i32, i32* %7, align 4
  %123 = add nsw i32 %122, 3
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %124
  %126 = load float, float* %125, align 4
  %127 = fadd float %121, %126
  %128 = load i32, i32* %7, align 4
  %129 = add nsw i32 %128, 3
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %130
  store float %127, float* %131, align 4
  %132 = load i32, i32* %7, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %133
  %135 = load float, float* %134, align 4
  %136 = load i32, i32* %7, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %137
  %139 = load float, float* %138, align 4
  %140 = fadd float %135, %139
  %141 = load i32, i32* %7, align 4
  %142 = add nsw i32 %141, 1
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %143
  %145 = load float, float* %144, align 4
  %146 = fadd float %140, %145
  %147 = load i32, i32* %7, align 4
  %148 = add nsw i32 %147, 1
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %149
  %151 = load float, float* %150, align 4
  %152 = fadd float %146, %151
  %153 = load i32, i32* %7, align 4
  %154 = add nsw i32 %153, 2
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %155
  %157 = load float, float* %156, align 4
  %158 = fadd float %152, %157
  %159 = load i32, i32* %7, align 4
  %160 = add nsw i32 %159, 2
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %161
  %163 = load float, float* %162, align 4
  %164 = fadd float %158, %163
  %165 = load i32, i32* %7, align 4
  %166 = add nsw i32 %165, 3
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %167
  %169 = load float, float* %168, align 4
  %170 = fadd float %164, %169
  %171 = load i32, i32* %7, align 4
  %172 = add nsw i32 %171, 3
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %173
  %175 = load float, float* %174, align 4
  %176 = fadd float %170, %175
  %177 = load float, float* %5, align 4
  %178 = fadd float %177, %176
  store float %178, float* %5, align 4
  br label %179

179:                                              ; preds = %17
  %180 = load i32, i32* %7, align 4
  %181 = add nsw i32 %180, 4
  store i32 %181, i32* %7, align 4
  br label %14

182:                                              ; preds = %14
  %183 = load float, float* %5, align 4
  %184 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %183)
  br label %185

185:                                              ; preds = %182
  %186 = load i32, i32* %6, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* %6, align 4
  br label %10

188:                                              ; preds = %10
  %189 = call i64 @clock() #9
  store i64 %189, i64* %2, align 8
  %190 = load i64, i64* %2, align 8
  %191 = load i64, i64* %1, align 8
  %192 = sub nsw i64 %190, %191
  store i64 %192, i64* %3, align 8
  %193 = load i64, i64* %3, align 8
  %194 = sitofp i64 %193 to double
  %195 = fdiv double %194, 1.000000e+06
  store double %195, double* %4, align 8
  %196 = load double, double* %4, align 8
  %197 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.244, i64 0, i64 0), double %196)
  %198 = load float, float* %5, align 4
  store float %198, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s3110() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0))
  %13 = call i64 @clock() #9
  store i64 %13, i64* %1, align 8
  store i32 0, i32* %9, align 4
  br label %14

14:                                               ; preds = %64, %0
  %15 = load i32, i32* %9, align 4
  %16 = icmp slt i32 %15, 19500
  br i1 %16, label %17, label %67

17:                                               ; preds = %14
  %18 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 0), align 16
  store float %18, float* %7, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %10, align 4
  br label %19

19:                                               ; preds = %51, %17
  %20 = load i32, i32* %10, align 4
  %21 = icmp slt i32 %20, 256
  br i1 %21, label %22, label %54

22:                                               ; preds = %19
  store i32 0, i32* %11, align 4
  br label %23

23:                                               ; preds = %47, %22
  %24 = load i32, i32* %11, align 4
  %25 = icmp slt i32 %24, 256
  br i1 %25, label %26, label %50

26:                                               ; preds = %23
  %27 = load i32, i32* %10, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %28
  %30 = load i32, i32* %11, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x float], [256 x float]* %29, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load float, float* %7, align 4
  %35 = fcmp ogt float %33, %34
  br i1 %35, label %36, label %46

36:                                               ; preds = %26
  %37 = load i32, i32* %10, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %38
  %40 = load i32, i32* %11, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [256 x float], [256 x float]* %39, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  store float %43, float* %7, align 4
  %44 = load i32, i32* %10, align 4
  store i32 %44, i32* %5, align 4
  %45 = load i32, i32* %11, align 4
  store i32 %45, i32* %6, align 4
  br label %46

46:                                               ; preds = %36, %26
  br label %47

47:                                               ; preds = %46
  %48 = load i32, i32* %11, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %11, align 4
  br label %23

50:                                               ; preds = %23
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %10, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %10, align 4
  br label %19

54:                                               ; preds = %19
  %55 = load float, float* %7, align 4
  %56 = load i32, i32* %5, align 4
  %57 = sitofp i32 %56 to float
  %58 = fadd float %55, %57
  %59 = load i32, i32* %6, align 4
  %60 = sitofp i32 %59 to float
  %61 = fadd float %58, %60
  store float %61, float* %8, align 4
  %62 = load float, float* %8, align 4
  %63 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %62)
  br label %64

64:                                               ; preds = %54
  %65 = load i32, i32* %9, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %9, align 4
  br label %14

67:                                               ; preds = %14
  %68 = call i64 @clock() #9
  store i64 %68, i64* %2, align 8
  %69 = load i64, i64* %2, align 8
  %70 = load i64, i64* %1, align 8
  %71 = sub nsw i64 %69, %70
  store i64 %71, i64* %3, align 8
  %72 = load i64, i64* %3, align 8
  %73 = sitofp i64 %72 to double
  %74 = fdiv double %73, 1.000000e+06
  store double %74, double* %4, align 8
  %75 = load double, double* %4, align 8
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.245, i64 0, i64 0), double %75)
  %77 = load float, float* %7, align 4
  %78 = load i32, i32* %5, align 4
  %79 = sitofp i32 %78 to float
  %80 = fadd float %77, %79
  %81 = fadd float %80, 1.000000e+00
  %82 = load i32, i32* %6, align 4
  %83 = sitofp i32 %82 to float
  %84 = fadd float %81, %83
  %85 = fadd float %84, 1.000000e+00
  store float %85, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s13110() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0))
  %13 = call i64 @clock() #9
  store i64 %13, i64* %1, align 8
  store i32 0, i32* %9, align 4
  br label %14

14:                                               ; preds = %62, %0
  %15 = load i32, i32* %9, align 4
  %16 = icmp slt i32 %15, 19500
  br i1 %16, label %17, label %65

17:                                               ; preds = %14
  %18 = load float, float* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0, i64 0), align 16
  store float %18, float* %7, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %10, align 4
  br label %19

19:                                               ; preds = %49, %17
  %20 = load i32, i32* %10, align 4
  %21 = icmp slt i32 %20, 256
  br i1 %21, label %22, label %52

22:                                               ; preds = %19
  store i32 0, i32* %11, align 4
  br label %23

23:                                               ; preds = %45, %22
  %24 = load i32, i32* %11, align 4
  %25 = icmp slt i32 %24, 256
  br i1 %25, label %26, label %48

26:                                               ; preds = %23
  %27 = load i32, i32* %10, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %28
  %30 = load i32, i32* %11, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x float], [256 x float]* %29, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load float, float* %7, align 4
  %35 = fcmp ogt float %33, %34
  br i1 %35, label %36, label %44

36:                                               ; preds = %26
  %37 = load i32, i32* %10, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %38
  %40 = load i32, i32* %11, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [256 x float], [256 x float]* %39, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  store float %43, float* %7, align 4
  br label %44

44:                                               ; preds = %36, %26
  br label %45

45:                                               ; preds = %44
  %46 = load i32, i32* %11, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %11, align 4
  br label %23

48:                                               ; preds = %23
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %10, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %10, align 4
  br label %19

52:                                               ; preds = %19
  %53 = load float, float* %7, align 4
  %54 = load i32, i32* %5, align 4
  %55 = sitofp i32 %54 to float
  %56 = fadd float %53, %55
  %57 = load i32, i32* %6, align 4
  %58 = sitofp i32 %57 to float
  %59 = fadd float %56, %58
  store float %59, float* %8, align 4
  %60 = load float, float* %8, align 4
  %61 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %60)
  br label %62

62:                                               ; preds = %52
  %63 = load i32, i32* %9, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %9, align 4
  br label %14

65:                                               ; preds = %14
  %66 = call i64 @clock() #9
  store i64 %66, i64* %2, align 8
  %67 = load i64, i64* %2, align 8
  %68 = load i64, i64* %1, align 8
  %69 = sub nsw i64 %67, %68
  store i64 %69, i64* %3, align 8
  %70 = load i64, i64* %3, align 8
  %71 = sitofp i64 %70 to double
  %72 = fdiv double %71, 1.000000e+06
  store double %72, double* %4, align 8
  %73 = load double, double* %4, align 8
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.246, i64 0, i64 0), double %73)
  %75 = load float, float* %7, align 4
  %76 = load i32, i32* %5, align 4
  %77 = sitofp i32 %76 to float
  %78 = fadd float %75, %77
  %79 = fadd float %78, 1.000000e+00
  %80 = load i32, i32* %6, align 4
  %81 = sitofp i32 %80 to float
  %82 = fadd float %79, %81
  %83 = fadd float %82, 1.000000e+00
  store float %83, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s3111() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %37, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 25000
  br i1 %12, label %13, label %40

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %31, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %34

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = fcmp ogt float %21, 0.000000e+00
  br i1 %22, label %23, label %30

23:                                               ; preds = %17
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = load float, float* %5, align 4
  %29 = fadd float %28, %27
  store float %29, float* %5, align 4
  br label %30

30:                                               ; preds = %23, %17
  br label %31

31:                                               ; preds = %30
  %32 = load i32, i32* %7, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %7, align 4
  br label %14

34:                                               ; preds = %14
  %35 = load float, float* %5, align 4
  %36 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %35)
  br label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %6, align 4
  br label %10

40:                                               ; preds = %10
  %41 = call i64 @clock() #9
  store i64 %41, i64* %2, align 8
  %42 = load i64, i64* %2, align 8
  %43 = load i64, i64* %1, align 8
  %44 = sub nsw i64 %42, %43
  store i64 %44, i64* %3, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  store double %47, double* %4, align 8
  %48 = load double, double* %4, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.247, i64 0, i64 0), double %48)
  %50 = load float, float* %5, align 4
  store float %50, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s3112() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %34, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 50000
  br i1 %12, label %13, label %37

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %28, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %31

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load float, float* %5, align 4
  %23 = fadd float %22, %21
  store float %23, float* %5, align 4
  %24 = load float, float* %5, align 4
  %25 = load i32, i32* %7, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  store float %24, float* %27, align 4
  br label %28

28:                                               ; preds = %17
  %29 = load i32, i32* %7, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %7, align 4
  br label %14

31:                                               ; preds = %14
  %32 = load float, float* %5, align 4
  %33 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %32)
  br label %34

34:                                               ; preds = %31
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %6, align 4
  br label %10

37:                                               ; preds = %10
  %38 = call i64 @clock() #9
  store i64 %38, i64* %2, align 8
  %39 = load i64, i64* %2, align 8
  %40 = load i64, i64* %1, align 8
  %41 = sub nsw i64 %39, %40
  store i64 %41, i64* %3, align 8
  %42 = load i64, i64* %3, align 8
  %43 = sitofp i64 %42 to double
  %44 = fdiv double %43, 1.000000e+06
  store double %44, double* %4, align 8
  %45 = load double, double* %4, align 8
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.248, i64 0, i64 0), double %45)
  %47 = load float, float* %5, align 4
  store float %47, float* @temp, align 4
  call void @check(i32 -12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s3113() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %46, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 200000
  br i1 %12, label %13, label %49

13:                                               ; preds = %10
  %14 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), align 16
  %15 = fpext float %14 to double
  %16 = call double @llvm.fabs.f64(double %15)
  %17 = fptrunc double %16 to float
  store float %17, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %40, %13
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 32000
  br i1 %20, label %21, label %43

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fpext float %25 to double
  %27 = call double @llvm.fabs.f64(double %26)
  %28 = load float, float* %5, align 4
  %29 = fpext float %28 to double
  %30 = fcmp ogt double %27, %29
  br i1 %30, label %31, label %39

31:                                               ; preds = %21
  %32 = load i32, i32* %7, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fpext float %35 to double
  %37 = call double @llvm.fabs.f64(double %36)
  %38 = fptrunc double %37 to float
  store float %38, float* %5, align 4
  br label %39

39:                                               ; preds = %31, %21
  br label %40

40:                                               ; preds = %39
  %41 = load i32, i32* %7, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %7, align 4
  br label %18

43:                                               ; preds = %18
  %44 = load float, float* %5, align 4
  %45 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %44)
  br label %46

46:                                               ; preds = %43
  %47 = load i32, i32* %6, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %6, align 4
  br label %10

49:                                               ; preds = %10
  %50 = call i64 @clock() #9
  store i64 %50, i64* %2, align 8
  %51 = load i64, i64* %2, align 8
  %52 = load i64, i64* %1, align 8
  %53 = sub nsw i64 %51, %52
  store i64 %53, i64* %3, align 8
  %54 = load i64, i64* %3, align 8
  %55 = sitofp i64 %54 to double
  %56 = fdiv double %55, 1.000000e+06
  store double %56, double* %4, align 8
  %57 = load double, double* %4, align 8
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.249, i64 0, i64 0), double %57)
  %59 = load float, float* %5, align 4
  store float %59, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s321() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %37, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %40

12:                                               ; preds = %9
  store i32 1, i32* %6, align 4
  br label %13

13:                                               ; preds = %32, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %35

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sub nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fmul float %21, %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fadd float %30, %26
  store float %31, float* %29, align 4
  br label %32

32:                                               ; preds = %16
  %33 = load i32, i32* %6, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %6, align 4
  br label %13

35:                                               ; preds = %13
  %36 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %5, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %5, align 4
  br label %9

40:                                               ; preds = %9
  %41 = call i64 @clock() #9
  store i64 %41, i64* %2, align 8
  %42 = load i64, i64* %2, align 8
  %43 = load i64, i64* %1, align 8
  %44 = sub nsw i64 %42, %43
  store i64 %44, i64* %3, align 8
  %45 = load i64, i64* %3, align 8
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %46, 1.000000e+06
  store double %47, double* %4, align 8
  %48 = load double, double* %4, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.250, i64 0, i64 0), double %48)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s322() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %51, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 25000
  br i1 %11, label %12, label %54

12:                                               ; preds = %9
  store i32 2, i32* %6, align 4
  br label %13

13:                                               ; preds = %46, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %49

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sub nsw i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fmul float %25, %29
  %31 = fadd float %20, %30
  %32 = load i32, i32* %6, align 4
  %33 = sub nsw i32 %32, 2
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = load i32, i32* %6, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = fmul float %36, %40
  %42 = fadd float %31, %41
  %43 = load i32, i32* %6, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  store float %42, float* %45, align 4
  br label %46

46:                                               ; preds = %16
  %47 = load i32, i32* %6, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %6, align 4
  br label %13

49:                                               ; preds = %13
  %50 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %51

51:                                               ; preds = %49
  %52 = load i32, i32* %5, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %5, align 4
  br label %9

54:                                               ; preds = %9
  %55 = call i64 @clock() #9
  store i64 %55, i64* %2, align 8
  %56 = load i64, i64* %2, align 8
  %57 = load i64, i64* %1, align 8
  %58 = sub nsw i64 %56, %57
  store i64 %58, i64* %3, align 8
  %59 = load i64, i64* %3, align 8
  %60 = sitofp i64 %59 to double
  %61 = fdiv double %60, 1.000000e+06
  store double %61, double* %4, align 8
  %62 = load double, double* %4, align 8
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.251, i64 0, i64 0), double %62)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s323() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %57, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 25000
  br i1 %11, label %12, label %60

12:                                               ; preds = %9
  store i32 1, i32* %6, align 4
  br label %13

13:                                               ; preds = %52, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %55

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sub nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fmul float %25, %29
  %31 = fadd float %21, %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  store float %31, float* %34, align 4
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %40
  %42 = load float, float* %41, align 4
  %43 = load i32, i32* %6, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = fmul float %42, %46
  %48 = fadd float %38, %47
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %50
  store float %48, float* %51, align 4
  br label %52

52:                                               ; preds = %16
  %53 = load i32, i32* %6, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %6, align 4
  br label %13

55:                                               ; preds = %13
  %56 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %57

57:                                               ; preds = %55
  %58 = load i32, i32* %5, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %5, align 4
  br label %9

60:                                               ; preds = %9
  %61 = call i64 @clock() #9
  store i64 %61, i64* %2, align 8
  %62 = load i64, i64* %2, align 8
  %63 = load i64, i64* %1, align 8
  %64 = sub nsw i64 %62, %63
  store i64 %64, i64* %3, align 8
  %65 = load i64, i64* %3, align 8
  %66 = sitofp i64 %65 to double
  %67 = fdiv double %66, 1.000000e+06
  store double %67, double* %4, align 8
  %68 = load double, double* %4, align 8
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.252, i64 0, i64 0), double %68)
  call void @check(i32 12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s331() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %35, %0
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %38

14:                                               ; preds = %11
  store i32 -1, i32* %5, align 4
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %27, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %30

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = fcmp olt float %22, 0.000000e+00
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = load i32, i32* %8, align 4
  store i32 %25, i32* %5, align 4
  br label %26

26:                                               ; preds = %24, %18
  br label %27

27:                                               ; preds = %26
  %28 = load i32, i32* %8, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %8, align 4
  br label %15

30:                                               ; preds = %15
  %31 = load i32, i32* %5, align 4
  %32 = sitofp i32 %31 to float
  store float %32, float* %6, align 4
  %33 = load float, float* %6, align 4
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %33)
  br label %35

35:                                               ; preds = %30
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %11

38:                                               ; preds = %11
  %39 = call i64 @clock() #9
  store i64 %39, i64* %2, align 8
  %40 = load i64, i64* %2, align 8
  %41 = load i64, i64* %1, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %3, align 8
  %43 = load i64, i64* %3, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %4, align 8
  %46 = load double, double* %4, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.253, i64 0, i64 0), double %46)
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  %50 = sitofp i32 %49 to float
  store float %50, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @max(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = load i32, i32* %5, align 4
  store i32 %10, i32* %3, align 4
  br label %13

11:                                               ; preds = %2
  %12 = load i32, i32* %4, align 4
  store i32 %12, i32* %3, align 4
  br label %13

13:                                               ; preds = %11, %9
  %14 = load i32, i32* %3, align 4
  ret i32 %14
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s332(float %0) #0 {
  %2 = alloca float, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store float %0, float* %2, align 4
  %12 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0))
  %13 = call i64 @clock() #9
  store i64 %13, i64* %3, align 8
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %46, %1
  %15 = load i32, i32* %10, align 4
  %16 = icmp slt i32 %15, 50000
  br i1 %16, label %17, label %49

17:                                               ; preds = %14
  store i32 -2, i32* %7, align 4
  store float -1.000000e+00, float* %8, align 4
  store i32 0, i32* %11, align 4
  br label %18

18:                                               ; preds = %35, %17
  %19 = load i32, i32* %11, align 4
  %20 = icmp slt i32 %19, 32000
  br i1 %20, label %21, label %38

21:                                               ; preds = %18
  %22 = load i32, i32* %11, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = load float, float* %2, align 4
  %27 = fcmp ogt float %25, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %21
  %29 = load i32, i32* %11, align 4
  store i32 %29, i32* %7, align 4
  %30 = load i32, i32* %11, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  store float %33, float* %8, align 4
  br label %39

34:                                               ; preds = %21
  br label %35

35:                                               ; preds = %34
  %36 = load i32, i32* %11, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %11, align 4
  br label %18

38:                                               ; preds = %18
  br label %39

39:                                               ; preds = %38, %28
  %40 = load float, float* %8, align 4
  %41 = load i32, i32* %7, align 4
  %42 = sitofp i32 %41 to float
  %43 = fadd float %40, %42
  store float %43, float* %9, align 4
  %44 = load float, float* %9, align 4
  %45 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %44)
  br label %46

46:                                               ; preds = %39
  %47 = load i32, i32* %10, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %10, align 4
  br label %14

49:                                               ; preds = %14
  %50 = call i64 @clock() #9
  store i64 %50, i64* %4, align 8
  %51 = load i64, i64* %4, align 8
  %52 = load i64, i64* %3, align 8
  %53 = sub nsw i64 %51, %52
  store i64 %53, i64* %5, align 8
  %54 = load i64, i64* %5, align 8
  %55 = sitofp i64 %54 to double
  %56 = fdiv double %55, 1.000000e+06
  store double %56, double* %6, align 8
  %57 = load double, double* %6, align 8
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.254, i64 0, i64 0), double %57)
  %59 = load float, float* %8, align 4
  store float %59, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s341() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %40, %0
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %43

14:                                               ; preds = %11
  store i32 -1, i32* %5, align 4
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %35, %14
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %38

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = fcmp ogt float %22, 0.000000e+00
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %5, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %5, align 4
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %5, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %30, float* %33, align 4
  br label %34

34:                                               ; preds = %24, %18
  br label %35

35:                                               ; preds = %34
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %15

38:                                               ; preds = %15
  %39 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %40

40:                                               ; preds = %38
  %41 = load i32, i32* %6, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %6, align 4
  br label %11

43:                                               ; preds = %11
  %44 = call i64 @clock() #9
  store i64 %44, i64* %2, align 8
  %45 = load i64, i64* %2, align 8
  %46 = load i64, i64* %1, align 8
  %47 = sub nsw i64 %45, %46
  store i64 %47, i64* %3, align 8
  %48 = load i64, i64* %3, align 8
  %49 = sitofp i64 %48 to double
  %50 = fdiv double %49, 1.000000e+06
  store double %50, double* %4, align 8
  %51 = load double, double* %4, align 8
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.255, i64 0, i64 0), double %51)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s342() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %40, %0
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %43

14:                                               ; preds = %11
  store i32 -1, i32* %5, align 4
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %35, %14
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %38

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = fcmp ogt float %22, 0.000000e+00
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %5, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %5, align 4
  %27 = load i32, i32* %5, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %30, float* %33, align 4
  br label %34

34:                                               ; preds = %24, %18
  br label %35

35:                                               ; preds = %34
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %15

38:                                               ; preds = %15
  %39 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %40

40:                                               ; preds = %38
  %41 = load i32, i32* %6, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %6, align 4
  br label %11

43:                                               ; preds = %11
  %44 = call i64 @clock() #9
  store i64 %44, i64* %2, align 8
  %45 = load i64, i64* %2, align 8
  %46 = load i64, i64* %1, align 8
  %47 = sub nsw i64 %45, %46
  store i64 %47, i64* %3, align 8
  %48 = load i64, i64* %3, align 8
  %49 = sitofp i64 %48 to double
  %50 = fdiv double %49, 1.000000e+06
  store double %50, double* %4, align 8
  %51 = load double, double* %4, align 8
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.256, i64 0, i64 0), double %51)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s343() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  %10 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0))
  %11 = call i64 @clock() #9
  store i64 %11, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %12

12:                                               ; preds = %55, %0
  %13 = load i32, i32* %6, align 4
  %14 = icmp slt i32 %13, 1950
  br i1 %14, label %15, label %58

15:                                               ; preds = %12
  store i32 -1, i32* %5, align 4
  store i32 0, i32* %7, align 4
  br label %16

16:                                               ; preds = %50, %15
  %17 = load i32, i32* %7, align 4
  %18 = icmp slt i32 %17, 256
  br i1 %18, label %19, label %53

19:                                               ; preds = %16
  store i32 0, i32* %8, align 4
  br label %20

20:                                               ; preds = %46, %19
  %21 = load i32, i32* %8, align 4
  %22 = icmp slt i32 %21, 256
  br i1 %22, label %23, label %49

23:                                               ; preds = %20
  %24 = load i32, i32* %8, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 %25
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [256 x float], [256 x float]* %26, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fcmp ogt float %30, 0.000000e+00
  br i1 %31, label %32, label %45

32:                                               ; preds = %23
  %33 = load i32, i32* %5, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %5, align 4
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %36
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x float], [256 x float]* %37, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = load i32, i32* %5, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %43
  store float %41, float* %44, align 4
  br label %45

45:                                               ; preds = %32, %23
  br label %46

46:                                               ; preds = %45
  %47 = load i32, i32* %8, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %8, align 4
  br label %20

49:                                               ; preds = %20
  br label %50

50:                                               ; preds = %49
  %51 = load i32, i32* %7, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %7, align 4
  br label %16

53:                                               ; preds = %16
  %54 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %55

55:                                               ; preds = %53
  %56 = load i32, i32* %6, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %6, align 4
  br label %12

58:                                               ; preds = %12
  %59 = call i64 @clock() #9
  store i64 %59, i64* %2, align 8
  %60 = load i64, i64* %2, align 8
  %61 = load i64, i64* %1, align 8
  %62 = sub nsw i64 %60, %61
  store i64 %62, i64* %3, align 8
  %63 = load i64, i64* %3, align 8
  %64 = sitofp i64 %63 to double
  %65 = fdiv double %64, 1.000000e+06
  store double %65, double* %4, align 8
  %66 = load double, double* %4, align 8
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.257, i64 0, i64 0), double %66)
  call void @check(i32 0)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s351() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  %11 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16
  store float %11, float* %5, align 4
  store i32 0, i32* %6, align 4
  br label %12

12:                                               ; preds = %88, %0
  %13 = load i32, i32* %6, align 4
  %14 = icmp slt i32 %13, 400000
  br i1 %14, label %15, label %91

15:                                               ; preds = %12
  store i32 0, i32* %7, align 4
  br label %16

16:                                               ; preds = %83, %15
  %17 = load i32, i32* %7, align 4
  %18 = icmp slt i32 %17, 32000
  br i1 %18, label %19, label %86

19:                                               ; preds = %16
  %20 = load float, float* %5, align 4
  %21 = load i32, i32* %7, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, %25
  store float %30, float* %28, align 4
  %31 = load float, float* %5, align 4
  %32 = load i32, i32* %7, align 4
  %33 = add nsw i32 %32, 1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fmul float %31, %36
  %38 = load i32, i32* %7, align 4
  %39 = add nsw i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %40
  %42 = load float, float* %41, align 4
  %43 = fadd float %42, %37
  store float %43, float* %41, align 4
  %44 = load float, float* %5, align 4
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 2
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fmul float %44, %49
  %51 = load i32, i32* %7, align 4
  %52 = add nsw i32 %51, 2
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %53
  %55 = load float, float* %54, align 4
  %56 = fadd float %55, %50
  store float %56, float* %54, align 4
  %57 = load float, float* %5, align 4
  %58 = load i32, i32* %7, align 4
  %59 = add nsw i32 %58, 3
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %60
  %62 = load float, float* %61, align 4
  %63 = fmul float %57, %62
  %64 = load i32, i32* %7, align 4
  %65 = add nsw i32 %64, 3
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %66
  %68 = load float, float* %67, align 4
  %69 = fadd float %68, %63
  store float %69, float* %67, align 4
  %70 = load float, float* %5, align 4
  %71 = load i32, i32* %7, align 4
  %72 = add nsw i32 %71, 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %73
  %75 = load float, float* %74, align 4
  %76 = fmul float %70, %75
  %77 = load i32, i32* %7, align 4
  %78 = add nsw i32 %77, 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %79
  %81 = load float, float* %80, align 4
  %82 = fadd float %81, %76
  store float %82, float* %80, align 4
  br label %83

83:                                               ; preds = %19
  %84 = load i32, i32* %7, align 4
  %85 = add nsw i32 %84, 5
  store i32 %85, i32* %7, align 4
  br label %16

86:                                               ; preds = %16
  %87 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %88

88:                                               ; preds = %86
  %89 = load i32, i32* %6, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %6, align 4
  br label %12

91:                                               ; preds = %12
  %92 = call i64 @clock() #9
  store i64 %92, i64* %2, align 8
  %93 = load i64, i64* %2, align 8
  %94 = load i64, i64* %1, align 8
  %95 = sub nsw i64 %93, %94
  store i64 %95, i64* %3, align 8
  %96 = load i64, i64* %3, align 8
  %97 = sitofp i64 %96 to double
  %98 = fdiv double %97, 1.000000e+06
  store double %98, double* %4, align 8
  %99 = load double, double* %4, align 8
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.258, i64 0, i64 0), double %99)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1351() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca float*, align 8
  %7 = alloca float*, align 8
  %8 = alloca float*, align 8
  %9 = alloca i32, align 4
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  %11 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i64 0, i64 0))
  %12 = call i64 @clock() #9
  store i64 %12, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %13

13:                                               ; preds = %38, %0
  %14 = load i32, i32* %5, align 4
  %15 = icmp slt i32 %14, 400000
  br i1 %15, label %16, label %41

16:                                               ; preds = %13
  store float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float** %6, align 8
  store float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float** %7, align 8
  store float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float** %8, align 8
  store i32 0, i32* %9, align 4
  br label %17

17:                                               ; preds = %33, %16
  %18 = load i32, i32* %9, align 4
  %19 = icmp slt i32 %18, 32000
  br i1 %19, label %20, label %36

20:                                               ; preds = %17
  %21 = load float*, float** %7, align 8
  %22 = load float, float* %21, align 4
  %23 = load float*, float** %8, align 8
  %24 = load float, float* %23, align 4
  %25 = fadd float %22, %24
  %26 = load float*, float** %6, align 8
  store float %25, float* %26, align 4
  %27 = load float*, float** %6, align 8
  %28 = getelementptr inbounds float, float* %27, i32 1
  store float* %28, float** %6, align 8
  %29 = load float*, float** %7, align 8
  %30 = getelementptr inbounds float, float* %29, i32 1
  store float* %30, float** %7, align 8
  %31 = load float*, float** %8, align 8
  %32 = getelementptr inbounds float, float* %31, i32 1
  store float* %32, float** %8, align 8
  br label %33

33:                                               ; preds = %20
  %34 = load i32, i32* %9, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %9, align 4
  br label %17

36:                                               ; preds = %17
  %37 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %5, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %5, align 4
  br label %13

41:                                               ; preds = %13
  %42 = call i64 @clock() #9
  store i64 %42, i64* %2, align 8
  %43 = load i64, i64* %2, align 8
  %44 = load i64, i64* %1, align 8
  %45 = sub nsw i64 %43, %44
  store i64 %45, i64* %3, align 8
  %46 = load i64, i64* %3, align 8
  %47 = sitofp i64 %46 to double
  %48 = fdiv double %47, 1.000000e+06
  store double %48, double* %4, align 8
  %49 = load double, double* %4, align 8
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.259, i64 0, i64 0), double %49)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s352() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %84, %0
  %12 = load i32, i32* %6, align 4
  %13 = icmp slt i32 %12, 400000
  br i1 %13, label %14, label %87

14:                                               ; preds = %11
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %78, %14
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %81

18:                                               ; preds = %15
  %19 = load float, float* %5, align 4
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = fmul float %23, %27
  %29 = fadd float %19, %28
  %30 = load i32, i32* %7, align 4
  %31 = add nsw i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load i32, i32* %7, align 4
  %36 = add nsw i32 %35, 1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fmul float %34, %39
  %41 = fadd float %29, %40
  %42 = load i32, i32* %7, align 4
  %43 = add nsw i32 %42, 2
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = load i32, i32* %7, align 4
  %48 = add nsw i32 %47, 2
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %49
  %51 = load float, float* %50, align 4
  %52 = fmul float %46, %51
  %53 = fadd float %41, %52
  %54 = load i32, i32* %7, align 4
  %55 = add nsw i32 %54, 3
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %56
  %58 = load float, float* %57, align 4
  %59 = load i32, i32* %7, align 4
  %60 = add nsw i32 %59, 3
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %61
  %63 = load float, float* %62, align 4
  %64 = fmul float %58, %63
  %65 = fadd float %53, %64
  %66 = load i32, i32* %7, align 4
  %67 = add nsw i32 %66, 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %68
  %70 = load float, float* %69, align 4
  %71 = load i32, i32* %7, align 4
  %72 = add nsw i32 %71, 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %73
  %75 = load float, float* %74, align 4
  %76 = fmul float %70, %75
  %77 = fadd float %65, %76
  store float %77, float* %5, align 4
  br label %78

78:                                               ; preds = %18
  %79 = load i32, i32* %7, align 4
  %80 = add nsw i32 %79, 5
  store i32 %80, i32* %7, align 4
  br label %15

81:                                               ; preds = %15
  %82 = load float, float* %5, align 4
  %83 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %82)
  br label %84

84:                                               ; preds = %81
  %85 = load i32, i32* %6, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %6, align 4
  br label %11

87:                                               ; preds = %11
  %88 = call i64 @clock() #9
  store i64 %88, i64* %2, align 8
  %89 = load i64, i64* %2, align 8
  %90 = load i64, i64* %1, align 8
  %91 = sub nsw i64 %89, %90
  store i64 %91, i64* %3, align 8
  %92 = load i64, i64* %3, align 8
  %93 = sitofp i64 %92 to double
  %94 = fdiv double %93, 1.000000e+06
  store double %94, double* %4, align 8
  %95 = load double, double* %4, align 8
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.260, i64 0, i64 0), double %95)
  %97 = load float, float* %5, align 4
  store float %97, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s353(i32* noalias %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca float, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  %11 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i64 0, i64 0))
  %12 = call i64 @clock() #9
  store i64 %12, i64* %3, align 8
  %13 = load float, float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), align 16
  store float %13, float* %7, align 4
  store i32 0, i32* %8, align 4
  br label %14

14:                                               ; preds = %110, %1
  %15 = load i32, i32* %8, align 4
  %16 = icmp slt i32 %15, 50000
  br i1 %16, label %17, label %113

17:                                               ; preds = %14
  store i32 0, i32* %9, align 4
  br label %18

18:                                               ; preds = %105, %17
  %19 = load i32, i32* %9, align 4
  %20 = icmp slt i32 %19, 32000
  br i1 %20, label %21, label %108

21:                                               ; preds = %18
  %22 = load float, float* %7, align 4
  %23 = load i32*, i32** %2, align 8
  %24 = load i32, i32* %9, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fmul float %22, %30
  %32 = load i32, i32* %9, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fadd float %35, %31
  store float %36, float* %34, align 4
  %37 = load float, float* %7, align 4
  %38 = load i32*, i32** %2, align 8
  %39 = load i32, i32* %9, align 4
  %40 = add nsw i32 %39, 1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i32, i32* %38, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %44
  %46 = load float, float* %45, align 4
  %47 = fmul float %37, %46
  %48 = load i32, i32* %9, align 4
  %49 = add nsw i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %52 = load float, float* %51, align 4
  %53 = fadd float %52, %47
  store float %53, float* %51, align 4
  %54 = load float, float* %7, align 4
  %55 = load i32*, i32** %2, align 8
  %56 = load i32, i32* %9, align 4
  %57 = add nsw i32 %56, 2
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %55, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %61
  %63 = load float, float* %62, align 4
  %64 = fmul float %54, %63
  %65 = load i32, i32* %9, align 4
  %66 = add nsw i32 %65, 2
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4
  %70 = fadd float %69, %64
  store float %70, float* %68, align 4
  %71 = load float, float* %7, align 4
  %72 = load i32*, i32** %2, align 8
  %73 = load i32, i32* %9, align 4
  %74 = add nsw i32 %73, 3
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %72, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %78
  %80 = load float, float* %79, align 4
  %81 = fmul float %71, %80
  %82 = load i32, i32* %9, align 4
  %83 = add nsw i32 %82, 3
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %84
  %86 = load float, float* %85, align 4
  %87 = fadd float %86, %81
  store float %87, float* %85, align 4
  %88 = load float, float* %7, align 4
  %89 = load i32*, i32** %2, align 8
  %90 = load i32, i32* %9, align 4
  %91 = add nsw i32 %90, 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %89, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %95
  %97 = load float, float* %96, align 4
  %98 = fmul float %88, %97
  %99 = load i32, i32* %9, align 4
  %100 = add nsw i32 %99, 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %101
  %103 = load float, float* %102, align 4
  %104 = fadd float %103, %98
  store float %104, float* %102, align 4
  br label %105

105:                                              ; preds = %21
  %106 = load i32, i32* %9, align 4
  %107 = add nsw i32 %106, 5
  store i32 %107, i32* %9, align 4
  br label %18

108:                                              ; preds = %18
  %109 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %110

110:                                              ; preds = %108
  %111 = load i32, i32* %8, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %8, align 4
  br label %14

113:                                              ; preds = %14
  %114 = call i64 @clock() #9
  store i64 %114, i64* %4, align 8
  %115 = load i64, i64* %4, align 8
  %116 = load i64, i64* %3, align 8
  %117 = sub nsw i64 %115, %116
  store i64 %117, i64* %5, align 8
  %118 = load i64, i64* %5, align 8
  %119 = sitofp i64 %118 to double
  %120 = fdiv double %119, 1.000000e+06
  store double %120, double* %6, align 8
  %121 = load double, double* %6, align 8
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.261, i64 0, i64 0), double %121)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s421() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = load float*, float** @xx, align 8
  %9 = call i32 @set1d(float* %8, float 1.000000e+00, i32 1)
  %10 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0))
  %11 = call i64 @clock() #9
  store i64 %11, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %41, %0
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, 200000
  br i1 %14, label %15, label %44

15:                                               ; preds = %12
  %16 = load float*, float** @xx, align 8
  store float* %16, float** @yy, align 8
  store i32 0, i32* %6, align 4
  br label %17

17:                                               ; preds = %36, %15
  %18 = load i32, i32* %6, align 4
  %19 = icmp slt i32 %18, 31999
  br i1 %19, label %20, label %39

20:                                               ; preds = %17
  %21 = load float*, float** @yy, align 8
  %22 = load i32, i32* %6, align 4
  %23 = add nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds float, float* %21, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fadd float %26, %30
  %32 = load float*, float** @xx, align 8
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds float, float* %32, i64 %34
  store float %31, float* %35, align 4
  br label %36

36:                                               ; preds = %20
  %37 = load i32, i32* %6, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %6, align 4
  br label %17

39:                                               ; preds = %17
  %40 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00)
  br label %41

41:                                               ; preds = %39
  %42 = load i32, i32* %5, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %5, align 4
  br label %12

44:                                               ; preds = %12
  %45 = call i64 @clock() #9
  store i64 %45, i64* %2, align 8
  %46 = load i64, i64* %2, align 8
  %47 = load i64, i64* %1, align 8
  %48 = sub nsw i64 %46, %47
  store i64 %48, i64* %3, align 8
  %49 = load i64, i64* %3, align 8
  %50 = sitofp i64 %49 to double
  %51 = fdiv double %50, 1.000000e+06
  store double %51, double* %4, align 8
  %52 = load double, double* %4, align 8
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.262, i64 0, i64 0), double %52)
  store float 0.000000e+00, float* @temp, align 4
  store i32 0, i32* %7, align 4
  br label %54

54:                                               ; preds = %65, %44
  %55 = load i32, i32* %7, align 4
  %56 = icmp slt i32 %55, 32000
  br i1 %56, label %57, label %68

57:                                               ; preds = %54
  %58 = load float*, float** @xx, align 8
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds float, float* %58, i64 %60
  %62 = load float, float* %61, align 4
  %63 = load float, float* @temp, align 4
  %64 = fadd float %63, %62
  store float %64, float* @temp, align 4
  br label %65

65:                                               ; preds = %57
  %66 = load i32, i32* %7, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %7, align 4
  br label %54

68:                                               ; preds = %54
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s1421() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = load float*, float** @xx, align 8
  %9 = call i32 @set1d(float* %8, float 1.000000e+00, i32 1)
  %10 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0))
  %11 = call i64 @clock() #9
  store i64 %11, i64* %1, align 8
  store float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 16000), float** @xx, align 8
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %38, %0
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, 400000
  br i1 %14, label %15, label %41

15:                                               ; preds = %12
  store i32 0, i32* %6, align 4
  br label %16

16:                                               ; preds = %33, %15
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 16000
  br i1 %18, label %19, label %36

19:                                               ; preds = %16
  %20 = load float*, float** @xx, align 8
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds float, float* %20, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fadd float %24, %28
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  store float %29, float* %32, align 4
  br label %33

33:                                               ; preds = %19
  %34 = load i32, i32* %6, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %6, align 4
  br label %16

36:                                               ; preds = %16
  %37 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00)
  br label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %5, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %5, align 4
  br label %12

41:                                               ; preds = %12
  %42 = call i64 @clock() #9
  store i64 %42, i64* %2, align 8
  %43 = load i64, i64* %2, align 8
  %44 = load i64, i64* %1, align 8
  %45 = sub nsw i64 %43, %44
  store i64 %45, i64* %3, align 8
  %46 = load i64, i64* %3, align 8
  %47 = sitofp i64 %46 to double
  %48 = fdiv double %47, 1.000000e+06
  store double %48, double* %4, align 8
  %49 = load double, double* %4, align 8
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.263, i64 0, i64 0), double %49)
  store float 0.000000e+00, float* @temp, align 4
  store i32 0, i32* %7, align 4
  br label %51

51:                                               ; preds = %62, %41
  %52 = load i32, i32* %7, align 4
  %53 = icmp slt i32 %52, 16000
  br i1 %53, label %54, label %65

54:                                               ; preds = %51
  %55 = load float*, float** @xx, align 8
  %56 = load i32, i32* %7, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds float, float* %55, i64 %57
  %59 = load float, float* %58, align 4
  %60 = load float, float* @temp, align 4
  %61 = fadd float %60, %59
  store float %61, float* @temp, align 4
  br label %62

62:                                               ; preds = %54
  %63 = load i32, i32* %7, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %7, align 4
  br label %51

65:                                               ; preds = %51
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s422() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 4), float** @xx, align 8
  %8 = load float*, float** @xx, align 8
  %9 = call i32 @set1d(float* %8, float 0.000000e+00, i32 1)
  %10 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0))
  %11 = call i64 @clock() #9
  store i64 %11, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %39, %0
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, 400000
  br i1 %14, label %15, label %42

15:                                               ; preds = %12
  store i32 0, i32* %6, align 4
  br label %16

16:                                               ; preds = %34, %15
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 32000
  br i1 %18, label %19, label %37

19:                                               ; preds = %16
  %20 = load i32, i32* %6, align 4
  %21 = add nsw i32 %20, 8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fadd float %24, %28
  %30 = load float*, float** @xx, align 8
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float, float* %30, i64 %32
  store float %29, float* %33, align 4
  br label %34

34:                                               ; preds = %19
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %6, align 4
  br label %16

37:                                               ; preds = %16
  %38 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %39

39:                                               ; preds = %37
  %40 = load i32, i32* %5, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %5, align 4
  br label %12

42:                                               ; preds = %12
  %43 = call i64 @clock() #9
  store i64 %43, i64* %2, align 8
  %44 = load i64, i64* %2, align 8
  %45 = load i64, i64* %1, align 8
  %46 = sub nsw i64 %44, %45
  store i64 %46, i64* %3, align 8
  %47 = load i64, i64* %3, align 8
  %48 = sitofp i64 %47 to double
  %49 = fdiv double %48, 1.000000e+06
  store double %49, double* %4, align 8
  %50 = load double, double* %4, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.264, i64 0, i64 0), double %50)
  store float 0.000000e+00, float* @temp, align 4
  store i32 0, i32* %7, align 4
  br label %52

52:                                               ; preds = %63, %42
  %53 = load i32, i32* %7, align 4
  %54 = icmp slt i32 %53, 32000
  br i1 %54, label %55, label %66

55:                                               ; preds = %52
  %56 = load float*, float** @xx, align 8
  %57 = load i32, i32* %7, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, float* %56, i64 %58
  %60 = load float, float* %59, align 4
  %61 = load float, float* @temp, align 4
  %62 = fadd float %61, %60
  store float %62, float* @temp, align 4
  br label %63

63:                                               ; preds = %55
  %64 = load i32, i32* %7, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %7, align 4
  br label %52

66:                                               ; preds = %52
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s423() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca double, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 64, i32* %1, align 4
  %9 = load i32, i32* %1, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0), i64 %10
  store float* %11, float** @xx, align 8
  %12 = load float*, float** @xx, align 8
  %13 = call i32 @set1d(float* %12, float 1.000000e+00, i32 1)
  %14 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0))
  %15 = call i64 @clock() #9
  store i64 %15, i64* %2, align 8
  store i32 0, i32* %6, align 4
  br label %16

16:                                               ; preds = %43, %0
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 200000
  br i1 %18, label %19, label %46

19:                                               ; preds = %16
  store i32 0, i32* %7, align 4
  br label %20

20:                                               ; preds = %38, %19
  %21 = load i32, i32* %7, align 4
  %22 = icmp slt i32 %21, 31999
  br i1 %22, label %23, label %41

23:                                               ; preds = %20
  %24 = load float*, float** @xx, align 8
  %25 = load i32, i32* %7, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float, float* %24, i64 %26
  %28 = load float, float* %27, align 4
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = fadd float %28, %32
  %34 = load i32, i32* %7, align 4
  %35 = add nsw i32 %34, 1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %36
  store float %33, float* %37, align 4
  br label %38

38:                                               ; preds = %23
  %39 = load i32, i32* %7, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %7, align 4
  br label %20

41:                                               ; preds = %20
  %42 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00)
  br label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %6, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %6, align 4
  br label %16

46:                                               ; preds = %16
  %47 = call i64 @clock() #9
  store i64 %47, i64* %3, align 8
  %48 = load i64, i64* %3, align 8
  %49 = load i64, i64* %2, align 8
  %50 = sub nsw i64 %48, %49
  store i64 %50, i64* %4, align 8
  %51 = load i64, i64* %4, align 8
  %52 = sitofp i64 %51 to double
  %53 = fdiv double %52, 1.000000e+06
  store double %53, double* %5, align 8
  %54 = load double, double* %5, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.265, i64 0, i64 0), double %54)
  store float 0.000000e+00, float* @temp, align 4
  store i32 0, i32* %8, align 4
  br label %56

56:                                               ; preds = %66, %46
  %57 = load i32, i32* %8, align 4
  %58 = icmp slt i32 %57, 32000
  br i1 %58, label %59, label %69

59:                                               ; preds = %56
  %60 = load i32, i32* %8, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %61
  %63 = load float, float* %62, align 4
  %64 = load float, float* @temp, align 4
  %65 = fadd float %64, %63
  store float %65, float* @temp, align 4
  br label %66

66:                                               ; preds = %59
  %67 = load i32, i32* %8, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %8, align 4
  br label %56

69:                                               ; preds = %56
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s424() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca double, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 63, i32* %1, align 4
  %9 = load i32, i32* %1, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds float, float* getelementptr inbounds ([65536 x float], [65536 x float]* @array, i64 0, i64 0), i64 %10
  store float* %11, float** @xx, align 8
  %12 = load float*, float** @xx, align 8
  %13 = call i32 @set1d(float* %12, float 0.000000e+00, i32 1)
  %14 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0))
  %15 = call i64 @clock() #9
  store i64 %15, i64* %2, align 8
  store i32 0, i32* %6, align 4
  br label %16

16:                                               ; preds = %43, %0
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 200000
  br i1 %18, label %19, label %46

19:                                               ; preds = %16
  store i32 0, i32* %7, align 4
  br label %20

20:                                               ; preds = %38, %19
  %21 = load i32, i32* %7, align 4
  %22 = icmp slt i32 %21, 31999
  br i1 %22, label %23, label %41

23:                                               ; preds = %20
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [65536 x float], [65536 x float]* @array, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = fadd float %27, %31
  %33 = load float*, float** @xx, align 8
  %34 = load i32, i32* %7, align 4
  %35 = add nsw i32 %34, 1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds float, float* %33, i64 %36
  store float %32, float* %37, align 4
  br label %38

38:                                               ; preds = %23
  %39 = load i32, i32* %7, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %7, align 4
  br label %20

41:                                               ; preds = %20
  %42 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 1.000000e+00)
  br label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %6, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %6, align 4
  br label %16

46:                                               ; preds = %16
  %47 = call i64 @clock() #9
  store i64 %47, i64* %3, align 8
  %48 = load i64, i64* %3, align 8
  %49 = load i64, i64* %2, align 8
  %50 = sub nsw i64 %48, %49
  store i64 %50, i64* %4, align 8
  %51 = load i64, i64* %4, align 8
  %52 = sitofp i64 %51 to double
  %53 = fdiv double %52, 1.000000e+06
  store double %53, double* %5, align 8
  %54 = load double, double* %5, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.266, i64 0, i64 0), double %54)
  store float 0.000000e+00, float* @temp, align 4
  store i32 0, i32* %8, align 4
  br label %56

56:                                               ; preds = %67, %46
  %57 = load i32, i32* %8, align 4
  %58 = icmp slt i32 %57, 32000
  br i1 %58, label %59, label %70

59:                                               ; preds = %56
  %60 = load float*, float** @xx, align 8
  %61 = load i32, i32* %8, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds float, float* %60, i64 %62
  %64 = load float, float* %63, align 4
  %65 = load float, float* @temp, align 4
  %66 = fadd float %65, %64
  store float %66, float* @temp, align 4
  br label %67

67:                                               ; preds = %59
  %68 = load i32, i32* %8, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %8, align 4
  br label %56

70:                                               ; preds = %56
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s431() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca double, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  store i32 2, i32* %2, align 4
  %10 = load i32, i32* %1, align 4
  %11 = mul nsw i32 2, %10
  %12 = load i32, i32* %2, align 4
  %13 = sub nsw i32 %11, %12
  store i32 %13, i32* %3, align 4
  %14 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0))
  %15 = call i64 @clock() #9
  store i64 %15, i64* %4, align 8
  store i32 0, i32* %8, align 4
  br label %16

16:                                               ; preds = %43, %0
  %17 = load i32, i32* %8, align 4
  %18 = icmp slt i32 %17, 500000
  br i1 %18, label %19, label %46

19:                                               ; preds = %16
  store i32 0, i32* %9, align 4
  br label %20

20:                                               ; preds = %38, %19
  %21 = load i32, i32* %9, align 4
  %22 = icmp slt i32 %21, 32000
  br i1 %22, label %23, label %41

23:                                               ; preds = %20
  %24 = load i32, i32* %9, align 4
  %25 = load i32, i32* %3, align 4
  %26 = add nsw i32 %24, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = load i32, i32* %9, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fadd float %29, %33
  %35 = load i32, i32* %9, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %36
  store float %34, float* %37, align 4
  br label %38

38:                                               ; preds = %23
  %39 = load i32, i32* %9, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %9, align 4
  br label %20

41:                                               ; preds = %20
  %42 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %8, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %8, align 4
  br label %16

46:                                               ; preds = %16
  %47 = call i64 @clock() #9
  store i64 %47, i64* %5, align 8
  %48 = load i64, i64* %5, align 8
  %49 = load i64, i64* %4, align 8
  %50 = sub nsw i64 %48, %49
  store i64 %50, i64* %6, align 8
  %51 = load i64, i64* %6, align 8
  %52 = sitofp i64 %51 to double
  %53 = fdiv double %52, 1.000000e+06
  store double %53, double* %7, align 8
  %54 = load double, double* %7, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.267, i64 0, i64 0), double %54)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s441() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %80, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %83

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %75, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %78

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %22, label %37

22:                                               ; preds = %16
  %23 = load i32, i32* %6, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fmul float %26, %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  %36 = fadd float %35, %31
  store float %36, float* %34, align 4
  br label %74

37:                                               ; preds = %16
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = fcmp oeq float %41, 0.000000e+00
  br i1 %42, label %43, label %58

43:                                               ; preds = %37
  %44 = load i32, i32* %6, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %45
  %47 = load float, float* %46, align 4
  %48 = load i32, i32* %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %49
  %51 = load float, float* %50, align 4
  %52 = fmul float %47, %51
  %53 = load i32, i32* %6, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %54
  %56 = load float, float* %55, align 4
  %57 = fadd float %56, %52
  store float %57, float* %55, align 4
  br label %73

58:                                               ; preds = %37
  %59 = load i32, i32* %6, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %60
  %62 = load float, float* %61, align 4
  %63 = load i32, i32* %6, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %64
  %66 = load float, float* %65, align 4
  %67 = fmul float %62, %66
  %68 = load i32, i32* %6, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %69
  %71 = load float, float* %70, align 4
  %72 = fadd float %71, %67
  store float %72, float* %70, align 4
  br label %73

73:                                               ; preds = %58, %43
  br label %74

74:                                               ; preds = %73, %22
  br label %75

75:                                               ; preds = %74
  %76 = load i32, i32* %6, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %6, align 4
  br label %13

78:                                               ; preds = %13
  %79 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %80

80:                                               ; preds = %78
  %81 = load i32, i32* %5, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %5, align 4
  br label %9

83:                                               ; preds = %9
  %84 = call i64 @clock() #9
  store i64 %84, i64* %2, align 8
  %85 = load i64, i64* %2, align 8
  %86 = load i64, i64* %1, align 8
  %87 = sub nsw i64 %85, %86
  store i64 %87, i64* %3, align 8
  %88 = load i64, i64* %3, align 8
  %89 = sitofp i64 %88 to double
  %90 = fdiv double %89, 1.000000e+06
  store double %90, double* %4, align 8
  %91 = load double, double* %4, align 8
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.268, i64 0, i64 0), double %91)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s442() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %92, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 25000
  br i1 %11, label %12, label %95

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %87, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %90

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x i32], [32000 x i32]* @indx, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %25 [
    i32 1, label %21
    i32 2, label %22
    i32 3, label %23
    i32 4, label %24
  ]

21:                                               ; preds = %16
  br label %26

22:                                               ; preds = %16
  br label %41

23:                                               ; preds = %16
  br label %56

24:                                               ; preds = %16
  br label %71

25:                                               ; preds = %16
  br label %26

26:                                               ; preds = %25, %21
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = fmul float %30, %34
  %36 = load i32, i32* %6, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = fadd float %39, %35
  store float %40, float* %38, align 4
  br label %86

41:                                               ; preds = %22
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fmul float %45, %49
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %52
  %54 = load float, float* %53, align 4
  %55 = fadd float %54, %50
  store float %55, float* %53, align 4
  br label %86

56:                                               ; preds = %23
  %57 = load i32, i32* %6, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %58
  %60 = load float, float* %59, align 4
  %61 = load i32, i32* %6, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %62
  %64 = load float, float* %63, align 4
  %65 = fmul float %60, %64
  %66 = load i32, i32* %6, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %67
  %69 = load float, float* %68, align 4
  %70 = fadd float %69, %65
  store float %70, float* %68, align 4
  br label %86

71:                                               ; preds = %24
  %72 = load i32, i32* %6, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %73
  %75 = load float, float* %74, align 4
  %76 = load i32, i32* %6, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %77
  %79 = load float, float* %78, align 4
  %80 = fmul float %75, %79
  %81 = load i32, i32* %6, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %82
  %84 = load float, float* %83, align 4
  %85 = fadd float %84, %80
  store float %85, float* %83, align 4
  br label %86

86:                                               ; preds = %71, %56, %41, %26
  br label %87

87:                                               ; preds = %86
  %88 = load i32, i32* %6, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %6, align 4
  br label %13

90:                                               ; preds = %13
  %91 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %92

92:                                               ; preds = %90
  %93 = load i32, i32* %5, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %5, align 4
  br label %9

95:                                               ; preds = %9
  %96 = call i64 @clock() #9
  store i64 %96, i64* %2, align 8
  %97 = load i64, i64* %2, align 8
  %98 = load i64, i64* %1, align 8
  %99 = sub nsw i64 %97, %98
  store i64 %99, i64* %3, align 8
  %100 = load i64, i64* %3, align 8
  %101 = sitofp i64 %100 to double
  %102 = fdiv double %101, 1.000000e+06
  store double %102, double* %4, align 8
  %103 = load double, double* %4, align 8
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.269, i64 0, i64 0), double %103)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s443() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %60, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 100000
  br i1 %11, label %12, label %63

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %55, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %58

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp ole float %20, 0.000000e+00
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  br label %24

23:                                               ; preds = %16
  br label %39

24:                                               ; preds = %22
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = load i32, i32* %6, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = fmul float %28, %32
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fadd float %37, %33
  store float %38, float* %36, align 4
  br label %54

39:                                               ; preds = %23
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = load i32, i32* %6, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %45
  %47 = load float, float* %46, align 4
  %48 = fmul float %43, %47
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %50
  %52 = load float, float* %51, align 4
  %53 = fadd float %52, %48
  store float %53, float* %51, align 4
  br label %54

54:                                               ; preds = %39, %24
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %6, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %6, align 4
  br label %13

58:                                               ; preds = %13
  %59 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %5, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %5, align 4
  br label %9

63:                                               ; preds = %9
  %64 = call i64 @clock() #9
  store i64 %64, i64* %2, align 8
  %65 = load i64, i64* %2, align 8
  %66 = load i64, i64* %1, align 8
  %67 = sub nsw i64 %65, %66
  store i64 %67, i64* %3, align 8
  %68 = load i64, i64* %3, align 8
  %69 = sitofp i64 %68 to double
  %70 = fdiv double %69, 1.000000e+06
  store double %70, double* %4, align 8
  %71 = load double, double* %4, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.270, i64 0, i64 0), double %71)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s451() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %36, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 10000
  br i1 %11, label %12, label %39

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %31, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %34

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = call float @sinf(float %20) #9
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = call float @cosf(float %25) #9
  %27 = fadd float %21, %26
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  store float %27, float* %30, align 4
  br label %31

31:                                               ; preds = %16
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %6, align 4
  br label %13

34:                                               ; preds = %13
  %35 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %36

36:                                               ; preds = %34
  %37 = load i32, i32* %5, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %5, align 4
  br label %9

39:                                               ; preds = %9
  %40 = call i64 @clock() #9
  store i64 %40, i64* %2, align 8
  %41 = load i64, i64* %2, align 8
  %42 = load i64, i64* %1, align 8
  %43 = sub nsw i64 %41, %42
  store i64 %43, i64* %3, align 8
  %44 = load i64, i64* %3, align 8
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  store double %46, double* %4, align 8
  %47 = load double, double* %4, align 8
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.271, i64 0, i64 0), double %47)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s452() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %38, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 200000
  br i1 %11, label %12, label %41

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %33, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %36

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %6, align 4
  %26 = add nsw i32 %25, 1
  %27 = sitofp i32 %26 to float
  %28 = fmul float %24, %27
  %29 = fadd float %20, %28
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  store float %29, float* %32, align 4
  br label %33

33:                                               ; preds = %16
  %34 = load i32, i32* %6, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %6, align 4
  br label %13

36:                                               ; preds = %13
  %37 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %5, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %5, align 4
  br label %9

41:                                               ; preds = %9
  %42 = call i64 @clock() #9
  store i64 %42, i64* %2, align 8
  %43 = load i64, i64* %2, align 8
  %44 = load i64, i64* %1, align 8
  %45 = sub nsw i64 %43, %44
  store i64 %45, i64* %3, align 8
  %46 = load i64, i64* %3, align 8
  %47 = sitofp i64 %46 to double
  %48 = fdiv double %47, 1.000000e+06
  store double %48, double* %4, align 8
  %49 = load double, double* %4, align 8
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.272, i64 0, i64 0), double %49)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s453() #0 {
  %1 = alloca float, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca double, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %2, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %34, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 100000
  br i1 %12, label %13, label %37

13:                                               ; preds = %10
  store float 0.000000e+00, float* %1, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %29, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %32

17:                                               ; preds = %14
  %18 = load float, float* %1, align 4
  %19 = fadd float %18, 2.000000e+00
  store float %19, float* %1, align 4
  %20 = load float, float* %1, align 4
  %21 = load i32, i32* %7, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  store float %25, float* %28, align 4
  br label %29

29:                                               ; preds = %17
  %30 = load i32, i32* %7, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %7, align 4
  br label %14

32:                                               ; preds = %14
  %33 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %34

34:                                               ; preds = %32
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %6, align 4
  br label %10

37:                                               ; preds = %10
  %38 = call i64 @clock() #9
  store i64 %38, i64* %3, align 8
  %39 = load i64, i64* %3, align 8
  %40 = load i64, i64* %2, align 8
  %41 = sub nsw i64 %39, %40
  store i64 %41, i64* %4, align 8
  %42 = load i64, i64* %4, align 8
  %43 = sitofp i64 %42 to double
  %44 = fdiv double %43, 1.000000e+06
  store double %44, double* %5, align 8
  %45 = load double, double* %5, align 8
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.273, i64 0, i64 0), double %45)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s471() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca double, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 32000, i32* %1, align 4
  %9 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @x, i64 0, i64 0), float 0.000000e+00, i32 1)
  %10 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i64 0, i64 0))
  %11 = call i64 @clock() #9
  store i64 %11, i64* %2, align 8
  store i32 0, i32* %6, align 4
  br label %12

12:                                               ; preds = %60, %0
  %13 = load i32, i32* %6, align 4
  %14 = icmp slt i32 %13, 25000
  br i1 %14, label %15, label %63

15:                                               ; preds = %12
  store i32 0, i32* %7, align 4
  br label %16

16:                                               ; preds = %55, %15
  %17 = load i32, i32* %7, align 4
  %18 = load i32, i32* %1, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %16
  %21 = load i32, i32* %7, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = load i32, i32* %7, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = fmul float %28, %32
  %34 = fadd float %24, %33
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %36
  store float %34, float* %37, align 4
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %39
  %41 = load float, float* %40, align 4
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %43
  %45 = load float, float* %44, align 4
  %46 = load i32, i32* %7, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fmul float %45, %49
  %51 = fadd float %41, %50
  %52 = load i32, i32* %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %53
  store float %51, float* %54, align 4
  br label %55

55:                                               ; preds = %20
  %56 = load i32, i32* %7, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %7, align 4
  br label %16

58:                                               ; preds = %16
  %59 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %6, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %6, align 4
  br label %12

63:                                               ; preds = %12
  %64 = call i64 @clock() #9
  store i64 %64, i64* %3, align 8
  %65 = load i64, i64* %3, align 8
  %66 = load i64, i64* %2, align 8
  %67 = sub nsw i64 %65, %66
  store i64 %67, i64* %4, align 8
  %68 = load i64, i64* %4, align 8
  %69 = sitofp i64 %68 to double
  %70 = fdiv double %69, 1.000000e+06
  store double %70, double* %5, align 8
  %71 = load double, double* %5, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.274, i64 0, i64 0), double %71)
  store float 0.000000e+00, float* @temp, align 4
  store i32 0, i32* %8, align 4
  br label %73

73:                                               ; preds = %83, %63
  %74 = load i32, i32* %8, align 4
  %75 = icmp slt i32 %74, 32000
  br i1 %75, label %76, label %86

76:                                               ; preds = %73
  %77 = load i32, i32* %8, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %78
  %80 = load float, float* %79, align 4
  %81 = load float, float* @temp, align 4
  %82 = fadd float %81, %80
  store float %82, float* @temp, align 4
  br label %83

83:                                               ; preds = %76
  %84 = load i32, i32* %8, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %8, align 4
  br label %73

86:                                               ; preds = %73
  call void @check(i32 -12)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s481() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %43, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %46

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %38, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %41

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  call void @exit(i32 0) #10
  unreachable

23:                                               ; preds = %16
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = fmul float %27, %31
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fadd float %36, %32
  store float %37, float* %35, align 4
  br label %38

38:                                               ; preds = %23
  %39 = load i32, i32* %6, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %6, align 4
  br label %13

41:                                               ; preds = %13
  %42 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %5, align 4
  br label %9

46:                                               ; preds = %9
  %47 = call i64 @clock() #9
  store i64 %47, i64* %2, align 8
  %48 = load i64, i64* %2, align 8
  %49 = load i64, i64* %1, align 8
  %50 = sub nsw i64 %48, %49
  store i64 %50, i64* %3, align 8
  %51 = load i64, i64* %3, align 8
  %52 = sitofp i64 %51 to double
  %53 = fdiv double %52, 1.000000e+06
  store double %53, double* %4, align 8
  %54 = load double, double* %4, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.275, i64 0, i64 0), double %54)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s482() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %47, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %50

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %42, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %45

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, %25
  store float %30, float* %28, align 4
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %36
  %38 = load float, float* %37, align 4
  %39 = fcmp ogt float %34, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %16
  br label %45

41:                                               ; preds = %16
  br label %42

42:                                               ; preds = %41
  %43 = load i32, i32* %6, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %6, align 4
  br label %13

45:                                               ; preds = %40, %13
  %46 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %47

47:                                               ; preds = %45
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  br label %9

50:                                               ; preds = %9
  %51 = call i64 @clock() #9
  store i64 %51, i64* %2, align 8
  %52 = load i64, i64* %2, align 8
  %53 = load i64, i64* %1, align 8
  %54 = sub nsw i64 %52, %53
  store i64 %54, i64* %3, align 8
  %55 = load i64, i64* %3, align 8
  %56 = sitofp i64 %55 to double
  %57 = fdiv double %56, 1.000000e+06
  store double %57, double* %4, align 8
  %58 = load double, double* %4, align 8
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.276, i64 0, i64 0), double %58)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @min(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %5, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load i32, i32* %3, align 4
  br label %12

10:                                               ; preds = %2
  %11 = load i32, i32* %4, align 4
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %9, %8 ], [ %11, %10 ]
  ret i32 %13
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s491(i32* noalias %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %45, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %48

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %40, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %43

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fmul float %26, %30
  %32 = fadd float %22, %31
  %33 = load i32*, i32** %2, align 8
  %34 = load i32, i32* %8, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %38
  store float %32, float* %39, align 4
  br label %40

40:                                               ; preds = %18
  %41 = load i32, i32* %8, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %8, align 4
  br label %15

43:                                               ; preds = %15
  %44 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %45

45:                                               ; preds = %43
  %46 = load i32, i32* %7, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %7, align 4
  br label %11

48:                                               ; preds = %11
  %49 = call i64 @clock() #9
  store i64 %49, i64* %4, align 8
  %50 = load i64, i64* %4, align 8
  %51 = load i64, i64* %3, align 8
  %52 = sub nsw i64 %50, %51
  store i64 %52, i64* %5, align 8
  %53 = load i64, i64* %5, align 8
  %54 = sitofp i64 %53 to double
  %55 = fdiv double %54, 1.000000e+06
  store double %55, double* %6, align 8
  %56 = load double, double* %6, align 8
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.277, i64 0, i64 0), double %56)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s4112(i32* noalias %0, float %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca float, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store float %1, float* %4, align 4
  %11 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i64 0, i64 0))
  %12 = call i64 @clock() #9
  store i64 %12, i64* %5, align 8
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %41, %2
  %14 = load i32, i32* %9, align 4
  %15 = icmp slt i32 %14, 50000
  br i1 %15, label %16, label %44

16:                                               ; preds = %13
  store i32 0, i32* %10, align 4
  br label %17

17:                                               ; preds = %36, %16
  %18 = load i32, i32* %10, align 4
  %19 = icmp slt i32 %18, 32000
  br i1 %19, label %20, label %39

20:                                               ; preds = %17
  %21 = load i32*, i32** %3, align 8
  %22 = load i32, i32* %10, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = load float, float* %4, align 4
  %30 = fmul float %28, %29
  %31 = load i32, i32* %10, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  %34 = load float, float* %33, align 4
  %35 = fadd float %34, %30
  store float %35, float* %33, align 4
  br label %36

36:                                               ; preds = %20
  %37 = load i32, i32* %10, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %10, align 4
  br label %17

39:                                               ; preds = %17
  %40 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %41

41:                                               ; preds = %39
  %42 = load i32, i32* %9, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %9, align 4
  br label %13

44:                                               ; preds = %13
  %45 = call i64 @clock() #9
  store i64 %45, i64* %6, align 8
  %46 = load i64, i64* %6, align 8
  %47 = load i64, i64* %5, align 8
  %48 = sub nsw i64 %46, %47
  store i64 %48, i64* %7, align 8
  %49 = load i64, i64* %7, align 8
  %50 = sitofp i64 %49 to double
  %51 = fdiv double %50, 1.000000e+06
  store double %51, double* %8, align 8
  %52 = load double, double* %8, align 8
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.278, i64 0, i64 0), double %52)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s4113(i32* noalias %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %44, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %47

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %39, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %42

18:                                               ; preds = %15
  %19 = load i32*, i32** %2, align 8
  %20 = load i32, i32* %8, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fadd float %26, %30
  %32 = load i32*, i32** %2, align 8
  %33 = load i32, i32* %8, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %32, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %37
  store float %31, float* %38, align 4
  br label %39

39:                                               ; preds = %18
  %40 = load i32, i32* %8, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %8, align 4
  br label %15

42:                                               ; preds = %15
  %43 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %44

44:                                               ; preds = %42
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %7, align 4
  br label %11

47:                                               ; preds = %11
  %48 = call i64 @clock() #9
  store i64 %48, i64* %4, align 8
  %49 = load i64, i64* %4, align 8
  %50 = load i64, i64* %3, align 8
  %51 = sub nsw i64 %49, %50
  store i64 %51, i64* %5, align 8
  %52 = load i64, i64* %5, align 8
  %53 = sitofp i64 %52 to double
  %54 = fdiv double %53, 1.000000e+06
  store double %54, double* %6, align 8
  %55 = load double, double* %6, align 8
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.279, i64 0, i64 0), double %55)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s4114(i32* %0, i32 %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  %12 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0))
  %13 = call i64 @clock() #9
  store i64 %13, i64* %5, align 8
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %56, %2
  %15 = load i32, i32* %10, align 4
  %16 = icmp slt i32 %15, 50000
  br i1 %16, label %17, label %59

17:                                               ; preds = %14
  %18 = load i32, i32* %4, align 4
  %19 = sub nsw i32 %18, 1
  store i32 %19, i32* %11, align 4
  br label %20

20:                                               ; preds = %51, %17
  %21 = load i32, i32* %11, align 4
  %22 = icmp slt i32 %21, 32000
  br i1 %22, label %23, label %54

23:                                               ; preds = %20
  %24 = load i32*, i32** %3, align 8
  %25 = load i32, i32* %11, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %9, align 4
  %29 = load i32, i32* %11, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %30
  %32 = load float, float* %31, align 4
  %33 = load i32, i32* %9, align 4
  %34 = sub nsw i32 32000, %33
  %35 = add nsw i32 %34, 1
  %36 = sub nsw i32 %35, 2
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  %40 = load i32, i32* %11, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fmul float %39, %43
  %45 = fadd float %32, %44
  %46 = load i32, i32* %11, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %47
  store float %45, float* %48, align 4
  %49 = load i32, i32* %9, align 4
  %50 = add nsw i32 %49, 5
  store i32 %50, i32* %9, align 4
  br label %51

51:                                               ; preds = %23
  %52 = load i32, i32* %11, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %11, align 4
  br label %20

54:                                               ; preds = %20
  %55 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %56

56:                                               ; preds = %54
  %57 = load i32, i32* %10, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %10, align 4
  br label %14

59:                                               ; preds = %14
  %60 = call i64 @clock() #9
  store i64 %60, i64* %6, align 8
  %61 = load i64, i64* %6, align 8
  %62 = load i64, i64* %5, align 8
  %63 = sub nsw i64 %61, %62
  store i64 %63, i64* %7, align 8
  %64 = load i64, i64* %7, align 8
  %65 = sitofp i64 %64 to double
  %66 = fdiv double %65, 1.000000e+06
  store double %66, double* %8, align 8
  %67 = load double, double* %8, align 8
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.280, i64 0, i64 0), double %67)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s4115(i32* noalias %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca float, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  %10 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i64 0, i64 0))
  %11 = call i64 @clock() #9
  store i64 %11, i64* %3, align 8
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %40, %1
  %13 = load i32, i32* %8, align 4
  %14 = icmp slt i32 %13, 50000
  br i1 %14, label %15, label %43

15:                                               ; preds = %12
  store float 0.000000e+00, float* %7, align 4
  store i32 0, i32* %9, align 4
  br label %16

16:                                               ; preds = %35, %15
  %17 = load i32, i32* %9, align 4
  %18 = icmp slt i32 %17, 32000
  br i1 %18, label %19, label %38

19:                                               ; preds = %16
  %20 = load i32, i32* %9, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = load i32*, i32** %2, align 8
  %25 = load i32, i32* %9, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = fmul float %23, %31
  %33 = load float, float* %7, align 4
  %34 = fadd float %33, %32
  store float %34, float* %7, align 4
  br label %35

35:                                               ; preds = %19
  %36 = load i32, i32* %9, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %9, align 4
  br label %16

38:                                               ; preds = %16
  %39 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %40

40:                                               ; preds = %38
  %41 = load i32, i32* %8, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %8, align 4
  br label %12

43:                                               ; preds = %12
  %44 = call i64 @clock() #9
  store i64 %44, i64* %4, align 8
  %45 = load i64, i64* %4, align 8
  %46 = load i64, i64* %3, align 8
  %47 = sub nsw i64 %45, %46
  store i64 %47, i64* %5, align 8
  %48 = load i64, i64* %5, align 8
  %49 = sitofp i64 %48 to double
  %50 = fdiv double %49, 1.000000e+06
  store double %50, double* %6, align 8
  %51 = load double, double* %6, align 8
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.281, i64 0, i64 0), double %51)
  %53 = load float, float* %7, align 4
  store float %53, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s4116(i32* noalias %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca double, align 8
  %11 = alloca float, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %15 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i64 0, i64 0))
  %16 = call i64 @clock() #9
  store i64 %16, i64* %7, align 8
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %52, %3
  %18 = load i32, i32* %13, align 4
  %19 = icmp slt i32 %18, 5000000
  br i1 %19, label %20, label %55

20:                                               ; preds = %17
  store float 0.000000e+00, float* %11, align 4
  store i32 0, i32* %14, align 4
  br label %21

21:                                               ; preds = %47, %20
  %22 = load i32, i32* %14, align 4
  %23 = icmp slt i32 %22, 255
  br i1 %23, label %24, label %50

24:                                               ; preds = %21
  %25 = load i32, i32* %6, align 4
  %26 = load i32, i32* %14, align 4
  %27 = add nsw i32 %25, %26
  store i32 %27, i32* %12, align 4
  %28 = load i32, i32* %12, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  %32 = load i32, i32* %5, align 4
  %33 = sub nsw i32 %32, 1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 %34
  %36 = load i32*, i32** %4, align 8
  %37 = load i32, i32* %14, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [256 x float], [256 x float]* %35, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fmul float %31, %43
  %45 = load float, float* %11, align 4
  %46 = fadd float %45, %44
  store float %46, float* %11, align 4
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %14, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %14, align 4
  br label %21

50:                                               ; preds = %21
  %51 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %52

52:                                               ; preds = %50
  %53 = load i32, i32* %13, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %13, align 4
  br label %17

55:                                               ; preds = %17
  %56 = call i64 @clock() #9
  store i64 %56, i64* %8, align 8
  %57 = load i64, i64* %8, align 8
  %58 = load i64, i64* %7, align 8
  %59 = sub nsw i64 %57, %58
  store i64 %59, i64* %9, align 8
  %60 = load i64, i64* %9, align 8
  %61 = sitofp i64 %60 to double
  %62 = fdiv double %61, 1.000000e+06
  store double %62, double* %10, align 8
  %63 = load double, double* %10, align 8
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.282, i64 0, i64 0), double %63)
  %65 = load float, float* %11, align 4
  store float %65, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s4117() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %40, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %43

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %35, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %38

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sdiv i32 %21, 2
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fmul float %25, %29
  %31 = fadd float %20, %30
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %33
  store float %31, float* %34, align 4
  br label %35

35:                                               ; preds = %16
  %36 = load i32, i32* %6, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %6, align 4
  br label %13

38:                                               ; preds = %13
  %39 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %40

40:                                               ; preds = %38
  %41 = load i32, i32* %5, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %5, align 4
  br label %9

43:                                               ; preds = %9
  %44 = call i64 @clock() #9
  store i64 %44, i64* %2, align 8
  %45 = load i64, i64* %2, align 8
  %46 = load i64, i64* %1, align 8
  %47 = sub nsw i64 %45, %46
  store i64 %47, i64* %3, align 8
  %48 = load i64, i64* %3, align 8
  %49 = sitofp i64 %48 to double
  %50 = fdiv double %49, 1.000000e+06
  store double %50, double* %4, align 8
  %51 = load double, double* %4, align 8
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.283, i64 0, i64 0), double %51)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @s4121() #0 {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %40, %0
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %43

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %35, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %38

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  store float %22, float* %1, align 4
  store float %26, float* %2, align 4
  %27 = load float, float* %1, align 4
  %28 = load float, float* %2, align 4
  %29 = fmul float %27, %28
  %30 = load i32, i32* %8, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fadd float %33, %29
  store float %34, float* %32, align 4
  br label %35

35:                                               ; preds = %18
  %36 = load i32, i32* %8, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %8, align 4
  br label %15

38:                                               ; preds = %15
  %39 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %40

40:                                               ; preds = %38
  %41 = load i32, i32* %7, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %7, align 4
  br label %11

43:                                               ; preds = %11
  %44 = call i64 @clock() #9
  store i64 %44, i64* %4, align 8
  %45 = load i64, i64* %4, align 8
  %46 = load i64, i64* %3, align 8
  %47 = sub nsw i64 %45, %46
  store i64 %47, i64* %5, align 8
  %48 = load i64, i64* %5, align 8
  %49 = sitofp i64 %48 to double
  %50 = fdiv double %49, 1.000000e+06
  store double %50, double* %6, align 8
  %51 = load double, double* %6, align 8
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.284, i64 0, i64 0), double %51)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @va() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %29, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 500000
  br i1 %11, label %12, label %32

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %24, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %27

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  store float %20, float* %23, align 4
  br label %24

24:                                               ; preds = %16
  %25 = load i32, i32* %6, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %6, align 4
  br label %13

27:                                               ; preds = %13
  %28 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %29

29:                                               ; preds = %27
  %30 = load i32, i32* %5, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %5, align 4
  br label %9

32:                                               ; preds = %9
  %33 = call i64 @clock() #9
  store i64 %33, i64* %2, align 8
  %34 = load i64, i64* %2, align 8
  %35 = load i64, i64* %1, align 8
  %36 = sub nsw i64 %34, %35
  store i64 %36, i64* %3, align 8
  %37 = load i64, i64* %3, align 8
  %38 = sitofp i64 %37 to double
  %39 = fdiv double %38, 1.000000e+06
  store double %39, double* %4, align 8
  %40 = load double, double* %4, align 8
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.285, i64 0, i64 0), double %40)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vag(i32* noalias %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %35, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 100000
  br i1 %13, label %14, label %38

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %30, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %33

18:                                               ; preds = %15
  %19 = load i32*, i32** %2, align 8
  %20 = load i32, i32* %8, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %26, float* %29, align 4
  br label %30

30:                                               ; preds = %18
  %31 = load i32, i32* %8, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %8, align 4
  br label %15

33:                                               ; preds = %15
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %35

35:                                               ; preds = %33
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %11

38:                                               ; preds = %11
  %39 = call i64 @clock() #9
  store i64 %39, i64* %4, align 8
  %40 = load i64, i64* %4, align 8
  %41 = load i64, i64* %3, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %5, align 8
  %43 = load i64, i64* %5, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %6, align 8
  %46 = load double, double* %6, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.286, i64 0, i64 0), double %46)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vas(i32* noalias %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %35, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 100000
  br i1 %13, label %14, label %38

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %30, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %33

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load i32*, i32** %2, align 8
  %24 = load i32, i32* %8, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %22, float* %29, align 4
  br label %30

30:                                               ; preds = %18
  %31 = load i32, i32* %8, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %8, align 4
  br label %15

33:                                               ; preds = %15
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %35

35:                                               ; preds = %33
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %11

38:                                               ; preds = %11
  %39 = call i64 @clock() #9
  store i64 %39, i64* %4, align 8
  %40 = load i64, i64* %4, align 8
  %41 = load i64, i64* %3, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %5, align 8
  %43 = load i64, i64* %5, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %6, align 8
  %46 = load double, double* %6, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.287, i64 0, i64 0), double %46)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vif() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %36, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 50000
  br i1 %11, label %12, label %39

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %31, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %34

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, 0.000000e+00
  br i1 %21, label %22, label %30

22:                                               ; preds = %16
  %23 = load i32, i32* %6, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %28
  store float %26, float* %29, align 4
  br label %30

30:                                               ; preds = %22, %16
  br label %31

31:                                               ; preds = %30
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %6, align 4
  br label %13

34:                                               ; preds = %13
  %35 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %36

36:                                               ; preds = %34
  %37 = load i32, i32* %5, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %5, align 4
  br label %9

39:                                               ; preds = %9
  %40 = call i64 @clock() #9
  store i64 %40, i64* %2, align 8
  %41 = load i64, i64* %2, align 8
  %42 = load i64, i64* %1, align 8
  %43 = sub nsw i64 %41, %42
  store i64 %43, i64* %3, align 8
  %44 = load i64, i64* %3, align 8
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  store double %46, double* %4, align 8
  %47 = load double, double* %4, align 8
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.288, i64 0, i64 0), double %47)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vpv() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %31, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 500000
  br i1 %11, label %12, label %34

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %26, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fadd float %24, %20
  store float %25, float* %23, align 4
  br label %26

26:                                               ; preds = %16
  %27 = load i32, i32* %6, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %6, align 4
  br label %13

29:                                               ; preds = %13
  %30 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %31

31:                                               ; preds = %29
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %5, align 4
  br label %9

34:                                               ; preds = %9
  %35 = call i64 @clock() #9
  store i64 %35, i64* %2, align 8
  %36 = load i64, i64* %2, align 8
  %37 = load i64, i64* %1, align 8
  %38 = sub nsw i64 %36, %37
  store i64 %38, i64* %3, align 8
  %39 = load i64, i64* %3, align 8
  %40 = sitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  store double %41, double* %4, align 8
  %42 = load double, double* %4, align 8
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.289, i64 0, i64 0), double %42)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vtv() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %31, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 500000
  br i1 %11, label %12, label %34

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %26, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %24, %20
  store float %25, float* %23, align 4
  br label %26

26:                                               ; preds = %16
  %27 = load i32, i32* %6, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %6, align 4
  br label %13

29:                                               ; preds = %13
  %30 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %31

31:                                               ; preds = %29
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %5, align 4
  br label %9

34:                                               ; preds = %9
  %35 = call i64 @clock() #9
  store i64 %35, i64* %2, align 8
  %36 = load i64, i64* %2, align 8
  %37 = load i64, i64* %1, align 8
  %38 = sub nsw i64 %36, %37
  store i64 %38, i64* %3, align 8
  %39 = load i64, i64* %3, align 8
  %40 = sitofp i64 %39 to double
  %41 = fdiv double %40, 1.000000e+06
  store double %41, double* %4, align 8
  %42 = load double, double* %4, align 8
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), double %42)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vpvtv() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %36, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 200000
  br i1 %11, label %12, label %39

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %31, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %34

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, %25
  store float %30, float* %28, align 4
  br label %31

31:                                               ; preds = %16
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %6, align 4
  br label %13

34:                                               ; preds = %13
  %35 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %36

36:                                               ; preds = %34
  %37 = load i32, i32* %5, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %5, align 4
  br label %9

39:                                               ; preds = %9
  %40 = call i64 @clock() #9
  store i64 %40, i64* %2, align 8
  %41 = load i64, i64* %2, align 8
  %42 = load i64, i64* %1, align 8
  %43 = sub nsw i64 %41, %42
  store i64 %43, i64* %3, align 8
  %44 = load i64, i64* %3, align 8
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  store double %46, double* %4, align 8
  %47 = load double, double* %4, align 8
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.291, i64 0, i64 0), double %47)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vpvts(float %0) #0 {
  %2 = alloca float, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store float %0, float* %2, align 4
  %9 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i64 0, i64 0))
  %10 = call i64 @clock() #9
  store i64 %10, i64* %3, align 8
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %35, %1
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 50000
  br i1 %13, label %14, label %38

14:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %15

15:                                               ; preds = %30, %14
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 32000
  br i1 %17, label %18, label %33

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = load float, float* %2, align 4
  %24 = fmul float %22, %23
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fadd float %28, %24
  store float %29, float* %27, align 4
  br label %30

30:                                               ; preds = %18
  %31 = load i32, i32* %8, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %8, align 4
  br label %15

33:                                               ; preds = %15
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %35

35:                                               ; preds = %33
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %11

38:                                               ; preds = %11
  %39 = call i64 @clock() #9
  store i64 %39, i64* %4, align 8
  %40 = load i64, i64* %4, align 8
  %41 = load i64, i64* %3, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %5, align 8
  %43 = load i64, i64* %5, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %6, align 8
  %46 = load double, double* %6, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.292, i64 0, i64 0), double %46)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vpvpv() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %36, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 200000
  br i1 %11, label %12, label %39

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %31, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %34

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fadd float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, %25
  store float %30, float* %28, align 4
  br label %31

31:                                               ; preds = %16
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %6, align 4
  br label %13

34:                                               ; preds = %13
  %35 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %36

36:                                               ; preds = %34
  %37 = load i32, i32* %5, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %5, align 4
  br label %9

39:                                               ; preds = %9
  %40 = call i64 @clock() #9
  store i64 %40, i64* %2, align 8
  %41 = load i64, i64* %2, align 8
  %42 = load i64, i64* %1, align 8
  %43 = sub nsw i64 %41, %42
  store i64 %43, i64* %3, align 8
  %44 = load i64, i64* %3, align 8
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  store double %46, double* %4, align 8
  %47 = load double, double* %4, align 8
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.293, i64 0, i64 0), double %47)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vtvtv() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i64 0, i64 0))
  %8 = call i64 @clock() #9
  store i64 %8, i64* %1, align 8
  store i32 0, i32* %5, align 4
  br label %9

9:                                                ; preds = %39, %0
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 200000
  br i1 %11, label %12, label %42

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %34, %12
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 32000
  br i1 %15, label %16, label %37

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %18
  %20 = load float, float* %19, align 4
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %20, %24
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fmul float %25, %29
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %32
  store float %30, float* %33, align 4
  br label %34

34:                                               ; preds = %16
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %6, align 4
  br label %13

37:                                               ; preds = %13
  %38 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %39

39:                                               ; preds = %37
  %40 = load i32, i32* %5, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %5, align 4
  br label %9

42:                                               ; preds = %9
  %43 = call i64 @clock() #9
  store i64 %43, i64* %2, align 8
  %44 = load i64, i64* %2, align 8
  %45 = load i64, i64* %1, align 8
  %46 = sub nsw i64 %44, %45
  store i64 %46, i64* %3, align 8
  %47 = load i64, i64* %3, align 8
  %48 = sitofp i64 %47 to double
  %49 = fdiv double %48, 1.000000e+06
  store double %49, double* %4, align 8
  %50 = load double, double* %4, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.294, i64 0, i64 0), double %50)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vsumr() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %30, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 500000
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %24, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %27

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load float, float* %5, align 4
  %23 = fadd float %22, %21
  store float %23, float* %5, align 4
  br label %24

24:                                               ; preds = %17
  %25 = load i32, i32* %7, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %7, align 4
  br label %14

27:                                               ; preds = %14
  %28 = load float, float* %5, align 4
  %29 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %28)
  br label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %6, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %6, align 4
  br label %10

33:                                               ; preds = %10
  %34 = call i64 @clock() #9
  store i64 %34, i64* %2, align 8
  %35 = load i64, i64* %2, align 8
  %36 = load i64, i64* %1, align 8
  %37 = sub nsw i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = load i64, i64* %3, align 8
  %39 = sitofp i64 %38 to double
  %40 = fdiv double %39, 1.000000e+06
  store double %40, double* %4, align 8
  %41 = load double, double* %4, align 8
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.295, i64 0, i64 0), double %41)
  call void @check(i32 1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vdotr() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i64 0, i64 0))
  %9 = call i64 @clock() #9
  store i64 %9, i64* %1, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %35, %0
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 500000
  br i1 %12, label %13, label %38

13:                                               ; preds = %10
  store float 0.000000e+00, float* %5, align 4
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %29, %13
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 32000
  br i1 %16, label %17, label %32

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %19
  %21 = load float, float* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %23
  %25 = load float, float* %24, align 4
  %26 = fmul float %21, %25
  %27 = load float, float* %5, align 4
  %28 = fadd float %27, %26
  store float %28, float* %5, align 4
  br label %29

29:                                               ; preds = %17
  %30 = load i32, i32* %7, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %7, align 4
  br label %14

32:                                               ; preds = %14
  %33 = load float, float* %5, align 4
  %34 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float %33)
  br label %35

35:                                               ; preds = %32
  %36 = load i32, i32* %6, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %6, align 4
  br label %10

38:                                               ; preds = %10
  %39 = call i64 @clock() #9
  store i64 %39, i64* %2, align 8
  %40 = load i64, i64* %2, align 8
  %41 = load i64, i64* %1, align 8
  %42 = sub nsw i64 %40, %41
  store i64 %42, i64* %3, align 8
  %43 = load i64, i64* %3, align 8
  %44 = sitofp i64 %43 to double
  %45 = fdiv double %44, 1.000000e+06
  store double %45, double* %4, align 8
  %46 = load double, double* %4, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.296, i64 0, i64 0), double %46)
  %48 = load float, float* %5, align 4
  store float %48, float* @temp, align 4
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @vbor() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = call i32 @init(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i64 0, i64 0))
  %15 = call i64 @clock() #9
  store i64 %15, i64* %1, align 8
  store i32 0, i32* %11, align 4
  br label %16

16:                                               ; preds = %179, %0
  %17 = load i32, i32* %11, align 4
  %18 = icmp slt i32 %17, 500000
  br i1 %18, label %19, label %182

19:                                               ; preds = %16
  store i32 0, i32* %12, align 4
  br label %20

20:                                               ; preds = %174, %19
  %21 = load i32, i32* %12, align 4
  %22 = icmp slt i32 %21, 256
  br i1 %22, label %23, label %177

23:                                               ; preds = %20
  %24 = load i32, i32* %12, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  store float %27, float* %5, align 4
  %28 = load i32, i32* %12, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64 0, i64 %29
  %31 = load float, float* %30, align 4
  store float %31, float* %6, align 4
  %32 = load i32, i32* %12, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64 0, i64 %33
  %35 = load float, float* %34, align 4
  store float %35, float* %7, align 4
  %36 = load i32, i32* %12, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [32000 x float], [32000 x float]* @d, i64 0, i64 %37
  %39 = load float, float* %38, align 4
  store float %39, float* %8, align 4
  %40 = load i32, i32* %12, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64 0, i64 %41
  %43 = load float, float* %42, align 4
  store float %43, float* %9, align 4
  %44 = load i32, i32* %12, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [256 x float], [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), i64 0, i64 %45
  %47 = load float, float* %46, align 4
  store float %47, float* %10, align 4
  %48 = load float, float* %5, align 4
  %49 = load float, float* %6, align 4
  %50 = fmul float %48, %49
  %51 = load float, float* %7, align 4
  %52 = fmul float %50, %51
  %53 = load float, float* %5, align 4
  %54 = load float, float* %6, align 4
  %55 = fmul float %53, %54
  %56 = load float, float* %8, align 4
  %57 = fmul float %55, %56
  %58 = fadd float %52, %57
  %59 = load float, float* %5, align 4
  %60 = load float, float* %6, align 4
  %61 = fmul float %59, %60
  %62 = load float, float* %9, align 4
  %63 = fmul float %61, %62
  %64 = fadd float %58, %63
  %65 = load float, float* %5, align 4
  %66 = load float, float* %6, align 4
  %67 = fmul float %65, %66
  %68 = load float, float* %10, align 4
  %69 = fmul float %67, %68
  %70 = fadd float %64, %69
  %71 = load float, float* %5, align 4
  %72 = load float, float* %7, align 4
  %73 = fmul float %71, %72
  %74 = load float, float* %8, align 4
  %75 = fmul float %73, %74
  %76 = fadd float %70, %75
  %77 = load float, float* %5, align 4
  %78 = load float, float* %7, align 4
  %79 = fmul float %77, %78
  %80 = load float, float* %9, align 4
  %81 = fmul float %79, %80
  %82 = fadd float %76, %81
  %83 = load float, float* %5, align 4
  %84 = load float, float* %7, align 4
  %85 = fmul float %83, %84
  %86 = load float, float* %10, align 4
  %87 = fmul float %85, %86
  %88 = fadd float %82, %87
  %89 = load float, float* %5, align 4
  %90 = load float, float* %8, align 4
  %91 = fmul float %89, %90
  %92 = load float, float* %9, align 4
  %93 = fmul float %91, %92
  %94 = fadd float %88, %93
  %95 = load float, float* %5, align 4
  %96 = load float, float* %8, align 4
  %97 = fmul float %95, %96
  %98 = load float, float* %10, align 4
  %99 = fmul float %97, %98
  %100 = fadd float %94, %99
  %101 = load float, float* %5, align 4
  %102 = load float, float* %9, align 4
  %103 = fmul float %101, %102
  %104 = load float, float* %10, align 4
  %105 = fmul float %103, %104
  %106 = fadd float %100, %105
  store float %106, float* %5, align 4
  %107 = load float, float* %6, align 4
  %108 = load float, float* %7, align 4
  %109 = fmul float %107, %108
  %110 = load float, float* %8, align 4
  %111 = fmul float %109, %110
  %112 = load float, float* %6, align 4
  %113 = load float, float* %7, align 4
  %114 = fmul float %112, %113
  %115 = load float, float* %9, align 4
  %116 = fmul float %114, %115
  %117 = fadd float %111, %116
  %118 = load float, float* %6, align 4
  %119 = load float, float* %7, align 4
  %120 = fmul float %118, %119
  %121 = load float, float* %10, align 4
  %122 = fmul float %120, %121
  %123 = fadd float %117, %122
  %124 = load float, float* %6, align 4
  %125 = load float, float* %8, align 4
  %126 = fmul float %124, %125
  %127 = load float, float* %9, align 4
  %128 = fmul float %126, %127
  %129 = fadd float %123, %128
  %130 = load float, float* %6, align 4
  %131 = load float, float* %8, align 4
  %132 = fmul float %130, %131
  %133 = load float, float* %10, align 4
  %134 = fmul float %132, %133
  %135 = fadd float %129, %134
  %136 = load float, float* %6, align 4
  %137 = load float, float* %9, align 4
  %138 = fmul float %136, %137
  %139 = load float, float* %10, align 4
  %140 = fmul float %138, %139
  %141 = fadd float %135, %140
  store float %141, float* %6, align 4
  %142 = load float, float* %7, align 4
  %143 = load float, float* %8, align 4
  %144 = fmul float %142, %143
  %145 = load float, float* %9, align 4
  %146 = fmul float %144, %145
  %147 = load float, float* %7, align 4
  %148 = load float, float* %8, align 4
  %149 = fmul float %147, %148
  %150 = load float, float* %10, align 4
  %151 = fmul float %149, %150
  %152 = fadd float %146, %151
  %153 = load float, float* %7, align 4
  %154 = load float, float* %9, align 4
  %155 = fmul float %153, %154
  %156 = load float, float* %10, align 4
  %157 = fmul float %155, %156
  %158 = fadd float %152, %157
  store float %158, float* %7, align 4
  %159 = load float, float* %8, align 4
  %160 = load float, float* %9, align 4
  %161 = fmul float %159, %160
  %162 = load float, float* %10, align 4
  %163 = fmul float %161, %162
  store float %163, float* %8, align 4
  %164 = load float, float* %5, align 4
  %165 = load float, float* %6, align 4
  %166 = fmul float %164, %165
  %167 = load float, float* %7, align 4
  %168 = fmul float %166, %167
  %169 = load float, float* %8, align 4
  %170 = fmul float %168, %169
  %171 = load i32, i32* %12, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %172
  store float %170, float* %173, align 4
  br label %174

174:                                              ; preds = %23
  %175 = load i32, i32* %12, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %12, align 4
  br label %20

177:                                              ; preds = %20
  %178 = call i32 @dummy(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00)
  br label %179

179:                                              ; preds = %177
  %180 = load i32, i32* %11, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %11, align 4
  br label %16

182:                                              ; preds = %16
  %183 = call i64 @clock() #9
  store i64 %183, i64* %2, align 8
  %184 = load i64, i64* %2, align 8
  %185 = load i64, i64* %1, align 8
  %186 = sub nsw i64 %184, %185
  store i64 %186, i64* %3, align 8
  %187 = load i64, i64* %3, align 8
  %188 = sitofp i64 %187 to double
  %189 = fdiv double %188, 1.000000e+06
  store double %189, double* %4, align 8
  %190 = load double, double* %4, align 8
  %191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.297, i64 0, i64 0), double %190)
  store float 0.000000e+00, float* @temp, align 4
  store i32 0, i32* %13, align 4
  br label %192

192:                                              ; preds = %202, %182
  %193 = load i32, i32* %13, align 4
  %194 = icmp slt i32 %193, 32000
  br i1 %194, label %195, label %205

195:                                              ; preds = %192
  %196 = load i32, i32* %13, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [32000 x float], [32000 x float]* @x, i64 0, i64 %197
  %199 = load float, float* %198, align 4
  %200 = load float, float* @temp, align 4
  %201 = fadd float %200, %199
  store float %201, float* @temp, align 4
  br label %202

202:                                              ; preds = %195
  %203 = load i32, i32* %13, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %13, align 4
  br label %192

205:                                              ; preds = %192
  call void @check(i32 -1)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set(i32* %0, float* %1, float* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  %9 = call noalias i8* @malloc(i64 128000) #9
  %10 = bitcast i8* %9 to float*
  store float* %10, float** @xx, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.298, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %12

12:                                               ; preds = %49, %3
  %13 = load i32, i32* %7, align 4
  %14 = icmp slt i32 %13, 32000
  br i1 %14, label %15, label %52

15:                                               ; preds = %12
  %16 = load i32, i32* %7, align 4
  %17 = add nsw i32 %16, 4
  %18 = load i32*, i32** %4, align 8
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  store i32 %17, i32* %21, align 4
  %22 = load i32, i32* %7, align 4
  %23 = add nsw i32 %22, 2
  %24 = load i32*, i32** %4, align 8
  %25 = load i32, i32* %7, align 4
  %26 = add nsw i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %24, i64 %27
  store i32 %23, i32* %28, align 4
  %29 = load i32, i32* %7, align 4
  %30 = load i32*, i32** %4, align 8
  %31 = load i32, i32* %7, align 4
  %32 = add nsw i32 %31, 2
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %30, i64 %33
  store i32 %29, i32* %34, align 4
  %35 = load i32, i32* %7, align 4
  %36 = add nsw i32 %35, 3
  %37 = load i32*, i32** %4, align 8
  %38 = load i32, i32* %7, align 4
  %39 = add nsw i32 %38, 3
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %37, i64 %40
  store i32 %36, i32* %41, align 4
  %42 = load i32, i32* %7, align 4
  %43 = add nsw i32 %42, 1
  %44 = load i32*, i32** %4, align 8
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %44, i64 %47
  store i32 %43, i32* %48, align 4
  br label %49

49:                                               ; preds = %15
  %50 = load i32, i32* %7, align 4
  %51 = add nsw i32 %50, 5
  store i32 %51, i32* %7, align 4
  br label %12

52:                                               ; preds = %12
  %53 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @a, i64 0, i64 0), float 1.000000e+00, i32 1)
  %54 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float 1.000000e+00, i32 1)
  %55 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float 1.000000e+00, i32 1)
  %56 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0), float 1.000000e+00, i32 1)
  %57 = call i32 @set1d(float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0, i64 0), float 1.000000e+00, i32 1)
  %58 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @aa, i64 0, i64 0), float 0.000000e+00, i32 -1)
  %59 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), float 0.000000e+00, i32 -1)
  %60 = call i32 @set2d([256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]* @cc, i64 0, i64 0), float 0.000000e+00, i32 -1)
  store i32 0, i32* %8, align 4
  br label %61

61:                                               ; preds = %72, %52
  %62 = load i32, i32* %8, align 4
  %63 = icmp slt i32 %62, 32000
  br i1 %63, label %64, label %75

64:                                               ; preds = %61
  %65 = load i32, i32* %8, align 4
  %66 = add nsw i32 %65, 1
  %67 = srem i32 %66, 4
  %68 = add nsw i32 %67, 1
  %69 = load i32, i32* %8, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [32000 x i32], [32000 x i32]* @indx, i64 0, i64 %70
  store i32 %68, i32* %71, align 4
  br label %72

72:                                               ; preds = %64
  %73 = load i32, i32* %8, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %8, align 4
  br label %61

75:                                               ; preds = %61
  %76 = load float*, float** %5, align 8
  store float 1.000000e+00, float* %76, align 4
  %77 = load float*, float** %6, align 8
  store float 2.000000e+00, float* %77, align 4
  ret void
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  store i32 0, i32* %1, align 4
  store i32 1, i32* %2, align 4
  store i32 1, i32* %3, align 4
  %7 = call noalias i8* @malloc(i64 128000) #9
  %8 = bitcast i8* %7 to i32*
  store i32* %8, i32** %4, align 8
  %9 = load i32*, i32** %4, align 8
  call void @set(i32* %9, float* %5, float* %6)
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.299, i64 0, i64 0))
  %11 = call i32 @s256()
  %12 = call i32 @s256p()
  %13 = call i32 @s256pp()
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone speculatable willreturn }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
