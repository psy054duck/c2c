; ModuleID = 'test1.c'
source_filename = "test1.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [11 x i8] c"test1: %f\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"test1p: %f\0A\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"test2: %f\0A\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"test2p: %f\0A\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"test2pp: %f\0A\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @test1() local_unnamed_addr #0 {
  %1 = alloca [320000 x i32], align 16
  %2 = alloca [320000 x i32], align 16
  %3 = alloca [320000 x i32], align 16
  %4 = alloca [320000 x i32], align 16
  %5 = bitcast [320000 x i32]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %5) #5
  %6 = bitcast [320000 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %6) #5
  %7 = bitcast [320000 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %7) #5
  %8 = bitcast [320000 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %8) #5
  %9 = tail call i64 @clock() #5
  br label %10

10:                                               ; preds = %20, %0
  %11 = phi i32 [ 0, %0 ], [ %21, %20 ]
  br label %23

12:                                               ; preds = %20
  %13 = tail call i64 @clock() #5
  %14 = sub nsw i64 %13, %9
  %15 = sitofp i64 %14 to double
  %16 = fdiv double %15, 1.000000e+06
  %17 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), double %16)
  %18 = getelementptr inbounds [320000 x i32], [320000 x i32]* %1, i64 0, i64 319999
  %19 = load i32, i32* %18, align 4, !tbaa !2
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %5) #5
  ret i32 %19

20:                                               ; preds = %23
  %21 = add nuw nsw i32 %11, 1
  %22 = icmp eq i32 %21, 100000
  br i1 %22, label %12, label %10

23:                                               ; preds = %23, %10
  %24 = phi i64 [ 0, %10 ], [ %46, %23 ]
  %25 = icmp ult i64 %24, 160000
  %26 = getelementptr inbounds [320000 x i32], [320000 x i32]* %1, i64 0, i64 %24
  %27 = load i32, i32* %26, align 8, !tbaa !2
  %28 = getelementptr inbounds [320000 x i32], [320000 x i32]* %2, i64 0, i64 %24
  %29 = load i32, i32* %28, align 8, !tbaa !2
  %30 = select i1 %25, [320000 x i32]* %3, [320000 x i32]* %4
  %31 = getelementptr inbounds [320000 x i32], [320000 x i32]* %30, i64 0, i64 %24
  %32 = load i32, i32* %31, align 8, !tbaa !2
  %33 = mul nsw i32 %32, %29
  %34 = add nsw i32 %33, %27
  store i32 %34, i32* %26, align 8, !tbaa !2
  %35 = or i64 %24, 1
  %36 = icmp ult i64 %24, 159999
  %37 = getelementptr inbounds [320000 x i32], [320000 x i32]* %1, i64 0, i64 %35
  %38 = load i32, i32* %37, align 4, !tbaa !2
  %39 = getelementptr inbounds [320000 x i32], [320000 x i32]* %2, i64 0, i64 %35
  %40 = load i32, i32* %39, align 4, !tbaa !2
  %41 = select i1 %36, [320000 x i32]* %3, [320000 x i32]* %4
  %42 = getelementptr inbounds [320000 x i32], [320000 x i32]* %41, i64 0, i64 %35
  %43 = load i32, i32* %42, align 4, !tbaa !2
  %44 = mul nsw i32 %43, %40
  %45 = add nsw i32 %44, %38
  store i32 %45, i32* %37, align 4, !tbaa !2
  %46 = add nuw nsw i64 %24, 2
  %47 = icmp eq i64 %46, 320000
  br i1 %47, label %20, label %23
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare dso_local i64 @clock() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local i32 @test1p() local_unnamed_addr #0 {
  %1 = alloca [320000 x i32], align 16
  %2 = alloca [320000 x i32], align 16
  %3 = alloca [320000 x i32], align 16
  %4 = alloca [320000 x i32], align 16
  %5 = bitcast [320000 x i32]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %5) #5
  %6 = bitcast [320000 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %6) #5
  %7 = bitcast [320000 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %7) #5
  %8 = bitcast [320000 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %8) #5
  %9 = tail call i64 @clock() #5
  br label %10

10:                                               ; preds = %0, %102
  %11 = phi i32 [ 0, %0 ], [ %103, %102 ]
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i64 [ 0, %10 ], [ %63, %12 ]
  %14 = getelementptr inbounds [320000 x i32], [320000 x i32]* %2, i64 0, i64 %13
  %15 = bitcast i32* %14 to <4 x i32>*
  %16 = load <4 x i32>, <4 x i32>* %15, align 16, !tbaa !2
  %17 = getelementptr inbounds i32, i32* %14, i64 4
  %18 = bitcast i32* %17 to <4 x i32>*
  %19 = load <4 x i32>, <4 x i32>* %18, align 16, !tbaa !2
  %20 = getelementptr inbounds [320000 x i32], [320000 x i32]* %3, i64 0, i64 %13
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 16, !tbaa !2
  %23 = getelementptr inbounds i32, i32* %20, i64 4
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 16, !tbaa !2
  %26 = mul nsw <4 x i32> %22, %16
  %27 = mul nsw <4 x i32> %25, %19
  %28 = getelementptr inbounds [320000 x i32], [320000 x i32]* %1, i64 0, i64 %13
  %29 = bitcast i32* %28 to <4 x i32>*
  %30 = load <4 x i32>, <4 x i32>* %29, align 16, !tbaa !2
  %31 = getelementptr inbounds i32, i32* %28, i64 4
  %32 = bitcast i32* %31 to <4 x i32>*
  %33 = load <4 x i32>, <4 x i32>* %32, align 16, !tbaa !2
  %34 = add nsw <4 x i32> %26, %30
  %35 = add nsw <4 x i32> %27, %33
  %36 = bitcast i32* %28 to <4 x i32>*
  store <4 x i32> %34, <4 x i32>* %36, align 16, !tbaa !2
  %37 = bitcast i32* %31 to <4 x i32>*
  store <4 x i32> %35, <4 x i32>* %37, align 16, !tbaa !2
  %38 = or i64 %13, 8
  %39 = getelementptr inbounds [320000 x i32], [320000 x i32]* %2, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 16, !tbaa !2
  %42 = getelementptr inbounds i32, i32* %39, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  %44 = load <4 x i32>, <4 x i32>* %43, align 16, !tbaa !2
  %45 = getelementptr inbounds [320000 x i32], [320000 x i32]* %3, i64 0, i64 %38
  %46 = bitcast i32* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 16, !tbaa !2
  %48 = getelementptr inbounds i32, i32* %45, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 16, !tbaa !2
  %51 = mul nsw <4 x i32> %47, %41
  %52 = mul nsw <4 x i32> %50, %44
  %53 = getelementptr inbounds [320000 x i32], [320000 x i32]* %1, i64 0, i64 %38
  %54 = bitcast i32* %53 to <4 x i32>*
  %55 = load <4 x i32>, <4 x i32>* %54, align 16, !tbaa !2
  %56 = getelementptr inbounds i32, i32* %53, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 16, !tbaa !2
  %59 = add nsw <4 x i32> %51, %55
  %60 = add nsw <4 x i32> %52, %58
  %61 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %59, <4 x i32>* %61, align 16, !tbaa !2
  %62 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %60, <4 x i32>* %62, align 16, !tbaa !2
  %63 = add nuw nsw i64 %13, 16
  %64 = icmp eq i64 %63, 160000
  br i1 %64, label %73, label %12, !llvm.loop !6

65:                                               ; preds = %102
  %66 = tail call i64 @clock() #5
  %67 = sub nsw i64 %66, %9
  %68 = sitofp i64 %67 to double
  %69 = fdiv double %68, 1.000000e+06
  %70 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), double %69)
  %71 = getelementptr inbounds [320000 x i32], [320000 x i32]* %1, i64 0, i64 319999
  %72 = load i32, i32* %71, align 4, !tbaa !2
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %5) #5
  ret i32 %72

73:                                               ; preds = %12, %73
  %74 = phi i64 [ %100, %73 ], [ 0, %12 ]
  %75 = add i64 %74, 160000
  %76 = getelementptr inbounds [320000 x i32], [320000 x i32]* %2, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 16, !tbaa !2
  %79 = getelementptr inbounds i32, i32* %76, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 16, !tbaa !2
  %82 = getelementptr inbounds [320000 x i32], [320000 x i32]* %4, i64 0, i64 %75
  %83 = bitcast i32* %82 to <4 x i32>*
  %84 = load <4 x i32>, <4 x i32>* %83, align 16, !tbaa !2
  %85 = getelementptr inbounds i32, i32* %82, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  %87 = load <4 x i32>, <4 x i32>* %86, align 16, !tbaa !2
  %88 = mul nsw <4 x i32> %84, %78
  %89 = mul nsw <4 x i32> %87, %81
  %90 = getelementptr inbounds [320000 x i32], [320000 x i32]* %1, i64 0, i64 %75
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 16, !tbaa !2
  %93 = getelementptr inbounds i32, i32* %90, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  %95 = load <4 x i32>, <4 x i32>* %94, align 16, !tbaa !2
  %96 = add nsw <4 x i32> %88, %92
  %97 = add nsw <4 x i32> %89, %95
  %98 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %98, align 16, !tbaa !2
  %99 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %99, align 16, !tbaa !2
  %100 = add i64 %74, 8
  %101 = icmp eq i64 %100, 160000
  br i1 %101, label %102, label %73, !llvm.loop !8

102:                                              ; preds = %73
  %103 = add nuw nsw i32 %11, 1
  %104 = icmp eq i32 %103, 100000
  br i1 %104, label %65, label %10
}

; Function Attrs: nounwind uwtable
define dso_local i32 @test2() local_unnamed_addr #0 {
  %1 = alloca [320000 x float], align 16
  %2 = alloca [320000 x float], align 16
  %3 = bitcast [320000 x float]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %3) #5
  %4 = bitcast [320000 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %4) #5
  %5 = tail call i64 @clock() #5
  br label %6

6:                                                ; preds = %17, %0
  %7 = phi i32 [ 0, %0 ], [ %18, %17 ]
  br label %20

8:                                                ; preds = %17
  %9 = tail call i64 @clock() #5
  %10 = sub nsw i64 %9, %5
  %11 = sitofp i64 %10 to double
  %12 = fdiv double %11, 1.000000e+06
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), double %12)
  %14 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 319999
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = fptosi float %15 to i32
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %3) #5
  ret i32 %16

17:                                               ; preds = %20
  %18 = add nuw nsw i32 %7, 1
  %19 = icmp eq i32 %18, 100000
  br i1 %19, label %8, label %6

20:                                               ; preds = %20, %6
  %21 = phi i64 [ 0, %6 ], [ %38, %20 ]
  %22 = phi float [ 0.000000e+00, %6 ], [ %31, %20 ]
  %23 = fadd float %22, 2.000000e+00
  %24 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 %21
  %25 = load float, float* %24, align 8, !tbaa !9
  %26 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 %21
  %27 = load float, float* %26, align 8, !tbaa !9
  %28 = fmul float %23, %27
  %29 = fadd float %25, %28
  store float %29, float* %24, align 8, !tbaa !9
  %30 = or i64 %21, 1
  %31 = fadd float %23, 2.000000e+00
  %32 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 %30
  %33 = load float, float* %32, align 4, !tbaa !9
  %34 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 %30
  %35 = load float, float* %34, align 4, !tbaa !9
  %36 = fmul float %31, %35
  %37 = fadd float %33, %36
  store float %37, float* %32, align 4, !tbaa !9
  %38 = add nuw nsw i64 %21, 2
  %39 = icmp eq i64 %38, 320000
  br i1 %39, label %17, label %20
}

; Function Attrs: nounwind uwtable
define dso_local i32 @test2p() local_unnamed_addr #0 {
  %1 = alloca [320000 x float], align 16
  %2 = alloca [320000 x float], align 16
  %3 = bitcast [320000 x float]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %3) #5
  %4 = bitcast [320000 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %4) #5
  %5 = tail call i64 @clock() #5
  br label %6

6:                                                ; preds = %0, %49
  %7 = phi i32 [ 0, %0 ], [ %50, %49 ]
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %37, %8 ]
  %10 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6 ], [ %38, %8 ]
  %11 = trunc <4 x i64> %10 to <4 x i32>
  %12 = trunc <4 x i64> %10 to <4 x i32>
  %13 = shl <4 x i32> %11, <i32 1, i32 1, i32 1, i32 1>
  %14 = add <4 x i32> %13, <i32 2, i32 2, i32 2, i32 2>
  %15 = shl <4 x i32> %12, <i32 1, i32 1, i32 1, i32 1>
  %16 = add <4 x i32> %15, <i32 10, i32 10, i32 10, i32 10>
  %17 = sitofp <4 x i32> %14 to <4 x float>
  %18 = sitofp <4 x i32> %16 to <4 x float>
  %19 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 %9
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !9
  %22 = getelementptr inbounds float, float* %19, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !9
  %25 = fmul <4 x float> %21, %17
  %26 = fmul <4 x float> %24, %18
  %27 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 %9
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !9
  %30 = getelementptr inbounds float, float* %27, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !9
  %33 = fadd <4 x float> %25, %29
  %34 = fadd <4 x float> %26, %32
  %35 = bitcast float* %27 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 16, !tbaa !9
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 16, !tbaa !9
  %37 = add i64 %9, 8
  %38 = add <4 x i64> %10, <i64 8, i64 8, i64 8, i64 8>
  %39 = icmp eq i64 %37, 320000
  br i1 %39, label %49, label %8, !llvm.loop !11

40:                                               ; preds = %49
  %41 = tail call i64 @clock() #5
  %42 = sub nsw i64 %41, %5
  %43 = sitofp i64 %42 to double
  %44 = fdiv double %43, 1.000000e+06
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), double %44)
  %46 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 319999
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = fptosi float %47 to i32
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %3) #5
  ret i32 %48

49:                                               ; preds = %8
  %50 = add nuw nsw i32 %7, 1
  %51 = icmp eq i32 %50, 100000
  br i1 %51, label %40, label %6
}

; Function Attrs: nounwind uwtable
define dso_local i32 @test2pp() local_unnamed_addr #0 {
  %1 = alloca [320000 x float], align 16
  %2 = alloca [320000 x float], align 16
  %3 = bitcast [320000 x float]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %3) #5
  %4 = bitcast [320000 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %4) #5
  %5 = tail call i64 @clock() #5
  br label %6

6:                                                ; preds = %0, %49
  %7 = phi i32 [ 0, %0 ], [ %50, %49 ]
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %37, %8 ]
  %10 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6 ], [ %38, %8 ]
  %11 = trunc <4 x i64> %10 to <4 x i32>
  %12 = trunc <4 x i64> %10 to <4 x i32>
  %13 = shl <4 x i32> %11, <i32 1, i32 1, i32 1, i32 1>
  %14 = add <4 x i32> %13, <i32 2, i32 2, i32 2, i32 2>
  %15 = shl <4 x i32> %12, <i32 1, i32 1, i32 1, i32 1>
  %16 = add <4 x i32> %15, <i32 10, i32 10, i32 10, i32 10>
  %17 = sitofp <4 x i32> %14 to <4 x float>
  %18 = sitofp <4 x i32> %16 to <4 x float>
  %19 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 %9
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 16, !tbaa !9
  %22 = getelementptr inbounds float, float* %19, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16, !tbaa !9
  %25 = fmul <4 x float> %21, %17
  %26 = fmul <4 x float> %24, %18
  %27 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 %9
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16, !tbaa !9
  %30 = getelementptr inbounds float, float* %27, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 16, !tbaa !9
  %33 = fadd <4 x float> %25, %29
  %34 = fadd <4 x float> %26, %32
  %35 = bitcast float* %27 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 16, !tbaa !9
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 16, !tbaa !9
  %37 = add i64 %9, 8
  %38 = add <4 x i64> %10, <i64 8, i64 8, i64 8, i64 8>
  %39 = icmp eq i64 %37, 320000
  br i1 %39, label %49, label %8, !llvm.loop !12

40:                                               ; preds = %49
  %41 = tail call i64 @clock() #5
  %42 = sub nsw i64 %41, %5
  %43 = sitofp i64 %42 to double
  %44 = fdiv double %43, 1.000000e+06
  %45 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), double %44)
  %46 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 319999
  %47 = load float, float* %46, align 4, !tbaa !9
  %48 = fptosi float %47 to i32
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %3) #5
  ret i32 %48

49:                                               ; preds = %8
  %50 = add nuw nsw i32 %7, 1
  %51 = icmp eq i32 %50, 100000
  br i1 %51, label %40, label %6
}

; Function Attrs: nounwind readnone uwtable
define dso_local i32 @func1() local_unnamed_addr #4 {
  %1 = alloca [320000 x float], align 16
  %2 = alloca [320000 x float], align 16
  %3 = bitcast [320000 x float]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %3) #5
  %4 = bitcast [320000 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %4) #5
  br label %5

5:                                                ; preds = %16, %0
  %6 = phi i64 [ 0, %0 ], [ %17, %16 ]
  %7 = or i64 %6, 4
  %8 = icmp eq i64 %7, 159996
  br i1 %8, label %9, label %16, !llvm.loop !13

9:                                                ; preds = %5
  %10 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 319999
  %11 = load float, float* %10, align 4, !tbaa !9
  %12 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 319999
  %13 = load float, float* %12, align 4, !tbaa !9
  %14 = fadd float %11, %13
  %15 = fptosi float %14 to i32
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %3) #5
  ret i32 %15

16:                                               ; preds = %5
  %17 = add nuw nsw i64 %6, 8
  br label %5
}

; Function Attrs: nounwind readnone uwtable
define dso_local i32 @func2() local_unnamed_addr #4 {
  %1 = alloca [320000 x float], align 16
  %2 = alloca [320000 x float], align 16
  %3 = bitcast [320000 x float]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %3) #5
  %4 = bitcast [320000 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %4) #5
  br label %5

5:                                                ; preds = %5, %0
  %6 = phi i64 [ 0, %0 ], [ %7, %5 ]
  %7 = add i64 %6, 4
  %8 = icmp eq i64 %7, 159996
  br i1 %8, label %9, label %5, !llvm.loop !14

9:                                                ; preds = %5, %9
  %10 = phi i64 [ %11, %9 ], [ 0, %5 ]
  %11 = add i64 %10, 4
  %12 = icmp eq i64 %11, 159996
  br i1 %12, label %13, label %9, !llvm.loop !15

13:                                               ; preds = %9
  %14 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 319999
  %15 = load float, float* %14, align 4, !tbaa !9
  %16 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 319999
  %17 = load float, float* %16, align 4, !tbaa !9
  %18 = fadd float %15, %17
  %19 = fptosi float %18 to i32
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %3) #5
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca [320000 x float], align 16
  %2 = alloca [320000 x float], align 16
  %3 = alloca [320000 x i32], align 16
  %4 = alloca [320000 x i32], align 16
  %5 = alloca [320000 x i32], align 16
  %6 = alloca [320000 x i32], align 16
  %7 = bitcast [320000 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %7) #5
  %8 = bitcast [320000 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %8) #5
  %9 = bitcast [320000 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %9) #5
  %10 = bitcast [320000 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %10) #5
  %11 = tail call i64 @clock() #5
  br label %12

12:                                               ; preds = %14, %0
  %13 = phi i32 [ 0, %0 ], [ %15, %14 ]
  br label %17

14:                                               ; preds = %17
  %15 = add nuw nsw i32 %13, 1
  %16 = icmp eq i32 %15, 100000
  br i1 %16, label %42, label %12

17:                                               ; preds = %17, %12
  %18 = phi i64 [ 0, %12 ], [ %40, %17 ]
  %19 = icmp ult i64 %18, 160000
  %20 = getelementptr inbounds [320000 x i32], [320000 x i32]* %3, i64 0, i64 %18
  %21 = load i32, i32* %20, align 8, !tbaa !2
  %22 = getelementptr inbounds [320000 x i32], [320000 x i32]* %4, i64 0, i64 %18
  %23 = load i32, i32* %22, align 8, !tbaa !2
  %24 = select i1 %19, [320000 x i32]* %5, [320000 x i32]* %6
  %25 = getelementptr inbounds [320000 x i32], [320000 x i32]* %24, i64 0, i64 %18
  %26 = load i32, i32* %25, align 8, !tbaa !2
  %27 = mul nsw i32 %26, %23
  %28 = add nsw i32 %27, %21
  store i32 %28, i32* %20, align 8, !tbaa !2
  %29 = or i64 %18, 1
  %30 = icmp ult i64 %18, 159999
  %31 = getelementptr inbounds [320000 x i32], [320000 x i32]* %3, i64 0, i64 %29
  %32 = load i32, i32* %31, align 4, !tbaa !2
  %33 = getelementptr inbounds [320000 x i32], [320000 x i32]* %4, i64 0, i64 %29
  %34 = load i32, i32* %33, align 4, !tbaa !2
  %35 = select i1 %30, [320000 x i32]* %5, [320000 x i32]* %6
  %36 = getelementptr inbounds [320000 x i32], [320000 x i32]* %35, i64 0, i64 %29
  %37 = load i32, i32* %36, align 4, !tbaa !2
  %38 = mul nsw i32 %37, %34
  %39 = add nsw i32 %38, %32
  store i32 %39, i32* %31, align 4, !tbaa !2
  %40 = add nuw nsw i64 %18, 2
  %41 = icmp eq i64 %40, 320000
  br i1 %41, label %14, label %17

42:                                               ; preds = %14
  %43 = tail call i64 @clock() #5
  %44 = sub nsw i64 %43, %11
  %45 = sitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+06
  %47 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), double %46) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %7) #5
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %7) #5
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %8) #5
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %9) #5
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %10) #5
  %48 = tail call i64 @clock() #5
  br label %49

49:                                               ; preds = %42, %133
  %50 = phi i32 [ 0, %42 ], [ %134, %133 ]
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %102, %51 ]
  %53 = getelementptr inbounds [320000 x i32], [320000 x i32]* %4, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  %55 = load <4 x i32>, <4 x i32>* %54, align 16, !tbaa !2
  %56 = getelementptr inbounds i32, i32* %53, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 16, !tbaa !2
  %59 = getelementptr inbounds [320000 x i32], [320000 x i32]* %5, i64 0, i64 %52
  %60 = bitcast i32* %59 to <4 x i32>*
  %61 = load <4 x i32>, <4 x i32>* %60, align 16, !tbaa !2
  %62 = getelementptr inbounds i32, i32* %59, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 16, !tbaa !2
  %65 = mul nsw <4 x i32> %61, %55
  %66 = mul nsw <4 x i32> %64, %58
  %67 = getelementptr inbounds [320000 x i32], [320000 x i32]* %3, i64 0, i64 %52
  %68 = bitcast i32* %67 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 16, !tbaa !2
  %70 = getelementptr inbounds i32, i32* %67, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  %72 = load <4 x i32>, <4 x i32>* %71, align 16, !tbaa !2
  %73 = add nsw <4 x i32> %65, %69
  %74 = add nsw <4 x i32> %66, %72
  %75 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> %73, <4 x i32>* %75, align 16, !tbaa !2
  %76 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %76, align 16, !tbaa !2
  %77 = or i64 %52, 8
  %78 = getelementptr inbounds [320000 x i32], [320000 x i32]* %4, i64 0, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 16, !tbaa !2
  %81 = getelementptr inbounds i32, i32* %78, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 16, !tbaa !2
  %84 = getelementptr inbounds [320000 x i32], [320000 x i32]* %5, i64 0, i64 %77
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 16, !tbaa !2
  %87 = getelementptr inbounds i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 16, !tbaa !2
  %90 = mul nsw <4 x i32> %86, %80
  %91 = mul nsw <4 x i32> %89, %83
  %92 = getelementptr inbounds [320000 x i32], [320000 x i32]* %3, i64 0, i64 %77
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 16, !tbaa !2
  %95 = getelementptr inbounds i32, i32* %92, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 16, !tbaa !2
  %98 = add nsw <4 x i32> %90, %94
  %99 = add nsw <4 x i32> %91, %97
  %100 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> %98, <4 x i32>* %100, align 16, !tbaa !2
  %101 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %101, align 16, !tbaa !2
  %102 = add nuw nsw i64 %52, 16
  %103 = icmp eq i64 %102, 160000
  br i1 %103, label %104, label %51, !llvm.loop !16

104:                                              ; preds = %51, %104
  %105 = phi i64 [ %131, %104 ], [ 0, %51 ]
  %106 = add i64 %105, 160000
  %107 = getelementptr inbounds [320000 x i32], [320000 x i32]* %4, i64 0, i64 %106
  %108 = bitcast i32* %107 to <4 x i32>*
  %109 = load <4 x i32>, <4 x i32>* %108, align 16, !tbaa !2
  %110 = getelementptr inbounds i32, i32* %107, i64 4
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 16, !tbaa !2
  %113 = getelementptr inbounds [320000 x i32], [320000 x i32]* %6, i64 0, i64 %106
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 16, !tbaa !2
  %116 = getelementptr inbounds i32, i32* %113, i64 4
  %117 = bitcast i32* %116 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 16, !tbaa !2
  %119 = mul nsw <4 x i32> %115, %109
  %120 = mul nsw <4 x i32> %118, %112
  %121 = getelementptr inbounds [320000 x i32], [320000 x i32]* %3, i64 0, i64 %106
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 16, !tbaa !2
  %124 = getelementptr inbounds i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 16, !tbaa !2
  %127 = add nsw <4 x i32> %119, %123
  %128 = add nsw <4 x i32> %120, %126
  %129 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %129, align 16, !tbaa !2
  %130 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %128, <4 x i32>* %130, align 16, !tbaa !2
  %131 = add i64 %105, 8
  %132 = icmp eq i64 %131, 160000
  br i1 %132, label %133, label %104, !llvm.loop !17

133:                                              ; preds = %104
  %134 = add nuw nsw i32 %50, 1
  %135 = icmp eq i32 %134, 100000
  br i1 %135, label %136, label %49

136:                                              ; preds = %133
  %137 = tail call i64 @clock() #5
  %138 = sub nsw i64 %137, %48
  %139 = sitofp i64 %138 to double
  %140 = fdiv double %139, 1.000000e+06
  %141 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), double %140) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %7) #5
  %142 = bitcast [320000 x float]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %142) #5
  %143 = bitcast [320000 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %143) #5
  %144 = tail call i64 @clock() #5
  br label %145

145:                                              ; preds = %147, %136
  %146 = phi i32 [ 0, %136 ], [ %148, %147 ]
  br label %150

147:                                              ; preds = %150
  %148 = add nuw nsw i32 %146, 1
  %149 = icmp eq i32 %148, 100000
  br i1 %149, label %170, label %145

150:                                              ; preds = %150, %145
  %151 = phi i64 [ 0, %145 ], [ %168, %150 ]
  %152 = phi float [ 0.000000e+00, %145 ], [ %161, %150 ]
  %153 = fadd float %152, 2.000000e+00
  %154 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 %151
  %155 = load float, float* %154, align 8, !tbaa !9
  %156 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 %151
  %157 = load float, float* %156, align 8, !tbaa !9
  %158 = fmul float %153, %157
  %159 = fadd float %155, %158
  store float %159, float* %154, align 8, !tbaa !9
  %160 = or i64 %151, 1
  %161 = fadd float %153, 2.000000e+00
  %162 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 %160
  %163 = load float, float* %162, align 4, !tbaa !9
  %164 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 %160
  %165 = load float, float* %164, align 4, !tbaa !9
  %166 = fmul float %161, %165
  %167 = fadd float %163, %166
  store float %167, float* %162, align 4, !tbaa !9
  %168 = add nuw nsw i64 %151, 2
  %169 = icmp eq i64 %168, 320000
  br i1 %169, label %147, label %150

170:                                              ; preds = %147
  %171 = tail call i64 @clock() #5
  %172 = sub nsw i64 %171, %144
  %173 = sitofp i64 %172 to double
  %174 = fdiv double %173, 1.000000e+06
  %175 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), double %174) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %143) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %142) #5
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %142) #5
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %143) #5
  %176 = tail call i64 @clock() #5
  br label %177

177:                                              ; preds = %170, %211
  %178 = phi i32 [ 0, %170 ], [ %212, %211 ]
  br label %179

179:                                              ; preds = %179, %177
  %180 = phi i64 [ 0, %177 ], [ %208, %179 ]
  %181 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %177 ], [ %209, %179 ]
  %182 = trunc <4 x i64> %181 to <4 x i32>
  %183 = trunc <4 x i64> %181 to <4 x i32>
  %184 = shl <4 x i32> %182, <i32 1, i32 1, i32 1, i32 1>
  %185 = add <4 x i32> %184, <i32 2, i32 2, i32 2, i32 2>
  %186 = shl <4 x i32> %183, <i32 1, i32 1, i32 1, i32 1>
  %187 = add <4 x i32> %186, <i32 10, i32 10, i32 10, i32 10>
  %188 = sitofp <4 x i32> %185 to <4 x float>
  %189 = sitofp <4 x i32> %187 to <4 x float>
  %190 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 %180
  %191 = bitcast float* %190 to <4 x float>*
  %192 = load <4 x float>, <4 x float>* %191, align 16, !tbaa !9
  %193 = getelementptr inbounds float, float* %190, i64 4
  %194 = bitcast float* %193 to <4 x float>*
  %195 = load <4 x float>, <4 x float>* %194, align 16, !tbaa !9
  %196 = fmul <4 x float> %192, %188
  %197 = fmul <4 x float> %195, %189
  %198 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 %180
  %199 = bitcast float* %198 to <4 x float>*
  %200 = load <4 x float>, <4 x float>* %199, align 16, !tbaa !9
  %201 = getelementptr inbounds float, float* %198, i64 4
  %202 = bitcast float* %201 to <4 x float>*
  %203 = load <4 x float>, <4 x float>* %202, align 16, !tbaa !9
  %204 = fadd <4 x float> %200, %196
  %205 = fadd <4 x float> %203, %197
  %206 = bitcast float* %198 to <4 x float>*
  store <4 x float> %204, <4 x float>* %206, align 16, !tbaa !9
  %207 = bitcast float* %201 to <4 x float>*
  store <4 x float> %205, <4 x float>* %207, align 16, !tbaa !9
  %208 = add i64 %180, 8
  %209 = add <4 x i64> %181, <i64 8, i64 8, i64 8, i64 8>
  %210 = icmp eq i64 %208, 320000
  br i1 %210, label %211, label %179, !llvm.loop !18

211:                                              ; preds = %179
  %212 = add nuw nsw i32 %178, 1
  %213 = icmp eq i32 %212, 100000
  br i1 %213, label %214, label %177

214:                                              ; preds = %211
  %215 = tail call i64 @clock() #5
  %216 = sub nsw i64 %215, %176
  %217 = sitofp i64 %216 to double
  %218 = fdiv double %217, 1.000000e+06
  %219 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), double %218) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %143) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %142) #5
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %142) #5
  call void @llvm.lifetime.start.p0i8(i64 1280000, i8* nonnull %143) #5
  %220 = tail call i64 @clock() #5
  br label %221

221:                                              ; preds = %214, %255
  %222 = phi i32 [ 0, %214 ], [ %256, %255 ]
  br label %223

223:                                              ; preds = %223, %221
  %224 = phi i64 [ 0, %221 ], [ %252, %223 ]
  %225 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %221 ], [ %253, %223 ]
  %226 = trunc <4 x i64> %225 to <4 x i32>
  %227 = trunc <4 x i64> %225 to <4 x i32>
  %228 = shl <4 x i32> %226, <i32 1, i32 1, i32 1, i32 1>
  %229 = add <4 x i32> %228, <i32 2, i32 2, i32 2, i32 2>
  %230 = shl <4 x i32> %227, <i32 1, i32 1, i32 1, i32 1>
  %231 = add <4 x i32> %230, <i32 10, i32 10, i32 10, i32 10>
  %232 = sitofp <4 x i32> %229 to <4 x float>
  %233 = sitofp <4 x i32> %231 to <4 x float>
  %234 = getelementptr inbounds [320000 x float], [320000 x float]* %2, i64 0, i64 %224
  %235 = bitcast float* %234 to <4 x float>*
  %236 = load <4 x float>, <4 x float>* %235, align 16, !tbaa !9
  %237 = getelementptr inbounds float, float* %234, i64 4
  %238 = bitcast float* %237 to <4 x float>*
  %239 = load <4 x float>, <4 x float>* %238, align 16, !tbaa !9
  %240 = fmul <4 x float> %236, %232
  %241 = fmul <4 x float> %239, %233
  %242 = getelementptr inbounds [320000 x float], [320000 x float]* %1, i64 0, i64 %224
  %243 = bitcast float* %242 to <4 x float>*
  %244 = load <4 x float>, <4 x float>* %243, align 16, !tbaa !9
  %245 = getelementptr inbounds float, float* %242, i64 4
  %246 = bitcast float* %245 to <4 x float>*
  %247 = load <4 x float>, <4 x float>* %246, align 16, !tbaa !9
  %248 = fadd <4 x float> %244, %240
  %249 = fadd <4 x float> %247, %241
  %250 = bitcast float* %242 to <4 x float>*
  store <4 x float> %248, <4 x float>* %250, align 16, !tbaa !9
  %251 = bitcast float* %245 to <4 x float>*
  store <4 x float> %249, <4 x float>* %251, align 16, !tbaa !9
  %252 = add i64 %224, 8
  %253 = add <4 x i64> %225, <i64 8, i64 8, i64 8, i64 8>
  %254 = icmp eq i64 %252, 320000
  br i1 %254, label %255, label %223, !llvm.loop !19

255:                                              ; preds = %223
  %256 = add nuw nsw i32 %222, 1
  %257 = icmp eq i32 %256, 100000
  br i1 %257, label %258, label %221

258:                                              ; preds = %255
  %259 = tail call i64 @clock() #5
  %260 = sub nsw i64 %259, %220
  %261 = sitofp i64 %260 to double
  %262 = fdiv double %261, 1.000000e+06
  %263 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), double %262) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %143) #5
  call void @llvm.lifetime.end.p0i8(i64 1280000, i8* nonnull %142) #5
  ret i32 0
}

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !7}
!9 = !{!10, !10, i64 0}
!10 = !{!"float", !4, i64 0}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !7}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !7}
